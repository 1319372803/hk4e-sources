// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define.proto

#ifndef PROTOBUF_define_2eproto__INCLUDED
#define PROTOBUF_define_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class AbilityAppliedAbility;
class AbilityAppliedAbilityDefaultTypeInternal;
extern AbilityAppliedAbilityDefaultTypeInternal _AbilityAppliedAbility_default_instance_;
class AbilityAppliedModifier;
class AbilityAppliedModifierDefaultTypeInternal;
extern AbilityAppliedModifierDefaultTypeInternal _AbilityAppliedModifier_default_instance_;
class AbilityAttachedModifier;
class AbilityAttachedModifierDefaultTypeInternal;
extern AbilityAttachedModifierDefaultTypeInternal _AbilityAttachedModifier_default_instance_;
class AbilityControlBlock;
class AbilityControlBlockDefaultTypeInternal;
extern AbilityControlBlockDefaultTypeInternal _AbilityControlBlock_default_instance_;
class AbilityEmbryo;
class AbilityEmbryoDefaultTypeInternal;
extern AbilityEmbryoDefaultTypeInternal _AbilityEmbryo_default_instance_;
class AbilityFloatValue;
class AbilityFloatValueDefaultTypeInternal;
extern AbilityFloatValueDefaultTypeInternal _AbilityFloatValue_default_instance_;
class AbilityGadgetInfo;
class AbilityGadgetInfoDefaultTypeInternal;
extern AbilityGadgetInfoDefaultTypeInternal _AbilityGadgetInfo_default_instance_;
class AbilityMixinRecoverInfo;
class AbilityMixinRecoverInfoDefaultTypeInternal;
extern AbilityMixinRecoverInfoDefaultTypeInternal _AbilityMixinRecoverInfo_default_instance_;
class AbilityScalarValueEntry;
class AbilityScalarValueEntryDefaultTypeInternal;
extern AbilityScalarValueEntryDefaultTypeInternal _AbilityScalarValueEntry_default_instance_;
class AbilityString;
class AbilityStringDefaultTypeInternal;
extern AbilityStringDefaultTypeInternal _AbilityString_default_instance_;
class AbilitySyncStateInfo;
class AbilitySyncStateInfoDefaultTypeInternal;
extern AbilitySyncStateInfoDefaultTypeInternal _AbilitySyncStateInfo_default_instance_;
class ActivityDungeonAvatar;
class ActivityDungeonAvatarDefaultTypeInternal;
extern ActivityDungeonAvatarDefaultTypeInternal _ActivityDungeonAvatar_default_instance_;
class AnimatorParameterValueInfo;
class AnimatorParameterValueInfoDefaultTypeInternal;
extern AnimatorParameterValueInfoDefaultTypeInternal _AnimatorParameterValueInfo_default_instance_;
class AnimatorParameterValueInfoPair;
class AnimatorParameterValueInfoPairDefaultTypeInternal;
extern AnimatorParameterValueInfoPairDefaultTypeInternal _AnimatorParameterValueInfoPair_default_instance_;
class AvatarEquipAffixInfo;
class AvatarEquipAffixInfoDefaultTypeInternal;
extern AvatarEquipAffixInfoDefaultTypeInternal _AvatarEquipAffixInfo_default_instance_;
class AvatarExcelInfo;
class AvatarExcelInfoDefaultTypeInternal;
extern AvatarExcelInfoDefaultTypeInternal _AvatarExcelInfo_default_instance_;
class AvatarExpeditionInfo;
class AvatarExpeditionInfoDefaultTypeInternal;
extern AvatarExpeditionInfoDefaultTypeInternal _AvatarExpeditionInfo_default_instance_;
class AvatarFetterInfo;
class AvatarFetterInfoDefaultTypeInternal;
extern AvatarFetterInfoDefaultTypeInternal _AvatarFetterInfo_default_instance_;
class AvatarInfo;
class AvatarInfoDefaultTypeInternal;
extern AvatarInfoDefaultTypeInternal _AvatarInfo_default_instance_;
class AvatarInfo_FightPropMapEntry;
class AvatarInfo_FightPropMapEntryDefaultTypeInternal;
extern AvatarInfo_FightPropMapEntryDefaultTypeInternal _AvatarInfo_FightPropMapEntry_default_instance_;
class AvatarInfo_PropMapEntry;
class AvatarInfo_PropMapEntryDefaultTypeInternal;
extern AvatarInfo_PropMapEntryDefaultTypeInternal _AvatarInfo_PropMapEntry_default_instance_;
class AvatarInfo_ProudSkillExtraLevelMapEntry;
class AvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal;
extern AvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal _AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_;
class AvatarInfo_SkillLevelMapEntry;
class AvatarInfo_SkillLevelMapEntryDefaultTypeInternal;
extern AvatarInfo_SkillLevelMapEntryDefaultTypeInternal _AvatarInfo_SkillLevelMapEntry_default_instance_;
class AvatarInfo_SkillMapEntry;
class AvatarInfo_SkillMapEntryDefaultTypeInternal;
extern AvatarInfo_SkillMapEntryDefaultTypeInternal _AvatarInfo_SkillMapEntry_default_instance_;
class AvatarRenameAuditContent;
class AvatarRenameAuditContentDefaultTypeInternal;
extern AvatarRenameAuditContentDefaultTypeInternal _AvatarRenameAuditContent_default_instance_;
class AvatarRenameAuditData;
class AvatarRenameAuditDataDefaultTypeInternal;
extern AvatarRenameAuditDataDefaultTypeInternal _AvatarRenameAuditData_default_instance_;
class AvatarRenameContentAuditField;
class AvatarRenameContentAuditFieldDefaultTypeInternal;
extern AvatarRenameContentAuditFieldDefaultTypeInternal _AvatarRenameContentAuditField_default_instance_;
class AvatarSkillInfo;
class AvatarSkillInfoDefaultTypeInternal;
extern AvatarSkillInfoDefaultTypeInternal _AvatarSkillInfo_default_instance_;
class Birthday;
class BirthdayDefaultTypeInternal;
extern BirthdayDefaultTypeInternal _Birthday_default_instance_;
class BlockInfo;
class BlockInfoDefaultTypeInternal;
extern BlockInfoDefaultTypeInternal _BlockInfo_default_instance_;
class BlossomChestInfo;
class BlossomChestInfoDefaultTypeInternal;
extern BlossomChestInfoDefaultTypeInternal _BlossomChestInfo_default_instance_;
class BossChestInfo;
class BossChestInfoDefaultTypeInternal;
extern BossChestInfoDefaultTypeInternal _BossChestInfo_default_instance_;
class BossChestInfo_UidDiscountMapEntry;
class BossChestInfo_UidDiscountMapEntryDefaultTypeInternal;
extern BossChestInfo_UidDiscountMapEntryDefaultTypeInternal _BossChestInfo_UidDiscountMapEntry_default_instance_;
class BreakoutAction;
class BreakoutActionDefaultTypeInternal;
extern BreakoutActionDefaultTypeInternal _BreakoutAction_default_instance_;
class BreakoutBrickInfo;
class BreakoutBrickInfoDefaultTypeInternal;
extern BreakoutBrickInfoDefaultTypeInternal _BreakoutBrickInfo_default_instance_;
class BreakoutElementReactionCounter;
class BreakoutElementReactionCounterDefaultTypeInternal;
extern BreakoutElementReactionCounterDefaultTypeInternal _BreakoutElementReactionCounter_default_instance_;
class BreakoutPhysicalObject;
class BreakoutPhysicalObjectDefaultTypeInternal;
extern BreakoutPhysicalObjectDefaultTypeInternal _BreakoutPhysicalObject_default_instance_;
class BreakoutPhysicalObjectModifier;
class BreakoutPhysicalObjectModifierDefaultTypeInternal;
extern BreakoutPhysicalObjectModifierDefaultTypeInternal _BreakoutPhysicalObjectModifier_default_instance_;
class BreakoutSnapShot;
class BreakoutSnapShotDefaultTypeInternal;
extern BreakoutSnapShotDefaultTypeInternal _BreakoutSnapShot_default_instance_;
class BreakoutSpawnPoint;
class BreakoutSpawnPointDefaultTypeInternal;
extern BreakoutSpawnPointDefaultTypeInternal _BreakoutSpawnPoint_default_instance_;
class BreakoutSyncConnectUidInfo;
class BreakoutSyncConnectUidInfoDefaultTypeInternal;
extern BreakoutSyncConnectUidInfoDefaultTypeInternal _BreakoutSyncConnectUidInfo_default_instance_;
class BreakoutVector2;
class BreakoutVector2DefaultTypeInternal;
extern BreakoutVector2DefaultTypeInternal _BreakoutVector2_default_instance_;
class BuildingInfo;
class BuildingInfoDefaultTypeInternal;
extern BuildingInfoDefaultTypeInternal _BuildingInfo_default_instance_;
class ClientGadgetInfo;
class ClientGadgetInfoDefaultTypeInternal;
extern ClientGadgetInfoDefaultTypeInternal _ClientGadgetInfo_default_instance_;
class ClientMassiveEntity;
class ClientMassiveEntityDefaultTypeInternal;
extern ClientMassiveEntityDefaultTypeInternal _ClientMassiveEntity_default_instance_;
class CoinCollectOperatorInfo;
class CoinCollectOperatorInfoDefaultTypeInternal;
extern CoinCollectOperatorInfoDefaultTypeInternal _CoinCollectOperatorInfo_default_instance_;
class ContentAuditAuxiliaryField;
class ContentAuditAuxiliaryFieldDefaultTypeInternal;
extern ContentAuditAuxiliaryFieldDefaultTypeInternal _ContentAuditAuxiliaryField_default_instance_;
class ContentAuditData;
class ContentAuditDataDefaultTypeInternal;
extern ContentAuditDataDefaultTypeInternal _ContentAuditData_default_instance_;
class ContentAuditField;
class ContentAuditFieldDefaultTypeInternal;
extern ContentAuditFieldDefaultTypeInternal _ContentAuditField_default_instance_;
class ContentAuditInfo;
class ContentAuditInfoDefaultTypeInternal;
extern ContentAuditInfoDefaultTypeInternal _ContentAuditInfo_default_instance_;
class CreateEntityInfo;
class CreateEntityInfoDefaultTypeInternal;
extern CreateEntityInfoDefaultTypeInternal _CreateEntityInfo_default_instance_;
class CreateGadgetInfo;
class CreateGadgetInfoDefaultTypeInternal;
extern CreateGadgetInfoDefaultTypeInternal _CreateGadgetInfo_default_instance_;
class CreateGadgetInfo_Chest;
class CreateGadgetInfo_ChestDefaultTypeInternal;
extern CreateGadgetInfo_ChestDefaultTypeInternal _CreateGadgetInfo_Chest_default_instance_;
class CurVehicleInfo;
class CurVehicleInfoDefaultTypeInternal;
extern CurVehicleInfoDefaultTypeInternal _CurVehicleInfo_default_instance_;
class CustomCommonNodeInfo;
class CustomCommonNodeInfoDefaultTypeInternal;
extern CustomCommonNodeInfoDefaultTypeInternal _CustomCommonNodeInfo_default_instance_;
class CustomDungeonAbstractMuipData;
class CustomDungeonAbstractMuipDataDefaultTypeInternal;
extern CustomDungeonAbstractMuipDataDefaultTypeInternal _CustomDungeonAbstractMuipData_default_instance_;
class CustomDungeonAbstractMuipData_BrickStatisticsMapEntry;
class CustomDungeonAbstractMuipData_BrickStatisticsMapEntryDefaultTypeInternal;
extern CustomDungeonAbstractMuipData_BrickStatisticsMapEntryDefaultTypeInternal _CustomDungeonAbstractMuipData_BrickStatisticsMapEntry_default_instance_;
class CustomDungeonBatchBriefMuipData;
class CustomDungeonBatchBriefMuipDataDefaultTypeInternal;
extern CustomDungeonBatchBriefMuipDataDefaultTypeInternal _CustomDungeonBatchBriefMuipData_default_instance_;
class CustomDungeonBattleRecordMuipData;
class CustomDungeonBattleRecordMuipDataDefaultTypeInternal;
extern CustomDungeonBattleRecordMuipDataDefaultTypeInternal _CustomDungeonBattleRecordMuipData_default_instance_;
class CustomDungeonBriefMuipData;
class CustomDungeonBriefMuipDataDefaultTypeInternal;
extern CustomDungeonBriefMuipDataDefaultTypeInternal _CustomDungeonBriefMuipData_default_instance_;
class CustomDungeonSettingMuipData;
class CustomDungeonSettingMuipDataDefaultTypeInternal;
extern CustomDungeonSettingMuipDataDefaultTypeInternal _CustomDungeonSettingMuipData_default_instance_;
class CustomDungeonSocialMuipData;
class CustomDungeonSocialMuipDataDefaultTypeInternal;
extern CustomDungeonSocialMuipDataDefaultTypeInternal _CustomDungeonSocialMuipData_default_instance_;
class CustomGadgetTreeInfo;
class CustomGadgetTreeInfoDefaultTypeInternal;
extern CustomGadgetTreeInfoDefaultTypeInternal _CustomGadgetTreeInfo_default_instance_;
class DeshretObeliskGadgetInfo;
class DeshretObeliskGadgetInfoDefaultTypeInternal;
extern DeshretObeliskGadgetInfoDefaultTypeInternal _DeshretObeliskGadgetInfo_default_instance_;
class EchoShellInfo;
class EchoShellInfoDefaultTypeInternal;
extern EchoShellInfoDefaultTypeInternal _EchoShellInfo_default_instance_;
class EntityAuthorityInfo;
class EntityAuthorityInfoDefaultTypeInternal;
extern EntityAuthorityInfoDefaultTypeInternal _EntityAuthorityInfo_default_instance_;
class EntityClientData;
class EntityClientDataDefaultTypeInternal;
extern EntityClientDataDefaultTypeInternal _EntityClientData_default_instance_;
class EntityClientExtraInfo;
class EntityClientExtraInfoDefaultTypeInternal;
extern EntityClientExtraInfoDefaultTypeInternal _EntityClientExtraInfo_default_instance_;
class EntityEnvironmentInfo;
class EntityEnvironmentInfoDefaultTypeInternal;
extern EntityEnvironmentInfoDefaultTypeInternal _EntityEnvironmentInfo_default_instance_;
class EntityMoveInfo;
class EntityMoveInfoDefaultTypeInternal;
extern EntityMoveInfoDefaultTypeInternal _EntityMoveInfo_default_instance_;
class EntityRendererChangedInfo;
class EntityRendererChangedInfoDefaultTypeInternal;
extern EntityRendererChangedInfoDefaultTypeInternal _EntityRendererChangedInfo_default_instance_;
class EntityRendererChangedInfo_ChangedRenderersEntry;
class EntityRendererChangedInfo_ChangedRenderersEntryDefaultTypeInternal;
extern EntityRendererChangedInfo_ChangedRenderersEntryDefaultTypeInternal _EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_;
class Equip;
class EquipDefaultTypeInternal;
extern EquipDefaultTypeInternal _Equip_default_instance_;
class EquipParam;
class EquipParamDefaultTypeInternal;
extern EquipParamDefaultTypeInternal _EquipParam_default_instance_;
class EquipParamList;
class EquipParamListDefaultTypeInternal;
extern EquipParamListDefaultTypeInternal _EquipParamList_default_instance_;
class ExhibitionDisplayInfo;
class ExhibitionDisplayInfoDefaultTypeInternal;
extern ExhibitionDisplayInfoDefaultTypeInternal _ExhibitionDisplayInfo_default_instance_;
class FeatureBlockInfo;
class FeatureBlockInfoDefaultTypeInternal;
extern FeatureBlockInfoDefaultTypeInternal _FeatureBlockInfo_default_instance_;
class FetterData;
class FetterDataDefaultTypeInternal;
extern FetterDataDefaultTypeInternal _FetterData_default_instance_;
class FightPropPair;
class FightPropPairDefaultTypeInternal;
extern FightPropPairDefaultTypeInternal _FightPropPair_default_instance_;
class FishPoolInfo;
class FishPoolInfoDefaultTypeInternal;
extern FishPoolInfoDefaultTypeInternal _FishPoolInfo_default_instance_;
class FishtankFishInfo;
class FishtankFishInfoDefaultTypeInternal;
extern FishtankFishInfoDefaultTypeInternal _FishtankFishInfo_default_instance_;
class ForceUpdateInfo;
class ForceUpdateInfoDefaultTypeInternal;
extern ForceUpdateInfoDefaultTypeInternal _ForceUpdateInfo_default_instance_;
class FoundationInfo;
class FoundationInfoDefaultTypeInternal;
extern FoundationInfoDefaultTypeInternal _FoundationInfo_default_instance_;
class Furniture;
class FurnitureDefaultTypeInternal;
extern FurnitureDefaultTypeInternal _Furniture_default_instance_;
class GCGChallengeData;
class GCGChallengeDataDefaultTypeInternal;
extern GCGChallengeDataDefaultTypeInternal _GCGChallengeData_default_instance_;
class GCGDuelExtra;
class GCGDuelExtraDefaultTypeInternal;
extern GCGDuelExtraDefaultTypeInternal _GCGDuelExtra_default_instance_;
class GCGDuelExtra_CardFaceMapEntry;
class GCGDuelExtra_CardFaceMapEntryDefaultTypeInternal;
extern GCGDuelExtra_CardFaceMapEntryDefaultTypeInternal _GCGDuelExtra_CardFaceMapEntry_default_instance_;
class GadgetCrucibleInfo;
class GadgetCrucibleInfoDefaultTypeInternal;
extern GadgetCrucibleInfoDefaultTypeInternal _GadgetCrucibleInfo_default_instance_;
class GadgetGeneralRewardInfo;
class GadgetGeneralRewardInfoDefaultTypeInternal;
extern GadgetGeneralRewardInfoDefaultTypeInternal _GadgetGeneralRewardInfo_default_instance_;
class GadgetPlayInfo;
class GadgetPlayInfoDefaultTypeInternal;
extern GadgetPlayInfoDefaultTypeInternal _GadgetPlayInfo_default_instance_;
class GatherGadgetInfo;
class GatherGadgetInfoDefaultTypeInternal;
extern GatherGadgetInfoDefaultTypeInternal _GatherGadgetInfo_default_instance_;
class HashedString;
class HashedStringDefaultTypeInternal;
extern HashedStringDefaultTypeInternal _HashedString_default_instance_;
class HomeBlockArrangementMuipData;
class HomeBlockArrangementMuipDataDefaultTypeInternal;
extern HomeBlockArrangementMuipDataDefaultTypeInternal _HomeBlockArrangementMuipData_default_instance_;
class HomeBlueprintBatchBriefMuipData;
class HomeBlueprintBatchBriefMuipDataDefaultTypeInternal;
extern HomeBlueprintBatchBriefMuipDataDefaultTypeInternal _HomeBlueprintBatchBriefMuipData_default_instance_;
class HomeBlueprintBriefMuipData;
class HomeBlueprintBriefMuipDataDefaultTypeInternal;
extern HomeBlueprintBriefMuipDataDefaultTypeInternal _HomeBlueprintBriefMuipData_default_instance_;
class HomeFurnitureArrangementMuipData;
class HomeFurnitureArrangementMuipDataDefaultTypeInternal;
extern HomeFurnitureArrangementMuipDataDefaultTypeInternal _HomeFurnitureArrangementMuipData_default_instance_;
class HomeMarkPointFurnitureData;
class HomeMarkPointFurnitureDataDefaultTypeInternal;
extern HomeMarkPointFurnitureDataDefaultTypeInternal _HomeMarkPointFurnitureData_default_instance_;
class HomeMarkPointNPCData;
class HomeMarkPointNPCDataDefaultTypeInternal;
extern HomeMarkPointNPCDataDefaultTypeInternal _HomeMarkPointNPCData_default_instance_;
class HomeMarkPointSuiteData;
class HomeMarkPointSuiteDataDefaultTypeInternal;
extern HomeMarkPointSuiteDataDefaultTypeInternal _HomeMarkPointSuiteData_default_instance_;
class HomeSceneArrangementMuipData;
class HomeSceneArrangementMuipDataDefaultTypeInternal;
extern HomeSceneArrangementMuipDataDefaultTypeInternal _HomeSceneArrangementMuipData_default_instance_;
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class ItemParam;
class ItemParamDefaultTypeInternal;
extern ItemParamDefaultTypeInternal _ItemParam_default_instance_;
class MailData;
class MailDataDefaultTypeInternal;
extern MailDataDefaultTypeInternal _MailData_default_instance_;
class MailItem;
class MailItemDefaultTypeInternal;
extern MailItemDefaultTypeInternal _MailItem_default_instance_;
class MailTextContent;
class MailTextContentDefaultTypeInternal;
extern MailTextContentDefaultTypeInternal _MailTextContent_default_instance_;
class MapAreaInfo;
class MapAreaInfoDefaultTypeInternal;
extern MapAreaInfoDefaultTypeInternal _MapAreaInfo_default_instance_;
class MapMarkPoint;
class MapMarkPointDefaultTypeInternal;
extern MapMarkPointDefaultTypeInternal _MapMarkPoint_default_instance_;
class MapMarkTipsInfo;
class MapMarkTipsInfoDefaultTypeInternal;
extern MapMarkTipsInfoDefaultTypeInternal _MapMarkTipsInfo_default_instance_;
class MassiveBoxInfo;
class MassiveBoxInfoDefaultTypeInternal;
extern MassiveBoxInfoDefaultTypeInternal _MassiveBoxInfo_default_instance_;
class MassiveEntityState;
class MassiveEntityStateDefaultTypeInternal;
extern MassiveEntityStateDefaultTypeInternal _MassiveEntityState_default_instance_;
class MassiveGrassInfo;
class MassiveGrassInfoDefaultTypeInternal;
extern MassiveGrassInfoDefaultTypeInternal _MassiveGrassInfo_default_instance_;
class MassivePropParam;
class MassivePropParamDefaultTypeInternal;
extern MassivePropParamDefaultTypeInternal _MassivePropParam_default_instance_;
class MassivePropSyncInfo;
class MassivePropSyncInfoDefaultTypeInternal;
extern MassivePropSyncInfoDefaultTypeInternal _MassivePropSyncInfo_default_instance_;
class MassiveWaterInfo;
class MassiveWaterInfoDefaultTypeInternal;
extern MassiveWaterInfoDefaultTypeInternal _MassiveWaterInfo_default_instance_;
class Material;
class MaterialDefaultTypeInternal;
extern MaterialDefaultTypeInternal _Material_default_instance_;
class MaterialDeleteInfo;
class MaterialDeleteInfoDefaultTypeInternal;
extern MaterialDeleteInfoDefaultTypeInternal _MaterialDeleteInfo_default_instance_;
class MaterialDeleteInfo_CountDownDelete;
class MaterialDeleteInfo_CountDownDeleteDefaultTypeInternal;
extern MaterialDeleteInfo_CountDownDeleteDefaultTypeInternal _MaterialDeleteInfo_CountDownDelete_default_instance_;
class MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry;
class MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntryDefaultTypeInternal;
extern MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntryDefaultTypeInternal _MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_;
class MaterialDeleteInfo_DateTimeDelete;
class MaterialDeleteInfo_DateTimeDeleteDefaultTypeInternal;
extern MaterialDeleteInfo_DateTimeDeleteDefaultTypeInternal _MaterialDeleteInfo_DateTimeDelete_default_instance_;
class MaterialDeleteInfo_DelayWeekCountDownDelete;
class MaterialDeleteInfo_DelayWeekCountDownDeleteDefaultTypeInternal;
extern MaterialDeleteInfo_DelayWeekCountDownDeleteDefaultTypeInternal _MaterialDeleteInfo_DelayWeekCountDownDelete_default_instance_;
class MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry;
class MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntryDefaultTypeInternal;
extern MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntryDefaultTypeInternal _MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry_default_instance_;
class MathQuaternion;
class MathQuaternionDefaultTypeInternal;
extern MathQuaternionDefaultTypeInternal _MathQuaternion_default_instance_;
class ModifierDurability;
class ModifierDurabilityDefaultTypeInternal;
extern ModifierDurabilityDefaultTypeInternal _ModifierDurability_default_instance_;
class MonsterRoute;
class MonsterRouteDefaultTypeInternal;
extern MonsterRouteDefaultTypeInternal _MonsterRoute_default_instance_;
class MotionInfo;
class MotionInfoDefaultTypeInternal;
extern MotionInfoDefaultTypeInternal _MotionInfo_default_instance_;
class MpPlayRewardInfo;
class MpPlayRewardInfoDefaultTypeInternal;
extern MpPlayRewardInfoDefaultTypeInternal _MpPlayRewardInfo_default_instance_;
class NicknameSignatureAuditData;
class NicknameSignatureAuditDataDefaultTypeInternal;
extern NicknameSignatureAuditDataDefaultTypeInternal _NicknameSignatureAuditData_default_instance_;
class NightCrowGadgetInfo;
class NightCrowGadgetInfoDefaultTypeInternal;
extern NightCrowGadgetInfoDefaultTypeInternal _NightCrowGadgetInfo_default_instance_;
class NpcPositionInfo;
class NpcPositionInfoDefaultTypeInternal;
extern NpcPositionInfoDefaultTypeInternal _NpcPositionInfo_default_instance_;
class OfferingInfo;
class OfferingInfoDefaultTypeInternal;
extern OfferingInfoDefaultTypeInternal _OfferingInfo_default_instance_;
class OnlinePlayerInfo;
class OnlinePlayerInfoDefaultTypeInternal;
extern OnlinePlayerInfoDefaultTypeInternal _OnlinePlayerInfo_default_instance_;
class ParamList;
class ParamListDefaultTypeInternal;
extern ParamListDefaultTypeInternal _ParamList_default_instance_;
class PlaceInfo;
class PlaceInfoDefaultTypeInternal;
extern PlaceInfoDefaultTypeInternal _PlaceInfo_default_instance_;
class PlatformInfo;
class PlatformInfoDefaultTypeInternal;
extern PlatformInfoDefaultTypeInternal _PlatformInfo_default_instance_;
class PlayProduct;
class PlayProductDefaultTypeInternal;
extern PlayProductDefaultTypeInternal _PlayProduct_default_instance_;
class PlayTeamEntityInfo;
class PlayTeamEntityInfoDefaultTypeInternal;
extern PlayTeamEntityInfoDefaultTypeInternal _PlayTeamEntityInfo_default_instance_;
class PlayerCustomDungeonMuipData;
class PlayerCustomDungeonMuipDataDefaultTypeInternal;
extern PlayerCustomDungeonMuipDataDefaultTypeInternal _PlayerCustomDungeonMuipData_default_instance_;
class PlayerUidExtInfo;
class PlayerUidExtInfoDefaultTypeInternal;
extern PlayerUidExtInfoDefaultTypeInternal _PlayerUidExtInfo_default_instance_;
class ProfilePicture;
class ProfilePictureDefaultTypeInternal;
extern ProfilePictureDefaultTypeInternal _ProfilePicture_default_instance_;
class PropPair;
class PropPairDefaultTypeInternal;
extern PropPairDefaultTypeInternal _PropPair_default_instance_;
class PropValue;
class PropValueDefaultTypeInternal;
extern PropValueDefaultTypeInternal _PropValue_default_instance_;
class QueryCurrRegionHttpRsp;
class QueryCurrRegionHttpRspDefaultTypeInternal;
extern QueryCurrRegionHttpRspDefaultTypeInternal _QueryCurrRegionHttpRsp_default_instance_;
class QueryIpRegionData;
class QueryIpRegionDataDefaultTypeInternal;
extern QueryIpRegionDataDefaultTypeInternal _QueryIpRegionData_default_instance_;
class QueryRegionListHttpRsp;
class QueryRegionListHttpRspDefaultTypeInternal;
extern QueryRegionListHttpRspDefaultTypeInternal _QueryRegionListHttpRsp_default_instance_;
class Quest;
class QuestDefaultTypeInternal;
extern QuestDefaultTypeInternal _Quest_default_instance_;
class Quest_LackedNpcMapEntry;
class Quest_LackedNpcMapEntryDefaultTypeInternal;
extern Quest_LackedNpcMapEntryDefaultTypeInternal _Quest_LackedNpcMapEntry_default_instance_;
class Quest_LackedPlaceMapEntry;
class Quest_LackedPlaceMapEntryDefaultTypeInternal;
extern Quest_LackedPlaceMapEntryDefaultTypeInternal _Quest_LackedPlaceMapEntry_default_instance_;
class RedPointData;
class RedPointDataDefaultTypeInternal;
extern RedPointDataDefaultTypeInternal _RedPointData_default_instance_;
class RegionInfo;
class RegionInfoDefaultTypeInternal;
extern RegionInfoDefaultTypeInternal _RegionInfo_default_instance_;
class RegionSimpleInfo;
class RegionSimpleInfoDefaultTypeInternal;
extern RegionSimpleInfoDefaultTypeInternal _RegionSimpleInfo_default_instance_;
class Reliquary;
class ReliquaryDefaultTypeInternal;
extern ReliquaryDefaultTypeInternal _Reliquary_default_instance_;
class ResVersionConfig;
class ResVersionConfigDefaultTypeInternal;
extern ResVersionConfigDefaultTypeInternal _ResVersionConfig_default_instance_;
class Reward;
class RewardDefaultTypeInternal;
extern RewardDefaultTypeInternal _Reward_default_instance_;
class RoguelikeGadgetInfo;
class RoguelikeGadgetInfoDefaultTypeInternal;
extern RoguelikeGadgetInfoDefaultTypeInternal _RoguelikeGadgetInfo_default_instance_;
class Route;
class RouteDefaultTypeInternal;
extern RouteDefaultTypeInternal _Route_default_instance_;
class RoutePoint;
class RoutePointDefaultTypeInternal;
extern RoutePointDefaultTypeInternal _RoutePoint_default_instance_;
class SceneAvatarInfo;
class SceneAvatarInfoDefaultTypeInternal;
extern SceneAvatarInfoDefaultTypeInternal _SceneAvatarInfo_default_instance_;
class SceneAvatarInfo_ProudSkillExtraLevelMapEntry;
class SceneAvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal;
extern SceneAvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal _SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_;
class SceneAvatarInfo_SkillLevelMapEntry;
class SceneAvatarInfo_SkillLevelMapEntryDefaultTypeInternal;
extern SceneAvatarInfo_SkillLevelMapEntryDefaultTypeInternal _SceneAvatarInfo_SkillLevelMapEntry_default_instance_;
class SceneEntityAiInfo;
class SceneEntityAiInfoDefaultTypeInternal;
extern SceneEntityAiInfoDefaultTypeInternal _SceneEntityAiInfo_default_instance_;
class SceneEntityAiInfo_AiThreatMapEntry;
class SceneEntityAiInfo_AiThreatMapEntryDefaultTypeInternal;
extern SceneEntityAiInfo_AiThreatMapEntryDefaultTypeInternal _SceneEntityAiInfo_AiThreatMapEntry_default_instance_;
class SceneEntityAiInfo_SkillCdMapEntry;
class SceneEntityAiInfo_SkillCdMapEntryDefaultTypeInternal;
extern SceneEntityAiInfo_SkillCdMapEntryDefaultTypeInternal _SceneEntityAiInfo_SkillCdMapEntry_default_instance_;
class SceneEntityAiInfo_SkillGroupCdMapEntry;
class SceneEntityAiInfo_SkillGroupCdMapEntryDefaultTypeInternal;
extern SceneEntityAiInfo_SkillGroupCdMapEntryDefaultTypeInternal _SceneEntityAiInfo_SkillGroupCdMapEntry_default_instance_;
class SceneEntityInfo;
class SceneEntityInfoDefaultTypeInternal;
extern SceneEntityInfoDefaultTypeInternal _SceneEntityInfo_default_instance_;
class SceneFishInfo;
class SceneFishInfoDefaultTypeInternal;
extern SceneFishInfoDefaultTypeInternal _SceneFishInfo_default_instance_;
class SceneGadgetInfo;
class SceneGadgetInfoDefaultTypeInternal;
extern SceneGadgetInfoDefaultTypeInternal _SceneGadgetInfo_default_instance_;
class SceneMonsterInfo;
class SceneMonsterInfoDefaultTypeInternal;
extern SceneMonsterInfoDefaultTypeInternal _SceneMonsterInfo_default_instance_;
class SceneMonsterInfo_SummonTagMapEntry;
class SceneMonsterInfo_SummonTagMapEntryDefaultTypeInternal;
extern SceneMonsterInfo_SummonTagMapEntryDefaultTypeInternal _SceneMonsterInfo_SummonTagMapEntry_default_instance_;
class SceneNpcInfo;
class SceneNpcInfoDefaultTypeInternal;
extern SceneNpcInfoDefaultTypeInternal _SceneNpcInfo_default_instance_;
class SceneReliquaryInfo;
class SceneReliquaryInfoDefaultTypeInternal;
extern SceneReliquaryInfoDefaultTypeInternal _SceneReliquaryInfo_default_instance_;
class SceneWeaponInfo;
class SceneWeaponInfoDefaultTypeInternal;
extern SceneWeaponInfoDefaultTypeInternal _SceneWeaponInfo_default_instance_;
class SceneWeaponInfo_AffixMapEntry;
class SceneWeaponInfo_AffixMapEntryDefaultTypeInternal;
extern SceneWeaponInfo_AffixMapEntryDefaultTypeInternal _SceneWeaponInfo_AffixMapEntry_default_instance_;
class ScreenInfo;
class ScreenInfoDefaultTypeInternal;
extern ScreenInfoDefaultTypeInternal _ScreenInfo_default_instance_;
class ServantInfo;
class ServantInfoDefaultTypeInternal;
extern ServantInfoDefaultTypeInternal _ServantInfo_default_instance_;
class ServerBuff;
class ServerBuffDefaultTypeInternal;
extern ServerBuffDefaultTypeInternal _ServerBuff_default_instance_;
class ServerMassiveEntity;
class ServerMassiveEntityDefaultTypeInternal;
extern ServerMassiveEntityDefaultTypeInternal _ServerMassiveEntity_default_instance_;
class ShapeBox;
class ShapeBoxDefaultTypeInternal;
extern ShapeBoxDefaultTypeInternal _ShapeBox_default_instance_;
class ShapeSphere;
class ShapeSphereDefaultTypeInternal;
extern ShapeSphereDefaultTypeInternal _ShapeSphere_default_instance_;
class ShopCardProduct;
class ShopCardProductDefaultTypeInternal;
extern ShopCardProductDefaultTypeInternal _ShopCardProduct_default_instance_;
class ShopCardProduct_ResinCard;
class ShopCardProduct_ResinCardDefaultTypeInternal;
extern ShopCardProduct_ResinCardDefaultTypeInternal _ShopCardProduct_ResinCard_default_instance_;
class ShopConcertProduct;
class ShopConcertProductDefaultTypeInternal;
extern ShopConcertProductDefaultTypeInternal _ShopConcertProduct_default_instance_;
class ShopMcoinProduct;
class ShopMcoinProductDefaultTypeInternal;
extern ShopMcoinProductDefaultTypeInternal _ShopMcoinProduct_default_instance_;
class ShowAvatarInfo;
class ShowAvatarInfoDefaultTypeInternal;
extern ShowAvatarInfoDefaultTypeInternal _ShowAvatarInfo_default_instance_;
class ShowAvatarInfo_FightPropMapEntry;
class ShowAvatarInfo_FightPropMapEntryDefaultTypeInternal;
extern ShowAvatarInfo_FightPropMapEntryDefaultTypeInternal _ShowAvatarInfo_FightPropMapEntry_default_instance_;
class ShowAvatarInfo_PropMapEntry;
class ShowAvatarInfo_PropMapEntryDefaultTypeInternal;
extern ShowAvatarInfo_PropMapEntryDefaultTypeInternal _ShowAvatarInfo_PropMapEntry_default_instance_;
class ShowAvatarInfo_ProudSkillExtraLevelMapEntry;
class ShowAvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal;
extern ShowAvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal _ShowAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_;
class ShowAvatarInfo_SkillLevelMapEntry;
class ShowAvatarInfo_SkillLevelMapEntryDefaultTypeInternal;
extern ShowAvatarInfo_SkillLevelMapEntryDefaultTypeInternal _ShowAvatarInfo_SkillLevelMapEntry_default_instance_;
class ShowEquip;
class ShowEquipDefaultTypeInternal;
extern ShowEquipDefaultTypeInternal _ShowEquip_default_instance_;
class StatueGadgetInfo;
class StatueGadgetInfoDefaultTypeInternal;
extern StatueGadgetInfoDefaultTypeInternal _StatueGadgetInfo_default_instance_;
class StopServerInfo;
class StopServerInfoDefaultTypeInternal;
extern StopServerInfoDefaultTypeInternal _StopServerInfo_default_instance_;
class TrialAvatarGrantRecord;
class TrialAvatarGrantRecordDefaultTypeInternal;
extern TrialAvatarGrantRecordDefaultTypeInternal _TrialAvatarGrantRecord_default_instance_;
class TrialAvatarInfo;
class TrialAvatarInfoDefaultTypeInternal;
extern TrialAvatarInfoDefaultTypeInternal _TrialAvatarInfo_default_instance_;
class Uint32Pair;
class Uint32PairDefaultTypeInternal;
extern Uint32PairDefaultTypeInternal _Uint32Pair_default_instance_;
class Vector;
class VectorDefaultTypeInternal;
extern VectorDefaultTypeInternal _Vector_default_instance_;
class Vector3Int;
class Vector3IntDefaultTypeInternal;
extern Vector3IntDefaultTypeInternal _Vector3Int_default_instance_;
class VectorPlane;
class VectorPlaneDefaultTypeInternal;
extern VectorPlaneDefaultTypeInternal _VectorPlane_default_instance_;
class VehicleInfo;
class VehicleInfoDefaultTypeInternal;
extern VehicleInfoDefaultTypeInternal _VehicleInfo_default_instance_;
class VehicleMember;
class VehicleMemberDefaultTypeInternal;
extern VehicleMemberDefaultTypeInternal _VehicleMember_default_instance_;
class Weapon;
class WeaponDefaultTypeInternal;
extern WeaponDefaultTypeInternal _Weapon_default_instance_;
class Weapon_AffixMapEntry;
class Weapon_AffixMapEntryDefaultTypeInternal;
extern Weapon_AffixMapEntryDefaultTypeInternal _Weapon_AffixMapEntry_default_instance_;
class WeatherInfo;
class WeatherInfoDefaultTypeInternal;
extern WeatherInfoDefaultTypeInternal _WeatherInfo_default_instance_;
class WeeklyBossResinDiscountInfo;
class WeeklyBossResinDiscountInfoDefaultTypeInternal;
extern WeeklyBossResinDiscountInfoDefaultTypeInternal _WeeklyBossResinDiscountInfo_default_instance_;
class WorktopInfo;
class WorktopInfoDefaultTypeInternal;
extern WorktopInfoDefaultTypeInternal _WorktopInfo_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_define_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_define_2eproto

enum BreakoutAction_BreakoutActionType {
  BreakoutAction_BreakoutActionType_ACTION_TYPE_NONE = 0,
  BreakoutAction_BreakoutActionType_ACTION_TYPE_LAUNCH_BALL = 1,
  BreakoutAction_BreakoutActionType_ACTION_TYPE_DESTROY_BALL = 2,
  BreakoutAction_BreakoutActionType_ACTION_TYPE_FALLING_OBJECT = 3,
  BreakoutAction_BreakoutActionType_ACTION_TYPE_MISSILE = 4,
  BreakoutAction_BreakoutActionType_BreakoutAction_BreakoutActionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BreakoutAction_BreakoutActionType_BreakoutAction_BreakoutActionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BreakoutAction_BreakoutActionType_IsValid(int value);
const BreakoutAction_BreakoutActionType BreakoutAction_BreakoutActionType_BreakoutActionType_MIN = BreakoutAction_BreakoutActionType_ACTION_TYPE_NONE;
const BreakoutAction_BreakoutActionType BreakoutAction_BreakoutActionType_BreakoutActionType_MAX = BreakoutAction_BreakoutActionType_ACTION_TYPE_MISSILE;
const int BreakoutAction_BreakoutActionType_BreakoutActionType_ARRAYSIZE = BreakoutAction_BreakoutActionType_BreakoutActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BreakoutAction_BreakoutActionType_descriptor();
inline const ::std::string& BreakoutAction_BreakoutActionType_Name(BreakoutAction_BreakoutActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BreakoutAction_BreakoutActionType_descriptor(), value);
}
inline bool BreakoutAction_BreakoutActionType_Parse(
    const ::std::string& name, BreakoutAction_BreakoutActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BreakoutAction_BreakoutActionType>(
    BreakoutAction_BreakoutActionType_descriptor(), name, value);
}
enum TrialAvatarGrantRecord_GrantReason {
  TrialAvatarGrantRecord_GrantReason_INVALID = 0,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_QUEST = 1,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_TRIAL_AVATAR_ACTIVITY = 2,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_DUNGEON_ELEMENT_CHALLENGE = 3,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_MIST_TRIAL_ACTIVITY = 4,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_SUMO_ACTIVITY = 5,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_POTION_ACTIVITY = 6,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_CRYSTAL_LINK_ACTIVITY = 7,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_IRODORI_MASTER = 8,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_GM = 9,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_INSTABLE_SPRAY_ACTIVITY = 10,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_MUQADAS_POTION_ACTIVITY = 11,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_VINTAGE_HUNTING = 12,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_CHAR_AMUSEMENT = 13,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_DUEL_HEART = 14,
  TrialAvatarGrantRecord_GrantReason_TrialAvatarGrantRecord_GrantReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TrialAvatarGrantRecord_GrantReason_TrialAvatarGrantRecord_GrantReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TrialAvatarGrantRecord_GrantReason_IsValid(int value);
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord_GrantReason_GrantReason_MIN = TrialAvatarGrantRecord_GrantReason_INVALID;
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord_GrantReason_GrantReason_MAX = TrialAvatarGrantRecord_GrantReason_GRANT_BY_DUEL_HEART;
const int TrialAvatarGrantRecord_GrantReason_GrantReason_ARRAYSIZE = TrialAvatarGrantRecord_GrantReason_GrantReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrialAvatarGrantRecord_GrantReason_descriptor();
inline const ::std::string& TrialAvatarGrantRecord_GrantReason_Name(TrialAvatarGrantRecord_GrantReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrialAvatarGrantRecord_GrantReason_descriptor(), value);
}
inline bool TrialAvatarGrantRecord_GrantReason_Parse(
    const ::std::string& name, TrialAvatarGrantRecord_GrantReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrialAvatarGrantRecord_GrantReason>(
    TrialAvatarGrantRecord_GrantReason_descriptor(), name, value);
}
enum ENetReason {
  ENET_TIMEOUT = 0,
  ENET_CLIENT_CLOSE = 1,
  ENET_CLIENT_REBIND_FAIL = 2,
  ENET_CLIENT_SHUTDOWN = 3,
  ENET_SERVER_RELOGIN = 4,
  ENET_SERVER_KICK = 5,
  ENET_SERVER_SHUTDOWN = 6,
  ENET_NOT_FOUND_SESSION = 7,
  ENET_LOGIN_UNFINISHED = 8,
  ENET_PACKET_FREQ_TOO_HIGH = 9,
  ENET_PING_TIMEOUT = 10,
  ENET_TRANFER_FAILED = 11,
  ENET_SERVER_KILL_CLIENT = 12,
  ENET_CHECK_MOVE_SPEED = 13,
  ENET_ACCOUNT_PASSWORD_CHANGE = 14,
  ENET_SECURITY_KICK = 15,
  ENET_LUA_SHELL_TIMEOUT = 16,
  ENET_SDKFAIL_KICK = 17,
  ENET_PACKET_COST_TIME = 18,
  ENET_PACKET_UNION_FREQ = 19,
  ENET_WAIT_SND_MAX = 20,
  ENET_CLIENT_CONNECT_KEY = 1234567890,
  ENET_CLIENT_EDITOR_CONNECT_KEY = 987654321,
  ENetReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ENetReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ENetReason_IsValid(int value);
const ENetReason ENetReason_MIN = ENET_TIMEOUT;
const ENetReason ENetReason_MAX = ENET_CLIENT_CONNECT_KEY;
const int ENetReason_ARRAYSIZE = ENetReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENetReason_descriptor();
inline const ::std::string& ENetReason_Name(ENetReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENetReason_descriptor(), value);
}
inline bool ENetReason_Parse(
    const ::std::string& name, ENetReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENetReason>(
    ENetReason_descriptor(), name, value);
}
enum AccountType {
  ACCOUNT_MIHOYO_GUEST = 0,
  ACCOUNT_MIHOYO = 1,
  ACCOUNT_XIAOMI = 11,
  ACCOUNT_COOLPAD = 12,
  ACCOUNT_YYB = 13,
  ACCOUNT_BILI = 14,
  ACCOUNT_HUAWEI = 15,
  ACCOUNT_MEIZU = 16,
  ACCOUNT_360 = 17,
  ACCOUNT_OPPO = 18,
  ACCOUNT_VIVO = 19,
  ACCOUNT_UC = 20,
  ACCOUNT_WANDOJIA = 21,
  ACCOUNT_LENOVO = 22,
  ACCOUNT_JINLI = 23,
  ACCOUNT_BAIDU = 25,
  ACCOUNT_DANGLE = 26,
  AccountType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccountType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccountType_IsValid(int value);
const AccountType AccountType_MIN = ACCOUNT_MIHOYO_GUEST;
const AccountType AccountType_MAX = ACCOUNT_DANGLE;
const int AccountType_ARRAYSIZE = AccountType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccountType_descriptor();
inline const ::std::string& AccountType_Name(AccountType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccountType_descriptor(), value);
}
inline bool AccountType_Parse(
    const ::std::string& name, AccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccountType>(
    AccountType_descriptor(), name, value);
}
enum ChannelIdType {
  CHANNEL_ID_NONE = 0,
  CHANNEL_ID_MIHOYO = 1,
  CHANNEL_ID_XIAOMI = 11,
  CHANNEL_ID_COOLPAD = 12,
  CHANNEL_ID_YYB = 13,
  CHANNEL_ID_BILI = 14,
  CHANNEL_ID_HUAWEI = 15,
  CHANNEL_ID_MEIZU = 16,
  CHANNEL_ID_360 = 17,
  CHANNEL_ID_OPPO = 18,
  CHANNEL_ID_VIVO = 19,
  CHANNEL_ID_UC = 20,
  CHANNEL_ID_LENOVO = 22,
  CHANNEL_ID_JINLI = 23,
  CHANNEL_ID_BAIDU = 25,
  CHANNEL_ID_DANGLE = 26,
  ChannelIdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChannelIdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChannelIdType_IsValid(int value);
const ChannelIdType ChannelIdType_MIN = CHANNEL_ID_NONE;
const ChannelIdType ChannelIdType_MAX = CHANNEL_ID_DANGLE;
const int ChannelIdType_ARRAYSIZE = ChannelIdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChannelIdType_descriptor();
inline const ::std::string& ChannelIdType_Name(ChannelIdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChannelIdType_descriptor(), value);
}
inline bool ChannelIdType_Parse(
    const ::std::string& name, ChannelIdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChannelIdType>(
    ChannelIdType_descriptor(), name, value);
}
enum ServiceType {
  SERVICE_NONE = 0,
  SERVICE_CLIENT = 1,
  SERVICE_GATE = 2,
  SERVICE_GAME = 3,
  SERVICE_NODE = 4,
  SERVICE_DB = 5,
  SERVICE_SNS = 6,
  SERVICE_DISPATCH = 7,
  SERVICE_MUIP = 8,
  SERVICE_OFFLINE_MSG = 9,
  SERVICE_MAIL = 10,
  SERVICE_MP = 11,
  SERVICE_HTTPPROXY = 12,
  SERVICE_ACTIVITY = 13,
  SERVICE_PATHFINDING = 14,
  SERVICE_SOCIAL = 15,
  SERVICE_OA = 16,
  SERVICE_MATCH = 17,
  SERVICE_OFFLINE_OP = 18,
  SERVICE_TOTHEMOON = 19,
  SERVICE_GCG = 20,
  ServiceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceType_IsValid(int value);
const ServiceType ServiceType_MIN = SERVICE_NONE;
const ServiceType ServiceType_MAX = SERVICE_GCG;
const int ServiceType_ARRAYSIZE = ServiceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceType_descriptor();
inline const ::std::string& ServiceType_Name(ServiceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceType_descriptor(), value);
}
inline bool ServiceType_Parse(
    const ::std::string& name, ServiceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceType>(
    ServiceType_descriptor(), name, value);
}
enum ClientType {
  CLIENT_PRODUCT = 0,
  CLIENT_DEV = 1,
  ClientType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientType_IsValid(int value);
const ClientType ClientType_MIN = CLIENT_PRODUCT;
const ClientType ClientType_MAX = CLIENT_DEV;
const int ClientType_ARRAYSIZE = ClientType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientType_descriptor();
inline const ::std::string& ClientType_Name(ClientType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientType_descriptor(), value);
}
inline bool ClientType_Parse(
    const ::std::string& name, ClientType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientType>(
    ClientType_descriptor(), name, value);
}
enum RegionType {
  REGION_PRODUCT = 0,
  REGION_EXAM = 1,
  REGION_DEV_PUB = 2,
  REGION_DEV_PRI = 3,
  RegionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegionType_IsValid(int value);
const RegionType RegionType_MIN = REGION_PRODUCT;
const RegionType RegionType_MAX = REGION_DEV_PRI;
const int RegionType_ARRAYSIZE = RegionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegionType_descriptor();
inline const ::std::string& RegionType_Name(RegionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegionType_descriptor(), value);
}
inline bool RegionType_Parse(
    const ::std::string& name, RegionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegionType>(
    RegionType_descriptor(), name, value);
}
enum ActionReasonType {
  ACTION_REASON_NONE = 0,
  ACTION_REASON_QUEST_ITEM = 1,
  ACTION_REASON_QUEST_REWARD = 2,
  ACTION_REASON_TRIFLE = 3,
  ACTION_REASON_SHOP = 4,
  ACTION_REASON_PLAYER_UPGRADE_REWARD = 5,
  ACTION_REASON_ADD_AVATAR = 6,
  ACTION_REASON_GADGET_ENV_ANIMAL = 7,
  ACTION_REASON_MONSTER_ENV_ANIMAL = 8,
  ACTION_REASON_COMPOUND = 9,
  ACTION_REASON_COOK = 10,
  ACTION_REASON_GATHER = 11,
  ACTION_REASON_MAIL_ATTACHMENT = 12,
  ACTION_REASON_CITY_LEVELUP_RETURN = 15,
  ACTION_REASON_CITY_LEVELUP_REWARD = 17,
  ACTION_REASON_AREA_EXPLORE_REWARD = 18,
  ACTION_REASON_UNLOCK_POINT_REWARD = 19,
  ACTION_REASON_DUNGEON_FIRST_PASS = 20,
  ACTION_REASON_DUNGEON_PASS = 21,
  ACTION_REASON_CHANGE_ELEM_TYPE = 23,
  ACTION_REASON_FETTER_OPEN = 25,
  ACTION_REASON_DAILY_TASK_SCORE = 26,
  ACTION_REASON_DAILY_TASK_HOST = 27,
  ACTION_REASON_RAND_TASK_HOST = 28,
  ACTION_REASON_EXPEDITION = 29,
  ACTION_REASON_GACHA = 30,
  ACTION_REASON_COMBINE = 31,
  ACTION_REASON_RAND_TASK_GUEST = 32,
  ACTION_REASON_DAILY_TASK_GUEST = 33,
  ACTION_REASON_FORGE_OUTPUT = 34,
  ACTION_REASON_FORGE_RETURN = 35,
  ACTION_REASON_INIT_AVATAR = 36,
  ACTION_REASON_MONSTER_DIE = 37,
  ACTION_REASON_GM = 38,
  ACTION_REASON_OPEN_CHEST = 39,
  ACTION_REASON_GADGET_DIE = 40,
  ACTION_REASON_MONSTER_CHANGE_HP = 41,
  ACTION_REASON_SUBFIELD_DROP = 42,
  ACTION_REASON_PUSH_TIPS_REWARD = 43,
  ACTION_REASON_ACTIVITY_MONSTER_DROP = 44,
  ACTION_REASON_ACTIVITY_GATHER = 45,
  ACTION_REASON_ACTIVITY_SUBFIELD_DROP = 46,
  ACTION_REASON_TOWER_SCHEDULE_REWARD = 47,
  ACTION_REASON_TOWER_FLOOR_STAR_REWARD = 48,
  ACTION_REASON_TOWER_FIRST_PASS_REWARD = 49,
  ACTION_REASON_TOWER_DAILY_REWARD = 50,
  ACTION_REASON_HIT_CLIENT_TRIVIAL_ENTITY = 51,
  ACTION_REASON_OPEN_WORLD_BOSS_CHEST = 52,
  ACTION_REASON_MATERIAL_DELETE_RETURN = 53,
  ACTION_REASON_SIGN_IN_REWARD = 54,
  ACTION_REASON_OPEN_BLOSSOM_CHEST = 55,
  ACTION_REASON_RECHARGE = 56,
  ACTION_REASON_BONUS_ACTIVITY_REWARD = 57,
  ACTION_REASON_TOWER_COMMEMORATIVE_REWARD = 58,
  ACTION_REASON_TOWER_SKIP_FLOOR_REWARD = 59,
  ACTION_REASON_RECHARGE_BONUS = 60,
  ACTION_REASON_RECHARGE_CARD = 61,
  ACTION_REASON_RECHARGE_CARD_DAILY = 62,
  ACTION_REASON_RECHARGE_CARD_REPLACE = 63,
  ACTION_REASON_RECHARGE_CARD_REPLACE_FREE = 64,
  ACTION_REASON_RECHARGE_PLAY_REPLACE = 65,
  ACTION_REASON_MP_PLAY_TAKE_REWARD = 66,
  ACTION_REASON_ACTIVITY_WATCHER = 67,
  ACTION_REASON_SALESMAN_DELIVER_ITEM = 68,
  ACTION_REASON_SALESMAN_REWARD = 69,
  ACTION_REASON_REBATE = 70,
  ACTION_REASON_MCOIN_EXCHANGE_HCOIN = 71,
  ACTION_REASON_DAILY_TASK_EXCHANGE_LEGENDARY_KEY = 72,
  ACTION_REASON_UNLOCK_PERSON_LINE = 73,
  ACTION_REASON_FETTER_LEVEL_REWARD = 74,
  ACTION_REASON_BUY_RESIN = 75,
  ACTION_REASON_RECHARGE_PACKAGE = 76,
  ACTION_REASON_DELIVERY_DAILY_REWARD = 77,
  ACTION_REASON_CITY_REPUTATION_LEVEL = 78,
  ACTION_REASON_CITY_REPUTATION_QUEST = 79,
  ACTION_REASON_CITY_REPUTATION_REQUEST = 80,
  ACTION_REASON_CITY_REPUTATION_EXPLORE = 81,
  ACTION_REASON_OFFERGING_LEVEL = 82,
  ACTION_REASON_ROUTINE_HOST = 83,
  ACTION_REASON_ROUTINE_GUEST = 84,
  ACTION_REASON_TREASURE_MAP_SPOT_TOKEN = 89,
  ACTION_REASON_TREASURE_MAP_BONUS_LEVEL_REWARD = 90,
  ACTION_REASON_TREASURE_MAP_MP_REWARD = 91,
  ACTION_REASON_CONVERT = 92,
  ACTION_REASON_OVERFLOW_TRANSFORM = 93,
  ACTION_REASON_ACTIVITY_AVATAR_SELECTION_REWARD = 96,
  ACTION_REASON_ACTIVITY_WATCHER_BATCH = 97,
  ACTION_REASON_HIT_TREE_DROP = 98,
  ACTION_REASON_GET_HOME_LEVELUP_REWARD = 99,
  ACTION_REASON_HOME_DEFAULT_FURNITURE = 100,
  ACTION_REASON_ACTIVITY_COND = 101,
  ACTION_REASON_BATTLE_PASS_NOTIFY = 102,
  ACTION_REASON_RELIQUARY_DECOMPOSE = 103,
  ACTION_REASON_RECHARGE_GOOGLE_GIFT_GARD = 104,
  ACTION_REASON_RECHARGE_CONCERT_PRODUCT = 105,
  ACTION_REASON_RECHARGE_CONCERT_PRODUCT_REPLACE = 106,
  ACTION_REASON_SEND_CONCERT_PRODUCT_BY_MUIP = 107,
  ACTION_REASON_RECHARGE_APPLE_GIFT_GARD = 108,
  ACTION_REASON_RECHARGE_PSN_COMPENSATION_PRODUCT = 109,
  ACTION_REASON_COMPOUND_BOOST = 110,
  ACTION_REASON_WOOD_EXCHANGE = 111,
  ACTION_REASON_AVATAR_RENAME_AUDIT_FAILED = 112,
  ACTION_REASON_AVATAR_RENAME_RESET = 113,
  ACTION_REASON_PLAYER_USE_ITEM = 1001,
  ACTION_REASON_DROP_ITEM = 1002,
  ACTION_REASON_WEAPON_UPGRADE = 1011,
  ACTION_REASON_WEAPON_PROMOTE = 1012,
  ACTION_REASON_WEAPON_AWAKEN = 1013,
  ACTION_REASON_RELIC_UPGRADE = 1014,
  ACTION_REASON_ABILITY = 1015,
  ACTION_REASON_DUNGEON_STATUE_DROP = 1016,
  ACTION_REASON_OFFLINE_MSG = 1017,
  ACTION_REASON_AVATAR_UPGRADE = 1018,
  ACTION_REASON_AVATAR_PROMOTE = 1019,
  ACTION_REASON_QUEST_ACTION = 1021,
  ACTION_REASON_CITY_LEVELUP = 1022,
  ACTION_REASON_UPGRADE_SKILL = 1024,
  ACTION_REASON_UNLOCK_TALENT = 1025,
  ACTION_REASON_UPGRADE_PROUD_SKILL = 1026,
  ACTION_REASON_PLAYER_LEVEL_LIMIT_UP = 1027,
  ACTION_REASON_DUNGEON_DAILY = 1028,
  ACTION_REASON_ITEM_GIVING = 1030,
  ACTION_REASON_FORGE_COST = 1031,
  ACTION_REASON_INVESTIGATION_REWARD = 1032,
  ACTION_REASON_INVESTIGATION_TARGET_REWARD = 1033,
  ACTION_REASON_GADGET_INTERACT = 1034,
  ACTION_REASON_SEA_LAMP_CI_MATERIAL = 1036,
  ACTION_REASON_SEA_LAMP_CONTRIBUTION_REWARD = 1037,
  ACTION_REASON_SEA_LAMP_PHASE_REWARD = 1038,
  ACTION_REASON_SEA_LAMP_FLY_LAMP = 1039,
  ACTION_REASON_AUTO_RECOVER = 1040,
  ACTION_REASON_ACTIVITY_EXPIRE_ITEM = 1041,
  ACTION_REASON_SUB_COIN_NEGATIVE = 1042,
  ACTION_REASON_BARGAIN_DEDUCT = 1043,
  ACTION_REASON_BATTLE_PASS_PAID_REWARD = 1044,
  ACTION_REASON_BATTLE_PASS_LEVEL_REWARD = 1045,
  ACTION_REASON_TRIAL_AVATAR_ACTIVITY_FIRST_PASS_REWARD = 1046,
  ACTION_REASON_BUY_BATTLE_PASS_LEVEL = 1047,
  ACTION_REASON_GRANT_BIRTHDAY_BENEFIT = 1048,
  ACTION_REASON_ACHIEVEMENT_REWARD = 1049,
  ACTION_REASON_ACHIEVEMENT_GOAL_REWARD = 1050,
  ACTION_REASON_FIRST_SHARE_TO_SOCIAL_NETWORK = 1051,
  ACTION_REASON_DESTROY_MATERIAL = 1052,
  ACTION_REASON_CODEX_LEVELUP_REWARD = 1053,
  ACTION_REASON_HUNTING_OFFER_REWARD = 1054,
  ACTION_REASON_USE_WIDGET_ANCHOR_POINT = 1055,
  ACTION_REASON_USE_WIDGET_BONFIRE = 1056,
  ACTION_REASON_UNGRADE_WEAPON_RETURN_MATERIAL = 1057,
  ACTION_REASON_USE_WIDGET_ONEOFF_GATHER_POINT_DETECTOR = 1058,
  ACTION_REASON_USE_WIDGET_CLIENT_COLLECTOR = 1059,
  ACTION_REASON_USE_WIDGET_CLIENT_DETECTOR = 1060,
  ACTION_REASON_TAKE_GENERAL_REWARD = 1061,
  ACTION_REASON_ASTER_TAKE_SPECIAL_REWARD = 1062,
  ACTION_REASON_REMOVE_CODEX_BOOK = 1063,
  ACTION_REASON_OFFERING_ITEM = 1064,
  ACTION_REASON_USE_WIDGET_GADGET_BUILDER = 1065,
  ACTION_REASON_EFFIGY_FIRST_PASS_REWARD = 1066,
  ACTION_REASON_EFFIGY_REWARD = 1067,
  ACTION_REASON_REUNION_FIRST_GIFT_REWARD = 1068,
  ACTION_REASON_REUNION_SIGN_IN_REWARD = 1069,
  ACTION_REASON_REUNION_WATCHER_REWARD = 1070,
  ACTION_REASON_SALESMAN_MP_REWARD = 1071,
  ACTION_REASION_AVATAR_PROMOTE_REWARD = 1072,
  ACTION_REASON_BLESSING_REDEEM_REWARD = 1073,
  ACTION_MIRACLE_RING_REWARD = 1074,
  ACTION_REASON_EXPEDITION_REWARD = 1075,
  ACTION_REASON_TREASURE_MAP_REMOVE_DETECTOR = 1076,
  ACTION_REASON_MECHANICUS_DUNGEON_TICKET = 1077,
  ACTION_REASON_MECHANICUS_LEVELUP_GEAR = 1078,
  ACTION_REASON_MECHANICUS_BATTLE_SETTLE = 1079,
  ACTION_REASON_REGION_SEARCH_REWARD = 1080,
  ACTION_REASON_UNLOCK_COOP_CHAPTER = 1081,
  ACTION_REASON_TAKE_COOP_REWARD = 1082,
  ACTION_REASON_FLEUR_FAIR_DUNGEON_REWARD = 1083,
  ACTION_REASON_ACTIVITY_SCORE = 1084,
  ACTION_REASON_CHANNELLER_SLAB_ONEOFF_DUNGEON_REWARD = 1085,
  ACTION_REASON_FURNITURE_MAKE_START = 1086,
  ACTION_REASON_FURNITURE_MAKE_TAKE = 1087,
  ACTION_REASON_FURNITURE_MAKE_CANCEL = 1088,
  ACTION_REASON_FURNITURE_MAKE_FAST_FINISH = 1089,
  ACTION_REASON_CHANNELLER_SLAB_LOOP_DUNGEON_FIRST_PASS_REWARD = 1090,
  ACTION_REASON_CHANNELLER_SLAB_LOOP_DUNGEON_SCORE_REWARD = 1091,
  ACTION_REASON_HOME_LIMITED_SHOP_BUY = 1092,
  ACTION_REASON_HOME_COIN_COLLECT = 1093,
  ACTION_REASON_SUMMER_TIME_SENTRY_TOWER_REWARD = 1094,
  ACTION_REASON_SUMMER_TIME_SPRINT_BOAT_REWARD = 1095,
  ACTION_REASON_SUMMER_TIME_BOSS_REWARD = 1096,
  ACTION_REASON_SUMMER_TIME_BOMB_REWARD = 1097,
  ACTION_REASON_HOME_FETTER_COLLECT = 1098,
  ACTION_REASON_ECHO_SHELL_REWARD = 1099,
  ACTION_REASON_HOME_EVENT_REWARD = 1100,
  ACTION_REASON_BLITZ_RUSH_DUNGEON_REWARD = 1101,
  ACTION_REASON_FURNITURE_MAKE_RETURN = 1102,
  ACTION_REASON_HOME_PLANT_BOX_GATHER = 1103,
  ACTION_REASON_HOME_PLANT_SEED = 1104,
  ACTION_REASON_HOME_PLANT_GATHER = 1105,
  ACTION_REASON_CHESS_DUNGEON_REWARD = 1106,
  ACTION_REASON_GROUP_LINK_BUNDLE_FINISH = 1107,
  ACTION_REASON_LUNA_RITE_SACRIFICE = 1108,
  ACTION_REASON_LUNA_RITE_TAKE_SACRIFICE_REWARD = 1109,
  ACTION_REASON_FISH_BITE = 1110,
  ACTION_REASON_FISH_SUCC = 1111,
  ACTION_REASON_PLANT_FLOWER_REWARD = 1112,
  ACTION_REASON_PLANT_FLOWER_DELIVER_ITEM = 1113,
  ACTION_REASON_PLANT_FLOWER_GIVE_FLOWER = 1114,
  ACTION_REASON_PLANT_FLOWER_RECV_FLOWER = 1115,
  ACTION_REASON_ROGUE_CHALLENGE_SETTLE = 1116,
  ACTION_REASON_ROGUE_TAKE_FIRST_PASS_REWARD = 1117,
  ACTION_REASON_ROGUE_UPGRADE_SHIKIGAMI = 1118,
  ACTION_REASON_ROGUE_REFRESH_CARD = 1119,
  ACTION_REASON_USE_WIDGET_CAPTURE_ANIMAL = 1120,
  ACTION_REASON_CAPTURE_ANIMAL_SUCC = 1121,
  ACTION_REASON_SNOW_DRIFTS = 1122,
  ACTION_REASON_WINTER_CAMP_GIVE_ITEM = 1123,
  ACTION_REASON_WINTER_CAMP_RECV_ITEM = 1124,
  ACTION_REASON_WINTER_CAMP_EXPLORE_REWARD = 1125,
  ACTION_REASON_WINTER_CAMP_BATTLE_REWARD = 1126,
  ACTION_REASON_LANTERN_RITE_SKIN_REWARD = 1127,
  ACTION_REASON_LANTERN_RITE_DUNGEON_REWARD = 1128,
  ACTION_REASON_MICHIAE_MATSURI_DARK_CHALLENGE_REWARD = 1129,
  ACTION_REASON_MICHIAE_MATSURI_UNLOCK_CRYSTAL_SKILL = 1130,
  ACTION_REASON_LANTERN_RITE_GROUP_REWARD = 1131,
  ACTION_REASON_COSTUME_DEFAULT_UNLOCK = 1132,
  ACTION_REASON_SPICE_ACTIVITY_MAKE_SPICE = 1133,
  ACTION_REASON_SPICE_ACTIVITY_PROCESS_FOOD = 1134,
  ACTION_REASON_SPICE_ADD_AVATAR_FETTER = 1135,
  ACTION_REASON_GACHA_ACTIVITY_ROBOT_REWARD = 1136,
  ACTION_REASON_GIVING_TAKE_BACK = 1137,
  ACTION_REASON_SUMMER_TIME_V2_DUNGEON_REWARD = 1138,
  ACTION_REASON_GRAVEN_INNOCENCE_CAMP_REWARD = 1139,
  ACTION_REASON_TREASURE_SEELIE_CHEST_REWARD = 1140,
  ACTION_REASON_GCG_TAVERN_CHALLENGE_UNLOCK_CHARACTER = 1141,
  ACTION_REASON_GCG_LEVEL_REWARD = 1143,
  ACTION_REASON_GCG_CHALLENGE_FINISH = 1144,
  ACTION_REASON_VINTAGE_MARKET_DEAL = 1145,
  ACTION_REASON_VINTAGE_MARKET_BARGAIN = 1146,
  ACTION_REASON_VINTAGE_MARKET_STORE = 1147,
  ACTION_REASON_VINTAGE_PRESENT = 1148,
  ACTION_REASON_VINTAGE_OPEN_STORE = 1149,
  ACTION_REASON_VINTAGE_STORE_UNLOCK_SLOT = 1150,
  ACTION_REASON_VINTAGE_STORE_NPC_EVENT = 1151,
  ACTION_REASON_ROCK_BOARD_EXPLORE_REWARD = 1152,
  ACTION_REASON_VINTAGE_STORE_DIVIDEND = 1153,
  ACTION_REASON_AVATAR_RENAME = 1154,
  ACTION_REASON_GCG_FINISH_LEVEL_QUEST = 1155,
  ACTION_REASON_GCG_PROFICIENCY_REWARD = 1156,
  ACTION_REASON_TEAM_CHAIN_COSTUME_REWARD = 1157,
  ActionReasonType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionReasonType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionReasonType_IsValid(int value);
const ActionReasonType ActionReasonType_MIN = ACTION_REASON_NONE;
const ActionReasonType ActionReasonType_MAX = ACTION_REASON_TEAM_CHAIN_COSTUME_REWARD;
const int ActionReasonType_ARRAYSIZE = ActionReasonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionReasonType_descriptor();
inline const ::std::string& ActionReasonType_Name(ActionReasonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionReasonType_descriptor(), value);
}
inline bool ActionReasonType_Parse(
    const ::std::string& name, ActionReasonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionReasonType>(
    ActionReasonType_descriptor(), name, value);
}
enum StoreType {
  STORE_NONE = 0,
  STORE_PACK = 1,
  STORE_DEPOT = 2,
  StoreType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StoreType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StoreType_IsValid(int value);
const StoreType StoreType_MIN = STORE_NONE;
const StoreType StoreType_MAX = STORE_DEPOT;
const int StoreType_ARRAYSIZE = StoreType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StoreType_descriptor();
inline const ::std::string& StoreType_Name(StoreType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StoreType_descriptor(), value);
}
inline bool StoreType_Parse(
    const ::std::string& name, StoreType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StoreType>(
    StoreType_descriptor(), name, value);
}
enum VirtualItem {
  ITEM_VIRTUAL_NONE = 0,
  ITEM_VIRTUAL_AVATAR_EXP = 101,
  ITEM_VIRTUAL_PLAYER_EXP = 102,
  ITEM_VIRTUAL_FETTER_EXP = 105,
  ITEM_VIRTUAL_RESIN = 106,
  ITEM_VIRTUAL_LEGENDARY_KEY = 107,
  ITEM_VIRTUAL_ASTER_PROGRESS = 108,
  ITEM_VIRTUAL_ASTER_CREDIT = 109,
  ITEM_VIRTUAL_ASTER_TOKEN = 110,
  ITEM_VIRTUAL_SHIMMERING_ESSENCE = 111,
  ITEM_VIRTUAL_WARM_ESSENCE = 112,
  ITEM_VIRTUAL_WONDROUS_ESSENCE = 113,
  ITEM_VIRTUAL_TREASURE_MAP_TOKEN = 114,
  ITEM_VIRTUAL_SEA_LAMP_COIN = 115,
  ITEM_VIRTUAL_SEA_LAMP_POPULARITY = 116,
  ITEM_VIRTUAL_MECHANICUS_COIN = 117,
  ITEM_VIRTUAL_FLEUR_FAIR_CREDIT = 118,
  ITEM_VIRTUAL_FLEUR_FAIR_TOKEN = 119,
  ITEM_VIRTUAL_WATER_SPIRIT_COIN = 120,
  ITEM_VIRTUAL_HOME_EXP = 121,
  ITEM_VIRTUAL_CHANNELLER_SLAB_TOKEN = 122,
  ITEM_VIRTUAL_HIDE_AND_SEEK_COIN = 123,
  ITEM_VIRTUAL_SUMMER_TIME_DRAFT_WOOD = 124,
  ITEM_VIRTUAL_SUMMER_TIME_MINI_HARPASTUM = 125,
  ITEM_VIRTUAL_BOUNCE_CONJURING_COIN = 126,
  ITEM_VIRTUAL_BLITZ_RUSH_COIN_A = 127,
  ITEM_VIRTUAL_BLITZ_RUSH_COIN_B = 128,
  ITEM_VIRTUAL_CHESS_EXP = 129,
  ITEM_VIRTUAL_CHESS_COIN = 130,
  ITEM_VIRTUAL_LUNA_RITE_ATMOSPHERE = 131,
  ITEM_VIRTUAL_ROGUELIKE_COIN_A = 132,
  ITEM_VIRTUAL_ROGUELIKE_COIN_B = 133,
  ITEM_VIRTUAL_ROGUELIKE_COIN_C = 134,
  ITEM_VIRTUAL_WINTER_CAMP_COIN_A = 135,
  ITEM_VIRTUAL_WINTER_CAMP_COIN_B = 136,
  ITEM_VIRTUAL_LANTERN_RITE_COIN_A = 137,
  ITEM_VIRTUAL_LANTERN_RITE_COIN_B = 138,
  ITEM_VIRTUAL_LANTERN_RITE_COIN_C = 139,
  ITEM_VIRTUAL_ROGUE_DIARY_COIN = 140,
  ITEM_VIRTUAL_SUMMER_TIME_V2_COIN = 141,
  ITEM_VIRTUAL_ROGUE_DIARY_DUNGEON_COIN = 142,
  ITEM_VIRTUAL_GRAVEN_INNOCENCE_COIN_A = 143,
  ITEM_VIRTUAL_GRAVEN_INNOCENCE_COIN_B = 144,
  ITEM_VIRTUAL_TREASURE_SEELIE_COIN = 145,
  ITEM_VIRTUAL_VINTAGE_POPULARITY = 147,
  ITEM_VIRTUAL_GCG_EXP = 146,
  ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A = 148,
  ITEM_VIRTUAL_VINTAGE_MARKET_COIN_B = 149,
  ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C = 150,
  ITEM_VIRTUAL_FUNGUS_FIGHTER_CAPTURE_COIN = 151,
  ITEM_VIRTUAL_FUNGUS_FIGHTER_TRAINING_COIN = 152,
  ITEM_VIRTUAL_EFFIGY_CHALLENGE_V2_COIN = 153,
  ITEM_VIRTUAL_TEAM_CHAIN_COIN = 154,
  ITEM_VIRTUAL_BRICK_BREAKER_COIN = 155,
  ITEM_VIRTUAL_SEA_LAMP_V3_COIN = 156,
  ITEM_VIRTUAL_HCOIN = 201,
  ITEM_VIRTUAL_SCOIN = 202,
  ITEM_VIRTUAL_MCOIN = 203,
  ITEM_VIRTUAL_HOME_COIN = 204,
  ITEM_VIRTUAL_GCG_COIN = 205,
  ITEM_VIRTUAL_INAZUMA_REPUTATION = 314,
  ITEM_VIRTUAL_MENGDE_REPUTATION = 315,
  ITEM_VIRTUAL_SUMERU_REPUTATION = 316,
  ITEM_VIRTUAL_LIYUE_REPUTATION = 317,
  VirtualItem_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VirtualItem_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VirtualItem_IsValid(int value);
const VirtualItem VirtualItem_MIN = ITEM_VIRTUAL_NONE;
const VirtualItem VirtualItem_MAX = ITEM_VIRTUAL_LIYUE_REPUTATION;
const int VirtualItem_ARRAYSIZE = VirtualItem_MAX + 1;

const ::google::protobuf::EnumDescriptor* VirtualItem_descriptor();
inline const ::std::string& VirtualItem_Name(VirtualItem value) {
  return ::google::protobuf::internal::NameOfEnum(
    VirtualItem_descriptor(), value);
}
inline bool VirtualItem_Parse(
    const ::std::string& name, VirtualItem* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VirtualItem>(
    VirtualItem_descriptor(), name, value);
}
enum ReliquaryFilterKey {
  RELIQUARY_FILTER_KEY_NONE = 0,
  RELIQUARY_FILTER_KEY_LOCK = 1,
  RELIQUARY_FILTER_KEY_LEVEL = 2,
  RELIQUARY_FILTER_KEY_WEARING = 3,
  ReliquaryFilterKey_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReliquaryFilterKey_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReliquaryFilterKey_IsValid(int value);
const ReliquaryFilterKey ReliquaryFilterKey_MIN = RELIQUARY_FILTER_KEY_NONE;
const ReliquaryFilterKey ReliquaryFilterKey_MAX = RELIQUARY_FILTER_KEY_WEARING;
const int ReliquaryFilterKey_ARRAYSIZE = ReliquaryFilterKey_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReliquaryFilterKey_descriptor();
inline const ::std::string& ReliquaryFilterKey_Name(ReliquaryFilterKey value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReliquaryFilterKey_descriptor(), value);
}
inline bool ReliquaryFilterKey_Parse(
    const ::std::string& name, ReliquaryFilterKey* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReliquaryFilterKey>(
    ReliquaryFilterKey_descriptor(), name, value);
}
enum ReliquaryFilterLockState {
  RELIQUARY_FILTER_LOCK_STATE_NONE = 0,
  RELIQUARY_FILTER_LOCK_STATE_LOCK = 1,
  RELIQUARY_FILTER_LOCK_STATE_UNLOCK = 2,
  ReliquaryFilterLockState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReliquaryFilterLockState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReliquaryFilterLockState_IsValid(int value);
const ReliquaryFilterLockState ReliquaryFilterLockState_MIN = RELIQUARY_FILTER_LOCK_STATE_NONE;
const ReliquaryFilterLockState ReliquaryFilterLockState_MAX = RELIQUARY_FILTER_LOCK_STATE_UNLOCK;
const int ReliquaryFilterLockState_ARRAYSIZE = ReliquaryFilterLockState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReliquaryFilterLockState_descriptor();
inline const ::std::string& ReliquaryFilterLockState_Name(ReliquaryFilterLockState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReliquaryFilterLockState_descriptor(), value);
}
inline bool ReliquaryFilterLockState_Parse(
    const ::std::string& name, ReliquaryFilterLockState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReliquaryFilterLockState>(
    ReliquaryFilterLockState_descriptor(), name, value);
}
enum ReliquaryFilterLevelState {
  RELIQUARY_FILTER_LEVEL_STATE_NONE = 0,
  RELIQUARY_FILTER_LEVEL_STATE_FULL_LEVEL = 1,
  RELIQUARY_FILTER_LEVEL_STATE_NOT_FULL_LEVEL = 2,
  ReliquaryFilterLevelState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReliquaryFilterLevelState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReliquaryFilterLevelState_IsValid(int value);
const ReliquaryFilterLevelState ReliquaryFilterLevelState_MIN = RELIQUARY_FILTER_LEVEL_STATE_NONE;
const ReliquaryFilterLevelState ReliquaryFilterLevelState_MAX = RELIQUARY_FILTER_LEVEL_STATE_NOT_FULL_LEVEL;
const int ReliquaryFilterLevelState_ARRAYSIZE = ReliquaryFilterLevelState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReliquaryFilterLevelState_descriptor();
inline const ::std::string& ReliquaryFilterLevelState_Name(ReliquaryFilterLevelState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReliquaryFilterLevelState_descriptor(), value);
}
inline bool ReliquaryFilterLevelState_Parse(
    const ::std::string& name, ReliquaryFilterLevelState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReliquaryFilterLevelState>(
    ReliquaryFilterLevelState_descriptor(), name, value);
}
enum ReliquaryFilterWearedState {
  RELIQUARY_FILTER_WEARED_STATE_NONE = 0,
  RELIQUARY_FILTER_WEARED_STATE_HAS_BEEN_WEARED = 1,
  RELIQUARY_FILTER_WEARED_STATE_HAS_NOT_BEEN_WEARED = 2,
  ReliquaryFilterWearedState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReliquaryFilterWearedState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReliquaryFilterWearedState_IsValid(int value);
const ReliquaryFilterWearedState ReliquaryFilterWearedState_MIN = RELIQUARY_FILTER_WEARED_STATE_NONE;
const ReliquaryFilterWearedState ReliquaryFilterWearedState_MAX = RELIQUARY_FILTER_WEARED_STATE_HAS_NOT_BEEN_WEARED;
const int ReliquaryFilterWearedState_ARRAYSIZE = ReliquaryFilterWearedState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReliquaryFilterWearedState_descriptor();
inline const ::std::string& ReliquaryFilterWearedState_Name(ReliquaryFilterWearedState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReliquaryFilterWearedState_descriptor(), value);
}
inline bool ReliquaryFilterWearedState_Parse(
    const ::std::string& name, ReliquaryFilterWearedState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReliquaryFilterWearedState>(
    ReliquaryFilterWearedState_descriptor(), name, value);
}
enum AbilityScalarType {
  ABILITY_SCALAR_TYPE_UNKNOW = 0,
  ABILITY_SCALAR_TYPE_FLOAT = 1,
  ABILITY_SCALAR_TYPE_INT = 2,
  ABILITY_SCALAR_TYPE_BOOL = 3,
  ABILITY_SCALAR_TYPE_TRIGGER = 4,
  ABILITY_SCALAR_TYPE_STRING = 5,
  ABILITY_SCALAR_TYPE_UINT = 6,
  AbilityScalarType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbilityScalarType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbilityScalarType_IsValid(int value);
const AbilityScalarType AbilityScalarType_MIN = ABILITY_SCALAR_TYPE_UNKNOW;
const AbilityScalarType AbilityScalarType_MAX = ABILITY_SCALAR_TYPE_UINT;
const int AbilityScalarType_ARRAYSIZE = AbilityScalarType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbilityScalarType_descriptor();
inline const ::std::string& AbilityScalarType_Name(AbilityScalarType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbilityScalarType_descriptor(), value);
}
inline bool AbilityScalarType_Parse(
    const ::std::string& name, AbilityScalarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbilityScalarType>(
    AbilityScalarType_descriptor(), name, value);
}
enum MotionState {
  MOTION_NONE = 0,
  MOTION_RESET = 1,
  MOTION_STANDBY = 2,
  MOTION_STANDBY_MOVE = 3,
  MOTION_WALK = 4,
  MOTION_RUN = 5,
  MOTION_DASH = 6,
  MOTION_CLIMB = 7,
  MOTION_CLIMB_JUMP = 8,
  MOTION_STANDBY_TO_CLIMB = 9,
  MOTION_FIGHT = 10,
  MOTION_JUMP = 11,
  MOTION_DROP = 12,
  MOTION_FLY = 13,
  MOTION_SWIM_MOVE = 14,
  MOTION_SWIM_IDLE = 15,
  MOTION_SWIM_DASH = 16,
  MOTION_SWIM_JUMP = 17,
  MOTION_SLIP = 18,
  MOTION_GO_UPSTAIRS = 19,
  MOTION_FALL_ON_GROUND = 20,
  MOTION_JUMP_UP_WALL_FOR_STANDBY = 21,
  MOTION_JUMP_OFF_WALL = 22,
  MOTION_POWERED_FLY = 23,
  MOTION_LADDER_IDLE = 24,
  MOTION_LADDER_MOVE = 25,
  MOTION_LADDER_SLIP = 26,
  MOTION_STANDBY_TO_LADDER = 27,
  MOTION_LADDER_TO_STANDBY = 28,
  MOTION_DANGER_STANDBY = 29,
  MOTION_DANGER_STANDBY_MOVE = 30,
  MOTION_DANGER_WALK = 31,
  MOTION_DANGER_RUN = 32,
  MOTION_DANGER_DASH = 33,
  MOTION_CROUCH_IDLE = 34,
  MOTION_CROUCH_MOVE = 35,
  MOTION_CROUCH_ROLL = 36,
  MOTION_NOTIFY = 37,
  MOTION_LAND_SPEED = 38,
  MOTION_MOVE_FAIL_ACK = 39,
  MOTION_WATERFALL = 40,
  MOTION_DASH_BEFORE_SHAKE = 41,
  MOTION_SIT_IDLE = 42,
  MOTION_FORCE_SET_POS = 43,
  MOTION_QUEST_FORCE_DRAG = 44,
  MOTION_FOLLOW_ROUTE = 45,
  MOTION_SKIFF_BOARDING = 46,
  MOTION_SKIFF_NORMAL = 47,
  MOTION_SKIFF_DASH = 48,
  MOTION_SKIFF_POWERED_DASH = 49,
  MOTION_DESTROY_VEHICLE = 50,
  MOTION_FLY_IDLE = 51,
  MOTION_FLY_SLOW = 52,
  MOTION_FLY_FAST = 53,
  MOTION_AIM_MOVE = 54,
  MOTION_AIR_COMPENSATION = 55,
  MOTION_NUM = 56,
  MotionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MotionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MotionState_IsValid(int value);
const MotionState MotionState_MIN = MOTION_NONE;
const MotionState MotionState_MAX = MOTION_NUM;
const int MotionState_ARRAYSIZE = MotionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionState_descriptor();
inline const ::std::string& MotionState_Name(MotionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionState_descriptor(), value);
}
inline bool MotionState_Parse(
    const ::std::string& name, MotionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionState>(
    MotionState_descriptor(), name, value);
}
enum ProtEntityType {
  PROT_ENTITY_NONE = 0,
  PROT_ENTITY_AVATAR = 1,
  PROT_ENTITY_MONSTER = 2,
  PROT_ENTITY_NPC = 3,
  PROT_ENTITY_GADGET = 4,
  PROT_ENTITY_REGION = 5,
  PROT_ENTITY_WEAPON = 6,
  PROT_ENTITY_WEATHER = 7,
  PROT_ENTITY_SCENE = 8,
  PROT_ENTITY_TEAM = 9,
  PROT_ENTITY_MASSIVE_ENTITY = 10,
  PROT_ENTITY_MP_LEVEL = 11,
  PROT_ENTITY_PLAY_TEAM_ENTITY = 12,
  PROT_ENTITY_EYE_POINT = 13,
  PROT_ENTITY_MAX = 14,
  ProtEntityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProtEntityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProtEntityType_IsValid(int value);
const ProtEntityType ProtEntityType_MIN = PROT_ENTITY_NONE;
const ProtEntityType ProtEntityType_MAX = PROT_ENTITY_MAX;
const int ProtEntityType_ARRAYSIZE = ProtEntityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtEntityType_descriptor();
inline const ::std::string& ProtEntityType_Name(ProtEntityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtEntityType_descriptor(), value);
}
inline bool ProtEntityType_Parse(
    const ::std::string& name, ProtEntityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtEntityType>(
    ProtEntityType_descriptor(), name, value);
}
enum NpcTalkState {
  NPC_TALK_NONE = 0,
  NPC_TALK_AUTO = 1,
  NPC_TALK_MANUAL = 2,
  NpcTalkState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NpcTalkState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NpcTalkState_IsValid(int value);
const NpcTalkState NpcTalkState_MIN = NPC_TALK_NONE;
const NpcTalkState NpcTalkState_MAX = NPC_TALK_MANUAL;
const int NpcTalkState_ARRAYSIZE = NpcTalkState_MAX + 1;

const ::google::protobuf::EnumDescriptor* NpcTalkState_descriptor();
inline const ::std::string& NpcTalkState_Name(NpcTalkState value) {
  return ::google::protobuf::internal::NameOfEnum(
    NpcTalkState_descriptor(), value);
}
inline bool NpcTalkState_Parse(
    const ::std::string& name, NpcTalkState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NpcTalkState>(
    NpcTalkState_descriptor(), name, value);
}
enum VehicleSlot {
  VEHICLE_SLOT_OPERATOR = 0,
  VehicleSlot_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VehicleSlot_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VehicleSlot_IsValid(int value);
const VehicleSlot VehicleSlot_MIN = VEHICLE_SLOT_OPERATOR;
const VehicleSlot VehicleSlot_MAX = VEHICLE_SLOT_OPERATOR;
const int VehicleSlot_ARRAYSIZE = VehicleSlot_MAX + 1;

const ::google::protobuf::EnumDescriptor* VehicleSlot_descriptor();
inline const ::std::string& VehicleSlot_Name(VehicleSlot value) {
  return ::google::protobuf::internal::NameOfEnum(
    VehicleSlot_descriptor(), value);
}
inline bool VehicleSlot_Parse(
    const ::std::string& name, VehicleSlot* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VehicleSlot>(
    VehicleSlot_descriptor(), name, value);
}
enum MonsterBornType {
  MONSTER_BORN_NONE = 0,
  MONSTER_BORN_DEFAULT = 1,
  MONSTER_BORN_RANDOM = 2,
  MonsterBornType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterBornType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterBornType_IsValid(int value);
const MonsterBornType MonsterBornType_MIN = MONSTER_BORN_NONE;
const MonsterBornType MonsterBornType_MAX = MONSTER_BORN_RANDOM;
const int MonsterBornType_ARRAYSIZE = MonsterBornType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterBornType_descriptor();
inline const ::std::string& MonsterBornType_Name(MonsterBornType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterBornType_descriptor(), value);
}
inline bool MonsterBornType_Parse(
    const ::std::string& name, MonsterBornType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterBornType>(
    MonsterBornType_descriptor(), name, value);
}
enum GadgetBornType {
  GADGET_BORN_NONE = 0,
  GADGET_BORN_IN_AIR = 1,
  GADGET_BORN_PLAYER = 2,
  GADGET_BORN_MONSTER_HIT = 3,
  GADGET_BORN_MONSTER_DIE = 4,
  GADGET_BORN_GADGET = 5,
  GADGET_BORN_GROUND = 6,
  GadgetBornType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetBornType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetBornType_IsValid(int value);
const GadgetBornType GadgetBornType_MIN = GADGET_BORN_NONE;
const GadgetBornType GadgetBornType_MAX = GADGET_BORN_GROUND;
const int GadgetBornType_ARRAYSIZE = GadgetBornType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetBornType_descriptor();
inline const ::std::string& GadgetBornType_Name(GadgetBornType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetBornType_descriptor(), value);
}
inline bool GadgetBornType_Parse(
    const ::std::string& name, GadgetBornType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetBornType>(
    GadgetBornType_descriptor(), name, value);
}
enum MovingPlatformType {
  MOVING_PLATFORM_NONE = 0,
  MOVING_PLATFORM_USE_CONFIG = 1,
  MOVING_PLATFORM_ABILITY = 2,
  MOVING_PLATFORM_ROUTE = 3,
  MovingPlatformType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MovingPlatformType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MovingPlatformType_IsValid(int value);
const MovingPlatformType MovingPlatformType_MIN = MOVING_PLATFORM_NONE;
const MovingPlatformType MovingPlatformType_MAX = MOVING_PLATFORM_ROUTE;
const int MovingPlatformType_ARRAYSIZE = MovingPlatformType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MovingPlatformType_descriptor();
inline const ::std::string& MovingPlatformType_Name(MovingPlatformType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MovingPlatformType_descriptor(), value);
}
inline bool MovingPlatformType_Parse(
    const ::std::string& name, MovingPlatformType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MovingPlatformType>(
    MovingPlatformType_descriptor(), name, value);
}
enum GadgetPlayType {
  GADGET_PLAY_NONE = 0,
  GADGET_PLAY_CRUSIBLE = 1,
  GadgetPlayType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetPlayType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetPlayType_IsValid(int value);
const GadgetPlayType GadgetPlayType_MIN = GADGET_PLAY_NONE;
const GadgetPlayType GadgetPlayType_MAX = GADGET_PLAY_CRUSIBLE;
const int GadgetPlayType_ARRAYSIZE = GadgetPlayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetPlayType_descriptor();
inline const ::std::string& GadgetPlayType_Name(GadgetPlayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetPlayType_descriptor(), value);
}
inline bool GadgetPlayType_Parse(
    const ::std::string& name, GadgetPlayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetPlayType>(
    GadgetPlayType_descriptor(), name, value);
}
enum FoundationStatus {
  FOUNDATION_STATUS_NONE = 0,
  FOUNDATION_STATUS_INIT = 1,
  FOUNDATION_STATUS_BUILDING = 2,
  FOUNDATION_STATUS_BUILT = 3,
  FoundationStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FoundationStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FoundationStatus_IsValid(int value);
const FoundationStatus FoundationStatus_MIN = FOUNDATION_STATUS_NONE;
const FoundationStatus FoundationStatus_MAX = FOUNDATION_STATUS_BUILT;
const int FoundationStatus_ARRAYSIZE = FoundationStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* FoundationStatus_descriptor();
inline const ::std::string& FoundationStatus_Name(FoundationStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    FoundationStatus_descriptor(), value);
}
inline bool FoundationStatus_Parse(
    const ::std::string& name, FoundationStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FoundationStatus>(
    FoundationStatus_descriptor(), name, value);
}
enum ChangHpReason {
  CHANGE_HP_NONE = 0,
  CHANGE_HP_SUB_AVATAR = 1,
  CHANGE_HP_SUB_MONSTER = 2,
  CHANGE_HP_SUB_GEAR = 3,
  CHANGE_HP_SUB_ENVIR = 4,
  CHANGE_HP_SUB_FALL = 5,
  CHANGE_HP_SUB_DRAWN = 6,
  CHANGE_HP_SUB_ABYSS = 7,
  CHANGE_HP_SUB_ABILITY = 8,
  CHANGE_HP_SUB_SUMMON = 9,
  CHANGE_HP_SUB_SCRIPT = 10,
  CHANGE_HP_SUB_GM = 11,
  CHANGE_HP_SUB_KILL_SELF = 12,
  CHANGE_HP_SUB_CLIMATE_COLD = 13,
  CHANGE_HP_SUB_STORM_LIGHTNING = 14,
  CHANGE_HP_SUB_KILL_SERVER_GADGET = 15,
  CHANGE_HP_SUB_REPLACE = 16,
  CHANGE_HP_SUB_PLAYER_LEAVE = 17,
  CHANGE_HP_ATTACK_BY_ENERGY = 18,
  CHANGE_HP_ATTACK_BY_RECYCLE = 19,
  CHANGE_HP_BY_LUA = 51,
  CHANGE_HP_ADD_ABILITY = 101,
  CHANGE_HP_ADD_ITEM = 102,
  CHANGE_HP_ADD_REVIVE = 103,
  CHANGE_HP_ADD_UPGRADE = 104,
  CHANGE_HP_ADD_STATUE = 105,
  CHANGE_HP_ADD_BACKGROUND = 106,
  CHANGE_HP_ADD_GM = 107,
  CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY = 108,
  CHANGE_HP_ADD_ROUGUELIKE_SPRING = 109,
  ChangHpReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangHpReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangHpReason_IsValid(int value);
const ChangHpReason ChangHpReason_MIN = CHANGE_HP_NONE;
const ChangHpReason ChangHpReason_MAX = CHANGE_HP_ADD_ROUGUELIKE_SPRING;
const int ChangHpReason_ARRAYSIZE = ChangHpReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangHpReason_descriptor();
inline const ::std::string& ChangHpReason_Name(ChangHpReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangHpReason_descriptor(), value);
}
inline bool ChangHpReason_Parse(
    const ::std::string& name, ChangHpReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangHpReason>(
    ChangHpReason_descriptor(), name, value);
}
enum PlayerDieType {
  PLAYER_DIE_NONE = 0,
  PLAYER_DIE_KILL_BY_MONSTER = 1,
  PLAYER_DIE_KILL_BY_GEAR = 2,
  PLAYER_DIE_FALL = 3,
  PLAYER_DIE_DRAWN = 4,
  PLAYER_DIE_ABYSS = 5,
  PLAYER_DIE_GM = 6,
  PLAYER_DIE_CLIMATE_COLD = 7,
  PLAYER_DIE_STORM_LIGHTING = 8,
  PlayerDieType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerDieType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerDieType_IsValid(int value);
const PlayerDieType PlayerDieType_MIN = PLAYER_DIE_NONE;
const PlayerDieType PlayerDieType_MAX = PLAYER_DIE_STORM_LIGHTING;
const int PlayerDieType_ARRAYSIZE = PlayerDieType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerDieType_descriptor();
inline const ::std::string& PlayerDieType_Name(PlayerDieType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerDieType_descriptor(), value);
}
inline bool PlayerDieType_Parse(
    const ::std::string& name, PlayerDieType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerDieType>(
    PlayerDieType_descriptor(), name, value);
}
enum PlayerDieOption {
  DIE_OPT_NONE = 0,
  DIE_OPT_REPLAY = 1,
  DIE_OPT_CANCEL = 2,
  DIE_OPT_REVIVE = 3,
  PlayerDieOption_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerDieOption_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerDieOption_IsValid(int value);
const PlayerDieOption PlayerDieOption_MIN = DIE_OPT_NONE;
const PlayerDieOption PlayerDieOption_MAX = DIE_OPT_REVIVE;
const int PlayerDieOption_ARRAYSIZE = PlayerDieOption_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerDieOption_descriptor();
inline const ::std::string& PlayerDieOption_Name(PlayerDieOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerDieOption_descriptor(), value);
}
inline bool PlayerDieOption_Parse(
    const ::std::string& name, PlayerDieOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerDieOption>(
    PlayerDieOption_descriptor(), name, value);
}
enum FetterState {
  FETTER_STATE_NONE = 0,
  FETTER_STATE_NOT_OPEN = 1,
  FETTER_STATE_OPEN = 2,
  FETTER_STATE_FINISH = 3,
  FETTER_STATE_CONCEAL = 4,
  FetterState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FetterState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FetterState_IsValid(int value);
const FetterState FetterState_MIN = FETTER_STATE_NONE;
const FetterState FetterState_MAX = FETTER_STATE_CONCEAL;
const int FetterState_ARRAYSIZE = FetterState_MAX + 1;

const ::google::protobuf::EnumDescriptor* FetterState_descriptor();
inline const ::std::string& FetterState_Name(FetterState value) {
  return ::google::protobuf::internal::NameOfEnum(
    FetterState_descriptor(), value);
}
inline bool FetterState_Parse(
    const ::std::string& name, FetterState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FetterState>(
    FetterState_descriptor(), name, value);
}
enum AvatarExpeditionState {
  AVATAR_EXPEDITION_NONE = 0,
  AVATAR_EXPEDITION_DOING = 1,
  AVATAR_EXPEDITION_FINISH_WAIT_REWARD = 2,
  AVATAR_EXPEDITION_CALLBACK_WAIT_REWARD = 3,
  AVATAR_EXPEDITION_LOCKED = 4,
  AvatarExpeditionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionState_IsValid(int value);
const AvatarExpeditionState AvatarExpeditionState_MIN = AVATAR_EXPEDITION_NONE;
const AvatarExpeditionState AvatarExpeditionState_MAX = AVATAR_EXPEDITION_LOCKED;
const int AvatarExpeditionState_ARRAYSIZE = AvatarExpeditionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionState_descriptor();
inline const ::std::string& AvatarExpeditionState_Name(AvatarExpeditionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionState_descriptor(), value);
}
inline bool AvatarExpeditionState_Parse(
    const ::std::string& name, AvatarExpeditionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionState>(
    AvatarExpeditionState_descriptor(), name, value);
}
enum AvatarType {
  AVATAR_TYPE_NONE = 0,
  AVATAR_TYPE_FORMAL = 1,
  AVATAR_TYPE_TRIAL = 2,
  AVATAR_TYPE_MIRROR = 3,
  AvatarType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarType_IsValid(int value);
const AvatarType AvatarType_MIN = AVATAR_TYPE_NONE;
const AvatarType AvatarType_MAX = AVATAR_TYPE_MIRROR;
const int AvatarType_ARRAYSIZE = AvatarType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarType_descriptor();
inline const ::std::string& AvatarType_Name(AvatarType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarType_descriptor(), value);
}
inline bool AvatarType_Parse(
    const ::std::string& name, AvatarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarType>(
    AvatarType_descriptor(), name, value);
}
enum EventTriggerType {
  EVENT_TRIGGER_NONE = 0,
  EVENT_TRIGGER_ENTER_FORCE = 1,
  EventTriggerType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EventTriggerType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EventTriggerType_IsValid(int value);
const EventTriggerType EventTriggerType_MIN = EVENT_TRIGGER_NONE;
const EventTriggerType EventTriggerType_MAX = EVENT_TRIGGER_ENTER_FORCE;
const int EventTriggerType_ARRAYSIZE = EventTriggerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventTriggerType_descriptor();
inline const ::std::string& EventTriggerType_Name(EventTriggerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventTriggerType_descriptor(), value);
}
inline bool EventTriggerType_Parse(
    const ::std::string& name, EventTriggerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventTriggerType>(
    EventTriggerType_descriptor(), name, value);
}
enum MailCollectState {
  MAIL_COLLECTIBLE_UNKONW = 0,
  MAIL_NOT_COLLECTIBLE = 1,
  MAIL_COLLECTIBLE_UNCOLLECTED = 2,
  MAIL_COLLECTIBLE_COLLECTED = 3,
  MailCollectState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MailCollectState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MailCollectState_IsValid(int value);
const MailCollectState MailCollectState_MIN = MAIL_COLLECTIBLE_UNKONW;
const MailCollectState MailCollectState_MAX = MAIL_COLLECTIBLE_COLLECTED;
const int MailCollectState_ARRAYSIZE = MailCollectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailCollectState_descriptor();
inline const ::std::string& MailCollectState_Name(MailCollectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailCollectState_descriptor(), value);
}
inline bool MailCollectState_Parse(
    const ::std::string& name, MailCollectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailCollectState>(
    MailCollectState_descriptor(), name, value);
}
enum MpSettingType {
  MP_SETTING_NO_ENTER = 0,
  MP_SETTING_ENTER_FREELY = 1,
  MP_SETTING_ENTER_AFTER_APPLY = 2,
  MpSettingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MpSettingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MpSettingType_IsValid(int value);
const MpSettingType MpSettingType_MIN = MP_SETTING_NO_ENTER;
const MpSettingType MpSettingType_MAX = MP_SETTING_ENTER_AFTER_APPLY;
const int MpSettingType_ARRAYSIZE = MpSettingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MpSettingType_descriptor();
inline const ::std::string& MpSettingType_Name(MpSettingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MpSettingType_descriptor(), value);
}
inline bool MpSettingType_Parse(
    const ::std::string& name, MpSettingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MpSettingType>(
    MpSettingType_descriptor(), name, value);
}
enum MathExpressionType {
  MATH_EXPR_NONE = 0,
  MATH_EXPR_LEVEL = 1,
  MATH_EXPR_REGISTER_TIME = 2,
  MATH_EXPR_LAST_LOGIN_TIME = 3,
  MATH_EXPR_TOTAL_LOGIN_DAYS = 4,
  MATH_EXPR_PLATFORM = 5,
  MathExpressionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MathExpressionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MathExpressionType_IsValid(int value);
const MathExpressionType MathExpressionType_MIN = MATH_EXPR_NONE;
const MathExpressionType MathExpressionType_MAX = MATH_EXPR_PLATFORM;
const int MathExpressionType_ARRAYSIZE = MathExpressionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MathExpressionType_descriptor();
inline const ::std::string& MathExpressionType_Name(MathExpressionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MathExpressionType_descriptor(), value);
}
inline bool MathExpressionType_Parse(
    const ::std::string& name, MathExpressionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MathExpressionType>(
    MathExpressionType_descriptor(), name, value);
}
enum LoginRewardConfigType {
  LOGIN_REWARD_IMMEDIDATE = 0,
  LOGIN_REWARD_FIRST = 1,
  LoginRewardConfigType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginRewardConfigType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginRewardConfigType_IsValid(int value);
const LoginRewardConfigType LoginRewardConfigType_MIN = LOGIN_REWARD_IMMEDIDATE;
const LoginRewardConfigType LoginRewardConfigType_MAX = LOGIN_REWARD_FIRST;
const int LoginRewardConfigType_ARRAYSIZE = LoginRewardConfigType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginRewardConfigType_descriptor();
inline const ::std::string& LoginRewardConfigType_Name(LoginRewardConfigType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginRewardConfigType_descriptor(), value);
}
inline bool LoginRewardConfigType_Parse(
    const ::std::string& name, LoginRewardConfigType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginRewardConfigType>(
    LoginRewardConfigType_descriptor(), name, value);
}
enum LanguageType {
  LANGUAGE_NONE = 0,
  LANGUAGE_EN = 1,
  LANGUAGE_SC = 2,
  LANGUAGE_TC = 3,
  LANGUAGE_FR = 4,
  LANGUAGE_DE = 5,
  LANGUAGE_ES = 6,
  LANGUAGE_PT = 7,
  LANGUAGE_RU = 8,
  LANGUAGE_JP = 9,
  LANGUAGE_KR = 10,
  LANGUAGE_TH = 11,
  LANGUAGE_VN = 12,
  LANGUAGE_ID = 13,
  LANGUAGE_TR = 14,
  LANGUAGE_IT = 15,
  LanguageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LanguageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LanguageType_IsValid(int value);
const LanguageType LanguageType_MIN = LANGUAGE_NONE;
const LanguageType LanguageType_MAX = LANGUAGE_IT;
const int LanguageType_ARRAYSIZE = LanguageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LanguageType_descriptor();
inline const ::std::string& LanguageType_Name(LanguageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LanguageType_descriptor(), value);
}
inline bool LanguageType_Parse(
    const ::std::string& name, LanguageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LanguageType>(
    LanguageType_descriptor(), name, value);
}
enum PlatformType {
  EDITOR = 0,
  IOS = 1,
  ANDROID = 2,
  PC = 3,
  PS4 = 4,
  SERVER = 5,
  CLOUD_ANDROID = 6,
  CLOUD_IOS = 7,
  PS5 = 8,
  CLOUD_WEB = 9,
  CLOUD_TV = 10,
  CLOUD_MAC = 11,
  CLOUD_PC = 12,
  CLOUD_THIRD_PARTY_MOBILE = 13,
  CLOUD_THIRD_PARTY_PC = 14,
  PlatformType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformType_IsValid(int value);
const PlatformType PlatformType_MIN = EDITOR;
const PlatformType PlatformType_MAX = CLOUD_THIRD_PARTY_PC;
const int PlatformType_ARRAYSIZE = PlatformType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformType_descriptor();
inline const ::std::string& PlatformType_Name(PlatformType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformType_descriptor(), value);
}
inline bool PlatformType_Parse(
    const ::std::string& name, PlatformType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformType>(
    PlatformType_descriptor(), name, value);
}
enum MapMarkPointType {
  NPC = 0,
  QUEST = 1,
  SPECIAL = 2,
  MINE = 3,
  COLLECTION = 4,
  MONSTER = 5,
  FISH_POOL = 6,
  MapMarkPointType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MapMarkPointType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MapMarkPointType_IsValid(int value);
const MapMarkPointType MapMarkPointType_MIN = NPC;
const MapMarkPointType MapMarkPointType_MAX = FISH_POOL;
const int MapMarkPointType_ARRAYSIZE = MapMarkPointType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MapMarkPointType_descriptor();
inline const ::std::string& MapMarkPointType_Name(MapMarkPointType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MapMarkPointType_descriptor(), value);
}
inline bool MapMarkPointType_Parse(
    const ::std::string& name, MapMarkPointType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapMarkPointType>(
    MapMarkPointType_descriptor(), name, value);
}
enum MapMarkFromType {
  MAP_MARK_FROM_TYPE_NOE = 0,
  MAP_MARK_FROM_TYPE_MONSTER = 1,
  MAP_MARK_FROM_TYPE_QUEST = 2,
  MapMarkFromType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MapMarkFromType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MapMarkFromType_IsValid(int value);
const MapMarkFromType MapMarkFromType_MIN = MAP_MARK_FROM_TYPE_NOE;
const MapMarkFromType MapMarkFromType_MAX = MAP_MARK_FROM_TYPE_QUEST;
const int MapMarkFromType_ARRAYSIZE = MapMarkFromType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MapMarkFromType_descriptor();
inline const ::std::string& MapMarkFromType_Name(MapMarkFromType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MapMarkFromType_descriptor(), value);
}
inline bool MapMarkFromType_Parse(
    const ::std::string& name, MapMarkFromType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapMarkFromType>(
    MapMarkFromType_descriptor(), name, value);
}
enum DungeonCandidateTeamInviteState {
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_NONE = 0,
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_SEND = 1,
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_ACCEPT = 2,
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_REFUSE = 3,
  DungeonCandidateTeamInviteState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DungeonCandidateTeamInviteState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DungeonCandidateTeamInviteState_IsValid(int value);
const DungeonCandidateTeamInviteState DungeonCandidateTeamInviteState_MIN = DUNGEON_CANDIDATE_TEAM_INVITE_STATE_NONE;
const DungeonCandidateTeamInviteState DungeonCandidateTeamInviteState_MAX = DUNGEON_CANDIDATE_TEAM_INVITE_STATE_REFUSE;
const int DungeonCandidateTeamInviteState_ARRAYSIZE = DungeonCandidateTeamInviteState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DungeonCandidateTeamInviteState_descriptor();
inline const ::std::string& DungeonCandidateTeamInviteState_Name(DungeonCandidateTeamInviteState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DungeonCandidateTeamInviteState_descriptor(), value);
}
inline bool DungeonCandidateTeamInviteState_Parse(
    const ::std::string& name, DungeonCandidateTeamInviteState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DungeonCandidateTeamInviteState>(
    DungeonCandidateTeamInviteState_descriptor(), name, value);
}
enum MonsterGuestBanDrop {
  MONSTER_GUEST_BAN_NONE = 0,
  MONSTER_GUEST_BAN_DIE_EXP = 1,
  MONSTER_GUEST_BAN_DIE_LUA = 2,
  MONSTER_GUEST_BAN_DIE_EXCEL = 4,
  MONSTER_GUEST_BAN_DIE_ACTIVITY = 8,
  MONSTER_GUEST_BAN_DROP_HP = 16,
  MONSTER_GUEST_BAN_SUBFIELD = 32,
  MonsterGuestBanDrop_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterGuestBanDrop_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterGuestBanDrop_IsValid(int value);
const MonsterGuestBanDrop MonsterGuestBanDrop_MIN = MONSTER_GUEST_BAN_NONE;
const MonsterGuestBanDrop MonsterGuestBanDrop_MAX = MONSTER_GUEST_BAN_SUBFIELD;
const int MonsterGuestBanDrop_ARRAYSIZE = MonsterGuestBanDrop_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterGuestBanDrop_descriptor();
inline const ::std::string& MonsterGuestBanDrop_Name(MonsterGuestBanDrop value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterGuestBanDrop_descriptor(), value);
}
inline bool MonsterGuestBanDrop_Parse(
    const ::std::string& name, MonsterGuestBanDrop* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterGuestBanDrop>(
    MonsterGuestBanDrop_descriptor(), name, value);
}
enum GadgetGuestBanDrop {
  GADGET_GUEST_BAN_NONE = 0,
  GADGET_GUEST_BAN_DIE_LUA = 1,
  GADGET_GUEST_BAN_SUBFIELD = 2,
  GadgetGuestBanDrop_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetGuestBanDrop_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetGuestBanDrop_IsValid(int value);
const GadgetGuestBanDrop GadgetGuestBanDrop_MIN = GADGET_GUEST_BAN_NONE;
const GadgetGuestBanDrop GadgetGuestBanDrop_MAX = GADGET_GUEST_BAN_SUBFIELD;
const int GadgetGuestBanDrop_ARRAYSIZE = GadgetGuestBanDrop_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetGuestBanDrop_descriptor();
inline const ::std::string& GadgetGuestBanDrop_Name(GadgetGuestBanDrop value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetGuestBanDrop_descriptor(), value);
}
inline bool GadgetGuestBanDrop_Parse(
    const ::std::string& name, GadgetGuestBanDrop* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetGuestBanDrop>(
    GadgetGuestBanDrop_descriptor(), name, value);
}
enum GroupLoadStrategy {
  GROUP_LOAD_NONE = 0,
  GROUP_LOAD_SINGLE = 1,
  GROUP_LOAD_MULTI = 2,
  GROUP_LOAD_ALL = 3,
  GroupLoadStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupLoadStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupLoadStrategy_IsValid(int value);
const GroupLoadStrategy GroupLoadStrategy_MIN = GROUP_LOAD_NONE;
const GroupLoadStrategy GroupLoadStrategy_MAX = GROUP_LOAD_ALL;
const int GroupLoadStrategy_ARRAYSIZE = GroupLoadStrategy_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupLoadStrategy_descriptor();
inline const ::std::string& GroupLoadStrategy_Name(GroupLoadStrategy value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupLoadStrategy_descriptor(), value);
}
inline bool GroupLoadStrategy_Parse(
    const ::std::string& name, GroupLoadStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupLoadStrategy>(
    GroupLoadStrategy_descriptor(), name, value);
}
enum MatchType {
  MATCH_TYPE_NONE = 0,
  MATCH_TYPE_DUNGEON = 1,
  MATCH_TYPE_MP_PLAY = 2,
  MATCH_TYPE_MECHANICUS = 3,
  MATCH_TYPE_GENERAL = 4,
  MATCH_TYPE_GCG = 5,
  MatchType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MatchType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MatchType_IsValid(int value);
const MatchType MatchType_MIN = MATCH_TYPE_NONE;
const MatchType MatchType_MAX = MATCH_TYPE_GCG;
const int MatchType_ARRAYSIZE = MatchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchType_descriptor();
inline const ::std::string& MatchType_Name(MatchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchType_descriptor(), value);
}
inline bool MatchType_Parse(
    const ::std::string& name, MatchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchType>(
    MatchType_descriptor(), name, value);
}
enum MpPlayType {
  MP_PLAY_NONE = 0,
  MP_PLAY_DUNGEON = 1,
  MP_PLAY_CRUCIBLE = 2,
  MpPlayType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MpPlayType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MpPlayType_IsValid(int value);
const MpPlayType MpPlayType_MIN = MP_PLAY_NONE;
const MpPlayType MpPlayType_MAX = MP_PLAY_CRUCIBLE;
const int MpPlayType_ARRAYSIZE = MpPlayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MpPlayType_descriptor();
inline const ::std::string& MpPlayType_Name(MpPlayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MpPlayType_descriptor(), value);
}
inline bool MpPlayType_Parse(
    const ::std::string& name, MpPlayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MpPlayType>(
    MpPlayType_descriptor(), name, value);
}
enum OpActivityType {
  OP_ACTIVITY_NONE = 0,
  OP_ACTIVITY_SIGN_IN = 1,
  OP_ACTIVITY_BONUS = 2,
  OP_ACTIVITY_TRAVEL_BUSINESS = 3,
  OP_ACTIVITY_CRUCIBLE = 4,
  OpActivityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpActivityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpActivityType_IsValid(int value);
const OpActivityType OpActivityType_MIN = OP_ACTIVITY_NONE;
const OpActivityType OpActivityType_MAX = OP_ACTIVITY_CRUCIBLE;
const int OpActivityType_ARRAYSIZE = OpActivityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpActivityType_descriptor();
inline const ::std::string& OpActivityType_Name(OpActivityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpActivityType_descriptor(), value);
}
inline bool OpActivityType_Parse(
    const ::std::string& name, OpActivityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpActivityType>(
    OpActivityType_descriptor(), name, value);
}
enum MatchReason {
  MATCH_NONE = 0,
  MATCH_FINISH = 1,
  MATCH_PLAYER_CANCEL = 2,
  MATCH_TIMEOUT = 3,
  MATCH_PLAYER_CONFIRM = 4,
  MATCH_FAILED = 5,
  MATCH_SYSTEM_ERROR = 6,
  MATCH_INTERRUPTED = 7,
  MATCH_MP_UNAVAILABLE = 8,
  MATCH_CONFIRM_TIMEOUT = 9,
  MatchReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MatchReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MatchReason_IsValid(int value);
const MatchReason MatchReason_MIN = MATCH_NONE;
const MatchReason MatchReason_MAX = MATCH_CONFIRM_TIMEOUT;
const int MatchReason_ARRAYSIZE = MatchReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchReason_descriptor();
inline const ::std::string& MatchReason_Name(MatchReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchReason_descriptor(), value);
}
inline bool MatchReason_Parse(
    const ::std::string& name, MatchReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchReason>(
    MatchReason_descriptor(), name, value);
}
enum LuaShellNotifyType {
  LUASHELL_NOTIFY = 0,
  LUASHELL_HIDE = 1,
  LuaShellNotifyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LuaShellNotifyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LuaShellNotifyType_IsValid(int value);
const LuaShellNotifyType LuaShellNotifyType_MIN = LUASHELL_NOTIFY;
const LuaShellNotifyType LuaShellNotifyType_MAX = LUASHELL_HIDE;
const int LuaShellNotifyType_ARRAYSIZE = LuaShellNotifyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LuaShellNotifyType_descriptor();
inline const ::std::string& LuaShellNotifyType_Name(LuaShellNotifyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LuaShellNotifyType_descriptor(), value);
}
inline bool LuaShellNotifyType_Parse(
    const ::std::string& name, LuaShellNotifyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LuaShellNotifyType>(
    LuaShellNotifyType_descriptor(), name, value);
}
enum LuaShellType {
  LUASHELL_NONE = 0,
  LUASHELL_NORMAL = 1,
  LUASHELL_SECURITY = 2,
  LUASHELL_SHELL_CODE = 3,
  LuaShellType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LuaShellType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LuaShellType_IsValid(int value);
const LuaShellType LuaShellType_MIN = LUASHELL_NONE;
const LuaShellType LuaShellType_MAX = LUASHELL_SHELL_CODE;
const int LuaShellType_ARRAYSIZE = LuaShellType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LuaShellType_descriptor();
inline const ::std::string& LuaShellType_Name(LuaShellType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LuaShellType_descriptor(), value);
}
inline bool LuaShellType_Parse(
    const ::std::string& name, LuaShellType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LuaShellType>(
    LuaShellType_descriptor(), name, value);
}
enum SalesmanStatusType {
  SALESMAN_STATUS_NONE = 0,
  SALESMAN_STATUS_UNSTARTED = 1,
  SALESMAN_STATUS_STARTED = 2,
  SALESMAN_STATUS_DELIVERED = 3,
  SalesmanStatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SalesmanStatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SalesmanStatusType_IsValid(int value);
const SalesmanStatusType SalesmanStatusType_MIN = SALESMAN_STATUS_NONE;
const SalesmanStatusType SalesmanStatusType_MAX = SALESMAN_STATUS_DELIVERED;
const int SalesmanStatusType_ARRAYSIZE = SalesmanStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SalesmanStatusType_descriptor();
inline const ::std::string& SalesmanStatusType_Name(SalesmanStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SalesmanStatusType_descriptor(), value);
}
inline bool SalesmanStatusType_Parse(
    const ::std::string& name, SalesmanStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SalesmanStatusType>(
    SalesmanStatusType_descriptor(), name, value);
}
enum SecurityCheckType {
  SECURITY_CHECK_NONE = 0,
  SECURITY_CHECK_LOGIN = 1,
  SecurityCheckType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SecurityCheckType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SecurityCheckType_IsValid(int value);
const SecurityCheckType SecurityCheckType_MIN = SECURITY_CHECK_NONE;
const SecurityCheckType SecurityCheckType_MAX = SECURITY_CHECK_LOGIN;
const int SecurityCheckType_ARRAYSIZE = SecurityCheckType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SecurityCheckType_descriptor();
inline const ::std::string& SecurityCheckType_Name(SecurityCheckType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SecurityCheckType_descriptor(), value);
}
inline bool SecurityCheckType_Parse(
    const ::std::string& name, SecurityCheckType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecurityCheckType>(
    SecurityCheckType_descriptor(), name, value);
}
enum CodexType {
  CODEX_NONE = 0,
  CODEX_QUEST = 1,
  CODEX_WEAPON = 2,
  CODEX_ANIMAL = 3,
  CODEX_MATERIAL = 4,
  CODEX_BOOKS = 5,
  CODEX_PUSHTIPS = 6,
  CODEX_VIEW = 7,
  CODEX_RELIQUARY = 8,
  CodexType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CodexType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CodexType_IsValid(int value);
const CodexType CodexType_MIN = CODEX_NONE;
const CodexType CodexType_MAX = CODEX_RELIQUARY;
const int CodexType_ARRAYSIZE = CodexType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CodexType_descriptor();
inline const ::std::string& CodexType_Name(CodexType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CodexType_descriptor(), value);
}
inline bool CodexType_Parse(
    const ::std::string& name, CodexType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CodexType>(
    CodexType_descriptor(), name, value);
}
enum SegmentCRCModuleType {
  MODULE_NONE = 0,
  PC_UNITYPLAYER = 1,
  PC_USERASSEMBLY = 2,
  PC_XLUA = 3,
  ANDROID_LIBIL2CPP = 11,
  ANDROID_LIBUNITY = 12,
  ANDROID_LIBXLUA = 13,
  IOS_HK4E = 21,
  SegmentCRCModuleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SegmentCRCModuleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SegmentCRCModuleType_IsValid(int value);
const SegmentCRCModuleType SegmentCRCModuleType_MIN = MODULE_NONE;
const SegmentCRCModuleType SegmentCRCModuleType_MAX = IOS_HK4E;
const int SegmentCRCModuleType_ARRAYSIZE = SegmentCRCModuleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SegmentCRCModuleType_descriptor();
inline const ::std::string& SegmentCRCModuleType_Name(SegmentCRCModuleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SegmentCRCModuleType_descriptor(), value);
}
inline bool SegmentCRCModuleType_Parse(
    const ::std::string& name, SegmentCRCModuleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SegmentCRCModuleType>(
    SegmentCRCModuleType_descriptor(), name, value);
}
enum ExchangeMcoinType {
  EXCHANGEMCOIN_NONE = 0,
  EXCHANGEMCOIN_PCM_TO_PSN = 1,
  EXCHANGEMCOIN_PSN_TO_PCM = 2,
  ExchangeMcoinType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExchangeMcoinType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExchangeMcoinType_IsValid(int value);
const ExchangeMcoinType ExchangeMcoinType_MIN = EXCHANGEMCOIN_NONE;
const ExchangeMcoinType ExchangeMcoinType_MAX = EXCHANGEMCOIN_PSN_TO_PCM;
const int ExchangeMcoinType_ARRAYSIZE = ExchangeMcoinType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExchangeMcoinType_descriptor();
inline const ::std::string& ExchangeMcoinType_Name(ExchangeMcoinType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExchangeMcoinType_descriptor(), value);
}
inline bool ExchangeMcoinType_Parse(
    const ::std::string& name, ExchangeMcoinType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExchangeMcoinType>(
    ExchangeMcoinType_descriptor(), name, value);
}
enum ExploreType {
  EXPLORE_NONE = 0,
  EXPLORE_CRYSTAL = 1,
  EXPLORE_CHEST = 2,
  EXPLORE_TEMPLE = 3,
  EXPLORE_TELEPORT = 4,
  ExploreType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExploreType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExploreType_IsValid(int value);
const ExploreType ExploreType_MIN = EXPLORE_NONE;
const ExploreType ExploreType_MAX = EXPLORE_TELEPORT;
const int ExploreType_ARRAYSIZE = ExploreType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExploreType_descriptor();
inline const ::std::string& ExploreType_Name(ExploreType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExploreType_descriptor(), value);
}
inline bool ExploreType_Parse(
    const ::std::string& name, ExploreType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExploreType>(
    ExploreType_descriptor(), name, value);
}
enum AsterLittleStageState {
  ASTER_LITTLE_STAGE_NONE = 0,
  ASTER_LITTLE_STAGE_UNSTARTED = 1,
  ASTER_LITTLE_STAGE_STARTED = 2,
  ASTER_LITTLE_STAGE_FINISHED = 3,
  AsterLittleStageState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AsterLittleStageState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AsterLittleStageState_IsValid(int value);
const AsterLittleStageState AsterLittleStageState_MIN = ASTER_LITTLE_STAGE_NONE;
const AsterLittleStageState AsterLittleStageState_MAX = ASTER_LITTLE_STAGE_FINISHED;
const int AsterLittleStageState_ARRAYSIZE = AsterLittleStageState_MAX + 1;

const ::google::protobuf::EnumDescriptor* AsterLittleStageState_descriptor();
inline const ::std::string& AsterLittleStageState_Name(AsterLittleStageState value) {
  return ::google::protobuf::internal::NameOfEnum(
    AsterLittleStageState_descriptor(), value);
}
inline bool AsterLittleStageState_Parse(
    const ::std::string& name, AsterLittleStageState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AsterLittleStageState>(
    AsterLittleStageState_descriptor(), name, value);
}
enum HuntingOfferState {
  HUNTING_OFFER_STATE_NONE = 0,
  HUNTING_OFFER_STATE_STARTED = 1,
  HUNTING_OFFER_STATE_UNSTARTED = 2,
  HUNTING_OFFER_STATE_SUCC = 3,
  HuntingOfferState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HuntingOfferState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HuntingOfferState_IsValid(int value);
const HuntingOfferState HuntingOfferState_MIN = HUNTING_OFFER_STATE_NONE;
const HuntingOfferState HuntingOfferState_MAX = HUNTING_OFFER_STATE_SUCC;
const int HuntingOfferState_ARRAYSIZE = HuntingOfferState_MAX + 1;

const ::google::protobuf::EnumDescriptor* HuntingOfferState_descriptor();
inline const ::std::string& HuntingOfferState_Name(HuntingOfferState value) {
  return ::google::protobuf::internal::NameOfEnum(
    HuntingOfferState_descriptor(), value);
}
inline bool HuntingOfferState_Parse(
    const ::std::string& name, HuntingOfferState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HuntingOfferState>(
    HuntingOfferState_descriptor(), name, value);
}
enum RegionSearchState {
  REGION_SEARCH_NONE = 0,
  REGION_SEARCH_UNSTARTED = 1,
  REGION_SEARCH_STARTED = 2,
  REGION_SEARCH_WAIT_REWARD = 3,
  REGION_SEARCH_FINISHED = 4,
  RegionSearchState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegionSearchState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegionSearchState_IsValid(int value);
const RegionSearchState RegionSearchState_MIN = REGION_SEARCH_NONE;
const RegionSearchState RegionSearchState_MAX = REGION_SEARCH_FINISHED;
const int RegionSearchState_ARRAYSIZE = RegionSearchState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegionSearchState_descriptor();
inline const ::std::string& RegionSearchState_Name(RegionSearchState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegionSearchState_descriptor(), value);
}
inline bool RegionSearchState_Parse(
    const ::std::string& name, RegionSearchState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegionSearchState>(
    RegionSearchState_descriptor(), name, value);
}
enum PlayerTag {
  PLAYER_TAG_NORMAL = 0,
  PLAYER_TAG_SUB_ACCOUNT = 3,
  PLAYER_TAG_SUB_ACCOUNT_TRANS_TO_NORMAL = 5,
  PlayerTag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerTag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerTag_IsValid(int value);
const PlayerTag PlayerTag_MIN = PLAYER_TAG_NORMAL;
const PlayerTag PlayerTag_MAX = PLAYER_TAG_SUB_ACCOUNT_TRANS_TO_NORMAL;
const int PlayerTag_ARRAYSIZE = PlayerTag_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerTag_descriptor();
inline const ::std::string& PlayerTag_Name(PlayerTag value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerTag_descriptor(), value);
}
inline bool PlayerTag_Parse(
    const ::std::string& name, PlayerTag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerTag>(
    PlayerTag_descriptor(), name, value);
}
enum FeatureBlockType {
  FEATURE_BLOCK_TYPE_NONE = 0,
  FEATURE_BLOCK_TYPE_CHAT = 1,
  FEATURE_BLOCK_TYPE_MP = 2,
  FEATRURE_BLOCK_TYPE_CRC = 3,
  FEATURE_BLOCK_TYPE_HOME = 4,
  FeatureBlockType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FeatureBlockType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FeatureBlockType_IsValid(int value);
const FeatureBlockType FeatureBlockType_MIN = FEATURE_BLOCK_TYPE_NONE;
const FeatureBlockType FeatureBlockType_MAX = FEATURE_BLOCK_TYPE_HOME;
const int FeatureBlockType_ARRAYSIZE = FeatureBlockType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FeatureBlockType_descriptor();
inline const ::std::string& FeatureBlockType_Name(FeatureBlockType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FeatureBlockType_descriptor(), value);
}
inline bool FeatureBlockType_Parse(
    const ::std::string& name, FeatureBlockType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FeatureBlockType>(
    FeatureBlockType_descriptor(), name, value);
}
enum ReportReasonType {
  REPORT_REASON_NONE = 0,
  REPORT_REASON_DECEPTIVE_ADS = 1,
  REPORT_REASON_ABUSING = 2,
  REPORT_REASON_CHEAT = 3,
  REPORT_REASON_POLITICAL = 4,
  REPORT_REASON_OTHER = 5,
  REPORT_REASON_HOME = 6,
  ReportReasonType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReportReasonType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReportReasonType_IsValid(int value);
const ReportReasonType ReportReasonType_MIN = REPORT_REASON_NONE;
const ReportReasonType ReportReasonType_MAX = REPORT_REASON_HOME;
const int ReportReasonType_ARRAYSIZE = ReportReasonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReportReasonType_descriptor();
inline const ::std::string& ReportReasonType_Name(ReportReasonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReportReasonType_descriptor(), value);
}
inline bool ReportReasonType_Parse(
    const ::std::string& name, ReportReasonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReportReasonType>(
    ReportReasonType_descriptor(), name, value);
}
enum MapMarkTipsType {
  MARK_TIPS_DUNGEON_ELEMENT_TRIAL = 0,
  MapMarkTipsType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MapMarkTipsType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MapMarkTipsType_IsValid(int value);
const MapMarkTipsType MapMarkTipsType_MIN = MARK_TIPS_DUNGEON_ELEMENT_TRIAL;
const MapMarkTipsType MapMarkTipsType_MAX = MARK_TIPS_DUNGEON_ELEMENT_TRIAL;
const int MapMarkTipsType_ARRAYSIZE = MapMarkTipsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MapMarkTipsType_descriptor();
inline const ::std::string& MapMarkTipsType_Name(MapMarkTipsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MapMarkTipsType_descriptor(), value);
}
inline bool MapMarkTipsType_Parse(
    const ::std::string& name, MapMarkTipsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapMarkTipsType>(
    MapMarkTipsType_descriptor(), name, value);
}
enum ExpeditionState {
  EXPEDITION_NONE = 0,
  EXPEDITION_STARTED = 1,
  EXPEDITION_FINISHED = 2,
  EXPEDITION_REWARDED = 3,
  EXPEDITION_LOCKED = 4,
  ExpeditionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExpeditionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExpeditionState_IsValid(int value);
const ExpeditionState ExpeditionState_MIN = EXPEDITION_NONE;
const ExpeditionState ExpeditionState_MAX = EXPEDITION_LOCKED;
const int ExpeditionState_ARRAYSIZE = ExpeditionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExpeditionState_descriptor();
inline const ::std::string& ExpeditionState_Name(ExpeditionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExpeditionState_descriptor(), value);
}
inline bool ExpeditionState_Parse(
    const ::std::string& name, ExpeditionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExpeditionState>(
    ExpeditionState_descriptor(), name, value);
}
enum EnterReason {
  ENTER_REASON_NONE = 0,
  ENTER_REASON_LOGIN = 1,
  ENTER_REASON_DUNGEON_REPLAY = 11,
  ENTER_REASON_DUNGEON_REVIVE_ON_WAYPOINT = 12,
  ENTER_REASON_DUNGEON_ENTER = 13,
  ENTER_REASON_DUNGEON_QUIT = 14,
  ENTER_REASON_GM = 21,
  ENTER_REASON_QUEST_ROLLBACK = 31,
  ENTER_REASON_REVIVAL = 32,
  ENTER_REASON_PERSONAL_SCENE = 41,
  ENTER_REASON_TRANS_POINT = 42,
  ENTER_REASON_CLIENT_TRANSMIT = 43,
  ENTER_REASON_FORCE_DRAG_BACK = 44,
  ENTER_REASON_TEAM_KICK = 51,
  ENTER_REASON_TEAM_JOIN = 52,
  ENTER_REASON_TEAM_BACK = 53,
  ENTER_REASON_MUIP = 54,
  ENTER_REASON_DUNGEON_INVITE_ACCEPT = 55,
  ENTER_REASON_LUA = 56,
  ENTER_REASON_ACTIVITY_LOAD_TERRAIN = 57,
  ENTER_REASON_HOST_FROM_SINGLE_TO_MP = 58,
  ENTER_REASON_MP_PLAY = 59,
  ENTER_REASON_ANCHOR_POINT = 60,
  ENTER_REASON_LUA_SKIP_UI = 61,
  ENTER_REASON_RELOAD_TERRAIN = 62,
  ENTER_REASON_DRAFT_TRANSFER = 63,
  ENTER_REASON_ENTER_HOME = 64,
  ENTER_REASON_EXIT_HOME = 65,
  ENTER_REASON_CHANGE_HOME_MODULE = 66,
  ENTER_REASON_GALLERY = 67,
  ENTER_REASON_HOME_SCENE_JUMP = 68,
  ENTER_REASON_HIDE_AND_SEEK = 69,
  ENTER_REASON_SUMMER_TIME_MIST_ZONE = 70,
  ENTER_REASON_FORCE_QUIT_SCENE = 71,
  ENTER_REASON_HERO_COURSE = 72,
  ENTER_REASON_TRANS_CLIMATE = 73,
  ENTER_REASON_SUMMER_TIME_BOAT_RESTART = 74,
  ENTER_REASON_TSURUMI_MIST_CLIMATE = 75,
  ENTER_REASON_TSURUMI_REGIONAL_MIST_CLIMATE = 76,
  ENTER_REASON_WINTER_CAMP_RESTART = 77,
  ENTER_REASON_TALK_EXEC_TRANSFER = 78,
  ENTER_REASON_SEALAMP_BOAT_RESTART = 79,
  ENTER_REASON_SEALAMP_BOAT_BACK = 80,
  ENTER_REASON_CHALLENGE_INTERRUPT_BACK = 81,
  ENTER_REASON_IRODORI_MASTER_TRANSFER = 82,
  ENTER_REASON_GALLERY_BACK = 83,
  ENTER_REASON_SUMMER_TIME_V2_BOAT_RESTART = 84,
  ENTER_REASON_ISLAND_PARTY_GALLERY_START_FAILED = 85,
  ENTER_REASON_GRAVEN_INNOCENCE_RACE_RESTART = 86,
  ENTER_REASON_VINTAGE_HUNTING_TRANSFER = 87,
  ENTER_REASON_FUNGUS_FIGHTER_TRANSFER = 88,
  ENTER_REASON_BRICK_BREAKER = 89,
  ENTER_REASON_BRICK_BREAKER_SINGLE = 90,
  ENTER_REASON_TRANSFER_GUARD_STOP = 91,
  ENTER_REASON_COIN_COLLECT_SINGLE = 92,
  ENTER_REASON_LAN_V3_BOAT_TRANSFER = 93,
  ENTER_REASON_LAN_V3_RACE_RESTART = 94,
  EnterReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterReason_IsValid(int value);
const EnterReason EnterReason_MIN = ENTER_REASON_NONE;
const EnterReason EnterReason_MAX = ENTER_REASON_LAN_V3_RACE_RESTART;
const int EnterReason_ARRAYSIZE = EnterReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterReason_descriptor();
inline const ::std::string& EnterReason_Name(EnterReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterReason_descriptor(), value);
}
inline bool EnterReason_Parse(
    const ::std::string& name, EnterReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterReason>(
    EnterReason_descriptor(), name, value);
}
enum FriendEnterHomeOption {
  FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM = 0,
  FRIEND_ENTER_HOME_OPTION_REFUSE = 1,
  FRIEND_ENTER_HOME_OPTION_DIRECT = 2,
  FriendEnterHomeOption_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FriendEnterHomeOption_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FriendEnterHomeOption_IsValid(int value);
const FriendEnterHomeOption FriendEnterHomeOption_MIN = FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM;
const FriendEnterHomeOption FriendEnterHomeOption_MAX = FRIEND_ENTER_HOME_OPTION_DIRECT;
const int FriendEnterHomeOption_ARRAYSIZE = FriendEnterHomeOption_MAX + 1;

const ::google::protobuf::EnumDescriptor* FriendEnterHomeOption_descriptor();
inline const ::std::string& FriendEnterHomeOption_Name(FriendEnterHomeOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    FriendEnterHomeOption_descriptor(), value);
}
inline bool FriendEnterHomeOption_Parse(
    const ::std::string& name, FriendEnterHomeOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FriendEnterHomeOption>(
    FriendEnterHomeOption_descriptor(), name, value);
}
enum ChatChannel {
  CHANNEL_TEAM = 0,
  CHANNEL_FRIEND = 1,
  CHANNEL_NONE = 2,
  CHANNEL_HIDEANDSEEK = 3,
  CHANNEL_HIDEANDSEEK_TEAM = 5,
  CHANNEL_LAN_V3_BOAT = 6,
  CHANNEL_ALL = 10,
  CHANNEL_TEST = 100,
  ChatChannel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChatChannel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChatChannel_IsValid(int value);
const ChatChannel ChatChannel_MIN = CHANNEL_TEAM;
const ChatChannel ChatChannel_MAX = CHANNEL_TEST;
const int ChatChannel_ARRAYSIZE = ChatChannel_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatChannel_descriptor();
inline const ::std::string& ChatChannel_Name(ChatChannel value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatChannel_descriptor(), value);
}
inline bool ChatChannel_Parse(
    const ::std::string& name, ChatChannel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatChannel>(
    ChatChannel_descriptor(), name, value);
}
enum LeaveWorldReason {
  LEAVE_WORLD_REASON_NONE = 0,
  LEAVE_WORLD_REASON_LOGOUT = 1,
  LEAVE_WORLD_REASON_BACK_MY_WORLD = 2,
  LEAVE_WORLD_REASON_KICK_BY_OWNER = 3,
  LeaveWorldReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LeaveWorldReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LeaveWorldReason_IsValid(int value);
const LeaveWorldReason LeaveWorldReason_MIN = LEAVE_WORLD_REASON_NONE;
const LeaveWorldReason LeaveWorldReason_MAX = LEAVE_WORLD_REASON_KICK_BY_OWNER;
const int LeaveWorldReason_ARRAYSIZE = LeaveWorldReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* LeaveWorldReason_descriptor();
inline const ::std::string& LeaveWorldReason_Name(LeaveWorldReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    LeaveWorldReason_descriptor(), value);
}
inline bool LeaveWorldReason_Parse(
    const ::std::string& name, LeaveWorldReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LeaveWorldReason>(
    LeaveWorldReason_descriptor(), name, value);
}
enum DungeonCandidateTeamPlayerState {
  DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_IDLE = 0,
  DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_CHANGING_AVATAR = 1,
  DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_READY = 2,
  DungeonCandidateTeamPlayerState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DungeonCandidateTeamPlayerState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DungeonCandidateTeamPlayerState_IsValid(int value);
const DungeonCandidateTeamPlayerState DungeonCandidateTeamPlayerState_MIN = DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_IDLE;
const DungeonCandidateTeamPlayerState DungeonCandidateTeamPlayerState_MAX = DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_READY;
const int DungeonCandidateTeamPlayerState_ARRAYSIZE = DungeonCandidateTeamPlayerState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DungeonCandidateTeamPlayerState_descriptor();
inline const ::std::string& DungeonCandidateTeamPlayerState_Name(DungeonCandidateTeamPlayerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DungeonCandidateTeamPlayerState_descriptor(), value);
}
inline bool DungeonCandidateTeamPlayerState_Parse(
    const ::std::string& name, DungeonCandidateTeamPlayerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DungeonCandidateTeamPlayerState>(
    DungeonCandidateTeamPlayerState_descriptor(), name, value);
}
enum CreateGadgetReason {
  CREATE_GADGET_NONE = 0,
  CREATE_GADGET_PLAYER = 1,
  CREATE_GADGET_MISSION = 2,
  CREATE_GADGET_GM = 3,
  CreateGadgetReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateGadgetReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateGadgetReason_IsValid(int value);
const CreateGadgetReason CreateGadgetReason_MIN = CREATE_GADGET_NONE;
const CreateGadgetReason CreateGadgetReason_MAX = CREATE_GADGET_GM;
const int CreateGadgetReason_ARRAYSIZE = CreateGadgetReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateGadgetReason_descriptor();
inline const ::std::string& CreateGadgetReason_Name(CreateGadgetReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateGadgetReason_descriptor(), value);
}
inline bool CreateGadgetReason_Parse(
    const ::std::string& name, CreateGadgetReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateGadgetReason>(
    CreateGadgetReason_descriptor(), name, value);
}
enum LunaRiteHintStatusType {
  LUNA_RITE_HINT_STATUS_DEFAULT = 0,
  LUNA_RITE_HINT_STATUS_NO_COUNT = 1,
  LUNA_RITE_HINT_STATUS_FINISH = 2,
  LunaRiteHintStatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LunaRiteHintStatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LunaRiteHintStatusType_IsValid(int value);
const LunaRiteHintStatusType LunaRiteHintStatusType_MIN = LUNA_RITE_HINT_STATUS_DEFAULT;
const LunaRiteHintStatusType LunaRiteHintStatusType_MAX = LUNA_RITE_HINT_STATUS_FINISH;
const int LunaRiteHintStatusType_ARRAYSIZE = LunaRiteHintStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LunaRiteHintStatusType_descriptor();
inline const ::std::string& LunaRiteHintStatusType_Name(LunaRiteHintStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LunaRiteHintStatusType_descriptor(), value);
}
inline bool LunaRiteHintStatusType_Parse(
    const ::std::string& name, LunaRiteHintStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LunaRiteHintStatusType>(
    LunaRiteHintStatusType_descriptor(), name, value);
}
enum LunaRiteHintPointType {
  LUNA_RITE_HINT_TYPE_NONE = 0,
  LUNA_RITE_HINT_TYPE_RUNE = 1,
  LUNA_RITE_HINT_TYPE_CHEST = 2,
  LunaRiteHintPointType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LunaRiteHintPointType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LunaRiteHintPointType_IsValid(int value);
const LunaRiteHintPointType LunaRiteHintPointType_MIN = LUNA_RITE_HINT_TYPE_NONE;
const LunaRiteHintPointType LunaRiteHintPointType_MAX = LUNA_RITE_HINT_TYPE_CHEST;
const int LunaRiteHintPointType_ARRAYSIZE = LunaRiteHintPointType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LunaRiteHintPointType_descriptor();
inline const ::std::string& LunaRiteHintPointType_Name(LunaRiteHintPointType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LunaRiteHintPointType_descriptor(), value);
}
inline bool LunaRiteHintPointType_Parse(
    const ::std::string& name, LunaRiteHintPointType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LunaRiteHintPointType>(
    LunaRiteHintPointType_descriptor(), name, value);
}
enum GroupVariableType {
  VARIABLE_TYPE_NORMAL = 0,
  VARIABLE_TYPE_LOGIC_STATE = 1,
  GroupVariableType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupVariableType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupVariableType_IsValid(int value);
const GroupVariableType GroupVariableType_MIN = VARIABLE_TYPE_NORMAL;
const GroupVariableType GroupVariableType_MAX = VARIABLE_TYPE_LOGIC_STATE;
const int GroupVariableType_ARRAYSIZE = GroupVariableType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupVariableType_descriptor();
inline const ::std::string& GroupVariableType_Name(GroupVariableType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupVariableType_descriptor(), value);
}
inline bool GroupVariableType_Parse(
    const ::std::string& name, GroupVariableType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupVariableType>(
    GroupVariableType_descriptor(), name, value);
}
enum ClientInputType {
  CLIENT_INPUT_NONE = 0,
  CLIENT_INPUT_KEYBORD_MOUSE = 1,
  CLIENT_INPUT_GAMEPAD = 2,
  CLIENT_INPUT_TOUCH_PANEL = 3,
  ClientInputType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientInputType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientInputType_IsValid(int value);
const ClientInputType ClientInputType_MIN = CLIENT_INPUT_NONE;
const ClientInputType ClientInputType_MAX = CLIENT_INPUT_TOUCH_PANEL;
const int ClientInputType_ARRAYSIZE = ClientInputType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientInputType_descriptor();
inline const ::std::string& ClientInputType_Name(ClientInputType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientInputType_descriptor(), value);
}
inline bool ClientInputType_Parse(
    const ::std::string& name, ClientInputType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientInputType>(
    ClientInputType_descriptor(), name, value);
}
enum CustomDungeonEvent {
  CUSTOM_DUNGEON_EVENT_NONE = 0,
  CUSTOM_DUNGEON_EVENT_OFFICIAL_RESTART = 1,
  CUSTOM_DUNGEON_EVENT_OUT_STUCK = 2,
  CustomDungeonEvent_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CustomDungeonEvent_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CustomDungeonEvent_IsValid(int value);
const CustomDungeonEvent CustomDungeonEvent_MIN = CUSTOM_DUNGEON_EVENT_NONE;
const CustomDungeonEvent CustomDungeonEvent_MAX = CUSTOM_DUNGEON_EVENT_OUT_STUCK;
const int CustomDungeonEvent_ARRAYSIZE = CustomDungeonEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* CustomDungeonEvent_descriptor();
inline const ::std::string& CustomDungeonEvent_Name(CustomDungeonEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    CustomDungeonEvent_descriptor(), value);
}
inline bool CustomDungeonEvent_Parse(
    const ::std::string& name, CustomDungeonEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CustomDungeonEvent>(
    CustomDungeonEvent_descriptor(), name, value);
}
enum PlatformCategory {
  PLATFORM_CATEGORY_NONE = 0,
  PLATFORM_CATEGORY_PCM = 1,
  PLATFORM_CATEGORY_PSN = 2,
  PlatformCategory_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformCategory_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformCategory_IsValid(int value);
const PlatformCategory PlatformCategory_MIN = PLATFORM_CATEGORY_NONE;
const PlatformCategory PlatformCategory_MAX = PLATFORM_CATEGORY_PSN;
const int PlatformCategory_ARRAYSIZE = PlatformCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformCategory_descriptor();
inline const ::std::string& PlatformCategory_Name(PlatformCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformCategory_descriptor(), value);
}
inline bool PlatformCategory_Parse(
    const ::std::string& name, PlatformCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformCategory>(
    PlatformCategory_descriptor(), name, value);
}
enum SceneidConstValue {
  SCENEID_CONST_NONE = 0,
  SCENEID_CONST_MAIN = 3,
  SCENEID_CONST_ISLAND = 4,
  SCENEID_CONST_ENKANOMIYA = 5,
  SCENEID_CONST_MICHIAE_MATSURI = 7,
  SCENEID_CONST_28_ISLAND = 9,
  SceneidConstValue_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneidConstValue_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneidConstValue_IsValid(int value);
const SceneidConstValue SceneidConstValue_MIN = SCENEID_CONST_NONE;
const SceneidConstValue SceneidConstValue_MAX = SCENEID_CONST_28_ISLAND;
const int SceneidConstValue_ARRAYSIZE = SceneidConstValue_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneidConstValue_descriptor();
inline const ::std::string& SceneidConstValue_Name(SceneidConstValue value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneidConstValue_descriptor(), value);
}
inline bool SceneidConstValue_Parse(
    const ::std::string& name, SceneidConstValue* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneidConstValue>(
    SceneidConstValue_descriptor(), name, value);
}
enum CityidConstValue {
  CITYID_CONST_NONE = 0,
  CITYID_CONST_MENGDE = 1,
  CITYID_CONST_LIYUE = 2,
  CITYID_CONST_DAOQI = 3,
  CITYID_CONST_XUMI = 4,
  CityidConstValue_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CityidConstValue_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CityidConstValue_IsValid(int value);
const CityidConstValue CityidConstValue_MIN = CITYID_CONST_NONE;
const CityidConstValue CityidConstValue_MAX = CITYID_CONST_XUMI;
const int CityidConstValue_ARRAYSIZE = CityidConstValue_MAX + 1;

const ::google::protobuf::EnumDescriptor* CityidConstValue_descriptor();
inline const ::std::string& CityidConstValue_Name(CityidConstValue value) {
  return ::google::protobuf::internal::NameOfEnum(
    CityidConstValue_descriptor(), value);
}
inline bool CityidConstValue_Parse(
    const ::std::string& name, CityidConstValue* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CityidConstValue>(
    CityidConstValue_descriptor(), name, value);
}
enum AranaraCollectionState {
  ARANARA_COLLECTION_STATE_NONE = 0,
  ARANARA_COLLECTION_STATE_COLLECTABLE = 1,
  ARANARA_COLLECTION_STATE_COLLECTED = 2,
  ARANARA_COLLECTION_STATE_FINISHED = 3,
  AranaraCollectionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AranaraCollectionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AranaraCollectionState_IsValid(int value);
const AranaraCollectionState AranaraCollectionState_MIN = ARANARA_COLLECTION_STATE_NONE;
const AranaraCollectionState AranaraCollectionState_MAX = ARANARA_COLLECTION_STATE_FINISHED;
const int AranaraCollectionState_ARRAYSIZE = AranaraCollectionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* AranaraCollectionState_descriptor();
inline const ::std::string& AranaraCollectionState_Name(AranaraCollectionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    AranaraCollectionState_descriptor(), value);
}
inline bool AranaraCollectionState_Parse(
    const ::std::string& name, AranaraCollectionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AranaraCollectionState>(
    AranaraCollectionState_descriptor(), name, value);
}
enum AuditState {
  AUDIT_NONE = 0,
  AUDIT_WAITING = 1,
  AUDIT_FAILED = 2,
  AuditState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AuditState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AuditState_IsValid(int value);
const AuditState AuditState_MIN = AUDIT_NONE;
const AuditState AuditState_MAX = AUDIT_FAILED;
const int AuditState_ARRAYSIZE = AuditState_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuditState_descriptor();
inline const ::std::string& AuditState_Name(AuditState value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuditState_descriptor(), value);
}
inline bool AuditState_Parse(
    const ::std::string& name, AuditState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuditState>(
    AuditState_descriptor(), name, value);
}
enum AvatarRenameAuditSourceType {
  AVATAR_RENAME_AUDIT_SOURCE_NONE = 0,
  AVATAR_RENAME_AUDIT_SOURCE_ITEM = 1,
  AVATAR_RENAME_AUDIT_SOURCE_QUEST = 2,
  AvatarRenameAuditSourceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarRenameAuditSourceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarRenameAuditSourceType_IsValid(int value);
const AvatarRenameAuditSourceType AvatarRenameAuditSourceType_MIN = AVATAR_RENAME_AUDIT_SOURCE_NONE;
const AvatarRenameAuditSourceType AvatarRenameAuditSourceType_MAX = AVATAR_RENAME_AUDIT_SOURCE_QUEST;
const int AvatarRenameAuditSourceType_ARRAYSIZE = AvatarRenameAuditSourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarRenameAuditSourceType_descriptor();
inline const ::std::string& AvatarRenameAuditSourceType_Name(AvatarRenameAuditSourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarRenameAuditSourceType_descriptor(), value);
}
inline bool AvatarRenameAuditSourceType_Parse(
    const ::std::string& name, AvatarRenameAuditSourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarRenameAuditSourceType>(
    AvatarRenameAuditSourceType_descriptor(), name, value);
}
enum ResetAvatarRenameReason {
  RESET_AVATAR_RENAME_REASON_NONE = 0,
  RESET_AVATAR_RENAME_REASON_IP_BLACK_LIST = 1,
  RESET_AVATAR_RENAME_REASON_QUEST_AUDIT = 2,
  RESET_AVATAR_RENAME_REASON_ACTIVE = 3,
  ResetAvatarRenameReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResetAvatarRenameReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResetAvatarRenameReason_IsValid(int value);
const ResetAvatarRenameReason ResetAvatarRenameReason_MIN = RESET_AVATAR_RENAME_REASON_NONE;
const ResetAvatarRenameReason ResetAvatarRenameReason_MAX = RESET_AVATAR_RENAME_REASON_ACTIVE;
const int ResetAvatarRenameReason_ARRAYSIZE = ResetAvatarRenameReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResetAvatarRenameReason_descriptor();
inline const ::std::string& ResetAvatarRenameReason_Name(ResetAvatarRenameReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResetAvatarRenameReason_descriptor(), value);
}
inline bool ResetAvatarRenameReason_Parse(
    const ::std::string& name, ResetAvatarRenameReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResetAvatarRenameReason>(
    ResetAvatarRenameReason_descriptor(), name, value);
}
// ===================================================================

class ParamList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ParamList) */ {
 public:
  ParamList();
  virtual ~ParamList();

  ParamList(const ParamList& from);

  inline ParamList& operator=(const ParamList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParamList(ParamList&& from) noexcept
    : ParamList() {
    *this = ::std::move(from);
  }

  inline ParamList& operator=(ParamList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParamList& default_instance();

  static inline const ParamList* internal_default_instance() {
    return reinterpret_cast<const ParamList*>(
               &_ParamList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ParamList* other);
  friend void swap(ParamList& a, ParamList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParamList* New() const PROTOBUF_FINAL { return New(NULL); }

  ParamList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParamList& from);
  void MergeFrom(const ParamList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParamList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 param_list = 1;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 1;
  ::google::protobuf::uint32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::uint32 value);
  void add_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_list();

  // @@protoc_insertion_point(class_scope:proto.ParamList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PropValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PropValue) */ {
 public:
  PropValue();
  virtual ~PropValue();

  PropValue(const PropValue& from);

  inline PropValue& operator=(const PropValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PropValue(PropValue&& from) noexcept
    : PropValue() {
    *this = ::std::move(from);
  }

  inline PropValue& operator=(PropValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropValue& default_instance();

  enum ValueCase {
    kIval = 2,
    kFval = 3,
    VALUE_NOT_SET = 0,
  };

  static inline const PropValue* internal_default_instance() {
    return reinterpret_cast<const PropValue*>(
               &_PropValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PropValue* other);
  friend void swap(PropValue& a, PropValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PropValue* New() const PROTOBUF_FINAL { return New(NULL); }

  PropValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PropValue& from);
  void MergeFrom(const PropValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PropValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // int64 val = 4;
  void clear_val();
  static const int kValFieldNumber = 4;
  ::google::protobuf::int64 val() const;
  void set_val(::google::protobuf::int64 value);

  // int64 ival = 2;
  private:
  bool has_ival() const;
  public:
  void clear_ival();
  static const int kIvalFieldNumber = 2;
  ::google::protobuf::int64 ival() const;
  void set_ival(::google::protobuf::int64 value);

  // float fval = 3;
  private:
  bool has_fval() const;
  public:
  void clear_fval();
  static const int kFvalFieldNumber = 3;
  float fval() const;
  void set_fval(float value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:proto.PropValue)
 private:
  void set_has_ival();
  void set_has_fval();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int64 val_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::int64 ival_;
    float fval_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Uint32Pair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Uint32Pair) */ {
 public:
  Uint32Pair();
  virtual ~Uint32Pair();

  Uint32Pair(const Uint32Pair& from);

  inline Uint32Pair& operator=(const Uint32Pair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint32Pair(Uint32Pair&& from) noexcept
    : Uint32Pair() {
    *this = ::std::move(from);
  }

  inline Uint32Pair& operator=(Uint32Pair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint32Pair& default_instance();

  static inline const Uint32Pair* internal_default_instance() {
    return reinterpret_cast<const Uint32Pair*>(
               &_Uint32Pair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Uint32Pair* other);
  friend void swap(Uint32Pair& a, Uint32Pair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint32Pair* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint32Pair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint32Pair& from);
  void MergeFrom(const Uint32Pair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint32Pair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // uint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Uint32Pair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionSimpleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionSimpleInfo) */ {
 public:
  RegionSimpleInfo();
  virtual ~RegionSimpleInfo();

  RegionSimpleInfo(const RegionSimpleInfo& from);

  inline RegionSimpleInfo& operator=(const RegionSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionSimpleInfo(RegionSimpleInfo&& from) noexcept
    : RegionSimpleInfo() {
    *this = ::std::move(from);
  }

  inline RegionSimpleInfo& operator=(RegionSimpleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionSimpleInfo& default_instance();

  static inline const RegionSimpleInfo* internal_default_instance() {
    return reinterpret_cast<const RegionSimpleInfo*>(
               &_RegionSimpleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RegionSimpleInfo* other);
  friend void swap(RegionSimpleInfo& a, RegionSimpleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionSimpleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionSimpleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionSimpleInfo& from);
  void MergeFrom(const RegionSimpleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionSimpleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string dispatch_url = 4;
  void clear_dispatch_url();
  static const int kDispatchUrlFieldNumber = 4;
  const ::std::string& dispatch_url() const;
  void set_dispatch_url(const ::std::string& value);
  #if LANG_CXX11
  void set_dispatch_url(::std::string&& value);
  #endif
  void set_dispatch_url(const char* value);
  void set_dispatch_url(const char* value, size_t size);
  ::std::string* mutable_dispatch_url();
  ::std::string* release_dispatch_url();
  void set_allocated_dispatch_url(::std::string* dispatch_url);

  // @@protoc_insertion_point(class_scope:proto.RegionSimpleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr dispatch_url_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRegionListHttpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryRegionListHttpRsp) */ {
 public:
  QueryRegionListHttpRsp();
  virtual ~QueryRegionListHttpRsp();

  QueryRegionListHttpRsp(const QueryRegionListHttpRsp& from);

  inline QueryRegionListHttpRsp& operator=(const QueryRegionListHttpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryRegionListHttpRsp(QueryRegionListHttpRsp&& from) noexcept
    : QueryRegionListHttpRsp() {
    *this = ::std::move(from);
  }

  inline QueryRegionListHttpRsp& operator=(QueryRegionListHttpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRegionListHttpRsp& default_instance();

  static inline const QueryRegionListHttpRsp* internal_default_instance() {
    return reinterpret_cast<const QueryRegionListHttpRsp*>(
               &_QueryRegionListHttpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(QueryRegionListHttpRsp* other);
  friend void swap(QueryRegionListHttpRsp& a, QueryRegionListHttpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryRegionListHttpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRegionListHttpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRegionListHttpRsp& from);
  void MergeFrom(const QueryRegionListHttpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRegionListHttpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RegionSimpleInfo region_list = 2;
  int region_list_size() const;
  void clear_region_list();
  static const int kRegionListFieldNumber = 2;
  const ::proto::RegionSimpleInfo& region_list(int index) const;
  ::proto::RegionSimpleInfo* mutable_region_list(int index);
  ::proto::RegionSimpleInfo* add_region_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >*
      mutable_region_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >&
      region_list() const;

  // bytes client_secret_key = 5;
  void clear_client_secret_key();
  static const int kClientSecretKeyFieldNumber = 5;
  const ::std::string& client_secret_key() const;
  void set_client_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_secret_key(::std::string&& value);
  #endif
  void set_client_secret_key(const char* value);
  void set_client_secret_key(const void* value, size_t size);
  ::std::string* mutable_client_secret_key();
  ::std::string* release_client_secret_key();
  void set_allocated_client_secret_key(::std::string* client_secret_key);

  // bytes client_custom_config_encrypted = 6;
  void clear_client_custom_config_encrypted();
  static const int kClientCustomConfigEncryptedFieldNumber = 6;
  const ::std::string& client_custom_config_encrypted() const;
  void set_client_custom_config_encrypted(const ::std::string& value);
  #if LANG_CXX11
  void set_client_custom_config_encrypted(::std::string&& value);
  #endif
  void set_client_custom_config_encrypted(const char* value);
  void set_client_custom_config_encrypted(const void* value, size_t size);
  ::std::string* mutable_client_custom_config_encrypted();
  ::std::string* release_client_custom_config_encrypted();
  void set_allocated_client_custom_config_encrypted(::std::string* client_custom_config_encrypted);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool enable_login_pc = 7;
  void clear_enable_login_pc();
  static const int kEnableLoginPcFieldNumber = 7;
  bool enable_login_pc() const;
  void set_enable_login_pc(bool value);

  // @@protoc_insertion_point(class_scope:proto.QueryRegionListHttpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo > region_list_;
  ::google::protobuf::internal::ArenaStringPtr client_secret_key_;
  ::google::protobuf::internal::ArenaStringPtr client_custom_config_encrypted_;
  ::google::protobuf::int32 retcode_;
  bool enable_login_pc_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceUpdateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ForceUpdateInfo) */ {
 public:
  ForceUpdateInfo();
  virtual ~ForceUpdateInfo();

  ForceUpdateInfo(const ForceUpdateInfo& from);

  inline ForceUpdateInfo& operator=(const ForceUpdateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceUpdateInfo(ForceUpdateInfo&& from) noexcept
    : ForceUpdateInfo() {
    *this = ::std::move(from);
  }

  inline ForceUpdateInfo& operator=(ForceUpdateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceUpdateInfo& default_instance();

  static inline const ForceUpdateInfo* internal_default_instance() {
    return reinterpret_cast<const ForceUpdateInfo*>(
               &_ForceUpdateInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ForceUpdateInfo* other);
  friend void swap(ForceUpdateInfo& a, ForceUpdateInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceUpdateInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceUpdateInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForceUpdateInfo& from);
  void MergeFrom(const ForceUpdateInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForceUpdateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string force_update_url = 1;
  void clear_force_update_url();
  static const int kForceUpdateUrlFieldNumber = 1;
  const ::std::string& force_update_url() const;
  void set_force_update_url(const ::std::string& value);
  #if LANG_CXX11
  void set_force_update_url(::std::string&& value);
  #endif
  void set_force_update_url(const char* value);
  void set_force_update_url(const char* value, size_t size);
  ::std::string* mutable_force_update_url();
  ::std::string* release_force_update_url();
  void set_allocated_force_update_url(::std::string* force_update_url);

  // @@protoc_insertion_point(class_scope:proto.ForceUpdateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr force_update_url_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StopServerInfo) */ {
 public:
  StopServerInfo();
  virtual ~StopServerInfo();

  StopServerInfo(const StopServerInfo& from);

  inline StopServerInfo& operator=(const StopServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopServerInfo(StopServerInfo&& from) noexcept
    : StopServerInfo() {
    *this = ::std::move(from);
  }

  inline StopServerInfo& operator=(StopServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopServerInfo& default_instance();

  static inline const StopServerInfo* internal_default_instance() {
    return reinterpret_cast<const StopServerInfo*>(
               &_StopServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(StopServerInfo* other);
  friend void swap(StopServerInfo& a, StopServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  StopServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopServerInfo& from);
  void MergeFrom(const StopServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 3;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // string content_msg = 4;
  void clear_content_msg();
  static const int kContentMsgFieldNumber = 4;
  const ::std::string& content_msg() const;
  void set_content_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_content_msg(::std::string&& value);
  #endif
  void set_content_msg(const char* value);
  void set_content_msg(const char* value, size_t size);
  ::std::string* mutable_content_msg();
  ::std::string* release_content_msg();
  void set_allocated_content_msg(::std::string* content_msg);

  // uint32 stop_begin_time = 1;
  void clear_stop_begin_time();
  static const int kStopBeginTimeFieldNumber = 1;
  ::google::protobuf::uint32 stop_begin_time() const;
  void set_stop_begin_time(::google::protobuf::uint32 value);

  // uint32 stop_end_time = 2;
  void clear_stop_end_time();
  static const int kStopEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 stop_end_time() const;
  void set_stop_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.StopServerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr content_msg_;
  ::google::protobuf::uint32 stop_begin_time_;
  ::google::protobuf::uint32 stop_end_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResVersionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResVersionConfig) */ {
 public:
  ResVersionConfig();
  virtual ~ResVersionConfig();

  ResVersionConfig(const ResVersionConfig& from);

  inline ResVersionConfig& operator=(const ResVersionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResVersionConfig(ResVersionConfig&& from) noexcept
    : ResVersionConfig() {
    *this = ::std::move(from);
  }

  inline ResVersionConfig& operator=(ResVersionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResVersionConfig& default_instance();

  static inline const ResVersionConfig* internal_default_instance() {
    return reinterpret_cast<const ResVersionConfig*>(
               &_ResVersionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ResVersionConfig* other);
  friend void swap(ResVersionConfig& a, ResVersionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResVersionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ResVersionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResVersionConfig& from);
  void MergeFrom(const ResVersionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResVersionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string md5 = 3;
  void clear_md5();
  static const int kMd5FieldNumber = 3;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // string release_total_size = 4;
  void clear_release_total_size();
  static const int kReleaseTotalSizeFieldNumber = 4;
  const ::std::string& release_total_size() const;
  void set_release_total_size(const ::std::string& value);
  #if LANG_CXX11
  void set_release_total_size(::std::string&& value);
  #endif
  void set_release_total_size(const char* value);
  void set_release_total_size(const char* value, size_t size);
  ::std::string* mutable_release_total_size();
  ::std::string* release_release_total_size();
  void set_allocated_release_total_size(::std::string* release_total_size);

  // string version_suffix = 5;
  void clear_version_suffix();
  static const int kVersionSuffixFieldNumber = 5;
  const ::std::string& version_suffix() const;
  void set_version_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_version_suffix(::std::string&& value);
  #endif
  void set_version_suffix(const char* value);
  void set_version_suffix(const char* value, size_t size);
  ::std::string* mutable_version_suffix();
  ::std::string* release_version_suffix();
  void set_allocated_version_suffix(::std::string* version_suffix);

  // string branch = 6;
  void clear_branch();
  static const int kBranchFieldNumber = 6;
  const ::std::string& branch() const;
  void set_branch(const ::std::string& value);
  #if LANG_CXX11
  void set_branch(::std::string&& value);
  #endif
  void set_branch(const char* value);
  void set_branch(const char* value, size_t size);
  ::std::string* mutable_branch();
  ::std::string* release_branch();
  void set_allocated_branch(::std::string* branch);

  // string next_script_version = 7;
  void clear_next_script_version();
  static const int kNextScriptVersionFieldNumber = 7;
  const ::std::string& next_script_version() const;
  void set_next_script_version(const ::std::string& value);
  #if LANG_CXX11
  void set_next_script_version(::std::string&& value);
  #endif
  void set_next_script_version(const char* value);
  void set_next_script_version(const char* value, size_t size);
  ::std::string* mutable_next_script_version();
  ::std::string* release_next_script_version();
  void set_allocated_next_script_version(::std::string* next_script_version);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // bool relogin = 2;
  void clear_relogin();
  static const int kReloginFieldNumber = 2;
  bool relogin() const;
  void set_relogin(bool value);

  // @@protoc_insertion_point(class_scope:proto.ResVersionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::internal::ArenaStringPtr release_total_size_;
  ::google::protobuf::internal::ArenaStringPtr version_suffix_;
  ::google::protobuf::internal::ArenaStringPtr branch_;
  ::google::protobuf::internal::ArenaStringPtr next_script_version_;
  ::google::protobuf::uint32 version_;
  bool relogin_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionInfo) */ {
 public:
  RegionInfo();
  virtual ~RegionInfo();

  RegionInfo(const RegionInfo& from);

  inline RegionInfo& operator=(const RegionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionInfo(RegionInfo&& from) noexcept
    : RegionInfo() {
    *this = ::std::move(from);
  }

  inline RegionInfo& operator=(RegionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionInfo& default_instance();

  static inline const RegionInfo* internal_default_instance() {
    return reinterpret_cast<const RegionInfo*>(
               &_RegionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(RegionInfo* other);
  friend void swap(RegionInfo& a, RegionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionInfo& from);
  void MergeFrom(const RegionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string gateserver_ip = 1;
  void clear_gateserver_ip();
  static const int kGateserverIpFieldNumber = 1;
  const ::std::string& gateserver_ip() const;
  void set_gateserver_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_gateserver_ip(::std::string&& value);
  #endif
  void set_gateserver_ip(const char* value);
  void set_gateserver_ip(const char* value, size_t size);
  ::std::string* mutable_gateserver_ip();
  ::std::string* release_gateserver_ip();
  void set_allocated_gateserver_ip(::std::string* gateserver_ip);

  // string pay_callback_url = 3;
  void clear_pay_callback_url();
  static const int kPayCallbackUrlFieldNumber = 3;
  const ::std::string& pay_callback_url() const;
  void set_pay_callback_url(const ::std::string& value);
  #if LANG_CXX11
  void set_pay_callback_url(::std::string&& value);
  #endif
  void set_pay_callback_url(const char* value);
  void set_pay_callback_url(const char* value, size_t size);
  ::std::string* mutable_pay_callback_url();
  ::std::string* release_pay_callback_url();
  void set_allocated_pay_callback_url(::std::string* pay_callback_url);

  // string area_type = 7;
  void clear_area_type();
  static const int kAreaTypeFieldNumber = 7;
  const ::std::string& area_type() const;
  void set_area_type(const ::std::string& value);
  #if LANG_CXX11
  void set_area_type(::std::string&& value);
  #endif
  void set_area_type(const char* value);
  void set_area_type(const char* value, size_t size);
  ::std::string* mutable_area_type();
  ::std::string* release_area_type();
  void set_allocated_area_type(::std::string* area_type);

  // string resource_url = 8;
  void clear_resource_url();
  static const int kResourceUrlFieldNumber = 8;
  const ::std::string& resource_url() const;
  void set_resource_url(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_url(::std::string&& value);
  #endif
  void set_resource_url(const char* value);
  void set_resource_url(const char* value, size_t size);
  ::std::string* mutable_resource_url();
  ::std::string* release_resource_url();
  void set_allocated_resource_url(::std::string* resource_url);

  // string data_url = 9;
  void clear_data_url();
  static const int kDataUrlFieldNumber = 9;
  const ::std::string& data_url() const;
  void set_data_url(const ::std::string& value);
  #if LANG_CXX11
  void set_data_url(::std::string&& value);
  #endif
  void set_data_url(const char* value);
  void set_data_url(const char* value, size_t size);
  ::std::string* mutable_data_url();
  ::std::string* release_data_url();
  void set_allocated_data_url(::std::string* data_url);

  // string feedback_url = 10;
  void clear_feedback_url();
  static const int kFeedbackUrlFieldNumber = 10;
  const ::std::string& feedback_url() const;
  void set_feedback_url(const ::std::string& value);
  #if LANG_CXX11
  void set_feedback_url(::std::string&& value);
  #endif
  void set_feedback_url(const char* value);
  void set_feedback_url(const char* value, size_t size);
  ::std::string* mutable_feedback_url();
  ::std::string* release_feedback_url();
  void set_allocated_feedback_url(::std::string* feedback_url);

  // string bulletin_url = 11;
  void clear_bulletin_url();
  static const int kBulletinUrlFieldNumber = 11;
  const ::std::string& bulletin_url() const;
  void set_bulletin_url(const ::std::string& value);
  #if LANG_CXX11
  void set_bulletin_url(::std::string&& value);
  #endif
  void set_bulletin_url(const char* value);
  void set_bulletin_url(const char* value, size_t size);
  ::std::string* mutable_bulletin_url();
  ::std::string* release_bulletin_url();
  void set_allocated_bulletin_url(::std::string* bulletin_url);

  // string resource_url_bak = 12;
  void clear_resource_url_bak();
  static const int kResourceUrlBakFieldNumber = 12;
  const ::std::string& resource_url_bak() const;
  void set_resource_url_bak(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_url_bak(::std::string&& value);
  #endif
  void set_resource_url_bak(const char* value);
  void set_resource_url_bak(const char* value, size_t size);
  ::std::string* mutable_resource_url_bak();
  ::std::string* release_resource_url_bak();
  void set_allocated_resource_url_bak(::std::string* resource_url_bak);

  // string data_url_bak = 13;
  void clear_data_url_bak();
  static const int kDataUrlBakFieldNumber = 13;
  const ::std::string& data_url_bak() const;
  void set_data_url_bak(const ::std::string& value);
  #if LANG_CXX11
  void set_data_url_bak(::std::string&& value);
  #endif
  void set_data_url_bak(const char* value);
  void set_data_url_bak(const char* value, size_t size);
  ::std::string* mutable_data_url_bak();
  ::std::string* release_data_url_bak();
  void set_allocated_data_url_bak(::std::string* data_url_bak);

  // string handbook_url = 16;
  void clear_handbook_url();
  static const int kHandbookUrlFieldNumber = 16;
  const ::std::string& handbook_url() const;
  void set_handbook_url(const ::std::string& value);
  #if LANG_CXX11
  void set_handbook_url(::std::string&& value);
  #endif
  void set_handbook_url(const char* value);
  void set_handbook_url(const char* value, size_t size);
  ::std::string* mutable_handbook_url();
  ::std::string* release_handbook_url();
  void set_allocated_handbook_url(::std::string* handbook_url);

  // string client_data_md5 = 19;
  void clear_client_data_md5();
  static const int kClientDataMd5FieldNumber = 19;
  const ::std::string& client_data_md5() const;
  void set_client_data_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_data_md5(::std::string&& value);
  #endif
  void set_client_data_md5(const char* value);
  void set_client_data_md5(const char* value, size_t size);
  ::std::string* mutable_client_data_md5();
  ::std::string* release_client_data_md5();
  void set_allocated_client_data_md5(::std::string* client_data_md5);

  // string client_silence_data_md5 = 20;
  void clear_client_silence_data_md5();
  static const int kClientSilenceDataMd5FieldNumber = 20;
  const ::std::string& client_silence_data_md5() const;
  void set_client_silence_data_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_data_md5(::std::string&& value);
  #endif
  void set_client_silence_data_md5(const char* value);
  void set_client_silence_data_md5(const char* value, size_t size);
  ::std::string* mutable_client_silence_data_md5();
  ::std::string* release_client_silence_data_md5();
  void set_allocated_client_silence_data_md5(::std::string* client_silence_data_md5);

  // bytes secret_key = 23;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 23;
  const ::std::string& secret_key() const;
  void set_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_secret_key(::std::string&& value);
  #endif
  void set_secret_key(const char* value);
  void set_secret_key(const void* value, size_t size);
  ::std::string* mutable_secret_key();
  ::std::string* release_secret_key();
  void set_allocated_secret_key(::std::string* secret_key);

  // string official_community_url = 24;
  void clear_official_community_url();
  static const int kOfficialCommunityUrlFieldNumber = 24;
  const ::std::string& official_community_url() const;
  void set_official_community_url(const ::std::string& value);
  #if LANG_CXX11
  void set_official_community_url(::std::string&& value);
  #endif
  void set_official_community_url(const char* value);
  void set_official_community_url(const char* value, size_t size);
  ::std::string* mutable_official_community_url();
  ::std::string* release_official_community_url();
  void set_allocated_official_community_url(::std::string* official_community_url);

  // string client_version_suffix = 26;
  void clear_client_version_suffix();
  static const int kClientVersionSuffixFieldNumber = 26;
  const ::std::string& client_version_suffix() const;
  void set_client_version_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version_suffix(::std::string&& value);
  #endif
  void set_client_version_suffix(const char* value);
  void set_client_version_suffix(const char* value, size_t size);
  ::std::string* mutable_client_version_suffix();
  ::std::string* release_client_version_suffix();
  void set_allocated_client_version_suffix(::std::string* client_version_suffix);

  // string client_silence_version_suffix = 27;
  void clear_client_silence_version_suffix();
  static const int kClientSilenceVersionSuffixFieldNumber = 27;
  const ::std::string& client_silence_version_suffix() const;
  void set_client_silence_version_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_version_suffix(::std::string&& value);
  #endif
  void set_client_silence_version_suffix(const char* value);
  void set_client_silence_version_suffix(const char* value, size_t size);
  ::std::string* mutable_client_silence_version_suffix();
  ::std::string* release_client_silence_version_suffix();
  void set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix);

  // string gateserver_domain_name = 29;
  void clear_gateserver_domain_name();
  static const int kGateserverDomainNameFieldNumber = 29;
  const ::std::string& gateserver_domain_name() const;
  void set_gateserver_domain_name(const ::std::string& value);
  #if LANG_CXX11
  void set_gateserver_domain_name(::std::string&& value);
  #endif
  void set_gateserver_domain_name(const char* value);
  void set_gateserver_domain_name(const char* value, size_t size);
  ::std::string* mutable_gateserver_domain_name();
  ::std::string* release_gateserver_domain_name();
  void set_allocated_gateserver_domain_name(::std::string* gateserver_domain_name);

  // string user_center_url = 30;
  void clear_user_center_url();
  static const int kUserCenterUrlFieldNumber = 30;
  const ::std::string& user_center_url() const;
  void set_user_center_url(const ::std::string& value);
  #if LANG_CXX11
  void set_user_center_url(::std::string&& value);
  #endif
  void set_user_center_url(const char* value);
  void set_user_center_url(const char* value, size_t size);
  ::std::string* mutable_user_center_url();
  ::std::string* release_user_center_url();
  void set_allocated_user_center_url(::std::string* user_center_url);

  // string account_bind_url = 31;
  void clear_account_bind_url();
  static const int kAccountBindUrlFieldNumber = 31;
  const ::std::string& account_bind_url() const;
  void set_account_bind_url(const ::std::string& value);
  #if LANG_CXX11
  void set_account_bind_url(::std::string&& value);
  #endif
  void set_account_bind_url(const char* value);
  void set_account_bind_url(const char* value, size_t size);
  ::std::string* mutable_account_bind_url();
  ::std::string* release_account_bind_url();
  void set_allocated_account_bind_url(::std::string* account_bind_url);

  // string cdkey_url = 32;
  void clear_cdkey_url();
  static const int kCdkeyUrlFieldNumber = 32;
  const ::std::string& cdkey_url() const;
  void set_cdkey_url(const ::std::string& value);
  #if LANG_CXX11
  void set_cdkey_url(::std::string&& value);
  #endif
  void set_cdkey_url(const char* value);
  void set_cdkey_url(const char* value, size_t size);
  ::std::string* mutable_cdkey_url();
  ::std::string* release_cdkey_url();
  void set_allocated_cdkey_url(::std::string* cdkey_url);

  // string privacy_policy_url = 33;
  void clear_privacy_policy_url();
  static const int kPrivacyPolicyUrlFieldNumber = 33;
  const ::std::string& privacy_policy_url() const;
  void set_privacy_policy_url(const ::std::string& value);
  #if LANG_CXX11
  void set_privacy_policy_url(::std::string&& value);
  #endif
  void set_privacy_policy_url(const char* value);
  void set_privacy_policy_url(const char* value, size_t size);
  ::std::string* mutable_privacy_policy_url();
  ::std::string* release_privacy_policy_url();
  void set_allocated_privacy_policy_url(::std::string* privacy_policy_url);

  // string next_resource_url = 34;
  void clear_next_resource_url();
  static const int kNextResourceUrlFieldNumber = 34;
  const ::std::string& next_resource_url() const;
  void set_next_resource_url(const ::std::string& value);
  #if LANG_CXX11
  void set_next_resource_url(::std::string&& value);
  #endif
  void set_next_resource_url(const char* value);
  void set_next_resource_url(const char* value, size_t size);
  ::std::string* mutable_next_resource_url();
  ::std::string* release_next_resource_url();
  void set_allocated_next_resource_url(::std::string* next_resource_url);

  // string game_biz = 36;
  void clear_game_biz();
  static const int kGameBizFieldNumber = 36;
  const ::std::string& game_biz() const;
  void set_game_biz(const ::std::string& value);
  #if LANG_CXX11
  void set_game_biz(::std::string&& value);
  #endif
  void set_game_biz(const char* value);
  void set_game_biz(const char* value, size_t size);
  ::std::string* mutable_game_biz();
  ::std::string* release_game_biz();
  void set_allocated_game_biz(::std::string* game_biz);

  // .proto.ResVersionConfig res_version_config = 22;
  bool has_res_version_config() const;
  void clear_res_version_config();
  static const int kResVersionConfigFieldNumber = 22;
  const ::proto::ResVersionConfig& res_version_config() const;
  ::proto::ResVersionConfig* mutable_res_version_config();
  ::proto::ResVersionConfig* release_res_version_config();
  void set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config);

  // .proto.ResVersionConfig next_res_version_config = 35;
  bool has_next_res_version_config() const;
  void clear_next_res_version_config();
  static const int kNextResVersionConfigFieldNumber = 35;
  const ::proto::ResVersionConfig& next_res_version_config() const;
  ::proto::ResVersionConfig* mutable_next_res_version_config();
  ::proto::ResVersionConfig* release_next_res_version_config();
  void set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config);

  // uint32 gateserver_port = 2;
  void clear_gateserver_port();
  static const int kGateserverPortFieldNumber = 2;
  ::google::protobuf::uint32 gateserver_port() const;
  void set_gateserver_port(::google::protobuf::uint32 value);

  // uint32 client_data_version = 14;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 14;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // uint32 client_silence_data_version = 18;
  void clear_client_silence_data_version();
  static const int kClientSilenceDataVersionFieldNumber = 18;
  ::google::protobuf::uint32 client_silence_data_version() const;
  void set_client_silence_data_version(::google::protobuf::uint32 value);

  // bool use_gateserver_domain_name = 28;
  void clear_use_gateserver_domain_name();
  static const int kUseGateserverDomainNameFieldNumber = 28;
  bool use_gateserver_domain_name() const;
  void set_use_gateserver_domain_name(bool value);

  // @@protoc_insertion_point(class_scope:proto.RegionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr gateserver_ip_;
  ::google::protobuf::internal::ArenaStringPtr pay_callback_url_;
  ::google::protobuf::internal::ArenaStringPtr area_type_;
  ::google::protobuf::internal::ArenaStringPtr resource_url_;
  ::google::protobuf::internal::ArenaStringPtr data_url_;
  ::google::protobuf::internal::ArenaStringPtr feedback_url_;
  ::google::protobuf::internal::ArenaStringPtr bulletin_url_;
  ::google::protobuf::internal::ArenaStringPtr resource_url_bak_;
  ::google::protobuf::internal::ArenaStringPtr data_url_bak_;
  ::google::protobuf::internal::ArenaStringPtr handbook_url_;
  ::google::protobuf::internal::ArenaStringPtr client_data_md5_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_data_md5_;
  ::google::protobuf::internal::ArenaStringPtr secret_key_;
  ::google::protobuf::internal::ArenaStringPtr official_community_url_;
  ::google::protobuf::internal::ArenaStringPtr client_version_suffix_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_version_suffix_;
  ::google::protobuf::internal::ArenaStringPtr gateserver_domain_name_;
  ::google::protobuf::internal::ArenaStringPtr user_center_url_;
  ::google::protobuf::internal::ArenaStringPtr account_bind_url_;
  ::google::protobuf::internal::ArenaStringPtr cdkey_url_;
  ::google::protobuf::internal::ArenaStringPtr privacy_policy_url_;
  ::google::protobuf::internal::ArenaStringPtr next_resource_url_;
  ::google::protobuf::internal::ArenaStringPtr game_biz_;
  ::proto::ResVersionConfig* res_version_config_;
  ::proto::ResVersionConfig* next_res_version_config_;
  ::google::protobuf::uint32 gateserver_port_;
  ::google::protobuf::uint32 client_data_version_;
  ::google::protobuf::uint32 client_silence_data_version_;
  bool use_gateserver_domain_name_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryCurrRegionHttpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryCurrRegionHttpRsp) */ {
 public:
  QueryCurrRegionHttpRsp();
  virtual ~QueryCurrRegionHttpRsp();

  QueryCurrRegionHttpRsp(const QueryCurrRegionHttpRsp& from);

  inline QueryCurrRegionHttpRsp& operator=(const QueryCurrRegionHttpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryCurrRegionHttpRsp(QueryCurrRegionHttpRsp&& from) noexcept
    : QueryCurrRegionHttpRsp() {
    *this = ::std::move(from);
  }

  inline QueryCurrRegionHttpRsp& operator=(QueryCurrRegionHttpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCurrRegionHttpRsp& default_instance();

  enum DetailCase {
    kForceUdpate = 4,
    kStopServer = 5,
    DETAIL_NOT_SET = 0,
  };

  static inline const QueryCurrRegionHttpRsp* internal_default_instance() {
    return reinterpret_cast<const QueryCurrRegionHttpRsp*>(
               &_QueryCurrRegionHttpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(QueryCurrRegionHttpRsp* other);
  friend void swap(QueryCurrRegionHttpRsp& a, QueryCurrRegionHttpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryCurrRegionHttpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryCurrRegionHttpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryCurrRegionHttpRsp& from);
  void MergeFrom(const QueryCurrRegionHttpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryCurrRegionHttpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes client_secret_key = 11;
  void clear_client_secret_key();
  static const int kClientSecretKeyFieldNumber = 11;
  const ::std::string& client_secret_key() const;
  void set_client_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_secret_key(::std::string&& value);
  #endif
  void set_client_secret_key(const char* value);
  void set_client_secret_key(const void* value, size_t size);
  ::std::string* mutable_client_secret_key();
  ::std::string* release_client_secret_key();
  void set_allocated_client_secret_key(::std::string* client_secret_key);

  // bytes region_custom_config_encrypted = 12;
  void clear_region_custom_config_encrypted();
  static const int kRegionCustomConfigEncryptedFieldNumber = 12;
  const ::std::string& region_custom_config_encrypted() const;
  void set_region_custom_config_encrypted(const ::std::string& value);
  #if LANG_CXX11
  void set_region_custom_config_encrypted(::std::string&& value);
  #endif
  void set_region_custom_config_encrypted(const char* value);
  void set_region_custom_config_encrypted(const void* value, size_t size);
  ::std::string* mutable_region_custom_config_encrypted();
  ::std::string* release_region_custom_config_encrypted();
  void set_allocated_region_custom_config_encrypted(::std::string* region_custom_config_encrypted);

  // bytes client_region_custom_config_encrypted = 13;
  void clear_client_region_custom_config_encrypted();
  static const int kClientRegionCustomConfigEncryptedFieldNumber = 13;
  const ::std::string& client_region_custom_config_encrypted() const;
  void set_client_region_custom_config_encrypted(const ::std::string& value);
  #if LANG_CXX11
  void set_client_region_custom_config_encrypted(::std::string&& value);
  #endif
  void set_client_region_custom_config_encrypted(const char* value);
  void set_client_region_custom_config_encrypted(const void* value, size_t size);
  ::std::string* mutable_client_region_custom_config_encrypted();
  ::std::string* release_client_region_custom_config_encrypted();
  void set_allocated_client_region_custom_config_encrypted(::std::string* client_region_custom_config_encrypted);

  // .proto.RegionInfo region_info = 3;
  bool has_region_info() const;
  void clear_region_info();
  static const int kRegionInfoFieldNumber = 3;
  const ::proto::RegionInfo& region_info() const;
  ::proto::RegionInfo* mutable_region_info();
  ::proto::RegionInfo* release_region_info();
  void set_allocated_region_info(::proto::RegionInfo* region_info);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.ForceUpdateInfo force_udpate = 4;
  bool has_force_udpate() const;
  void clear_force_udpate();
  static const int kForceUdpateFieldNumber = 4;
  const ::proto::ForceUpdateInfo& force_udpate() const;
  ::proto::ForceUpdateInfo* mutable_force_udpate();
  ::proto::ForceUpdateInfo* release_force_udpate();
  void set_allocated_force_udpate(::proto::ForceUpdateInfo* force_udpate);

  // .proto.StopServerInfo stop_server = 5;
  bool has_stop_server() const;
  void clear_stop_server();
  static const int kStopServerFieldNumber = 5;
  const ::proto::StopServerInfo& stop_server() const;
  ::proto::StopServerInfo* mutable_stop_server();
  ::proto::StopServerInfo* release_stop_server();
  void set_allocated_stop_server(::proto::StopServerInfo* stop_server);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.QueryCurrRegionHttpRsp)
 private:
  void set_has_force_udpate();
  void set_has_stop_server();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr client_secret_key_;
  ::google::protobuf::internal::ArenaStringPtr region_custom_config_encrypted_;
  ::google::protobuf::internal::ArenaStringPtr client_region_custom_config_encrypted_;
  ::proto::RegionInfo* region_info_;
  ::google::protobuf::int32 retcode_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::ForceUpdateInfo* force_udpate_;
    ::proto::StopServerInfo* stop_server_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerUidExtInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerUidExtInfo) */ {
 public:
  PlayerUidExtInfo();
  virtual ~PlayerUidExtInfo();

  PlayerUidExtInfo(const PlayerUidExtInfo& from);

  inline PlayerUidExtInfo& operator=(const PlayerUidExtInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerUidExtInfo(PlayerUidExtInfo&& from) noexcept
    : PlayerUidExtInfo() {
    *this = ::std::move(from);
  }

  inline PlayerUidExtInfo& operator=(PlayerUidExtInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerUidExtInfo& default_instance();

  static inline const PlayerUidExtInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerUidExtInfo*>(
               &_PlayerUidExtInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PlayerUidExtInfo* other);
  friend void swap(PlayerUidExtInfo& a, PlayerUidExtInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerUidExtInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerUidExtInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerUidExtInfo& from);
  void MergeFrom(const PlayerUidExtInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerUidExtInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 reg_platform = 1;
  void clear_reg_platform();
  static const int kRegPlatformFieldNumber = 1;
  ::google::protobuf::uint32 reg_platform() const;
  void set_reg_platform(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerUidExtInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reg_platform_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Reliquary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Reliquary) */ {
 public:
  Reliquary();
  virtual ~Reliquary();

  Reliquary(const Reliquary& from);

  inline Reliquary& operator=(const Reliquary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reliquary(Reliquary&& from) noexcept
    : Reliquary() {
    *this = ::std::move(from);
  }

  inline Reliquary& operator=(Reliquary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reliquary& default_instance();

  static inline const Reliquary* internal_default_instance() {
    return reinterpret_cast<const Reliquary*>(
               &_Reliquary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Reliquary* other);
  friend void swap(Reliquary& a, Reliquary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reliquary* New() const PROTOBUF_FINAL { return New(NULL); }

  Reliquary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reliquary& from);
  void MergeFrom(const Reliquary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reliquary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 append_prop_id_list = 5;
  int append_prop_id_list_size() const;
  void clear_append_prop_id_list();
  static const int kAppendPropIdListFieldNumber = 5;
  ::google::protobuf::uint32 append_prop_id_list(int index) const;
  void set_append_prop_id_list(int index, ::google::protobuf::uint32 value);
  void add_append_prop_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      append_prop_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_append_prop_id_list();

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 promote_level = 3;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 3;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // uint32 main_prop_id = 4;
  void clear_main_prop_id();
  static const int kMainPropIdFieldNumber = 4;
  ::google::protobuf::uint32 main_prop_id() const;
  void set_main_prop_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Reliquary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > append_prop_id_list_;
  mutable int _append_prop_id_list_cached_byte_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 promote_level_;
  ::google::protobuf::uint32 main_prop_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Weapon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Weapon) */ {
 public:
  Weapon();
  virtual ~Weapon();

  Weapon(const Weapon& from);

  inline Weapon& operator=(const Weapon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Weapon(Weapon&& from) noexcept
    : Weapon() {
    *this = ::std::move(from);
  }

  inline Weapon& operator=(Weapon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Weapon& default_instance();

  static inline const Weapon* internal_default_instance() {
    return reinterpret_cast<const Weapon*>(
               &_Weapon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Weapon* other);
  friend void swap(Weapon& a, Weapon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Weapon* New() const PROTOBUF_FINAL { return New(NULL); }

  Weapon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Weapon& from);
  void MergeFrom(const Weapon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Weapon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> affix_map = 4;
  int affix_map_size() const;
  void clear_affix_map();
  static const int kAffixMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      affix_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_affix_map();

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 promote_level = 3;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 3;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Weapon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class Weapon_AffixMapEntry : public ::google::protobuf::internal::MapEntry<Weapon_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Weapon_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    Weapon_AffixMapEntry();
    Weapon_AffixMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Weapon_AffixMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Weapon_AffixMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Weapon_AffixMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > affix_map_;
  private:
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MaterialDeleteInfo_CountDownDelete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MaterialDeleteInfo.CountDownDelete) */ {
 public:
  MaterialDeleteInfo_CountDownDelete();
  virtual ~MaterialDeleteInfo_CountDownDelete();

  MaterialDeleteInfo_CountDownDelete(const MaterialDeleteInfo_CountDownDelete& from);

  inline MaterialDeleteInfo_CountDownDelete& operator=(const MaterialDeleteInfo_CountDownDelete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialDeleteInfo_CountDownDelete(MaterialDeleteInfo_CountDownDelete&& from) noexcept
    : MaterialDeleteInfo_CountDownDelete() {
    *this = ::std::move(from);
  }

  inline MaterialDeleteInfo_CountDownDelete& operator=(MaterialDeleteInfo_CountDownDelete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialDeleteInfo_CountDownDelete& default_instance();

  static inline const MaterialDeleteInfo_CountDownDelete* internal_default_instance() {
    return reinterpret_cast<const MaterialDeleteInfo_CountDownDelete*>(
               &_MaterialDeleteInfo_CountDownDelete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(MaterialDeleteInfo_CountDownDelete* other);
  friend void swap(MaterialDeleteInfo_CountDownDelete& a, MaterialDeleteInfo_CountDownDelete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialDeleteInfo_CountDownDelete* New() const PROTOBUF_FINAL { return New(NULL); }

  MaterialDeleteInfo_CountDownDelete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaterialDeleteInfo_CountDownDelete& from);
  void MergeFrom(const MaterialDeleteInfo_CountDownDelete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaterialDeleteInfo_CountDownDelete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> delete_time_num_map = 1;
  int delete_time_num_map_size() const;
  void clear_delete_time_num_map();
  static const int kDeleteTimeNumMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      delete_time_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_delete_time_num_map();

  // uint32 config_count_down_time = 2;
  void clear_config_count_down_time();
  static const int kConfigCountDownTimeFieldNumber = 2;
  ::google::protobuf::uint32 config_count_down_time() const;
  void set_config_count_down_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MaterialDeleteInfo.CountDownDelete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry : public ::google::protobuf::internal::MapEntry<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry();
    MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > delete_time_num_map_;
  private:
  ::google::protobuf::uint32 config_count_down_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaterialDeleteInfo_DateTimeDelete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MaterialDeleteInfo.DateTimeDelete) */ {
 public:
  MaterialDeleteInfo_DateTimeDelete();
  virtual ~MaterialDeleteInfo_DateTimeDelete();

  MaterialDeleteInfo_DateTimeDelete(const MaterialDeleteInfo_DateTimeDelete& from);

  inline MaterialDeleteInfo_DateTimeDelete& operator=(const MaterialDeleteInfo_DateTimeDelete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialDeleteInfo_DateTimeDelete(MaterialDeleteInfo_DateTimeDelete&& from) noexcept
    : MaterialDeleteInfo_DateTimeDelete() {
    *this = ::std::move(from);
  }

  inline MaterialDeleteInfo_DateTimeDelete& operator=(MaterialDeleteInfo_DateTimeDelete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialDeleteInfo_DateTimeDelete& default_instance();

  static inline const MaterialDeleteInfo_DateTimeDelete* internal_default_instance() {
    return reinterpret_cast<const MaterialDeleteInfo_DateTimeDelete*>(
               &_MaterialDeleteInfo_DateTimeDelete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(MaterialDeleteInfo_DateTimeDelete* other);
  friend void swap(MaterialDeleteInfo_DateTimeDelete& a, MaterialDeleteInfo_DateTimeDelete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialDeleteInfo_DateTimeDelete* New() const PROTOBUF_FINAL { return New(NULL); }

  MaterialDeleteInfo_DateTimeDelete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaterialDeleteInfo_DateTimeDelete& from);
  void MergeFrom(const MaterialDeleteInfo_DateTimeDelete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaterialDeleteInfo_DateTimeDelete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 delete_time = 1;
  void clear_delete_time();
  static const int kDeleteTimeFieldNumber = 1;
  ::google::protobuf::uint32 delete_time() const;
  void set_delete_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MaterialDeleteInfo.DateTimeDelete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 delete_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MaterialDeleteInfo_DelayWeekCountDownDelete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MaterialDeleteInfo.DelayWeekCountDownDelete) */ {
 public:
  MaterialDeleteInfo_DelayWeekCountDownDelete();
  virtual ~MaterialDeleteInfo_DelayWeekCountDownDelete();

  MaterialDeleteInfo_DelayWeekCountDownDelete(const MaterialDeleteInfo_DelayWeekCountDownDelete& from);

  inline MaterialDeleteInfo_DelayWeekCountDownDelete& operator=(const MaterialDeleteInfo_DelayWeekCountDownDelete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialDeleteInfo_DelayWeekCountDownDelete(MaterialDeleteInfo_DelayWeekCountDownDelete&& from) noexcept
    : MaterialDeleteInfo_DelayWeekCountDownDelete() {
    *this = ::std::move(from);
  }

  inline MaterialDeleteInfo_DelayWeekCountDownDelete& operator=(MaterialDeleteInfo_DelayWeekCountDownDelete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialDeleteInfo_DelayWeekCountDownDelete& default_instance();

  static inline const MaterialDeleteInfo_DelayWeekCountDownDelete* internal_default_instance() {
    return reinterpret_cast<const MaterialDeleteInfo_DelayWeekCountDownDelete*>(
               &_MaterialDeleteInfo_DelayWeekCountDownDelete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(MaterialDeleteInfo_DelayWeekCountDownDelete* other);
  friend void swap(MaterialDeleteInfo_DelayWeekCountDownDelete& a, MaterialDeleteInfo_DelayWeekCountDownDelete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialDeleteInfo_DelayWeekCountDownDelete* New() const PROTOBUF_FINAL { return New(NULL); }

  MaterialDeleteInfo_DelayWeekCountDownDelete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaterialDeleteInfo_DelayWeekCountDownDelete& from);
  void MergeFrom(const MaterialDeleteInfo_DelayWeekCountDownDelete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaterialDeleteInfo_DelayWeekCountDownDelete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> delete_time_num_map = 1;
  int delete_time_num_map_size() const;
  void clear_delete_time_num_map();
  static const int kDeleteTimeNumMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      delete_time_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_delete_time_num_map();

  // uint32 config_delay_week = 2;
  void clear_config_delay_week();
  static const int kConfigDelayWeekFieldNumber = 2;
  ::google::protobuf::uint32 config_delay_week() const;
  void set_config_delay_week(::google::protobuf::uint32 value);

  // uint32 config_count_down_time = 3;
  void clear_config_count_down_time();
  static const int kConfigCountDownTimeFieldNumber = 3;
  ::google::protobuf::uint32 config_count_down_time() const;
  void set_config_count_down_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MaterialDeleteInfo.DelayWeekCountDownDelete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry : public ::google::protobuf::internal::MapEntry<MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry();
    MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MaterialDeleteInfo_DelayWeekCountDownDelete_DeleteTimeNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > delete_time_num_map_;
  private:
  ::google::protobuf::uint32 config_delay_week_;
  ::google::protobuf::uint32 config_count_down_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaterialDeleteInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MaterialDeleteInfo) */ {
 public:
  MaterialDeleteInfo();
  virtual ~MaterialDeleteInfo();

  MaterialDeleteInfo(const MaterialDeleteInfo& from);

  inline MaterialDeleteInfo& operator=(const MaterialDeleteInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialDeleteInfo(MaterialDeleteInfo&& from) noexcept
    : MaterialDeleteInfo() {
    *this = ::std::move(from);
  }

  inline MaterialDeleteInfo& operator=(MaterialDeleteInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialDeleteInfo& default_instance();

  enum DeleteInfoCase {
    kCountDownDelete = 2,
    kDateDelete = 3,
    kDelayWeekCountDownDelete = 4,
    DELETE_INFO_NOT_SET = 0,
  };

  static inline const MaterialDeleteInfo* internal_default_instance() {
    return reinterpret_cast<const MaterialDeleteInfo*>(
               &_MaterialDeleteInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(MaterialDeleteInfo* other);
  friend void swap(MaterialDeleteInfo& a, MaterialDeleteInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialDeleteInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MaterialDeleteInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaterialDeleteInfo& from);
  void MergeFrom(const MaterialDeleteInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaterialDeleteInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MaterialDeleteInfo_CountDownDelete CountDownDelete;
  typedef MaterialDeleteInfo_DateTimeDelete DateTimeDelete;
  typedef MaterialDeleteInfo_DelayWeekCountDownDelete DelayWeekCountDownDelete;

  // accessors -------------------------------------------------------

  // bool has_delete_config = 1;
  void clear_has_delete_config();
  static const int kHasDeleteConfigFieldNumber = 1;
  bool has_delete_config() const;
  void set_has_delete_config(bool value);

  // .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
  bool has_count_down_delete() const;
  void clear_count_down_delete();
  static const int kCountDownDeleteFieldNumber = 2;
  const ::proto::MaterialDeleteInfo_CountDownDelete& count_down_delete() const;
  ::proto::MaterialDeleteInfo_CountDownDelete* mutable_count_down_delete();
  ::proto::MaterialDeleteInfo_CountDownDelete* release_count_down_delete();
  void set_allocated_count_down_delete(::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete);

  // .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
  bool has_date_delete() const;
  void clear_date_delete();
  static const int kDateDeleteFieldNumber = 3;
  const ::proto::MaterialDeleteInfo_DateTimeDelete& date_delete() const;
  ::proto::MaterialDeleteInfo_DateTimeDelete* mutable_date_delete();
  ::proto::MaterialDeleteInfo_DateTimeDelete* release_date_delete();
  void set_allocated_date_delete(::proto::MaterialDeleteInfo_DateTimeDelete* date_delete);

  // .proto.MaterialDeleteInfo.DelayWeekCountDownDelete delay_week_count_down_delete = 4;
  bool has_delay_week_count_down_delete() const;
  void clear_delay_week_count_down_delete();
  static const int kDelayWeekCountDownDeleteFieldNumber = 4;
  const ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete& delay_week_count_down_delete() const;
  ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* mutable_delay_week_count_down_delete();
  ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* release_delay_week_count_down_delete();
  void set_allocated_delay_week_count_down_delete(::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* delay_week_count_down_delete);

  DeleteInfoCase delete_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.MaterialDeleteInfo)
 private:
  void set_has_count_down_delete();
  void set_has_date_delete();
  void set_has_delay_week_count_down_delete();

  inline bool has_delete_info() const;
  void clear_delete_info();
  inline void clear_has_delete_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool has_delete_config_;
  union DeleteInfoUnion {
    DeleteInfoUnion() {}
    ::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete_;
    ::proto::MaterialDeleteInfo_DateTimeDelete* date_delete_;
    ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* delay_week_count_down_delete_;
  } delete_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Material : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Material) */ {
 public:
  Material();
  virtual ~Material();

  Material(const Material& from);

  inline Material& operator=(const Material& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Material(Material&& from) noexcept
    : Material() {
    *this = ::std::move(from);
  }

  inline Material& operator=(Material&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Material& default_instance();

  static inline const Material* internal_default_instance() {
    return reinterpret_cast<const Material*>(
               &_Material_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(Material* other);
  friend void swap(Material& a, Material& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Material* New() const PROTOBUF_FINAL { return New(NULL); }

  Material* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Material& from);
  void MergeFrom(const Material& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Material* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MaterialDeleteInfo delete_info = 2;
  bool has_delete_info() const;
  void clear_delete_info();
  static const int kDeleteInfoFieldNumber = 2;
  const ::proto::MaterialDeleteInfo& delete_info() const;
  ::proto::MaterialDeleteInfo* mutable_delete_info();
  ::proto::MaterialDeleteInfo* release_delete_info();
  void set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info);

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Material)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MaterialDeleteInfo* delete_info_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Equip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Equip) */ {
 public:
  Equip();
  virtual ~Equip();

  Equip(const Equip& from);

  inline Equip& operator=(const Equip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Equip(Equip&& from) noexcept
    : Equip() {
    *this = ::std::move(from);
  }

  inline Equip& operator=(Equip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Equip& default_instance();

  enum DetailCase {
    kReliquary = 1,
    kWeapon = 2,
    DETAIL_NOT_SET = 0,
  };

  static inline const Equip* internal_default_instance() {
    return reinterpret_cast<const Equip*>(
               &_Equip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(Equip* other);
  friend void swap(Equip& a, Equip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Equip* New() const PROTOBUF_FINAL { return New(NULL); }

  Equip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Equip& from);
  void MergeFrom(const Equip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Equip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_locked = 3;
  void clear_is_locked();
  static const int kIsLockedFieldNumber = 3;
  bool is_locked() const;
  void set_is_locked(bool value);

  // .proto.Reliquary reliquary = 1;
  bool has_reliquary() const;
  void clear_reliquary();
  static const int kReliquaryFieldNumber = 1;
  const ::proto::Reliquary& reliquary() const;
  ::proto::Reliquary* mutable_reliquary();
  ::proto::Reliquary* release_reliquary();
  void set_allocated_reliquary(::proto::Reliquary* reliquary);

  // .proto.Weapon weapon = 2;
  bool has_weapon() const;
  void clear_weapon();
  static const int kWeaponFieldNumber = 2;
  const ::proto::Weapon& weapon() const;
  ::proto::Weapon* mutable_weapon();
  ::proto::Weapon* release_weapon();
  void set_allocated_weapon(::proto::Weapon* weapon);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.Equip)
 private:
  void set_has_reliquary();
  void set_has_weapon();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_locked_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::Reliquary* reliquary_;
    ::proto::Weapon* weapon_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Furniture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Furniture) */ {
 public:
  Furniture();
  virtual ~Furniture();

  Furniture(const Furniture& from);

  inline Furniture& operator=(const Furniture& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Furniture(Furniture&& from) noexcept
    : Furniture() {
    *this = ::std::move(from);
  }

  inline Furniture& operator=(Furniture&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Furniture& default_instance();

  static inline const Furniture* internal_default_instance() {
    return reinterpret_cast<const Furniture*>(
               &_Furniture_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(Furniture* other);
  friend void swap(Furniture& a, Furniture& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Furniture* New() const PROTOBUF_FINAL { return New(NULL); }

  Furniture* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Furniture& from);
  void MergeFrom(const Furniture& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Furniture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Furniture)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  enum DetailCase {
    kMaterial = 5,
    kEquip = 6,
    kFurniture = 7,
    DETAIL_NOT_SET = 0,
  };

  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(Item* other);
  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // .proto.Material material = 5;
  bool has_material() const;
  void clear_material();
  static const int kMaterialFieldNumber = 5;
  const ::proto::Material& material() const;
  ::proto::Material* mutable_material();
  ::proto::Material* release_material();
  void set_allocated_material(::proto::Material* material);

  // .proto.Equip equip = 6;
  bool has_equip() const;
  void clear_equip();
  static const int kEquipFieldNumber = 6;
  const ::proto::Equip& equip() const;
  ::proto::Equip* mutable_equip();
  ::proto::Equip* release_equip();
  void set_allocated_equip(::proto::Equip* equip);

  // .proto.Furniture furniture = 7;
  bool has_furniture() const;
  void clear_furniture();
  static const int kFurnitureFieldNumber = 7;
  const ::proto::Furniture& furniture() const;
  ::proto::Furniture* mutable_furniture();
  ::proto::Furniture* release_furniture();
  void set_allocated_furniture(::proto::Furniture* furniture);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.Item)
 private:
  void set_has_material();
  void set_has_equip();
  void set_has_furniture();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 item_id_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::Material* material_;
    ::proto::Equip* equip_;
    ::proto::Furniture* furniture_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ItemParam) */ {
 public:
  ItemParam();
  virtual ~ItemParam();

  ItemParam(const ItemParam& from);

  inline ItemParam& operator=(const ItemParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemParam(ItemParam&& from) noexcept
    : ItemParam() {
    *this = ::std::move(from);
  }

  inline ItemParam& operator=(ItemParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemParam& default_instance();

  static inline const ItemParam* internal_default_instance() {
    return reinterpret_cast<const ItemParam*>(
               &_ItemParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ItemParam* other);
  friend void swap(ItemParam& a, ItemParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemParam& from);
  void MergeFrom(const ItemParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ItemParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EquipParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EquipParam) */ {
 public:
  EquipParam();
  virtual ~EquipParam();

  EquipParam(const EquipParam& from);

  inline EquipParam& operator=(const EquipParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EquipParam(EquipParam&& from) noexcept
    : EquipParam() {
    *this = ::std::move(from);
  }

  inline EquipParam& operator=(EquipParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipParam& default_instance();

  static inline const EquipParam* internal_default_instance() {
    return reinterpret_cast<const EquipParam*>(
               &_EquipParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(EquipParam* other);
  friend void swap(EquipParam& a, EquipParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EquipParam* New() const PROTOBUF_FINAL { return New(NULL); }

  EquipParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EquipParam& from);
  void MergeFrom(const EquipParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EquipParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 item_num = 2;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::uint32 item_num() const;
  void set_item_num(::google::protobuf::uint32 value);

  // uint32 item_level = 3;
  void clear_item_level();
  static const int kItemLevelFieldNumber = 3;
  ::google::protobuf::uint32 item_level() const;
  void set_item_level(::google::protobuf::uint32 value);

  // uint32 promote_level = 4;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 4;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EquipParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EquipParamList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EquipParamList) */ {
 public:
  EquipParamList();
  virtual ~EquipParamList();

  EquipParamList(const EquipParamList& from);

  inline EquipParamList& operator=(const EquipParamList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EquipParamList(EquipParamList&& from) noexcept
    : EquipParamList() {
    *this = ::std::move(from);
  }

  inline EquipParamList& operator=(EquipParamList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipParamList& default_instance();

  static inline const EquipParamList* internal_default_instance() {
    return reinterpret_cast<const EquipParamList*>(
               &_EquipParamList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(EquipParamList* other);
  friend void swap(EquipParamList& a, EquipParamList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EquipParamList* New() const PROTOBUF_FINAL { return New(NULL); }

  EquipParamList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EquipParamList& from);
  void MergeFrom(const EquipParamList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EquipParamList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.EquipParam item_list = 1;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 1;
  const ::proto::EquipParam& item_list(int index) const;
  ::proto::EquipParam* mutable_item_list(int index);
  ::proto::EquipParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >&
      item_list() const;

  // @@protoc_insertion_point(class_scope:proto.EquipParamList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EquipParam > item_list_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Reward) */ {
 public:
  Reward();
  virtual ~Reward();

  Reward(const Reward& from);

  inline Reward& operator=(const Reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reward(Reward&& from) noexcept
    : Reward() {
    *this = ::std::move(from);
  }

  inline Reward& operator=(Reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reward& default_instance();

  static inline const Reward* internal_default_instance() {
    return reinterpret_cast<const Reward*>(
               &_Reward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(Reward* other);
  friend void swap(Reward& a, Reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reward* New() const PROTOBUF_FINAL { return New(NULL); }

  Reward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reward& from);
  void MergeFrom(const Reward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 2;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 2;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // uint32 reward_id = 1;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::google::protobuf::uint32 reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityString) */ {
 public:
  AbilityString();
  virtual ~AbilityString();

  AbilityString(const AbilityString& from);

  inline AbilityString& operator=(const AbilityString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityString(AbilityString&& from) noexcept
    : AbilityString() {
    *this = ::std::move(from);
  }

  inline AbilityString& operator=(AbilityString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityString& default_instance();

  enum TypeCase {
    kStr = 1,
    kHash = 2,
    TYPE_NOT_SET = 0,
  };

  static inline const AbilityString* internal_default_instance() {
    return reinterpret_cast<const AbilityString*>(
               &_AbilityString_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(AbilityString* other);
  friend void swap(AbilityString& a, AbilityString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityString* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityString* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityString& from);
  void MergeFrom(const AbilityString& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string str = 1;
  private:
  bool has_str() const;
  public:
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // uint32 hash = 2;
  private:
  bool has_hash() const;
  public:
  void clear_hash();
  static const int kHashFieldNumber = 2;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityString)
 private:
  void set_has_str();
  void set_has_hash();

  inline bool has_type() const;
  void clear_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::google::protobuf::internal::ArenaStringPtr str_;
    ::google::protobuf::uint32 hash_;
  } type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityFloatValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityFloatValue) */ {
 public:
  AbilityFloatValue();
  virtual ~AbilityFloatValue();

  AbilityFloatValue(const AbilityFloatValue& from);

  inline AbilityFloatValue& operator=(const AbilityFloatValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityFloatValue(AbilityFloatValue&& from) noexcept
    : AbilityFloatValue() {
    *this = ::std::move(from);
  }

  inline AbilityFloatValue& operator=(AbilityFloatValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityFloatValue& default_instance();

  static inline const AbilityFloatValue* internal_default_instance() {
    return reinterpret_cast<const AbilityFloatValue*>(
               &_AbilityFloatValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AbilityFloatValue* other);
  friend void swap(AbilityFloatValue& a, AbilityFloatValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityFloatValue* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityFloatValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityFloatValue& from);
  void MergeFrom(const AbilityFloatValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityFloatValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityFloatValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityScalarValueEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityScalarValueEntry) */ {
 public:
  AbilityScalarValueEntry();
  virtual ~AbilityScalarValueEntry();

  AbilityScalarValueEntry(const AbilityScalarValueEntry& from);

  inline AbilityScalarValueEntry& operator=(const AbilityScalarValueEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityScalarValueEntry(AbilityScalarValueEntry&& from) noexcept
    : AbilityScalarValueEntry() {
    *this = ::std::move(from);
  }

  inline AbilityScalarValueEntry& operator=(AbilityScalarValueEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityScalarValueEntry& default_instance();

  enum ValueCase {
    kFloatValue = 3,
    kStringValue = 4,
    kIntValue = 5,
    kUintValue = 6,
    VALUE_NOT_SET = 0,
  };

  static inline const AbilityScalarValueEntry* internal_default_instance() {
    return reinterpret_cast<const AbilityScalarValueEntry*>(
               &_AbilityScalarValueEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(AbilityScalarValueEntry* other);
  friend void swap(AbilityScalarValueEntry& a, AbilityScalarValueEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityScalarValueEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityScalarValueEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityScalarValueEntry& from);
  void MergeFrom(const AbilityScalarValueEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityScalarValueEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityString key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::proto::AbilityString& key() const;
  ::proto::AbilityString* mutable_key();
  ::proto::AbilityString* release_key();
  void set_allocated_key(::proto::AbilityString* key);

  // .proto.AbilityScalarType value_type = 2;
  void clear_value_type();
  static const int kValueTypeFieldNumber = 2;
  ::proto::AbilityScalarType value_type() const;
  void set_value_type(::proto::AbilityScalarType value);

  // float float_value = 3;
  private:
  bool has_float_value() const;
  public:
  void clear_float_value();
  static const int kFloatValueFieldNumber = 3;
  float float_value() const;
  void set_float_value(float value);

  // string string_value = 4;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 4;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // int32 int_value = 5;
  private:
  bool has_int_value() const;
  public:
  void clear_int_value();
  static const int kIntValueFieldNumber = 5;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  // uint32 uint_value = 6;
  private:
  bool has_uint_value() const;
  public:
  void clear_uint_value();
  static const int kUintValueFieldNumber = 6;
  ::google::protobuf::uint32 uint_value() const;
  void set_uint_value(::google::protobuf::uint32 value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityScalarValueEntry)
 private:
  void set_has_float_value();
  void set_has_string_value();
  void set_has_int_value();
  void set_has_uint_value();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityString* key_;
  int value_type_;
  union ValueUnion {
    ValueUnion() {}
    float float_value_;
    ::google::protobuf::internal::ArenaStringPtr string_value_;
    ::google::protobuf::int32 int_value_;
    ::google::protobuf::uint32 uint_value_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityAppliedAbility : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityAppliedAbility) */ {
 public:
  AbilityAppliedAbility();
  virtual ~AbilityAppliedAbility();

  AbilityAppliedAbility(const AbilityAppliedAbility& from);

  inline AbilityAppliedAbility& operator=(const AbilityAppliedAbility& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityAppliedAbility(AbilityAppliedAbility&& from) noexcept
    : AbilityAppliedAbility() {
    *this = ::std::move(from);
  }

  inline AbilityAppliedAbility& operator=(AbilityAppliedAbility&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityAppliedAbility& default_instance();

  static inline const AbilityAppliedAbility* internal_default_instance() {
    return reinterpret_cast<const AbilityAppliedAbility*>(
               &_AbilityAppliedAbility_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(AbilityAppliedAbility* other);
  friend void swap(AbilityAppliedAbility& a, AbilityAppliedAbility& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityAppliedAbility* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityAppliedAbility* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityAppliedAbility& from);
  void MergeFrom(const AbilityAppliedAbility& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityAppliedAbility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityScalarValueEntry override_map = 3;
  int override_map_size() const;
  void clear_override_map();
  static const int kOverrideMapFieldNumber = 3;
  const ::proto::AbilityScalarValueEntry& override_map(int index) const;
  ::proto::AbilityScalarValueEntry* mutable_override_map(int index);
  ::proto::AbilityScalarValueEntry* add_override_map();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
      mutable_override_map();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
      override_map() const;

  // .proto.AbilityString ability_name = 1;
  bool has_ability_name() const;
  void clear_ability_name();
  static const int kAbilityNameFieldNumber = 1;
  const ::proto::AbilityString& ability_name() const;
  ::proto::AbilityString* mutable_ability_name();
  ::proto::AbilityString* release_ability_name();
  void set_allocated_ability_name(::proto::AbilityString* ability_name);

  // .proto.AbilityString ability_override = 2;
  bool has_ability_override() const;
  void clear_ability_override();
  static const int kAbilityOverrideFieldNumber = 2;
  const ::proto::AbilityString& ability_override() const;
  ::proto::AbilityString* mutable_ability_override();
  ::proto::AbilityString* release_ability_override();
  void set_allocated_ability_override(::proto::AbilityString* ability_override);

  // uint32 instanced_ability_id = 4;
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 4;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityAppliedAbility)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry > override_map_;
  ::proto::AbilityString* ability_name_;
  ::proto::AbilityString* ability_override_;
  ::google::protobuf::uint32 instanced_ability_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityAttachedModifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityAttachedModifier) */ {
 public:
  AbilityAttachedModifier();
  virtual ~AbilityAttachedModifier();

  AbilityAttachedModifier(const AbilityAttachedModifier& from);

  inline AbilityAttachedModifier& operator=(const AbilityAttachedModifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityAttachedModifier(AbilityAttachedModifier&& from) noexcept
    : AbilityAttachedModifier() {
    *this = ::std::move(from);
  }

  inline AbilityAttachedModifier& operator=(AbilityAttachedModifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityAttachedModifier& default_instance();

  static inline const AbilityAttachedModifier* internal_default_instance() {
    return reinterpret_cast<const AbilityAttachedModifier*>(
               &_AbilityAttachedModifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(AbilityAttachedModifier* other);
  friend void swap(AbilityAttachedModifier& a, AbilityAttachedModifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityAttachedModifier* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityAttachedModifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityAttachedModifier& from);
  void MergeFrom(const AbilityAttachedModifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityAttachedModifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 owner_entity_id = 2;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // bool is_invalid = 1;
  void clear_is_invalid();
  static const int kIsInvalidFieldNumber = 1;
  bool is_invalid() const;
  void set_is_invalid(bool value);

  // bool is_serverbuff_modifier = 4;
  void clear_is_serverbuff_modifier();
  static const int kIsServerbuffModifierFieldNumber = 4;
  bool is_serverbuff_modifier() const;
  void set_is_serverbuff_modifier(bool value);

  // uint32 instanced_modifier_id = 3;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 3;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // int32 attach_name_hash = 5;
  void clear_attach_name_hash();
  static const int kAttachNameHashFieldNumber = 5;
  ::google::protobuf::int32 attach_name_hash() const;
  void set_attach_name_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityAttachedModifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 owner_entity_id_;
  bool is_invalid_;
  bool is_serverbuff_modifier_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  ::google::protobuf::int32 attach_name_hash_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifierDurability : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ModifierDurability) */ {
 public:
  ModifierDurability();
  virtual ~ModifierDurability();

  ModifierDurability(const ModifierDurability& from);

  inline ModifierDurability& operator=(const ModifierDurability& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModifierDurability(ModifierDurability&& from) noexcept
    : ModifierDurability() {
    *this = ::std::move(from);
  }

  inline ModifierDurability& operator=(ModifierDurability&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifierDurability& default_instance();

  static inline const ModifierDurability* internal_default_instance() {
    return reinterpret_cast<const ModifierDurability*>(
               &_ModifierDurability_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(ModifierDurability* other);
  friend void swap(ModifierDurability& a, ModifierDurability& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModifierDurability* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifierDurability* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifierDurability& from);
  void MergeFrom(const ModifierDurability& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifierDurability* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float reduce_ratio = 1;
  void clear_reduce_ratio();
  static const int kReduceRatioFieldNumber = 1;
  float reduce_ratio() const;
  void set_reduce_ratio(float value);

  // float remaining_durability = 2;
  void clear_remaining_durability();
  static const int kRemainingDurabilityFieldNumber = 2;
  float remaining_durability() const;
  void set_remaining_durability(float value);

  // @@protoc_insertion_point(class_scope:proto.ModifierDurability)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float reduce_ratio_;
  float remaining_durability_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityAppliedModifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityAppliedModifier) */ {
 public:
  AbilityAppliedModifier();
  virtual ~AbilityAppliedModifier();

  AbilityAppliedModifier(const AbilityAppliedModifier& from);

  inline AbilityAppliedModifier& operator=(const AbilityAppliedModifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityAppliedModifier(AbilityAppliedModifier&& from) noexcept
    : AbilityAppliedModifier() {
    *this = ::std::move(from);
  }

  inline AbilityAppliedModifier& operator=(AbilityAppliedModifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityAppliedModifier& default_instance();

  static inline const AbilityAppliedModifier* internal_default_instance() {
    return reinterpret_cast<const AbilityAppliedModifier*>(
               &_AbilityAppliedModifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(AbilityAppliedModifier* other);
  friend void swap(AbilityAppliedModifier& a, AbilityAppliedModifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityAppliedModifier* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityAppliedModifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityAppliedModifier& from);
  void MergeFrom(const AbilityAppliedModifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityAppliedModifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityString parent_ability_name = 3;
  bool has_parent_ability_name() const;
  void clear_parent_ability_name();
  static const int kParentAbilityNameFieldNumber = 3;
  const ::proto::AbilityString& parent_ability_name() const;
  ::proto::AbilityString* mutable_parent_ability_name();
  ::proto::AbilityString* release_parent_ability_name();
  void set_allocated_parent_ability_name(::proto::AbilityString* parent_ability_name);

  // .proto.AbilityString parent_ability_override = 4;
  bool has_parent_ability_override() const;
  void clear_parent_ability_override();
  static const int kParentAbilityOverrideFieldNumber = 4;
  const ::proto::AbilityString& parent_ability_override() const;
  ::proto::AbilityString* mutable_parent_ability_override();
  ::proto::AbilityString* release_parent_ability_override();
  void set_allocated_parent_ability_override(::proto::AbilityString* parent_ability_override);

  // .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
  bool has_attached_instanced_modifier() const;
  void clear_attached_instanced_modifier();
  static const int kAttachedInstancedModifierFieldNumber = 8;
  const ::proto::AbilityAttachedModifier& attached_instanced_modifier() const;
  ::proto::AbilityAttachedModifier* mutable_attached_instanced_modifier();
  ::proto::AbilityAttachedModifier* release_attached_instanced_modifier();
  void set_allocated_attached_instanced_modifier(::proto::AbilityAttachedModifier* attached_instanced_modifier);

  // .proto.ModifierDurability modifier_durability = 11;
  bool has_modifier_durability() const;
  void clear_modifier_durability();
  static const int kModifierDurabilityFieldNumber = 11;
  const ::proto::ModifierDurability& modifier_durability() const;
  ::proto::ModifierDurability* mutable_modifier_durability();
  ::proto::ModifierDurability* release_modifier_durability();
  void set_allocated_modifier_durability(::proto::ModifierDurability* modifier_durability);

  // int32 modifier_local_id = 1;
  void clear_modifier_local_id();
  static const int kModifierLocalIdFieldNumber = 1;
  ::google::protobuf::int32 modifier_local_id() const;
  void set_modifier_local_id(::google::protobuf::int32 value);

  // uint32 parent_ability_entity_id = 2;
  void clear_parent_ability_entity_id();
  static const int kParentAbilityEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 parent_ability_entity_id() const;
  void set_parent_ability_entity_id(::google::protobuf::uint32 value);

  // uint32 instanced_ability_id = 5;
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 5;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // uint32 instanced_modifier_id = 6;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 6;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // float exist_duration = 7;
  void clear_exist_duration();
  static const int kExistDurationFieldNumber = 7;
  float exist_duration() const;
  void set_exist_duration(float value);

  // uint32 apply_entity_id = 9;
  void clear_apply_entity_id();
  static const int kApplyEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 apply_entity_id() const;
  void set_apply_entity_id(::google::protobuf::uint32 value);

  // bool is_attached_parent_ability = 10;
  void clear_is_attached_parent_ability();
  static const int kIsAttachedParentAbilityFieldNumber = 10;
  bool is_attached_parent_ability() const;
  void set_is_attached_parent_ability(bool value);

  // bool is_serverbuff_modifier = 13;
  void clear_is_serverbuff_modifier();
  static const int kIsServerbuffModifierFieldNumber = 13;
  bool is_serverbuff_modifier() const;
  void set_is_serverbuff_modifier(bool value);

  // uint32 sbuff_uid = 12;
  void clear_sbuff_uid();
  static const int kSbuffUidFieldNumber = 12;
  ::google::protobuf::uint32 sbuff_uid() const;
  void set_sbuff_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityAppliedModifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityString* parent_ability_name_;
  ::proto::AbilityString* parent_ability_override_;
  ::proto::AbilityAttachedModifier* attached_instanced_modifier_;
  ::proto::ModifierDurability* modifier_durability_;
  ::google::protobuf::int32 modifier_local_id_;
  ::google::protobuf::uint32 parent_ability_entity_id_;
  ::google::protobuf::uint32 instanced_ability_id_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  float exist_duration_;
  ::google::protobuf::uint32 apply_entity_id_;
  bool is_attached_parent_ability_;
  bool is_serverbuff_modifier_;
  ::google::protobuf::uint32 sbuff_uid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassivePropParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassivePropParam) */ {
 public:
  MassivePropParam();
  virtual ~MassivePropParam();

  MassivePropParam(const MassivePropParam& from);

  inline MassivePropParam& operator=(const MassivePropParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassivePropParam(MassivePropParam&& from) noexcept
    : MassivePropParam() {
    *this = ::std::move(from);
  }

  inline MassivePropParam& operator=(MassivePropParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassivePropParam& default_instance();

  static inline const MassivePropParam* internal_default_instance() {
    return reinterpret_cast<const MassivePropParam*>(
               &_MassivePropParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(MassivePropParam* other);
  friend void swap(MassivePropParam& a, MassivePropParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassivePropParam* New() const PROTOBUF_FINAL { return New(NULL); }

  MassivePropParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassivePropParam& from);
  void MergeFrom(const MassivePropParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassivePropParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 reaction_info_list = 2;
  int reaction_info_list_size() const;
  void clear_reaction_info_list();
  static const int kReactionInfoListFieldNumber = 2;
  ::google::protobuf::uint32 reaction_info_list(int index) const;
  void set_reaction_info_list(int index, ::google::protobuf::uint32 value);
  void add_reaction_info_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reaction_info_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reaction_info_list();

  // repeated float param_list = 3;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 3;
  float param_list(int index) const;
  void set_param_list(int index, float value);
  void add_param_list(float value);
  const ::google::protobuf::RepeatedField< float >&
      param_list() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_param_list();

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // uint32 sync_flag = 4;
  void clear_sync_flag();
  static const int kSyncFlagFieldNumber = 4;
  ::google::protobuf::uint32 sync_flag() const;
  void set_sync_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MassivePropParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reaction_info_list_;
  mutable int _reaction_info_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > param_list_;
  mutable int _param_list_cached_byte_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint32 sync_flag_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassivePropSyncInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassivePropSyncInfo) */ {
 public:
  MassivePropSyncInfo();
  virtual ~MassivePropSyncInfo();

  MassivePropSyncInfo(const MassivePropSyncInfo& from);

  inline MassivePropSyncInfo& operator=(const MassivePropSyncInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassivePropSyncInfo(MassivePropSyncInfo&& from) noexcept
    : MassivePropSyncInfo() {
    *this = ::std::move(from);
  }

  inline MassivePropSyncInfo& operator=(MassivePropSyncInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassivePropSyncInfo& default_instance();

  static inline const MassivePropSyncInfo* internal_default_instance() {
    return reinterpret_cast<const MassivePropSyncInfo*>(
               &_MassivePropSyncInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(MassivePropSyncInfo* other);
  friend void swap(MassivePropSyncInfo& a, MassivePropSyncInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassivePropSyncInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MassivePropSyncInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassivePropSyncInfo& from);
  void MergeFrom(const MassivePropSyncInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassivePropSyncInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MassivePropParam prop_list = 2;
  int prop_list_size() const;
  void clear_prop_list();
  static const int kPropListFieldNumber = 2;
  const ::proto::MassivePropParam& prop_list(int index) const;
  ::proto::MassivePropParam* mutable_prop_list(int index);
  ::proto::MassivePropParam* add_prop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MassivePropParam >*
      mutable_prop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MassivePropParam >&
      prop_list() const;

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.MassivePropSyncInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MassivePropParam > prop_list_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutVector2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutVector2) */ {
 public:
  BreakoutVector2();
  virtual ~BreakoutVector2();

  BreakoutVector2(const BreakoutVector2& from);

  inline BreakoutVector2& operator=(const BreakoutVector2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutVector2(BreakoutVector2&& from) noexcept
    : BreakoutVector2() {
    *this = ::std::move(from);
  }

  inline BreakoutVector2& operator=(BreakoutVector2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutVector2& default_instance();

  static inline const BreakoutVector2* internal_default_instance() {
    return reinterpret_cast<const BreakoutVector2*>(
               &_BreakoutVector2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(BreakoutVector2* other);
  friend void swap(BreakoutVector2& a, BreakoutVector2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutVector2* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutVector2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutVector2& from);
  void MergeFrom(const BreakoutVector2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutVector2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutVector2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutBrickInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutBrickInfo) */ {
 public:
  BreakoutBrickInfo();
  virtual ~BreakoutBrickInfo();

  BreakoutBrickInfo(const BreakoutBrickInfo& from);

  inline BreakoutBrickInfo& operator=(const BreakoutBrickInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutBrickInfo(BreakoutBrickInfo&& from) noexcept
    : BreakoutBrickInfo() {
    *this = ::std::move(from);
  }

  inline BreakoutBrickInfo& operator=(BreakoutBrickInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutBrickInfo& default_instance();

  static inline const BreakoutBrickInfo* internal_default_instance() {
    return reinterpret_cast<const BreakoutBrickInfo*>(
               &_BreakoutBrickInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(BreakoutBrickInfo* other);
  friend void swap(BreakoutBrickInfo& a, BreakoutBrickInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutBrickInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutBrickInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutBrickInfo& from);
  void MergeFrom(const BreakoutBrickInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutBrickInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 hp = 1;
  void clear_hp();
  static const int kHpFieldNumber = 1;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // uint32 element_type = 2;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 2;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutBrickInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 element_type_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutPhysicalObjectModifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutPhysicalObjectModifier) */ {
 public:
  BreakoutPhysicalObjectModifier();
  virtual ~BreakoutPhysicalObjectModifier();

  BreakoutPhysicalObjectModifier(const BreakoutPhysicalObjectModifier& from);

  inline BreakoutPhysicalObjectModifier& operator=(const BreakoutPhysicalObjectModifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutPhysicalObjectModifier(BreakoutPhysicalObjectModifier&& from) noexcept
    : BreakoutPhysicalObjectModifier() {
    *this = ::std::move(from);
  }

  inline BreakoutPhysicalObjectModifier& operator=(BreakoutPhysicalObjectModifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutPhysicalObjectModifier& default_instance();

  static inline const BreakoutPhysicalObjectModifier* internal_default_instance() {
    return reinterpret_cast<const BreakoutPhysicalObjectModifier*>(
               &_BreakoutPhysicalObjectModifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(BreakoutPhysicalObjectModifier* other);
  friend void swap(BreakoutPhysicalObjectModifier& a, BreakoutPhysicalObjectModifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutPhysicalObjectModifier* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutPhysicalObjectModifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutPhysicalObjectModifier& from);
  void MergeFrom(const BreakoutPhysicalObjectModifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutPhysicalObjectModifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 param1 = 3;
  void clear_param1();
  static const int kParam1FieldNumber = 3;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // int32 param2 = 4;
  void clear_param2();
  static const int kParam2FieldNumber = 4;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // int32 param3 = 5;
  void clear_param3();
  static const int kParam3FieldNumber = 5;
  ::google::protobuf::int32 param3() const;
  void set_param3(::google::protobuf::int32 value);

  // int32 param4 = 6;
  void clear_param4();
  static const int kParam4FieldNumber = 6;
  ::google::protobuf::int32 param4() const;
  void set_param4(::google::protobuf::int32 value);

  // int32 param5 = 7;
  void clear_param5();
  static const int kParam5FieldNumber = 7;
  ::google::protobuf::int32 param5() const;
  void set_param5(::google::protobuf::int32 value);

  // int32 param6 = 8;
  void clear_param6();
  static const int kParam6FieldNumber = 8;
  ::google::protobuf::int32 param6() const;
  void set_param6(::google::protobuf::int32 value);

  // bool bool1 = 9;
  void clear_bool1();
  static const int kBool1FieldNumber = 9;
  bool bool1() const;
  void set_bool1(bool value);

  // int32 duration = 10;
  void clear_duration();
  static const int kDurationFieldNumber = 10;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // int32 end_time = 11;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 11;
  ::google::protobuf::int32 end_time() const;
  void set_end_time(::google::protobuf::int32 value);

  // uint32 combo = 12;
  void clear_combo();
  static const int kComboFieldNumber = 12;
  ::google::protobuf::uint32 combo() const;
  void set_combo(::google::protobuf::uint32 value);

  // uint32 peer_id = 13;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 13;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // uint32 skill_type = 14;
  void clear_skill_type();
  static const int kSkillTypeFieldNumber = 14;
  ::google::protobuf::uint32 skill_type() const;
  void set_skill_type(::google::protobuf::uint32 value);

  // uint32 level = 15;
  void clear_level();
  static const int kLevelFieldNumber = 15;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 choose_player_count = 16;
  void clear_choose_player_count();
  static const int kChoosePlayerCountFieldNumber = 16;
  ::google::protobuf::uint32 choose_player_count() const;
  void set_choose_player_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutPhysicalObjectModifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  ::google::protobuf::int32 param4_;
  ::google::protobuf::int32 param5_;
  ::google::protobuf::int32 param6_;
  bool bool1_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 end_time_;
  ::google::protobuf::uint32 combo_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 skill_type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 choose_player_count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutPhysicalObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutPhysicalObject) */ {
 public:
  BreakoutPhysicalObject();
  virtual ~BreakoutPhysicalObject();

  BreakoutPhysicalObject(const BreakoutPhysicalObject& from);

  inline BreakoutPhysicalObject& operator=(const BreakoutPhysicalObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutPhysicalObject(BreakoutPhysicalObject&& from) noexcept
    : BreakoutPhysicalObject() {
    *this = ::std::move(from);
  }

  inline BreakoutPhysicalObject& operator=(BreakoutPhysicalObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutPhysicalObject& default_instance();

  static inline const BreakoutPhysicalObject* internal_default_instance() {
    return reinterpret_cast<const BreakoutPhysicalObject*>(
               &_BreakoutPhysicalObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(BreakoutPhysicalObject* other);
  friend void swap(BreakoutPhysicalObject& a, BreakoutPhysicalObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutPhysicalObject* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutPhysicalObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutPhysicalObject& from);
  void MergeFrom(const BreakoutPhysicalObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutPhysicalObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.BreakoutPhysicalObjectModifier modifier_list = 11;
  int modifier_list_size() const;
  void clear_modifier_list();
  static const int kModifierListFieldNumber = 11;
  const ::proto::BreakoutPhysicalObjectModifier& modifier_list(int index) const;
  ::proto::BreakoutPhysicalObjectModifier* mutable_modifier_list(int index);
  ::proto::BreakoutPhysicalObjectModifier* add_modifier_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObjectModifier >*
      mutable_modifier_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObjectModifier >&
      modifier_list() const;

  // repeated .proto.BreakoutBrickInfo info_list = 13;
  int info_list_size() const;
  void clear_info_list();
  static const int kInfoListFieldNumber = 13;
  const ::proto::BreakoutBrickInfo& info_list(int index) const;
  ::proto::BreakoutBrickInfo* mutable_info_list(int index);
  ::proto::BreakoutBrickInfo* add_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutBrickInfo >*
      mutable_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutBrickInfo >&
      info_list() const;

  // .proto.BreakoutVector2 pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  const ::proto::BreakoutVector2& pos() const;
  ::proto::BreakoutVector2* mutable_pos();
  ::proto::BreakoutVector2* release_pos();
  void set_allocated_pos(::proto::BreakoutVector2* pos);

  // .proto.BreakoutVector2 move_dir = 5;
  bool has_move_dir() const;
  void clear_move_dir();
  static const int kMoveDirFieldNumber = 5;
  const ::proto::BreakoutVector2& move_dir() const;
  ::proto::BreakoutVector2* mutable_move_dir();
  ::proto::BreakoutVector2* release_move_dir();
  void set_allocated_move_dir(::proto::BreakoutVector2* move_dir);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // bool is_active = 3;
  void clear_is_active();
  static const int kIsActiveFieldNumber = 3;
  bool is_active() const;
  void set_is_active(bool value);

  // int32 speed = 6;
  void clear_speed();
  static const int kSpeedFieldNumber = 6;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // uint32 init_peer_id = 7;
  void clear_init_peer_id();
  static const int kInitPeerIdFieldNumber = 7;
  ::google::protobuf::uint32 init_peer_id() const;
  void set_init_peer_id(::google::protobuf::uint32 value);

  // uint32 state = 8;
  void clear_state();
  static const int kStateFieldNumber = 8;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // uint32 element_type = 9;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 9;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // uint32 element_reaction_buff = 10;
  void clear_element_reaction_buff();
  static const int kElementReactionBuffFieldNumber = 10;
  ::google::protobuf::uint32 element_reaction_buff() const;
  void set_element_reaction_buff(::google::protobuf::uint32 value);

  // int32 total_rotation = 12;
  void clear_total_rotation();
  static const int kTotalRotationFieldNumber = 12;
  ::google::protobuf::int32 total_rotation() const;
  void set_total_rotation(::google::protobuf::int32 value);

  // uint32 last_hit_peer_id = 14;
  void clear_last_hit_peer_id();
  static const int kLastHitPeerIdFieldNumber = 14;
  ::google::protobuf::uint32 last_hit_peer_id() const;
  void set_last_hit_peer_id(::google::protobuf::uint32 value);

  // uint32 speed_increase_count = 15;
  void clear_speed_increase_count();
  static const int kSpeedIncreaseCountFieldNumber = 15;
  ::google::protobuf::uint32 speed_increase_count() const;
  void set_speed_increase_count(::google::protobuf::uint32 value);

  // int32 offset = 16;
  void clear_offset();
  static const int kOffsetFieldNumber = 16;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutPhysicalObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObjectModifier > modifier_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutBrickInfo > info_list_;
  ::proto::BreakoutVector2* pos_;
  ::proto::BreakoutVector2* move_dir_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 index_;
  bool is_active_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::uint32 init_peer_id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 element_type_;
  ::google::protobuf::uint32 element_reaction_buff_;
  ::google::protobuf::int32 total_rotation_;
  ::google::protobuf::uint32 last_hit_peer_id_;
  ::google::protobuf::uint32 speed_increase_count_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutSpawnPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutSpawnPoint) */ {
 public:
  BreakoutSpawnPoint();
  virtual ~BreakoutSpawnPoint();

  BreakoutSpawnPoint(const BreakoutSpawnPoint& from);

  inline BreakoutSpawnPoint& operator=(const BreakoutSpawnPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutSpawnPoint(BreakoutSpawnPoint&& from) noexcept
    : BreakoutSpawnPoint() {
    *this = ::std::move(from);
  }

  inline BreakoutSpawnPoint& operator=(BreakoutSpawnPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutSpawnPoint& default_instance();

  static inline const BreakoutSpawnPoint* internal_default_instance() {
    return reinterpret_cast<const BreakoutSpawnPoint*>(
               &_BreakoutSpawnPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(BreakoutSpawnPoint* other);
  friend void swap(BreakoutSpawnPoint& a, BreakoutSpawnPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutSpawnPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutSpawnPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutSpawnPoint& from);
  void MergeFrom(const BreakoutSpawnPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutSpawnPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.BreakoutPhysicalObject spawned_brick_list = 3;
  int spawned_brick_list_size() const;
  void clear_spawned_brick_list();
  static const int kSpawnedBrickListFieldNumber = 3;
  const ::proto::BreakoutPhysicalObject& spawned_brick_list(int index) const;
  ::proto::BreakoutPhysicalObject* mutable_spawned_brick_list(int index);
  ::proto::BreakoutPhysicalObject* add_spawned_brick_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
      mutable_spawned_brick_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
      spawned_brick_list() const;

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 brick_suite_id = 2;
  void clear_brick_suite_id();
  static const int kBrickSuiteIdFieldNumber = 2;
  ::google::protobuf::uint32 brick_suite_id() const;
  void set_brick_suite_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutSpawnPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject > spawned_brick_list_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 brick_suite_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutElementReactionCounter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutElementReactionCounter) */ {
 public:
  BreakoutElementReactionCounter();
  virtual ~BreakoutElementReactionCounter();

  BreakoutElementReactionCounter(const BreakoutElementReactionCounter& from);

  inline BreakoutElementReactionCounter& operator=(const BreakoutElementReactionCounter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutElementReactionCounter(BreakoutElementReactionCounter&& from) noexcept
    : BreakoutElementReactionCounter() {
    *this = ::std::move(from);
  }

  inline BreakoutElementReactionCounter& operator=(BreakoutElementReactionCounter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutElementReactionCounter& default_instance();

  static inline const BreakoutElementReactionCounter* internal_default_instance() {
    return reinterpret_cast<const BreakoutElementReactionCounter*>(
               &_BreakoutElementReactionCounter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(BreakoutElementReactionCounter* other);
  friend void swap(BreakoutElementReactionCounter& a, BreakoutElementReactionCounter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutElementReactionCounter* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutElementReactionCounter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutElementReactionCounter& from);
  void MergeFrom(const BreakoutElementReactionCounter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutElementReactionCounter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 element_reaction = 1;
  void clear_element_reaction();
  static const int kElementReactionFieldNumber = 1;
  ::google::protobuf::uint32 element_reaction() const;
  void set_element_reaction(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutElementReactionCounter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 element_reaction_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutSyncConnectUidInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutSyncConnectUidInfo) */ {
 public:
  BreakoutSyncConnectUidInfo();
  virtual ~BreakoutSyncConnectUidInfo();

  BreakoutSyncConnectUidInfo(const BreakoutSyncConnectUidInfo& from);

  inline BreakoutSyncConnectUidInfo& operator=(const BreakoutSyncConnectUidInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutSyncConnectUidInfo(BreakoutSyncConnectUidInfo&& from) noexcept
    : BreakoutSyncConnectUidInfo() {
    *this = ::std::move(from);
  }

  inline BreakoutSyncConnectUidInfo& operator=(BreakoutSyncConnectUidInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutSyncConnectUidInfo& default_instance();

  static inline const BreakoutSyncConnectUidInfo* internal_default_instance() {
    return reinterpret_cast<const BreakoutSyncConnectUidInfo*>(
               &_BreakoutSyncConnectUidInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(BreakoutSyncConnectUidInfo* other);
  friend void swap(BreakoutSyncConnectUidInfo& a, BreakoutSyncConnectUidInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutSyncConnectUidInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutSyncConnectUidInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutSyncConnectUidInfo& from);
  void MergeFrom(const BreakoutSyncConnectUidInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutSyncConnectUidInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 skill_id_list = 2;
  int skill_id_list_size() const;
  void clear_skill_id_list();
  static const int kSkillIdListFieldNumber = 2;
  ::google::protobuf::uint32 skill_id_list(int index) const;
  void set_skill_id_list(int index, ::google::protobuf::uint32 value);
  void add_skill_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_id_list();

  // repeated uint32 skill_level_list = 3;
  int skill_level_list_size() const;
  void clear_skill_level_list();
  static const int kSkillLevelListFieldNumber = 3;
  ::google::protobuf::uint32 skill_level_list(int index) const;
  void set_skill_level_list(int index, ::google::protobuf::uint32 value);
  void add_skill_level_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_level_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_level_list();

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutSyncConnectUidInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_id_list_;
  mutable int _skill_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_level_list_;
  mutable int _skill_level_list_cached_byte_size_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutSnapShot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutSnapShot) */ {
 public:
  BreakoutSnapShot();
  virtual ~BreakoutSnapShot();

  BreakoutSnapShot(const BreakoutSnapShot& from);

  inline BreakoutSnapShot& operator=(const BreakoutSnapShot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutSnapShot(BreakoutSnapShot&& from) noexcept
    : BreakoutSnapShot() {
    *this = ::std::move(from);
  }

  inline BreakoutSnapShot& operator=(BreakoutSnapShot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutSnapShot& default_instance();

  static inline const BreakoutSnapShot* internal_default_instance() {
    return reinterpret_cast<const BreakoutSnapShot*>(
               &_BreakoutSnapShot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(BreakoutSnapShot* other);
  friend void swap(BreakoutSnapShot& a, BreakoutSnapShot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutSnapShot* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutSnapShot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutSnapShot& from);
  void MergeFrom(const BreakoutSnapShot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutSnapShot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.BreakoutPhysicalObject ball_list = 3;
  int ball_list_size() const;
  void clear_ball_list();
  static const int kBallListFieldNumber = 3;
  const ::proto::BreakoutPhysicalObject& ball_list(int index) const;
  ::proto::BreakoutPhysicalObject* mutable_ball_list(int index);
  ::proto::BreakoutPhysicalObject* add_ball_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
      mutable_ball_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
      ball_list() const;

  // repeated .proto.BreakoutPhysicalObject physical_object_list = 4;
  int physical_object_list_size() const;
  void clear_physical_object_list();
  static const int kPhysicalObjectListFieldNumber = 4;
  const ::proto::BreakoutPhysicalObject& physical_object_list(int index) const;
  ::proto::BreakoutPhysicalObject* mutable_physical_object_list(int index);
  ::proto::BreakoutPhysicalObject* add_physical_object_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
      mutable_physical_object_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
      physical_object_list() const;

  // repeated .proto.BreakoutAction action_list = 5;
  int action_list_size() const;
  void clear_action_list();
  static const int kActionListFieldNumber = 5;
  const ::proto::BreakoutAction& action_list(int index) const;
  ::proto::BreakoutAction* mutable_action_list(int index);
  ::proto::BreakoutAction* add_action_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutAction >*
      mutable_action_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutAction >&
      action_list() const;

  // repeated .proto.BreakoutSpawnPoint spawn_point_list = 13;
  int spawn_point_list_size() const;
  void clear_spawn_point_list();
  static const int kSpawnPointListFieldNumber = 13;
  const ::proto::BreakoutSpawnPoint& spawn_point_list(int index) const;
  ::proto::BreakoutSpawnPoint* mutable_spawn_point_list(int index);
  ::proto::BreakoutSpawnPoint* add_spawn_point_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSpawnPoint >*
      mutable_spawn_point_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSpawnPoint >&
      spawn_point_list() const;

  // repeated .proto.BreakoutElementReactionCounter brick_element_reaction_list = 15;
  int brick_element_reaction_list_size() const;
  void clear_brick_element_reaction_list();
  static const int kBrickElementReactionListFieldNumber = 15;
  const ::proto::BreakoutElementReactionCounter& brick_element_reaction_list(int index) const;
  ::proto::BreakoutElementReactionCounter* mutable_brick_element_reaction_list(int index);
  ::proto::BreakoutElementReactionCounter* add_brick_element_reaction_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >*
      mutable_brick_element_reaction_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >&
      brick_element_reaction_list() const;

  // repeated .proto.BreakoutElementReactionCounter ball_element_reaction_list = 16;
  int ball_element_reaction_list_size() const;
  void clear_ball_element_reaction_list();
  static const int kBallElementReactionListFieldNumber = 16;
  const ::proto::BreakoutElementReactionCounter& ball_element_reaction_list(int index) const;
  ::proto::BreakoutElementReactionCounter* mutable_ball_element_reaction_list(int index);
  ::proto::BreakoutElementReactionCounter* add_ball_element_reaction_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >*
      mutable_ball_element_reaction_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >&
      ball_element_reaction_list() const;

  // repeated .proto.BreakoutSyncConnectUidInfo uid_info_list = 17;
  int uid_info_list_size() const;
  void clear_uid_info_list();
  static const int kUidInfoListFieldNumber = 17;
  const ::proto::BreakoutSyncConnectUidInfo& uid_info_list(int index) const;
  ::proto::BreakoutSyncConnectUidInfo* mutable_uid_info_list(int index);
  ::proto::BreakoutSyncConnectUidInfo* add_uid_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSyncConnectUidInfo >*
      mutable_uid_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSyncConnectUidInfo >&
      uid_info_list() const;

  // repeated .proto.BreakoutPhysicalObject dynamic_object_list = 18;
  int dynamic_object_list_size() const;
  void clear_dynamic_object_list();
  static const int kDynamicObjectListFieldNumber = 18;
  const ::proto::BreakoutPhysicalObject& dynamic_object_list(int index) const;
  ::proto::BreakoutPhysicalObject* mutable_dynamic_object_list(int index);
  ::proto::BreakoutPhysicalObject* add_dynamic_object_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
      mutable_dynamic_object_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
      dynamic_object_list() const;

  // repeated uint32 id_index_list = 19;
  int id_index_list_size() const;
  void clear_id_index_list();
  static const int kIdIndexListFieldNumber = 19;
  ::google::protobuf::uint32 id_index_list(int index) const;
  void set_id_index_list(int index, ::google::protobuf::uint32 value);
  void add_id_index_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id_index_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id_index_list();

  // uint64 client_game_time = 1;
  void clear_client_game_time();
  static const int kClientGameTimeFieldNumber = 1;
  ::google::protobuf::uint64 client_game_time() const;
  void set_client_game_time(::google::protobuf::uint64 value);

  // uint64 server_game_time = 2;
  void clear_server_game_time();
  static const int kServerGameTimeFieldNumber = 2;
  ::google::protobuf::uint64 server_game_time() const;
  void set_server_game_time(::google::protobuf::uint64 value);

  // uint32 wave_index = 6;
  void clear_wave_index();
  static const int kWaveIndexFieldNumber = 6;
  ::google::protobuf::uint32 wave_index() const;
  void set_wave_index(::google::protobuf::uint32 value);

  // bool is_finish = 7;
  void clear_is_finish();
  static const int kIsFinishFieldNumber = 7;
  bool is_finish() const;
  void set_is_finish(bool value);

  // uint32 score = 8;
  void clear_score();
  static const int kScoreFieldNumber = 8;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 combo = 9;
  void clear_combo();
  static const int kComboFieldNumber = 9;
  ::google::protobuf::uint32 combo() const;
  void set_combo(::google::protobuf::uint32 value);

  // uint32 max_combo = 10;
  void clear_max_combo();
  static const int kMaxComboFieldNumber = 10;
  ::google::protobuf::uint32 max_combo() const;
  void set_max_combo(::google::protobuf::uint32 value);

  // uint32 life_count = 11;
  void clear_life_count();
  static const int kLifeCountFieldNumber = 11;
  ::google::protobuf::uint32 life_count() const;
  void set_life_count(::google::protobuf::uint32 value);

  // uint32 wave_suite_index = 12;
  void clear_wave_suite_index();
  static const int kWaveSuiteIndexFieldNumber = 12;
  ::google::protobuf::uint32 wave_suite_index() const;
  void set_wave_suite_index(::google::protobuf::uint32 value);

  // uint32 remaining_boss_hp = 14;
  void clear_remaining_boss_hp();
  static const int kRemainingBossHpFieldNumber = 14;
  ::google::protobuf::uint32 remaining_boss_hp() const;
  void set_remaining_boss_hp(::google::protobuf::uint32 value);

  // int32 raw_client_game_time = 20;
  void clear_raw_client_game_time();
  static const int kRawClientGameTimeFieldNumber = 20;
  ::google::protobuf::int32 raw_client_game_time() const;
  void set_raw_client_game_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutSnapShot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject > ball_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject > physical_object_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutAction > action_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSpawnPoint > spawn_point_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter > brick_element_reaction_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter > ball_element_reaction_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSyncConnectUidInfo > uid_info_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject > dynamic_object_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_index_list_;
  mutable int _id_index_list_cached_byte_size_;
  ::google::protobuf::uint64 client_game_time_;
  ::google::protobuf::uint64 server_game_time_;
  ::google::protobuf::uint32 wave_index_;
  bool is_finish_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 combo_;
  ::google::protobuf::uint32 max_combo_;
  ::google::protobuf::uint32 life_count_;
  ::google::protobuf::uint32 wave_suite_index_;
  ::google::protobuf::uint32 remaining_boss_hp_;
  ::google::protobuf::int32 raw_client_game_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BreakoutAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BreakoutAction) */ {
 public:
  BreakoutAction();
  virtual ~BreakoutAction();

  BreakoutAction(const BreakoutAction& from);

  inline BreakoutAction& operator=(const BreakoutAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BreakoutAction(BreakoutAction&& from) noexcept
    : BreakoutAction() {
    *this = ::std::move(from);
  }

  inline BreakoutAction& operator=(BreakoutAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakoutAction& default_instance();

  static inline const BreakoutAction* internal_default_instance() {
    return reinterpret_cast<const BreakoutAction*>(
               &_BreakoutAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(BreakoutAction* other);
  friend void swap(BreakoutAction& a, BreakoutAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BreakoutAction* New() const PROTOBUF_FINAL { return New(NULL); }

  BreakoutAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BreakoutAction& from);
  void MergeFrom(const BreakoutAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BreakoutAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BreakoutAction_BreakoutActionType BreakoutActionType;
  static const BreakoutActionType ACTION_TYPE_NONE =
    BreakoutAction_BreakoutActionType_ACTION_TYPE_NONE;
  static const BreakoutActionType ACTION_TYPE_LAUNCH_BALL =
    BreakoutAction_BreakoutActionType_ACTION_TYPE_LAUNCH_BALL;
  static const BreakoutActionType ACTION_TYPE_DESTROY_BALL =
    BreakoutAction_BreakoutActionType_ACTION_TYPE_DESTROY_BALL;
  static const BreakoutActionType ACTION_TYPE_FALLING_OBJECT =
    BreakoutAction_BreakoutActionType_ACTION_TYPE_FALLING_OBJECT;
  static const BreakoutActionType ACTION_TYPE_MISSILE =
    BreakoutAction_BreakoutActionType_ACTION_TYPE_MISSILE;
  static inline bool BreakoutActionType_IsValid(int value) {
    return BreakoutAction_BreakoutActionType_IsValid(value);
  }
  static const BreakoutActionType BreakoutActionType_MIN =
    BreakoutAction_BreakoutActionType_BreakoutActionType_MIN;
  static const BreakoutActionType BreakoutActionType_MAX =
    BreakoutAction_BreakoutActionType_BreakoutActionType_MAX;
  static const int BreakoutActionType_ARRAYSIZE =
    BreakoutAction_BreakoutActionType_BreakoutActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BreakoutActionType_descriptor() {
    return BreakoutAction_BreakoutActionType_descriptor();
  }
  static inline const ::std::string& BreakoutActionType_Name(BreakoutActionType value) {
    return BreakoutAction_BreakoutActionType_Name(value);
  }
  static inline bool BreakoutActionType_Parse(const ::std::string& name,
      BreakoutActionType* value) {
    return BreakoutAction_BreakoutActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.BreakoutVector2 pos = 7;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 7;
  const ::proto::BreakoutVector2& pos() const;
  ::proto::BreakoutVector2* mutable_pos();
  ::proto::BreakoutVector2* release_pos();
  void set_allocated_pos(::proto::BreakoutVector2* pos);

  // .proto.BreakoutVector2 move_dir = 8;
  bool has_move_dir() const;
  void clear_move_dir();
  static const int kMoveDirFieldNumber = 8;
  const ::proto::BreakoutVector2& move_dir() const;
  ::proto::BreakoutVector2* mutable_move_dir();
  ::proto::BreakoutVector2* release_move_dir();
  void set_allocated_move_dir(::proto::BreakoutVector2* move_dir);

  // .proto.BreakoutVector2 extra_ball_dir = 15;
  bool has_extra_ball_dir() const;
  void clear_extra_ball_dir();
  static const int kExtraBallDirFieldNumber = 15;
  const ::proto::BreakoutVector2& extra_ball_dir() const;
  ::proto::BreakoutVector2* mutable_extra_ball_dir();
  ::proto::BreakoutVector2* release_extra_ball_dir();
  void set_allocated_extra_ball_dir(::proto::BreakoutVector2* extra_ball_dir);

  // uint64 client_game_time = 2;
  void clear_client_game_time();
  static const int kClientGameTimeFieldNumber = 2;
  ::google::protobuf::uint64 client_game_time() const;
  void set_client_game_time(::google::protobuf::uint64 value);

  // uint64 server_game_time = 3;
  void clear_server_game_time();
  static const int kServerGameTimeFieldNumber = 3;
  ::google::protobuf::uint64 server_game_time() const;
  void set_server_game_time(::google::protobuf::uint64 value);

  // .proto.BreakoutAction.BreakoutActionType action_type = 1;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 1;
  ::proto::BreakoutAction_BreakoutActionType action_type() const;
  void set_action_type(::proto::BreakoutAction_BreakoutActionType value);

  // uint32 pre_index = 5;
  void clear_pre_index();
  static const int kPreIndexFieldNumber = 5;
  ::google::protobuf::uint32 pre_index() const;
  void set_pre_index(::google::protobuf::uint32 value);

  // uint32 new_index = 6;
  void clear_new_index();
  static const int kNewIndexFieldNumber = 6;
  ::google::protobuf::uint32 new_index() const;
  void set_new_index(::google::protobuf::uint32 value);

  // int32 speed = 9;
  void clear_speed();
  static const int kSpeedFieldNumber = 9;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // bool is_failed = 4;
  void clear_is_failed();
  static const int kIsFailedFieldNumber = 4;
  bool is_failed() const;
  void set_is_failed(bool value);

  // bool has_extra_ball = 14;
  void clear_has_extra_ball();
  static const int kHasExtraBallFieldNumber = 14;
  bool has_extra_ball() const;
  void set_has_extra_ball(bool value);

  // uint32 peer_id = 10;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 10;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // uint32 element_type = 11;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 11;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // uint32 element_reaction_buff = 12;
  void clear_element_reaction_buff();
  static const int kElementReactionBuffFieldNumber = 12;
  ::google::protobuf::uint32 element_reaction_buff() const;
  void set_element_reaction_buff(::google::protobuf::uint32 value);

  // uint32 speed_increase_count = 13;
  void clear_speed_increase_count();
  static const int kSpeedIncreaseCountFieldNumber = 13;
  ::google::protobuf::uint32 speed_increase_count() const;
  void set_speed_increase_count(::google::protobuf::uint32 value);

  // uint32 extra_ball_index = 16;
  void clear_extra_ball_index();
  static const int kExtraBallIndexFieldNumber = 16;
  ::google::protobuf::uint32 extra_ball_index() const;
  void set_extra_ball_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BreakoutAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::BreakoutVector2* pos_;
  ::proto::BreakoutVector2* move_dir_;
  ::proto::BreakoutVector2* extra_ball_dir_;
  ::google::protobuf::uint64 client_game_time_;
  ::google::protobuf::uint64 server_game_time_;
  int action_type_;
  ::google::protobuf::uint32 pre_index_;
  ::google::protobuf::uint32 new_index_;
  ::google::protobuf::int32 speed_;
  bool is_failed_;
  bool has_extra_ball_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 element_type_;
  ::google::protobuf::uint32 element_reaction_buff_;
  ::google::protobuf::uint32 speed_increase_count_;
  ::google::protobuf::uint32 extra_ball_index_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityMixinRecoverInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityMixinRecoverInfo) */ {
 public:
  AbilityMixinRecoverInfo();
  virtual ~AbilityMixinRecoverInfo();

  AbilityMixinRecoverInfo(const AbilityMixinRecoverInfo& from);

  inline AbilityMixinRecoverInfo& operator=(const AbilityMixinRecoverInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityMixinRecoverInfo(AbilityMixinRecoverInfo&& from) noexcept
    : AbilityMixinRecoverInfo() {
    *this = ::std::move(from);
  }

  inline AbilityMixinRecoverInfo& operator=(AbilityMixinRecoverInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityMixinRecoverInfo& default_instance();

  enum SourceCase {
    kInstancedAbilityId = 1,
    kInstancedModifierId = 2,
    SOURCE_NOT_SET = 0,
  };

  static inline const AbilityMixinRecoverInfo* internal_default_instance() {
    return reinterpret_cast<const AbilityMixinRecoverInfo*>(
               &_AbilityMixinRecoverInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(AbilityMixinRecoverInfo* other);
  friend void swap(AbilityMixinRecoverInfo& a, AbilityMixinRecoverInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityMixinRecoverInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityMixinRecoverInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityMixinRecoverInfo& from);
  void MergeFrom(const AbilityMixinRecoverInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityMixinRecoverInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 data_list = 4;
  int data_list_size() const;
  void clear_data_list();
  static const int kDataListFieldNumber = 4;
  ::google::protobuf::uint32 data_list(int index) const;
  void set_data_list(int index, ::google::protobuf::uint32 value);
  void add_data_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      data_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_data_list();

  // repeated .proto.MassivePropSyncInfo massive_prop_list = 6;
  int massive_prop_list_size() const;
  void clear_massive_prop_list();
  static const int kMassivePropListFieldNumber = 6;
  const ::proto::MassivePropSyncInfo& massive_prop_list(int index) const;
  ::proto::MassivePropSyncInfo* mutable_massive_prop_list(int index);
  ::proto::MassivePropSyncInfo* add_massive_prop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MassivePropSyncInfo >*
      mutable_massive_prop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MassivePropSyncInfo >&
      massive_prop_list() const;

  // .proto.BreakoutSnapShot breakout_snap_shot = 7;
  bool has_breakout_snap_shot() const;
  void clear_breakout_snap_shot();
  static const int kBreakoutSnapShotFieldNumber = 7;
  const ::proto::BreakoutSnapShot& breakout_snap_shot() const;
  ::proto::BreakoutSnapShot* mutable_breakout_snap_shot();
  ::proto::BreakoutSnapShot* release_breakout_snap_shot();
  void set_allocated_breakout_snap_shot(::proto::BreakoutSnapShot* breakout_snap_shot);

  // uint32 local_id = 3;
  void clear_local_id();
  static const int kLocalIdFieldNumber = 3;
  ::google::protobuf::uint32 local_id() const;
  void set_local_id(::google::protobuf::uint32 value);

  // bool is_serverbuff_modifier = 5;
  void clear_is_serverbuff_modifier();
  static const int kIsServerbuffModifierFieldNumber = 5;
  bool is_serverbuff_modifier() const;
  void set_is_serverbuff_modifier(bool value);

  // uint32 instanced_ability_id = 1;
  private:
  bool has_instanced_ability_id() const;
  public:
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // uint32 instanced_modifier_id = 2;
  private:
  bool has_instanced_modifier_id() const;
  public:
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 2;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  SourceCase Source_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityMixinRecoverInfo)
 private:
  void set_has_instanced_ability_id();
  void set_has_instanced_modifier_id();

  inline bool has_Source() const;
  void clear_Source();
  inline void clear_has_Source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > data_list_;
  mutable int _data_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::MassivePropSyncInfo > massive_prop_list_;
  ::proto::BreakoutSnapShot* breakout_snap_shot_;
  ::google::protobuf::uint32 local_id_;
  bool is_serverbuff_modifier_;
  union SourceUnion {
    SourceUnion() {}
    ::google::protobuf::uint32 instanced_ability_id_;
    ::google::protobuf::uint32 instanced_modifier_id_;
  } Source_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilitySyncStateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilitySyncStateInfo) */ {
 public:
  AbilitySyncStateInfo();
  virtual ~AbilitySyncStateInfo();

  AbilitySyncStateInfo(const AbilitySyncStateInfo& from);

  inline AbilitySyncStateInfo& operator=(const AbilitySyncStateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilitySyncStateInfo(AbilitySyncStateInfo&& from) noexcept
    : AbilitySyncStateInfo() {
    *this = ::std::move(from);
  }

  inline AbilitySyncStateInfo& operator=(AbilitySyncStateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilitySyncStateInfo& default_instance();

  static inline const AbilitySyncStateInfo* internal_default_instance() {
    return reinterpret_cast<const AbilitySyncStateInfo*>(
               &_AbilitySyncStateInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(AbilitySyncStateInfo* other);
  friend void swap(AbilitySyncStateInfo& a, AbilitySyncStateInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilitySyncStateInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilitySyncStateInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilitySyncStateInfo& from);
  void MergeFrom(const AbilitySyncStateInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilitySyncStateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
  int dynamic_value_map_size() const;
  void clear_dynamic_value_map();
  static const int kDynamicValueMapFieldNumber = 2;
  const ::proto::AbilityScalarValueEntry& dynamic_value_map(int index) const;
  ::proto::AbilityScalarValueEntry* mutable_dynamic_value_map(int index);
  ::proto::AbilityScalarValueEntry* add_dynamic_value_map();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
      mutable_dynamic_value_map();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
      dynamic_value_map() const;

  // repeated .proto.AbilityAppliedAbility applied_abilities = 3;
  int applied_abilities_size() const;
  void clear_applied_abilities();
  static const int kAppliedAbilitiesFieldNumber = 3;
  const ::proto::AbilityAppliedAbility& applied_abilities(int index) const;
  ::proto::AbilityAppliedAbility* mutable_applied_abilities(int index);
  ::proto::AbilityAppliedAbility* add_applied_abilities();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >*
      mutable_applied_abilities();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >&
      applied_abilities() const;

  // repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
  int applied_modifiers_size() const;
  void clear_applied_modifiers();
  static const int kAppliedModifiersFieldNumber = 4;
  const ::proto::AbilityAppliedModifier& applied_modifiers(int index) const;
  ::proto::AbilityAppliedModifier* mutable_applied_modifiers(int index);
  ::proto::AbilityAppliedModifier* add_applied_modifiers();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >*
      mutable_applied_modifiers();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >&
      applied_modifiers() const;

  // repeated .proto.AbilityMixinRecoverInfo mixin_recover_infos = 5;
  int mixin_recover_infos_size() const;
  void clear_mixin_recover_infos();
  static const int kMixinRecoverInfosFieldNumber = 5;
  const ::proto::AbilityMixinRecoverInfo& mixin_recover_infos(int index) const;
  ::proto::AbilityMixinRecoverInfo* mutable_mixin_recover_infos(int index);
  ::proto::AbilityMixinRecoverInfo* add_mixin_recover_infos();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityMixinRecoverInfo >*
      mutable_mixin_recover_infos();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityMixinRecoverInfo >&
      mixin_recover_infos() const;

  // repeated .proto.AbilityScalarValueEntry sgv_dynamic_value_map = 6;
  int sgv_dynamic_value_map_size() const;
  void clear_sgv_dynamic_value_map();
  static const int kSgvDynamicValueMapFieldNumber = 6;
  const ::proto::AbilityScalarValueEntry& sgv_dynamic_value_map(int index) const;
  ::proto::AbilityScalarValueEntry* mutable_sgv_dynamic_value_map(int index);
  ::proto::AbilityScalarValueEntry* add_sgv_dynamic_value_map();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
      mutable_sgv_dynamic_value_map();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
      sgv_dynamic_value_map() const;

  // bool is_inited = 1;
  void clear_is_inited();
  static const int kIsInitedFieldNumber = 1;
  bool is_inited() const;
  void set_is_inited(bool value);

  // @@protoc_insertion_point(class_scope:proto.AbilitySyncStateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry > dynamic_value_map_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility > applied_abilities_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier > applied_modifiers_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityMixinRecoverInfo > mixin_recover_infos_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry > sgv_dynamic_value_map_;
  bool is_inited_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityEmbryo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityEmbryo) */ {
 public:
  AbilityEmbryo();
  virtual ~AbilityEmbryo();

  AbilityEmbryo(const AbilityEmbryo& from);

  inline AbilityEmbryo& operator=(const AbilityEmbryo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityEmbryo(AbilityEmbryo&& from) noexcept
    : AbilityEmbryo() {
    *this = ::std::move(from);
  }

  inline AbilityEmbryo& operator=(AbilityEmbryo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityEmbryo& default_instance();

  static inline const AbilityEmbryo* internal_default_instance() {
    return reinterpret_cast<const AbilityEmbryo*>(
               &_AbilityEmbryo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(AbilityEmbryo* other);
  friend void swap(AbilityEmbryo& a, AbilityEmbryo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityEmbryo* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityEmbryo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityEmbryo& from);
  void MergeFrom(const AbilityEmbryo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityEmbryo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ability_id = 1;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // fixed32 ability_name_hash = 2;
  void clear_ability_name_hash();
  static const int kAbilityNameHashFieldNumber = 2;
  ::google::protobuf::uint32 ability_name_hash() const;
  void set_ability_name_hash(::google::protobuf::uint32 value);

  // fixed32 ability_override_name_hash = 3;
  void clear_ability_override_name_hash();
  static const int kAbilityOverrideNameHashFieldNumber = 3;
  ::google::protobuf::uint32 ability_override_name_hash() const;
  void set_ability_override_name_hash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityEmbryo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ability_id_;
  ::google::protobuf::uint32 ability_name_hash_;
  ::google::protobuf::uint32 ability_override_name_hash_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityControlBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityControlBlock) */ {
 public:
  AbilityControlBlock();
  virtual ~AbilityControlBlock();

  AbilityControlBlock(const AbilityControlBlock& from);

  inline AbilityControlBlock& operator=(const AbilityControlBlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityControlBlock(AbilityControlBlock&& from) noexcept
    : AbilityControlBlock() {
    *this = ::std::move(from);
  }

  inline AbilityControlBlock& operator=(AbilityControlBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityControlBlock& default_instance();

  static inline const AbilityControlBlock* internal_default_instance() {
    return reinterpret_cast<const AbilityControlBlock*>(
               &_AbilityControlBlock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(AbilityControlBlock* other);
  friend void swap(AbilityControlBlock& a, AbilityControlBlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityControlBlock* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityControlBlock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityControlBlock& from);
  void MergeFrom(const AbilityControlBlock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityControlBlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityEmbryo ability_embryo_list = 1;
  int ability_embryo_list_size() const;
  void clear_ability_embryo_list();
  static const int kAbilityEmbryoListFieldNumber = 1;
  const ::proto::AbilityEmbryo& ability_embryo_list(int index) const;
  ::proto::AbilityEmbryo* mutable_ability_embryo_list(int index);
  ::proto::AbilityEmbryo* add_ability_embryo_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityEmbryo >*
      mutable_ability_embryo_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityEmbryo >&
      ability_embryo_list() const;

  // @@protoc_insertion_point(class_scope:proto.AbilityControlBlock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityEmbryo > ability_embryo_list_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Vector) */ {
 public:
  Vector();
  virtual ~Vector();

  Vector(const Vector& from);

  inline Vector& operator=(const Vector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector(Vector&& from) noexcept
    : Vector() {
    *this = ::std::move(from);
  }

  inline Vector& operator=(Vector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector& default_instance();

  static inline const Vector* internal_default_instance() {
    return reinterpret_cast<const Vector*>(
               &_Vector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(Vector* other);
  friend void swap(Vector& a, Vector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector& from);
  void MergeFrom(const Vector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:proto.Vector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VectorPlane : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VectorPlane) */ {
 public:
  VectorPlane();
  virtual ~VectorPlane();

  VectorPlane(const VectorPlane& from);

  inline VectorPlane& operator=(const VectorPlane& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorPlane(VectorPlane&& from) noexcept
    : VectorPlane() {
    *this = ::std::move(from);
  }

  inline VectorPlane& operator=(VectorPlane&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorPlane& default_instance();

  static inline const VectorPlane* internal_default_instance() {
    return reinterpret_cast<const VectorPlane*>(
               &_VectorPlane_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(VectorPlane* other);
  friend void swap(VectorPlane& a, VectorPlane& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorPlane* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorPlane* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorPlane& from);
  void MergeFrom(const VectorPlane& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorPlane* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:proto.VectorPlane)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector3Int : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Vector3Int) */ {
 public:
  Vector3Int();
  virtual ~Vector3Int();

  Vector3Int(const Vector3Int& from);

  inline Vector3Int& operator=(const Vector3Int& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector3Int(Vector3Int&& from) noexcept
    : Vector3Int() {
    *this = ::std::move(from);
  }

  inline Vector3Int& operator=(Vector3Int&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3Int& default_instance();

  static inline const Vector3Int* internal_default_instance() {
    return reinterpret_cast<const Vector3Int*>(
               &_Vector3Int_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(Vector3Int* other);
  friend void swap(Vector3Int& a, Vector3Int& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector3Int* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector3Int* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector3Int& from);
  void MergeFrom(const Vector3Int& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector3Int* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.Vector3Int)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityMoveInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityMoveInfo) */ {
 public:
  EntityMoveInfo();
  virtual ~EntityMoveInfo();

  EntityMoveInfo(const EntityMoveInfo& from);

  inline EntityMoveInfo& operator=(const EntityMoveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityMoveInfo(EntityMoveInfo&& from) noexcept
    : EntityMoveInfo() {
    *this = ::std::move(from);
  }

  inline EntityMoveInfo& operator=(EntityMoveInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityMoveInfo& default_instance();

  static inline const EntityMoveInfo* internal_default_instance() {
    return reinterpret_cast<const EntityMoveInfo*>(
               &_EntityMoveInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(EntityMoveInfo* other);
  friend void swap(EntityMoveInfo& a, EntityMoveInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityMoveInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityMoveInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityMoveInfo& from);
  void MergeFrom(const EntityMoveInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityMoveInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 2;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 2;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 reliable_seq = 4;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 4;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // bool is_reliable = 5;
  void clear_is_reliable();
  static const int kIsReliableFieldNumber = 5;
  bool is_reliable() const;
  void set_is_reliable(bool value);

  // @@protoc_insertion_point(class_scope:proto.EntityMoveInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 reliable_seq_;
  bool is_reliable_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MotionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MotionInfo) */ {
 public:
  MotionInfo();
  virtual ~MotionInfo();

  MotionInfo(const MotionInfo& from);

  inline MotionInfo& operator=(const MotionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionInfo(MotionInfo&& from) noexcept
    : MotionInfo() {
    *this = ::std::move(from);
  }

  inline MotionInfo& operator=(MotionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MotionInfo& default_instance();

  static inline const MotionInfo* internal_default_instance() {
    return reinterpret_cast<const MotionInfo*>(
               &_MotionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(MotionInfo* other);
  friend void swap(MotionInfo& a, MotionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MotionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MotionInfo& from);
  void MergeFrom(const MotionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MotionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Vector params = 5;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 5;
  const ::proto::Vector& params(int index) const;
  ::proto::Vector* mutable_params(int index);
  ::proto::Vector* add_params();
  ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
      params() const;

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // .proto.Vector speed = 3;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  const ::proto::Vector& speed() const;
  ::proto::Vector* mutable_speed();
  ::proto::Vector* release_speed();
  void set_allocated_speed(::proto::Vector* speed);

  // .proto.Vector ref_pos = 6;
  bool has_ref_pos() const;
  void clear_ref_pos();
  static const int kRefPosFieldNumber = 6;
  const ::proto::Vector& ref_pos() const;
  ::proto::Vector* mutable_ref_pos();
  ::proto::Vector* release_ref_pos();
  void set_allocated_ref_pos(::proto::Vector* ref_pos);

  // .proto.MotionState state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::proto::MotionState state() const;
  void set_state(::proto::MotionState value);

  // uint32 ref_id = 7;
  void clear_ref_id();
  static const int kRefIdFieldNumber = 7;
  ::google::protobuf::uint32 ref_id() const;
  void set_ref_id(::google::protobuf::uint32 value);

  // uint64 interval_velocity = 9;
  void clear_interval_velocity();
  static const int kIntervalVelocityFieldNumber = 9;
  ::google::protobuf::uint64 interval_velocity() const;
  void set_interval_velocity(::google::protobuf::uint64 value);

  // uint32 scene_time = 8;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 8;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MotionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Vector > params_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::proto::Vector* speed_;
  ::proto::Vector* ref_pos_;
  int state_;
  ::google::protobuf::uint32 ref_id_;
  ::google::protobuf::uint64 interval_velocity_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlaceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlaceInfo) */ {
 public:
  PlaceInfo();
  virtual ~PlaceInfo();

  PlaceInfo(const PlaceInfo& from);

  inline PlaceInfo& operator=(const PlaceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaceInfo(PlaceInfo&& from) noexcept
    : PlaceInfo() {
    *this = ::std::move(from);
  }

  inline PlaceInfo& operator=(PlaceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceInfo& default_instance();

  static inline const PlaceInfo* internal_default_instance() {
    return reinterpret_cast<const PlaceInfo*>(
               &_PlaceInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(PlaceInfo* other);
  friend void swap(PlaceInfo& a, PlaceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaceInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaceInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaceInfo& from);
  void MergeFrom(const PlaceInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // @@protoc_insertion_point(class_scope:proto.PlaceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneWeaponInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneWeaponInfo) */ {
 public:
  SceneWeaponInfo();
  virtual ~SceneWeaponInfo();

  SceneWeaponInfo(const SceneWeaponInfo& from);

  inline SceneWeaponInfo& operator=(const SceneWeaponInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneWeaponInfo(SceneWeaponInfo&& from) noexcept
    : SceneWeaponInfo() {
    *this = ::std::move(from);
  }

  inline SceneWeaponInfo& operator=(SceneWeaponInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneWeaponInfo& default_instance();

  static inline const SceneWeaponInfo* internal_default_instance() {
    return reinterpret_cast<const SceneWeaponInfo*>(
               &_SceneWeaponInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(SceneWeaponInfo* other);
  friend void swap(SceneWeaponInfo& a, SceneWeaponInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneWeaponInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneWeaponInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneWeaponInfo& from);
  void MergeFrom(const SceneWeaponInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneWeaponInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> affix_map = 8;
  int affix_map_size() const;
  void clear_affix_map();
  static const int kAffixMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      affix_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_affix_map();

  // .proto.AbilitySyncStateInfo ability_info = 7;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 7;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // .proto.EntityRendererChangedInfo renderer_changed_info = 9;
  bool has_renderer_changed_info() const;
  void clear_renderer_changed_info();
  static const int kRendererChangedInfoFieldNumber = 9;
  const ::proto::EntityRendererChangedInfo& renderer_changed_info() const;
  ::proto::EntityRendererChangedInfo* mutable_renderer_changed_info();
  ::proto::EntityRendererChangedInfo* release_renderer_changed_info();
  void set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 2;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 2;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // uint64 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 item_id = 3;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 promote_level = 6;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 6;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneWeaponInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneWeaponInfo_AffixMapEntry : public ::google::protobuf::internal::MapEntry<SceneWeaponInfo_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneWeaponInfo_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneWeaponInfo_AffixMapEntry();
    SceneWeaponInfo_AffixMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneWeaponInfo_AffixMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneWeaponInfo_AffixMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneWeaponInfo_AffixMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > affix_map_;
  private:
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::proto::EntityRendererChangedInfo* renderer_changed_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 gadget_id_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneReliquaryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneReliquaryInfo) */ {
 public:
  SceneReliquaryInfo();
  virtual ~SceneReliquaryInfo();

  SceneReliquaryInfo(const SceneReliquaryInfo& from);

  inline SceneReliquaryInfo& operator=(const SceneReliquaryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneReliquaryInfo(SceneReliquaryInfo&& from) noexcept
    : SceneReliquaryInfo() {
    *this = ::std::move(from);
  }

  inline SceneReliquaryInfo& operator=(SceneReliquaryInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneReliquaryInfo& default_instance();

  static inline const SceneReliquaryInfo* internal_default_instance() {
    return reinterpret_cast<const SceneReliquaryInfo*>(
               &_SceneReliquaryInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(SceneReliquaryInfo* other);
  friend void swap(SceneReliquaryInfo& a, SceneReliquaryInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneReliquaryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneReliquaryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneReliquaryInfo& from);
  void MergeFrom(const SceneReliquaryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneReliquaryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 promote_level = 4;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 4;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneReliquaryInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerBuff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerBuff) */ {
 public:
  ServerBuff();
  virtual ~ServerBuff();

  ServerBuff(const ServerBuff& from);

  inline ServerBuff& operator=(const ServerBuff& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerBuff(ServerBuff&& from) noexcept
    : ServerBuff() {
    *this = ::std::move(from);
  }

  inline ServerBuff& operator=(ServerBuff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBuff& default_instance();

  static inline const ServerBuff* internal_default_instance() {
    return reinterpret_cast<const ServerBuff*>(
               &_ServerBuff_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(ServerBuff* other);
  friend void swap(ServerBuff& a, ServerBuff& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerBuff* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerBuff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerBuff& from);
  void MergeFrom(const ServerBuff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 server_buff_uid = 1;
  void clear_server_buff_uid();
  static const int kServerBuffUidFieldNumber = 1;
  ::google::protobuf::uint32 server_buff_uid() const;
  void set_server_buff_uid(::google::protobuf::uint32 value);

  // uint32 server_buff_id = 2;
  void clear_server_buff_id();
  static const int kServerBuffIdFieldNumber = 2;
  ::google::protobuf::uint32 server_buff_id() const;
  void set_server_buff_id(::google::protobuf::uint32 value);

  // uint32 server_buff_type = 3;
  void clear_server_buff_type();
  static const int kServerBuffTypeFieldNumber = 3;
  ::google::protobuf::uint32 server_buff_type() const;
  void set_server_buff_type(::google::protobuf::uint32 value);

  // uint32 instanced_modifier_id = 4;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 4;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // bool is_modifier_added = 5;
  void clear_is_modifier_added();
  static const int kIsModifierAddedFieldNumber = 5;
  bool is_modifier_added() const;
  void set_is_modifier_added(bool value);

  // @@protoc_insertion_point(class_scope:proto.ServerBuff)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 server_buff_uid_;
  ::google::protobuf::uint32 server_buff_id_;
  ::google::protobuf::uint32 server_buff_type_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  bool is_modifier_added_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CurVehicleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CurVehicleInfo) */ {
 public:
  CurVehicleInfo();
  virtual ~CurVehicleInfo();

  CurVehicleInfo(const CurVehicleInfo& from);

  inline CurVehicleInfo& operator=(const CurVehicleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CurVehicleInfo(CurVehicleInfo&& from) noexcept
    : CurVehicleInfo() {
    *this = ::std::move(from);
  }

  inline CurVehicleInfo& operator=(CurVehicleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CurVehicleInfo& default_instance();

  static inline const CurVehicleInfo* internal_default_instance() {
    return reinterpret_cast<const CurVehicleInfo*>(
               &_CurVehicleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CurVehicleInfo* other);
  friend void swap(CurVehicleInfo& a, CurVehicleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CurVehicleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CurVehicleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CurVehicleInfo& from);
  void MergeFrom(const CurVehicleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CurVehicleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CurVehicleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 pos_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarExcelInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExcelInfo) */ {
 public:
  AvatarExcelInfo();
  virtual ~AvatarExcelInfo();

  AvatarExcelInfo(const AvatarExcelInfo& from);

  inline AvatarExcelInfo& operator=(const AvatarExcelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExcelInfo(AvatarExcelInfo&& from) noexcept
    : AvatarExcelInfo() {
    *this = ::std::move(from);
  }

  inline AvatarExcelInfo& operator=(AvatarExcelInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExcelInfo& default_instance();

  static inline const AvatarExcelInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarExcelInfo*>(
               &_AvatarExcelInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(AvatarExcelInfo* other);
  friend void swap(AvatarExcelInfo& a, AvatarExcelInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExcelInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExcelInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExcelInfo& from);
  void MergeFrom(const AvatarExcelInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExcelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 prefab_path_hash = 1;
  void clear_prefab_path_hash();
  static const int kPrefabPathHashFieldNumber = 1;
  ::google::protobuf::uint64 prefab_path_hash() const;
  void set_prefab_path_hash(::google::protobuf::uint64 value);

  // uint64 prefab_path_remote_hash = 2;
  void clear_prefab_path_remote_hash();
  static const int kPrefabPathRemoteHashFieldNumber = 2;
  ::google::protobuf::uint64 prefab_path_remote_hash() const;
  void set_prefab_path_remote_hash(::google::protobuf::uint64 value);

  // uint64 controller_path_hash = 3;
  void clear_controller_path_hash();
  static const int kControllerPathHashFieldNumber = 3;
  ::google::protobuf::uint64 controller_path_hash() const;
  void set_controller_path_hash(::google::protobuf::uint64 value);

  // uint64 controller_path_remote_hash = 4;
  void clear_controller_path_remote_hash();
  static const int kControllerPathRemoteHashFieldNumber = 4;
  ::google::protobuf::uint64 controller_path_remote_hash() const;
  void set_controller_path_remote_hash(::google::protobuf::uint64 value);

  // uint64 combat_config_hash = 5;
  void clear_combat_config_hash();
  static const int kCombatConfigHashFieldNumber = 5;
  ::google::protobuf::uint64 combat_config_hash() const;
  void set_combat_config_hash(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExcelInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 prefab_path_hash_;
  ::google::protobuf::uint64 prefab_path_remote_hash_;
  ::google::protobuf::uint64 controller_path_hash_;
  ::google::protobuf::uint64 controller_path_remote_hash_;
  ::google::protobuf::uint64 combat_config_hash_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAvatarInfo) */ {
 public:
  SceneAvatarInfo();
  virtual ~SceneAvatarInfo();

  SceneAvatarInfo(const SceneAvatarInfo& from);

  inline SceneAvatarInfo& operator=(const SceneAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAvatarInfo(SceneAvatarInfo&& from) noexcept
    : SceneAvatarInfo() {
    *this = ::std::move(from);
  }

  inline SceneAvatarInfo& operator=(SceneAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAvatarInfo& default_instance();

  static inline const SceneAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const SceneAvatarInfo*>(
               &_SceneAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(SceneAvatarInfo* other);
  friend void swap(SceneAvatarInfo& a, SceneAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAvatarInfo& from);
  void MergeFrom(const SceneAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 equip_id_list = 5;
  int equip_id_list_size() const;
  void clear_equip_id_list();
  static const int kEquipIdListFieldNumber = 5;
  ::google::protobuf::uint32 equip_id_list(int index) const;
  void set_equip_id_list(int index, ::google::protobuf::uint32 value);
  void add_equip_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equip_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equip_id_list();

  // repeated uint32 talent_id_list = 7;
  int talent_id_list_size() const;
  void clear_talent_id_list();
  static const int kTalentIdListFieldNumber = 7;
  ::google::protobuf::uint32 talent_id_list(int index) const;
  void set_talent_id_list(int index, ::google::protobuf::uint32 value);
  void add_talent_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      talent_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_talent_id_list();

  // repeated .proto.SceneReliquaryInfo reliquary_list = 9;
  int reliquary_list_size() const;
  void clear_reliquary_list();
  static const int kReliquaryListFieldNumber = 9;
  const ::proto::SceneReliquaryInfo& reliquary_list(int index) const;
  ::proto::SceneReliquaryInfo* mutable_reliquary_list(int index);
  ::proto::SceneReliquaryInfo* add_reliquary_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >*
      mutable_reliquary_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >&
      reliquary_list() const;

  // repeated uint32 inherent_proud_skill_list = 12;
  int inherent_proud_skill_list_size() const;
  void clear_inherent_proud_skill_list();
  static const int kInherentProudSkillListFieldNumber = 12;
  ::google::protobuf::uint32 inherent_proud_skill_list(int index) const;
  void set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value);
  void add_inherent_proud_skill_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inherent_proud_skill_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inherent_proud_skill_list();

  // map<uint32, uint32> skill_level_map = 13;
  int skill_level_map_size() const;
  void clear_skill_level_map();
  static const int kSkillLevelMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_level_map();

  // map<uint32, uint32> proud_skill_extra_level_map = 14;
  int proud_skill_extra_level_map_size() const;
  void clear_proud_skill_extra_level_map();
  static const int kProudSkillExtraLevelMapFieldNumber = 14;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      proud_skill_extra_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_proud_skill_extra_level_map();

  // repeated .proto.ServerBuff server_buff_list = 15;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 15;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // repeated uint32 team_resonance_list = 16;
  int team_resonance_list_size() const;
  void clear_team_resonance_list();
  static const int kTeamResonanceListFieldNumber = 16;
  ::google::protobuf::uint32 team_resonance_list(int index) const;
  void set_team_resonance_list(int index, ::google::protobuf::uint32 value);
  void add_team_resonance_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      team_resonance_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_team_resonance_list();

  // .proto.SceneWeaponInfo weapon = 8;
  bool has_weapon() const;
  void clear_weapon();
  static const int kWeaponFieldNumber = 8;
  const ::proto::SceneWeaponInfo& weapon() const;
  ::proto::SceneWeaponInfo* mutable_weapon();
  ::proto::SceneWeaponInfo* release_weapon();
  void set_allocated_weapon(::proto::SceneWeaponInfo* weapon);

  // .proto.CurVehicleInfo cur_vehicle_info = 20;
  bool has_cur_vehicle_info() const;
  void clear_cur_vehicle_info();
  static const int kCurVehicleInfoFieldNumber = 20;
  const ::proto::CurVehicleInfo& cur_vehicle_info() const;
  ::proto::CurVehicleInfo* mutable_cur_vehicle_info();
  ::proto::CurVehicleInfo* release_cur_vehicle_info();
  void set_allocated_cur_vehicle_info(::proto::CurVehicleInfo* cur_vehicle_info);

  // .proto.AvatarExcelInfo excel_info = 21;
  bool has_excel_info() const;
  void clear_excel_info();
  static const int kExcelInfoFieldNumber = 21;
  const ::proto::AvatarExcelInfo& excel_info() const;
  ::proto::AvatarExcelInfo* mutable_excel_info();
  ::proto::AvatarExcelInfo* release_excel_info();
  void set_allocated_excel_info(::proto::AvatarExcelInfo* excel_info);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 avatar_id = 2;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 peer_id = 4;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 4;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // uint32 skill_depot_id = 6;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 6;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // uint32 core_proud_skill_level = 11;
  void clear_core_proud_skill_level();
  static const int kCoreProudSkillLevelFieldNumber = 11;
  ::google::protobuf::uint32 core_proud_skill_level() const;
  void set_core_proud_skill_level(::google::protobuf::uint32 value);

  // uint32 wearing_flycloak_id = 17;
  void clear_wearing_flycloak_id();
  static const int kWearingFlycloakIdFieldNumber = 17;
  ::google::protobuf::uint32 wearing_flycloak_id() const;
  void set_wearing_flycloak_id(::google::protobuf::uint32 value);

  // uint32 born_time = 18;
  void clear_born_time();
  static const int kBornTimeFieldNumber = 18;
  ::google::protobuf::uint32 born_time() const;
  void set_born_time(::google::protobuf::uint32 value);

  // uint32 costume_id = 19;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 19;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // uint32 anim_hash = 22;
  void clear_anim_hash();
  static const int kAnimHashFieldNumber = 22;
  ::google::protobuf::uint32 anim_hash() const;
  void set_anim_hash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equip_id_list_;
  mutable int _equip_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talent_id_list_;
  mutable int _talent_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo > reliquary_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inherent_proud_skill_list_;
  mutable int _inherent_proud_skill_list_cached_byte_size_;
  public:
  class SceneAvatarInfo_SkillLevelMapEntry : public ::google::protobuf::internal::MapEntry<SceneAvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneAvatarInfo_SkillLevelMapEntry();
    SceneAvatarInfo_SkillLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAvatarInfo_SkillLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAvatarInfo_SkillLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAvatarInfo_SkillLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_level_map_;
  private:
  public:
  class SceneAvatarInfo_ProudSkillExtraLevelMapEntry : public ::google::protobuf::internal::MapEntry<SceneAvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneAvatarInfo_ProudSkillExtraLevelMapEntry();
    SceneAvatarInfo_ProudSkillExtraLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAvatarInfo_ProudSkillExtraLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAvatarInfo_ProudSkillExtraLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > proud_skill_extra_level_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > team_resonance_list_;
  mutable int _team_resonance_list_cached_byte_size_;
  ::proto::SceneWeaponInfo* weapon_;
  ::proto::CurVehicleInfo* cur_vehicle_info_;
  ::proto::AvatarExcelInfo* excel_info_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 skill_depot_id_;
  ::google::protobuf::uint32 core_proud_skill_level_;
  ::google::protobuf::uint32 wearing_flycloak_id_;
  ::google::protobuf::uint32 born_time_;
  ::google::protobuf::uint32 costume_id_;
  ::google::protobuf::uint32 anim_hash_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneFishInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneFishInfo) */ {
 public:
  SceneFishInfo();
  virtual ~SceneFishInfo();

  SceneFishInfo(const SceneFishInfo& from);

  inline SceneFishInfo& operator=(const SceneFishInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneFishInfo(SceneFishInfo&& from) noexcept
    : SceneFishInfo() {
    *this = ::std::move(from);
  }

  inline SceneFishInfo& operator=(SceneFishInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneFishInfo& default_instance();

  static inline const SceneFishInfo* internal_default_instance() {
    return reinterpret_cast<const SceneFishInfo*>(
               &_SceneFishInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(SceneFishInfo* other);
  friend void swap(SceneFishInfo& a, SceneFishInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneFishInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneFishInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneFishInfo& from);
  void MergeFrom(const SceneFishInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneFishInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector fish_pool_pos = 3;
  bool has_fish_pool_pos() const;
  void clear_fish_pool_pos();
  static const int kFishPoolPosFieldNumber = 3;
  const ::proto::Vector& fish_pool_pos() const;
  ::proto::Vector* mutable_fish_pool_pos();
  ::proto::Vector* release_fish_pool_pos();
  void set_allocated_fish_pool_pos(::proto::Vector* fish_pool_pos);

  // uint32 fish_id = 1;
  void clear_fish_id();
  static const int kFishIdFieldNumber = 1;
  ::google::protobuf::uint32 fish_id() const;
  void set_fish_id(::google::protobuf::uint32 value);

  // uint32 fish_pool_entity_id = 2;
  void clear_fish_pool_entity_id();
  static const int kFishPoolEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 fish_pool_entity_id() const;
  void set_fish_pool_entity_id(::google::protobuf::uint32 value);

  // uint32 fish_pool_gadget_id = 4;
  void clear_fish_pool_gadget_id();
  static const int kFishPoolGadgetIdFieldNumber = 4;
  ::google::protobuf::uint32 fish_pool_gadget_id() const;
  void set_fish_pool_gadget_id(::google::protobuf::uint32 value);

  // uint32 last_shock_time = 5;
  void clear_last_shock_time();
  static const int kLastShockTimeFieldNumber = 5;
  ::google::protobuf::uint32 last_shock_time() const;
  void set_last_shock_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneFishInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* fish_pool_pos_;
  ::google::protobuf::uint32 fish_id_;
  ::google::protobuf::uint32 fish_pool_entity_id_;
  ::google::protobuf::uint32 fish_pool_gadget_id_;
  ::google::protobuf::uint32 last_shock_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FishtankFishInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FishtankFishInfo) */ {
 public:
  FishtankFishInfo();
  virtual ~FishtankFishInfo();

  FishtankFishInfo(const FishtankFishInfo& from);

  inline FishtankFishInfo& operator=(const FishtankFishInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FishtankFishInfo(FishtankFishInfo&& from) noexcept
    : FishtankFishInfo() {
    *this = ::std::move(from);
  }

  inline FishtankFishInfo& operator=(FishtankFishInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FishtankFishInfo& default_instance();

  static inline const FishtankFishInfo* internal_default_instance() {
    return reinterpret_cast<const FishtankFishInfo*>(
               &_FishtankFishInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(FishtankFishInfo* other);
  friend void swap(FishtankFishInfo& a, FishtankFishInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FishtankFishInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FishtankFishInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FishtankFishInfo& from);
  void MergeFrom(const FishtankFishInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FishtankFishInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fish_distance_from_water = 1;
  void clear_fish_distance_from_water();
  static const int kFishDistanceFromWaterFieldNumber = 1;
  float fish_distance_from_water() const;
  void set_fish_distance_from_water(float value);

  // float fish_scale = 2;
  void clear_fish_scale();
  static const int kFishScaleFieldNumber = 2;
  float fish_scale() const;
  void set_fish_scale(float value);

  // float initial_rotation_y = 3;
  void clear_initial_rotation_y();
  static const int kInitialRotationYFieldNumber = 3;
  float initial_rotation_y() const;
  void set_initial_rotation_y(float value);

  // @@protoc_insertion_point(class_scope:proto.FishtankFishInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fish_distance_from_water_;
  float fish_scale_;
  float initial_rotation_y_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneMonsterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneMonsterInfo) */ {
 public:
  SceneMonsterInfo();
  virtual ~SceneMonsterInfo();

  SceneMonsterInfo(const SceneMonsterInfo& from);

  inline SceneMonsterInfo& operator=(const SceneMonsterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneMonsterInfo(SceneMonsterInfo&& from) noexcept
    : SceneMonsterInfo() {
    *this = ::std::move(from);
  }

  inline SceneMonsterInfo& operator=(SceneMonsterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneMonsterInfo& default_instance();

  enum ContentCase {
    kFishInfo = 50,
    kFishtankFishInfo = 51,
    CONTENT_NOT_SET = 0,
  };

  static inline const SceneMonsterInfo* internal_default_instance() {
    return reinterpret_cast<const SceneMonsterInfo*>(
               &_SceneMonsterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(SceneMonsterInfo* other);
  friend void swap(SceneMonsterInfo& a, SceneMonsterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneMonsterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneMonsterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneMonsterInfo& from);
  void MergeFrom(const SceneMonsterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneMonsterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .proto.SceneWeaponInfo weapon_list = 4;
  int weapon_list_size() const;
  void clear_weapon_list();
  static const int kWeaponListFieldNumber = 4;
  const ::proto::SceneWeaponInfo& weapon_list(int index) const;
  ::proto::SceneWeaponInfo* mutable_weapon_list(int index);
  ::proto::SceneWeaponInfo* add_weapon_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >*
      mutable_weapon_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >&
      weapon_list() const;

  // repeated uint32 affix_list = 6;
  int affix_list_size() const;
  void clear_affix_list();
  static const int kAffixListFieldNumber = 6;
  ::google::protobuf::uint32 affix_list(int index) const;
  void set_affix_list(int index, ::google::protobuf::uint32 value);
  void add_affix_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      affix_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_affix_list();

  // map<uint32, uint32> summon_tag_map = 10;
  int summon_tag_map_size() const;
  void clear_summon_tag_map();
  static const int kSummonTagMapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      summon_tag_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_summon_tag_map();

  // .proto.MonsterRoute monster_route = 18;
  bool has_monster_route() const;
  void clear_monster_route();
  static const int kMonsterRouteFieldNumber = 18;
  const ::proto::MonsterRoute& monster_route() const;
  ::proto::MonsterRoute* mutable_monster_route();
  ::proto::MonsterRoute* release_monster_route();
  void set_allocated_monster_route(::proto::MonsterRoute* monster_route);

  // uint32 monster_id = 1;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 5;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 5;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // uint32 owner_entity_id = 8;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 summoned_tag = 9;
  void clear_summoned_tag();
  static const int kSummonedTagFieldNumber = 9;
  ::google::protobuf::uint32 summoned_tag() const;
  void set_summoned_tag(::google::protobuf::uint32 value);

  // uint32 pose_id = 11;
  void clear_pose_id();
  static const int kPoseIdFieldNumber = 11;
  ::google::protobuf::uint32 pose_id() const;
  void set_pose_id(::google::protobuf::uint32 value);

  // .proto.MonsterBornType born_type = 12;
  void clear_born_type();
  static const int kBornTypeFieldNumber = 12;
  ::proto::MonsterBornType born_type() const;
  void set_born_type(::proto::MonsterBornType value);

  // uint32 block_id = 13;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 13;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // uint32 mark_flag = 14;
  void clear_mark_flag();
  static const int kMarkFlagFieldNumber = 14;
  ::google::protobuf::uint32 mark_flag() const;
  void set_mark_flag(::google::protobuf::uint32 value);

  // bool is_elite = 7;
  void clear_is_elite();
  static const int kIsEliteFieldNumber = 7;
  bool is_elite() const;
  void set_is_elite(bool value);

  // bool is_light = 22;
  void clear_is_light();
  static const int kIsLightFieldNumber = 22;
  bool is_light() const;
  void set_is_light(bool value);

  // uint32 title_id = 15;
  void clear_title_id();
  static const int kTitleIdFieldNumber = 15;
  ::google::protobuf::uint32 title_id() const;
  void set_title_id(::google::protobuf::uint32 value);

  // uint32 special_name_id = 16;
  void clear_special_name_id();
  static const int kSpecialNameIdFieldNumber = 16;
  ::google::protobuf::uint32 special_name_id() const;
  void set_special_name_id(::google::protobuf::uint32 value);

  // uint32 attack_target_id = 17;
  void clear_attack_target_id();
  static const int kAttackTargetIdFieldNumber = 17;
  ::google::protobuf::uint32 attack_target_id() const;
  void set_attack_target_id(::google::protobuf::uint32 value);

  // uint32 ai_config_id = 19;
  void clear_ai_config_id();
  static const int kAiConfigIdFieldNumber = 19;
  ::google::protobuf::uint32 ai_config_id() const;
  void set_ai_config_id(::google::protobuf::uint32 value);

  // uint32 level_route_id = 20;
  void clear_level_route_id();
  static const int kLevelRouteIdFieldNumber = 20;
  ::google::protobuf::uint32 level_route_id() const;
  void set_level_route_id(::google::protobuf::uint32 value);

  // uint32 init_pose_id = 21;
  void clear_init_pose_id();
  static const int kInitPoseIdFieldNumber = 21;
  ::google::protobuf::uint32 init_pose_id() const;
  void set_init_pose_id(::google::protobuf::uint32 value);

  // uint32 kill_num = 23;
  void clear_kill_num();
  static const int kKillNumFieldNumber = 23;
  ::google::protobuf::uint32 kill_num() const;
  void set_kill_num(::google::protobuf::uint32 value);

  // .proto.SceneFishInfo fish_info = 50;
  bool has_fish_info() const;
  void clear_fish_info();
  static const int kFishInfoFieldNumber = 50;
  const ::proto::SceneFishInfo& fish_info() const;
  ::proto::SceneFishInfo* mutable_fish_info();
  ::proto::SceneFishInfo* release_fish_info();
  void set_allocated_fish_info(::proto::SceneFishInfo* fish_info);

  // .proto.FishtankFishInfo fishtank_fish_info = 51;
  bool has_fishtank_fish_info() const;
  void clear_fishtank_fish_info();
  static const int kFishtankFishInfoFieldNumber = 51;
  const ::proto::FishtankFishInfo& fishtank_fish_info() const;
  ::proto::FishtankFishInfo* mutable_fishtank_fish_info();
  ::proto::FishtankFishInfo* release_fishtank_fish_info();
  void set_allocated_fishtank_fish_info(::proto::FishtankFishInfo* fishtank_fish_info);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneMonsterInfo)
 private:
  void set_has_fish_info();
  void set_has_fishtank_fish_info();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo > weapon_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > affix_list_;
  mutable int _affix_list_cached_byte_size_;
  public:
  class SceneMonsterInfo_SummonTagMapEntry : public ::google::protobuf::internal::MapEntry<SceneMonsterInfo_SummonTagMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneMonsterInfo_SummonTagMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneMonsterInfo_SummonTagMapEntry();
    SceneMonsterInfo_SummonTagMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneMonsterInfo_SummonTagMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneMonsterInfo_SummonTagMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneMonsterInfo_SummonTagMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > summon_tag_map_;
  private:
  ::proto::MonsterRoute* monster_route_;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  ::google::protobuf::uint32 owner_entity_id_;
  ::google::protobuf::uint32 summoned_tag_;
  ::google::protobuf::uint32 pose_id_;
  int born_type_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 mark_flag_;
  bool is_elite_;
  bool is_light_;
  ::google::protobuf::uint32 title_id_;
  ::google::protobuf::uint32 special_name_id_;
  ::google::protobuf::uint32 attack_target_id_;
  ::google::protobuf::uint32 ai_config_id_;
  ::google::protobuf::uint32 level_route_id_;
  ::google::protobuf::uint32 init_pose_id_;
  ::google::protobuf::uint32 kill_num_;
  union ContentUnion {
    ContentUnion() {}
    ::proto::SceneFishInfo* fish_info_;
    ::proto::FishtankFishInfo* fishtank_fish_info_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneNpcInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneNpcInfo) */ {
 public:
  SceneNpcInfo();
  virtual ~SceneNpcInfo();

  SceneNpcInfo(const SceneNpcInfo& from);

  inline SceneNpcInfo& operator=(const SceneNpcInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneNpcInfo(SceneNpcInfo&& from) noexcept
    : SceneNpcInfo() {
    *this = ::std::move(from);
  }

  inline SceneNpcInfo& operator=(SceneNpcInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneNpcInfo& default_instance();

  static inline const SceneNpcInfo* internal_default_instance() {
    return reinterpret_cast<const SceneNpcInfo*>(
               &_SceneNpcInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(SceneNpcInfo* other);
  friend void swap(SceneNpcInfo& a, SceneNpcInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneNpcInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneNpcInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneNpcInfo& from);
  void MergeFrom(const SceneNpcInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneNpcInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 npc_id = 1;
  void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  ::google::protobuf::uint32 npc_id() const;
  void set_npc_id(::google::protobuf::uint32 value);

  // uint32 room_id = 2;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 parent_quest_id = 3;
  void clear_parent_quest_id();
  static const int kParentQuestIdFieldNumber = 3;
  ::google::protobuf::uint32 parent_quest_id() const;
  void set_parent_quest_id(::google::protobuf::uint32 value);

  // uint32 block_id = 4;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 4;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneNpcInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 npc_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 parent_quest_id_;
  ::google::protobuf::uint32 block_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorktopInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorktopInfo) */ {
 public:
  WorktopInfo();
  virtual ~WorktopInfo();

  WorktopInfo(const WorktopInfo& from);

  inline WorktopInfo& operator=(const WorktopInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorktopInfo(WorktopInfo&& from) noexcept
    : WorktopInfo() {
    *this = ::std::move(from);
  }

  inline WorktopInfo& operator=(WorktopInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorktopInfo& default_instance();

  static inline const WorktopInfo* internal_default_instance() {
    return reinterpret_cast<const WorktopInfo*>(
               &_WorktopInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(WorktopInfo* other);
  friend void swap(WorktopInfo& a, WorktopInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorktopInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WorktopInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorktopInfo& from);
  void MergeFrom(const WorktopInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorktopInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 option_list = 1;
  int option_list_size() const;
  void clear_option_list();
  static const int kOptionListFieldNumber = 1;
  ::google::protobuf::uint32 option_list(int index) const;
  void set_option_list(int index, ::google::protobuf::uint32 value);
  void add_option_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      option_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_option_list();

  // bool is_guest_can_operate = 2;
  void clear_is_guest_can_operate();
  static const int kIsGuestCanOperateFieldNumber = 2;
  bool is_guest_can_operate() const;
  void set_is_guest_can_operate(bool value);

  // @@protoc_insertion_point(class_scope:proto.WorktopInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > option_list_;
  mutable int _option_list_cached_byte_size_;
  bool is_guest_can_operate_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MathQuaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MathQuaternion) */ {
 public:
  MathQuaternion();
  virtual ~MathQuaternion();

  MathQuaternion(const MathQuaternion& from);

  inline MathQuaternion& operator=(const MathQuaternion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MathQuaternion(MathQuaternion&& from) noexcept
    : MathQuaternion() {
    *this = ::std::move(from);
  }

  inline MathQuaternion& operator=(MathQuaternion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MathQuaternion& default_instance();

  static inline const MathQuaternion* internal_default_instance() {
    return reinterpret_cast<const MathQuaternion*>(
               &_MathQuaternion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(MathQuaternion* other);
  friend void swap(MathQuaternion& a, MathQuaternion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MathQuaternion* New() const PROTOBUF_FINAL { return New(NULL); }

  MathQuaternion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MathQuaternion& from);
  void MergeFrom(const MathQuaternion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MathQuaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float w = 4;
  void clear_w();
  static const int kWFieldNumber = 4;
  float w() const;
  void set_w(float value);

  // @@protoc_insertion_point(class_scope:proto.MathQuaternion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float w_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformInfo) */ {
 public:
  PlatformInfo();
  virtual ~PlatformInfo();

  PlatformInfo(const PlatformInfo& from);

  inline PlatformInfo& operator=(const PlatformInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformInfo(PlatformInfo&& from) noexcept
    : PlatformInfo() {
    *this = ::std::move(from);
  }

  inline PlatformInfo& operator=(PlatformInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformInfo& default_instance();

  static inline const PlatformInfo* internal_default_instance() {
    return reinterpret_cast<const PlatformInfo*>(
               &_PlatformInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(PlatformInfo* other);
  friend void swap(PlatformInfo& a, PlatformInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformInfo& from);
  void MergeFrom(const PlatformInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector start_pos = 7;
  bool has_start_pos() const;
  void clear_start_pos();
  static const int kStartPosFieldNumber = 7;
  const ::proto::Vector& start_pos() const;
  ::proto::Vector* mutable_start_pos();
  ::proto::Vector* release_start_pos();
  void set_allocated_start_pos(::proto::Vector* start_pos);

  // .proto.MathQuaternion start_rot = 9;
  bool has_start_rot() const;
  void clear_start_rot();
  static const int kStartRotFieldNumber = 9;
  const ::proto::MathQuaternion& start_rot() const;
  ::proto::MathQuaternion* mutable_start_rot();
  ::proto::MathQuaternion* release_start_rot();
  void set_allocated_start_rot(::proto::MathQuaternion* start_rot);

  // .proto.Vector pos_offset = 11;
  bool has_pos_offset() const;
  void clear_pos_offset();
  static const int kPosOffsetFieldNumber = 11;
  const ::proto::Vector& pos_offset() const;
  ::proto::Vector* mutable_pos_offset();
  ::proto::Vector* release_pos_offset();
  void set_allocated_pos_offset(::proto::Vector* pos_offset);

  // .proto.MathQuaternion rot_offset = 12;
  bool has_rot_offset() const;
  void clear_rot_offset();
  static const int kRotOffsetFieldNumber = 12;
  const ::proto::MathQuaternion& rot_offset() const;
  ::proto::MathQuaternion* mutable_rot_offset();
  ::proto::MathQuaternion* release_rot_offset();
  void set_allocated_rot_offset(::proto::MathQuaternion* rot_offset);

  // .proto.Route route = 15;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 15;
  const ::proto::Route& route() const;
  ::proto::Route* mutable_route();
  ::proto::Route* release_route();
  void set_allocated_route(::proto::Route* route);

  // uint32 route_id = 1;
  void clear_route_id();
  static const int kRouteIdFieldNumber = 1;
  ::google::protobuf::uint32 route_id() const;
  void set_route_id(::google::protobuf::uint32 value);

  // int32 start_index = 2;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 2;
  ::google::protobuf::int32 start_index() const;
  void set_start_index(::google::protobuf::int32 value);

  // uint32 start_route_time = 3;
  void clear_start_route_time();
  static const int kStartRouteTimeFieldNumber = 3;
  ::google::protobuf::uint32 start_route_time() const;
  void set_start_route_time(::google::protobuf::uint32 value);

  // uint32 start_scene_time = 4;
  void clear_start_scene_time();
  static const int kStartSceneTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_scene_time() const;
  void set_start_scene_time(::google::protobuf::uint32 value);

  // uint32 stop_scene_time = 10;
  void clear_stop_scene_time();
  static const int kStopSceneTimeFieldNumber = 10;
  ::google::protobuf::uint32 stop_scene_time() const;
  void set_stop_scene_time(::google::protobuf::uint32 value);

  // bool is_started = 8;
  void clear_is_started();
  static const int kIsStartedFieldNumber = 8;
  bool is_started() const;
  void set_is_started(bool value);

  // bool is_active = 14;
  void clear_is_active();
  static const int kIsActiveFieldNumber = 14;
  bool is_active() const;
  void set_is_active(bool value);

  // .proto.MovingPlatformType moving_platform_type = 13;
  void clear_moving_platform_type();
  static const int kMovingPlatformTypeFieldNumber = 13;
  ::proto::MovingPlatformType moving_platform_type() const;
  void set_moving_platform_type(::proto::MovingPlatformType value);

  // uint32 point_id = 16;
  void clear_point_id();
  static const int kPointIdFieldNumber = 16;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* start_pos_;
  ::proto::MathQuaternion* start_rot_;
  ::proto::Vector* pos_offset_;
  ::proto::MathQuaternion* rot_offset_;
  ::proto::Route* route_;
  ::google::protobuf::uint32 route_id_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::uint32 start_route_time_;
  ::google::protobuf::uint32 start_scene_time_;
  ::google::protobuf::uint32 stop_scene_time_;
  bool is_started_;
  bool is_active_;
  int moving_platform_type_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoutePoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RoutePoint) */ {
 public:
  RoutePoint();
  virtual ~RoutePoint();

  RoutePoint(const RoutePoint& from);

  inline RoutePoint& operator=(const RoutePoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutePoint(RoutePoint&& from) noexcept
    : RoutePoint() {
    *this = ::std::move(from);
  }

  inline RoutePoint& operator=(RoutePoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutePoint& default_instance();

  enum MoveParamsCase {
    kVelocity = 11,
    kTime = 12,
    MOVE_PARAMS_NOT_SET = 0,
  };

  enum RotateParamsCase {
    kRotation = 21,
    kRotationSpeed = 22,
    kAxisSpeed = 23,
    ROTATE_PARAMS_NOT_SET = 0,
  };

  static inline const RoutePoint* internal_default_instance() {
    return reinterpret_cast<const RoutePoint*>(
               &_RoutePoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(RoutePoint* other);
  friend void swap(RoutePoint& a, RoutePoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutePoint* New() const PROTOBUF_FINAL { return New(NULL); }

  RoutePoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoutePoint& from);
  void MergeFrom(const RoutePoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoutePoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // float arrive_range = 2;
  void clear_arrive_range();
  static const int kArriveRangeFieldNumber = 2;
  float arrive_range() const;
  void set_arrive_range(float value);

  // bool has_reach_event = 3;
  void clear_has_reach_event();
  static const int kHasReachEventFieldNumber = 3;
  bool has_reach_event() const;
  void set_has_reach_event(bool value);

  // float velocity = 11;
  private:
  bool has_velocity() const;
  public:
  void clear_velocity();
  static const int kVelocityFieldNumber = 11;
  float velocity() const;
  void set_velocity(float value);

  // float time = 12;
  private:
  bool has_time() const;
  public:
  void clear_time();
  static const int kTimeFieldNumber = 12;
  float time() const;
  void set_time(float value);

  // .proto.Vector rotation = 21;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 21;
  const ::proto::Vector& rotation() const;
  ::proto::Vector* mutable_rotation();
  ::proto::Vector* release_rotation();
  void set_allocated_rotation(::proto::Vector* rotation);

  // .proto.MathQuaternion rotation_speed = 22;
  bool has_rotation_speed() const;
  void clear_rotation_speed();
  static const int kRotationSpeedFieldNumber = 22;
  const ::proto::MathQuaternion& rotation_speed() const;
  ::proto::MathQuaternion* mutable_rotation_speed();
  ::proto::MathQuaternion* release_rotation_speed();
  void set_allocated_rotation_speed(::proto::MathQuaternion* rotation_speed);

  // .proto.MathQuaternion axis_speed = 23;
  bool has_axis_speed() const;
  void clear_axis_speed();
  static const int kAxisSpeedFieldNumber = 23;
  const ::proto::MathQuaternion& axis_speed() const;
  ::proto::MathQuaternion* mutable_axis_speed();
  ::proto::MathQuaternion* release_axis_speed();
  void set_allocated_axis_speed(::proto::MathQuaternion* axis_speed);

  MoveParamsCase move_params_case() const;
  RotateParamsCase rotate_params_case() const;
  // @@protoc_insertion_point(class_scope:proto.RoutePoint)
 private:
  void set_has_velocity();
  void set_has_time();
  void set_has_rotation();
  void set_has_rotation_speed();
  void set_has_axis_speed();

  inline bool has_move_params() const;
  void clear_move_params();
  inline void clear_has_move_params();

  inline bool has_rotate_params() const;
  void clear_rotate_params();
  inline void clear_has_rotate_params();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  float arrive_range_;
  bool has_reach_event_;
  union MoveParamsUnion {
    MoveParamsUnion() {}
    float velocity_;
    float time_;
  } move_params_;
  union RotateParamsUnion {
    RotateParamsUnion() {}
    ::proto::Vector* rotation_;
    ::proto::MathQuaternion* rotation_speed_;
    ::proto::MathQuaternion* axis_speed_;
  } rotate_params_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Route : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Route) */ {
 public:
  Route();
  virtual ~Route();

  Route(const Route& from);

  inline Route& operator=(const Route& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Route(Route&& from) noexcept
    : Route() {
    *this = ::std::move(from);
  }

  inline Route& operator=(Route&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Route& default_instance();

  static inline const Route* internal_default_instance() {
    return reinterpret_cast<const Route*>(
               &_Route_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(Route* other);
  friend void swap(Route& a, Route& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Route* New() const PROTOBUF_FINAL { return New(NULL); }

  Route* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Route& from);
  void MergeFrom(const Route& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Route* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RoutePoint route_points = 1;
  int route_points_size() const;
  void clear_route_points();
  static const int kRoutePointsFieldNumber = 1;
  const ::proto::RoutePoint& route_points(int index) const;
  ::proto::RoutePoint* mutable_route_points(int index);
  ::proto::RoutePoint* add_route_points();
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >*
      mutable_route_points();
  const ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >&
      route_points() const;

  // uint32 route_type = 2;
  void clear_route_type();
  static const int kRouteTypeFieldNumber = 2;
  ::google::protobuf::uint32 route_type() const;
  void set_route_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Route)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint > route_points_;
  ::google::protobuf::uint32 route_type_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonsterRoute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MonsterRoute) */ {
 public:
  MonsterRoute();
  virtual ~MonsterRoute();

  MonsterRoute(const MonsterRoute& from);

  inline MonsterRoute& operator=(const MonsterRoute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonsterRoute(MonsterRoute&& from) noexcept
    : MonsterRoute() {
    *this = ::std::move(from);
  }

  inline MonsterRoute& operator=(MonsterRoute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterRoute& default_instance();

  static inline const MonsterRoute* internal_default_instance() {
    return reinterpret_cast<const MonsterRoute*>(
               &_MonsterRoute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(MonsterRoute* other);
  friend void swap(MonsterRoute& a, MonsterRoute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonsterRoute* New() const PROTOBUF_FINAL { return New(NULL); }

  MonsterRoute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonsterRoute& from);
  void MergeFrom(const MonsterRoute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonsterRoute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RoutePoint route_points = 1;
  int route_points_size() const;
  void clear_route_points();
  static const int kRoutePointsFieldNumber = 1;
  const ::proto::RoutePoint& route_points(int index) const;
  ::proto::RoutePoint* mutable_route_points(int index);
  ::proto::RoutePoint* add_route_points();
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >*
      mutable_route_points();
  const ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >&
      route_points() const;

  // uint32 speed_level = 2;
  void clear_speed_level();
  static const int kSpeedLevelFieldNumber = 2;
  ::google::protobuf::uint32 speed_level() const;
  void set_speed_level(::google::protobuf::uint32 value);

  // uint32 route_type = 3;
  void clear_route_type();
  static const int kRouteTypeFieldNumber = 3;
  ::google::protobuf::uint32 route_type() const;
  void set_route_type(::google::protobuf::uint32 value);

  // float arrive_range = 4;
  void clear_arrive_range();
  static const int kArriveRangeFieldNumber = 4;
  float arrive_range() const;
  void set_arrive_range(float value);

  // @@protoc_insertion_point(class_scope:proto.MonsterRoute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint > route_points_;
  ::google::protobuf::uint32 speed_level_;
  ::google::protobuf::uint32 route_type_;
  float arrive_range_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeatherInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WeatherInfo) */ {
 public:
  WeatherInfo();
  virtual ~WeatherInfo();

  WeatherInfo(const WeatherInfo& from);

  inline WeatherInfo& operator=(const WeatherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WeatherInfo(WeatherInfo&& from) noexcept
    : WeatherInfo() {
    *this = ::std::move(from);
  }

  inline WeatherInfo& operator=(WeatherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WeatherInfo& default_instance();

  static inline const WeatherInfo* internal_default_instance() {
    return reinterpret_cast<const WeatherInfo*>(
               &_WeatherInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(WeatherInfo* other);
  friend void swap(WeatherInfo& a, WeatherInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WeatherInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WeatherInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeatherInfo& from);
  void MergeFrom(const WeatherInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeatherInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 weather_area_id = 1;
  void clear_weather_area_id();
  static const int kWeatherAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_area_id() const;
  void set_weather_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WeatherInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_area_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientGadgetInfo) */ {
 public:
  ClientGadgetInfo();
  virtual ~ClientGadgetInfo();

  ClientGadgetInfo(const ClientGadgetInfo& from);

  inline ClientGadgetInfo& operator=(const ClientGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientGadgetInfo(ClientGadgetInfo&& from) noexcept
    : ClientGadgetInfo() {
    *this = ::std::move(from);
  }

  inline ClientGadgetInfo& operator=(ClientGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGadgetInfo& default_instance();

  static inline const ClientGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const ClientGadgetInfo*>(
               &_ClientGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(ClientGadgetInfo* other);
  friend void swap(ClientGadgetInfo& a, ClientGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientGadgetInfo& from);
  void MergeFrom(const ClientGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 target_entity_id_list = 8;
  int target_entity_id_list_size() const;
  void clear_target_entity_id_list();
  static const int kTargetEntityIdListFieldNumber = 8;
  ::google::protobuf::uint32 target_entity_id_list(int index) const;
  void set_target_entity_id_list(int index, ::google::protobuf::uint32 value);
  void add_target_entity_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      target_entity_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_target_entity_id_list();

  // uint32 camp_id = 1;
  void clear_camp_id();
  static const int kCampIdFieldNumber = 1;
  ::google::protobuf::uint32 camp_id() const;
  void set_camp_id(::google::protobuf::uint32 value);

  // uint32 camp_type = 2;
  void clear_camp_type();
  static const int kCampTypeFieldNumber = 2;
  ::google::protobuf::uint32 camp_type() const;
  void set_camp_type(::google::protobuf::uint32 value);

  // uint64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 owner_entity_id = 4;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 5;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // bool async_load = 6;
  void clear_async_load();
  static const int kAsyncLoadFieldNumber = 6;
  bool async_load() const;
  void set_async_load(bool value);

  // bool is_peer_id_from_player = 7;
  void clear_is_peer_id_from_player();
  static const int kIsPeerIdFromPlayerFieldNumber = 7;
  bool is_peer_id_from_player() const;
  void set_is_peer_id_from_player(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClientGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > target_entity_id_list_;
  mutable int _target_entity_id_list_cached_byte_size_;
  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 camp_type_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 owner_entity_id_;
  ::google::protobuf::uint32 target_entity_id_;
  bool async_load_;
  bool is_peer_id_from_player_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityGadgetInfo) */ {
 public:
  AbilityGadgetInfo();
  virtual ~AbilityGadgetInfo();

  AbilityGadgetInfo(const AbilityGadgetInfo& from);

  inline AbilityGadgetInfo& operator=(const AbilityGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityGadgetInfo(AbilityGadgetInfo&& from) noexcept
    : AbilityGadgetInfo() {
    *this = ::std::move(from);
  }

  inline AbilityGadgetInfo& operator=(AbilityGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityGadgetInfo& default_instance();

  static inline const AbilityGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const AbilityGadgetInfo*>(
               &_AbilityGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(AbilityGadgetInfo* other);
  friend void swap(AbilityGadgetInfo& a, AbilityGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityGadgetInfo& from);
  void MergeFrom(const AbilityGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 camp_id = 1;
  void clear_camp_id();
  static const int kCampIdFieldNumber = 1;
  ::google::protobuf::uint32 camp_id() const;
  void set_camp_id(::google::protobuf::uint32 value);

  // uint32 camp_target_type = 2;
  void clear_camp_target_type();
  static const int kCampTargetTypeFieldNumber = 2;
  ::google::protobuf::uint32 camp_target_type() const;
  void set_camp_target_type(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 3;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 camp_target_type_;
  ::google::protobuf::uint32 target_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GatherGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GatherGadgetInfo) */ {
 public:
  GatherGadgetInfo();
  virtual ~GatherGadgetInfo();

  GatherGadgetInfo(const GatherGadgetInfo& from);

  inline GatherGadgetInfo& operator=(const GatherGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GatherGadgetInfo(GatherGadgetInfo&& from) noexcept
    : GatherGadgetInfo() {
    *this = ::std::move(from);
  }

  inline GatherGadgetInfo& operator=(GatherGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GatherGadgetInfo& default_instance();

  static inline const GatherGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const GatherGadgetInfo*>(
               &_GatherGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(GatherGadgetInfo* other);
  friend void swap(GatherGadgetInfo& a, GatherGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GatherGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GatherGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GatherGadgetInfo& from);
  void MergeFrom(const GatherGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GatherGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // bool is_forbid_guest = 2;
  void clear_is_forbid_guest();
  static const int kIsForbidGuestFieldNumber = 2;
  bool is_forbid_guest() const;
  void set_is_forbid_guest(bool value);

  // @@protoc_insertion_point(class_scope:proto.GatherGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  bool is_forbid_guest_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatueGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StatueGadgetInfo) */ {
 public:
  StatueGadgetInfo();
  virtual ~StatueGadgetInfo();

  StatueGadgetInfo(const StatueGadgetInfo& from);

  inline StatueGadgetInfo& operator=(const StatueGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatueGadgetInfo(StatueGadgetInfo&& from) noexcept
    : StatueGadgetInfo() {
    *this = ::std::move(from);
  }

  inline StatueGadgetInfo& operator=(StatueGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatueGadgetInfo& default_instance();

  static inline const StatueGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const StatueGadgetInfo*>(
               &_StatueGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(StatueGadgetInfo* other);
  friend void swap(StatueGadgetInfo& a, StatueGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatueGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  StatueGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StatueGadgetInfo& from);
  void MergeFrom(const StatueGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StatueGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 opened_statue_uid_list = 1;
  int opened_statue_uid_list_size() const;
  void clear_opened_statue_uid_list();
  static const int kOpenedStatueUidListFieldNumber = 1;
  ::google::protobuf::uint32 opened_statue_uid_list(int index) const;
  void set_opened_statue_uid_list(int index, ::google::protobuf::uint32 value);
  void add_opened_statue_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      opened_statue_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_opened_statue_uid_list();

  // @@protoc_insertion_point(class_scope:proto.StatueGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > opened_statue_uid_list_;
  mutable int _opened_statue_uid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeeklyBossResinDiscountInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WeeklyBossResinDiscountInfo) */ {
 public:
  WeeklyBossResinDiscountInfo();
  virtual ~WeeklyBossResinDiscountInfo();

  WeeklyBossResinDiscountInfo(const WeeklyBossResinDiscountInfo& from);

  inline WeeklyBossResinDiscountInfo& operator=(const WeeklyBossResinDiscountInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WeeklyBossResinDiscountInfo(WeeklyBossResinDiscountInfo&& from) noexcept
    : WeeklyBossResinDiscountInfo() {
    *this = ::std::move(from);
  }

  inline WeeklyBossResinDiscountInfo& operator=(WeeklyBossResinDiscountInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WeeklyBossResinDiscountInfo& default_instance();

  static inline const WeeklyBossResinDiscountInfo* internal_default_instance() {
    return reinterpret_cast<const WeeklyBossResinDiscountInfo*>(
               &_WeeklyBossResinDiscountInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(WeeklyBossResinDiscountInfo* other);
  friend void swap(WeeklyBossResinDiscountInfo& a, WeeklyBossResinDiscountInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WeeklyBossResinDiscountInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WeeklyBossResinDiscountInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeeklyBossResinDiscountInfo& from);
  void MergeFrom(const WeeklyBossResinDiscountInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeeklyBossResinDiscountInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 discount_num = 1;
  void clear_discount_num();
  static const int kDiscountNumFieldNumber = 1;
  ::google::protobuf::uint32 discount_num() const;
  void set_discount_num(::google::protobuf::uint32 value);

  // uint32 discount_num_limit = 2;
  void clear_discount_num_limit();
  static const int kDiscountNumLimitFieldNumber = 2;
  ::google::protobuf::uint32 discount_num_limit() const;
  void set_discount_num_limit(::google::protobuf::uint32 value);

  // uint32 resin_cost = 3;
  void clear_resin_cost();
  static const int kResinCostFieldNumber = 3;
  ::google::protobuf::uint32 resin_cost() const;
  void set_resin_cost(::google::protobuf::uint32 value);

  // uint32 original_resin_cost = 4;
  void clear_original_resin_cost();
  static const int kOriginalResinCostFieldNumber = 4;
  ::google::protobuf::uint32 original_resin_cost() const;
  void set_original_resin_cost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WeeklyBossResinDiscountInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 discount_num_;
  ::google::protobuf::uint32 discount_num_limit_;
  ::google::protobuf::uint32 resin_cost_;
  ::google::protobuf::uint32 original_resin_cost_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class BossChestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BossChestInfo) */ {
 public:
  BossChestInfo();
  virtual ~BossChestInfo();

  BossChestInfo(const BossChestInfo& from);

  inline BossChestInfo& operator=(const BossChestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BossChestInfo(BossChestInfo&& from) noexcept
    : BossChestInfo() {
    *this = ::std::move(from);
  }

  inline BossChestInfo& operator=(BossChestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BossChestInfo& default_instance();

  static inline const BossChestInfo* internal_default_instance() {
    return reinterpret_cast<const BossChestInfo*>(
               &_BossChestInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(BossChestInfo* other);
  friend void swap(BossChestInfo& a, BossChestInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BossChestInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BossChestInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BossChestInfo& from);
  void MergeFrom(const BossChestInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BossChestInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 remain_uid_list = 3;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 3;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // repeated uint32 qualify_uid_list = 4;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 4;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // map<uint32, .proto.WeeklyBossResinDiscountInfo> uid_discount_map = 5;
  int uid_discount_map_size() const;
  void clear_uid_discount_map();
  static const int kUidDiscountMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::WeeklyBossResinDiscountInfo >&
      uid_discount_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::WeeklyBossResinDiscountInfo >*
      mutable_uid_discount_map();

  // uint32 monster_config_id = 1;
  void clear_monster_config_id();
  static const int kMonsterConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_config_id() const;
  void set_monster_config_id(::google::protobuf::uint32 value);

  // uint32 resin = 2;
  void clear_resin();
  static const int kResinFieldNumber = 2;
  ::google::protobuf::uint32 resin() const;
  void set_resin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BossChestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  public:
  class BossChestInfo_UidDiscountMapEntry : public ::google::protobuf::internal::MapEntry<BossChestInfo_UidDiscountMapEntry, 
      ::google::protobuf::uint32, ::proto::WeeklyBossResinDiscountInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<BossChestInfo_UidDiscountMapEntry, 
      ::google::protobuf::uint32, ::proto::WeeklyBossResinDiscountInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    BossChestInfo_UidDiscountMapEntry();
    BossChestInfo_UidDiscountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const BossChestInfo_UidDiscountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_BossChestInfo_UidDiscountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      BossChestInfo_UidDiscountMapEntry,
      ::google::protobuf::uint32, ::proto::WeeklyBossResinDiscountInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > uid_discount_map_;
  private:
  ::google::protobuf::uint32 monster_config_id_;
  ::google::protobuf::uint32 resin_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlossomChestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlossomChestInfo) */ {
 public:
  BlossomChestInfo();
  virtual ~BlossomChestInfo();

  BlossomChestInfo(const BlossomChestInfo& from);

  inline BlossomChestInfo& operator=(const BlossomChestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlossomChestInfo(BlossomChestInfo&& from) noexcept
    : BlossomChestInfo() {
    *this = ::std::move(from);
  }

  inline BlossomChestInfo& operator=(BlossomChestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlossomChestInfo& default_instance();

  static inline const BlossomChestInfo* internal_default_instance() {
    return reinterpret_cast<const BlossomChestInfo*>(
               &_BlossomChestInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(BlossomChestInfo* other);
  friend void swap(BlossomChestInfo& a, BlossomChestInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlossomChestInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BlossomChestInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlossomChestInfo& from);
  void MergeFrom(const BlossomChestInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlossomChestInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 qualify_uid_list = 2;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 2;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // repeated uint32 remain_uid_list = 3;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 3;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // uint32 resin = 1;
  void clear_resin();
  static const int kResinFieldNumber = 1;
  ::google::protobuf::uint32 resin() const;
  void set_resin(::google::protobuf::uint32 value);

  // uint32 dead_time = 4;
  void clear_dead_time();
  static const int kDeadTimeFieldNumber = 4;
  ::google::protobuf::uint32 dead_time() const;
  void set_dead_time(::google::protobuf::uint32 value);

  // uint32 blossom_refresh_type = 5;
  void clear_blossom_refresh_type();
  static const int kBlossomRefreshTypeFieldNumber = 5;
  ::google::protobuf::uint32 blossom_refresh_type() const;
  void set_blossom_refresh_type(::google::protobuf::uint32 value);

  // uint32 refresh_id = 6;
  void clear_refresh_id();
  static const int kRefreshIdFieldNumber = 6;
  ::google::protobuf::uint32 refresh_id() const;
  void set_refresh_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BlossomChestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 resin_;
  ::google::protobuf::uint32 dead_time_;
  ::google::protobuf::uint32 blossom_refresh_type_;
  ::google::protobuf::uint32 refresh_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetCrucibleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetCrucibleInfo) */ {
 public:
  GadgetCrucibleInfo();
  virtual ~GadgetCrucibleInfo();

  GadgetCrucibleInfo(const GadgetCrucibleInfo& from);

  inline GadgetCrucibleInfo& operator=(const GadgetCrucibleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetCrucibleInfo(GadgetCrucibleInfo&& from) noexcept
    : GadgetCrucibleInfo() {
    *this = ::std::move(from);
  }

  inline GadgetCrucibleInfo& operator=(GadgetCrucibleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetCrucibleInfo& default_instance();

  static inline const GadgetCrucibleInfo* internal_default_instance() {
    return reinterpret_cast<const GadgetCrucibleInfo*>(
               &_GadgetCrucibleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(GadgetCrucibleInfo* other);
  friend void swap(GadgetCrucibleInfo& a, GadgetCrucibleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetCrucibleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetCrucibleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetCrucibleInfo& from);
  void MergeFrom(const GadgetCrucibleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetCrucibleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 mp_play_id = 1;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 1;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // uint32 prepare_end_time = 2;
  void clear_prepare_end_time();
  static const int kPrepareEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 prepare_end_time() const;
  void set_prepare_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetCrucibleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mp_play_id_;
  ::google::protobuf::uint32 prepare_end_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetPlayInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetPlayInfo) */ {
 public:
  GadgetPlayInfo();
  virtual ~GadgetPlayInfo();

  GadgetPlayInfo(const GadgetPlayInfo& from);

  inline GadgetPlayInfo& operator=(const GadgetPlayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetPlayInfo(GadgetPlayInfo&& from) noexcept
    : GadgetPlayInfo() {
    *this = ::std::move(from);
  }

  inline GadgetPlayInfo& operator=(GadgetPlayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetPlayInfo& default_instance();

  enum PlayInfoCase {
    kCrucibleInfo = 21,
    PLAY_INFO_NOT_SET = 0,
  };

  static inline const GadgetPlayInfo* internal_default_instance() {
    return reinterpret_cast<const GadgetPlayInfo*>(
               &_GadgetPlayInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(GadgetPlayInfo* other);
  friend void swap(GadgetPlayInfo& a, GadgetPlayInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetPlayInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetPlayInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetPlayInfo& from);
  void MergeFrom(const GadgetPlayInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetPlayInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 progress_stage_list = 3;
  int progress_stage_list_size() const;
  void clear_progress_stage_list();
  static const int kProgressStageListFieldNumber = 3;
  ::google::protobuf::uint32 progress_stage_list(int index) const;
  void set_progress_stage_list(int index, ::google::protobuf::uint32 value);
  void add_progress_stage_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      progress_stage_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_progress_stage_list();

  // uint32 play_type = 1;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 1;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // uint32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // uint32 start_cd = 4;
  void clear_start_cd();
  static const int kStartCdFieldNumber = 4;
  ::google::protobuf::uint32 start_cd() const;
  void set_start_cd(::google::protobuf::uint32 value);

  // uint32 start_time = 5;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // uint32 progress = 6;
  void clear_progress();
  static const int kProgressFieldNumber = 6;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // .proto.GadgetCrucibleInfo crucible_info = 21;
  bool has_crucible_info() const;
  void clear_crucible_info();
  static const int kCrucibleInfoFieldNumber = 21;
  const ::proto::GadgetCrucibleInfo& crucible_info() const;
  ::proto::GadgetCrucibleInfo* mutable_crucible_info();
  ::proto::GadgetCrucibleInfo* release_crucible_info();
  void set_allocated_crucible_info(::proto::GadgetCrucibleInfo* crucible_info);

  PlayInfoCase play_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.GadgetPlayInfo)
 private:
  void set_has_crucible_info();

  inline bool has_play_info() const;
  void clear_play_info();
  inline void clear_has_play_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > progress_stage_list_;
  mutable int _progress_stage_list_cached_byte_size_;
  ::google::protobuf::uint32 play_type_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 start_cd_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 progress_;
  union PlayInfoUnion {
    PlayInfoUnion() {}
    ::proto::GadgetCrucibleInfo* crucible_info_;
  } play_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MpPlayRewardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MpPlayRewardInfo) */ {
 public:
  MpPlayRewardInfo();
  virtual ~MpPlayRewardInfo();

  MpPlayRewardInfo(const MpPlayRewardInfo& from);

  inline MpPlayRewardInfo& operator=(const MpPlayRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MpPlayRewardInfo(MpPlayRewardInfo&& from) noexcept
    : MpPlayRewardInfo() {
    *this = ::std::move(from);
  }

  inline MpPlayRewardInfo& operator=(MpPlayRewardInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MpPlayRewardInfo& default_instance();

  static inline const MpPlayRewardInfo* internal_default_instance() {
    return reinterpret_cast<const MpPlayRewardInfo*>(
               &_MpPlayRewardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(MpPlayRewardInfo* other);
  friend void swap(MpPlayRewardInfo& a, MpPlayRewardInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MpPlayRewardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MpPlayRewardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MpPlayRewardInfo& from);
  void MergeFrom(const MpPlayRewardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MpPlayRewardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 remain_uid_list = 2;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 2;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // repeated uint32 qualify_uid_list = 3;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 3;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // uint32 resin = 1;
  void clear_resin();
  static const int kResinFieldNumber = 1;
  ::google::protobuf::uint32 resin() const;
  void set_resin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MpPlayRewardInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 resin_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetGeneralRewardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetGeneralRewardInfo) */ {
 public:
  GadgetGeneralRewardInfo();
  virtual ~GadgetGeneralRewardInfo();

  GadgetGeneralRewardInfo(const GadgetGeneralRewardInfo& from);

  inline GadgetGeneralRewardInfo& operator=(const GadgetGeneralRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetGeneralRewardInfo(GadgetGeneralRewardInfo&& from) noexcept
    : GadgetGeneralRewardInfo() {
    *this = ::std::move(from);
  }

  inline GadgetGeneralRewardInfo& operator=(GadgetGeneralRewardInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetGeneralRewardInfo& default_instance();

  static inline const GadgetGeneralRewardInfo* internal_default_instance() {
    return reinterpret_cast<const GadgetGeneralRewardInfo*>(
               &_GadgetGeneralRewardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(GadgetGeneralRewardInfo* other);
  friend void swap(GadgetGeneralRewardInfo& a, GadgetGeneralRewardInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetGeneralRewardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetGeneralRewardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetGeneralRewardInfo& from);
  void MergeFrom(const GadgetGeneralRewardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetGeneralRewardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 remain_uid_list = 3;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 3;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // repeated uint32 qualify_uid_list = 4;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 4;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // .proto.ItemParam item_param = 5;
  bool has_item_param() const;
  void clear_item_param();
  static const int kItemParamFieldNumber = 5;
  const ::proto::ItemParam& item_param() const;
  ::proto::ItemParam* mutable_item_param();
  ::proto::ItemParam* release_item_param();
  void set_allocated_item_param(::proto::ItemParam* item_param);

  // uint32 resin = 1;
  void clear_resin();
  static const int kResinFieldNumber = 1;
  ::google::protobuf::uint32 resin() const;
  void set_resin(::google::protobuf::uint32 value);

  // uint32 dead_time = 2;
  void clear_dead_time();
  static const int kDeadTimeFieldNumber = 2;
  ::google::protobuf::uint32 dead_time() const;
  void set_dead_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetGeneralRewardInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::proto::ItemParam* item_param_;
  ::google::protobuf::uint32 resin_;
  ::google::protobuf::uint32 dead_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfferingInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfferingInfo) */ {
 public:
  OfferingInfo();
  virtual ~OfferingInfo();

  OfferingInfo(const OfferingInfo& from);

  inline OfferingInfo& operator=(const OfferingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfferingInfo(OfferingInfo&& from) noexcept
    : OfferingInfo() {
    *this = ::std::move(from);
  }

  inline OfferingInfo& operator=(OfferingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferingInfo& default_instance();

  static inline const OfferingInfo* internal_default_instance() {
    return reinterpret_cast<const OfferingInfo*>(
               &_OfferingInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(OfferingInfo* other);
  friend void swap(OfferingInfo& a, OfferingInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfferingInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  OfferingInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfferingInfo& from);
  void MergeFrom(const OfferingInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfferingInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 offering_id = 1;
  void clear_offering_id();
  static const int kOfferingIdFieldNumber = 1;
  ::google::protobuf::uint32 offering_id() const;
  void set_offering_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfferingInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 offering_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BuildingInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BuildingInfo) */ {
 public:
  BuildingInfo();
  virtual ~BuildingInfo();

  BuildingInfo(const BuildingInfo& from);

  inline BuildingInfo& operator=(const BuildingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuildingInfo(BuildingInfo&& from) noexcept
    : BuildingInfo() {
    *this = ::std::move(from);
  }

  inline BuildingInfo& operator=(BuildingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingInfo& default_instance();

  static inline const BuildingInfo* internal_default_instance() {
    return reinterpret_cast<const BuildingInfo*>(
               &_BuildingInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(BuildingInfo* other);
  friend void swap(BuildingInfo& a, BuildingInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuildingInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BuildingInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuildingInfo& from);
  void MergeFrom(const BuildingInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuildingInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 building_id = 1;
  void clear_building_id();
  static const int kBuildingIdFieldNumber = 1;
  ::google::protobuf::uint32 building_id() const;
  void set_building_id(::google::protobuf::uint32 value);

  // uint32 point_config_id = 2;
  void clear_point_config_id();
  static const int kPointConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 point_config_id() const;
  void set_point_config_id(::google::protobuf::uint32 value);

  // uint32 cost = 3;
  void clear_cost();
  static const int kCostFieldNumber = 3;
  ::google::protobuf::uint32 cost() const;
  void set_cost(::google::protobuf::uint32 value);

  // uint32 refund = 5;
  void clear_refund();
  static const int kRefundFieldNumber = 5;
  ::google::protobuf::uint32 refund() const;
  void set_refund(::google::protobuf::uint32 value);

  // uint32 owner_uid = 6;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 6;
  ::google::protobuf::uint32 owner_uid() const;
  void set_owner_uid(::google::protobuf::uint32 value);

  // uint32 current_num = 7;
  void clear_current_num();
  static const int kCurrentNumFieldNumber = 7;
  ::google::protobuf::uint32 current_num() const;
  void set_current_num(::google::protobuf::uint32 value);

  // uint32 max_num = 8;
  void clear_max_num();
  static const int kMaxNumFieldNumber = 8;
  ::google::protobuf::uint32 max_num() const;
  void set_max_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BuildingInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 building_id_;
  ::google::protobuf::uint32 point_config_id_;
  ::google::protobuf::uint32 cost_;
  ::google::protobuf::uint32 refund_;
  ::google::protobuf::uint32 owner_uid_;
  ::google::protobuf::uint32 current_num_;
  ::google::protobuf::uint32 max_num_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FoundationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FoundationInfo) */ {
 public:
  FoundationInfo();
  virtual ~FoundationInfo();

  FoundationInfo(const FoundationInfo& from);

  inline FoundationInfo& operator=(const FoundationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FoundationInfo(FoundationInfo&& from) noexcept
    : FoundationInfo() {
    *this = ::std::move(from);
  }

  inline FoundationInfo& operator=(FoundationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FoundationInfo& default_instance();

  static inline const FoundationInfo* internal_default_instance() {
    return reinterpret_cast<const FoundationInfo*>(
               &_FoundationInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(FoundationInfo* other);
  friend void swap(FoundationInfo& a, FoundationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FoundationInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FoundationInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FoundationInfo& from);
  void MergeFrom(const FoundationInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FoundationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 2;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 2;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // .proto.FoundationStatus status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::proto::FoundationStatus status() const;
  void set_status(::proto::FoundationStatus value);

  // uint32 current_building_id = 3;
  void clear_current_building_id();
  static const int kCurrentBuildingIdFieldNumber = 3;
  ::google::protobuf::uint32 current_building_id() const;
  void set_current_building_id(::google::protobuf::uint32 value);

  // uint32 locked_by_uid = 4;
  void clear_locked_by_uid();
  static const int kLockedByUidFieldNumber = 4;
  ::google::protobuf::uint32 locked_by_uid() const;
  void set_locked_by_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FoundationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  int status_;
  ::google::protobuf::uint32 current_building_id_;
  ::google::protobuf::uint32 locked_by_uid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VehicleMember) */ {
 public:
  VehicleMember();
  virtual ~VehicleMember();

  VehicleMember(const VehicleMember& from);

  inline VehicleMember& operator=(const VehicleMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleMember(VehicleMember&& from) noexcept
    : VehicleMember() {
    *this = ::std::move(from);
  }

  inline VehicleMember& operator=(VehicleMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleMember& default_instance();

  static inline const VehicleMember* internal_default_instance() {
    return reinterpret_cast<const VehicleMember*>(
               &_VehicleMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(VehicleMember* other);
  friend void swap(VehicleMember& a, VehicleMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleMember* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleMember& from);
  void MergeFrom(const VehicleMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 avatar_guid = 2;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 2;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 pos = 3;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.VehicleMember)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 pos_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VehicleInfo) */ {
 public:
  VehicleInfo();
  virtual ~VehicleInfo();

  VehicleInfo(const VehicleInfo& from);

  inline VehicleInfo& operator=(const VehicleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleInfo(VehicleInfo&& from) noexcept
    : VehicleInfo() {
    *this = ::std::move(from);
  }

  inline VehicleInfo& operator=(VehicleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInfo& default_instance();

  static inline const VehicleInfo* internal_default_instance() {
    return reinterpret_cast<const VehicleInfo*>(
               &_VehicleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(VehicleInfo* other);
  friend void swap(VehicleInfo& a, VehicleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleInfo& from);
  void MergeFrom(const VehicleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.VehicleMember member_list = 1;
  int member_list_size() const;
  void clear_member_list();
  static const int kMemberListFieldNumber = 1;
  const ::proto::VehicleMember& member_list(int index) const;
  ::proto::VehicleMember* mutable_member_list(int index);
  ::proto::VehicleMember* add_member_list();
  ::google::protobuf::RepeatedPtrField< ::proto::VehicleMember >*
      mutable_member_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::VehicleMember >&
      member_list() const;

  // uint32 owner_uid = 2;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 2;
  ::google::protobuf::uint32 owner_uid() const;
  void set_owner_uid(::google::protobuf::uint32 value);

  // float cur_stamina = 3;
  void clear_cur_stamina();
  static const int kCurStaminaFieldNumber = 3;
  float cur_stamina() const;
  void set_cur_stamina(float value);

  // @@protoc_insertion_point(class_scope:proto.VehicleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::VehicleMember > member_list_;
  ::google::protobuf::uint32 owner_uid_;
  float cur_stamina_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EchoShellInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EchoShellInfo) */ {
 public:
  EchoShellInfo();
  virtual ~EchoShellInfo();

  EchoShellInfo(const EchoShellInfo& from);

  inline EchoShellInfo& operator=(const EchoShellInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EchoShellInfo(EchoShellInfo&& from) noexcept
    : EchoShellInfo() {
    *this = ::std::move(from);
  }

  inline EchoShellInfo& operator=(EchoShellInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoShellInfo& default_instance();

  static inline const EchoShellInfo* internal_default_instance() {
    return reinterpret_cast<const EchoShellInfo*>(
               &_EchoShellInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(EchoShellInfo* other);
  friend void swap(EchoShellInfo& a, EchoShellInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EchoShellInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EchoShellInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EchoShellInfo& from);
  void MergeFrom(const EchoShellInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EchoShellInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 shell_id = 1;
  void clear_shell_id();
  static const int kShellIdFieldNumber = 1;
  ::google::protobuf::uint32 shell_id() const;
  void set_shell_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EchoShellInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 shell_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScreenInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScreenInfo) */ {
 public:
  ScreenInfo();
  virtual ~ScreenInfo();

  ScreenInfo(const ScreenInfo& from);

  inline ScreenInfo& operator=(const ScreenInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScreenInfo(ScreenInfo&& from) noexcept
    : ScreenInfo() {
    *this = ::std::move(from);
  }

  inline ScreenInfo& operator=(ScreenInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScreenInfo& default_instance();

  static inline const ScreenInfo* internal_default_instance() {
    return reinterpret_cast<const ScreenInfo*>(
               &_ScreenInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(ScreenInfo* other);
  friend void swap(ScreenInfo& a, ScreenInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScreenInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ScreenInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScreenInfo& from);
  void MergeFrom(const ScreenInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScreenInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 live_id = 1;
  void clear_live_id();
  static const int kLiveIdFieldNumber = 1;
  ::google::protobuf::uint32 live_id() const;
  void set_live_id(::google::protobuf::uint32 value);

  // uint32 projector_entity_id = 2;
  void clear_projector_entity_id();
  static const int kProjectorEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 projector_entity_id() const;
  void set_projector_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScreenInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 live_id_;
  ::google::protobuf::uint32 projector_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FishPoolInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FishPoolInfo) */ {
 public:
  FishPoolInfo();
  virtual ~FishPoolInfo();

  FishPoolInfo(const FishPoolInfo& from);

  inline FishPoolInfo& operator=(const FishPoolInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FishPoolInfo(FishPoolInfo&& from) noexcept
    : FishPoolInfo() {
    *this = ::std::move(from);
  }

  inline FishPoolInfo& operator=(FishPoolInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FishPoolInfo& default_instance();

  static inline const FishPoolInfo* internal_default_instance() {
    return reinterpret_cast<const FishPoolInfo*>(
               &_FishPoolInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(FishPoolInfo* other);
  friend void swap(FishPoolInfo& a, FishPoolInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FishPoolInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FishPoolInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FishPoolInfo& from);
  void MergeFrom(const FishPoolInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FishPoolInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 fish_area_list = 2;
  int fish_area_list_size() const;
  void clear_fish_area_list();
  static const int kFishAreaListFieldNumber = 2;
  ::google::protobuf::uint32 fish_area_list(int index) const;
  void set_fish_area_list(int index, ::google::protobuf::uint32 value);
  void add_fish_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fish_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fish_area_list();

  // uint32 pool_id = 1;
  void clear_pool_id();
  static const int kPoolIdFieldNumber = 1;
  ::google::protobuf::uint32 pool_id() const;
  void set_pool_id(::google::protobuf::uint32 value);

  // uint32 today_fish_num = 3;
  void clear_today_fish_num();
  static const int kTodayFishNumFieldNumber = 3;
  ::google::protobuf::uint32 today_fish_num() const;
  void set_today_fish_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FishPoolInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fish_area_list_;
  mutable int _fish_area_list_cached_byte_size_;
  ::google::protobuf::uint32 pool_id_;
  ::google::protobuf::uint32 today_fish_num_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomCommonNodeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomCommonNodeInfo) */ {
 public:
  CustomCommonNodeInfo();
  virtual ~CustomCommonNodeInfo();

  CustomCommonNodeInfo(const CustomCommonNodeInfo& from);

  inline CustomCommonNodeInfo& operator=(const CustomCommonNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomCommonNodeInfo(CustomCommonNodeInfo&& from) noexcept
    : CustomCommonNodeInfo() {
    *this = ::std::move(from);
  }

  inline CustomCommonNodeInfo& operator=(CustomCommonNodeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomCommonNodeInfo& default_instance();

  static inline const CustomCommonNodeInfo* internal_default_instance() {
    return reinterpret_cast<const CustomCommonNodeInfo*>(
               &_CustomCommonNodeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(CustomCommonNodeInfo* other);
  friend void swap(CustomCommonNodeInfo& a, CustomCommonNodeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomCommonNodeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomCommonNodeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomCommonNodeInfo& from);
  void MergeFrom(const CustomCommonNodeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomCommonNodeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string slot_identifier = 3;
  void clear_slot_identifier();
  static const int kSlotIdentifierFieldNumber = 3;
  const ::std::string& slot_identifier() const;
  void set_slot_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_slot_identifier(::std::string&& value);
  #endif
  void set_slot_identifier(const char* value);
  void set_slot_identifier(const char* value, size_t size);
  ::std::string* mutable_slot_identifier();
  ::std::string* release_slot_identifier();
  void set_allocated_slot_identifier(::std::string* slot_identifier);

  // int32 parent_index = 1;
  void clear_parent_index();
  static const int kParentIndexFieldNumber = 1;
  ::google::protobuf::int32 parent_index() const;
  void set_parent_index(::google::protobuf::int32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomCommonNodeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr slot_identifier_;
  ::google::protobuf::int32 parent_index_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomGadgetTreeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomGadgetTreeInfo) */ {
 public:
  CustomGadgetTreeInfo();
  virtual ~CustomGadgetTreeInfo();

  CustomGadgetTreeInfo(const CustomGadgetTreeInfo& from);

  inline CustomGadgetTreeInfo& operator=(const CustomGadgetTreeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomGadgetTreeInfo(CustomGadgetTreeInfo&& from) noexcept
    : CustomGadgetTreeInfo() {
    *this = ::std::move(from);
  }

  inline CustomGadgetTreeInfo& operator=(CustomGadgetTreeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomGadgetTreeInfo& default_instance();

  static inline const CustomGadgetTreeInfo* internal_default_instance() {
    return reinterpret_cast<const CustomGadgetTreeInfo*>(
               &_CustomGadgetTreeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(CustomGadgetTreeInfo* other);
  friend void swap(CustomGadgetTreeInfo& a, CustomGadgetTreeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomGadgetTreeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomGadgetTreeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomGadgetTreeInfo& from);
  void MergeFrom(const CustomGadgetTreeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomGadgetTreeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CustomCommonNodeInfo node_list = 1;
  int node_list_size() const;
  void clear_node_list();
  static const int kNodeListFieldNumber = 1;
  const ::proto::CustomCommonNodeInfo& node_list(int index) const;
  ::proto::CustomCommonNodeInfo* mutable_node_list(int index);
  ::proto::CustomCommonNodeInfo* add_node_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CustomCommonNodeInfo >*
      mutable_node_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CustomCommonNodeInfo >&
      node_list() const;

  // @@protoc_insertion_point(class_scope:proto.CustomGadgetTreeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CustomCommonNodeInfo > node_list_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoguelikeGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RoguelikeGadgetInfo) */ {
 public:
  RoguelikeGadgetInfo();
  virtual ~RoguelikeGadgetInfo();

  RoguelikeGadgetInfo(const RoguelikeGadgetInfo& from);

  inline RoguelikeGadgetInfo& operator=(const RoguelikeGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoguelikeGadgetInfo(RoguelikeGadgetInfo&& from) noexcept
    : RoguelikeGadgetInfo() {
    *this = ::std::move(from);
  }

  inline RoguelikeGadgetInfo& operator=(RoguelikeGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoguelikeGadgetInfo& default_instance();

  static inline const RoguelikeGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const RoguelikeGadgetInfo*>(
               &_RoguelikeGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(RoguelikeGadgetInfo* other);
  friend void swap(RoguelikeGadgetInfo& a, RoguelikeGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoguelikeGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoguelikeGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoguelikeGadgetInfo& from);
  void MergeFrom(const RoguelikeGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoguelikeGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cell_config_id = 1;
  void clear_cell_config_id();
  static const int kCellConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 cell_config_id() const;
  void set_cell_config_id(::google::protobuf::uint32 value);

  // uint32 cell_type = 2;
  void clear_cell_type();
  static const int kCellTypeFieldNumber = 2;
  ::google::protobuf::uint32 cell_type() const;
  void set_cell_type(::google::protobuf::uint32 value);

  // uint32 cell_state = 3;
  void clear_cell_state();
  static const int kCellStateFieldNumber = 3;
  ::google::protobuf::uint32 cell_state() const;
  void set_cell_state(::google::protobuf::uint32 value);

  // uint32 cell_id = 4;
  void clear_cell_id();
  static const int kCellIdFieldNumber = 4;
  ::google::protobuf::uint32 cell_id() const;
  void set_cell_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RoguelikeGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cell_config_id_;
  ::google::protobuf::uint32 cell_type_;
  ::google::protobuf::uint32 cell_state_;
  ::google::protobuf::uint32 cell_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NightCrowGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NightCrowGadgetInfo) */ {
 public:
  NightCrowGadgetInfo();
  virtual ~NightCrowGadgetInfo();

  NightCrowGadgetInfo(const NightCrowGadgetInfo& from);

  inline NightCrowGadgetInfo& operator=(const NightCrowGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NightCrowGadgetInfo(NightCrowGadgetInfo&& from) noexcept
    : NightCrowGadgetInfo() {
    *this = ::std::move(from);
  }

  inline NightCrowGadgetInfo& operator=(NightCrowGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NightCrowGadgetInfo& default_instance();

  static inline const NightCrowGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const NightCrowGadgetInfo*>(
               &_NightCrowGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(NightCrowGadgetInfo* other);
  friend void swap(NightCrowGadgetInfo& a, NightCrowGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NightCrowGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  NightCrowGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NightCrowGadgetInfo& from);
  void MergeFrom(const NightCrowGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NightCrowGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 argument_list = 1;
  int argument_list_size() const;
  void clear_argument_list();
  static const int kArgumentListFieldNumber = 1;
  ::google::protobuf::uint32 argument_list(int index) const;
  void set_argument_list(int index, ::google::protobuf::uint32 value);
  void add_argument_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      argument_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_argument_list();

  // @@protoc_insertion_point(class_scope:proto.NightCrowGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > argument_list_;
  mutable int _argument_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeshretObeliskGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeshretObeliskGadgetInfo) */ {
 public:
  DeshretObeliskGadgetInfo();
  virtual ~DeshretObeliskGadgetInfo();

  DeshretObeliskGadgetInfo(const DeshretObeliskGadgetInfo& from);

  inline DeshretObeliskGadgetInfo& operator=(const DeshretObeliskGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeshretObeliskGadgetInfo(DeshretObeliskGadgetInfo&& from) noexcept
    : DeshretObeliskGadgetInfo() {
    *this = ::std::move(from);
  }

  inline DeshretObeliskGadgetInfo& operator=(DeshretObeliskGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeshretObeliskGadgetInfo& default_instance();

  static inline const DeshretObeliskGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const DeshretObeliskGadgetInfo*>(
               &_DeshretObeliskGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(DeshretObeliskGadgetInfo* other);
  friend void swap(DeshretObeliskGadgetInfo& a, DeshretObeliskGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeshretObeliskGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DeshretObeliskGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeshretObeliskGadgetInfo& from);
  void MergeFrom(const DeshretObeliskGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeshretObeliskGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 argument_list = 1;
  int argument_list_size() const;
  void clear_argument_list();
  static const int kArgumentListFieldNumber = 1;
  ::google::protobuf::uint32 argument_list(int index) const;
  void set_argument_list(int index, ::google::protobuf::uint32 value);
  void add_argument_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      argument_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_argument_list();

  // @@protoc_insertion_point(class_scope:proto.DeshretObeliskGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > argument_list_;
  mutable int _argument_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoinCollectOperatorInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoinCollectOperatorInfo) */ {
 public:
  CoinCollectOperatorInfo();
  virtual ~CoinCollectOperatorInfo();

  CoinCollectOperatorInfo(const CoinCollectOperatorInfo& from);

  inline CoinCollectOperatorInfo& operator=(const CoinCollectOperatorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoinCollectOperatorInfo(CoinCollectOperatorInfo&& from) noexcept
    : CoinCollectOperatorInfo() {
    *this = ::std::move(from);
  }

  inline CoinCollectOperatorInfo& operator=(CoinCollectOperatorInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinCollectOperatorInfo& default_instance();

  static inline const CoinCollectOperatorInfo* internal_default_instance() {
    return reinterpret_cast<const CoinCollectOperatorInfo*>(
               &_CoinCollectOperatorInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(CoinCollectOperatorInfo* other);
  friend void swap(CoinCollectOperatorInfo& a, CoinCollectOperatorInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoinCollectOperatorInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CoinCollectOperatorInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoinCollectOperatorInfo& from);
  void MergeFrom(const CoinCollectOperatorInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoinCollectOperatorInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 level_id = 1;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 1;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CoinCollectOperatorInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGadgetInfo) */ {
 public:
  SceneGadgetInfo();
  virtual ~SceneGadgetInfo();

  SceneGadgetInfo(const SceneGadgetInfo& from);

  inline SceneGadgetInfo& operator=(const SceneGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGadgetInfo(SceneGadgetInfo&& from) noexcept
    : SceneGadgetInfo() {
    *this = ::std::move(from);
  }

  inline SceneGadgetInfo& operator=(SceneGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGadgetInfo& default_instance();

  enum ContentCase {
    kTrifleItem = 12,
    kGatherGadget = 13,
    kWorktop = 14,
    kClientGadget = 15,
    kWeather = 17,
    kAbilityGadget = 18,
    kStatueGadget = 19,
    kBossChest = 20,
    kBlossomChest = 41,
    kMpPlayReward = 42,
    kGeneralReward = 43,
    kOfferingInfo = 44,
    kFoundationInfo = 45,
    kVehicleInfo = 46,
    kShellInfo = 47,
    kScreenInfo = 48,
    kFishPoolInfo = 59,
    kCustomGadgetTreeInfo = 60,
    kRoguelikeGadgetInfo = 61,
    kNightCrowGadgetInfo = 62,
    kDeshretObeliskGadgetInfo = 63,
    kCoinCollectOperatorInfo = 64,
    CONTENT_NOT_SET = 0,
  };

  static inline const SceneGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGadgetInfo*>(
               &_SceneGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(SceneGadgetInfo* other);
  friend void swap(SceneGadgetInfo& a, SceneGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGadgetInfo& from);
  void MergeFrom(const SceneGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 interact_uid_list = 24;
  int interact_uid_list_size() const;
  void clear_interact_uid_list();
  static const int kInteractUidListFieldNumber = 24;
  ::google::protobuf::uint32 interact_uid_list(int index) const;
  void set_interact_uid_list(int index, ::google::protobuf::uint32 value);
  void add_interact_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      interact_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_interact_uid_list();

  // .proto.PlatformInfo platform = 23;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 23;
  const ::proto::PlatformInfo& platform() const;
  ::proto::PlatformInfo* mutable_platform();
  ::proto::PlatformInfo* release_platform();
  void set_allocated_platform(::proto::PlatformInfo* platform);

  // .proto.GadgetPlayInfo play_info = 100;
  bool has_play_info() const;
  void clear_play_info();
  static const int kPlayInfoFieldNumber = 100;
  const ::proto::GadgetPlayInfo& play_info() const;
  ::proto::GadgetPlayInfo* mutable_play_info();
  ::proto::GadgetPlayInfo* release_play_info();
  void set_allocated_play_info(::proto::GadgetPlayInfo* play_info);

  // uint32 gadget_id = 1;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 1;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // uint32 group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 owner_entity_id = 4;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // .proto.GadgetBornType born_type = 5;
  void clear_born_type();
  static const int kBornTypeFieldNumber = 5;
  ::proto::GadgetBornType born_type() const;
  void set_born_type(::proto::GadgetBornType value);

  // uint32 gadget_state = 6;
  void clear_gadget_state();
  static const int kGadgetStateFieldNumber = 6;
  ::google::protobuf::uint32 gadget_state() const;
  void set_gadget_state(::google::protobuf::uint32 value);

  // uint32 gadget_type = 7;
  void clear_gadget_type();
  static const int kGadgetTypeFieldNumber = 7;
  ::google::protobuf::uint32 gadget_type() const;
  void set_gadget_type(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 9;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 9;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // bool is_show_cutscene = 8;
  void clear_is_show_cutscene();
  static const int kIsShowCutsceneFieldNumber = 8;
  bool is_show_cutscene() const;
  void set_is_show_cutscene(bool value);

  // bool is_enable_interact = 10;
  void clear_is_enable_interact();
  static const int kIsEnableInteractFieldNumber = 10;
  bool is_enable_interact() const;
  void set_is_enable_interact(bool value);

  // uint32 interact_id = 11;
  void clear_interact_id();
  static const int kInteractIdFieldNumber = 11;
  ::google::protobuf::uint32 interact_id() const;
  void set_interact_id(::google::protobuf::uint32 value);

  // uint32 mark_flag = 21;
  void clear_mark_flag();
  static const int kMarkFlagFieldNumber = 21;
  ::google::protobuf::uint32 mark_flag() const;
  void set_mark_flag(::google::protobuf::uint32 value);

  // uint32 prop_owner_entity_id = 22;
  void clear_prop_owner_entity_id();
  static const int kPropOwnerEntityIdFieldNumber = 22;
  ::google::protobuf::uint32 prop_owner_entity_id() const;
  void set_prop_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 draft_id = 25;
  void clear_draft_id();
  static const int kDraftIdFieldNumber = 25;
  ::google::protobuf::uint32 draft_id() const;
  void set_draft_id(::google::protobuf::uint32 value);

  // uint32 gadget_talk_state = 26;
  void clear_gadget_talk_state();
  static const int kGadgetTalkStateFieldNumber = 26;
  ::google::protobuf::uint32 gadget_talk_state() const;
  void set_gadget_talk_state(::google::protobuf::uint32 value);

  // .proto.Item trifle_item = 12;
  bool has_trifle_item() const;
  void clear_trifle_item();
  static const int kTrifleItemFieldNumber = 12;
  const ::proto::Item& trifle_item() const;
  ::proto::Item* mutable_trifle_item();
  ::proto::Item* release_trifle_item();
  void set_allocated_trifle_item(::proto::Item* trifle_item);

  // .proto.GatherGadgetInfo gather_gadget = 13;
  bool has_gather_gadget() const;
  void clear_gather_gadget();
  static const int kGatherGadgetFieldNumber = 13;
  const ::proto::GatherGadgetInfo& gather_gadget() const;
  ::proto::GatherGadgetInfo* mutable_gather_gadget();
  ::proto::GatherGadgetInfo* release_gather_gadget();
  void set_allocated_gather_gadget(::proto::GatherGadgetInfo* gather_gadget);

  // .proto.WorktopInfo worktop = 14;
  bool has_worktop() const;
  void clear_worktop();
  static const int kWorktopFieldNumber = 14;
  const ::proto::WorktopInfo& worktop() const;
  ::proto::WorktopInfo* mutable_worktop();
  ::proto::WorktopInfo* release_worktop();
  void set_allocated_worktop(::proto::WorktopInfo* worktop);

  // .proto.ClientGadgetInfo client_gadget = 15;
  bool has_client_gadget() const;
  void clear_client_gadget();
  static const int kClientGadgetFieldNumber = 15;
  const ::proto::ClientGadgetInfo& client_gadget() const;
  ::proto::ClientGadgetInfo* mutable_client_gadget();
  ::proto::ClientGadgetInfo* release_client_gadget();
  void set_allocated_client_gadget(::proto::ClientGadgetInfo* client_gadget);

  // .proto.WeatherInfo weather = 17;
  bool has_weather() const;
  void clear_weather();
  static const int kWeatherFieldNumber = 17;
  const ::proto::WeatherInfo& weather() const;
  ::proto::WeatherInfo* mutable_weather();
  ::proto::WeatherInfo* release_weather();
  void set_allocated_weather(::proto::WeatherInfo* weather);

  // .proto.AbilityGadgetInfo ability_gadget = 18;
  bool has_ability_gadget() const;
  void clear_ability_gadget();
  static const int kAbilityGadgetFieldNumber = 18;
  const ::proto::AbilityGadgetInfo& ability_gadget() const;
  ::proto::AbilityGadgetInfo* mutable_ability_gadget();
  ::proto::AbilityGadgetInfo* release_ability_gadget();
  void set_allocated_ability_gadget(::proto::AbilityGadgetInfo* ability_gadget);

  // .proto.StatueGadgetInfo statue_gadget = 19;
  bool has_statue_gadget() const;
  void clear_statue_gadget();
  static const int kStatueGadgetFieldNumber = 19;
  const ::proto::StatueGadgetInfo& statue_gadget() const;
  ::proto::StatueGadgetInfo* mutable_statue_gadget();
  ::proto::StatueGadgetInfo* release_statue_gadget();
  void set_allocated_statue_gadget(::proto::StatueGadgetInfo* statue_gadget);

  // .proto.BossChestInfo boss_chest = 20;
  bool has_boss_chest() const;
  void clear_boss_chest();
  static const int kBossChestFieldNumber = 20;
  const ::proto::BossChestInfo& boss_chest() const;
  ::proto::BossChestInfo* mutable_boss_chest();
  ::proto::BossChestInfo* release_boss_chest();
  void set_allocated_boss_chest(::proto::BossChestInfo* boss_chest);

  // .proto.BlossomChestInfo blossom_chest = 41;
  bool has_blossom_chest() const;
  void clear_blossom_chest();
  static const int kBlossomChestFieldNumber = 41;
  const ::proto::BlossomChestInfo& blossom_chest() const;
  ::proto::BlossomChestInfo* mutable_blossom_chest();
  ::proto::BlossomChestInfo* release_blossom_chest();
  void set_allocated_blossom_chest(::proto::BlossomChestInfo* blossom_chest);

  // .proto.MpPlayRewardInfo mp_play_reward = 42;
  bool has_mp_play_reward() const;
  void clear_mp_play_reward();
  static const int kMpPlayRewardFieldNumber = 42;
  const ::proto::MpPlayRewardInfo& mp_play_reward() const;
  ::proto::MpPlayRewardInfo* mutable_mp_play_reward();
  ::proto::MpPlayRewardInfo* release_mp_play_reward();
  void set_allocated_mp_play_reward(::proto::MpPlayRewardInfo* mp_play_reward);

  // .proto.GadgetGeneralRewardInfo general_reward = 43;
  bool has_general_reward() const;
  void clear_general_reward();
  static const int kGeneralRewardFieldNumber = 43;
  const ::proto::GadgetGeneralRewardInfo& general_reward() const;
  ::proto::GadgetGeneralRewardInfo* mutable_general_reward();
  ::proto::GadgetGeneralRewardInfo* release_general_reward();
  void set_allocated_general_reward(::proto::GadgetGeneralRewardInfo* general_reward);

  // .proto.OfferingInfo offering_info = 44;
  bool has_offering_info() const;
  void clear_offering_info();
  static const int kOfferingInfoFieldNumber = 44;
  const ::proto::OfferingInfo& offering_info() const;
  ::proto::OfferingInfo* mutable_offering_info();
  ::proto::OfferingInfo* release_offering_info();
  void set_allocated_offering_info(::proto::OfferingInfo* offering_info);

  // .proto.FoundationInfo foundation_info = 45;
  bool has_foundation_info() const;
  void clear_foundation_info();
  static const int kFoundationInfoFieldNumber = 45;
  const ::proto::FoundationInfo& foundation_info() const;
  ::proto::FoundationInfo* mutable_foundation_info();
  ::proto::FoundationInfo* release_foundation_info();
  void set_allocated_foundation_info(::proto::FoundationInfo* foundation_info);

  // .proto.VehicleInfo vehicle_info = 46;
  bool has_vehicle_info() const;
  void clear_vehicle_info();
  static const int kVehicleInfoFieldNumber = 46;
  const ::proto::VehicleInfo& vehicle_info() const;
  ::proto::VehicleInfo* mutable_vehicle_info();
  ::proto::VehicleInfo* release_vehicle_info();
  void set_allocated_vehicle_info(::proto::VehicleInfo* vehicle_info);

  // .proto.EchoShellInfo shell_info = 47;
  bool has_shell_info() const;
  void clear_shell_info();
  static const int kShellInfoFieldNumber = 47;
  const ::proto::EchoShellInfo& shell_info() const;
  ::proto::EchoShellInfo* mutable_shell_info();
  ::proto::EchoShellInfo* release_shell_info();
  void set_allocated_shell_info(::proto::EchoShellInfo* shell_info);

  // .proto.ScreenInfo screen_info = 48;
  bool has_screen_info() const;
  void clear_screen_info();
  static const int kScreenInfoFieldNumber = 48;
  const ::proto::ScreenInfo& screen_info() const;
  ::proto::ScreenInfo* mutable_screen_info();
  ::proto::ScreenInfo* release_screen_info();
  void set_allocated_screen_info(::proto::ScreenInfo* screen_info);

  // .proto.FishPoolInfo fish_pool_info = 59;
  bool has_fish_pool_info() const;
  void clear_fish_pool_info();
  static const int kFishPoolInfoFieldNumber = 59;
  const ::proto::FishPoolInfo& fish_pool_info() const;
  ::proto::FishPoolInfo* mutable_fish_pool_info();
  ::proto::FishPoolInfo* release_fish_pool_info();
  void set_allocated_fish_pool_info(::proto::FishPoolInfo* fish_pool_info);

  // .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 60;
  bool has_custom_gadget_tree_info() const;
  void clear_custom_gadget_tree_info();
  static const int kCustomGadgetTreeInfoFieldNumber = 60;
  const ::proto::CustomGadgetTreeInfo& custom_gadget_tree_info() const;
  ::proto::CustomGadgetTreeInfo* mutable_custom_gadget_tree_info();
  ::proto::CustomGadgetTreeInfo* release_custom_gadget_tree_info();
  void set_allocated_custom_gadget_tree_info(::proto::CustomGadgetTreeInfo* custom_gadget_tree_info);

  // .proto.RoguelikeGadgetInfo roguelike_gadget_info = 61;
  bool has_roguelike_gadget_info() const;
  void clear_roguelike_gadget_info();
  static const int kRoguelikeGadgetInfoFieldNumber = 61;
  const ::proto::RoguelikeGadgetInfo& roguelike_gadget_info() const;
  ::proto::RoguelikeGadgetInfo* mutable_roguelike_gadget_info();
  ::proto::RoguelikeGadgetInfo* release_roguelike_gadget_info();
  void set_allocated_roguelike_gadget_info(::proto::RoguelikeGadgetInfo* roguelike_gadget_info);

  // .proto.NightCrowGadgetInfo night_crow_gadget_info = 62;
  bool has_night_crow_gadget_info() const;
  void clear_night_crow_gadget_info();
  static const int kNightCrowGadgetInfoFieldNumber = 62;
  const ::proto::NightCrowGadgetInfo& night_crow_gadget_info() const;
  ::proto::NightCrowGadgetInfo* mutable_night_crow_gadget_info();
  ::proto::NightCrowGadgetInfo* release_night_crow_gadget_info();
  void set_allocated_night_crow_gadget_info(::proto::NightCrowGadgetInfo* night_crow_gadget_info);

  // .proto.DeshretObeliskGadgetInfo deshret_obelisk_gadget_info = 63;
  bool has_deshret_obelisk_gadget_info() const;
  void clear_deshret_obelisk_gadget_info();
  static const int kDeshretObeliskGadgetInfoFieldNumber = 63;
  const ::proto::DeshretObeliskGadgetInfo& deshret_obelisk_gadget_info() const;
  ::proto::DeshretObeliskGadgetInfo* mutable_deshret_obelisk_gadget_info();
  ::proto::DeshretObeliskGadgetInfo* release_deshret_obelisk_gadget_info();
  void set_allocated_deshret_obelisk_gadget_info(::proto::DeshretObeliskGadgetInfo* deshret_obelisk_gadget_info);

  // .proto.CoinCollectOperatorInfo coin_collect_operator_info = 64;
  bool has_coin_collect_operator_info() const;
  void clear_coin_collect_operator_info();
  static const int kCoinCollectOperatorInfoFieldNumber = 64;
  const ::proto::CoinCollectOperatorInfo& coin_collect_operator_info() const;
  ::proto::CoinCollectOperatorInfo* mutable_coin_collect_operator_info();
  ::proto::CoinCollectOperatorInfo* release_coin_collect_operator_info();
  void set_allocated_coin_collect_operator_info(::proto::CoinCollectOperatorInfo* coin_collect_operator_info);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneGadgetInfo)
 private:
  void set_has_trifle_item();
  void set_has_gather_gadget();
  void set_has_worktop();
  void set_has_client_gadget();
  void set_has_weather();
  void set_has_ability_gadget();
  void set_has_statue_gadget();
  void set_has_boss_chest();
  void set_has_blossom_chest();
  void set_has_mp_play_reward();
  void set_has_general_reward();
  void set_has_offering_info();
  void set_has_foundation_info();
  void set_has_vehicle_info();
  void set_has_shell_info();
  void set_has_screen_info();
  void set_has_fish_pool_info();
  void set_has_custom_gadget_tree_info();
  void set_has_roguelike_gadget_info();
  void set_has_night_crow_gadget_info();
  void set_has_deshret_obelisk_gadget_info();
  void set_has_coin_collect_operator_info();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > interact_uid_list_;
  mutable int _interact_uid_list_cached_byte_size_;
  ::proto::PlatformInfo* platform_;
  ::proto::GadgetPlayInfo* play_info_;
  ::google::protobuf::uint32 gadget_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 owner_entity_id_;
  int born_type_;
  ::google::protobuf::uint32 gadget_state_;
  ::google::protobuf::uint32 gadget_type_;
  ::google::protobuf::uint32 authority_peer_id_;
  bool is_show_cutscene_;
  bool is_enable_interact_;
  ::google::protobuf::uint32 interact_id_;
  ::google::protobuf::uint32 mark_flag_;
  ::google::protobuf::uint32 prop_owner_entity_id_;
  ::google::protobuf::uint32 draft_id_;
  ::google::protobuf::uint32 gadget_talk_state_;
  union ContentUnion {
    ContentUnion() {}
    ::proto::Item* trifle_item_;
    ::proto::GatherGadgetInfo* gather_gadget_;
    ::proto::WorktopInfo* worktop_;
    ::proto::ClientGadgetInfo* client_gadget_;
    ::proto::WeatherInfo* weather_;
    ::proto::AbilityGadgetInfo* ability_gadget_;
    ::proto::StatueGadgetInfo* statue_gadget_;
    ::proto::BossChestInfo* boss_chest_;
    ::proto::BlossomChestInfo* blossom_chest_;
    ::proto::MpPlayRewardInfo* mp_play_reward_;
    ::proto::GadgetGeneralRewardInfo* general_reward_;
    ::proto::OfferingInfo* offering_info_;
    ::proto::FoundationInfo* foundation_info_;
    ::proto::VehicleInfo* vehicle_info_;
    ::proto::EchoShellInfo* shell_info_;
    ::proto::ScreenInfo* screen_info_;
    ::proto::FishPoolInfo* fish_pool_info_;
    ::proto::CustomGadgetTreeInfo* custom_gadget_tree_info_;
    ::proto::RoguelikeGadgetInfo* roguelike_gadget_info_;
    ::proto::NightCrowGadgetInfo* night_crow_gadget_info_;
    ::proto::DeshretObeliskGadgetInfo* deshret_obelisk_gadget_info_;
    ::proto::CoinCollectOperatorInfo* coin_collect_operator_info_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnimatorParameterValueInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AnimatorParameterValueInfo) */ {
 public:
  AnimatorParameterValueInfo();
  virtual ~AnimatorParameterValueInfo();

  AnimatorParameterValueInfo(const AnimatorParameterValueInfo& from);

  inline AnimatorParameterValueInfo& operator=(const AnimatorParameterValueInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnimatorParameterValueInfo(AnimatorParameterValueInfo&& from) noexcept
    : AnimatorParameterValueInfo() {
    *this = ::std::move(from);
  }

  inline AnimatorParameterValueInfo& operator=(AnimatorParameterValueInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnimatorParameterValueInfo& default_instance();

  enum ParaValCase {
    kIntVal = 2,
    kFloatVal = 3,
    kBoolVal = 4,
    PARAVAL_NOT_SET = 0,
  };

  static inline const AnimatorParameterValueInfo* internal_default_instance() {
    return reinterpret_cast<const AnimatorParameterValueInfo*>(
               &_AnimatorParameterValueInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(AnimatorParameterValueInfo* other);
  friend void swap(AnimatorParameterValueInfo& a, AnimatorParameterValueInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnimatorParameterValueInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AnimatorParameterValueInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnimatorParameterValueInfo& from);
  void MergeFrom(const AnimatorParameterValueInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnimatorParameterValueInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 para_type = 1;
  void clear_para_type();
  static const int kParaTypeFieldNumber = 1;
  ::google::protobuf::uint32 para_type() const;
  void set_para_type(::google::protobuf::uint32 value);

  // int32 int_val = 2;
  private:
  bool has_int_val() const;
  public:
  void clear_int_val();
  static const int kIntValFieldNumber = 2;
  ::google::protobuf::int32 int_val() const;
  void set_int_val(::google::protobuf::int32 value);

  // float float_val = 3;
  private:
  bool has_float_val() const;
  public:
  void clear_float_val();
  static const int kFloatValFieldNumber = 3;
  float float_val() const;
  void set_float_val(float value);

  // bool bool_val = 4;
  private:
  bool has_bool_val() const;
  public:
  void clear_bool_val();
  static const int kBoolValFieldNumber = 4;
  bool bool_val() const;
  void set_bool_val(bool value);

  ParaValCase paraVal_case() const;
  // @@protoc_insertion_point(class_scope:proto.AnimatorParameterValueInfo)
 private:
  void set_has_int_val();
  void set_has_float_val();
  void set_has_bool_val();

  inline bool has_paraVal() const;
  void clear_paraVal();
  inline void clear_has_paraVal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 para_type_;
  union ParaValUnion {
    ParaValUnion() {}
    ::google::protobuf::int32 int_val_;
    float float_val_;
    bool bool_val_;
  } paraVal_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServantInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServantInfo) */ {
 public:
  ServantInfo();
  virtual ~ServantInfo();

  ServantInfo(const ServantInfo& from);

  inline ServantInfo& operator=(const ServantInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServantInfo(ServantInfo&& from) noexcept
    : ServantInfo() {
    *this = ::std::move(from);
  }

  inline ServantInfo& operator=(ServantInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServantInfo& default_instance();

  static inline const ServantInfo* internal_default_instance() {
    return reinterpret_cast<const ServantInfo*>(
               &_ServantInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(ServantInfo* other);
  friend void swap(ServantInfo& a, ServantInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServantInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ServantInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServantInfo& from);
  void MergeFrom(const ServantInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServantInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 master_entity_id = 1;
  void clear_master_entity_id();
  static const int kMasterEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 master_entity_id() const;
  void set_master_entity_id(::google::protobuf::uint32 value);

  // uint32 born_slot_index = 2;
  void clear_born_slot_index();
  static const int kBornSlotIndexFieldNumber = 2;
  ::google::protobuf::uint32 born_slot_index() const;
  void set_born_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServantInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 master_entity_id_;
  ::google::protobuf::uint32 born_slot_index_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneEntityAiInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityAiInfo) */ {
 public:
  SceneEntityAiInfo();
  virtual ~SceneEntityAiInfo();

  SceneEntityAiInfo(const SceneEntityAiInfo& from);

  inline SceneEntityAiInfo& operator=(const SceneEntityAiInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityAiInfo(SceneEntityAiInfo&& from) noexcept
    : SceneEntityAiInfo() {
    *this = ::std::move(from);
  }

  inline SceneEntityAiInfo& operator=(SceneEntityAiInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityAiInfo& default_instance();

  static inline const SceneEntityAiInfo* internal_default_instance() {
    return reinterpret_cast<const SceneEntityAiInfo*>(
               &_SceneEntityAiInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(SceneEntityAiInfo* other);
  friend void swap(SceneEntityAiInfo& a, SceneEntityAiInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityAiInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityAiInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityAiInfo& from);
  void MergeFrom(const SceneEntityAiInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityAiInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> skill_cd_map = 3;
  int skill_cd_map_size() const;
  void clear_skill_cd_map();
  static const int kSkillCdMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_cd_map();

  // map<uint32, uint32> ai_threat_map = 5;
  int ai_threat_map_size() const;
  void clear_ai_threat_map();
  static const int kAiThreatMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      ai_threat_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_ai_threat_map();

  // map<uint32, uint32> skill_group_cd_map = 6;
  int skill_group_cd_map_size() const;
  void clear_skill_group_cd_map();
  static const int kSkillGroupCdMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_group_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_group_cd_map();

  // .proto.Vector born_pos = 2;
  bool has_born_pos() const;
  void clear_born_pos();
  static const int kBornPosFieldNumber = 2;
  const ::proto::Vector& born_pos() const;
  ::proto::Vector* mutable_born_pos();
  ::proto::Vector* release_born_pos();
  void set_allocated_born_pos(::proto::Vector* born_pos);

  // .proto.ServantInfo servant_info = 4;
  bool has_servant_info() const;
  void clear_servant_info();
  static const int kServantInfoFieldNumber = 4;
  const ::proto::ServantInfo& servant_info() const;
  ::proto::ServantInfo* mutable_servant_info();
  ::proto::ServantInfo* release_servant_info();
  void set_allocated_servant_info(::proto::ServantInfo* servant_info);

  // bool is_ai_open = 1;
  void clear_is_ai_open();
  static const int kIsAiOpenFieldNumber = 1;
  bool is_ai_open() const;
  void set_is_ai_open(bool value);

  // uint32 cur_tactic = 7;
  void clear_cur_tactic();
  static const int kCurTacticFieldNumber = 7;
  ::google::protobuf::uint32 cur_tactic() const;
  void set_cur_tactic(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityAiInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneEntityAiInfo_SkillCdMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneEntityAiInfo_SkillCdMapEntry();
    SceneEntityAiInfo_SkillCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityAiInfo_SkillCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityAiInfo_SkillCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityAiInfo_SkillCdMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_cd_map_;
  private:
  public:
  class SceneEntityAiInfo_AiThreatMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneEntityAiInfo_AiThreatMapEntry();
    SceneEntityAiInfo_AiThreatMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityAiInfo_AiThreatMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityAiInfo_AiThreatMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityAiInfo_AiThreatMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > ai_threat_map_;
  private:
  public:
  class SceneEntityAiInfo_SkillGroupCdMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_SkillGroupCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_SkillGroupCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneEntityAiInfo_SkillGroupCdMapEntry();
    SceneEntityAiInfo_SkillGroupCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityAiInfo_SkillGroupCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityAiInfo_SkillGroupCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityAiInfo_SkillGroupCdMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_group_cd_map_;
  private:
  ::proto::Vector* born_pos_;
  ::proto::ServantInfo* servant_info_;
  bool is_ai_open_;
  ::google::protobuf::uint32 cur_tactic_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EntityRendererChangedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityRendererChangedInfo) */ {
 public:
  EntityRendererChangedInfo();
  virtual ~EntityRendererChangedInfo();

  EntityRendererChangedInfo(const EntityRendererChangedInfo& from);

  inline EntityRendererChangedInfo& operator=(const EntityRendererChangedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityRendererChangedInfo(EntityRendererChangedInfo&& from) noexcept
    : EntityRendererChangedInfo() {
    *this = ::std::move(from);
  }

  inline EntityRendererChangedInfo& operator=(EntityRendererChangedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityRendererChangedInfo& default_instance();

  static inline const EntityRendererChangedInfo* internal_default_instance() {
    return reinterpret_cast<const EntityRendererChangedInfo*>(
               &_EntityRendererChangedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(EntityRendererChangedInfo* other);
  friend void swap(EntityRendererChangedInfo& a, EntityRendererChangedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityRendererChangedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityRendererChangedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityRendererChangedInfo& from);
  void MergeFrom(const EntityRendererChangedInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityRendererChangedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint32> changed_renderers = 1;
  int changed_renderers_size() const;
  void clear_changed_renderers();
  static const int kChangedRenderersFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
      changed_renderers() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
      mutable_changed_renderers();

  // uint32 visibility_count = 2;
  void clear_visibility_count();
  static const int kVisibilityCountFieldNumber = 2;
  ::google::protobuf::uint32 visibility_count() const;
  void set_visibility_count(::google::protobuf::uint32 value);

  // bool is_cached = 3;
  void clear_is_cached();
  static const int kIsCachedFieldNumber = 3;
  bool is_cached() const;
  void set_is_cached(bool value);

  // @@protoc_insertion_point(class_scope:proto.EntityRendererChangedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EntityRendererChangedInfo_ChangedRenderersEntry : public ::google::protobuf::internal::MapEntry<EntityRendererChangedInfo_ChangedRenderersEntry, 
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EntityRendererChangedInfo_ChangedRenderersEntry, 
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    EntityRendererChangedInfo_ChangedRenderersEntry();
    EntityRendererChangedInfo_ChangedRenderersEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EntityRendererChangedInfo_ChangedRenderersEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EntityRendererChangedInfo_ChangedRenderersEntry,
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > changed_renderers_;
  private:
  ::google::protobuf::uint32 visibility_count_;
  bool is_cached_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PropPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PropPair) */ {
 public:
  PropPair();
  virtual ~PropPair();

  PropPair(const PropPair& from);

  inline PropPair& operator=(const PropPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PropPair(PropPair&& from) noexcept
    : PropPair() {
    *this = ::std::move(from);
  }

  inline PropPair& operator=(PropPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropPair& default_instance();

  static inline const PropPair* internal_default_instance() {
    return reinterpret_cast<const PropPair*>(
               &_PropPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(PropPair* other);
  friend void swap(PropPair& a, PropPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PropPair* New() const PROTOBUF_FINAL { return New(NULL); }

  PropPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PropPair& from);
  void MergeFrom(const PropPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PropPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PropValue prop_value = 2;
  bool has_prop_value() const;
  void clear_prop_value();
  static const int kPropValueFieldNumber = 2;
  const ::proto::PropValue& prop_value() const;
  ::proto::PropValue* mutable_prop_value();
  ::proto::PropValue* release_prop_value();
  void set_allocated_prop_value(::proto::PropValue* prop_value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PropPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PropValue* prop_value_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FightPropPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FightPropPair) */ {
 public:
  FightPropPair();
  virtual ~FightPropPair();

  FightPropPair(const FightPropPair& from);

  inline FightPropPair& operator=(const FightPropPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FightPropPair(FightPropPair&& from) noexcept
    : FightPropPair() {
    *this = ::std::move(from);
  }

  inline FightPropPair& operator=(FightPropPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FightPropPair& default_instance();

  static inline const FightPropPair* internal_default_instance() {
    return reinterpret_cast<const FightPropPair*>(
               &_FightPropPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(FightPropPair* other);
  friend void swap(FightPropPair& a, FightPropPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FightPropPair* New() const PROTOBUF_FINAL { return New(NULL); }

  FightPropPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FightPropPair& from);
  void MergeFrom(const FightPropPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FightPropPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 prop_type = 1;
  void clear_prop_type();
  static const int kPropTypeFieldNumber = 1;
  ::google::protobuf::uint32 prop_type() const;
  void set_prop_type(::google::protobuf::uint32 value);

  // float prop_value = 2;
  void clear_prop_value();
  static const int kPropValueFieldNumber = 2;
  float prop_value() const;
  void set_prop_value(float value);

  // @@protoc_insertion_point(class_scope:proto.FightPropPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 prop_type_;
  float prop_value_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnimatorParameterValueInfoPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AnimatorParameterValueInfoPair) */ {
 public:
  AnimatorParameterValueInfoPair();
  virtual ~AnimatorParameterValueInfoPair();

  AnimatorParameterValueInfoPair(const AnimatorParameterValueInfoPair& from);

  inline AnimatorParameterValueInfoPair& operator=(const AnimatorParameterValueInfoPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnimatorParameterValueInfoPair(AnimatorParameterValueInfoPair&& from) noexcept
    : AnimatorParameterValueInfoPair() {
    *this = ::std::move(from);
  }

  inline AnimatorParameterValueInfoPair& operator=(AnimatorParameterValueInfoPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnimatorParameterValueInfoPair& default_instance();

  static inline const AnimatorParameterValueInfoPair* internal_default_instance() {
    return reinterpret_cast<const AnimatorParameterValueInfoPair*>(
               &_AnimatorParameterValueInfoPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(AnimatorParameterValueInfoPair* other);
  friend void swap(AnimatorParameterValueInfoPair& a, AnimatorParameterValueInfoPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnimatorParameterValueInfoPair* New() const PROTOBUF_FINAL { return New(NULL); }

  AnimatorParameterValueInfoPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnimatorParameterValueInfoPair& from);
  void MergeFrom(const AnimatorParameterValueInfoPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnimatorParameterValueInfoPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AnimatorParameterValueInfo animator_para = 2;
  bool has_animator_para() const;
  void clear_animator_para();
  static const int kAnimatorParaFieldNumber = 2;
  const ::proto::AnimatorParameterValueInfo& animator_para() const;
  ::proto::AnimatorParameterValueInfo* mutable_animator_para();
  ::proto::AnimatorParameterValueInfo* release_animator_para();
  void set_allocated_animator_para(::proto::AnimatorParameterValueInfo* animator_para);

  // int32 name_id = 1;
  void clear_name_id();
  static const int kNameIdFieldNumber = 1;
  ::google::protobuf::int32 name_id() const;
  void set_name_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AnimatorParameterValueInfoPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AnimatorParameterValueInfo* animator_para_;
  ::google::protobuf::int32 name_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityEnvironmentInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityEnvironmentInfo) */ {
 public:
  EntityEnvironmentInfo();
  virtual ~EntityEnvironmentInfo();

  EntityEnvironmentInfo(const EntityEnvironmentInfo& from);

  inline EntityEnvironmentInfo& operator=(const EntityEnvironmentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityEnvironmentInfo(EntityEnvironmentInfo&& from) noexcept
    : EntityEnvironmentInfo() {
    *this = ::std::move(from);
  }

  inline EntityEnvironmentInfo& operator=(EntityEnvironmentInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityEnvironmentInfo& default_instance();

  static inline const EntityEnvironmentInfo* internal_default_instance() {
    return reinterpret_cast<const EntityEnvironmentInfo*>(
               &_EntityEnvironmentInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(EntityEnvironmentInfo* other);
  friend void swap(EntityEnvironmentInfo& a, EntityEnvironmentInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityEnvironmentInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityEnvironmentInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityEnvironmentInfo& from);
  void MergeFrom(const EntityEnvironmentInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityEnvironmentInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 json_climate_type = 1;
  void clear_json_climate_type();
  static const int kJsonClimateTypeFieldNumber = 1;
  ::google::protobuf::uint32 json_climate_type() const;
  void set_json_climate_type(::google::protobuf::uint32 value);

  // uint32 climate_area_id = 2;
  void clear_climate_area_id();
  static const int kClimateAreaIdFieldNumber = 2;
  ::google::protobuf::uint32 climate_area_id() const;
  void set_climate_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityEnvironmentInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 json_climate_type_;
  ::google::protobuf::uint32 climate_area_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityClientExtraInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityClientExtraInfo) */ {
 public:
  EntityClientExtraInfo();
  virtual ~EntityClientExtraInfo();

  EntityClientExtraInfo(const EntityClientExtraInfo& from);

  inline EntityClientExtraInfo& operator=(const EntityClientExtraInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityClientExtraInfo(EntityClientExtraInfo&& from) noexcept
    : EntityClientExtraInfo() {
    *this = ::std::move(from);
  }

  inline EntityClientExtraInfo& operator=(EntityClientExtraInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityClientExtraInfo& default_instance();

  static inline const EntityClientExtraInfo* internal_default_instance() {
    return reinterpret_cast<const EntityClientExtraInfo*>(
               &_EntityClientExtraInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(EntityClientExtraInfo* other);
  friend void swap(EntityClientExtraInfo& a, EntityClientExtraInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityClientExtraInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityClientExtraInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityClientExtraInfo& from);
  void MergeFrom(const EntityClientExtraInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityClientExtraInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector skill_anchor_position = 1;
  bool has_skill_anchor_position() const;
  void clear_skill_anchor_position();
  static const int kSkillAnchorPositionFieldNumber = 1;
  const ::proto::Vector& skill_anchor_position() const;
  ::proto::Vector* mutable_skill_anchor_position();
  ::proto::Vector* release_skill_anchor_position();
  void set_allocated_skill_anchor_position(::proto::Vector* skill_anchor_position);

  // @@protoc_insertion_point(class_scope:proto.EntityClientExtraInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* skill_anchor_position_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityAuthorityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityAuthorityInfo) */ {
 public:
  EntityAuthorityInfo();
  virtual ~EntityAuthorityInfo();

  EntityAuthorityInfo(const EntityAuthorityInfo& from);

  inline EntityAuthorityInfo& operator=(const EntityAuthorityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityAuthorityInfo(EntityAuthorityInfo&& from) noexcept
    : EntityAuthorityInfo() {
    *this = ::std::move(from);
  }

  inline EntityAuthorityInfo& operator=(EntityAuthorityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityAuthorityInfo& default_instance();

  static inline const EntityAuthorityInfo* internal_default_instance() {
    return reinterpret_cast<const EntityAuthorityInfo*>(
               &_EntityAuthorityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(EntityAuthorityInfo* other);
  friend void swap(EntityAuthorityInfo& a, EntityAuthorityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityAuthorityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityAuthorityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityAuthorityInfo& from);
  void MergeFrom(const EntityAuthorityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityAuthorityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AnimatorParameterValueInfoPair pose_para_list = 5;
  int pose_para_list_size() const;
  void clear_pose_para_list();
  static const int kPoseParaListFieldNumber = 5;
  const ::proto::AnimatorParameterValueInfoPair& pose_para_list(int index) const;
  ::proto::AnimatorParameterValueInfoPair* mutable_pose_para_list(int index);
  ::proto::AnimatorParameterValueInfoPair* add_pose_para_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >*
      mutable_pose_para_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >&
      pose_para_list() const;

  // .proto.AbilitySyncStateInfo ability_info = 1;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 1;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // .proto.EntityRendererChangedInfo renderer_changed_info = 2;
  bool has_renderer_changed_info() const;
  void clear_renderer_changed_info();
  static const int kRendererChangedInfoFieldNumber = 2;
  const ::proto::EntityRendererChangedInfo& renderer_changed_info() const;
  ::proto::EntityRendererChangedInfo* mutable_renderer_changed_info();
  ::proto::EntityRendererChangedInfo* release_renderer_changed_info();
  void set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info);

  // .proto.SceneEntityAiInfo ai_info = 3;
  bool has_ai_info() const;
  void clear_ai_info();
  static const int kAiInfoFieldNumber = 3;
  const ::proto::SceneEntityAiInfo& ai_info() const;
  ::proto::SceneEntityAiInfo* mutable_ai_info();
  ::proto::SceneEntityAiInfo* release_ai_info();
  void set_allocated_ai_info(::proto::SceneEntityAiInfo* ai_info);

  // .proto.Vector born_pos = 4;
  bool has_born_pos() const;
  void clear_born_pos();
  static const int kBornPosFieldNumber = 4;
  const ::proto::Vector& born_pos() const;
  ::proto::Vector* mutable_born_pos();
  ::proto::Vector* release_born_pos();
  void set_allocated_born_pos(::proto::Vector* born_pos);

  // .proto.EntityClientExtraInfo client_extra_info = 6;
  bool has_client_extra_info() const;
  void clear_client_extra_info();
  static const int kClientExtraInfoFieldNumber = 6;
  const ::proto::EntityClientExtraInfo& client_extra_info() const;
  ::proto::EntityClientExtraInfo* mutable_client_extra_info();
  ::proto::EntityClientExtraInfo* release_client_extra_info();
  void set_allocated_client_extra_info(::proto::EntityClientExtraInfo* client_extra_info);

  // @@protoc_insertion_point(class_scope:proto.EntityAuthorityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair > pose_para_list_;
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::proto::EntityRendererChangedInfo* renderer_changed_info_;
  ::proto::SceneEntityAiInfo* ai_info_;
  ::proto::Vector* born_pos_;
  ::proto::EntityClientExtraInfo* client_extra_info_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityInfo) */ {
 public:
  SceneEntityInfo();
  virtual ~SceneEntityInfo();

  SceneEntityInfo(const SceneEntityInfo& from);

  inline SceneEntityInfo& operator=(const SceneEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityInfo(SceneEntityInfo&& from) noexcept
    : SceneEntityInfo() {
    *this = ::std::move(from);
  }

  inline SceneEntityInfo& operator=(SceneEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityInfo& default_instance();

  enum EntityCase {
    kAvatar = 10,
    kMonster = 11,
    kNpc = 12,
    kGadget = 13,
    ENTITY_NOT_SET = 0,
  };

  static inline const SceneEntityInfo* internal_default_instance() {
    return reinterpret_cast<const SceneEntityInfo*>(
               &_SceneEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(SceneEntityInfo* other);
  friend void swap(SceneEntityInfo& a, SceneEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityInfo& from);
  void MergeFrom(const SceneEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PropPair prop_list = 5;
  int prop_list_size() const;
  void clear_prop_list();
  static const int kPropListFieldNumber = 5;
  const ::proto::PropPair& prop_list(int index) const;
  ::proto::PropPair* mutable_prop_list(int index);
  ::proto::PropPair* add_prop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PropPair >*
      mutable_prop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PropPair >&
      prop_list() const;

  // repeated .proto.FightPropPair fight_prop_list = 6;
  int fight_prop_list_size() const;
  void clear_fight_prop_list();
  static const int kFightPropListFieldNumber = 6;
  const ::proto::FightPropPair& fight_prop_list(int index) const;
  ::proto::FightPropPair* mutable_fight_prop_list(int index);
  ::proto::FightPropPair* add_fight_prop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FightPropPair >*
      mutable_fight_prop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FightPropPair >&
      fight_prop_list() const;

  // repeated .proto.AnimatorParameterValueInfoPair animator_para_list = 9;
  int animator_para_list_size() const;
  void clear_animator_para_list();
  static const int kAnimatorParaListFieldNumber = 9;
  const ::proto::AnimatorParameterValueInfoPair& animator_para_list(int index) const;
  ::proto::AnimatorParameterValueInfoPair* mutable_animator_para_list(int index);
  ::proto::AnimatorParameterValueInfoPair* add_animator_para_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >*
      mutable_animator_para_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >&
      animator_para_list() const;

  // repeated .proto.EntityEnvironmentInfo entity_environment_info_list = 20;
  int entity_environment_info_list_size() const;
  void clear_entity_environment_info_list();
  static const int kEntityEnvironmentInfoListFieldNumber = 20;
  const ::proto::EntityEnvironmentInfo& entity_environment_info_list(int index) const;
  ::proto::EntityEnvironmentInfo* mutable_entity_environment_info_list(int index);
  ::proto::EntityEnvironmentInfo* add_entity_environment_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityEnvironmentInfo >*
      mutable_entity_environment_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityEnvironmentInfo >&
      entity_environment_info_list() const;

  // repeated string tag_list = 22;
  int tag_list_size() const;
  void clear_tag_list();
  static const int kTagListFieldNumber = 22;
  const ::std::string& tag_list(int index) const;
  ::std::string* mutable_tag_list(int index);
  void set_tag_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tag_list(int index, ::std::string&& value);
  #endif
  void set_tag_list(int index, const char* value);
  void set_tag_list(int index, const char* value, size_t size);
  ::std::string* add_tag_list();
  void add_tag_list(const ::std::string& value);
  #if LANG_CXX11
  void add_tag_list(::std::string&& value);
  #endif
  void add_tag_list(const char* value);
  void add_tag_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tag_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tag_list();

  // repeated .proto.ServerBuff server_buff_list = 23;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 23;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .proto.MotionInfo motion_info = 4;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 4;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // .proto.EntityClientData entity_client_data = 19;
  bool has_entity_client_data() const;
  void clear_entity_client_data();
  static const int kEntityClientDataFieldNumber = 19;
  const ::proto::EntityClientData& entity_client_data() const;
  ::proto::EntityClientData* mutable_entity_client_data();
  ::proto::EntityClientData* release_entity_client_data();
  void set_allocated_entity_client_data(::proto::EntityClientData* entity_client_data);

  // .proto.EntityAuthorityInfo entity_authority_info = 21;
  bool has_entity_authority_info() const;
  void clear_entity_authority_info();
  static const int kEntityAuthorityInfoFieldNumber = 21;
  const ::proto::EntityAuthorityInfo& entity_authority_info() const;
  ::proto::EntityAuthorityInfo* mutable_entity_authority_info();
  ::proto::EntityAuthorityInfo* release_entity_authority_info();
  void set_allocated_entity_authority_info(::proto::EntityAuthorityInfo* entity_authority_info);

  // .proto.ProtEntityType entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::proto::ProtEntityType entity_type() const;
  void set_entity_type(::proto::ProtEntityType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 life_state = 7;
  void clear_life_state();
  static const int kLifeStateFieldNumber = 7;
  ::google::protobuf::uint32 life_state() const;
  void set_life_state(::google::protobuf::uint32 value);

  // uint32 last_move_scene_time_ms = 17;
  void clear_last_move_scene_time_ms();
  static const int kLastMoveSceneTimeMsFieldNumber = 17;
  ::google::protobuf::uint32 last_move_scene_time_ms() const;
  void set_last_move_scene_time_ms(::google::protobuf::uint32 value);

  // uint32 last_move_reliable_seq = 18;
  void clear_last_move_reliable_seq();
  static const int kLastMoveReliableSeqFieldNumber = 18;
  ::google::protobuf::uint32 last_move_reliable_seq() const;
  void set_last_move_reliable_seq(::google::protobuf::uint32 value);

  // .proto.SceneAvatarInfo avatar = 10;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 10;
  const ::proto::SceneAvatarInfo& avatar() const;
  ::proto::SceneAvatarInfo* mutable_avatar();
  ::proto::SceneAvatarInfo* release_avatar();
  void set_allocated_avatar(::proto::SceneAvatarInfo* avatar);

  // .proto.SceneMonsterInfo monster = 11;
  bool has_monster() const;
  void clear_monster();
  static const int kMonsterFieldNumber = 11;
  const ::proto::SceneMonsterInfo& monster() const;
  ::proto::SceneMonsterInfo* mutable_monster();
  ::proto::SceneMonsterInfo* release_monster();
  void set_allocated_monster(::proto::SceneMonsterInfo* monster);

  // .proto.SceneNpcInfo npc = 12;
  bool has_npc() const;
  void clear_npc();
  static const int kNpcFieldNumber = 12;
  const ::proto::SceneNpcInfo& npc() const;
  ::proto::SceneNpcInfo* mutable_npc();
  ::proto::SceneNpcInfo* release_npc();
  void set_allocated_npc(::proto::SceneNpcInfo* npc);

  // .proto.SceneGadgetInfo gadget = 13;
  bool has_gadget() const;
  void clear_gadget();
  static const int kGadgetFieldNumber = 13;
  const ::proto::SceneGadgetInfo& gadget() const;
  ::proto::SceneGadgetInfo* mutable_gadget();
  ::proto::SceneGadgetInfo* release_gadget();
  void set_allocated_gadget(::proto::SceneGadgetInfo* gadget);

  EntityCase entity_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneEntityInfo)
 private:
  void set_has_avatar();
  void set_has_monster();
  void set_has_npc();
  void set_has_gadget();

  inline bool has_entity() const;
  void clear_entity();
  inline void clear_has_entity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PropPair > prop_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::FightPropPair > fight_prop_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair > animator_para_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityEnvironmentInfo > entity_environment_info_list_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tag_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::MotionInfo* motion_info_;
  ::proto::EntityClientData* entity_client_data_;
  ::proto::EntityAuthorityInfo* entity_authority_info_;
  int entity_type_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 life_state_;
  ::google::protobuf::uint32 last_move_scene_time_ms_;
  ::google::protobuf::uint32 last_move_reliable_seq_;
  union EntityUnion {
    EntityUnion() {}
    ::proto::SceneAvatarInfo* avatar_;
    ::proto::SceneMonsterInfo* monster_;
    ::proto::SceneNpcInfo* npc_;
    ::proto::SceneGadgetInfo* gadget_;
  } entity_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateGadgetInfo_Chest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateGadgetInfo.Chest) */ {
 public:
  CreateGadgetInfo_Chest();
  virtual ~CreateGadgetInfo_Chest();

  CreateGadgetInfo_Chest(const CreateGadgetInfo_Chest& from);

  inline CreateGadgetInfo_Chest& operator=(const CreateGadgetInfo_Chest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGadgetInfo_Chest(CreateGadgetInfo_Chest&& from) noexcept
    : CreateGadgetInfo_Chest() {
    *this = ::std::move(from);
  }

  inline CreateGadgetInfo_Chest& operator=(CreateGadgetInfo_Chest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGadgetInfo_Chest& default_instance();

  static inline const CreateGadgetInfo_Chest* internal_default_instance() {
    return reinterpret_cast<const CreateGadgetInfo_Chest*>(
               &_CreateGadgetInfo_Chest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(CreateGadgetInfo_Chest* other);
  friend void swap(CreateGadgetInfo_Chest& a, CreateGadgetInfo_Chest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGadgetInfo_Chest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGadgetInfo_Chest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGadgetInfo_Chest& from);
  void MergeFrom(const CreateGadgetInfo_Chest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGadgetInfo_Chest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 chest_drop_id = 1;
  void clear_chest_drop_id();
  static const int kChestDropIdFieldNumber = 1;
  ::google::protobuf::uint32 chest_drop_id() const;
  void set_chest_drop_id(::google::protobuf::uint32 value);

  // bool is_show_cutscene = 2;
  void clear_is_show_cutscene();
  static const int kIsShowCutsceneFieldNumber = 2;
  bool is_show_cutscene() const;
  void set_is_show_cutscene(bool value);

  // @@protoc_insertion_point(class_scope:proto.CreateGadgetInfo.Chest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chest_drop_id_;
  bool is_show_cutscene_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateGadgetInfo) */ {
 public:
  CreateGadgetInfo();
  virtual ~CreateGadgetInfo();

  CreateGadgetInfo(const CreateGadgetInfo& from);

  inline CreateGadgetInfo& operator=(const CreateGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGadgetInfo(CreateGadgetInfo&& from) noexcept
    : CreateGadgetInfo() {
    *this = ::std::move(from);
  }

  inline CreateGadgetInfo& operator=(CreateGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGadgetInfo& default_instance();

  static inline const CreateGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const CreateGadgetInfo*>(
               &_CreateGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(CreateGadgetInfo* other);
  friend void swap(CreateGadgetInfo& a, CreateGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGadgetInfo& from);
  void MergeFrom(const CreateGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateGadgetInfo_Chest Chest;

  // accessors -------------------------------------------------------

  // .proto.CreateGadgetInfo.Chest chest = 2;
  bool has_chest() const;
  void clear_chest();
  static const int kChestFieldNumber = 2;
  const ::proto::CreateGadgetInfo_Chest& chest() const;
  ::proto::CreateGadgetInfo_Chest* mutable_chest();
  ::proto::CreateGadgetInfo_Chest* release_chest();
  void set_allocated_chest(::proto::CreateGadgetInfo_Chest* chest);

  // .proto.GadgetBornType born_type = 1;
  void clear_born_type();
  static const int kBornTypeFieldNumber = 1;
  ::proto::GadgetBornType born_type() const;
  void set_born_type(::proto::GadgetBornType value);

  // @@protoc_insertion_point(class_scope:proto.CreateGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CreateGadgetInfo_Chest* chest_;
  int born_type_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateEntityInfo) */ {
 public:
  CreateEntityInfo();
  virtual ~CreateEntityInfo();

  CreateEntityInfo(const CreateEntityInfo& from);

  inline CreateEntityInfo& operator=(const CreateEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateEntityInfo(CreateEntityInfo&& from) noexcept
    : CreateEntityInfo() {
    *this = ::std::move(from);
  }

  inline CreateEntityInfo& operator=(CreateEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEntityInfo& default_instance();

  enum EntityCase {
    kMonsterId = 1,
    kNpcId = 2,
    kGadgetId = 3,
    kItemId = 4,
    ENTITY_NOT_SET = 0,
  };

  enum EntityCreateInfoCase {
    kGadget = 13,
    ENTITY_CREATE_INFO_NOT_SET = 0,
  };

  static inline const CreateEntityInfo* internal_default_instance() {
    return reinterpret_cast<const CreateEntityInfo*>(
               &_CreateEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(CreateEntityInfo* other);
  friend void swap(CreateEntityInfo& a, CreateEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateEntityInfo& from);
  void MergeFrom(const CreateEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 6;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 7;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 7;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 scene_id = 10;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 10;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 room_id = 11;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 11;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 client_unique_id = 12;
  void clear_client_unique_id();
  static const int kClientUniqueIdFieldNumber = 12;
  ::google::protobuf::uint32 client_unique_id() const;
  void set_client_unique_id(::google::protobuf::uint32 value);

  // uint32 monster_id = 1;
  private:
  bool has_monster_id() const;
  public:
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 npc_id = 2;
  private:
  bool has_npc_id() const;
  public:
  void clear_npc_id();
  static const int kNpcIdFieldNumber = 2;
  ::google::protobuf::uint32 npc_id() const;
  void set_npc_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 3;
  private:
  bool has_gadget_id() const;
  public:
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 3;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // uint32 item_id = 4;
  private:
  bool has_item_id() const;
  public:
  void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // .proto.CreateGadgetInfo gadget = 13;
  bool has_gadget() const;
  void clear_gadget();
  static const int kGadgetFieldNumber = 13;
  const ::proto::CreateGadgetInfo& gadget() const;
  ::proto::CreateGadgetInfo* mutable_gadget();
  ::proto::CreateGadgetInfo* release_gadget();
  void set_allocated_gadget(::proto::CreateGadgetInfo* gadget);

  EntityCase entity_case() const;
  EntityCreateInfoCase entity_create_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.CreateEntityInfo)
 private:
  void set_has_monster_id();
  void set_has_npc_id();
  void set_has_gadget_id();
  void set_has_item_id();
  void set_has_gadget();

  inline bool has_entity() const;
  void clear_entity();
  inline void clear_has_entity();

  inline bool has_entity_create_info() const;
  void clear_entity_create_info();
  inline void clear_has_entity_create_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 client_unique_id_;
  union EntityUnion {
    EntityUnion() {}
    ::google::protobuf::uint32 monster_id_;
    ::google::protobuf::uint32 npc_id_;
    ::google::protobuf::uint32 gadget_id_;
    ::google::protobuf::uint32 item_id_;
  } entity_;
  union EntityCreateInfoUnion {
    EntityCreateInfoUnion() {}
    ::proto::CreateGadgetInfo* gadget_;
  } entity_create_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrialAvatarGrantRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TrialAvatarGrantRecord) */ {
 public:
  TrialAvatarGrantRecord();
  virtual ~TrialAvatarGrantRecord();

  TrialAvatarGrantRecord(const TrialAvatarGrantRecord& from);

  inline TrialAvatarGrantRecord& operator=(const TrialAvatarGrantRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrialAvatarGrantRecord(TrialAvatarGrantRecord&& from) noexcept
    : TrialAvatarGrantRecord() {
    *this = ::std::move(from);
  }

  inline TrialAvatarGrantRecord& operator=(TrialAvatarGrantRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrialAvatarGrantRecord& default_instance();

  static inline const TrialAvatarGrantRecord* internal_default_instance() {
    return reinterpret_cast<const TrialAvatarGrantRecord*>(
               &_TrialAvatarGrantRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(TrialAvatarGrantRecord* other);
  friend void swap(TrialAvatarGrantRecord& a, TrialAvatarGrantRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrialAvatarGrantRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  TrialAvatarGrantRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrialAvatarGrantRecord& from);
  void MergeFrom(const TrialAvatarGrantRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrialAvatarGrantRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TrialAvatarGrantRecord_GrantReason GrantReason;
  static const GrantReason INVALID =
    TrialAvatarGrantRecord_GrantReason_INVALID;
  static const GrantReason GRANT_BY_QUEST =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_QUEST;
  static const GrantReason GRANT_BY_TRIAL_AVATAR_ACTIVITY =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_TRIAL_AVATAR_ACTIVITY;
  static const GrantReason GRANT_BY_DUNGEON_ELEMENT_CHALLENGE =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_DUNGEON_ELEMENT_CHALLENGE;
  static const GrantReason GRANT_BY_MIST_TRIAL_ACTIVITY =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_MIST_TRIAL_ACTIVITY;
  static const GrantReason GRANT_BY_SUMO_ACTIVITY =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_SUMO_ACTIVITY;
  static const GrantReason GRANT_BY_POTION_ACTIVITY =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_POTION_ACTIVITY;
  static const GrantReason GRANT_BY_CRYSTAL_LINK_ACTIVITY =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_CRYSTAL_LINK_ACTIVITY;
  static const GrantReason GRANT_BY_IRODORI_MASTER =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_IRODORI_MASTER;
  static const GrantReason GRANT_BY_GM =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_GM;
  static const GrantReason GRANT_BY_INSTABLE_SPRAY_ACTIVITY =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_INSTABLE_SPRAY_ACTIVITY;
  static const GrantReason GRANT_BY_MUQADAS_POTION_ACTIVITY =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_MUQADAS_POTION_ACTIVITY;
  static const GrantReason GRANT_BY_VINTAGE_HUNTING =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_VINTAGE_HUNTING;
  static const GrantReason GRANT_BY_CHAR_AMUSEMENT =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_CHAR_AMUSEMENT;
  static const GrantReason GRANT_BY_DUEL_HEART =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_DUEL_HEART;
  static inline bool GrantReason_IsValid(int value) {
    return TrialAvatarGrantRecord_GrantReason_IsValid(value);
  }
  static const GrantReason GrantReason_MIN =
    TrialAvatarGrantRecord_GrantReason_GrantReason_MIN;
  static const GrantReason GrantReason_MAX =
    TrialAvatarGrantRecord_GrantReason_GrantReason_MAX;
  static const int GrantReason_ARRAYSIZE =
    TrialAvatarGrantRecord_GrantReason_GrantReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GrantReason_descriptor() {
    return TrialAvatarGrantRecord_GrantReason_descriptor();
  }
  static inline const ::std::string& GrantReason_Name(GrantReason value) {
    return TrialAvatarGrantRecord_GrantReason_Name(value);
  }
  static inline bool GrantReason_Parse(const ::std::string& name,
      GrantReason* value) {
    return TrialAvatarGrantRecord_GrantReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 grant_reason = 1;
  void clear_grant_reason();
  static const int kGrantReasonFieldNumber = 1;
  ::google::protobuf::uint32 grant_reason() const;
  void set_grant_reason(::google::protobuf::uint32 value);

  // uint32 from_parent_quest_id = 2;
  void clear_from_parent_quest_id();
  static const int kFromParentQuestIdFieldNumber = 2;
  ::google::protobuf::uint32 from_parent_quest_id() const;
  void set_from_parent_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TrialAvatarGrantRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 grant_reason_;
  ::google::protobuf::uint32 from_parent_quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrialAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TrialAvatarInfo) */ {
 public:
  TrialAvatarInfo();
  virtual ~TrialAvatarInfo();

  TrialAvatarInfo(const TrialAvatarInfo& from);

  inline TrialAvatarInfo& operator=(const TrialAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrialAvatarInfo(TrialAvatarInfo&& from) noexcept
    : TrialAvatarInfo() {
    *this = ::std::move(from);
  }

  inline TrialAvatarInfo& operator=(TrialAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrialAvatarInfo& default_instance();

  static inline const TrialAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const TrialAvatarInfo*>(
               &_TrialAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(TrialAvatarInfo* other);
  friend void swap(TrialAvatarInfo& a, TrialAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrialAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TrialAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrialAvatarInfo& from);
  void MergeFrom(const TrialAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrialAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Item trial_equip_list = 2;
  int trial_equip_list_size() const;
  void clear_trial_equip_list();
  static const int kTrialEquipListFieldNumber = 2;
  const ::proto::Item& trial_equip_list(int index) const;
  ::proto::Item* mutable_trial_equip_list(int index);
  ::proto::Item* add_trial_equip_list();
  ::google::protobuf::RepeatedPtrField< ::proto::Item >*
      mutable_trial_equip_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::Item >&
      trial_equip_list() const;

  // .proto.TrialAvatarGrantRecord grant_record = 3;
  bool has_grant_record() const;
  void clear_grant_record();
  static const int kGrantRecordFieldNumber = 3;
  const ::proto::TrialAvatarGrantRecord& grant_record() const;
  ::proto::TrialAvatarGrantRecord* mutable_grant_record();
  ::proto::TrialAvatarGrantRecord* release_grant_record();
  void set_allocated_grant_record(::proto::TrialAvatarGrantRecord* grant_record);

  // uint32 trial_avatar_id = 1;
  void clear_trial_avatar_id();
  static const int kTrialAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 trial_avatar_id() const;
  void set_trial_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TrialAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Item > trial_equip_list_;
  ::proto::TrialAvatarGrantRecord* grant_record_;
  ::google::protobuf::uint32 trial_avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarSkillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarSkillInfo) */ {
 public:
  AvatarSkillInfo();
  virtual ~AvatarSkillInfo();

  AvatarSkillInfo(const AvatarSkillInfo& from);

  inline AvatarSkillInfo& operator=(const AvatarSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarSkillInfo(AvatarSkillInfo&& from) noexcept
    : AvatarSkillInfo() {
    *this = ::std::move(from);
  }

  inline AvatarSkillInfo& operator=(AvatarSkillInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarSkillInfo& default_instance();

  static inline const AvatarSkillInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarSkillInfo*>(
               &_AvatarSkillInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(AvatarSkillInfo* other);
  friend void swap(AvatarSkillInfo& a, AvatarSkillInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarSkillInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarSkillInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarSkillInfo& from);
  void MergeFrom(const AvatarSkillInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarSkillInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 full_cd_time_list = 2;
  int full_cd_time_list_size() const;
  void clear_full_cd_time_list();
  static const int kFullCdTimeListFieldNumber = 2;
  ::google::protobuf::uint32 full_cd_time_list(int index) const;
  void set_full_cd_time_list(int index, ::google::protobuf::uint32 value);
  void add_full_cd_time_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      full_cd_time_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_full_cd_time_list();

  // uint32 pass_cd_time = 1;
  void clear_pass_cd_time();
  static const int kPassCdTimeFieldNumber = 1;
  ::google::protobuf::uint32 pass_cd_time() const;
  void set_pass_cd_time(::google::protobuf::uint32 value);

  // uint32 max_charge_count = 3;
  void clear_max_charge_count();
  static const int kMaxChargeCountFieldNumber = 3;
  ::google::protobuf::uint32 max_charge_count() const;
  void set_max_charge_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarSkillInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > full_cd_time_list_;
  mutable int _full_cd_time_list_cached_byte_size_;
  ::google::protobuf::uint32 pass_cd_time_;
  ::google::protobuf::uint32 max_charge_count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FetterData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FetterData) */ {
 public:
  FetterData();
  virtual ~FetterData();

  FetterData(const FetterData& from);

  inline FetterData& operator=(const FetterData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FetterData(FetterData&& from) noexcept
    : FetterData() {
    *this = ::std::move(from);
  }

  inline FetterData& operator=(FetterData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FetterData& default_instance();

  static inline const FetterData* internal_default_instance() {
    return reinterpret_cast<const FetterData*>(
               &_FetterData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(FetterData* other);
  friend void swap(FetterData& a, FetterData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FetterData* New() const PROTOBUF_FINAL { return New(NULL); }

  FetterData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FetterData& from);
  void MergeFrom(const FetterData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FetterData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cond_index_list = 3;
  int cond_index_list_size() const;
  void clear_cond_index_list();
  static const int kCondIndexListFieldNumber = 3;
  ::google::protobuf::uint32 cond_index_list(int index) const;
  void set_cond_index_list(int index, ::google::protobuf::uint32 value);
  void add_cond_index_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cond_index_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cond_index_list();

  // uint32 fetter_id = 1;
  void clear_fetter_id();
  static const int kFetterIdFieldNumber = 1;
  ::google::protobuf::uint32 fetter_id() const;
  void set_fetter_id(::google::protobuf::uint32 value);

  // uint32 fetter_state = 2;
  void clear_fetter_state();
  static const int kFetterStateFieldNumber = 2;
  ::google::protobuf::uint32 fetter_state() const;
  void set_fetter_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FetterData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cond_index_list_;
  mutable int _cond_index_list_cached_byte_size_;
  ::google::protobuf::uint32 fetter_id_;
  ::google::protobuf::uint32 fetter_state_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarFetterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarFetterInfo) */ {
 public:
  AvatarFetterInfo();
  virtual ~AvatarFetterInfo();

  AvatarFetterInfo(const AvatarFetterInfo& from);

  inline AvatarFetterInfo& operator=(const AvatarFetterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarFetterInfo(AvatarFetterInfo&& from) noexcept
    : AvatarFetterInfo() {
    *this = ::std::move(from);
  }

  inline AvatarFetterInfo& operator=(AvatarFetterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarFetterInfo& default_instance();

  static inline const AvatarFetterInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarFetterInfo*>(
               &_AvatarFetterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(AvatarFetterInfo* other);
  friend void swap(AvatarFetterInfo& a, AvatarFetterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarFetterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarFetterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarFetterInfo& from);
  void MergeFrom(const AvatarFetterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarFetterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 open_id_list = 3;
  int open_id_list_size() const;
  void clear_open_id_list();
  static const int kOpenIdListFieldNumber = 3;
  ::google::protobuf::uint32 open_id_list(int index) const;
  void set_open_id_list(int index, ::google::protobuf::uint32 value);
  void add_open_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      open_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_open_id_list();

  // repeated uint32 finish_id_list = 4;
  int finish_id_list_size() const;
  void clear_finish_id_list();
  static const int kFinishIdListFieldNumber = 4;
  ::google::protobuf::uint32 finish_id_list(int index) const;
  void set_finish_id_list(int index, ::google::protobuf::uint32 value);
  void add_finish_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finish_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finish_id_list();

  // repeated uint32 rewarded_fetter_level_list = 5;
  int rewarded_fetter_level_list_size() const;
  void clear_rewarded_fetter_level_list();
  static const int kRewardedFetterLevelListFieldNumber = 5;
  ::google::protobuf::uint32 rewarded_fetter_level_list(int index) const;
  void set_rewarded_fetter_level_list(int index, ::google::protobuf::uint32 value);
  void add_rewarded_fetter_level_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewarded_fetter_level_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewarded_fetter_level_list();

  // repeated .proto.FetterData fetter_list = 6;
  int fetter_list_size() const;
  void clear_fetter_list();
  static const int kFetterListFieldNumber = 6;
  const ::proto::FetterData& fetter_list(int index) const;
  ::proto::FetterData* mutable_fetter_list(int index);
  ::proto::FetterData* add_fetter_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FetterData >*
      mutable_fetter_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FetterData >&
      fetter_list() const;

  // uint32 exp_number = 1;
  void clear_exp_number();
  static const int kExpNumberFieldNumber = 1;
  ::google::protobuf::uint32 exp_number() const;
  void set_exp_number(::google::protobuf::uint32 value);

  // uint32 exp_level = 2;
  void clear_exp_level();
  static const int kExpLevelFieldNumber = 2;
  ::google::protobuf::uint32 exp_level() const;
  void set_exp_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarFetterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > open_id_list_;
  mutable int _open_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finish_id_list_;
  mutable int _finish_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewarded_fetter_level_list_;
  mutable int _rewarded_fetter_level_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::FetterData > fetter_list_;
  ::google::protobuf::uint32 exp_number_;
  ::google::protobuf::uint32 exp_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarExpeditionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionInfo) */ {
 public:
  AvatarExpeditionInfo();
  virtual ~AvatarExpeditionInfo();

  AvatarExpeditionInfo(const AvatarExpeditionInfo& from);

  inline AvatarExpeditionInfo& operator=(const AvatarExpeditionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionInfo(AvatarExpeditionInfo&& from) noexcept
    : AvatarExpeditionInfo() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionInfo& operator=(AvatarExpeditionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionInfo& default_instance();

  static inline const AvatarExpeditionInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionInfo*>(
               &_AvatarExpeditionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(AvatarExpeditionInfo* other);
  friend void swap(AvatarExpeditionInfo& a, AvatarExpeditionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionInfo& from);
  void MergeFrom(const AvatarExpeditionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AvatarExpeditionState state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::proto::AvatarExpeditionState state() const;
  void set_state(::proto::AvatarExpeditionState value);

  // uint32 exp_id = 2;
  void clear_exp_id();
  static const int kExpIdFieldNumber = 2;
  ::google::protobuf::uint32 exp_id() const;
  void set_exp_id(::google::protobuf::uint32 value);

  // uint32 hour_time = 3;
  void clear_hour_time();
  static const int kHourTimeFieldNumber = 3;
  ::google::protobuf::uint32 hour_time() const;
  void set_hour_time(::google::protobuf::uint32 value);

  // uint32 start_time = 4;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // float shorten_ratio = 5;
  void clear_shorten_ratio();
  static const int kShortenRatioFieldNumber = 5;
  float shorten_ratio() const;
  void set_shorten_ratio(float value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  ::google::protobuf::uint32 exp_id_;
  ::google::protobuf::uint32 hour_time_;
  ::google::protobuf::uint32 start_time_;
  float shorten_ratio_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarEquipAffixInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarEquipAffixInfo) */ {
 public:
  AvatarEquipAffixInfo();
  virtual ~AvatarEquipAffixInfo();

  AvatarEquipAffixInfo(const AvatarEquipAffixInfo& from);

  inline AvatarEquipAffixInfo& operator=(const AvatarEquipAffixInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarEquipAffixInfo(AvatarEquipAffixInfo&& from) noexcept
    : AvatarEquipAffixInfo() {
    *this = ::std::move(from);
  }

  inline AvatarEquipAffixInfo& operator=(AvatarEquipAffixInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarEquipAffixInfo& default_instance();

  static inline const AvatarEquipAffixInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarEquipAffixInfo*>(
               &_AvatarEquipAffixInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(AvatarEquipAffixInfo* other);
  friend void swap(AvatarEquipAffixInfo& a, AvatarEquipAffixInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarEquipAffixInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarEquipAffixInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarEquipAffixInfo& from);
  void MergeFrom(const AvatarEquipAffixInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarEquipAffixInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 equip_affix_id = 1;
  void clear_equip_affix_id();
  static const int kEquipAffixIdFieldNumber = 1;
  ::google::protobuf::uint32 equip_affix_id() const;
  void set_equip_affix_id(::google::protobuf::uint32 value);

  // uint32 left_cd_time = 2;
  void clear_left_cd_time();
  static const int kLeftCdTimeFieldNumber = 2;
  ::google::protobuf::uint32 left_cd_time() const;
  void set_left_cd_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarEquipAffixInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 equip_affix_id_;
  ::google::protobuf::uint32 left_cd_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarInfo) */ {
 public:
  AvatarInfo();
  virtual ~AvatarInfo();

  AvatarInfo(const AvatarInfo& from);

  inline AvatarInfo& operator=(const AvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarInfo(AvatarInfo&& from) noexcept
    : AvatarInfo() {
    *this = ::std::move(from);
  }

  inline AvatarInfo& operator=(AvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarInfo& default_instance();

  static inline const AvatarInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarInfo*>(
               &_AvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(AvatarInfo* other);
  friend void swap(AvatarInfo& a, AvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarInfo& from);
  void MergeFrom(const AvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 3;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // repeated uint64 equip_guid_list = 5;
  int equip_guid_list_size() const;
  void clear_equip_guid_list();
  static const int kEquipGuidListFieldNumber = 5;
  ::google::protobuf::uint64 equip_guid_list(int index) const;
  void set_equip_guid_list(int index, ::google::protobuf::uint64 value);
  void add_equip_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid_list();

  // repeated uint32 talent_id_list = 6;
  int talent_id_list_size() const;
  void clear_talent_id_list();
  static const int kTalentIdListFieldNumber = 6;
  ::google::protobuf::uint32 talent_id_list(int index) const;
  void set_talent_id_list(int index, ::google::protobuf::uint32 value);
  void add_talent_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      talent_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_talent_id_list();

  // map<uint32, float> fight_prop_map = 7;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
  int skill_map_size() const;
  void clear_skill_map();
  static const int kSkillMapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >&
      skill_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >*
      mutable_skill_map();

  // repeated uint32 inherent_proud_skill_list = 14;
  int inherent_proud_skill_list_size() const;
  void clear_inherent_proud_skill_list();
  static const int kInherentProudSkillListFieldNumber = 14;
  ::google::protobuf::uint32 inherent_proud_skill_list(int index) const;
  void set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value);
  void add_inherent_proud_skill_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inherent_proud_skill_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inherent_proud_skill_list();

  // map<uint32, uint32> skill_level_map = 15;
  int skill_level_map_size() const;
  void clear_skill_level_map();
  static const int kSkillLevelMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_level_map();

  // map<uint32, uint32> proud_skill_extra_level_map = 17;
  int proud_skill_extra_level_map_size() const;
  void clear_proud_skill_extra_level_map();
  static const int kProudSkillExtraLevelMapFieldNumber = 17;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      proud_skill_extra_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_proud_skill_extra_level_map();

  // repeated uint32 team_resonance_list = 20;
  int team_resonance_list_size() const;
  void clear_team_resonance_list();
  static const int kTeamResonanceListFieldNumber = 20;
  ::google::protobuf::uint32 team_resonance_list(int index) const;
  void set_team_resonance_list(int index, ::google::protobuf::uint32 value);
  void add_team_resonance_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      team_resonance_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_team_resonance_list();

  // repeated .proto.AvatarEquipAffixInfo equip_affix_list = 22;
  int equip_affix_list_size() const;
  void clear_equip_affix_list();
  static const int kEquipAffixListFieldNumber = 22;
  const ::proto::AvatarEquipAffixInfo& equip_affix_list(int index) const;
  ::proto::AvatarEquipAffixInfo* mutable_equip_affix_list(int index);
  ::proto::AvatarEquipAffixInfo* add_equip_affix_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarEquipAffixInfo >*
      mutable_equip_affix_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AvatarEquipAffixInfo >&
      equip_affix_list() const;

  // repeated uint32 pending_promote_reward_list = 24;
  int pending_promote_reward_list_size() const;
  void clear_pending_promote_reward_list();
  static const int kPendingPromoteRewardListFieldNumber = 24;
  ::google::protobuf::uint32 pending_promote_reward_list(int index) const;
  void set_pending_promote_reward_list(int index, ::google::protobuf::uint32 value);
  void add_pending_promote_reward_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pending_promote_reward_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pending_promote_reward_list();

  // .proto.TrialAvatarInfo trial_avatar_info = 9;
  bool has_trial_avatar_info() const;
  void clear_trial_avatar_info();
  static const int kTrialAvatarInfoFieldNumber = 9;
  const ::proto::TrialAvatarInfo& trial_avatar_info() const;
  ::proto::TrialAvatarInfo* mutable_trial_avatar_info();
  ::proto::TrialAvatarInfo* release_trial_avatar_info();
  void set_allocated_trial_avatar_info(::proto::TrialAvatarInfo* trial_avatar_info);

  // .proto.AvatarFetterInfo fetter_info = 12;
  bool has_fetter_info() const;
  void clear_fetter_info();
  static const int kFetterInfoFieldNumber = 12;
  const ::proto::AvatarFetterInfo& fetter_info() const;
  ::proto::AvatarFetterInfo* mutable_fetter_info();
  ::proto::AvatarFetterInfo* release_fetter_info();
  void set_allocated_fetter_info(::proto::AvatarFetterInfo* fetter_info);

  // .proto.AvatarExcelInfo excel_info = 26;
  bool has_excel_info() const;
  void clear_excel_info();
  static const int kExcelInfoFieldNumber = 26;
  const ::proto::AvatarExcelInfo& excel_info() const;
  ::proto::AvatarExcelInfo* mutable_excel_info();
  ::proto::AvatarExcelInfo* release_excel_info();
  void set_allocated_excel_info(::proto::AvatarExcelInfo* excel_info);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 life_state = 4;
  void clear_life_state();
  static const int kLifeStateFieldNumber = 4;
  ::google::protobuf::uint32 life_state() const;
  void set_life_state(::google::protobuf::uint32 value);

  // uint32 skill_depot_id = 11;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 11;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // uint32 core_proud_skill_level = 13;
  void clear_core_proud_skill_level();
  static const int kCoreProudSkillLevelFieldNumber = 13;
  ::google::protobuf::uint32 core_proud_skill_level() const;
  void set_core_proud_skill_level(::google::protobuf::uint32 value);

  // .proto.AvatarExpeditionState expedition_state = 16;
  void clear_expedition_state();
  static const int kExpeditionStateFieldNumber = 16;
  ::proto::AvatarExpeditionState expedition_state() const;
  void set_expedition_state(::proto::AvatarExpeditionState value);

  // bool is_focus = 18;
  void clear_is_focus();
  static const int kIsFocusFieldNumber = 18;
  bool is_focus() const;
  void set_is_focus(bool value);

  // uint32 avatar_type = 19;
  void clear_avatar_type();
  static const int kAvatarTypeFieldNumber = 19;
  ::google::protobuf::uint32 avatar_type() const;
  void set_avatar_type(::google::protobuf::uint32 value);

  // uint32 wearing_flycloak_id = 21;
  void clear_wearing_flycloak_id();
  static const int kWearingFlycloakIdFieldNumber = 21;
  ::google::protobuf::uint32 wearing_flycloak_id() const;
  void set_wearing_flycloak_id(::google::protobuf::uint32 value);

  // uint32 born_time = 23;
  void clear_born_time();
  static const int kBornTimeFieldNumber = 23;
  ::google::protobuf::uint32 born_time() const;
  void set_born_time(::google::protobuf::uint32 value);

  // uint32 costume_id = 25;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 25;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // uint32 anim_hash = 27;
  void clear_anim_hash();
  static const int kAnimHashFieldNumber = 27;
  ::google::protobuf::uint32 anim_hash() const;
  void set_anim_hash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarInfo_PropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarInfo_PropMapEntry();
    AvatarInfo_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_list_;
  mutable int _equip_guid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talent_id_list_;
  mutable int _talent_id_list_cached_byte_size_;
  public:
  class AvatarInfo_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    AvatarInfo_FightPropMapEntry();
    AvatarInfo_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  public:
  class AvatarInfo_SkillMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_SkillMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarSkillInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_SkillMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarSkillInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarInfo_SkillMapEntry();
    AvatarInfo_SkillMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_SkillMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_SkillMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_SkillMapEntry,
      ::google::protobuf::uint32, ::proto::AvatarSkillInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > skill_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inherent_proud_skill_list_;
  mutable int _inherent_proud_skill_list_cached_byte_size_;
  public:
  class AvatarInfo_SkillLevelMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AvatarInfo_SkillLevelMapEntry();
    AvatarInfo_SkillLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_SkillLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_SkillLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_SkillLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_level_map_;
  private:
  public:
  class AvatarInfo_ProudSkillExtraLevelMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AvatarInfo_ProudSkillExtraLevelMapEntry();
    AvatarInfo_ProudSkillExtraLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_ProudSkillExtraLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_ProudSkillExtraLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > proud_skill_extra_level_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > team_resonance_list_;
  mutable int _team_resonance_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarEquipAffixInfo > equip_affix_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pending_promote_reward_list_;
  mutable int _pending_promote_reward_list_cached_byte_size_;
  ::proto::TrialAvatarInfo* trial_avatar_info_;
  ::proto::AvatarFetterInfo* fetter_info_;
  ::proto::AvatarExcelInfo* excel_info_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 life_state_;
  ::google::protobuf::uint32 skill_depot_id_;
  ::google::protobuf::uint32 core_proud_skill_level_;
  int expedition_state_;
  bool is_focus_;
  ::google::protobuf::uint32 avatar_type_;
  ::google::protobuf::uint32 wearing_flycloak_id_;
  ::google::protobuf::uint32 born_time_;
  ::google::protobuf::uint32 costume_id_;
  ::google::protobuf::uint32 anim_hash_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowEquip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShowEquip) */ {
 public:
  ShowEquip();
  virtual ~ShowEquip();

  ShowEquip(const ShowEquip& from);

  inline ShowEquip& operator=(const ShowEquip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowEquip(ShowEquip&& from) noexcept
    : ShowEquip() {
    *this = ::std::move(from);
  }

  inline ShowEquip& operator=(ShowEquip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowEquip& default_instance();

  enum DetailCase {
    kReliquary = 2,
    kWeapon = 3,
    DETAIL_NOT_SET = 0,
  };

  static inline const ShowEquip* internal_default_instance() {
    return reinterpret_cast<const ShowEquip*>(
               &_ShowEquip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(ShowEquip* other);
  friend void swap(ShowEquip& a, ShowEquip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowEquip* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowEquip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowEquip& from);
  void MergeFrom(const ShowEquip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowEquip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // .proto.Reliquary reliquary = 2;
  bool has_reliquary() const;
  void clear_reliquary();
  static const int kReliquaryFieldNumber = 2;
  const ::proto::Reliquary& reliquary() const;
  ::proto::Reliquary* mutable_reliquary();
  ::proto::Reliquary* release_reliquary();
  void set_allocated_reliquary(::proto::Reliquary* reliquary);

  // .proto.Weapon weapon = 3;
  bool has_weapon() const;
  void clear_weapon();
  static const int kWeaponFieldNumber = 3;
  const ::proto::Weapon& weapon() const;
  ::proto::Weapon* mutable_weapon();
  ::proto::Weapon* release_weapon();
  void set_allocated_weapon(::proto::Weapon* weapon);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.ShowEquip)
 private:
  void set_has_reliquary();
  void set_has_weapon();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::Reliquary* reliquary_;
    ::proto::Weapon* weapon_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ShowAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShowAvatarInfo) */ {
 public:
  ShowAvatarInfo();
  virtual ~ShowAvatarInfo();

  ShowAvatarInfo(const ShowAvatarInfo& from);

  inline ShowAvatarInfo& operator=(const ShowAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowAvatarInfo(ShowAvatarInfo&& from) noexcept
    : ShowAvatarInfo() {
    *this = ::std::move(from);
  }

  inline ShowAvatarInfo& operator=(ShowAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowAvatarInfo& default_instance();

  static inline const ShowAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const ShowAvatarInfo*>(
               &_ShowAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(ShowAvatarInfo* other);
  friend void swap(ShowAvatarInfo& a, ShowAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowAvatarInfo& from);
  void MergeFrom(const ShowAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 2;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // repeated uint32 talent_id_list = 3;
  int talent_id_list_size() const;
  void clear_talent_id_list();
  static const int kTalentIdListFieldNumber = 3;
  ::google::protobuf::uint32 talent_id_list(int index) const;
  void set_talent_id_list(int index, ::google::protobuf::uint32 value);
  void add_talent_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      talent_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_talent_id_list();

  // map<uint32, float> fight_prop_map = 4;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // repeated uint32 inherent_proud_skill_list = 7;
  int inherent_proud_skill_list_size() const;
  void clear_inherent_proud_skill_list();
  static const int kInherentProudSkillListFieldNumber = 7;
  ::google::protobuf::uint32 inherent_proud_skill_list(int index) const;
  void set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value);
  void add_inherent_proud_skill_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inherent_proud_skill_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inherent_proud_skill_list();

  // map<uint32, uint32> skill_level_map = 8;
  int skill_level_map_size() const;
  void clear_skill_level_map();
  static const int kSkillLevelMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_level_map();

  // map<uint32, uint32> proud_skill_extra_level_map = 9;
  int proud_skill_extra_level_map_size() const;
  void clear_proud_skill_extra_level_map();
  static const int kProudSkillExtraLevelMapFieldNumber = 9;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      proud_skill_extra_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_proud_skill_extra_level_map();

  // repeated .proto.ShowEquip equip_list = 10;
  int equip_list_size() const;
  void clear_equip_list();
  static const int kEquipListFieldNumber = 10;
  const ::proto::ShowEquip& equip_list(int index) const;
  ::proto::ShowEquip* mutable_equip_list(int index);
  ::proto::ShowEquip* add_equip_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ShowEquip >*
      mutable_equip_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ShowEquip >&
      equip_list() const;

  // .proto.AvatarFetterInfo fetter_info = 11;
  bool has_fetter_info() const;
  void clear_fetter_info();
  static const int kFetterInfoFieldNumber = 11;
  const ::proto::AvatarFetterInfo& fetter_info() const;
  ::proto::AvatarFetterInfo* mutable_fetter_info();
  ::proto::AvatarFetterInfo* release_fetter_info();
  void set_allocated_fetter_info(::proto::AvatarFetterInfo* fetter_info);

  // .proto.AvatarExcelInfo excel_info = 13;
  bool has_excel_info() const;
  void clear_excel_info();
  static const int kExcelInfoFieldNumber = 13;
  const ::proto::AvatarExcelInfo& excel_info() const;
  ::proto::AvatarExcelInfo* mutable_excel_info();
  ::proto::AvatarExcelInfo* release_excel_info();
  void set_allocated_excel_info(::proto::AvatarExcelInfo* excel_info);

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 skill_depot_id = 5;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 5;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // uint32 core_proud_skill_level = 6;
  void clear_core_proud_skill_level();
  static const int kCoreProudSkillLevelFieldNumber = 6;
  ::google::protobuf::uint32 core_proud_skill_level() const;
  void set_core_proud_skill_level(::google::protobuf::uint32 value);

  // uint32 costume_id = 12;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 12;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ShowAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ShowAvatarInfo_PropMapEntry : public ::google::protobuf::internal::MapEntry<ShowAvatarInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ShowAvatarInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ShowAvatarInfo_PropMapEntry();
    ShowAvatarInfo_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ShowAvatarInfo_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ShowAvatarInfo_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ShowAvatarInfo_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talent_id_list_;
  mutable int _talent_id_list_cached_byte_size_;
  public:
  class ShowAvatarInfo_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<ShowAvatarInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ShowAvatarInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    ShowAvatarInfo_FightPropMapEntry();
    ShowAvatarInfo_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ShowAvatarInfo_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ShowAvatarInfo_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ShowAvatarInfo_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inherent_proud_skill_list_;
  mutable int _inherent_proud_skill_list_cached_byte_size_;
  public:
  class ShowAvatarInfo_SkillLevelMapEntry : public ::google::protobuf::internal::MapEntry<ShowAvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ShowAvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    ShowAvatarInfo_SkillLevelMapEntry();
    ShowAvatarInfo_SkillLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ShowAvatarInfo_SkillLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ShowAvatarInfo_SkillLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ShowAvatarInfo_SkillLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_level_map_;
  private:
  public:
  class ShowAvatarInfo_ProudSkillExtraLevelMapEntry : public ::google::protobuf::internal::MapEntry<ShowAvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ShowAvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    ShowAvatarInfo_ProudSkillExtraLevelMapEntry();
    ShowAvatarInfo_ProudSkillExtraLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ShowAvatarInfo_ProudSkillExtraLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ShowAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ShowAvatarInfo_ProudSkillExtraLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > proud_skill_extra_level_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::ShowEquip > equip_list_;
  ::proto::AvatarFetterInfo* fetter_info_;
  ::proto::AvatarExcelInfo* excel_info_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 skill_depot_id_;
  ::google::protobuf::uint32 core_proud_skill_level_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Quest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Quest) */ {
 public:
  Quest();
  virtual ~Quest();

  Quest(const Quest& from);

  inline Quest& operator=(const Quest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quest(Quest&& from) noexcept
    : Quest() {
    *this = ::std::move(from);
  }

  inline Quest& operator=(Quest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest& default_instance();

  static inline const Quest* internal_default_instance() {
    return reinterpret_cast<const Quest*>(
               &_Quest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(Quest* other);
  friend void swap(Quest& a, Quest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quest* New() const PROTOBUF_FINAL { return New(NULL); }

  Quest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Quest& from);
  void MergeFrom(const Quest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Quest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 lacked_npc_list = 10;
  int lacked_npc_list_size() const;
  void clear_lacked_npc_list();
  static const int kLackedNpcListFieldNumber = 10;
  ::google::protobuf::uint32 lacked_npc_list(int index) const;
  void set_lacked_npc_list(int index, ::google::protobuf::uint32 value);
  void add_lacked_npc_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lacked_npc_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lacked_npc_list();

  // repeated uint32 finish_progress_list = 11;
  int finish_progress_list_size() const;
  void clear_finish_progress_list();
  static const int kFinishProgressListFieldNumber = 11;
  ::google::protobuf::uint32 finish_progress_list(int index) const;
  void set_finish_progress_list(int index, ::google::protobuf::uint32 value);
  void add_finish_progress_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finish_progress_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finish_progress_list();

  // repeated uint32 fail_progress_list = 12;
  int fail_progress_list_size() const;
  void clear_fail_progress_list();
  static const int kFailProgressListFieldNumber = 12;
  ::google::protobuf::uint32 fail_progress_list(int index) const;
  void set_fail_progress_list(int index, ::google::protobuf::uint32 value);
  void add_fail_progress_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fail_progress_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fail_progress_list();

  // map<uint32, uint32> lacked_npc_map = 13;
  int lacked_npc_map_size() const;
  void clear_lacked_npc_map();
  static const int kLackedNpcMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      lacked_npc_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_lacked_npc_map();

  // repeated uint32 lacked_place_list = 14;
  int lacked_place_list_size() const;
  void clear_lacked_place_list();
  static const int kLackedPlaceListFieldNumber = 14;
  ::google::protobuf::uint32 lacked_place_list(int index) const;
  void set_lacked_place_list(int index, ::google::protobuf::uint32 value);
  void add_lacked_place_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lacked_place_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lacked_place_list();

  // map<uint32, uint32> lacked_place_map = 15;
  int lacked_place_map_size() const;
  void clear_lacked_place_map();
  static const int kLackedPlaceMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      lacked_place_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_lacked_place_map();

  // uint32 quest_id = 1;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // uint32 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // uint32 start_time = 4;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // bool is_random = 5;
  void clear_is_random();
  static const int kIsRandomFieldNumber = 5;
  bool is_random() const;
  void set_is_random(bool value);

  // uint32 parent_quest_id = 6;
  void clear_parent_quest_id();
  static const int kParentQuestIdFieldNumber = 6;
  ::google::protobuf::uint32 parent_quest_id() const;
  void set_parent_quest_id(::google::protobuf::uint32 value);

  // uint32 quest_config_id = 7;
  void clear_quest_config_id();
  static const int kQuestConfigIdFieldNumber = 7;
  ::google::protobuf::uint32 quest_config_id() const;
  void set_quest_config_id(::google::protobuf::uint32 value);

  // uint32 start_game_time = 8;
  void clear_start_game_time();
  static const int kStartGameTimeFieldNumber = 8;
  ::google::protobuf::uint32 start_game_time() const;
  void set_start_game_time(::google::protobuf::uint32 value);

  // uint32 accept_time = 9;
  void clear_accept_time();
  static const int kAcceptTimeFieldNumber = 9;
  ::google::protobuf::uint32 accept_time() const;
  void set_accept_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Quest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lacked_npc_list_;
  mutable int _lacked_npc_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finish_progress_list_;
  mutable int _finish_progress_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fail_progress_list_;
  mutable int _fail_progress_list_cached_byte_size_;
  public:
  class Quest_LackedNpcMapEntry : public ::google::protobuf::internal::MapEntry<Quest_LackedNpcMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Quest_LackedNpcMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    Quest_LackedNpcMapEntry();
    Quest_LackedNpcMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Quest_LackedNpcMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Quest_LackedNpcMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Quest_LackedNpcMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > lacked_npc_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lacked_place_list_;
  mutable int _lacked_place_list_cached_byte_size_;
  public:
  class Quest_LackedPlaceMapEntry : public ::google::protobuf::internal::MapEntry<Quest_LackedPlaceMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Quest_LackedPlaceMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    Quest_LackedPlaceMapEntry();
    Quest_LackedPlaceMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Quest_LackedPlaceMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Quest_LackedPlaceMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Quest_LackedPlaceMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > lacked_place_map_;
  private:
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 start_time_;
  bool is_random_;
  ::google::protobuf::uint32 parent_quest_id_;
  ::google::protobuf::uint32 quest_config_id_;
  ::google::protobuf::uint32 start_game_time_;
  ::google::protobuf::uint32 accept_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NpcPositionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NpcPositionInfo) */ {
 public:
  NpcPositionInfo();
  virtual ~NpcPositionInfo();

  NpcPositionInfo(const NpcPositionInfo& from);

  inline NpcPositionInfo& operator=(const NpcPositionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NpcPositionInfo(NpcPositionInfo&& from) noexcept
    : NpcPositionInfo() {
    *this = ::std::move(from);
  }

  inline NpcPositionInfo& operator=(NpcPositionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcPositionInfo& default_instance();

  static inline const NpcPositionInfo* internal_default_instance() {
    return reinterpret_cast<const NpcPositionInfo*>(
               &_NpcPositionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(NpcPositionInfo* other);
  friend void swap(NpcPositionInfo& a, NpcPositionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NpcPositionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  NpcPositionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NpcPositionInfo& from);
  void MergeFrom(const NpcPositionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NpcPositionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 npc_id = 1;
  void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  ::google::protobuf::uint32 npc_id() const;
  void set_npc_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.NpcPositionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 npc_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailTextContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MailTextContent) */ {
 public:
  MailTextContent();
  virtual ~MailTextContent();

  MailTextContent(const MailTextContent& from);

  inline MailTextContent& operator=(const MailTextContent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailTextContent(MailTextContent&& from) noexcept
    : MailTextContent() {
    *this = ::std::move(from);
  }

  inline MailTextContent& operator=(MailTextContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailTextContent& default_instance();

  static inline const MailTextContent* internal_default_instance() {
    return reinterpret_cast<const MailTextContent*>(
               &_MailTextContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(MailTextContent* other);
  friend void swap(MailTextContent& a, MailTextContent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailTextContent* New() const PROTOBUF_FINAL { return New(NULL); }

  MailTextContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailTextContent& from);
  void MergeFrom(const MailTextContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailTextContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // string sender = 3;
  void clear_sender();
  static const int kSenderFieldNumber = 3;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // @@protoc_insertion_point(class_scope:proto.MailTextContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MailItem) */ {
 public:
  MailItem();
  virtual ~MailItem();

  MailItem(const MailItem& from);

  inline MailItem& operator=(const MailItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailItem(MailItem&& from) noexcept
    : MailItem() {
    *this = ::std::move(from);
  }

  inline MailItem& operator=(MailItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailItem& default_instance();

  static inline const MailItem* internal_default_instance() {
    return reinterpret_cast<const MailItem*>(
               &_MailItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(MailItem* other);
  friend void swap(MailItem& a, MailItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MailItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailItem& from);
  void MergeFrom(const MailItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.EquipParam equip_param = 1;
  bool has_equip_param() const;
  void clear_equip_param();
  static const int kEquipParamFieldNumber = 1;
  const ::proto::EquipParam& equip_param() const;
  ::proto::EquipParam* mutable_equip_param();
  ::proto::EquipParam* release_equip_param();
  void set_allocated_equip_param(::proto::EquipParam* equip_param);

  // .proto.MaterialDeleteInfo delete_info = 2;
  bool has_delete_info() const;
  void clear_delete_info();
  static const int kDeleteInfoFieldNumber = 2;
  const ::proto::MaterialDeleteInfo& delete_info() const;
  ::proto::MaterialDeleteInfo* mutable_delete_info();
  ::proto::MaterialDeleteInfo* release_delete_info();
  void set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info);

  // @@protoc_insertion_point(class_scope:proto.MailItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EquipParam* equip_param_;
  ::proto::MaterialDeleteInfo* delete_info_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MailData) */ {
 public:
  MailData();
  virtual ~MailData();

  MailData(const MailData& from);

  inline MailData& operator=(const MailData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailData(MailData&& from) noexcept
    : MailData() {
    *this = ::std::move(from);
  }

  inline MailData& operator=(MailData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailData& default_instance();

  static inline const MailData* internal_default_instance() {
    return reinterpret_cast<const MailData*>(
               &_MailData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(MailData* other);
  friend void swap(MailData& a, MailData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailData* New() const PROTOBUF_FINAL { return New(NULL); }

  MailData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailData& from);
  void MergeFrom(const MailData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MailItem item_list = 7;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 7;
  const ::proto::MailItem& item_list(int index) const;
  ::proto::MailItem* mutable_item_list(int index);
  ::proto::MailItem* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MailItem >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MailItem >&
      item_list() const;

  // repeated string argument_list = 14;
  int argument_list_size() const;
  void clear_argument_list();
  static const int kArgumentListFieldNumber = 14;
  const ::std::string& argument_list(int index) const;
  ::std::string* mutable_argument_list(int index);
  void set_argument_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_argument_list(int index, ::std::string&& value);
  #endif
  void set_argument_list(int index, const char* value);
  void set_argument_list(int index, const char* value, size_t size);
  ::std::string* add_argument_list();
  void add_argument_list(const ::std::string& value);
  #if LANG_CXX11
  void add_argument_list(::std::string&& value);
  #endif
  void add_argument_list(const char* value);
  void add_argument_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& argument_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_argument_list();

  // .proto.MailTextContent mail_text_content = 4;
  bool has_mail_text_content() const;
  void clear_mail_text_content();
  static const int kMailTextContentFieldNumber = 4;
  const ::proto::MailTextContent& mail_text_content() const;
  ::proto::MailTextContent* mutable_mail_text_content();
  ::proto::MailTextContent* release_mail_text_content();
  void set_allocated_mail_text_content(::proto::MailTextContent* mail_text_content);

  // uint32 mail_id = 1;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  ::google::protobuf::uint32 mail_id() const;
  void set_mail_id(::google::protobuf::uint32 value);

  // uint32 send_time = 8;
  void clear_send_time();
  static const int kSendTimeFieldNumber = 8;
  ::google::protobuf::uint32 send_time() const;
  void set_send_time(::google::protobuf::uint32 value);

  // uint32 expire_time = 9;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 9;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // uint32 importance = 10;
  void clear_importance();
  static const int kImportanceFieldNumber = 10;
  ::google::protobuf::uint32 importance() const;
  void set_importance(::google::protobuf::uint32 value);

  // bool is_read = 11;
  void clear_is_read();
  static const int kIsReadFieldNumber = 11;
  bool is_read() const;
  void set_is_read(bool value);

  // bool is_attachment_got = 12;
  void clear_is_attachment_got();
  static const int kIsAttachmentGotFieldNumber = 12;
  bool is_attachment_got() const;
  void set_is_attachment_got(bool value);

  // uint32 config_id = 13;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 13;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // .proto.MailCollectState collect_state = 15;
  void clear_collect_state();
  static const int kCollectStateFieldNumber = 15;
  ::proto::MailCollectState collect_state() const;
  void set_collect_state(::proto::MailCollectState value);

  // @@protoc_insertion_point(class_scope:proto.MailData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MailItem > item_list_;
  ::google::protobuf::RepeatedPtrField< ::std::string> argument_list_;
  ::proto::MailTextContent* mail_text_content_;
  ::google::protobuf::uint32 mail_id_;
  ::google::protobuf::uint32 send_time_;
  ::google::protobuf::uint32 expire_time_;
  ::google::protobuf::uint32 importance_;
  bool is_read_;
  bool is_attachment_got_;
  ::google::protobuf::uint32 config_id_;
  int collect_state_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnlinePlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OnlinePlayerInfo) */ {
 public:
  OnlinePlayerInfo();
  virtual ~OnlinePlayerInfo();

  OnlinePlayerInfo(const OnlinePlayerInfo& from);

  inline OnlinePlayerInfo& operator=(const OnlinePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnlinePlayerInfo(OnlinePlayerInfo&& from) noexcept
    : OnlinePlayerInfo() {
    *this = ::std::move(from);
  }

  inline OnlinePlayerInfo& operator=(OnlinePlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlinePlayerInfo& default_instance();

  static inline const OnlinePlayerInfo* internal_default_instance() {
    return reinterpret_cast<const OnlinePlayerInfo*>(
               &_OnlinePlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(OnlinePlayerInfo* other);
  friend void swap(OnlinePlayerInfo& a, OnlinePlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnlinePlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  OnlinePlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnlinePlayerInfo& from);
  void MergeFrom(const OnlinePlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnlinePlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 blacklist_uid_list = 10;
  int blacklist_uid_list_size() const;
  void clear_blacklist_uid_list();
  static const int kBlacklistUidListFieldNumber = 10;
  ::google::protobuf::uint32 blacklist_uid_list(int index) const;
  void set_blacklist_uid_list(int index, ::google::protobuf::uint32 value);
  void add_blacklist_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      blacklist_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_blacklist_uid_list();

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string online_id = 8;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 8;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string signature = 11;
  void clear_signature();
  static const int kSignatureFieldNumber = 11;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // string psn_id = 13;
  void clear_psn_id();
  static const int kPsnIdFieldNumber = 13;
  const ::std::string& psn_id() const;
  void set_psn_id(const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id(::std::string&& value);
  #endif
  void set_psn_id(const char* value);
  void set_psn_id(const char* value, size_t size);
  ::std::string* mutable_psn_id();
  ::std::string* release_psn_id();
  void set_allocated_psn_id(::std::string* psn_id);

  // .proto.ProfilePicture profile_picture = 12;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 12;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 player_level = 3;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 3;
  ::google::protobuf::uint32 player_level() const;
  void set_player_level(::google::protobuf::uint32 value);

  // uint32 avatar_id = 4;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // .proto.MpSettingType mp_setting_type = 5;
  void clear_mp_setting_type();
  static const int kMpSettingTypeFieldNumber = 5;
  ::proto::MpSettingType mp_setting_type() const;
  void set_mp_setting_type(::proto::MpSettingType value);

  // uint32 cur_player_num_in_world = 6;
  void clear_cur_player_num_in_world();
  static const int kCurPlayerNumInWorldFieldNumber = 6;
  ::google::protobuf::uint32 cur_player_num_in_world() const;
  void set_cur_player_num_in_world(::google::protobuf::uint32 value);

  // uint32 world_level = 7;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 7;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // uint32 name_card_id = 9;
  void clear_name_card_id();
  static const int kNameCardIdFieldNumber = 9;
  ::google::protobuf::uint32 name_card_id() const;
  void set_name_card_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OnlinePlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > blacklist_uid_list_;
  mutable int _blacklist_uid_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr psn_id_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 player_level_;
  ::google::protobuf::uint32 avatar_id_;
  int mp_setting_type_;
  ::google::protobuf::uint32 cur_player_num_in_world_;
  ::google::protobuf::uint32 world_level_;
  ::google::protobuf::uint32 name_card_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Birthday : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Birthday) */ {
 public:
  Birthday();
  virtual ~Birthday();

  Birthday(const Birthday& from);

  inline Birthday& operator=(const Birthday& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Birthday(Birthday&& from) noexcept
    : Birthday() {
    *this = ::std::move(from);
  }

  inline Birthday& operator=(Birthday&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Birthday& default_instance();

  static inline const Birthday* internal_default_instance() {
    return reinterpret_cast<const Birthday*>(
               &_Birthday_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(Birthday* other);
  friend void swap(Birthday& a, Birthday& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Birthday* New() const PROTOBUF_FINAL { return New(NULL); }

  Birthday* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Birthday& from);
  void MergeFrom(const Birthday& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Birthday* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 month = 1;
  void clear_month();
  static const int kMonthFieldNumber = 1;
  ::google::protobuf::uint32 month() const;
  void set_month(::google::protobuf::uint32 value);

  // uint32 day = 2;
  void clear_day();
  static const int kDayFieldNumber = 2;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Birthday)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 day_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapMarkPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MapMarkPoint) */ {
 public:
  MapMarkPoint();
  virtual ~MapMarkPoint();

  MapMarkPoint(const MapMarkPoint& from);

  inline MapMarkPoint& operator=(const MapMarkPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapMarkPoint(MapMarkPoint&& from) noexcept
    : MapMarkPoint() {
    *this = ::std::move(from);
  }

  inline MapMarkPoint& operator=(MapMarkPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapMarkPoint& default_instance();

  static inline const MapMarkPoint* internal_default_instance() {
    return reinterpret_cast<const MapMarkPoint*>(
               &_MapMarkPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(MapMarkPoint* other);
  friend void swap(MapMarkPoint& a, MapMarkPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapMarkPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  MapMarkPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapMarkPoint& from);
  void MergeFrom(const MapMarkPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapMarkPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .proto.Vector pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // .proto.MapMarkPointType point_type = 4;
  void clear_point_type();
  static const int kPointTypeFieldNumber = 4;
  ::proto::MapMarkPointType point_type() const;
  void set_point_type(::proto::MapMarkPointType value);

  // uint32 monster_id = 5;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 5;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // .proto.MapMarkFromType from_type = 6;
  void clear_from_type();
  static const int kFromTypeFieldNumber = 6;
  ::proto::MapMarkFromType from_type() const;
  void set_from_type(::proto::MapMarkFromType value);

  // uint32 quest_id = 7;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 7;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MapMarkPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 scene_id_;
  int point_type_;
  ::google::protobuf::uint32 monster_id_;
  int from_type_;
  ::google::protobuf::uint32 quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveWaterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveWaterInfo) */ {
 public:
  MassiveWaterInfo();
  virtual ~MassiveWaterInfo();

  MassiveWaterInfo(const MassiveWaterInfo& from);

  inline MassiveWaterInfo& operator=(const MassiveWaterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveWaterInfo(MassiveWaterInfo&& from) noexcept
    : MassiveWaterInfo() {
    *this = ::std::move(from);
  }

  inline MassiveWaterInfo& operator=(MassiveWaterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveWaterInfo& default_instance();

  static inline const MassiveWaterInfo* internal_default_instance() {
    return reinterpret_cast<const MassiveWaterInfo*>(
               &_MassiveWaterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(MassiveWaterInfo* other);
  friend void swap(MassiveWaterInfo& a, MassiveWaterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveWaterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveWaterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveWaterInfo& from);
  void MergeFrom(const MassiveWaterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveWaterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveWaterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveGrassInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveGrassInfo) */ {
 public:
  MassiveGrassInfo();
  virtual ~MassiveGrassInfo();

  MassiveGrassInfo(const MassiveGrassInfo& from);

  inline MassiveGrassInfo& operator=(const MassiveGrassInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveGrassInfo(MassiveGrassInfo&& from) noexcept
    : MassiveGrassInfo() {
    *this = ::std::move(from);
  }

  inline MassiveGrassInfo& operator=(MassiveGrassInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveGrassInfo& default_instance();

  static inline const MassiveGrassInfo* internal_default_instance() {
    return reinterpret_cast<const MassiveGrassInfo*>(
               &_MassiveGrassInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(MassiveGrassInfo* other);
  friend void swap(MassiveGrassInfo& a, MassiveGrassInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveGrassInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveGrassInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveGrassInfo& from);
  void MergeFrom(const MassiveGrassInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveGrassInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 2;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 2;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  const ::proto::Vector& size() const;
  ::proto::Vector* mutable_size();
  ::proto::Vector* release_size();
  void set_allocated_size(::proto::Vector* size);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveGrassInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  ::proto::Vector* size_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveBoxInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveBoxInfo) */ {
 public:
  MassiveBoxInfo();
  virtual ~MassiveBoxInfo();

  MassiveBoxInfo(const MassiveBoxInfo& from);

  inline MassiveBoxInfo& operator=(const MassiveBoxInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveBoxInfo(MassiveBoxInfo&& from) noexcept
    : MassiveBoxInfo() {
    *this = ::std::move(from);
  }

  inline MassiveBoxInfo& operator=(MassiveBoxInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveBoxInfo& default_instance();

  static inline const MassiveBoxInfo* internal_default_instance() {
    return reinterpret_cast<const MassiveBoxInfo*>(
               &_MassiveBoxInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(MassiveBoxInfo* other);
  friend void swap(MassiveBoxInfo& a, MassiveBoxInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveBoxInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveBoxInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveBoxInfo& from);
  void MergeFrom(const MassiveBoxInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveBoxInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 3;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 3;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector extents = 4;
  bool has_extents() const;
  void clear_extents();
  static const int kExtentsFieldNumber = 4;
  const ::proto::Vector& extents() const;
  ::proto::Vector* mutable_extents();
  ::proto::Vector* release_extents();
  void set_allocated_extents(::proto::Vector* extents);

  // .proto.Vector up = 5;
  bool has_up() const;
  void clear_up();
  static const int kUpFieldNumber = 5;
  const ::proto::Vector& up() const;
  ::proto::Vector* mutable_up();
  ::proto::Vector* release_up();
  void set_allocated_up(::proto::Vector* up);

  // .proto.Vector forward = 6;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 6;
  const ::proto::Vector& forward() const;
  ::proto::Vector* mutable_forward();
  ::proto::Vector* release_forward();
  void set_allocated_forward(::proto::Vector* forward);

  // .proto.Vector right = 7;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 7;
  const ::proto::Vector& right() const;
  ::proto::Vector* mutable_right();
  ::proto::Vector* release_right();
  void set_allocated_right(::proto::Vector* right);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // uint32 configId = 2;
  void clear_configid();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 configid() const;
  void set_configid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveBoxInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  ::proto::Vector* extents_;
  ::proto::Vector* up_;
  ::proto::Vector* forward_;
  ::proto::Vector* right_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::uint32 configid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientMassiveEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientMassiveEntity) */ {
 public:
  ClientMassiveEntity();
  virtual ~ClientMassiveEntity();

  ClientMassiveEntity(const ClientMassiveEntity& from);

  inline ClientMassiveEntity& operator=(const ClientMassiveEntity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientMassiveEntity(ClientMassiveEntity&& from) noexcept
    : ClientMassiveEntity() {
    *this = ::std::move(from);
  }

  inline ClientMassiveEntity& operator=(ClientMassiveEntity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMassiveEntity& default_instance();

  enum EntityInfoCase {
    kWaterInfo = 4,
    kGrassInfo = 5,
    kBoxInfo = 6,
    ENTITY_INFO_NOT_SET = 0,
  };

  static inline const ClientMassiveEntity* internal_default_instance() {
    return reinterpret_cast<const ClientMassiveEntity*>(
               &_ClientMassiveEntity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(ClientMassiveEntity* other);
  friend void swap(ClientMassiveEntity& a, ClientMassiveEntity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientMassiveEntity* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientMassiveEntity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientMassiveEntity& from);
  void MergeFrom(const ClientMassiveEntity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientMassiveEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::google::protobuf::uint32 entity_type() const;
  void set_entity_type(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // int64 obj_id = 3;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 3;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // .proto.MassiveWaterInfo water_info = 4;
  bool has_water_info() const;
  void clear_water_info();
  static const int kWaterInfoFieldNumber = 4;
  const ::proto::MassiveWaterInfo& water_info() const;
  ::proto::MassiveWaterInfo* mutable_water_info();
  ::proto::MassiveWaterInfo* release_water_info();
  void set_allocated_water_info(::proto::MassiveWaterInfo* water_info);

  // .proto.MassiveGrassInfo grass_info = 5;
  bool has_grass_info() const;
  void clear_grass_info();
  static const int kGrassInfoFieldNumber = 5;
  const ::proto::MassiveGrassInfo& grass_info() const;
  ::proto::MassiveGrassInfo* mutable_grass_info();
  ::proto::MassiveGrassInfo* release_grass_info();
  void set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info);

  // .proto.MassiveBoxInfo box_info = 6;
  bool has_box_info() const;
  void clear_box_info();
  static const int kBoxInfoFieldNumber = 6;
  const ::proto::MassiveBoxInfo& box_info() const;
  ::proto::MassiveBoxInfo* mutable_box_info();
  ::proto::MassiveBoxInfo* release_box_info();
  void set_allocated_box_info(::proto::MassiveBoxInfo* box_info);

  EntityInfoCase entity_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.ClientMassiveEntity)
 private:
  void set_has_water_info();
  void set_has_grass_info();
  void set_has_box_info();

  inline bool has_entity_info() const;
  void clear_entity_info();
  inline void clear_has_entity_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_type_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::int64 obj_id_;
  union EntityInfoUnion {
    EntityInfoUnion() {}
    ::proto::MassiveWaterInfo* water_info_;
    ::proto::MassiveGrassInfo* grass_info_;
    ::proto::MassiveBoxInfo* box_info_;
  } entity_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShapeSphere : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShapeSphere) */ {
 public:
  ShapeSphere();
  virtual ~ShapeSphere();

  ShapeSphere(const ShapeSphere& from);

  inline ShapeSphere& operator=(const ShapeSphere& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShapeSphere(ShapeSphere&& from) noexcept
    : ShapeSphere() {
    *this = ::std::move(from);
  }

  inline ShapeSphere& operator=(ShapeSphere&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShapeSphere& default_instance();

  static inline const ShapeSphere* internal_default_instance() {
    return reinterpret_cast<const ShapeSphere*>(
               &_ShapeSphere_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(ShapeSphere* other);
  friend void swap(ShapeSphere& a, ShapeSphere& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShapeSphere* New() const PROTOBUF_FINAL { return New(NULL); }

  ShapeSphere* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShapeSphere& from);
  void MergeFrom(const ShapeSphere& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShapeSphere* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 1;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 1;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // float radius = 2;
  void clear_radius();
  static const int kRadiusFieldNumber = 2;
  float radius() const;
  void set_radius(float value);

  // @@protoc_insertion_point(class_scope:proto.ShapeSphere)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  float radius_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShapeBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShapeBox) */ {
 public:
  ShapeBox();
  virtual ~ShapeBox();

  ShapeBox(const ShapeBox& from);

  inline ShapeBox& operator=(const ShapeBox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShapeBox(ShapeBox&& from) noexcept
    : ShapeBox() {
    *this = ::std::move(from);
  }

  inline ShapeBox& operator=(ShapeBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShapeBox& default_instance();

  static inline const ShapeBox* internal_default_instance() {
    return reinterpret_cast<const ShapeBox*>(
               &_ShapeBox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(ShapeBox* other);
  friend void swap(ShapeBox& a, ShapeBox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShapeBox* New() const PROTOBUF_FINAL { return New(NULL); }

  ShapeBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShapeBox& from);
  void MergeFrom(const ShapeBox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShapeBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 1;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 1;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector axis0 = 2;
  bool has_axis0() const;
  void clear_axis0();
  static const int kAxis0FieldNumber = 2;
  const ::proto::Vector& axis0() const;
  ::proto::Vector* mutable_axis0();
  ::proto::Vector* release_axis0();
  void set_allocated_axis0(::proto::Vector* axis0);

  // .proto.Vector axis1 = 3;
  bool has_axis1() const;
  void clear_axis1();
  static const int kAxis1FieldNumber = 3;
  const ::proto::Vector& axis1() const;
  ::proto::Vector* mutable_axis1();
  ::proto::Vector* release_axis1();
  void set_allocated_axis1(::proto::Vector* axis1);

  // .proto.Vector axis2 = 4;
  bool has_axis2() const;
  void clear_axis2();
  static const int kAxis2FieldNumber = 4;
  const ::proto::Vector& axis2() const;
  ::proto::Vector* mutable_axis2();
  ::proto::Vector* release_axis2();
  void set_allocated_axis2(::proto::Vector* axis2);

  // .proto.Vector extents = 5;
  bool has_extents() const;
  void clear_extents();
  static const int kExtentsFieldNumber = 5;
  const ::proto::Vector& extents() const;
  ::proto::Vector* mutable_extents();
  ::proto::Vector* release_extents();
  void set_allocated_extents(::proto::Vector* extents);

  // @@protoc_insertion_point(class_scope:proto.ShapeBox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  ::proto::Vector* axis0_;
  ::proto::Vector* axis1_;
  ::proto::Vector* axis2_;
  ::proto::Vector* extents_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerMassiveEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerMassiveEntity) */ {
 public:
  ServerMassiveEntity();
  virtual ~ServerMassiveEntity();

  ServerMassiveEntity(const ServerMassiveEntity& from);

  inline ServerMassiveEntity& operator=(const ServerMassiveEntity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerMassiveEntity(ServerMassiveEntity&& from) noexcept
    : ServerMassiveEntity() {
    *this = ::std::move(from);
  }

  inline ServerMassiveEntity& operator=(ServerMassiveEntity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerMassiveEntity& default_instance();

  enum EntityInfoCase {
    kWaterInfo = 6,
    kGrassInfo = 7,
    kBoxInfo = 8,
    ENTITY_INFO_NOT_SET = 0,
  };

  static inline const ServerMassiveEntity* internal_default_instance() {
    return reinterpret_cast<const ServerMassiveEntity*>(
               &_ServerMassiveEntity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(ServerMassiveEntity* other);
  friend void swap(ServerMassiveEntity& a, ServerMassiveEntity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerMassiveEntity* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerMassiveEntity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerMassiveEntity& from);
  void MergeFrom(const ServerMassiveEntity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerMassiveEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::google::protobuf::uint32 entity_type() const;
  void set_entity_type(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 runtime_id = 3;
  void clear_runtime_id();
  static const int kRuntimeIdFieldNumber = 3;
  ::google::protobuf::uint32 runtime_id() const;
  void set_runtime_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 4;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 4;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // int64 obj_id = 5;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 5;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // .proto.MassiveWaterInfo water_info = 6;
  bool has_water_info() const;
  void clear_water_info();
  static const int kWaterInfoFieldNumber = 6;
  const ::proto::MassiveWaterInfo& water_info() const;
  ::proto::MassiveWaterInfo* mutable_water_info();
  ::proto::MassiveWaterInfo* release_water_info();
  void set_allocated_water_info(::proto::MassiveWaterInfo* water_info);

  // .proto.MassiveGrassInfo grass_info = 7;
  bool has_grass_info() const;
  void clear_grass_info();
  static const int kGrassInfoFieldNumber = 7;
  const ::proto::MassiveGrassInfo& grass_info() const;
  ::proto::MassiveGrassInfo* mutable_grass_info();
  ::proto::MassiveGrassInfo* release_grass_info();
  void set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info);

  // .proto.MassiveBoxInfo box_info = 8;
  bool has_box_info() const;
  void clear_box_info();
  static const int kBoxInfoFieldNumber = 8;
  const ::proto::MassiveBoxInfo& box_info() const;
  ::proto::MassiveBoxInfo* mutable_box_info();
  ::proto::MassiveBoxInfo* release_box_info();
  void set_allocated_box_info(::proto::MassiveBoxInfo* box_info);

  EntityInfoCase entity_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.ServerMassiveEntity)
 private:
  void set_has_water_info();
  void set_has_grass_info();
  void set_has_box_info();

  inline bool has_entity_info() const;
  void clear_entity_info();
  inline void clear_has_entity_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_type_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 runtime_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  ::google::protobuf::int64 obj_id_;
  union EntityInfoUnion {
    EntityInfoUnion() {}
    ::proto::MassiveWaterInfo* water_info_;
    ::proto::MassiveGrassInfo* grass_info_;
    ::proto::MassiveBoxInfo* box_info_;
  } entity_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveEntityState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveEntityState) */ {
 public:
  MassiveEntityState();
  virtual ~MassiveEntityState();

  MassiveEntityState(const MassiveEntityState& from);

  inline MassiveEntityState& operator=(const MassiveEntityState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveEntityState(MassiveEntityState&& from) noexcept
    : MassiveEntityState() {
    *this = ::std::move(from);
  }

  inline MassiveEntityState& operator=(MassiveEntityState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveEntityState& default_instance();

  static inline const MassiveEntityState* internal_default_instance() {
    return reinterpret_cast<const MassiveEntityState*>(
               &_MassiveEntityState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(MassiveEntityState* other);
  friend void swap(MassiveEntityState& a, MassiveEntityState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveEntityState* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveEntityState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveEntityState& from);
  void MergeFrom(const MassiveEntityState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveEntityState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 obj_id = 2;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 2;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // uint32 entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::google::protobuf::uint32 entity_type() const;
  void set_entity_type(::google::protobuf::uint32 value);

  // uint32 element_state = 3;
  void clear_element_state();
  static const int kElementStateFieldNumber = 3;
  ::google::protobuf::uint32 element_state() const;
  void set_element_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveEntityState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::uint32 entity_type_;
  ::google::protobuf::uint32 element_state_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityClientData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityClientData) */ {
 public:
  EntityClientData();
  virtual ~EntityClientData();

  EntityClientData(const EntityClientData& from);

  inline EntityClientData& operator=(const EntityClientData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityClientData(EntityClientData&& from) noexcept
    : EntityClientData() {
    *this = ::std::move(from);
  }

  inline EntityClientData& operator=(EntityClientData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityClientData& default_instance();

  static inline const EntityClientData* internal_default_instance() {
    return reinterpret_cast<const EntityClientData*>(
               &_EntityClientData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(EntityClientData* other);
  friend void swap(EntityClientData& a, EntityClientData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityClientData* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityClientData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityClientData& from);
  void MergeFrom(const EntityClientData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityClientData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 wind_change_scene_time = 1;
  void clear_wind_change_scene_time();
  static const int kWindChangeSceneTimeFieldNumber = 1;
  ::google::protobuf::uint32 wind_change_scene_time() const;
  void set_wind_change_scene_time(::google::protobuf::uint32 value);

  // float windmill_sync_angle = 2;
  void clear_windmill_sync_angle();
  static const int kWindmillSyncAngleFieldNumber = 2;
  float windmill_sync_angle() const;
  void set_windmill_sync_angle(float value);

  // int32 wind_change_target_level = 3;
  void clear_wind_change_target_level();
  static const int kWindChangeTargetLevelFieldNumber = 3;
  ::google::protobuf::int32 wind_change_target_level() const;
  void set_wind_change_target_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityClientData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 wind_change_scene_time_;
  float windmill_sync_angle_;
  ::google::protobuf::int32 wind_change_target_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlockInfo) */ {
 public:
  BlockInfo();
  virtual ~BlockInfo();

  BlockInfo(const BlockInfo& from);

  inline BlockInfo& operator=(const BlockInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlockInfo(BlockInfo&& from) noexcept
    : BlockInfo() {
    *this = ::std::move(from);
  }

  inline BlockInfo& operator=(BlockInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo& default_instance();

  static inline const BlockInfo* internal_default_instance() {
    return reinterpret_cast<const BlockInfo*>(
               &_BlockInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(BlockInfo* other);
  friend void swap(BlockInfo& a, BlockInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlockInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo& from);
  void MergeFrom(const BlockInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bin_data = 3;
  void clear_bin_data();
  static const int kBinDataFieldNumber = 3;
  const ::std::string& bin_data() const;
  void set_bin_data(const ::std::string& value);
  #if LANG_CXX11
  void set_bin_data(::std::string&& value);
  #endif
  void set_bin_data(const char* value);
  void set_bin_data(const void* value, size_t size);
  ::std::string* mutable_bin_data();
  ::std::string* release_bin_data();
  void set_allocated_bin_data(::std::string* bin_data);

  // uint32 block_id = 1;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // uint32 data_version = 2;
  void clear_data_version();
  static const int kDataVersionFieldNumber = 2;
  ::google::protobuf::uint32 data_version() const;
  void set_data_version(::google::protobuf::uint32 value);

  // bool is_dirty = 4;
  void clear_is_dirty();
  static const int kIsDirtyFieldNumber = 4;
  bool is_dirty() const;
  void set_is_dirty(bool value);

  // @@protoc_insertion_point(class_scope:proto.BlockInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bin_data_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 data_version_;
  bool is_dirty_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShopMcoinProduct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShopMcoinProduct) */ {
 public:
  ShopMcoinProduct();
  virtual ~ShopMcoinProduct();

  ShopMcoinProduct(const ShopMcoinProduct& from);

  inline ShopMcoinProduct& operator=(const ShopMcoinProduct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShopMcoinProduct(ShopMcoinProduct&& from) noexcept
    : ShopMcoinProduct() {
    *this = ::std::move(from);
  }

  inline ShopMcoinProduct& operator=(ShopMcoinProduct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopMcoinProduct& default_instance();

  static inline const ShopMcoinProduct* internal_default_instance() {
    return reinterpret_cast<const ShopMcoinProduct*>(
               &_ShopMcoinProduct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(ShopMcoinProduct* other);
  friend void swap(ShopMcoinProduct& a, ShopMcoinProduct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShopMcoinProduct* New() const PROTOBUF_FINAL { return New(NULL); }

  ShopMcoinProduct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShopMcoinProduct& from);
  void MergeFrom(const ShopMcoinProduct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShopMcoinProduct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string product_id = 1;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // string price_tier = 2;
  void clear_price_tier();
  static const int kPriceTierFieldNumber = 2;
  const ::std::string& price_tier() const;
  void set_price_tier(const ::std::string& value);
  #if LANG_CXX11
  void set_price_tier(::std::string&& value);
  #endif
  void set_price_tier(const char* value);
  void set_price_tier(const char* value, size_t size);
  ::std::string* mutable_price_tier();
  ::std::string* release_price_tier();
  void set_allocated_price_tier(::std::string* price_tier);

  // uint32 mcoin_base = 3;
  void clear_mcoin_base();
  static const int kMcoinBaseFieldNumber = 3;
  ::google::protobuf::uint32 mcoin_base() const;
  void set_mcoin_base(::google::protobuf::uint32 value);

  // uint32 mcoin_non_first = 4;
  void clear_mcoin_non_first();
  static const int kMcoinNonFirstFieldNumber = 4;
  ::google::protobuf::uint32 mcoin_non_first() const;
  void set_mcoin_non_first(::google::protobuf::uint32 value);

  // uint32 mcoin_first = 5;
  void clear_mcoin_first();
  static const int kMcoinFirstFieldNumber = 5;
  ::google::protobuf::uint32 mcoin_first() const;
  void set_mcoin_first(::google::protobuf::uint32 value);

  // uint32 bought_num = 6;
  void clear_bought_num();
  static const int kBoughtNumFieldNumber = 6;
  ::google::protobuf::uint32 bought_num() const;
  void set_bought_num(::google::protobuf::uint32 value);

  // bool is_audit = 7;
  void clear_is_audit();
  static const int kIsAuditFieldNumber = 7;
  bool is_audit() const;
  void set_is_audit(bool value);

  // @@protoc_insertion_point(class_scope:proto.ShopMcoinProduct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr price_tier_;
  ::google::protobuf::uint32 mcoin_base_;
  ::google::protobuf::uint32 mcoin_non_first_;
  ::google::protobuf::uint32 mcoin_first_;
  ::google::protobuf::uint32 bought_num_;
  bool is_audit_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShopCardProduct_ResinCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShopCardProduct.ResinCard) */ {
 public:
  ShopCardProduct_ResinCard();
  virtual ~ShopCardProduct_ResinCard();

  ShopCardProduct_ResinCard(const ShopCardProduct_ResinCard& from);

  inline ShopCardProduct_ResinCard& operator=(const ShopCardProduct_ResinCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShopCardProduct_ResinCard(ShopCardProduct_ResinCard&& from) noexcept
    : ShopCardProduct_ResinCard() {
    *this = ::std::move(from);
  }

  inline ShopCardProduct_ResinCard& operator=(ShopCardProduct_ResinCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopCardProduct_ResinCard& default_instance();

  static inline const ShopCardProduct_ResinCard* internal_default_instance() {
    return reinterpret_cast<const ShopCardProduct_ResinCard*>(
               &_ShopCardProduct_ResinCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(ShopCardProduct_ResinCard* other);
  friend void swap(ShopCardProduct_ResinCard& a, ShopCardProduct_ResinCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShopCardProduct_ResinCard* New() const PROTOBUF_FINAL { return New(NULL); }

  ShopCardProduct_ResinCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShopCardProduct_ResinCard& from);
  void MergeFrom(const ShopCardProduct_ResinCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShopCardProduct_ResinCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam base_item_list = 1;
  int base_item_list_size() const;
  void clear_base_item_list();
  static const int kBaseItemListFieldNumber = 1;
  const ::proto::ItemParam& base_item_list(int index) const;
  ::proto::ItemParam* mutable_base_item_list(int index);
  ::proto::ItemParam* add_base_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_base_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      base_item_list() const;

  // repeated .proto.ItemParam per_day_item_list = 2;
  int per_day_item_list_size() const;
  void clear_per_day_item_list();
  static const int kPerDayItemListFieldNumber = 2;
  const ::proto::ItemParam& per_day_item_list(int index) const;
  ::proto::ItemParam* mutable_per_day_item_list(int index);
  ::proto::ItemParam* add_per_day_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_per_day_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      per_day_item_list() const;

  // @@protoc_insertion_point(class_scope:proto.ShopCardProduct.ResinCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > base_item_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > per_day_item_list_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShopCardProduct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShopCardProduct) */ {
 public:
  ShopCardProduct();
  virtual ~ShopCardProduct();

  ShopCardProduct(const ShopCardProduct& from);

  inline ShopCardProduct& operator=(const ShopCardProduct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShopCardProduct(ShopCardProduct&& from) noexcept
    : ShopCardProduct() {
    *this = ::std::move(from);
  }

  inline ShopCardProduct& operator=(ShopCardProduct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopCardProduct& default_instance();

  enum ExtraCardDataCase {
    kResinCard = 101,
    EXTRA_CARD_DATA_NOT_SET = 0,
  };

  static inline const ShopCardProduct* internal_default_instance() {
    return reinterpret_cast<const ShopCardProduct*>(
               &_ShopCardProduct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(ShopCardProduct* other);
  friend void swap(ShopCardProduct& a, ShopCardProduct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShopCardProduct* New() const PROTOBUF_FINAL { return New(NULL); }

  ShopCardProduct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShopCardProduct& from);
  void MergeFrom(const ShopCardProduct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShopCardProduct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ShopCardProduct_ResinCard ResinCard;

  // accessors -------------------------------------------------------

  // string product_id = 1;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // string price_tier = 2;
  void clear_price_tier();
  static const int kPriceTierFieldNumber = 2;
  const ::std::string& price_tier() const;
  void set_price_tier(const ::std::string& value);
  #if LANG_CXX11
  void set_price_tier(::std::string&& value);
  #endif
  void set_price_tier(const char* value);
  void set_price_tier(const char* value, size_t size);
  ::std::string* mutable_price_tier();
  ::std::string* release_price_tier();
  void set_allocated_price_tier(::std::string* price_tier);

  // uint32 mcoin_base = 3;
  void clear_mcoin_base();
  static const int kMcoinBaseFieldNumber = 3;
  ::google::protobuf::uint32 mcoin_base() const;
  void set_mcoin_base(::google::protobuf::uint32 value);

  // uint32 hcoin_per_day = 4;
  void clear_hcoin_per_day();
  static const int kHcoinPerDayFieldNumber = 4;
  ::google::protobuf::uint32 hcoin_per_day() const;
  void set_hcoin_per_day(::google::protobuf::uint32 value);

  // uint32 days = 5;
  void clear_days();
  static const int kDaysFieldNumber = 5;
  ::google::protobuf::uint32 days() const;
  void set_days(::google::protobuf::uint32 value);

  // uint32 remain_reward_days = 6;
  void clear_remain_reward_days();
  static const int kRemainRewardDaysFieldNumber = 6;
  ::google::protobuf::uint32 remain_reward_days() const;
  void set_remain_reward_days(::google::protobuf::uint32 value);

  // uint32 card_product_type = 7;
  void clear_card_product_type();
  static const int kCardProductTypeFieldNumber = 7;
  ::google::protobuf::uint32 card_product_type() const;
  void set_card_product_type(::google::protobuf::uint32 value);

  // .proto.ShopCardProduct.ResinCard resin_card = 101;
  bool has_resin_card() const;
  void clear_resin_card();
  static const int kResinCardFieldNumber = 101;
  const ::proto::ShopCardProduct_ResinCard& resin_card() const;
  ::proto::ShopCardProduct_ResinCard* mutable_resin_card();
  ::proto::ShopCardProduct_ResinCard* release_resin_card();
  void set_allocated_resin_card(::proto::ShopCardProduct_ResinCard* resin_card);

  ExtraCardDataCase extra_card_data_case() const;
  // @@protoc_insertion_point(class_scope:proto.ShopCardProduct)
 private:
  void set_has_resin_card();

  inline bool has_extra_card_data() const;
  void clear_extra_card_data();
  inline void clear_has_extra_card_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr price_tier_;
  ::google::protobuf::uint32 mcoin_base_;
  ::google::protobuf::uint32 hcoin_per_day_;
  ::google::protobuf::uint32 days_;
  ::google::protobuf::uint32 remain_reward_days_;
  ::google::protobuf::uint32 card_product_type_;
  union ExtraCardDataUnion {
    ExtraCardDataUnion() {}
    ::proto::ShopCardProduct_ResinCard* resin_card_;
  } extra_card_data_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayProduct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayProduct) */ {
 public:
  PlayProduct();
  virtual ~PlayProduct();

  PlayProduct(const PlayProduct& from);

  inline PlayProduct& operator=(const PlayProduct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayProduct(PlayProduct&& from) noexcept
    : PlayProduct() {
    *this = ::std::move(from);
  }

  inline PlayProduct& operator=(PlayProduct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayProduct& default_instance();

  static inline const PlayProduct* internal_default_instance() {
    return reinterpret_cast<const PlayProduct*>(
               &_PlayProduct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    164;

  void Swap(PlayProduct* other);
  friend void swap(PlayProduct& a, PlayProduct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayProduct* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayProduct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayProduct& from);
  void MergeFrom(const PlayProduct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayProduct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string product_id = 1;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // string price_tier = 2;
  void clear_price_tier();
  static const int kPriceTierFieldNumber = 2;
  const ::std::string& price_tier() const;
  void set_price_tier(const ::std::string& value);
  #if LANG_CXX11
  void set_price_tier(::std::string&& value);
  #endif
  void set_price_tier(const char* value);
  void set_price_tier(const char* value, size_t size);
  ::std::string* mutable_price_tier();
  ::std::string* release_price_tier();
  void set_allocated_price_tier(::std::string* price_tier);

  // uint32 schedule_id = 3;
  void clear_schedule_id();
  static const int kScheduleIdFieldNumber = 3;
  ::google::protobuf::uint32 schedule_id() const;
  void set_schedule_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayProduct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr price_tier_;
  ::google::protobuf::uint32 schedule_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShopConcertProduct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ShopConcertProduct) */ {
 public:
  ShopConcertProduct();
  virtual ~ShopConcertProduct();

  ShopConcertProduct(const ShopConcertProduct& from);

  inline ShopConcertProduct& operator=(const ShopConcertProduct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShopConcertProduct(ShopConcertProduct&& from) noexcept
    : ShopConcertProduct() {
    *this = ::std::move(from);
  }

  inline ShopConcertProduct& operator=(ShopConcertProduct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopConcertProduct& default_instance();

  static inline const ShopConcertProduct* internal_default_instance() {
    return reinterpret_cast<const ShopConcertProduct*>(
               &_ShopConcertProduct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    165;

  void Swap(ShopConcertProduct* other);
  friend void swap(ShopConcertProduct& a, ShopConcertProduct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShopConcertProduct* New() const PROTOBUF_FINAL { return New(NULL); }

  ShopConcertProduct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShopConcertProduct& from);
  void MergeFrom(const ShopConcertProduct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShopConcertProduct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string product_id = 1;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // string price_tier = 2;
  void clear_price_tier();
  static const int kPriceTierFieldNumber = 2;
  const ::std::string& price_tier() const;
  void set_price_tier(const ::std::string& value);
  #if LANG_CXX11
  void set_price_tier(::std::string&& value);
  #endif
  void set_price_tier(const char* value);
  void set_price_tier(const char* value, size_t size);
  ::std::string* mutable_price_tier();
  ::std::string* release_price_tier();
  void set_allocated_price_tier(::std::string* price_tier);

  // uint32 obtain_count = 3;
  void clear_obtain_count();
  static const int kObtainCountFieldNumber = 3;
  ::google::protobuf::uint32 obtain_count() const;
  void set_obtain_count(::google::protobuf::uint32 value);

  // uint32 obtain_limit = 4;
  void clear_obtain_limit();
  static const int kObtainLimitFieldNumber = 4;
  ::google::protobuf::uint32 obtain_limit() const;
  void set_obtain_limit(::google::protobuf::uint32 value);

  // uint32 begin_time = 5;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 5;
  ::google::protobuf::uint32 begin_time() const;
  void set_begin_time(::google::protobuf::uint32 value);

  // uint32 end_time = 6;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 buy_times = 7;
  void clear_buy_times();
  static const int kBuyTimesFieldNumber = 7;
  ::google::protobuf::uint32 buy_times() const;
  void set_buy_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ShopConcertProduct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr price_tier_;
  ::google::protobuf::uint32 obtain_count_;
  ::google::protobuf::uint32 obtain_limit_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 buy_times_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HashedString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HashedString) */ {
 public:
  HashedString();
  virtual ~HashedString();

  HashedString(const HashedString& from);

  inline HashedString& operator=(const HashedString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HashedString(HashedString&& from) noexcept
    : HashedString() {
    *this = ::std::move(from);
  }

  inline HashedString& operator=(HashedString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HashedString& default_instance();

  static inline const HashedString* internal_default_instance() {
    return reinterpret_cast<const HashedString*>(
               &_HashedString_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    166;

  void Swap(HashedString* other);
  friend void swap(HashedString& a, HashedString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HashedString* New() const PROTOBUF_FINAL { return New(NULL); }

  HashedString* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HashedString& from);
  void MergeFrom(const HashedString& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HashedString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HashedString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayTeamEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayTeamEntityInfo) */ {
 public:
  PlayTeamEntityInfo();
  virtual ~PlayTeamEntityInfo();

  PlayTeamEntityInfo(const PlayTeamEntityInfo& from);

  inline PlayTeamEntityInfo& operator=(const PlayTeamEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayTeamEntityInfo(PlayTeamEntityInfo&& from) noexcept
    : PlayTeamEntityInfo() {
    *this = ::std::move(from);
  }

  inline PlayTeamEntityInfo& operator=(PlayTeamEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayTeamEntityInfo& default_instance();

  static inline const PlayTeamEntityInfo* internal_default_instance() {
    return reinterpret_cast<const PlayTeamEntityInfo*>(
               &_PlayTeamEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    167;

  void Swap(PlayTeamEntityInfo* other);
  friend void swap(PlayTeamEntityInfo& a, PlayTeamEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayTeamEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayTeamEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayTeamEntityInfo& from);
  void MergeFrom(const PlayTeamEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayTeamEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilitySyncStateInfo ability_info = 6;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 6;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 player_uid = 2;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 2;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 3;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 3;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // uint32 gadget_config_id = 5;
  void clear_gadget_config_id();
  static const int kGadgetConfigIdFieldNumber = 5;
  ::google::protobuf::uint32 gadget_config_id() const;
  void set_gadget_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayTeamEntityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 player_uid_;
  ::google::protobuf::uint32 authority_peer_id_;
  ::google::protobuf::uint32 gadget_config_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeatureBlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FeatureBlockInfo) */ {
 public:
  FeatureBlockInfo();
  virtual ~FeatureBlockInfo();

  FeatureBlockInfo(const FeatureBlockInfo& from);

  inline FeatureBlockInfo& operator=(const FeatureBlockInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeatureBlockInfo(FeatureBlockInfo&& from) noexcept
    : FeatureBlockInfo() {
    *this = ::std::move(from);
  }

  inline FeatureBlockInfo& operator=(FeatureBlockInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureBlockInfo& default_instance();

  static inline const FeatureBlockInfo* internal_default_instance() {
    return reinterpret_cast<const FeatureBlockInfo*>(
               &_FeatureBlockInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    168;

  void Swap(FeatureBlockInfo* other);
  friend void swap(FeatureBlockInfo& a, FeatureBlockInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeatureBlockInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FeatureBlockInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FeatureBlockInfo& from);
  void MergeFrom(const FeatureBlockInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FeatureBlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 feature_type = 1;
  void clear_feature_type();
  static const int kFeatureTypeFieldNumber = 1;
  ::google::protobuf::uint32 feature_type() const;
  void set_feature_type(::google::protobuf::uint32 value);

  // uint32 end_time = 2;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FeatureBlockInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 feature_type_;
  ::google::protobuf::uint32 end_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapMarkTipsInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MapMarkTipsInfo) */ {
 public:
  MapMarkTipsInfo();
  virtual ~MapMarkTipsInfo();

  MapMarkTipsInfo(const MapMarkTipsInfo& from);

  inline MapMarkTipsInfo& operator=(const MapMarkTipsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapMarkTipsInfo(MapMarkTipsInfo&& from) noexcept
    : MapMarkTipsInfo() {
    *this = ::std::move(from);
  }

  inline MapMarkTipsInfo& operator=(MapMarkTipsInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapMarkTipsInfo& default_instance();

  static inline const MapMarkTipsInfo* internal_default_instance() {
    return reinterpret_cast<const MapMarkTipsInfo*>(
               &_MapMarkTipsInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    169;

  void Swap(MapMarkTipsInfo* other);
  friend void swap(MapMarkTipsInfo& a, MapMarkTipsInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapMarkTipsInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MapMarkTipsInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapMarkTipsInfo& from);
  void MergeFrom(const MapMarkTipsInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapMarkTipsInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 point_id_list = 2;
  int point_id_list_size() const;
  void clear_point_id_list();
  static const int kPointIdListFieldNumber = 2;
  ::google::protobuf::uint32 point_id_list(int index) const;
  void set_point_id_list(int index, ::google::protobuf::uint32 value);
  void add_point_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      point_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_point_id_list();

  // .proto.MapMarkTipsType tips_type = 1;
  void clear_tips_type();
  static const int kTipsTypeFieldNumber = 1;
  ::proto::MapMarkTipsType tips_type() const;
  void set_tips_type(::proto::MapMarkTipsType value);

  // @@protoc_insertion_point(class_scope:proto.MapMarkTipsInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > point_id_list_;
  mutable int _point_id_list_cached_byte_size_;
  int tips_type_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExhibitionDisplayInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExhibitionDisplayInfo) */ {
 public:
  ExhibitionDisplayInfo();
  virtual ~ExhibitionDisplayInfo();

  ExhibitionDisplayInfo(const ExhibitionDisplayInfo& from);

  inline ExhibitionDisplayInfo& operator=(const ExhibitionDisplayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExhibitionDisplayInfo(ExhibitionDisplayInfo&& from) noexcept
    : ExhibitionDisplayInfo() {
    *this = ::std::move(from);
  }

  inline ExhibitionDisplayInfo& operator=(ExhibitionDisplayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExhibitionDisplayInfo& default_instance();

  static inline const ExhibitionDisplayInfo* internal_default_instance() {
    return reinterpret_cast<const ExhibitionDisplayInfo*>(
               &_ExhibitionDisplayInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    170;

  void Swap(ExhibitionDisplayInfo* other);
  friend void swap(ExhibitionDisplayInfo& a, ExhibitionDisplayInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExhibitionDisplayInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ExhibitionDisplayInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExhibitionDisplayInfo& from);
  void MergeFrom(const ExhibitionDisplayInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExhibitionDisplayInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 param = 2;
  void clear_param();
  static const int kParamFieldNumber = 2;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // uint32 detail_param = 3;
  void clear_detail_param();
  static const int kDetailParamFieldNumber = 3;
  ::google::protobuf::uint32 detail_param() const;
  void set_detail_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ExhibitionDisplayInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::uint32 detail_param_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProfilePicture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProfilePicture) */ {
 public:
  ProfilePicture();
  virtual ~ProfilePicture();

  ProfilePicture(const ProfilePicture& from);

  inline ProfilePicture& operator=(const ProfilePicture& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProfilePicture(ProfilePicture&& from) noexcept
    : ProfilePicture() {
    *this = ::std::move(from);
  }

  inline ProfilePicture& operator=(ProfilePicture&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfilePicture& default_instance();

  static inline const ProfilePicture* internal_default_instance() {
    return reinterpret_cast<const ProfilePicture*>(
               &_ProfilePicture_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    171;

  void Swap(ProfilePicture* other);
  friend void swap(ProfilePicture& a, ProfilePicture& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProfilePicture* New() const PROTOBUF_FINAL { return New(NULL); }

  ProfilePicture* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProfilePicture& from);
  void MergeFrom(const ProfilePicture& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProfilePicture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 costume_id = 2;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 2;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ProfilePicture)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedPointData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RedPointData) */ {
 public:
  RedPointData();
  virtual ~RedPointData();

  RedPointData(const RedPointData& from);

  inline RedPointData& operator=(const RedPointData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedPointData(RedPointData&& from) noexcept
    : RedPointData() {
    *this = ::std::move(from);
  }

  inline RedPointData& operator=(RedPointData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RedPointData& default_instance();

  static inline const RedPointData* internal_default_instance() {
    return reinterpret_cast<const RedPointData*>(
               &_RedPointData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    172;

  void Swap(RedPointData* other);
  friend void swap(RedPointData& a, RedPointData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedPointData* New() const PROTOBUF_FINAL { return New(NULL); }

  RedPointData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RedPointData& from);
  void MergeFrom(const RedPointData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RedPointData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 red_point_type = 1;
  void clear_red_point_type();
  static const int kRedPointTypeFieldNumber = 1;
  ::google::protobuf::uint32 red_point_type() const;
  void set_red_point_type(::google::protobuf::uint32 value);

  // bool is_show = 2;
  void clear_is_show();
  static const int kIsShowFieldNumber = 2;
  bool is_show() const;
  void set_is_show(bool value);

  // uint32 content_id = 3;
  void clear_content_id();
  static const int kContentIdFieldNumber = 3;
  ::google::protobuf::uint32 content_id() const;
  void set_content_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RedPointData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 red_point_type_;
  bool is_show_;
  ::google::protobuf::uint32 content_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeMarkPointNPCData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeMarkPointNPCData) */ {
 public:
  HomeMarkPointNPCData();
  virtual ~HomeMarkPointNPCData();

  HomeMarkPointNPCData(const HomeMarkPointNPCData& from);

  inline HomeMarkPointNPCData& operator=(const HomeMarkPointNPCData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeMarkPointNPCData(HomeMarkPointNPCData&& from) noexcept
    : HomeMarkPointNPCData() {
    *this = ::std::move(from);
  }

  inline HomeMarkPointNPCData& operator=(HomeMarkPointNPCData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeMarkPointNPCData& default_instance();

  static inline const HomeMarkPointNPCData* internal_default_instance() {
    return reinterpret_cast<const HomeMarkPointNPCData*>(
               &_HomeMarkPointNPCData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    173;

  void Swap(HomeMarkPointNPCData* other);
  friend void swap(HomeMarkPointNPCData& a, HomeMarkPointNPCData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeMarkPointNPCData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeMarkPointNPCData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeMarkPointNPCData& from);
  void MergeFrom(const HomeMarkPointNPCData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeMarkPointNPCData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 costume_id = 2;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 2;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeMarkPointNPCData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeMarkPointSuiteData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeMarkPointSuiteData) */ {
 public:
  HomeMarkPointSuiteData();
  virtual ~HomeMarkPointSuiteData();

  HomeMarkPointSuiteData(const HomeMarkPointSuiteData& from);

  inline HomeMarkPointSuiteData& operator=(const HomeMarkPointSuiteData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeMarkPointSuiteData(HomeMarkPointSuiteData&& from) noexcept
    : HomeMarkPointSuiteData() {
    *this = ::std::move(from);
  }

  inline HomeMarkPointSuiteData& operator=(HomeMarkPointSuiteData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeMarkPointSuiteData& default_instance();

  static inline const HomeMarkPointSuiteData* internal_default_instance() {
    return reinterpret_cast<const HomeMarkPointSuiteData*>(
               &_HomeMarkPointSuiteData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    174;

  void Swap(HomeMarkPointSuiteData* other);
  friend void swap(HomeMarkPointSuiteData& a, HomeMarkPointSuiteData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeMarkPointSuiteData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeMarkPointSuiteData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeMarkPointSuiteData& from);
  void MergeFrom(const HomeMarkPointSuiteData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeMarkPointSuiteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 suite_id = 1;
  void clear_suite_id();
  static const int kSuiteIdFieldNumber = 1;
  ::google::protobuf::uint32 suite_id() const;
  void set_suite_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeMarkPointSuiteData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 suite_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeMarkPointFurnitureData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeMarkPointFurnitureData) */ {
 public:
  HomeMarkPointFurnitureData();
  virtual ~HomeMarkPointFurnitureData();

  HomeMarkPointFurnitureData(const HomeMarkPointFurnitureData& from);

  inline HomeMarkPointFurnitureData& operator=(const HomeMarkPointFurnitureData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeMarkPointFurnitureData(HomeMarkPointFurnitureData&& from) noexcept
    : HomeMarkPointFurnitureData() {
    *this = ::std::move(from);
  }

  inline HomeMarkPointFurnitureData& operator=(HomeMarkPointFurnitureData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeMarkPointFurnitureData& default_instance();

  enum ExtraCase {
    kNpcData = 6,
    kSuiteData = 7,
    EXTRA_NOT_SET = 0,
  };

  static inline const HomeMarkPointFurnitureData* internal_default_instance() {
    return reinterpret_cast<const HomeMarkPointFurnitureData*>(
               &_HomeMarkPointFurnitureData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    175;

  void Swap(HomeMarkPointFurnitureData* other);
  friend void swap(HomeMarkPointFurnitureData& a, HomeMarkPointFurnitureData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeMarkPointFurnitureData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeMarkPointFurnitureData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeMarkPointFurnitureData& from);
  void MergeFrom(const HomeMarkPointFurnitureData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeMarkPointFurnitureData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // uint32 furniture_id = 2;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 2;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // uint32 furniture_type = 3;
  void clear_furniture_type();
  static const int kFurnitureTypeFieldNumber = 3;
  ::google::protobuf::uint32 furniture_type() const;
  void set_furniture_type(::google::protobuf::uint32 value);

  // .proto.HomeMarkPointNPCData npc_data = 6;
  bool has_npc_data() const;
  void clear_npc_data();
  static const int kNpcDataFieldNumber = 6;
  const ::proto::HomeMarkPointNPCData& npc_data() const;
  ::proto::HomeMarkPointNPCData* mutable_npc_data();
  ::proto::HomeMarkPointNPCData* release_npc_data();
  void set_allocated_npc_data(::proto::HomeMarkPointNPCData* npc_data);

  // .proto.HomeMarkPointSuiteData suite_data = 7;
  bool has_suite_data() const;
  void clear_suite_data();
  static const int kSuiteDataFieldNumber = 7;
  const ::proto::HomeMarkPointSuiteData& suite_data() const;
  ::proto::HomeMarkPointSuiteData* mutable_suite_data();
  ::proto::HomeMarkPointSuiteData* release_suite_data();
  void set_allocated_suite_data(::proto::HomeMarkPointSuiteData* suite_data);

  ExtraCase extra_case() const;
  // @@protoc_insertion_point(class_scope:proto.HomeMarkPointFurnitureData)
 private:
  void set_has_npc_data();
  void set_has_suite_data();

  inline bool has_extra() const;
  void clear_extra();
  inline void clear_has_extra();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 furniture_id_;
  ::google::protobuf::uint32 furniture_type_;
  union ExtraUnion {
    ExtraUnion() {}
    ::proto::HomeMarkPointNPCData* npc_data_;
    ::proto::HomeMarkPointSuiteData* suite_data_;
  } extra_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapAreaInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MapAreaInfo) */ {
 public:
  MapAreaInfo();
  virtual ~MapAreaInfo();

  MapAreaInfo(const MapAreaInfo& from);

  inline MapAreaInfo& operator=(const MapAreaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapAreaInfo(MapAreaInfo&& from) noexcept
    : MapAreaInfo() {
    *this = ::std::move(from);
  }

  inline MapAreaInfo& operator=(MapAreaInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapAreaInfo& default_instance();

  static inline const MapAreaInfo* internal_default_instance() {
    return reinterpret_cast<const MapAreaInfo*>(
               &_MapAreaInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    176;

  void Swap(MapAreaInfo* other);
  friend void swap(MapAreaInfo& a, MapAreaInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapAreaInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MapAreaInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapAreaInfo& from);
  void MergeFrom(const MapAreaInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapAreaInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 map_area_id = 1;
  void clear_map_area_id();
  static const int kMapAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 map_area_id() const;
  void set_map_area_id(::google::protobuf::uint32 value);

  // bool is_open = 2;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 2;
  bool is_open() const;
  void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto.MapAreaInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 map_area_id_;
  bool is_open_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFurnitureArrangementMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFurnitureArrangementMuipData) */ {
 public:
  HomeFurnitureArrangementMuipData();
  virtual ~HomeFurnitureArrangementMuipData();

  HomeFurnitureArrangementMuipData(const HomeFurnitureArrangementMuipData& from);

  inline HomeFurnitureArrangementMuipData& operator=(const HomeFurnitureArrangementMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFurnitureArrangementMuipData(HomeFurnitureArrangementMuipData&& from) noexcept
    : HomeFurnitureArrangementMuipData() {
    *this = ::std::move(from);
  }

  inline HomeFurnitureArrangementMuipData& operator=(HomeFurnitureArrangementMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFurnitureArrangementMuipData& default_instance();

  static inline const HomeFurnitureArrangementMuipData* internal_default_instance() {
    return reinterpret_cast<const HomeFurnitureArrangementMuipData*>(
               &_HomeFurnitureArrangementMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    177;

  void Swap(HomeFurnitureArrangementMuipData* other);
  friend void swap(HomeFurnitureArrangementMuipData& a, HomeFurnitureArrangementMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFurnitureArrangementMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFurnitureArrangementMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFurnitureArrangementMuipData& from);
  void MergeFrom(const HomeFurnitureArrangementMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFurnitureArrangementMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector spawn_pos = 2;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 2;
  const ::proto::Vector& spawn_pos() const;
  ::proto::Vector* mutable_spawn_pos();
  ::proto::Vector* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::Vector* spawn_pos);

  // .proto.Vector spawn_rot = 3;
  bool has_spawn_rot() const;
  void clear_spawn_rot();
  static const int kSpawnRotFieldNumber = 3;
  const ::proto::Vector& spawn_rot() const;
  ::proto::Vector* mutable_spawn_rot();
  ::proto::Vector* release_spawn_rot();
  void set_allocated_spawn_rot(::proto::Vector* spawn_rot);

  // uint32 furniture_id = 1;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 1;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeFurnitureArrangementMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* spawn_pos_;
  ::proto::Vector* spawn_rot_;
  ::google::protobuf::uint32 furniture_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBlockArrangementMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBlockArrangementMuipData) */ {
 public:
  HomeBlockArrangementMuipData();
  virtual ~HomeBlockArrangementMuipData();

  HomeBlockArrangementMuipData(const HomeBlockArrangementMuipData& from);

  inline HomeBlockArrangementMuipData& operator=(const HomeBlockArrangementMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBlockArrangementMuipData(HomeBlockArrangementMuipData&& from) noexcept
    : HomeBlockArrangementMuipData() {
    *this = ::std::move(from);
  }

  inline HomeBlockArrangementMuipData& operator=(HomeBlockArrangementMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBlockArrangementMuipData& default_instance();

  static inline const HomeBlockArrangementMuipData* internal_default_instance() {
    return reinterpret_cast<const HomeBlockArrangementMuipData*>(
               &_HomeBlockArrangementMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    178;

  void Swap(HomeBlockArrangementMuipData* other);
  friend void swap(HomeBlockArrangementMuipData& a, HomeBlockArrangementMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBlockArrangementMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBlockArrangementMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBlockArrangementMuipData& from);
  void MergeFrom(const HomeBlockArrangementMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBlockArrangementMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeFurnitureArrangementMuipData furniture_data_list = 2;
  int furniture_data_list_size() const;
  void clear_furniture_data_list();
  static const int kFurnitureDataListFieldNumber = 2;
  const ::proto::HomeFurnitureArrangementMuipData& furniture_data_list(int index) const;
  ::proto::HomeFurnitureArrangementMuipData* mutable_furniture_data_list(int index);
  ::proto::HomeFurnitureArrangementMuipData* add_furniture_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureArrangementMuipData >*
      mutable_furniture_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureArrangementMuipData >&
      furniture_data_list() const;

  // uint32 block_id = 1;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeBlockArrangementMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureArrangementMuipData > furniture_data_list_;
  ::google::protobuf::uint32 block_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeSceneArrangementMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeSceneArrangementMuipData) */ {
 public:
  HomeSceneArrangementMuipData();
  virtual ~HomeSceneArrangementMuipData();

  HomeSceneArrangementMuipData(const HomeSceneArrangementMuipData& from);

  inline HomeSceneArrangementMuipData& operator=(const HomeSceneArrangementMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeSceneArrangementMuipData(HomeSceneArrangementMuipData&& from) noexcept
    : HomeSceneArrangementMuipData() {
    *this = ::std::move(from);
  }

  inline HomeSceneArrangementMuipData& operator=(HomeSceneArrangementMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeSceneArrangementMuipData& default_instance();

  static inline const HomeSceneArrangementMuipData* internal_default_instance() {
    return reinterpret_cast<const HomeSceneArrangementMuipData*>(
               &_HomeSceneArrangementMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    179;

  void Swap(HomeSceneArrangementMuipData* other);
  friend void swap(HomeSceneArrangementMuipData& a, HomeSceneArrangementMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeSceneArrangementMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeSceneArrangementMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeSceneArrangementMuipData& from);
  void MergeFrom(const HomeSceneArrangementMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeSceneArrangementMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeBlockArrangementMuipData block_data_list = 4;
  int block_data_list_size() const;
  void clear_block_data_list();
  static const int kBlockDataListFieldNumber = 4;
  const ::proto::HomeBlockArrangementMuipData& block_data_list(int index) const;
  ::proto::HomeBlockArrangementMuipData* mutable_block_data_list(int index);
  ::proto::HomeBlockArrangementMuipData* add_block_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockArrangementMuipData >*
      mutable_block_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockArrangementMuipData >&
      block_data_list() const;

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // bool is_room = 3;
  void clear_is_room();
  static const int kIsRoomFieldNumber = 3;
  bool is_room() const;
  void set_is_room(bool value);

  // @@protoc_insertion_point(class_scope:proto.HomeSceneArrangementMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockArrangementMuipData > block_data_list_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 scene_id_;
  bool is_room_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomDungeonBattleRecordMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonBattleRecordMuipData) */ {
 public:
  CustomDungeonBattleRecordMuipData();
  virtual ~CustomDungeonBattleRecordMuipData();

  CustomDungeonBattleRecordMuipData(const CustomDungeonBattleRecordMuipData& from);

  inline CustomDungeonBattleRecordMuipData& operator=(const CustomDungeonBattleRecordMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonBattleRecordMuipData(CustomDungeonBattleRecordMuipData&& from) noexcept
    : CustomDungeonBattleRecordMuipData() {
    *this = ::std::move(from);
  }

  inline CustomDungeonBattleRecordMuipData& operator=(CustomDungeonBattleRecordMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonBattleRecordMuipData& default_instance();

  static inline const CustomDungeonBattleRecordMuipData* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonBattleRecordMuipData*>(
               &_CustomDungeonBattleRecordMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    180;

  void Swap(CustomDungeonBattleRecordMuipData* other);
  friend void swap(CustomDungeonBattleRecordMuipData& a, CustomDungeonBattleRecordMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonBattleRecordMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonBattleRecordMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonBattleRecordMuipData& from);
  void MergeFrom(const CustomDungeonBattleRecordMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonBattleRecordMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 dungeon_guid = 1;
  void clear_dungeon_guid();
  static const int kDungeonGuidFieldNumber = 1;
  ::google::protobuf::uint64 dungeon_guid() const;
  void set_dungeon_guid(::google::protobuf::uint64 value);

  // uint32 min_cost_time = 2;
  void clear_min_cost_time();
  static const int kMinCostTimeFieldNumber = 2;
  ::google::protobuf::uint32 min_cost_time() const;
  void set_min_cost_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonBattleRecordMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 dungeon_guid_;
  ::google::protobuf::uint32 min_cost_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCustomDungeonMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCustomDungeonMuipData) */ {
 public:
  PlayerCustomDungeonMuipData();
  virtual ~PlayerCustomDungeonMuipData();

  PlayerCustomDungeonMuipData(const PlayerCustomDungeonMuipData& from);

  inline PlayerCustomDungeonMuipData& operator=(const PlayerCustomDungeonMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCustomDungeonMuipData(PlayerCustomDungeonMuipData&& from) noexcept
    : PlayerCustomDungeonMuipData() {
    *this = ::std::move(from);
  }

  inline PlayerCustomDungeonMuipData& operator=(PlayerCustomDungeonMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCustomDungeonMuipData& default_instance();

  static inline const PlayerCustomDungeonMuipData* internal_default_instance() {
    return reinterpret_cast<const PlayerCustomDungeonMuipData*>(
               &_PlayerCustomDungeonMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    181;

  void Swap(PlayerCustomDungeonMuipData* other);
  friend void swap(PlayerCustomDungeonMuipData& a, PlayerCustomDungeonMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCustomDungeonMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCustomDungeonMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCustomDungeonMuipData& from);
  void MergeFrom(const PlayerCustomDungeonMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCustomDungeonMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 publish_dungeon_list = 2;
  int publish_dungeon_list_size() const;
  void clear_publish_dungeon_list();
  static const int kPublishDungeonListFieldNumber = 2;
  ::google::protobuf::uint64 publish_dungeon_list(int index) const;
  void set_publish_dungeon_list(int index, ::google::protobuf::uint64 value);
  void add_publish_dungeon_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      publish_dungeon_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_publish_dungeon_list();

  // repeated uint64 store_dungeon_list = 3;
  int store_dungeon_list_size() const;
  void clear_store_dungeon_list();
  static const int kStoreDungeonListFieldNumber = 3;
  ::google::protobuf::uint64 store_dungeon_list(int index) const;
  void set_store_dungeon_list(int index, ::google::protobuf::uint64 value);
  void add_store_dungeon_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      store_dungeon_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_store_dungeon_list();

  // repeated .proto.CustomDungeonBattleRecordMuipData battle_record_list = 4;
  int battle_record_list_size() const;
  void clear_battle_record_list();
  static const int kBattleRecordListFieldNumber = 4;
  const ::proto::CustomDungeonBattleRecordMuipData& battle_record_list(int index) const;
  ::proto::CustomDungeonBattleRecordMuipData* mutable_battle_record_list(int index);
  ::proto::CustomDungeonBattleRecordMuipData* add_battle_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBattleRecordMuipData >*
      mutable_battle_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBattleRecordMuipData >&
      battle_record_list() const;

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCustomDungeonMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > publish_dungeon_list_;
  mutable int _publish_dungeon_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > store_dungeon_list_;
  mutable int _store_dungeon_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBattleRecordMuipData > battle_record_list_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomDungeonSettingMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonSettingMuipData) */ {
 public:
  CustomDungeonSettingMuipData();
  virtual ~CustomDungeonSettingMuipData();

  CustomDungeonSettingMuipData(const CustomDungeonSettingMuipData& from);

  inline CustomDungeonSettingMuipData& operator=(const CustomDungeonSettingMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonSettingMuipData(CustomDungeonSettingMuipData&& from) noexcept
    : CustomDungeonSettingMuipData() {
    *this = ::std::move(from);
  }

  inline CustomDungeonSettingMuipData& operator=(CustomDungeonSettingMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonSettingMuipData& default_instance();

  static inline const CustomDungeonSettingMuipData* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonSettingMuipData*>(
               &_CustomDungeonSettingMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    182;

  void Swap(CustomDungeonSettingMuipData* other);
  friend void swap(CustomDungeonSettingMuipData& a, CustomDungeonSettingMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonSettingMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonSettingMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonSettingMuipData& from);
  void MergeFrom(const CustomDungeonSettingMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonSettingMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 coin_limit = 2;
  void clear_coin_limit();
  static const int kCoinLimitFieldNumber = 2;
  ::google::protobuf::uint32 coin_limit() const;
  void set_coin_limit(::google::protobuf::uint32 value);

  // bool is_arrive_finish = 1;
  void clear_is_arrive_finish();
  static const int kIsArriveFinishFieldNumber = 1;
  bool is_arrive_finish() const;
  void set_is_arrive_finish(bool value);

  // bool is_forbid_skill = 4;
  void clear_is_forbid_skill();
  static const int kIsForbidSkillFieldNumber = 4;
  bool is_forbid_skill() const;
  void set_is_forbid_skill(bool value);

  // uint32 time_limit = 3;
  void clear_time_limit();
  static const int kTimeLimitFieldNumber = 3;
  ::google::protobuf::uint32 time_limit() const;
  void set_time_limit(::google::protobuf::uint32 value);

  // uint32 life_num = 5;
  void clear_life_num();
  static const int kLifeNumFieldNumber = 5;
  ::google::protobuf::uint32 life_num() const;
  void set_life_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonSettingMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 coin_limit_;
  bool is_arrive_finish_;
  bool is_forbid_skill_;
  ::google::protobuf::uint32 time_limit_;
  ::google::protobuf::uint32 life_num_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CustomDungeonAbstractMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonAbstractMuipData) */ {
 public:
  CustomDungeonAbstractMuipData();
  virtual ~CustomDungeonAbstractMuipData();

  CustomDungeonAbstractMuipData(const CustomDungeonAbstractMuipData& from);

  inline CustomDungeonAbstractMuipData& operator=(const CustomDungeonAbstractMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonAbstractMuipData(CustomDungeonAbstractMuipData&& from) noexcept
    : CustomDungeonAbstractMuipData() {
    *this = ::std::move(from);
  }

  inline CustomDungeonAbstractMuipData& operator=(CustomDungeonAbstractMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonAbstractMuipData& default_instance();

  static inline const CustomDungeonAbstractMuipData* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonAbstractMuipData*>(
               &_CustomDungeonAbstractMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    184;

  void Swap(CustomDungeonAbstractMuipData* other);
  friend void swap(CustomDungeonAbstractMuipData& a, CustomDungeonAbstractMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonAbstractMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonAbstractMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonAbstractMuipData& from);
  void MergeFrom(const CustomDungeonAbstractMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonAbstractMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> brick_statistics_map = 3;
  int brick_statistics_map_size() const;
  void clear_brick_statistics_map();
  static const int kBrickStatisticsMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      brick_statistics_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_brick_statistics_map();

  // uint32 first_publish_time = 1;
  void clear_first_publish_time();
  static const int kFirstPublishTimeFieldNumber = 1;
  ::google::protobuf::uint32 first_publish_time() const;
  void set_first_publish_time(::google::protobuf::uint32 value);

  // uint32 last_publish_time = 2;
  void clear_last_publish_time();
  static const int kLastPublishTimeFieldNumber = 2;
  ::google::protobuf::uint32 last_publish_time() const;
  void set_last_publish_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonAbstractMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CustomDungeonAbstractMuipData_BrickStatisticsMapEntry : public ::google::protobuf::internal::MapEntry<CustomDungeonAbstractMuipData_BrickStatisticsMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CustomDungeonAbstractMuipData_BrickStatisticsMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    CustomDungeonAbstractMuipData_BrickStatisticsMapEntry();
    CustomDungeonAbstractMuipData_BrickStatisticsMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CustomDungeonAbstractMuipData_BrickStatisticsMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CustomDungeonAbstractMuipData_BrickStatisticsMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CustomDungeonAbstractMuipData_BrickStatisticsMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > brick_statistics_map_;
  private:
  ::google::protobuf::uint32 first_publish_time_;
  ::google::protobuf::uint32 last_publish_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomDungeonSocialMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonSocialMuipData) */ {
 public:
  CustomDungeonSocialMuipData();
  virtual ~CustomDungeonSocialMuipData();

  CustomDungeonSocialMuipData(const CustomDungeonSocialMuipData& from);

  inline CustomDungeonSocialMuipData& operator=(const CustomDungeonSocialMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonSocialMuipData(CustomDungeonSocialMuipData&& from) noexcept
    : CustomDungeonSocialMuipData() {
    *this = ::std::move(from);
  }

  inline CustomDungeonSocialMuipData& operator=(CustomDungeonSocialMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonSocialMuipData& default_instance();

  static inline const CustomDungeonSocialMuipData* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonSocialMuipData*>(
               &_CustomDungeonSocialMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    185;

  void Swap(CustomDungeonSocialMuipData* other);
  friend void swap(CustomDungeonSocialMuipData& a, CustomDungeonSocialMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonSocialMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonSocialMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonSocialMuipData& from);
  void MergeFrom(const CustomDungeonSocialMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonSocialMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 play_num = 1;
  void clear_play_num();
  static const int kPlayNumFieldNumber = 1;
  ::google::protobuf::uint32 play_num() const;
  void set_play_num(::google::protobuf::uint32 value);

  // uint32 like_num = 2;
  void clear_like_num();
  static const int kLikeNumFieldNumber = 2;
  ::google::protobuf::uint32 like_num() const;
  void set_like_num(::google::protobuf::uint32 value);

  // uint32 store_num = 3;
  void clear_store_num();
  static const int kStoreNumFieldNumber = 3;
  ::google::protobuf::uint32 store_num() const;
  void set_store_num(::google::protobuf::uint32 value);

  // uint32 win_num = 4;
  void clear_win_num();
  static const int kWinNumFieldNumber = 4;
  ::google::protobuf::uint32 win_num() const;
  void set_win_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonSocialMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 play_num_;
  ::google::protobuf::uint32 like_num_;
  ::google::protobuf::uint32 store_num_;
  ::google::protobuf::uint32 win_num_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomDungeonBriefMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonBriefMuipData) */ {
 public:
  CustomDungeonBriefMuipData();
  virtual ~CustomDungeonBriefMuipData();

  CustomDungeonBriefMuipData(const CustomDungeonBriefMuipData& from);

  inline CustomDungeonBriefMuipData& operator=(const CustomDungeonBriefMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonBriefMuipData(CustomDungeonBriefMuipData&& from) noexcept
    : CustomDungeonBriefMuipData() {
    *this = ::std::move(from);
  }

  inline CustomDungeonBriefMuipData& operator=(CustomDungeonBriefMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonBriefMuipData& default_instance();

  static inline const CustomDungeonBriefMuipData* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonBriefMuipData*>(
               &_CustomDungeonBriefMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    186;

  void Swap(CustomDungeonBriefMuipData* other);
  friend void swap(CustomDungeonBriefMuipData& a, CustomDungeonBriefMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonBriefMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonBriefMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonBriefMuipData& from);
  void MergeFrom(const CustomDungeonBriefMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonBriefMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 tag_list = 4;
  int tag_list_size() const;
  void clear_tag_list();
  static const int kTagListFieldNumber = 4;
  ::google::protobuf::uint32 tag_list(int index) const;
  void set_tag_list(int index, ::google::protobuf::uint32 value);
  void add_tag_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tag_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tag_list();

  // string creator_nickname = 3;
  void clear_creator_nickname();
  static const int kCreatorNicknameFieldNumber = 3;
  const ::std::string& creator_nickname() const;
  void set_creator_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_creator_nickname(::std::string&& value);
  #endif
  void set_creator_nickname(const char* value);
  void set_creator_nickname(const char* value, size_t size);
  ::std::string* mutable_creator_nickname();
  ::std::string* release_creator_nickname();
  void set_allocated_creator_nickname(::std::string* creator_nickname);

  // .proto.CustomDungeonSettingMuipData setting = 5;
  bool has_setting() const;
  void clear_setting();
  static const int kSettingFieldNumber = 5;
  const ::proto::CustomDungeonSettingMuipData& setting() const;
  ::proto::CustomDungeonSettingMuipData* mutable_setting();
  ::proto::CustomDungeonSettingMuipData* release_setting();
  void set_allocated_setting(::proto::CustomDungeonSettingMuipData* setting);

  // .proto.CustomDungeonAbstractMuipData abstract = 6;
  bool has_abstract() const;
  void clear_abstract();
  static const int kAbstractFieldNumber = 6;
  const ::proto::CustomDungeonAbstractMuipData& abstract() const;
  ::proto::CustomDungeonAbstractMuipData* mutable_abstract();
  ::proto::CustomDungeonAbstractMuipData* release_abstract();
  void set_allocated_abstract(::proto::CustomDungeonAbstractMuipData* abstract);

  // .proto.CustomDungeonSocialMuipData social = 7;
  bool has_social() const;
  void clear_social();
  static const int kSocialFieldNumber = 7;
  const ::proto::CustomDungeonSocialMuipData& social() const;
  ::proto::CustomDungeonSocialMuipData* mutable_social();
  ::proto::CustomDungeonSocialMuipData* release_social();
  void set_allocated_social(::proto::CustomDungeonSocialMuipData* social);

  // uint64 dungeon_guid = 1;
  void clear_dungeon_guid();
  static const int kDungeonGuidFieldNumber = 1;
  ::google::protobuf::uint64 dungeon_guid() const;
  void set_dungeon_guid(::google::protobuf::uint64 value);

  // uint32 dungeon_id = 2;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 2;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonBriefMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tag_list_;
  mutable int _tag_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr creator_nickname_;
  ::proto::CustomDungeonSettingMuipData* setting_;
  ::proto::CustomDungeonAbstractMuipData* abstract_;
  ::proto::CustomDungeonSocialMuipData* social_;
  ::google::protobuf::uint64 dungeon_guid_;
  ::google::protobuf::uint32 dungeon_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomDungeonBatchBriefMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonBatchBriefMuipData) */ {
 public:
  CustomDungeonBatchBriefMuipData();
  virtual ~CustomDungeonBatchBriefMuipData();

  CustomDungeonBatchBriefMuipData(const CustomDungeonBatchBriefMuipData& from);

  inline CustomDungeonBatchBriefMuipData& operator=(const CustomDungeonBatchBriefMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonBatchBriefMuipData(CustomDungeonBatchBriefMuipData&& from) noexcept
    : CustomDungeonBatchBriefMuipData() {
    *this = ::std::move(from);
  }

  inline CustomDungeonBatchBriefMuipData& operator=(CustomDungeonBatchBriefMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonBatchBriefMuipData& default_instance();

  static inline const CustomDungeonBatchBriefMuipData* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonBatchBriefMuipData*>(
               &_CustomDungeonBatchBriefMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    187;

  void Swap(CustomDungeonBatchBriefMuipData* other);
  friend void swap(CustomDungeonBatchBriefMuipData& a, CustomDungeonBatchBriefMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonBatchBriefMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonBatchBriefMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonBatchBriefMuipData& from);
  void MergeFrom(const CustomDungeonBatchBriefMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonBatchBriefMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CustomDungeonBriefMuipData brief_list = 1;
  int brief_list_size() const;
  void clear_brief_list();
  static const int kBriefListFieldNumber = 1;
  const ::proto::CustomDungeonBriefMuipData& brief_list(int index) const;
  ::proto::CustomDungeonBriefMuipData* mutable_brief_list(int index);
  ::proto::CustomDungeonBriefMuipData* add_brief_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefMuipData >*
      mutable_brief_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefMuipData >&
      brief_list() const;

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonBatchBriefMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefMuipData > brief_list_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBlueprintBriefMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBlueprintBriefMuipData) */ {
 public:
  HomeBlueprintBriefMuipData();
  virtual ~HomeBlueprintBriefMuipData();

  HomeBlueprintBriefMuipData(const HomeBlueprintBriefMuipData& from);

  inline HomeBlueprintBriefMuipData& operator=(const HomeBlueprintBriefMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBlueprintBriefMuipData(HomeBlueprintBriefMuipData&& from) noexcept
    : HomeBlueprintBriefMuipData() {
    *this = ::std::move(from);
  }

  inline HomeBlueprintBriefMuipData& operator=(HomeBlueprintBriefMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBlueprintBriefMuipData& default_instance();

  static inline const HomeBlueprintBriefMuipData* internal_default_instance() {
    return reinterpret_cast<const HomeBlueprintBriefMuipData*>(
               &_HomeBlueprintBriefMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    188;

  void Swap(HomeBlueprintBriefMuipData* other);
  friend void swap(HomeBlueprintBriefMuipData& a, HomeBlueprintBriefMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBlueprintBriefMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBlueprintBriefMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBlueprintBriefMuipData& from);
  void MergeFrom(const HomeBlueprintBriefMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBlueprintBriefMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string share_code = 1;
  void clear_share_code();
  static const int kShareCodeFieldNumber = 1;
  const ::std::string& share_code() const;
  void set_share_code(const ::std::string& value);
  #if LANG_CXX11
  void set_share_code(::std::string&& value);
  #endif
  void set_share_code(const char* value);
  void set_share_code(const char* value, size_t size);
  ::std::string* mutable_share_code();
  ::std::string* release_share_code();
  void set_allocated_share_code(::std::string* share_code);

  // uint32 owner_uid = 2;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 2;
  ::google::protobuf::uint32 owner_uid() const;
  void set_owner_uid(::google::protobuf::uint32 value);

  // uint32 module_id = 3;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 3;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 block_id = 5;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 5;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // bool is_allow_copy = 6;
  void clear_is_allow_copy();
  static const int kIsAllowCopyFieldNumber = 6;
  bool is_allow_copy() const;
  void set_is_allow_copy(bool value);

  // uint32 create_time = 7;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  ::google::protobuf::uint32 create_time() const;
  void set_create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeBlueprintBriefMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr share_code_;
  ::google::protobuf::uint32 owner_uid_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 block_id_;
  bool is_allow_copy_;
  ::google::protobuf::uint32 create_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBlueprintBatchBriefMuipData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBlueprintBatchBriefMuipData) */ {
 public:
  HomeBlueprintBatchBriefMuipData();
  virtual ~HomeBlueprintBatchBriefMuipData();

  HomeBlueprintBatchBriefMuipData(const HomeBlueprintBatchBriefMuipData& from);

  inline HomeBlueprintBatchBriefMuipData& operator=(const HomeBlueprintBatchBriefMuipData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBlueprintBatchBriefMuipData(HomeBlueprintBatchBriefMuipData&& from) noexcept
    : HomeBlueprintBatchBriefMuipData() {
    *this = ::std::move(from);
  }

  inline HomeBlueprintBatchBriefMuipData& operator=(HomeBlueprintBatchBriefMuipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBlueprintBatchBriefMuipData& default_instance();

  static inline const HomeBlueprintBatchBriefMuipData* internal_default_instance() {
    return reinterpret_cast<const HomeBlueprintBatchBriefMuipData*>(
               &_HomeBlueprintBatchBriefMuipData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    189;

  void Swap(HomeBlueprintBatchBriefMuipData* other);
  friend void swap(HomeBlueprintBatchBriefMuipData& a, HomeBlueprintBatchBriefMuipData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBlueprintBatchBriefMuipData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBlueprintBatchBriefMuipData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBlueprintBatchBriefMuipData& from);
  void MergeFrom(const HomeBlueprintBatchBriefMuipData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBlueprintBatchBriefMuipData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeBlueprintBriefMuipData brief_list = 1;
  int brief_list_size() const;
  void clear_brief_list();
  static const int kBriefListFieldNumber = 1;
  const ::proto::HomeBlueprintBriefMuipData& brief_list(int index) const;
  ::proto::HomeBlueprintBriefMuipData* mutable_brief_list(int index);
  ::proto::HomeBlueprintBriefMuipData* add_brief_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlueprintBriefMuipData >*
      mutable_brief_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlueprintBriefMuipData >&
      brief_list() const;

  // repeated string not_exist_share_code_list = 2;
  int not_exist_share_code_list_size() const;
  void clear_not_exist_share_code_list();
  static const int kNotExistShareCodeListFieldNumber = 2;
  const ::std::string& not_exist_share_code_list(int index) const;
  ::std::string* mutable_not_exist_share_code_list(int index);
  void set_not_exist_share_code_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_not_exist_share_code_list(int index, ::std::string&& value);
  #endif
  void set_not_exist_share_code_list(int index, const char* value);
  void set_not_exist_share_code_list(int index, const char* value, size_t size);
  ::std::string* add_not_exist_share_code_list();
  void add_not_exist_share_code_list(const ::std::string& value);
  #if LANG_CXX11
  void add_not_exist_share_code_list(::std::string&& value);
  #endif
  void add_not_exist_share_code_list(const char* value);
  void add_not_exist_share_code_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& not_exist_share_code_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_not_exist_share_code_list();

  // @@protoc_insertion_point(class_scope:proto.HomeBlueprintBatchBriefMuipData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlueprintBriefMuipData > brief_list_;
  ::google::protobuf::RepeatedPtrField< ::std::string> not_exist_share_code_list_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContentAuditInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ContentAuditInfo) */ {
 public:
  ContentAuditInfo();
  virtual ~ContentAuditInfo();

  ContentAuditInfo(const ContentAuditInfo& from);

  inline ContentAuditInfo& operator=(const ContentAuditInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContentAuditInfo(ContentAuditInfo&& from) noexcept
    : ContentAuditInfo() {
    *this = ::std::move(from);
  }

  inline ContentAuditInfo& operator=(ContentAuditInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentAuditInfo& default_instance();

  static inline const ContentAuditInfo* internal_default_instance() {
    return reinterpret_cast<const ContentAuditInfo*>(
               &_ContentAuditInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    190;

  void Swap(ContentAuditInfo* other);
  friend void swap(ContentAuditInfo& a, ContentAuditInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContentAuditInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ContentAuditInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContentAuditInfo& from);
  void MergeFrom(const ContentAuditInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContentAuditInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // bool is_open = 1;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 1;
  bool is_open() const;
  void set_is_open(bool value);

  // uint32 submit_count = 3;
  void clear_submit_count();
  static const int kSubmitCountFieldNumber = 3;
  ::google::protobuf::uint32 submit_count() const;
  void set_submit_count(::google::protobuf::uint32 value);

  // .proto.AuditState audit_state = 4;
  void clear_audit_state();
  static const int kAuditStateFieldNumber = 4;
  ::proto::AuditState audit_state() const;
  void set_audit_state(::proto::AuditState value);

  // uint32 submit_limit = 5;
  void clear_submit_limit();
  static const int kSubmitLimitFieldNumber = 5;
  ::google::protobuf::uint32 submit_limit() const;
  void set_submit_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ContentAuditInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  bool is_open_;
  ::google::protobuf::uint32 submit_count_;
  int audit_state_;
  ::google::protobuf::uint32 submit_limit_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContentAuditData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ContentAuditData) */ {
 public:
  ContentAuditData();
  virtual ~ContentAuditData();

  ContentAuditData(const ContentAuditData& from);

  inline ContentAuditData& operator=(const ContentAuditData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContentAuditData(ContentAuditData&& from) noexcept
    : ContentAuditData() {
    *this = ::std::move(from);
  }

  inline ContentAuditData& operator=(ContentAuditData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentAuditData& default_instance();

  static inline const ContentAuditData* internal_default_instance() {
    return reinterpret_cast<const ContentAuditData*>(
               &_ContentAuditData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    191;

  void Swap(ContentAuditData* other);
  friend void swap(ContentAuditData& a, ContentAuditData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContentAuditData* New() const PROTOBUF_FINAL { return New(NULL); }

  ContentAuditData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContentAuditData& from);
  void MergeFrom(const ContentAuditData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContentAuditData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint32 auto_pass_time = 3;
  void clear_auto_pass_time();
  static const int kAutoPassTimeFieldNumber = 3;
  ::google::protobuf::uint32 auto_pass_time() const;
  void set_auto_pass_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ContentAuditData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 auto_pass_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContentAuditField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ContentAuditField) */ {
 public:
  ContentAuditField();
  virtual ~ContentAuditField();

  ContentAuditField(const ContentAuditField& from);

  inline ContentAuditField& operator=(const ContentAuditField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContentAuditField(ContentAuditField&& from) noexcept
    : ContentAuditField() {
    *this = ::std::move(from);
  }

  inline ContentAuditField& operator=(ContentAuditField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentAuditField& default_instance();

  static inline const ContentAuditField* internal_default_instance() {
    return reinterpret_cast<const ContentAuditField*>(
               &_ContentAuditField_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    192;

  void Swap(ContentAuditField* other);
  friend void swap(ContentAuditField& a, ContentAuditField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContentAuditField* New() const PROTOBUF_FINAL { return New(NULL); }

  ContentAuditField* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContentAuditField& from);
  void MergeFrom(const ContentAuditField& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContentAuditField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ContentAuditData segment_list = 1;
  int segment_list_size() const;
  void clear_segment_list();
  static const int kSegmentListFieldNumber = 1;
  const ::proto::ContentAuditData& segment_list(int index) const;
  ::proto::ContentAuditData* mutable_segment_list(int index);
  ::proto::ContentAuditData* add_segment_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditData >*
      mutable_segment_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditData >&
      segment_list() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.ContentAuditField)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditData > segment_list_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContentAuditAuxiliaryField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ContentAuditAuxiliaryField) */ {
 public:
  ContentAuditAuxiliaryField();
  virtual ~ContentAuditAuxiliaryField();

  ContentAuditAuxiliaryField(const ContentAuditAuxiliaryField& from);

  inline ContentAuditAuxiliaryField& operator=(const ContentAuditAuxiliaryField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContentAuditAuxiliaryField(ContentAuditAuxiliaryField&& from) noexcept
    : ContentAuditAuxiliaryField() {
    *this = ::std::move(from);
  }

  inline ContentAuditAuxiliaryField& operator=(ContentAuditAuxiliaryField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentAuditAuxiliaryField& default_instance();

  static inline const ContentAuditAuxiliaryField* internal_default_instance() {
    return reinterpret_cast<const ContentAuditAuxiliaryField*>(
               &_ContentAuditAuxiliaryField_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    193;

  void Swap(ContentAuditAuxiliaryField* other);
  friend void swap(ContentAuditAuxiliaryField& a, ContentAuditAuxiliaryField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContentAuditAuxiliaryField* New() const PROTOBUF_FINAL { return New(NULL); }

  ContentAuditAuxiliaryField* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContentAuditAuxiliaryField& from);
  void MergeFrom(const ContentAuditAuxiliaryField& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContentAuditAuxiliaryField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.ContentAuditAuxiliaryField)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NicknameSignatureAuditData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NicknameSignatureAuditData) */ {
 public:
  NicknameSignatureAuditData();
  virtual ~NicknameSignatureAuditData();

  NicknameSignatureAuditData(const NicknameSignatureAuditData& from);

  inline NicknameSignatureAuditData& operator=(const NicknameSignatureAuditData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NicknameSignatureAuditData(NicknameSignatureAuditData&& from) noexcept
    : NicknameSignatureAuditData() {
    *this = ::std::move(from);
  }

  inline NicknameSignatureAuditData& operator=(NicknameSignatureAuditData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NicknameSignatureAuditData& default_instance();

  static inline const NicknameSignatureAuditData* internal_default_instance() {
    return reinterpret_cast<const NicknameSignatureAuditData*>(
               &_NicknameSignatureAuditData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    194;

  void Swap(NicknameSignatureAuditData* other);
  friend void swap(NicknameSignatureAuditData& a, NicknameSignatureAuditData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NicknameSignatureAuditData* New() const PROTOBUF_FINAL { return New(NULL); }

  NicknameSignatureAuditData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NicknameSignatureAuditData& from);
  void MergeFrom(const NicknameSignatureAuditData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NicknameSignatureAuditData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ContentAuditField audit_field_list = 7;
  int audit_field_list_size() const;
  void clear_audit_field_list();
  static const int kAuditFieldListFieldNumber = 7;
  const ::proto::ContentAuditField& audit_field_list(int index) const;
  ::proto::ContentAuditField* mutable_audit_field_list(int index);
  ::proto::ContentAuditField* add_audit_field_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditField >*
      mutable_audit_field_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditField >&
      audit_field_list() const;

  // repeated .proto.ContentAuditAuxiliaryField aux_field_list = 8;
  int aux_field_list_size() const;
  void clear_aux_field_list();
  static const int kAuxFieldListFieldNumber = 8;
  const ::proto::ContentAuditAuxiliaryField& aux_field_list(int index) const;
  ::proto::ContentAuditAuxiliaryField* mutable_aux_field_list(int index);
  ::proto::ContentAuditAuxiliaryField* add_aux_field_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >*
      mutable_aux_field_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >&
      aux_field_list() const;

  // string aid = 1;
  void clear_aid();
  static const int kAidFieldNumber = 1;
  const ::std::string& aid() const;
  void set_aid(const ::std::string& value);
  #if LANG_CXX11
  void set_aid(::std::string&& value);
  #endif
  void set_aid(const char* value);
  void set_aid(const char* value, size_t size);
  ::std::string* mutable_aid();
  ::std::string* release_aid();
  void set_allocated_aid(::std::string* aid);

  // string entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  const ::std::string& entity_id() const;
  void set_entity_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_id(::std::string&& value);
  #endif
  void set_entity_id(const char* value);
  void set_entity_id(const char* value, size_t size);
  ::std::string* mutable_entity_id();
  ::std::string* release_entity_id();
  void set_allocated_entity_id(::std::string* entity_id);

  // string lang = 3;
  void clear_lang();
  static const int kLangFieldNumber = 3;
  const ::std::string& lang() const;
  void set_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_lang(::std::string&& value);
  #endif
  void set_lang(const char* value);
  void set_lang(const char* value, size_t size);
  ::std::string* mutable_lang();
  ::std::string* release_lang();
  void set_allocated_lang(::std::string* lang);

  // string queue_key = 4;
  void clear_queue_key();
  static const int kQueueKeyFieldNumber = 4;
  const ::std::string& queue_key() const;
  void set_queue_key(const ::std::string& value);
  #if LANG_CXX11
  void set_queue_key(::std::string&& value);
  #endif
  void set_queue_key(const char* value);
  void set_queue_key(const char* value, size_t size);
  ::std::string* mutable_queue_key();
  ::std::string* release_queue_key();
  void set_allocated_queue_key(::std::string* queue_key);

  // string region = 5;
  void clear_region();
  static const int kRegionFieldNumber = 5;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // uint32 uid = 6;
  void clear_uid();
  static const int kUidFieldNumber = 6;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.NicknameSignatureAuditData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditField > audit_field_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField > aux_field_list_;
  ::google::protobuf::internal::ArenaStringPtr aid_;
  ::google::protobuf::internal::ArenaStringPtr entity_id_;
  ::google::protobuf::internal::ArenaStringPtr lang_;
  ::google::protobuf::internal::ArenaStringPtr queue_key_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarRenameAuditContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarRenameAuditContent) */ {
 public:
  AvatarRenameAuditContent();
  virtual ~AvatarRenameAuditContent();

  AvatarRenameAuditContent(const AvatarRenameAuditContent& from);

  inline AvatarRenameAuditContent& operator=(const AvatarRenameAuditContent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarRenameAuditContent(AvatarRenameAuditContent&& from) noexcept
    : AvatarRenameAuditContent() {
    *this = ::std::move(from);
  }

  inline AvatarRenameAuditContent& operator=(AvatarRenameAuditContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarRenameAuditContent& default_instance();

  static inline const AvatarRenameAuditContent* internal_default_instance() {
    return reinterpret_cast<const AvatarRenameAuditContent*>(
               &_AvatarRenameAuditContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    195;

  void Swap(AvatarRenameAuditContent* other);
  friend void swap(AvatarRenameAuditContent& a, AvatarRenameAuditContent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarRenameAuditContent* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarRenameAuditContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarRenameAuditContent& from);
  void MergeFrom(const AvatarRenameAuditContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarRenameAuditContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint32 auto_fail_time = 3;
  void clear_auto_fail_time();
  static const int kAutoFailTimeFieldNumber = 3;
  ::google::protobuf::uint32 auto_fail_time() const;
  void set_auto_fail_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarRenameAuditContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 auto_fail_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarRenameContentAuditField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarRenameContentAuditField) */ {
 public:
  AvatarRenameContentAuditField();
  virtual ~AvatarRenameContentAuditField();

  AvatarRenameContentAuditField(const AvatarRenameContentAuditField& from);

  inline AvatarRenameContentAuditField& operator=(const AvatarRenameContentAuditField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarRenameContentAuditField(AvatarRenameContentAuditField&& from) noexcept
    : AvatarRenameContentAuditField() {
    *this = ::std::move(from);
  }

  inline AvatarRenameContentAuditField& operator=(AvatarRenameContentAuditField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarRenameContentAuditField& default_instance();

  static inline const AvatarRenameContentAuditField* internal_default_instance() {
    return reinterpret_cast<const AvatarRenameContentAuditField*>(
               &_AvatarRenameContentAuditField_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    196;

  void Swap(AvatarRenameContentAuditField* other);
  friend void swap(AvatarRenameContentAuditField& a, AvatarRenameContentAuditField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarRenameContentAuditField* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarRenameContentAuditField* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarRenameContentAuditField& from);
  void MergeFrom(const AvatarRenameContentAuditField& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarRenameContentAuditField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AvatarRenameAuditContent segment_list = 1;
  int segment_list_size() const;
  void clear_segment_list();
  static const int kSegmentListFieldNumber = 1;
  const ::proto::AvatarRenameAuditContent& segment_list(int index) const;
  ::proto::AvatarRenameAuditContent* mutable_segment_list(int index);
  ::proto::AvatarRenameAuditContent* add_segment_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameAuditContent >*
      mutable_segment_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameAuditContent >&
      segment_list() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.AvatarRenameContentAuditField)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameAuditContent > segment_list_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarRenameAuditData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarRenameAuditData) */ {
 public:
  AvatarRenameAuditData();
  virtual ~AvatarRenameAuditData();

  AvatarRenameAuditData(const AvatarRenameAuditData& from);

  inline AvatarRenameAuditData& operator=(const AvatarRenameAuditData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarRenameAuditData(AvatarRenameAuditData&& from) noexcept
    : AvatarRenameAuditData() {
    *this = ::std::move(from);
  }

  inline AvatarRenameAuditData& operator=(AvatarRenameAuditData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarRenameAuditData& default_instance();

  static inline const AvatarRenameAuditData* internal_default_instance() {
    return reinterpret_cast<const AvatarRenameAuditData*>(
               &_AvatarRenameAuditData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    197;

  void Swap(AvatarRenameAuditData* other);
  friend void swap(AvatarRenameAuditData& a, AvatarRenameAuditData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarRenameAuditData* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarRenameAuditData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarRenameAuditData& from);
  void MergeFrom(const AvatarRenameAuditData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarRenameAuditData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AvatarRenameContentAuditField audit_field_list = 7;
  int audit_field_list_size() const;
  void clear_audit_field_list();
  static const int kAuditFieldListFieldNumber = 7;
  const ::proto::AvatarRenameContentAuditField& audit_field_list(int index) const;
  ::proto::AvatarRenameContentAuditField* mutable_audit_field_list(int index);
  ::proto::AvatarRenameContentAuditField* add_audit_field_list();
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameContentAuditField >*
      mutable_audit_field_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameContentAuditField >&
      audit_field_list() const;

  // repeated .proto.ContentAuditAuxiliaryField aux_field_list = 8;
  int aux_field_list_size() const;
  void clear_aux_field_list();
  static const int kAuxFieldListFieldNumber = 8;
  const ::proto::ContentAuditAuxiliaryField& aux_field_list(int index) const;
  ::proto::ContentAuditAuxiliaryField* mutable_aux_field_list(int index);
  ::proto::ContentAuditAuxiliaryField* add_aux_field_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >*
      mutable_aux_field_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >&
      aux_field_list() const;

  // string aid = 1;
  void clear_aid();
  static const int kAidFieldNumber = 1;
  const ::std::string& aid() const;
  void set_aid(const ::std::string& value);
  #if LANG_CXX11
  void set_aid(::std::string&& value);
  #endif
  void set_aid(const char* value);
  void set_aid(const char* value, size_t size);
  ::std::string* mutable_aid();
  ::std::string* release_aid();
  void set_allocated_aid(::std::string* aid);

  // string entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  const ::std::string& entity_id() const;
  void set_entity_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_id(::std::string&& value);
  #endif
  void set_entity_id(const char* value);
  void set_entity_id(const char* value, size_t size);
  ::std::string* mutable_entity_id();
  ::std::string* release_entity_id();
  void set_allocated_entity_id(::std::string* entity_id);

  // string lang = 3;
  void clear_lang();
  static const int kLangFieldNumber = 3;
  const ::std::string& lang() const;
  void set_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_lang(::std::string&& value);
  #endif
  void set_lang(const char* value);
  void set_lang(const char* value, size_t size);
  ::std::string* mutable_lang();
  ::std::string* release_lang();
  void set_allocated_lang(::std::string* lang);

  // string queue_key = 4;
  void clear_queue_key();
  static const int kQueueKeyFieldNumber = 4;
  const ::std::string& queue_key() const;
  void set_queue_key(const ::std::string& value);
  #if LANG_CXX11
  void set_queue_key(::std::string&& value);
  #endif
  void set_queue_key(const char* value);
  void set_queue_key(const char* value, size_t size);
  ::std::string* mutable_queue_key();
  ::std::string* release_queue_key();
  void set_allocated_queue_key(::std::string* queue_key);

  // string region = 5;
  void clear_region();
  static const int kRegionFieldNumber = 5;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // uint32 uid = 6;
  void clear_uid();
  static const int kUidFieldNumber = 6;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarRenameAuditData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameContentAuditField > audit_field_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField > aux_field_list_;
  ::google::protobuf::internal::ArenaStringPtr aid_;
  ::google::protobuf::internal::ArenaStringPtr entity_id_;
  ::google::protobuf::internal::ArenaStringPtr lang_;
  ::google::protobuf::internal::ArenaStringPtr queue_key_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityDungeonAvatar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ActivityDungeonAvatar) */ {
 public:
  ActivityDungeonAvatar();
  virtual ~ActivityDungeonAvatar();

  ActivityDungeonAvatar(const ActivityDungeonAvatar& from);

  inline ActivityDungeonAvatar& operator=(const ActivityDungeonAvatar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityDungeonAvatar(ActivityDungeonAvatar&& from) noexcept
    : ActivityDungeonAvatar() {
    *this = ::std::move(from);
  }

  inline ActivityDungeonAvatar& operator=(ActivityDungeonAvatar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityDungeonAvatar& default_instance();

  static inline const ActivityDungeonAvatar* internal_default_instance() {
    return reinterpret_cast<const ActivityDungeonAvatar*>(
               &_ActivityDungeonAvatar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    198;

  void Swap(ActivityDungeonAvatar* other);
  friend void swap(ActivityDungeonAvatar& a, ActivityDungeonAvatar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityDungeonAvatar* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityDungeonAvatar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityDungeonAvatar& from);
  void MergeFrom(const ActivityDungeonAvatar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityDungeonAvatar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // bool is_trial = 2;
  void clear_is_trial();
  static const int kIsTrialFieldNumber = 2;
  bool is_trial() const;
  void set_is_trial(bool value);

  // uint32 costume_id = 3;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 3;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ActivityDungeonAvatar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  bool is_trial_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GCGChallengeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GCGChallengeData) */ {
 public:
  GCGChallengeData();
  virtual ~GCGChallengeData();

  GCGChallengeData(const GCGChallengeData& from);

  inline GCGChallengeData& operator=(const GCGChallengeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCGChallengeData(GCGChallengeData&& from) noexcept
    : GCGChallengeData() {
    *this = ::std::move(from);
  }

  inline GCGChallengeData& operator=(GCGChallengeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGChallengeData& default_instance();

  static inline const GCGChallengeData* internal_default_instance() {
    return reinterpret_cast<const GCGChallengeData*>(
               &_GCGChallengeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    199;

  void Swap(GCGChallengeData* other);
  friend void swap(GCGChallengeData& a, GCGChallengeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCGChallengeData* New() const PROTOBUF_FINAL { return New(NULL); }

  GCGChallengeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GCGChallengeData& from);
  void MergeFrom(const GCGChallengeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GCGChallengeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 param_list = 3;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 3;
  ::google::protobuf::uint32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::uint32 value);
  void add_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_list();

  // uint32 challenge_id = 1;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 1;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // uint32 challenge_type = 2;
  void clear_challenge_type();
  static const int kChallengeTypeFieldNumber = 2;
  ::google::protobuf::uint32 challenge_type() const;
  void set_challenge_type(::google::protobuf::uint32 value);

  // uint32 progress = 4;
  void clear_progress();
  static const int kProgressFieldNumber = 4;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GCGChallengeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 challenge_type_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GCGDuelExtra : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GCGDuelExtra) */ {
 public:
  GCGDuelExtra();
  virtual ~GCGDuelExtra();

  GCGDuelExtra(const GCGDuelExtra& from);

  inline GCGDuelExtra& operator=(const GCGDuelExtra& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCGDuelExtra(GCGDuelExtra&& from) noexcept
    : GCGDuelExtra() {
    *this = ::std::move(from);
  }

  inline GCGDuelExtra& operator=(GCGDuelExtra&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGDuelExtra& default_instance();

  static inline const GCGDuelExtra* internal_default_instance() {
    return reinterpret_cast<const GCGDuelExtra*>(
               &_GCGDuelExtra_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    201;

  void Swap(GCGDuelExtra* other);
  friend void swap(GCGDuelExtra& a, GCGDuelExtra& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCGDuelExtra* New() const PROTOBUF_FINAL { return New(NULL); }

  GCGDuelExtra* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GCGDuelExtra& from);
  void MergeFrom(const GCGDuelExtra& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GCGDuelExtra* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 card_id_list = 1;
  int card_id_list_size() const;
  void clear_card_id_list();
  static const int kCardIdListFieldNumber = 1;
  ::google::protobuf::uint32 card_id_list(int index) const;
  void set_card_id_list(int index, ::google::protobuf::uint32 value);
  void add_card_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_id_list();

  // map<uint32, uint32> card_face_map = 4;
  int card_face_map_size() const;
  void clear_card_face_map();
  static const int kCardFaceMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      card_face_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_card_face_map();

  // repeated .proto.GCGChallengeData challenge_list = 5;
  int challenge_list_size() const;
  void clear_challenge_list();
  static const int kChallengeListFieldNumber = 5;
  const ::proto::GCGChallengeData& challenge_list(int index) const;
  ::proto::GCGChallengeData* mutable_challenge_list(int index);
  ::proto::GCGChallengeData* add_challenge_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GCGChallengeData >*
      mutable_challenge_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GCGChallengeData >&
      challenge_list() const;

  // repeated uint32 forbid_finish_challenge_list = 10;
  int forbid_finish_challenge_list_size() const;
  void clear_forbid_finish_challenge_list();
  static const int kForbidFinishChallengeListFieldNumber = 10;
  ::google::protobuf::uint32 forbid_finish_challenge_list(int index) const;
  void set_forbid_finish_challenge_list(int index, ::google::protobuf::uint32 value);
  void add_forbid_finish_challenge_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forbid_finish_challenge_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forbid_finish_challenge_list();

  // uint32 field_id = 2;
  void clear_field_id();
  static const int kFieldIdFieldNumber = 2;
  ::google::protobuf::uint32 field_id() const;
  void set_field_id(::google::protobuf::uint32 value);

  // uint32 card_back_id = 3;
  void clear_card_back_id();
  static const int kCardBackIdFieldNumber = 3;
  ::google::protobuf::uint32 card_back_id() const;
  void set_card_back_id(::google::protobuf::uint32 value);

  // uint32 score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 ai_deck_id = 8;
  void clear_ai_deck_id();
  static const int kAiDeckIdFieldNumber = 8;
  ::google::protobuf::uint32 ai_deck_id() const;
  void set_ai_deck_id(::google::protobuf::uint32 value);

  // bool is_match_ai = 7;
  void clear_is_match_ai();
  static const int kIsMatchAiFieldNumber = 7;
  bool is_match_ai() const;
  void set_is_match_ai(bool value);

  // bool is_internal = 9;
  void clear_is_internal();
  static const int kIsInternalFieldNumber = 9;
  bool is_internal() const;
  void set_is_internal(bool value);

  // uint32 level = 11;
  void clear_level();
  static const int kLevelFieldNumber = 11;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 client_version = 12;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 12;
  ::google::protobuf::uint32 client_version() const;
  void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GCGDuelExtra)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_id_list_;
  mutable int _card_id_list_cached_byte_size_;
  public:
  class GCGDuelExtra_CardFaceMapEntry : public ::google::protobuf::internal::MapEntry<GCGDuelExtra_CardFaceMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GCGDuelExtra_CardFaceMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GCGDuelExtra_CardFaceMapEntry();
    GCGDuelExtra_CardFaceMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GCGDuelExtra_CardFaceMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GCGDuelExtra_CardFaceMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GCGDuelExtra_CardFaceMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > card_face_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::GCGChallengeData > challenge_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forbid_finish_challenge_list_;
  mutable int _forbid_finish_challenge_list_cached_byte_size_;
  ::google::protobuf::uint32 field_id_;
  ::google::protobuf::uint32 card_back_id_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ai_deck_id_;
  bool is_match_ai_;
  bool is_internal_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 client_version_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryIpRegionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryIpRegionData) */ {
 public:
  QueryIpRegionData();
  virtual ~QueryIpRegionData();

  QueryIpRegionData(const QueryIpRegionData& from);

  inline QueryIpRegionData& operator=(const QueryIpRegionData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryIpRegionData(QueryIpRegionData&& from) noexcept
    : QueryIpRegionData() {
    *this = ::std::move(from);
  }

  inline QueryIpRegionData& operator=(QueryIpRegionData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryIpRegionData& default_instance();

  static inline const QueryIpRegionData* internal_default_instance() {
    return reinterpret_cast<const QueryIpRegionData*>(
               &_QueryIpRegionData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    202;

  void Swap(QueryIpRegionData* other);
  friend void swap(QueryIpRegionData& a, QueryIpRegionData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryIpRegionData* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryIpRegionData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryIpRegionData& from);
  void MergeFrom(const QueryIpRegionData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryIpRegionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // @@protoc_insertion_point(class_scope:proto.QueryIpRegionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParamList

// repeated uint32 param_list = 1;
inline int ParamList::param_list_size() const {
  return param_list_.size();
}
inline void ParamList::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::uint32 ParamList::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParamList.param_list)
  return param_list_.Get(index);
}
inline void ParamList::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ParamList.param_list)
}
inline void ParamList::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ParamList.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ParamList::param_list() const {
  // @@protoc_insertion_point(field_list:proto.ParamList.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ParamList::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParamList.param_list)
  return &param_list_;
}

// -------------------------------------------------------------------

// PropValue

// uint32 type = 1;
inline void PropValue::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 PropValue::type() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.type)
  return type_;
}
inline void PropValue::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.type)
}

// int64 val = 4;
inline void PropValue::clear_val() {
  val_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PropValue::val() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.val)
  return val_;
}
inline void PropValue::set_val(::google::protobuf::int64 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.val)
}

// int64 ival = 2;
inline bool PropValue::has_ival() const {
  return value_case() == kIval;
}
inline void PropValue::set_has_ival() {
  _oneof_case_[0] = kIval;
}
inline void PropValue::clear_ival() {
  if (has_ival()) {
    value_.ival_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 PropValue::ival() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.ival)
  if (has_ival()) {
    return value_.ival_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void PropValue::set_ival(::google::protobuf::int64 value) {
  if (!has_ival()) {
    clear_value();
    set_has_ival();
  }
  value_.ival_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.ival)
}

// float fval = 3;
inline bool PropValue::has_fval() const {
  return value_case() == kFval;
}
inline void PropValue::set_has_fval() {
  _oneof_case_[0] = kFval;
}
inline void PropValue::clear_fval() {
  if (has_fval()) {
    value_.fval_ = 0;
    clear_has_value();
  }
}
inline float PropValue::fval() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.fval)
  if (has_fval()) {
    return value_.fval_;
  }
  return 0;
}
inline void PropValue::set_fval(float value) {
  if (!has_fval()) {
    clear_value();
    set_has_fval();
  }
  value_.fval_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.fval)
}

inline bool PropValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void PropValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline PropValue::ValueCase PropValue::value_case() const {
  return PropValue::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Uint32Pair

// uint32 key = 1;
inline void Uint32Pair::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 Uint32Pair::key() const {
  // @@protoc_insertion_point(field_get:proto.Uint32Pair.key)
  return key_;
}
inline void Uint32Pair::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32Pair.key)
}

// uint32 value = 2;
inline void Uint32Pair::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 Uint32Pair::value() const {
  // @@protoc_insertion_point(field_get:proto.Uint32Pair.value)
  return value_;
}
inline void Uint32Pair::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32Pair.value)
}

// -------------------------------------------------------------------

// RegionSimpleInfo

// string name = 1;
inline void RegionSimpleInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.name)
  return name_.GetNoArena();
}
inline void RegionSimpleInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.name)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.name)
}
#endif
inline void RegionSimpleInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.name)
}
inline void RegionSimpleInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.name)
}
inline ::std::string* RegionSimpleInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.name)
}

// string title = 2;
inline void RegionSimpleInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::title() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.title)
  return title_.GetNoArena();
}
inline void RegionSimpleInfo::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.title)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.title)
}
#endif
inline void RegionSimpleInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.title)
}
inline void RegionSimpleInfo::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.title)
}
inline ::std::string* RegionSimpleInfo::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_title() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.title)
}

// string type = 3;
inline void RegionSimpleInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.type)
  return type_.GetNoArena();
}
inline void RegionSimpleInfo::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.type)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.type)
}
#endif
inline void RegionSimpleInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.type)
}
inline void RegionSimpleInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.type)
}
inline ::std::string* RegionSimpleInfo::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_type() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.type)
}

// string dispatch_url = 4;
inline void RegionSimpleInfo::clear_dispatch_url() {
  dispatch_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::dispatch_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.dispatch_url)
  return dispatch_url_.GetNoArena();
}
inline void RegionSimpleInfo::set_dispatch_url(const ::std::string& value) {
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.dispatch_url)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_dispatch_url(::std::string&& value) {
  
  dispatch_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.dispatch_url)
}
#endif
inline void RegionSimpleInfo::set_dispatch_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.dispatch_url)
}
inline void RegionSimpleInfo::set_dispatch_url(const char* value, size_t size) {
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.dispatch_url)
}
inline ::std::string* RegionSimpleInfo::mutable_dispatch_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.dispatch_url)
  return dispatch_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_dispatch_url() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.dispatch_url)
  
  return dispatch_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_dispatch_url(::std::string* dispatch_url) {
  if (dispatch_url != NULL) {
    
  } else {
    
  }
  dispatch_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatch_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.dispatch_url)
}

// -------------------------------------------------------------------

// QueryRegionListHttpRsp

// int32 retcode = 1;
inline void QueryRegionListHttpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 QueryRegionListHttpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.retcode)
  return retcode_;
}
inline void QueryRegionListHttpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.retcode)
}

// repeated .proto.RegionSimpleInfo region_list = 2;
inline int QueryRegionListHttpRsp::region_list_size() const {
  return region_list_.size();
}
inline void QueryRegionListHttpRsp::clear_region_list() {
  region_list_.Clear();
}
inline const ::proto::RegionSimpleInfo& QueryRegionListHttpRsp::region_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Get(index);
}
inline ::proto::RegionSimpleInfo* QueryRegionListHttpRsp::mutable_region_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Mutable(index);
}
inline ::proto::RegionSimpleInfo* QueryRegionListHttpRsp::add_region_list() {
  // @@protoc_insertion_point(field_add:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >*
QueryRegionListHttpRsp::mutable_region_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QueryRegionListHttpRsp.region_list)
  return &region_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >&
QueryRegionListHttpRsp::region_list() const {
  // @@protoc_insertion_point(field_list:proto.QueryRegionListHttpRsp.region_list)
  return region_list_;
}

// bytes client_secret_key = 5;
inline void QueryRegionListHttpRsp::clear_client_secret_key() {
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRegionListHttpRsp::client_secret_key() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_secret_key)
  return client_secret_key_.GetNoArena();
}
inline void QueryRegionListHttpRsp::set_client_secret_key(const ::std::string& value) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_secret_key)
}
#if LANG_CXX11
inline void QueryRegionListHttpRsp::set_client_secret_key(::std::string&& value) {
  
  client_secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_secret_key)
}
#endif
inline void QueryRegionListHttpRsp::set_client_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_secret_key)
}
inline void QueryRegionListHttpRsp::set_client_secret_key(const void* value, size_t size) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_secret_key)
}
inline ::std::string* QueryRegionListHttpRsp::mutable_client_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_secret_key)
  return client_secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRegionListHttpRsp::release_client_secret_key() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_secret_key)
  
  return client_secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRegionListHttpRsp::set_allocated_client_secret_key(::std::string* client_secret_key) {
  if (client_secret_key != NULL) {
    
  } else {
    
  }
  client_secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_secret_key)
}

// bytes client_custom_config_encrypted = 6;
inline void QueryRegionListHttpRsp::clear_client_custom_config_encrypted() {
  client_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRegionListHttpRsp::client_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  return client_custom_config_encrypted_.GetNoArena();
}
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const ::std::string& value) {
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
#if LANG_CXX11
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(::std::string&& value) {
  
  client_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
#endif
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const void* value, size_t size) {
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
inline ::std::string* QueryRegionListHttpRsp::mutable_client_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  return client_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRegionListHttpRsp::release_client_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  
  return client_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRegionListHttpRsp::set_allocated_client_custom_config_encrypted(::std::string* client_custom_config_encrypted) {
  if (client_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  client_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}

// bool enable_login_pc = 7;
inline void QueryRegionListHttpRsp::clear_enable_login_pc() {
  enable_login_pc_ = false;
}
inline bool QueryRegionListHttpRsp::enable_login_pc() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.enable_login_pc)
  return enable_login_pc_;
}
inline void QueryRegionListHttpRsp::set_enable_login_pc(bool value) {
  
  enable_login_pc_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.enable_login_pc)
}

// -------------------------------------------------------------------

// ForceUpdateInfo

// string force_update_url = 1;
inline void ForceUpdateInfo::clear_force_update_url() {
  force_update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForceUpdateInfo::force_update_url() const {
  // @@protoc_insertion_point(field_get:proto.ForceUpdateInfo.force_update_url)
  return force_update_url_.GetNoArena();
}
inline void ForceUpdateInfo::set_force_update_url(const ::std::string& value) {
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ForceUpdateInfo.force_update_url)
}
#if LANG_CXX11
inline void ForceUpdateInfo::set_force_update_url(::std::string&& value) {
  
  force_update_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ForceUpdateInfo.force_update_url)
}
#endif
inline void ForceUpdateInfo::set_force_update_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ForceUpdateInfo.force_update_url)
}
inline void ForceUpdateInfo::set_force_update_url(const char* value, size_t size) {
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ForceUpdateInfo.force_update_url)
}
inline ::std::string* ForceUpdateInfo::mutable_force_update_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.ForceUpdateInfo.force_update_url)
  return force_update_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForceUpdateInfo::release_force_update_url() {
  // @@protoc_insertion_point(field_release:proto.ForceUpdateInfo.force_update_url)
  
  return force_update_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForceUpdateInfo::set_allocated_force_update_url(::std::string* force_update_url) {
  if (force_update_url != NULL) {
    
  } else {
    
  }
  force_update_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), force_update_url);
  // @@protoc_insertion_point(field_set_allocated:proto.ForceUpdateInfo.force_update_url)
}

// -------------------------------------------------------------------

// StopServerInfo

// uint32 stop_begin_time = 1;
inline void StopServerInfo::clear_stop_begin_time() {
  stop_begin_time_ = 0u;
}
inline ::google::protobuf::uint32 StopServerInfo::stop_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.stop_begin_time)
  return stop_begin_time_;
}
inline void StopServerInfo::set_stop_begin_time(::google::protobuf::uint32 value) {
  
  stop_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.stop_begin_time)
}

// uint32 stop_end_time = 2;
inline void StopServerInfo::clear_stop_end_time() {
  stop_end_time_ = 0u;
}
inline ::google::protobuf::uint32 StopServerInfo::stop_end_time() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.stop_end_time)
  return stop_end_time_;
}
inline void StopServerInfo::set_stop_end_time(::google::protobuf::uint32 value) {
  
  stop_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.stop_end_time)
}

// string url = 3;
inline void StopServerInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopServerInfo::url() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.url)
  return url_.GetNoArena();
}
inline void StopServerInfo::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.url)
}
#if LANG_CXX11
inline void StopServerInfo::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.StopServerInfo.url)
}
#endif
inline void StopServerInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.StopServerInfo.url)
}
inline void StopServerInfo::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.StopServerInfo.url)
}
inline ::std::string* StopServerInfo::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.StopServerInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopServerInfo::release_url() {
  // @@protoc_insertion_point(field_release:proto.StopServerInfo.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopServerInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.StopServerInfo.url)
}

// string content_msg = 4;
inline void StopServerInfo::clear_content_msg() {
  content_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopServerInfo::content_msg() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.content_msg)
  return content_msg_.GetNoArena();
}
inline void StopServerInfo::set_content_msg(const ::std::string& value) {
  
  content_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.content_msg)
}
#if LANG_CXX11
inline void StopServerInfo::set_content_msg(::std::string&& value) {
  
  content_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.StopServerInfo.content_msg)
}
#endif
inline void StopServerInfo::set_content_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.StopServerInfo.content_msg)
}
inline void StopServerInfo::set_content_msg(const char* value, size_t size) {
  
  content_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.StopServerInfo.content_msg)
}
inline ::std::string* StopServerInfo::mutable_content_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.StopServerInfo.content_msg)
  return content_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopServerInfo::release_content_msg() {
  // @@protoc_insertion_point(field_release:proto.StopServerInfo.content_msg)
  
  return content_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopServerInfo::set_allocated_content_msg(::std::string* content_msg) {
  if (content_msg != NULL) {
    
  } else {
    
  }
  content_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_msg);
  // @@protoc_insertion_point(field_set_allocated:proto.StopServerInfo.content_msg)
}

// -------------------------------------------------------------------

// ResVersionConfig

// uint32 version = 1;
inline void ResVersionConfig::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 ResVersionConfig::version() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.version)
  return version_;
}
inline void ResVersionConfig::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.version)
}

// bool relogin = 2;
inline void ResVersionConfig::clear_relogin() {
  relogin_ = false;
}
inline bool ResVersionConfig::relogin() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.relogin)
  return relogin_;
}
inline void ResVersionConfig::set_relogin(bool value) {
  
  relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.relogin)
}

// string md5 = 3;
inline void ResVersionConfig::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResVersionConfig::md5() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.md5)
  return md5_.GetNoArena();
}
inline void ResVersionConfig::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.md5)
}
#if LANG_CXX11
inline void ResVersionConfig::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.md5)
}
#endif
inline void ResVersionConfig::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.md5)
}
inline void ResVersionConfig::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.md5)
}
inline ::std::string* ResVersionConfig::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResVersionConfig::release_md5() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResVersionConfig::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.md5)
}

// string release_total_size = 4;
inline void ResVersionConfig::clear_release_total_size() {
  release_total_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResVersionConfig::release_total_size() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.release_total_size)
  return release_total_size_.GetNoArena();
}
inline void ResVersionConfig::set_release_total_size(const ::std::string& value) {
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.release_total_size)
}
#if LANG_CXX11
inline void ResVersionConfig::set_release_total_size(::std::string&& value) {
  
  release_total_size_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.release_total_size)
}
#endif
inline void ResVersionConfig::set_release_total_size(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.release_total_size)
}
inline void ResVersionConfig::set_release_total_size(const char* value, size_t size) {
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.release_total_size)
}
inline ::std::string* ResVersionConfig::mutable_release_total_size() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.release_total_size)
  return release_total_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResVersionConfig::release_release_total_size() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.release_total_size)
  
  return release_total_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResVersionConfig::set_allocated_release_total_size(::std::string* release_total_size) {
  if (release_total_size != NULL) {
    
  } else {
    
  }
  release_total_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), release_total_size);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.release_total_size)
}

// string version_suffix = 5;
inline void ResVersionConfig::clear_version_suffix() {
  version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResVersionConfig::version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.version_suffix)
  return version_suffix_.GetNoArena();
}
inline void ResVersionConfig::set_version_suffix(const ::std::string& value) {
  
  version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.version_suffix)
}
#if LANG_CXX11
inline void ResVersionConfig::set_version_suffix(::std::string&& value) {
  
  version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.version_suffix)
}
#endif
inline void ResVersionConfig::set_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.version_suffix)
}
inline void ResVersionConfig::set_version_suffix(const char* value, size_t size) {
  
  version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.version_suffix)
}
inline ::std::string* ResVersionConfig::mutable_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.version_suffix)
  return version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResVersionConfig::release_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.version_suffix)
  
  return version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResVersionConfig::set_allocated_version_suffix(::std::string* version_suffix) {
  if (version_suffix != NULL) {
    
  } else {
    
  }
  version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.version_suffix)
}

// string branch = 6;
inline void ResVersionConfig::clear_branch() {
  branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResVersionConfig::branch() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.branch)
  return branch_.GetNoArena();
}
inline void ResVersionConfig::set_branch(const ::std::string& value) {
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.branch)
}
#if LANG_CXX11
inline void ResVersionConfig::set_branch(::std::string&& value) {
  
  branch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.branch)
}
#endif
inline void ResVersionConfig::set_branch(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.branch)
}
inline void ResVersionConfig::set_branch(const char* value, size_t size) {
  
  branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.branch)
}
inline ::std::string* ResVersionConfig::mutable_branch() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.branch)
  return branch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResVersionConfig::release_branch() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.branch)
  
  return branch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResVersionConfig::set_allocated_branch(::std::string* branch) {
  if (branch != NULL) {
    
  } else {
    
  }
  branch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), branch);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.branch)
}

// string next_script_version = 7;
inline void ResVersionConfig::clear_next_script_version() {
  next_script_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResVersionConfig::next_script_version() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.next_script_version)
  return next_script_version_.GetNoArena();
}
inline void ResVersionConfig::set_next_script_version(const ::std::string& value) {
  
  next_script_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.next_script_version)
}
#if LANG_CXX11
inline void ResVersionConfig::set_next_script_version(::std::string&& value) {
  
  next_script_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.next_script_version)
}
#endif
inline void ResVersionConfig::set_next_script_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_script_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.next_script_version)
}
inline void ResVersionConfig::set_next_script_version(const char* value, size_t size) {
  
  next_script_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.next_script_version)
}
inline ::std::string* ResVersionConfig::mutable_next_script_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.next_script_version)
  return next_script_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResVersionConfig::release_next_script_version() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.next_script_version)
  
  return next_script_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResVersionConfig::set_allocated_next_script_version(::std::string* next_script_version) {
  if (next_script_version != NULL) {
    
  } else {
    
  }
  next_script_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_script_version);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.next_script_version)
}

// -------------------------------------------------------------------

// RegionInfo

// string gateserver_ip = 1;
inline void RegionInfo::clear_gateserver_ip() {
  gateserver_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::gateserver_ip() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.gateserver_ip)
  return gateserver_ip_.GetNoArena();
}
inline void RegionInfo::set_gateserver_ip(const ::std::string& value) {
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.gateserver_ip)
}
#if LANG_CXX11
inline void RegionInfo::set_gateserver_ip(::std::string&& value) {
  
  gateserver_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.gateserver_ip)
}
#endif
inline void RegionInfo::set_gateserver_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.gateserver_ip)
}
inline void RegionInfo::set_gateserver_ip(const char* value, size_t size) {
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.gateserver_ip)
}
inline ::std::string* RegionInfo::mutable_gateserver_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.gateserver_ip)
  return gateserver_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_gateserver_ip() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.gateserver_ip)
  
  return gateserver_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_gateserver_ip(::std::string* gateserver_ip) {
  if (gateserver_ip != NULL) {
    
  } else {
    
  }
  gateserver_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateserver_ip);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.gateserver_ip)
}

// uint32 gateserver_port = 2;
inline void RegionInfo::clear_gateserver_port() {
  gateserver_port_ = 0u;
}
inline ::google::protobuf::uint32 RegionInfo::gateserver_port() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.gateserver_port)
  return gateserver_port_;
}
inline void RegionInfo::set_gateserver_port(::google::protobuf::uint32 value) {
  
  gateserver_port_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.gateserver_port)
}

// string pay_callback_url = 3;
inline void RegionInfo::clear_pay_callback_url() {
  pay_callback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::pay_callback_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.pay_callback_url)
  return pay_callback_url_.GetNoArena();
}
inline void RegionInfo::set_pay_callback_url(const ::std::string& value) {
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.pay_callback_url)
}
#if LANG_CXX11
inline void RegionInfo::set_pay_callback_url(::std::string&& value) {
  
  pay_callback_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.pay_callback_url)
}
#endif
inline void RegionInfo::set_pay_callback_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.pay_callback_url)
}
inline void RegionInfo::set_pay_callback_url(const char* value, size_t size) {
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.pay_callback_url)
}
inline ::std::string* RegionInfo::mutable_pay_callback_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.pay_callback_url)
  return pay_callback_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_pay_callback_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.pay_callback_url)
  
  return pay_callback_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_pay_callback_url(::std::string* pay_callback_url) {
  if (pay_callback_url != NULL) {
    
  } else {
    
  }
  pay_callback_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_callback_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.pay_callback_url)
}

// string area_type = 7;
inline void RegionInfo::clear_area_type() {
  area_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::area_type() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.area_type)
  return area_type_.GetNoArena();
}
inline void RegionInfo::set_area_type(const ::std::string& value) {
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.area_type)
}
#if LANG_CXX11
inline void RegionInfo::set_area_type(::std::string&& value) {
  
  area_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.area_type)
}
#endif
inline void RegionInfo::set_area_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.area_type)
}
inline void RegionInfo::set_area_type(const char* value, size_t size) {
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.area_type)
}
inline ::std::string* RegionInfo::mutable_area_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.area_type)
  return area_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_area_type() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.area_type)
  
  return area_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_area_type(::std::string* area_type) {
  if (area_type != NULL) {
    
  } else {
    
  }
  area_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area_type);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.area_type)
}

// string resource_url = 8;
inline void RegionInfo::clear_resource_url() {
  resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::resource_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.resource_url)
  return resource_url_.GetNoArena();
}
inline void RegionInfo::set_resource_url(const ::std::string& value) {
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.resource_url)
}
#if LANG_CXX11
inline void RegionInfo::set_resource_url(::std::string&& value) {
  
  resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.resource_url)
}
#endif
inline void RegionInfo::set_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.resource_url)
}
inline void RegionInfo::set_resource_url(const char* value, size_t size) {
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.resource_url)
}
inline ::std::string* RegionInfo::mutable_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.resource_url)
  return resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_resource_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.resource_url)
  
  return resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_resource_url(::std::string* resource_url) {
  if (resource_url != NULL) {
    
  } else {
    
  }
  resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.resource_url)
}

// string data_url = 9;
inline void RegionInfo::clear_data_url() {
  data_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::data_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.data_url)
  return data_url_.GetNoArena();
}
inline void RegionInfo::set_data_url(const ::std::string& value) {
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.data_url)
}
#if LANG_CXX11
inline void RegionInfo::set_data_url(::std::string&& value) {
  
  data_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.data_url)
}
#endif
inline void RegionInfo::set_data_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.data_url)
}
inline void RegionInfo::set_data_url(const char* value, size_t size) {
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.data_url)
}
inline ::std::string* RegionInfo::mutable_data_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.data_url)
  return data_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_data_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.data_url)
  
  return data_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_data_url(::std::string* data_url) {
  if (data_url != NULL) {
    
  } else {
    
  }
  data_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.data_url)
}

// string feedback_url = 10;
inline void RegionInfo::clear_feedback_url() {
  feedback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::feedback_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.feedback_url)
  return feedback_url_.GetNoArena();
}
inline void RegionInfo::set_feedback_url(const ::std::string& value) {
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.feedback_url)
}
#if LANG_CXX11
inline void RegionInfo::set_feedback_url(::std::string&& value) {
  
  feedback_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.feedback_url)
}
#endif
inline void RegionInfo::set_feedback_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.feedback_url)
}
inline void RegionInfo::set_feedback_url(const char* value, size_t size) {
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.feedback_url)
}
inline ::std::string* RegionInfo::mutable_feedback_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.feedback_url)
  return feedback_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_feedback_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.feedback_url)
  
  return feedback_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_feedback_url(::std::string* feedback_url) {
  if (feedback_url != NULL) {
    
  } else {
    
  }
  feedback_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feedback_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.feedback_url)
}

// string bulletin_url = 11;
inline void RegionInfo::clear_bulletin_url() {
  bulletin_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::bulletin_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.bulletin_url)
  return bulletin_url_.GetNoArena();
}
inline void RegionInfo::set_bulletin_url(const ::std::string& value) {
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.bulletin_url)
}
#if LANG_CXX11
inline void RegionInfo::set_bulletin_url(::std::string&& value) {
  
  bulletin_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.bulletin_url)
}
#endif
inline void RegionInfo::set_bulletin_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.bulletin_url)
}
inline void RegionInfo::set_bulletin_url(const char* value, size_t size) {
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.bulletin_url)
}
inline ::std::string* RegionInfo::mutable_bulletin_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.bulletin_url)
  return bulletin_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_bulletin_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.bulletin_url)
  
  return bulletin_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_bulletin_url(::std::string* bulletin_url) {
  if (bulletin_url != NULL) {
    
  } else {
    
  }
  bulletin_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bulletin_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.bulletin_url)
}

// string resource_url_bak = 12;
inline void RegionInfo::clear_resource_url_bak() {
  resource_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::resource_url_bak() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.resource_url_bak)
  return resource_url_bak_.GetNoArena();
}
inline void RegionInfo::set_resource_url_bak(const ::std::string& value) {
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.resource_url_bak)
}
#if LANG_CXX11
inline void RegionInfo::set_resource_url_bak(::std::string&& value) {
  
  resource_url_bak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.resource_url_bak)
}
#endif
inline void RegionInfo::set_resource_url_bak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.resource_url_bak)
}
inline void RegionInfo::set_resource_url_bak(const char* value, size_t size) {
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.resource_url_bak)
}
inline ::std::string* RegionInfo::mutable_resource_url_bak() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.resource_url_bak)
  return resource_url_bak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_resource_url_bak() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.resource_url_bak)
  
  return resource_url_bak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_resource_url_bak(::std::string* resource_url_bak) {
  if (resource_url_bak != NULL) {
    
  } else {
    
  }
  resource_url_bak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_url_bak);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.resource_url_bak)
}

// string data_url_bak = 13;
inline void RegionInfo::clear_data_url_bak() {
  data_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::data_url_bak() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.data_url_bak)
  return data_url_bak_.GetNoArena();
}
inline void RegionInfo::set_data_url_bak(const ::std::string& value) {
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.data_url_bak)
}
#if LANG_CXX11
inline void RegionInfo::set_data_url_bak(::std::string&& value) {
  
  data_url_bak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.data_url_bak)
}
#endif
inline void RegionInfo::set_data_url_bak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.data_url_bak)
}
inline void RegionInfo::set_data_url_bak(const char* value, size_t size) {
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.data_url_bak)
}
inline ::std::string* RegionInfo::mutable_data_url_bak() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.data_url_bak)
  return data_url_bak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_data_url_bak() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.data_url_bak)
  
  return data_url_bak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_data_url_bak(::std::string* data_url_bak) {
  if (data_url_bak != NULL) {
    
  } else {
    
  }
  data_url_bak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_url_bak);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.data_url_bak)
}

// uint32 client_data_version = 14;
inline void RegionInfo::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 RegionInfo::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_data_version)
  return client_data_version_;
}
inline void RegionInfo::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_data_version)
}

// string handbook_url = 16;
inline void RegionInfo::clear_handbook_url() {
  handbook_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::handbook_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.handbook_url)
  return handbook_url_.GetNoArena();
}
inline void RegionInfo::set_handbook_url(const ::std::string& value) {
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.handbook_url)
}
#if LANG_CXX11
inline void RegionInfo::set_handbook_url(::std::string&& value) {
  
  handbook_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.handbook_url)
}
#endif
inline void RegionInfo::set_handbook_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.handbook_url)
}
inline void RegionInfo::set_handbook_url(const char* value, size_t size) {
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.handbook_url)
}
inline ::std::string* RegionInfo::mutable_handbook_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.handbook_url)
  return handbook_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_handbook_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.handbook_url)
  
  return handbook_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_handbook_url(::std::string* handbook_url) {
  if (handbook_url != NULL) {
    
  } else {
    
  }
  handbook_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handbook_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.handbook_url)
}

// uint32 client_silence_data_version = 18;
inline void RegionInfo::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
inline ::google::protobuf::uint32 RegionInfo::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_silence_data_version)
  return client_silence_data_version_;
}
inline void RegionInfo::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_silence_data_version)
}

// string client_data_md5 = 19;
inline void RegionInfo::clear_client_data_md5() {
  client_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::client_data_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_data_md5)
  return client_data_md5_.GetNoArena();
}
inline void RegionInfo::set_client_data_md5(const ::std::string& value) {
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_data_md5)
}
#if LANG_CXX11
inline void RegionInfo::set_client_data_md5(::std::string&& value) {
  
  client_data_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_data_md5)
}
#endif
inline void RegionInfo::set_client_data_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_data_md5)
}
inline void RegionInfo::set_client_data_md5(const char* value, size_t size) {
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_data_md5)
}
inline ::std::string* RegionInfo::mutable_client_data_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_data_md5)
  return client_data_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_client_data_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_data_md5)
  
  return client_data_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_client_data_md5(::std::string* client_data_md5) {
  if (client_data_md5 != NULL) {
    
  } else {
    
  }
  client_data_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_data_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_data_md5)
}

// string client_silence_data_md5 = 20;
inline void RegionInfo::clear_client_silence_data_md5() {
  client_silence_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::client_silence_data_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_silence_data_md5)
  return client_silence_data_md5_.GetNoArena();
}
inline void RegionInfo::set_client_silence_data_md5(const ::std::string& value) {
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_silence_data_md5)
}
#if LANG_CXX11
inline void RegionInfo::set_client_silence_data_md5(::std::string&& value) {
  
  client_silence_data_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_silence_data_md5)
}
#endif
inline void RegionInfo::set_client_silence_data_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_silence_data_md5)
}
inline void RegionInfo::set_client_silence_data_md5(const char* value, size_t size) {
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_silence_data_md5)
}
inline ::std::string* RegionInfo::mutable_client_silence_data_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_silence_data_md5)
  return client_silence_data_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_client_silence_data_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_silence_data_md5)
  
  return client_silence_data_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_client_silence_data_md5(::std::string* client_silence_data_md5) {
  if (client_silence_data_md5 != NULL) {
    
  } else {
    
  }
  client_silence_data_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_data_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_silence_data_md5)
}

// .proto.ResVersionConfig res_version_config = 22;
inline bool RegionInfo::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
inline void RegionInfo::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& RegionInfo::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.RegionInfo.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* RegionInfo::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.res_version_config)
  return res_version_config_;
}
inline ::proto::ResVersionConfig* RegionInfo::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
inline void RegionInfo::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.res_version_config)
}

// bytes secret_key = 23;
inline void RegionInfo::clear_secret_key() {
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::secret_key() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.secret_key)
  return secret_key_.GetNoArena();
}
inline void RegionInfo::set_secret_key(const ::std::string& value) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.secret_key)
}
#if LANG_CXX11
inline void RegionInfo::set_secret_key(::std::string&& value) {
  
  secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.secret_key)
}
#endif
inline void RegionInfo::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.secret_key)
}
inline void RegionInfo::set_secret_key(const void* value, size_t size) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.secret_key)
}
inline ::std::string* RegionInfo::mutable_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.secret_key)
  return secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_secret_key() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.secret_key)
  
  return secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_secret_key(::std::string* secret_key) {
  if (secret_key != NULL) {
    
  } else {
    
  }
  secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.secret_key)
}

// string official_community_url = 24;
inline void RegionInfo::clear_official_community_url() {
  official_community_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::official_community_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.official_community_url)
  return official_community_url_.GetNoArena();
}
inline void RegionInfo::set_official_community_url(const ::std::string& value) {
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.official_community_url)
}
#if LANG_CXX11
inline void RegionInfo::set_official_community_url(::std::string&& value) {
  
  official_community_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.official_community_url)
}
#endif
inline void RegionInfo::set_official_community_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.official_community_url)
}
inline void RegionInfo::set_official_community_url(const char* value, size_t size) {
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.official_community_url)
}
inline ::std::string* RegionInfo::mutable_official_community_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.official_community_url)
  return official_community_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_official_community_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.official_community_url)
  
  return official_community_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_official_community_url(::std::string* official_community_url) {
  if (official_community_url != NULL) {
    
  } else {
    
  }
  official_community_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), official_community_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.official_community_url)
}

// string client_version_suffix = 26;
inline void RegionInfo::clear_client_version_suffix() {
  client_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::client_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_version_suffix)
  return client_version_suffix_.GetNoArena();
}
inline void RegionInfo::set_client_version_suffix(const ::std::string& value) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_version_suffix)
}
#if LANG_CXX11
inline void RegionInfo::set_client_version_suffix(::std::string&& value) {
  
  client_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_version_suffix)
}
#endif
inline void RegionInfo::set_client_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_version_suffix)
}
inline void RegionInfo::set_client_version_suffix(const char* value, size_t size) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_version_suffix)
}
inline ::std::string* RegionInfo::mutable_client_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_version_suffix)
  return client_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_client_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_version_suffix)
  
  return client_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_client_version_suffix(::std::string* client_version_suffix) {
  if (client_version_suffix != NULL) {
    
  } else {
    
  }
  client_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_version_suffix)
}

// string client_silence_version_suffix = 27;
inline void RegionInfo::clear_client_silence_version_suffix() {
  client_silence_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::client_silence_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_silence_version_suffix)
  return client_silence_version_suffix_.GetNoArena();
}
inline void RegionInfo::set_client_silence_version_suffix(const ::std::string& value) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_silence_version_suffix)
}
#if LANG_CXX11
inline void RegionInfo::set_client_silence_version_suffix(::std::string&& value) {
  
  client_silence_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_silence_version_suffix)
}
#endif
inline void RegionInfo::set_client_silence_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_silence_version_suffix)
}
inline void RegionInfo::set_client_silence_version_suffix(const char* value, size_t size) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_silence_version_suffix)
}
inline ::std::string* RegionInfo::mutable_client_silence_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_silence_version_suffix)
  return client_silence_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_client_silence_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_silence_version_suffix)
  
  return client_silence_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix) {
  if (client_silence_version_suffix != NULL) {
    
  } else {
    
  }
  client_silence_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_silence_version_suffix)
}

// bool use_gateserver_domain_name = 28;
inline void RegionInfo::clear_use_gateserver_domain_name() {
  use_gateserver_domain_name_ = false;
}
inline bool RegionInfo::use_gateserver_domain_name() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.use_gateserver_domain_name)
  return use_gateserver_domain_name_;
}
inline void RegionInfo::set_use_gateserver_domain_name(bool value) {
  
  use_gateserver_domain_name_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.use_gateserver_domain_name)
}

// string gateserver_domain_name = 29;
inline void RegionInfo::clear_gateserver_domain_name() {
  gateserver_domain_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::gateserver_domain_name() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.gateserver_domain_name)
  return gateserver_domain_name_.GetNoArena();
}
inline void RegionInfo::set_gateserver_domain_name(const ::std::string& value) {
  
  gateserver_domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.gateserver_domain_name)
}
#if LANG_CXX11
inline void RegionInfo::set_gateserver_domain_name(::std::string&& value) {
  
  gateserver_domain_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.gateserver_domain_name)
}
#endif
inline void RegionInfo::set_gateserver_domain_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateserver_domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.gateserver_domain_name)
}
inline void RegionInfo::set_gateserver_domain_name(const char* value, size_t size) {
  
  gateserver_domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.gateserver_domain_name)
}
inline ::std::string* RegionInfo::mutable_gateserver_domain_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.gateserver_domain_name)
  return gateserver_domain_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_gateserver_domain_name() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.gateserver_domain_name)
  
  return gateserver_domain_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_gateserver_domain_name(::std::string* gateserver_domain_name) {
  if (gateserver_domain_name != NULL) {
    
  } else {
    
  }
  gateserver_domain_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateserver_domain_name);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.gateserver_domain_name)
}

// string user_center_url = 30;
inline void RegionInfo::clear_user_center_url() {
  user_center_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::user_center_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.user_center_url)
  return user_center_url_.GetNoArena();
}
inline void RegionInfo::set_user_center_url(const ::std::string& value) {
  
  user_center_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.user_center_url)
}
#if LANG_CXX11
inline void RegionInfo::set_user_center_url(::std::string&& value) {
  
  user_center_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.user_center_url)
}
#endif
inline void RegionInfo::set_user_center_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_center_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.user_center_url)
}
inline void RegionInfo::set_user_center_url(const char* value, size_t size) {
  
  user_center_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.user_center_url)
}
inline ::std::string* RegionInfo::mutable_user_center_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.user_center_url)
  return user_center_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_user_center_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.user_center_url)
  
  return user_center_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_user_center_url(::std::string* user_center_url) {
  if (user_center_url != NULL) {
    
  } else {
    
  }
  user_center_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_center_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.user_center_url)
}

// string account_bind_url = 31;
inline void RegionInfo::clear_account_bind_url() {
  account_bind_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::account_bind_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.account_bind_url)
  return account_bind_url_.GetNoArena();
}
inline void RegionInfo::set_account_bind_url(const ::std::string& value) {
  
  account_bind_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.account_bind_url)
}
#if LANG_CXX11
inline void RegionInfo::set_account_bind_url(::std::string&& value) {
  
  account_bind_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.account_bind_url)
}
#endif
inline void RegionInfo::set_account_bind_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_bind_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.account_bind_url)
}
inline void RegionInfo::set_account_bind_url(const char* value, size_t size) {
  
  account_bind_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.account_bind_url)
}
inline ::std::string* RegionInfo::mutable_account_bind_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.account_bind_url)
  return account_bind_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_account_bind_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.account_bind_url)
  
  return account_bind_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_account_bind_url(::std::string* account_bind_url) {
  if (account_bind_url != NULL) {
    
  } else {
    
  }
  account_bind_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_bind_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.account_bind_url)
}

// string cdkey_url = 32;
inline void RegionInfo::clear_cdkey_url() {
  cdkey_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::cdkey_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.cdkey_url)
  return cdkey_url_.GetNoArena();
}
inline void RegionInfo::set_cdkey_url(const ::std::string& value) {
  
  cdkey_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.cdkey_url)
}
#if LANG_CXX11
inline void RegionInfo::set_cdkey_url(::std::string&& value) {
  
  cdkey_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.cdkey_url)
}
#endif
inline void RegionInfo::set_cdkey_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cdkey_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.cdkey_url)
}
inline void RegionInfo::set_cdkey_url(const char* value, size_t size) {
  
  cdkey_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.cdkey_url)
}
inline ::std::string* RegionInfo::mutable_cdkey_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.cdkey_url)
  return cdkey_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_cdkey_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.cdkey_url)
  
  return cdkey_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_cdkey_url(::std::string* cdkey_url) {
  if (cdkey_url != NULL) {
    
  } else {
    
  }
  cdkey_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdkey_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.cdkey_url)
}

// string privacy_policy_url = 33;
inline void RegionInfo::clear_privacy_policy_url() {
  privacy_policy_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::privacy_policy_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.privacy_policy_url)
  return privacy_policy_url_.GetNoArena();
}
inline void RegionInfo::set_privacy_policy_url(const ::std::string& value) {
  
  privacy_policy_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.privacy_policy_url)
}
#if LANG_CXX11
inline void RegionInfo::set_privacy_policy_url(::std::string&& value) {
  
  privacy_policy_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.privacy_policy_url)
}
#endif
inline void RegionInfo::set_privacy_policy_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  privacy_policy_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.privacy_policy_url)
}
inline void RegionInfo::set_privacy_policy_url(const char* value, size_t size) {
  
  privacy_policy_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.privacy_policy_url)
}
inline ::std::string* RegionInfo::mutable_privacy_policy_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.privacy_policy_url)
  return privacy_policy_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_privacy_policy_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.privacy_policy_url)
  
  return privacy_policy_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_privacy_policy_url(::std::string* privacy_policy_url) {
  if (privacy_policy_url != NULL) {
    
  } else {
    
  }
  privacy_policy_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privacy_policy_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.privacy_policy_url)
}

// string next_resource_url = 34;
inline void RegionInfo::clear_next_resource_url() {
  next_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::next_resource_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.next_resource_url)
  return next_resource_url_.GetNoArena();
}
inline void RegionInfo::set_next_resource_url(const ::std::string& value) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.next_resource_url)
}
#if LANG_CXX11
inline void RegionInfo::set_next_resource_url(::std::string&& value) {
  
  next_resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.next_resource_url)
}
#endif
inline void RegionInfo::set_next_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.next_resource_url)
}
inline void RegionInfo::set_next_resource_url(const char* value, size_t size) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.next_resource_url)
}
inline ::std::string* RegionInfo::mutable_next_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.next_resource_url)
  return next_resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_next_resource_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.next_resource_url)
  
  return next_resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_next_resource_url(::std::string* next_resource_url) {
  if (next_resource_url != NULL) {
    
  } else {
    
  }
  next_resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.next_resource_url)
}

// .proto.ResVersionConfig next_res_version_config = 35;
inline bool RegionInfo::has_next_res_version_config() const {
  return this != internal_default_instance() && next_res_version_config_ != NULL;
}
inline void RegionInfo::clear_next_res_version_config() {
  if (GetArenaNoVirtual() == NULL && next_res_version_config_ != NULL) delete next_res_version_config_;
  next_res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& RegionInfo::next_res_version_config() const {
  const ::proto::ResVersionConfig* p = next_res_version_config_;
  // @@protoc_insertion_point(field_get:proto.RegionInfo.next_res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* RegionInfo::mutable_next_res_version_config() {
  
  if (next_res_version_config_ == NULL) {
    next_res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.next_res_version_config)
  return next_res_version_config_;
}
inline ::proto::ResVersionConfig* RegionInfo::release_next_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.next_res_version_config)
  
  ::proto::ResVersionConfig* temp = next_res_version_config_;
  next_res_version_config_ = NULL;
  return temp;
}
inline void RegionInfo::set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config) {
  delete next_res_version_config_;
  next_res_version_config_ = next_res_version_config;
  if (next_res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.next_res_version_config)
}

// string game_biz = 36;
inline void RegionInfo::clear_game_biz() {
  game_biz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::game_biz() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.game_biz)
  return game_biz_.GetNoArena();
}
inline void RegionInfo::set_game_biz(const ::std::string& value) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.game_biz)
}
#if LANG_CXX11
inline void RegionInfo::set_game_biz(::std::string&& value) {
  
  game_biz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.game_biz)
}
#endif
inline void RegionInfo::set_game_biz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.game_biz)
}
inline void RegionInfo::set_game_biz(const char* value, size_t size) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.game_biz)
}
inline ::std::string* RegionInfo::mutable_game_biz() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.game_biz)
  return game_biz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_game_biz() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.game_biz)
  
  return game_biz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_game_biz(::std::string* game_biz) {
  if (game_biz != NULL) {
    
  } else {
    
  }
  game_biz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_biz);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.game_biz)
}

// -------------------------------------------------------------------

// QueryCurrRegionHttpRsp

// int32 retcode = 1;
inline void QueryCurrRegionHttpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 QueryCurrRegionHttpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.retcode)
  return retcode_;
}
inline void QueryCurrRegionHttpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.retcode)
}

// string msg = 2;
inline void QueryCurrRegionHttpRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.msg)
  return msg_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.msg)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.msg)
}
#endif
inline void QueryCurrRegionHttpRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.msg)
}
inline void QueryCurrRegionHttpRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.msg)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.msg)
}

// .proto.RegionInfo region_info = 3;
inline bool QueryCurrRegionHttpRsp::has_region_info() const {
  return this != internal_default_instance() && region_info_ != NULL;
}
inline void QueryCurrRegionHttpRsp::clear_region_info() {
  if (GetArenaNoVirtual() == NULL && region_info_ != NULL) delete region_info_;
  region_info_ = NULL;
}
inline const ::proto::RegionInfo& QueryCurrRegionHttpRsp::region_info() const {
  const ::proto::RegionInfo* p = region_info_;
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.region_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::RegionInfo*>(
      &::proto::_RegionInfo_default_instance_);
}
inline ::proto::RegionInfo* QueryCurrRegionHttpRsp::mutable_region_info() {
  
  if (region_info_ == NULL) {
    region_info_ = new ::proto::RegionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.region_info)
  return region_info_;
}
inline ::proto::RegionInfo* QueryCurrRegionHttpRsp::release_region_info() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.region_info)
  
  ::proto::RegionInfo* temp = region_info_;
  region_info_ = NULL;
  return temp;
}
inline void QueryCurrRegionHttpRsp::set_allocated_region_info(::proto::RegionInfo* region_info) {
  delete region_info_;
  region_info_ = region_info;
  if (region_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.region_info)
}

// bytes client_secret_key = 11;
inline void QueryCurrRegionHttpRsp::clear_client_secret_key() {
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::client_secret_key() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_secret_key)
  return client_secret_key_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_client_secret_key(const ::std::string& value) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_client_secret_key(::std::string&& value) {
  
  client_secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
#endif
inline void QueryCurrRegionHttpRsp::set_client_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
inline void QueryCurrRegionHttpRsp::set_client_secret_key(const void* value, size_t size) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_client_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_secret_key)
  return client_secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_client_secret_key() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_secret_key)
  
  return client_secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_client_secret_key(::std::string* client_secret_key) {
  if (client_secret_key != NULL) {
    
  } else {
    
  }
  client_secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_secret_key)
}

// bytes region_custom_config_encrypted = 12;
inline void QueryCurrRegionHttpRsp::clear_region_custom_config_encrypted() {
  region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::region_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  return region_custom_config_encrypted_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const ::std::string& value) {
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(::std::string&& value) {
  
  region_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
#endif
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const void* value, size_t size) {
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_region_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  return region_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_region_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  
  return region_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_region_custom_config_encrypted(::std::string* region_custom_config_encrypted) {
  if (region_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  region_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}

// bytes client_region_custom_config_encrypted = 13;
inline void QueryCurrRegionHttpRsp::clear_client_region_custom_config_encrypted() {
  client_region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::client_region_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  return client_region_custom_config_encrypted_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const ::std::string& value) {
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(::std::string&& value) {
  
  client_region_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
#endif
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const void* value, size_t size) {
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_client_region_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  return client_region_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_client_region_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  
  return client_region_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_client_region_custom_config_encrypted(::std::string* client_region_custom_config_encrypted) {
  if (client_region_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  client_region_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_region_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}

// .proto.ForceUpdateInfo force_udpate = 4;
inline bool QueryCurrRegionHttpRsp::has_force_udpate() const {
  return detail_case() == kForceUdpate;
}
inline void QueryCurrRegionHttpRsp::set_has_force_udpate() {
  _oneof_case_[0] = kForceUdpate;
}
inline void QueryCurrRegionHttpRsp::clear_force_udpate() {
  if (has_force_udpate()) {
    delete detail_.force_udpate_;
    clear_has_detail();
  }
}
inline  const ::proto::ForceUpdateInfo& QueryCurrRegionHttpRsp::force_udpate() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.force_udpate)
  return has_force_udpate()
      ? *detail_.force_udpate_
      : ::proto::ForceUpdateInfo::default_instance();
}
inline ::proto::ForceUpdateInfo* QueryCurrRegionHttpRsp::mutable_force_udpate() {
  if (!has_force_udpate()) {
    clear_detail();
    set_has_force_udpate();
    detail_.force_udpate_ = new ::proto::ForceUpdateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.force_udpate)
  return detail_.force_udpate_;
}
inline ::proto::ForceUpdateInfo* QueryCurrRegionHttpRsp::release_force_udpate() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.force_udpate)
  if (has_force_udpate()) {
    clear_has_detail();
    ::proto::ForceUpdateInfo* temp = detail_.force_udpate_;
    detail_.force_udpate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryCurrRegionHttpRsp::set_allocated_force_udpate(::proto::ForceUpdateInfo* force_udpate) {
  clear_detail();
  if (force_udpate) {
    set_has_force_udpate();
    detail_.force_udpate_ = force_udpate;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.force_udpate)
}

// .proto.StopServerInfo stop_server = 5;
inline bool QueryCurrRegionHttpRsp::has_stop_server() const {
  return detail_case() == kStopServer;
}
inline void QueryCurrRegionHttpRsp::set_has_stop_server() {
  _oneof_case_[0] = kStopServer;
}
inline void QueryCurrRegionHttpRsp::clear_stop_server() {
  if (has_stop_server()) {
    delete detail_.stop_server_;
    clear_has_detail();
  }
}
inline  const ::proto::StopServerInfo& QueryCurrRegionHttpRsp::stop_server() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.stop_server)
  return has_stop_server()
      ? *detail_.stop_server_
      : ::proto::StopServerInfo::default_instance();
}
inline ::proto::StopServerInfo* QueryCurrRegionHttpRsp::mutable_stop_server() {
  if (!has_stop_server()) {
    clear_detail();
    set_has_stop_server();
    detail_.stop_server_ = new ::proto::StopServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.stop_server)
  return detail_.stop_server_;
}
inline ::proto::StopServerInfo* QueryCurrRegionHttpRsp::release_stop_server() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.stop_server)
  if (has_stop_server()) {
    clear_has_detail();
    ::proto::StopServerInfo* temp = detail_.stop_server_;
    detail_.stop_server_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryCurrRegionHttpRsp::set_allocated_stop_server(::proto::StopServerInfo* stop_server) {
  clear_detail();
  if (stop_server) {
    set_has_stop_server();
    detail_.stop_server_ = stop_server;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.stop_server)
}

inline bool QueryCurrRegionHttpRsp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void QueryCurrRegionHttpRsp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline QueryCurrRegionHttpRsp::DetailCase QueryCurrRegionHttpRsp::detail_case() const {
  return QueryCurrRegionHttpRsp::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PlayerUidExtInfo

// uint32 reg_platform = 1;
inline void PlayerUidExtInfo::clear_reg_platform() {
  reg_platform_ = 0u;
}
inline ::google::protobuf::uint32 PlayerUidExtInfo::reg_platform() const {
  // @@protoc_insertion_point(field_get:proto.PlayerUidExtInfo.reg_platform)
  return reg_platform_;
}
inline void PlayerUidExtInfo::set_reg_platform(::google::protobuf::uint32 value) {
  
  reg_platform_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerUidExtInfo.reg_platform)
}

// -------------------------------------------------------------------

// Reliquary

// uint32 level = 1;
inline void Reliquary::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::level() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.level)
  return level_;
}
inline void Reliquary::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.level)
}

// uint32 exp = 2;
inline void Reliquary::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::exp() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.exp)
  return exp_;
}
inline void Reliquary::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.exp)
}

// uint32 promote_level = 3;
inline void Reliquary::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.promote_level)
  return promote_level_;
}
inline void Reliquary::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.promote_level)
}

// uint32 main_prop_id = 4;
inline void Reliquary::clear_main_prop_id() {
  main_prop_id_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::main_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.main_prop_id)
  return main_prop_id_;
}
inline void Reliquary::set_main_prop_id(::google::protobuf::uint32 value) {
  
  main_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.main_prop_id)
}

// repeated uint32 append_prop_id_list = 5;
inline int Reliquary::append_prop_id_list_size() const {
  return append_prop_id_list_.size();
}
inline void Reliquary::clear_append_prop_id_list() {
  append_prop_id_list_.Clear();
}
inline ::google::protobuf::uint32 Reliquary::append_prop_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.append_prop_id_list)
  return append_prop_id_list_.Get(index);
}
inline void Reliquary::set_append_prop_id_list(int index, ::google::protobuf::uint32 value) {
  append_prop_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Reliquary.append_prop_id_list)
}
inline void Reliquary::add_append_prop_id_list(::google::protobuf::uint32 value) {
  append_prop_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Reliquary.append_prop_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Reliquary::append_prop_id_list() const {
  // @@protoc_insertion_point(field_list:proto.Reliquary.append_prop_id_list)
  return append_prop_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Reliquary::mutable_append_prop_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Reliquary.append_prop_id_list)
  return &append_prop_id_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Weapon

// uint32 level = 1;
inline void Weapon::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 Weapon::level() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.level)
  return level_;
}
inline void Weapon::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.level)
}

// uint32 exp = 2;
inline void Weapon::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 Weapon::exp() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.exp)
  return exp_;
}
inline void Weapon::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.exp)
}

// uint32 promote_level = 3;
inline void Weapon::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 Weapon::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.promote_level)
  return promote_level_;
}
inline void Weapon::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.promote_level)
}

// map<uint32, uint32> affix_map = 4;
inline int Weapon::affix_map_size() const {
  return affix_map_.size();
}
inline void Weapon::clear_affix_map() {
  affix_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
Weapon::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.Weapon.affix_map)
  return affix_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
Weapon::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.Weapon.affix_map)
  return affix_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MaterialDeleteInfo_CountDownDelete

// map<uint32, uint32> delete_time_num_map = 1;
inline int MaterialDeleteInfo_CountDownDelete::delete_time_num_map_size() const {
  return delete_time_num_map_.size();
}
inline void MaterialDeleteInfo_CountDownDelete::clear_delete_time_num_map() {
  delete_time_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
MaterialDeleteInfo_CountDownDelete::delete_time_num_map() const {
  // @@protoc_insertion_point(field_map:proto.MaterialDeleteInfo.CountDownDelete.delete_time_num_map)
  return delete_time_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
MaterialDeleteInfo_CountDownDelete::mutable_delete_time_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MaterialDeleteInfo.CountDownDelete.delete_time_num_map)
  return delete_time_num_map_.MutableMap();
}

// uint32 config_count_down_time = 2;
inline void MaterialDeleteInfo_CountDownDelete::clear_config_count_down_time() {
  config_count_down_time_ = 0u;
}
inline ::google::protobuf::uint32 MaterialDeleteInfo_CountDownDelete::config_count_down_time() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.CountDownDelete.config_count_down_time)
  return config_count_down_time_;
}
inline void MaterialDeleteInfo_CountDownDelete::set_config_count_down_time(::google::protobuf::uint32 value) {
  
  config_count_down_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.CountDownDelete.config_count_down_time)
}

// -------------------------------------------------------------------

// MaterialDeleteInfo_DateTimeDelete

// uint32 delete_time = 1;
inline void MaterialDeleteInfo_DateTimeDelete::clear_delete_time() {
  delete_time_ = 0u;
}
inline ::google::protobuf::uint32 MaterialDeleteInfo_DateTimeDelete::delete_time() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.DateTimeDelete.delete_time)
  return delete_time_;
}
inline void MaterialDeleteInfo_DateTimeDelete::set_delete_time(::google::protobuf::uint32 value) {
  
  delete_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.DateTimeDelete.delete_time)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MaterialDeleteInfo_DelayWeekCountDownDelete

// map<uint32, uint32> delete_time_num_map = 1;
inline int MaterialDeleteInfo_DelayWeekCountDownDelete::delete_time_num_map_size() const {
  return delete_time_num_map_.size();
}
inline void MaterialDeleteInfo_DelayWeekCountDownDelete::clear_delete_time_num_map() {
  delete_time_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
MaterialDeleteInfo_DelayWeekCountDownDelete::delete_time_num_map() const {
  // @@protoc_insertion_point(field_map:proto.MaterialDeleteInfo.DelayWeekCountDownDelete.delete_time_num_map)
  return delete_time_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
MaterialDeleteInfo_DelayWeekCountDownDelete::mutable_delete_time_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MaterialDeleteInfo.DelayWeekCountDownDelete.delete_time_num_map)
  return delete_time_num_map_.MutableMap();
}

// uint32 config_delay_week = 2;
inline void MaterialDeleteInfo_DelayWeekCountDownDelete::clear_config_delay_week() {
  config_delay_week_ = 0u;
}
inline ::google::protobuf::uint32 MaterialDeleteInfo_DelayWeekCountDownDelete::config_delay_week() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.DelayWeekCountDownDelete.config_delay_week)
  return config_delay_week_;
}
inline void MaterialDeleteInfo_DelayWeekCountDownDelete::set_config_delay_week(::google::protobuf::uint32 value) {
  
  config_delay_week_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.DelayWeekCountDownDelete.config_delay_week)
}

// uint32 config_count_down_time = 3;
inline void MaterialDeleteInfo_DelayWeekCountDownDelete::clear_config_count_down_time() {
  config_count_down_time_ = 0u;
}
inline ::google::protobuf::uint32 MaterialDeleteInfo_DelayWeekCountDownDelete::config_count_down_time() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.DelayWeekCountDownDelete.config_count_down_time)
  return config_count_down_time_;
}
inline void MaterialDeleteInfo_DelayWeekCountDownDelete::set_config_count_down_time(::google::protobuf::uint32 value) {
  
  config_count_down_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.DelayWeekCountDownDelete.config_count_down_time)
}

// -------------------------------------------------------------------

// MaterialDeleteInfo

// bool has_delete_config = 1;
inline void MaterialDeleteInfo::clear_has_delete_config() {
  has_delete_config_ = false;
}
inline bool MaterialDeleteInfo::has_delete_config() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.has_delete_config)
  return has_delete_config_;
}
inline void MaterialDeleteInfo::set_has_delete_config(bool value) {
  
  has_delete_config_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.has_delete_config)
}

// .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
inline bool MaterialDeleteInfo::has_count_down_delete() const {
  return delete_info_case() == kCountDownDelete;
}
inline void MaterialDeleteInfo::set_has_count_down_delete() {
  _oneof_case_[0] = kCountDownDelete;
}
inline void MaterialDeleteInfo::clear_count_down_delete() {
  if (has_count_down_delete()) {
    delete delete_info_.count_down_delete_;
    clear_has_delete_info();
  }
}
inline  const ::proto::MaterialDeleteInfo_CountDownDelete& MaterialDeleteInfo::count_down_delete() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.count_down_delete)
  return has_count_down_delete()
      ? *delete_info_.count_down_delete_
      : ::proto::MaterialDeleteInfo_CountDownDelete::default_instance();
}
inline ::proto::MaterialDeleteInfo_CountDownDelete* MaterialDeleteInfo::mutable_count_down_delete() {
  if (!has_count_down_delete()) {
    clear_delete_info();
    set_has_count_down_delete();
    delete_info_.count_down_delete_ = new ::proto::MaterialDeleteInfo_CountDownDelete;
  }
  // @@protoc_insertion_point(field_mutable:proto.MaterialDeleteInfo.count_down_delete)
  return delete_info_.count_down_delete_;
}
inline ::proto::MaterialDeleteInfo_CountDownDelete* MaterialDeleteInfo::release_count_down_delete() {
  // @@protoc_insertion_point(field_release:proto.MaterialDeleteInfo.count_down_delete)
  if (has_count_down_delete()) {
    clear_has_delete_info();
    ::proto::MaterialDeleteInfo_CountDownDelete* temp = delete_info_.count_down_delete_;
    delete_info_.count_down_delete_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MaterialDeleteInfo::set_allocated_count_down_delete(::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete) {
  clear_delete_info();
  if (count_down_delete) {
    set_has_count_down_delete();
    delete_info_.count_down_delete_ = count_down_delete;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MaterialDeleteInfo.count_down_delete)
}

// .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
inline bool MaterialDeleteInfo::has_date_delete() const {
  return delete_info_case() == kDateDelete;
}
inline void MaterialDeleteInfo::set_has_date_delete() {
  _oneof_case_[0] = kDateDelete;
}
inline void MaterialDeleteInfo::clear_date_delete() {
  if (has_date_delete()) {
    delete delete_info_.date_delete_;
    clear_has_delete_info();
  }
}
inline  const ::proto::MaterialDeleteInfo_DateTimeDelete& MaterialDeleteInfo::date_delete() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.date_delete)
  return has_date_delete()
      ? *delete_info_.date_delete_
      : ::proto::MaterialDeleteInfo_DateTimeDelete::default_instance();
}
inline ::proto::MaterialDeleteInfo_DateTimeDelete* MaterialDeleteInfo::mutable_date_delete() {
  if (!has_date_delete()) {
    clear_delete_info();
    set_has_date_delete();
    delete_info_.date_delete_ = new ::proto::MaterialDeleteInfo_DateTimeDelete;
  }
  // @@protoc_insertion_point(field_mutable:proto.MaterialDeleteInfo.date_delete)
  return delete_info_.date_delete_;
}
inline ::proto::MaterialDeleteInfo_DateTimeDelete* MaterialDeleteInfo::release_date_delete() {
  // @@protoc_insertion_point(field_release:proto.MaterialDeleteInfo.date_delete)
  if (has_date_delete()) {
    clear_has_delete_info();
    ::proto::MaterialDeleteInfo_DateTimeDelete* temp = delete_info_.date_delete_;
    delete_info_.date_delete_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MaterialDeleteInfo::set_allocated_date_delete(::proto::MaterialDeleteInfo_DateTimeDelete* date_delete) {
  clear_delete_info();
  if (date_delete) {
    set_has_date_delete();
    delete_info_.date_delete_ = date_delete;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MaterialDeleteInfo.date_delete)
}

// .proto.MaterialDeleteInfo.DelayWeekCountDownDelete delay_week_count_down_delete = 4;
inline bool MaterialDeleteInfo::has_delay_week_count_down_delete() const {
  return delete_info_case() == kDelayWeekCountDownDelete;
}
inline void MaterialDeleteInfo::set_has_delay_week_count_down_delete() {
  _oneof_case_[0] = kDelayWeekCountDownDelete;
}
inline void MaterialDeleteInfo::clear_delay_week_count_down_delete() {
  if (has_delay_week_count_down_delete()) {
    delete delete_info_.delay_week_count_down_delete_;
    clear_has_delete_info();
  }
}
inline  const ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete& MaterialDeleteInfo::delay_week_count_down_delete() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.delay_week_count_down_delete)
  return has_delay_week_count_down_delete()
      ? *delete_info_.delay_week_count_down_delete_
      : ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete::default_instance();
}
inline ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* MaterialDeleteInfo::mutable_delay_week_count_down_delete() {
  if (!has_delay_week_count_down_delete()) {
    clear_delete_info();
    set_has_delay_week_count_down_delete();
    delete_info_.delay_week_count_down_delete_ = new ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete;
  }
  // @@protoc_insertion_point(field_mutable:proto.MaterialDeleteInfo.delay_week_count_down_delete)
  return delete_info_.delay_week_count_down_delete_;
}
inline ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* MaterialDeleteInfo::release_delay_week_count_down_delete() {
  // @@protoc_insertion_point(field_release:proto.MaterialDeleteInfo.delay_week_count_down_delete)
  if (has_delay_week_count_down_delete()) {
    clear_has_delete_info();
    ::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* temp = delete_info_.delay_week_count_down_delete_;
    delete_info_.delay_week_count_down_delete_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MaterialDeleteInfo::set_allocated_delay_week_count_down_delete(::proto::MaterialDeleteInfo_DelayWeekCountDownDelete* delay_week_count_down_delete) {
  clear_delete_info();
  if (delay_week_count_down_delete) {
    set_has_delay_week_count_down_delete();
    delete_info_.delay_week_count_down_delete_ = delay_week_count_down_delete;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MaterialDeleteInfo.delay_week_count_down_delete)
}

inline bool MaterialDeleteInfo::has_delete_info() const {
  return delete_info_case() != DELETE_INFO_NOT_SET;
}
inline void MaterialDeleteInfo::clear_has_delete_info() {
  _oneof_case_[0] = DELETE_INFO_NOT_SET;
}
inline MaterialDeleteInfo::DeleteInfoCase MaterialDeleteInfo::delete_info_case() const {
  return MaterialDeleteInfo::DeleteInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Material

// uint32 count = 1;
inline void Material::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Material::count() const {
  // @@protoc_insertion_point(field_get:proto.Material.count)
  return count_;
}
inline void Material::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.Material.count)
}

// .proto.MaterialDeleteInfo delete_info = 2;
inline bool Material::has_delete_info() const {
  return this != internal_default_instance() && delete_info_ != NULL;
}
inline void Material::clear_delete_info() {
  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) delete delete_info_;
  delete_info_ = NULL;
}
inline const ::proto::MaterialDeleteInfo& Material::delete_info() const {
  const ::proto::MaterialDeleteInfo* p = delete_info_;
  // @@protoc_insertion_point(field_get:proto.Material.delete_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MaterialDeleteInfo*>(
      &::proto::_MaterialDeleteInfo_default_instance_);
}
inline ::proto::MaterialDeleteInfo* Material::mutable_delete_info() {
  
  if (delete_info_ == NULL) {
    delete_info_ = new ::proto::MaterialDeleteInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.Material.delete_info)
  return delete_info_;
}
inline ::proto::MaterialDeleteInfo* Material::release_delete_info() {
  // @@protoc_insertion_point(field_release:proto.Material.delete_info)
  
  ::proto::MaterialDeleteInfo* temp = delete_info_;
  delete_info_ = NULL;
  return temp;
}
inline void Material::set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info) {
  delete delete_info_;
  delete_info_ = delete_info;
  if (delete_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Material.delete_info)
}

// -------------------------------------------------------------------

// Equip

// bool is_locked = 3;
inline void Equip::clear_is_locked() {
  is_locked_ = false;
}
inline bool Equip::is_locked() const {
  // @@protoc_insertion_point(field_get:proto.Equip.is_locked)
  return is_locked_;
}
inline void Equip::set_is_locked(bool value) {
  
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.Equip.is_locked)
}

// .proto.Reliquary reliquary = 1;
inline bool Equip::has_reliquary() const {
  return detail_case() == kReliquary;
}
inline void Equip::set_has_reliquary() {
  _oneof_case_[0] = kReliquary;
}
inline void Equip::clear_reliquary() {
  if (has_reliquary()) {
    delete detail_.reliquary_;
    clear_has_detail();
  }
}
inline  const ::proto::Reliquary& Equip::reliquary() const {
  // @@protoc_insertion_point(field_get:proto.Equip.reliquary)
  return has_reliquary()
      ? *detail_.reliquary_
      : ::proto::Reliquary::default_instance();
}
inline ::proto::Reliquary* Equip::mutable_reliquary() {
  if (!has_reliquary()) {
    clear_detail();
    set_has_reliquary();
    detail_.reliquary_ = new ::proto::Reliquary;
  }
  // @@protoc_insertion_point(field_mutable:proto.Equip.reliquary)
  return detail_.reliquary_;
}
inline ::proto::Reliquary* Equip::release_reliquary() {
  // @@protoc_insertion_point(field_release:proto.Equip.reliquary)
  if (has_reliquary()) {
    clear_has_detail();
    ::proto::Reliquary* temp = detail_.reliquary_;
    detail_.reliquary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Equip::set_allocated_reliquary(::proto::Reliquary* reliquary) {
  clear_detail();
  if (reliquary) {
    set_has_reliquary();
    detail_.reliquary_ = reliquary;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Equip.reliquary)
}

// .proto.Weapon weapon = 2;
inline bool Equip::has_weapon() const {
  return detail_case() == kWeapon;
}
inline void Equip::set_has_weapon() {
  _oneof_case_[0] = kWeapon;
}
inline void Equip::clear_weapon() {
  if (has_weapon()) {
    delete detail_.weapon_;
    clear_has_detail();
  }
}
inline  const ::proto::Weapon& Equip::weapon() const {
  // @@protoc_insertion_point(field_get:proto.Equip.weapon)
  return has_weapon()
      ? *detail_.weapon_
      : ::proto::Weapon::default_instance();
}
inline ::proto::Weapon* Equip::mutable_weapon() {
  if (!has_weapon()) {
    clear_detail();
    set_has_weapon();
    detail_.weapon_ = new ::proto::Weapon;
  }
  // @@protoc_insertion_point(field_mutable:proto.Equip.weapon)
  return detail_.weapon_;
}
inline ::proto::Weapon* Equip::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.Equip.weapon)
  if (has_weapon()) {
    clear_has_detail();
    ::proto::Weapon* temp = detail_.weapon_;
    detail_.weapon_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Equip::set_allocated_weapon(::proto::Weapon* weapon) {
  clear_detail();
  if (weapon) {
    set_has_weapon();
    detail_.weapon_ = weapon;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Equip.weapon)
}

inline bool Equip::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void Equip::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline Equip::DetailCase Equip::detail_case() const {
  return Equip::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Furniture

// uint32 count = 1;
inline void Furniture::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Furniture::count() const {
  // @@protoc_insertion_point(field_get:proto.Furniture.count)
  return count_;
}
inline void Furniture::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.Furniture.count)
}

// -------------------------------------------------------------------

// Item

// uint32 item_id = 1;
inline void Item::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 Item::item_id() const {
  // @@protoc_insertion_point(field_get:proto.Item.item_id)
  return item_id_;
}
inline void Item::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Item.item_id)
}

// uint64 guid = 2;
inline void Item::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Item::guid() const {
  // @@protoc_insertion_point(field_get:proto.Item.guid)
  return guid_;
}
inline void Item::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.Item.guid)
}

// .proto.Material material = 5;
inline bool Item::has_material() const {
  return detail_case() == kMaterial;
}
inline void Item::set_has_material() {
  _oneof_case_[0] = kMaterial;
}
inline void Item::clear_material() {
  if (has_material()) {
    delete detail_.material_;
    clear_has_detail();
  }
}
inline  const ::proto::Material& Item::material() const {
  // @@protoc_insertion_point(field_get:proto.Item.material)
  return has_material()
      ? *detail_.material_
      : ::proto::Material::default_instance();
}
inline ::proto::Material* Item::mutable_material() {
  if (!has_material()) {
    clear_detail();
    set_has_material();
    detail_.material_ = new ::proto::Material;
  }
  // @@protoc_insertion_point(field_mutable:proto.Item.material)
  return detail_.material_;
}
inline ::proto::Material* Item::release_material() {
  // @@protoc_insertion_point(field_release:proto.Item.material)
  if (has_material()) {
    clear_has_detail();
    ::proto::Material* temp = detail_.material_;
    detail_.material_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item::set_allocated_material(::proto::Material* material) {
  clear_detail();
  if (material) {
    set_has_material();
    detail_.material_ = material;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Item.material)
}

// .proto.Equip equip = 6;
inline bool Item::has_equip() const {
  return detail_case() == kEquip;
}
inline void Item::set_has_equip() {
  _oneof_case_[0] = kEquip;
}
inline void Item::clear_equip() {
  if (has_equip()) {
    delete detail_.equip_;
    clear_has_detail();
  }
}
inline  const ::proto::Equip& Item::equip() const {
  // @@protoc_insertion_point(field_get:proto.Item.equip)
  return has_equip()
      ? *detail_.equip_
      : ::proto::Equip::default_instance();
}
inline ::proto::Equip* Item::mutable_equip() {
  if (!has_equip()) {
    clear_detail();
    set_has_equip();
    detail_.equip_ = new ::proto::Equip;
  }
  // @@protoc_insertion_point(field_mutable:proto.Item.equip)
  return detail_.equip_;
}
inline ::proto::Equip* Item::release_equip() {
  // @@protoc_insertion_point(field_release:proto.Item.equip)
  if (has_equip()) {
    clear_has_detail();
    ::proto::Equip* temp = detail_.equip_;
    detail_.equip_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item::set_allocated_equip(::proto::Equip* equip) {
  clear_detail();
  if (equip) {
    set_has_equip();
    detail_.equip_ = equip;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Item.equip)
}

// .proto.Furniture furniture = 7;
inline bool Item::has_furniture() const {
  return detail_case() == kFurniture;
}
inline void Item::set_has_furniture() {
  _oneof_case_[0] = kFurniture;
}
inline void Item::clear_furniture() {
  if (has_furniture()) {
    delete detail_.furniture_;
    clear_has_detail();
  }
}
inline  const ::proto::Furniture& Item::furniture() const {
  // @@protoc_insertion_point(field_get:proto.Item.furniture)
  return has_furniture()
      ? *detail_.furniture_
      : ::proto::Furniture::default_instance();
}
inline ::proto::Furniture* Item::mutable_furniture() {
  if (!has_furniture()) {
    clear_detail();
    set_has_furniture();
    detail_.furniture_ = new ::proto::Furniture;
  }
  // @@protoc_insertion_point(field_mutable:proto.Item.furniture)
  return detail_.furniture_;
}
inline ::proto::Furniture* Item::release_furniture() {
  // @@protoc_insertion_point(field_release:proto.Item.furniture)
  if (has_furniture()) {
    clear_has_detail();
    ::proto::Furniture* temp = detail_.furniture_;
    detail_.furniture_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item::set_allocated_furniture(::proto::Furniture* furniture) {
  clear_detail();
  if (furniture) {
    set_has_furniture();
    detail_.furniture_ = furniture;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Item.furniture)
}

inline bool Item::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void Item::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline Item::DetailCase Item::detail_case() const {
  return Item::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ItemParam

// uint32 item_id = 1;
inline void ItemParam::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemParam::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemParam.item_id)
  return item_id_;
}
inline void ItemParam::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParam.item_id)
}

// uint32 count = 2;
inline void ItemParam::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ItemParam::count() const {
  // @@protoc_insertion_point(field_get:proto.ItemParam.count)
  return count_;
}
inline void ItemParam::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParam.count)
}

// -------------------------------------------------------------------

// EquipParam

// uint32 item_id = 1;
inline void EquipParam::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::item_id() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_id)
  return item_id_;
}
inline void EquipParam::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_id)
}

// uint32 item_num = 2;
inline void EquipParam::clear_item_num() {
  item_num_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::item_num() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_num)
  return item_num_;
}
inline void EquipParam::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_num)
}

// uint32 item_level = 3;
inline void EquipParam::clear_item_level() {
  item_level_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::item_level() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_level)
  return item_level_;
}
inline void EquipParam::set_item_level(::google::protobuf::uint32 value) {
  
  item_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_level)
}

// uint32 promote_level = 4;
inline void EquipParam::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.promote_level)
  return promote_level_;
}
inline void EquipParam::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.promote_level)
}

// -------------------------------------------------------------------

// EquipParamList

// repeated .proto.EquipParam item_list = 1;
inline int EquipParamList::item_list_size() const {
  return item_list_.size();
}
inline void EquipParamList::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::EquipParam& EquipParamList::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EquipParamList.item_list)
  return item_list_.Get(index);
}
inline ::proto::EquipParam* EquipParamList::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EquipParamList.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::EquipParam* EquipParamList::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.EquipParamList.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >*
EquipParamList::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EquipParamList.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >&
EquipParamList::item_list() const {
  // @@protoc_insertion_point(field_list:proto.EquipParamList.item_list)
  return item_list_;
}

// -------------------------------------------------------------------

// Reward

// uint32 reward_id = 1;
inline void Reward::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 Reward::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.Reward.reward_id)
  return reward_id_;
}
inline void Reward::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Reward.reward_id)
}

// repeated .proto.ItemParam item_list = 2;
inline int Reward::item_list_size() const {
  return item_list_.size();
}
inline void Reward::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::ItemParam& Reward::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Reward.item_list)
  return item_list_.Get(index);
}
inline ::proto::ItemParam* Reward::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Reward.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::ItemParam* Reward::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.Reward.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
Reward::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Reward.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
Reward::item_list() const {
  // @@protoc_insertion_point(field_list:proto.Reward.item_list)
  return item_list_;
}

// -------------------------------------------------------------------

// AbilityString

// string str = 1;
inline bool AbilityString::has_str() const {
  return type_case() == kStr;
}
inline void AbilityString::set_has_str() {
  _oneof_case_[0] = kStr;
}
inline void AbilityString::clear_str() {
  if (has_str()) {
    type_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type();
  }
}
inline const ::std::string& AbilityString::str() const {
  // @@protoc_insertion_point(field_get:proto.AbilityString.str)
  if (has_str()) {
    return type_.str_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AbilityString::set_str(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
}
#if LANG_CXX11
inline void AbilityString::set_str(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityString.str)
}
#endif
inline void AbilityString::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityString.str)
}
inline void AbilityString::set_str(const char* value, size_t size) {
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityString.str)
}
inline ::std::string* AbilityString::mutable_str() {
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityString.str)
  return type_.str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityString::release_str() {
  // @@protoc_insertion_point(field_release:proto.AbilityString.str)
  if (has_str()) {
    clear_has_type();
    return type_.str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AbilityString::set_allocated_str(::std::string* str) {
  if (!has_str()) {
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_type();
  if (str != NULL) {
    set_has_str();
    type_.str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityString.str)
}

// uint32 hash = 2;
inline bool AbilityString::has_hash() const {
  return type_case() == kHash;
}
inline void AbilityString::set_has_hash() {
  _oneof_case_[0] = kHash;
}
inline void AbilityString::clear_hash() {
  if (has_hash()) {
    type_.hash_ = 0u;
    clear_has_type();
  }
}
inline ::google::protobuf::uint32 AbilityString::hash() const {
  // @@protoc_insertion_point(field_get:proto.AbilityString.hash)
  if (has_hash()) {
    return type_.hash_;
  }
  return 0u;
}
inline void AbilityString::set_hash(::google::protobuf::uint32 value) {
  if (!has_hash()) {
    clear_type();
    set_has_hash();
  }
  type_.hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityString.hash)
}

inline bool AbilityString::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void AbilityString::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline AbilityString::TypeCase AbilityString::type_case() const {
  return AbilityString::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AbilityFloatValue

// float value = 1;
inline void AbilityFloatValue::clear_value() {
  value_ = 0;
}
inline float AbilityFloatValue::value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityFloatValue.value)
  return value_;
}
inline void AbilityFloatValue::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityFloatValue.value)
}

// -------------------------------------------------------------------

// AbilityScalarValueEntry

// .proto.AbilityString key = 1;
inline bool AbilityScalarValueEntry::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void AbilityScalarValueEntry::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::proto::AbilityString& AbilityScalarValueEntry::key() const {
  const ::proto::AbilityString* p = key_;
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.key)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityScalarValueEntry::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityScalarValueEntry.key)
  return key_;
}
inline ::proto::AbilityString* AbilityScalarValueEntry::release_key() {
  // @@protoc_insertion_point(field_release:proto.AbilityScalarValueEntry.key)
  
  ::proto::AbilityString* temp = key_;
  key_ = NULL;
  return temp;
}
inline void AbilityScalarValueEntry::set_allocated_key(::proto::AbilityString* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityScalarValueEntry.key)
}

// .proto.AbilityScalarType value_type = 2;
inline void AbilityScalarValueEntry::clear_value_type() {
  value_type_ = 0;
}
inline ::proto::AbilityScalarType AbilityScalarValueEntry::value_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.value_type)
  return static_cast< ::proto::AbilityScalarType >(value_type_);
}
inline void AbilityScalarValueEntry::set_value_type(::proto::AbilityScalarType value) {
  
  value_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.value_type)
}

// float float_value = 3;
inline bool AbilityScalarValueEntry::has_float_value() const {
  return value_case() == kFloatValue;
}
inline void AbilityScalarValueEntry::set_has_float_value() {
  _oneof_case_[0] = kFloatValue;
}
inline void AbilityScalarValueEntry::clear_float_value() {
  if (has_float_value()) {
    value_.float_value_ = 0;
    clear_has_value();
  }
}
inline float AbilityScalarValueEntry::float_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.float_value)
  if (has_float_value()) {
    return value_.float_value_;
  }
  return 0;
}
inline void AbilityScalarValueEntry::set_float_value(float value) {
  if (!has_float_value()) {
    clear_value();
    set_has_float_value();
  }
  value_.float_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.float_value)
}

// string string_value = 4;
inline bool AbilityScalarValueEntry::has_string_value() const {
  return value_case() == kStringValue;
}
inline void AbilityScalarValueEntry::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void AbilityScalarValueEntry::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& AbilityScalarValueEntry::string_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AbilityScalarValueEntry::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
}
#if LANG_CXX11
inline void AbilityScalarValueEntry::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityScalarValueEntry.string_value)
}
#endif
inline void AbilityScalarValueEntry::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityScalarValueEntry.string_value)
}
inline void AbilityScalarValueEntry::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityScalarValueEntry.string_value)
}
inline ::std::string* AbilityScalarValueEntry::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityScalarValueEntry.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityScalarValueEntry::release_string_value() {
  // @@protoc_insertion_point(field_release:proto.AbilityScalarValueEntry.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AbilityScalarValueEntry::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityScalarValueEntry.string_value)
}

// int32 int_value = 5;
inline bool AbilityScalarValueEntry::has_int_value() const {
  return value_case() == kIntValue;
}
inline void AbilityScalarValueEntry::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
inline void AbilityScalarValueEntry::clear_int_value() {
  if (has_int_value()) {
    value_.int_value_ = 0;
    clear_has_value();
  }
}
inline ::google::protobuf::int32 AbilityScalarValueEntry::int_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.int_value)
  if (has_int_value()) {
    return value_.int_value_;
  }
  return 0;
}
inline void AbilityScalarValueEntry::set_int_value(::google::protobuf::int32 value) {
  if (!has_int_value()) {
    clear_value();
    set_has_int_value();
  }
  value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.int_value)
}

// uint32 uint_value = 6;
inline bool AbilityScalarValueEntry::has_uint_value() const {
  return value_case() == kUintValue;
}
inline void AbilityScalarValueEntry::set_has_uint_value() {
  _oneof_case_[0] = kUintValue;
}
inline void AbilityScalarValueEntry::clear_uint_value() {
  if (has_uint_value()) {
    value_.uint_value_ = 0u;
    clear_has_value();
  }
}
inline ::google::protobuf::uint32 AbilityScalarValueEntry::uint_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.uint_value)
  if (has_uint_value()) {
    return value_.uint_value_;
  }
  return 0u;
}
inline void AbilityScalarValueEntry::set_uint_value(::google::protobuf::uint32 value) {
  if (!has_uint_value()) {
    clear_value();
    set_has_uint_value();
  }
  value_.uint_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.uint_value)
}

inline bool AbilityScalarValueEntry::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void AbilityScalarValueEntry::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline AbilityScalarValueEntry::ValueCase AbilityScalarValueEntry::value_case() const {
  return AbilityScalarValueEntry::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AbilityAppliedAbility

// .proto.AbilityString ability_name = 1;
inline bool AbilityAppliedAbility::has_ability_name() const {
  return this != internal_default_instance() && ability_name_ != NULL;
}
inline void AbilityAppliedAbility::clear_ability_name() {
  if (GetArenaNoVirtual() == NULL && ability_name_ != NULL) delete ability_name_;
  ability_name_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedAbility::ability_name() const {
  const ::proto::AbilityString* p = ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedAbility::mutable_ability_name() {
  
  if (ability_name_ == NULL) {
    ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.ability_name)
  return ability_name_;
}
inline ::proto::AbilityString* AbilityAppliedAbility::release_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedAbility.ability_name)
  
  ::proto::AbilityString* temp = ability_name_;
  ability_name_ = NULL;
  return temp;
}
inline void AbilityAppliedAbility::set_allocated_ability_name(::proto::AbilityString* ability_name) {
  delete ability_name_;
  ability_name_ = ability_name;
  if (ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedAbility.ability_name)
}

// .proto.AbilityString ability_override = 2;
inline bool AbilityAppliedAbility::has_ability_override() const {
  return this != internal_default_instance() && ability_override_ != NULL;
}
inline void AbilityAppliedAbility::clear_ability_override() {
  if (GetArenaNoVirtual() == NULL && ability_override_ != NULL) delete ability_override_;
  ability_override_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedAbility::ability_override() const {
  const ::proto::AbilityString* p = ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedAbility::mutable_ability_override() {
  
  if (ability_override_ == NULL) {
    ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.ability_override)
  return ability_override_;
}
inline ::proto::AbilityString* AbilityAppliedAbility::release_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedAbility.ability_override)
  
  ::proto::AbilityString* temp = ability_override_;
  ability_override_ = NULL;
  return temp;
}
inline void AbilityAppliedAbility::set_allocated_ability_override(::proto::AbilityString* ability_override) {
  delete ability_override_;
  ability_override_ = ability_override;
  if (ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedAbility.ability_override)
}

// repeated .proto.AbilityScalarValueEntry override_map = 3;
inline int AbilityAppliedAbility::override_map_size() const {
  return override_map_.size();
}
inline void AbilityAppliedAbility::clear_override_map() {
  override_map_.Clear();
}
inline const ::proto::AbilityScalarValueEntry& AbilityAppliedAbility::override_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.override_map)
  return override_map_.Get(index);
}
inline ::proto::AbilityScalarValueEntry* AbilityAppliedAbility::mutable_override_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.override_map)
  return override_map_.Mutable(index);
}
inline ::proto::AbilityScalarValueEntry* AbilityAppliedAbility::add_override_map() {
  // @@protoc_insertion_point(field_add:proto.AbilityAppliedAbility.override_map)
  return override_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilityAppliedAbility::mutable_override_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityAppliedAbility.override_map)
  return &override_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilityAppliedAbility::override_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilityAppliedAbility.override_map)
  return override_map_;
}

// uint32 instanced_ability_id = 4;
inline void AbilityAppliedAbility::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedAbility::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.instanced_ability_id)
  return instanced_ability_id_;
}
inline void AbilityAppliedAbility::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedAbility.instanced_ability_id)
}

// -------------------------------------------------------------------

// AbilityAttachedModifier

// bool is_invalid = 1;
inline void AbilityAttachedModifier::clear_is_invalid() {
  is_invalid_ = false;
}
inline bool AbilityAttachedModifier::is_invalid() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.is_invalid)
  return is_invalid_;
}
inline void AbilityAttachedModifier::set_is_invalid(bool value) {
  
  is_invalid_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.is_invalid)
}

// uint32 owner_entity_id = 2;
inline void AbilityAttachedModifier::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAttachedModifier::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.owner_entity_id)
  return owner_entity_id_;
}
inline void AbilityAttachedModifier::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.owner_entity_id)
}

// uint32 instanced_modifier_id = 3;
inline void AbilityAttachedModifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAttachedModifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void AbilityAttachedModifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.instanced_modifier_id)
}

// bool is_serverbuff_modifier = 4;
inline void AbilityAttachedModifier::clear_is_serverbuff_modifier() {
  is_serverbuff_modifier_ = false;
}
inline bool AbilityAttachedModifier::is_serverbuff_modifier() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.is_serverbuff_modifier)
  return is_serverbuff_modifier_;
}
inline void AbilityAttachedModifier::set_is_serverbuff_modifier(bool value) {
  
  is_serverbuff_modifier_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.is_serverbuff_modifier)
}

// int32 attach_name_hash = 5;
inline void AbilityAttachedModifier::clear_attach_name_hash() {
  attach_name_hash_ = 0;
}
inline ::google::protobuf::int32 AbilityAttachedModifier::attach_name_hash() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.attach_name_hash)
  return attach_name_hash_;
}
inline void AbilityAttachedModifier::set_attach_name_hash(::google::protobuf::int32 value) {
  
  attach_name_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.attach_name_hash)
}

// -------------------------------------------------------------------

// ModifierDurability

// float reduce_ratio = 1;
inline void ModifierDurability::clear_reduce_ratio() {
  reduce_ratio_ = 0;
}
inline float ModifierDurability::reduce_ratio() const {
  // @@protoc_insertion_point(field_get:proto.ModifierDurability.reduce_ratio)
  return reduce_ratio_;
}
inline void ModifierDurability::set_reduce_ratio(float value) {
  
  reduce_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifierDurability.reduce_ratio)
}

// float remaining_durability = 2;
inline void ModifierDurability::clear_remaining_durability() {
  remaining_durability_ = 0;
}
inline float ModifierDurability::remaining_durability() const {
  // @@protoc_insertion_point(field_get:proto.ModifierDurability.remaining_durability)
  return remaining_durability_;
}
inline void ModifierDurability::set_remaining_durability(float value) {
  
  remaining_durability_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifierDurability.remaining_durability)
}

// -------------------------------------------------------------------

// AbilityAppliedModifier

// int32 modifier_local_id = 1;
inline void AbilityAppliedModifier::clear_modifier_local_id() {
  modifier_local_id_ = 0;
}
inline ::google::protobuf::int32 AbilityAppliedModifier::modifier_local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.modifier_local_id)
  return modifier_local_id_;
}
inline void AbilityAppliedModifier::set_modifier_local_id(::google::protobuf::int32 value) {
  
  modifier_local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.modifier_local_id)
}

// uint32 parent_ability_entity_id = 2;
inline void AbilityAppliedModifier::clear_parent_ability_entity_id() {
  parent_ability_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::parent_ability_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_entity_id)
  return parent_ability_entity_id_;
}
inline void AbilityAppliedModifier::set_parent_ability_entity_id(::google::protobuf::uint32 value) {
  
  parent_ability_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.parent_ability_entity_id)
}

// .proto.AbilityString parent_ability_name = 3;
inline bool AbilityAppliedModifier::has_parent_ability_name() const {
  return this != internal_default_instance() && parent_ability_name_ != NULL;
}
inline void AbilityAppliedModifier::clear_parent_ability_name() {
  if (GetArenaNoVirtual() == NULL && parent_ability_name_ != NULL) delete parent_ability_name_;
  parent_ability_name_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedModifier::parent_ability_name() const {
  const ::proto::AbilityString* p = parent_ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedModifier::mutable_parent_ability_name() {
  
  if (parent_ability_name_ == NULL) {
    parent_ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.parent_ability_name)
  return parent_ability_name_;
}
inline ::proto::AbilityString* AbilityAppliedModifier::release_parent_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.parent_ability_name)
  
  ::proto::AbilityString* temp = parent_ability_name_;
  parent_ability_name_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_parent_ability_name(::proto::AbilityString* parent_ability_name) {
  delete parent_ability_name_;
  parent_ability_name_ = parent_ability_name;
  if (parent_ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.parent_ability_name)
}

// .proto.AbilityString parent_ability_override = 4;
inline bool AbilityAppliedModifier::has_parent_ability_override() const {
  return this != internal_default_instance() && parent_ability_override_ != NULL;
}
inline void AbilityAppliedModifier::clear_parent_ability_override() {
  if (GetArenaNoVirtual() == NULL && parent_ability_override_ != NULL) delete parent_ability_override_;
  parent_ability_override_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedModifier::parent_ability_override() const {
  const ::proto::AbilityString* p = parent_ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedModifier::mutable_parent_ability_override() {
  
  if (parent_ability_override_ == NULL) {
    parent_ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.parent_ability_override)
  return parent_ability_override_;
}
inline ::proto::AbilityString* AbilityAppliedModifier::release_parent_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.parent_ability_override)
  
  ::proto::AbilityString* temp = parent_ability_override_;
  parent_ability_override_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_parent_ability_override(::proto::AbilityString* parent_ability_override) {
  delete parent_ability_override_;
  parent_ability_override_ = parent_ability_override;
  if (parent_ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.parent_ability_override)
}

// uint32 instanced_ability_id = 5;
inline void AbilityAppliedModifier::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.instanced_ability_id)
  return instanced_ability_id_;
}
inline void AbilityAppliedModifier::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.instanced_ability_id)
}

// uint32 instanced_modifier_id = 6;
inline void AbilityAppliedModifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void AbilityAppliedModifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.instanced_modifier_id)
}

// float exist_duration = 7;
inline void AbilityAppliedModifier::clear_exist_duration() {
  exist_duration_ = 0;
}
inline float AbilityAppliedModifier::exist_duration() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.exist_duration)
  return exist_duration_;
}
inline void AbilityAppliedModifier::set_exist_duration(float value) {
  
  exist_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.exist_duration)
}

// .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
inline bool AbilityAppliedModifier::has_attached_instanced_modifier() const {
  return this != internal_default_instance() && attached_instanced_modifier_ != NULL;
}
inline void AbilityAppliedModifier::clear_attached_instanced_modifier() {
  if (GetArenaNoVirtual() == NULL && attached_instanced_modifier_ != NULL) delete attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
}
inline const ::proto::AbilityAttachedModifier& AbilityAppliedModifier::attached_instanced_modifier() const {
  const ::proto::AbilityAttachedModifier* p = attached_instanced_modifier_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.attached_instanced_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityAttachedModifier*>(
      &::proto::_AbilityAttachedModifier_default_instance_);
}
inline ::proto::AbilityAttachedModifier* AbilityAppliedModifier::mutable_attached_instanced_modifier() {
  
  if (attached_instanced_modifier_ == NULL) {
    attached_instanced_modifier_ = new ::proto::AbilityAttachedModifier;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.attached_instanced_modifier)
  return attached_instanced_modifier_;
}
inline ::proto::AbilityAttachedModifier* AbilityAppliedModifier::release_attached_instanced_modifier() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.attached_instanced_modifier)
  
  ::proto::AbilityAttachedModifier* temp = attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_attached_instanced_modifier(::proto::AbilityAttachedModifier* attached_instanced_modifier) {
  delete attached_instanced_modifier_;
  attached_instanced_modifier_ = attached_instanced_modifier;
  if (attached_instanced_modifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.attached_instanced_modifier)
}

// uint32 apply_entity_id = 9;
inline void AbilityAppliedModifier::clear_apply_entity_id() {
  apply_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::apply_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.apply_entity_id)
  return apply_entity_id_;
}
inline void AbilityAppliedModifier::set_apply_entity_id(::google::protobuf::uint32 value) {
  
  apply_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.apply_entity_id)
}

// bool is_attached_parent_ability = 10;
inline void AbilityAppliedModifier::clear_is_attached_parent_ability() {
  is_attached_parent_ability_ = false;
}
inline bool AbilityAppliedModifier::is_attached_parent_ability() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.is_attached_parent_ability)
  return is_attached_parent_ability_;
}
inline void AbilityAppliedModifier::set_is_attached_parent_ability(bool value) {
  
  is_attached_parent_ability_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.is_attached_parent_ability)
}

// .proto.ModifierDurability modifier_durability = 11;
inline bool AbilityAppliedModifier::has_modifier_durability() const {
  return this != internal_default_instance() && modifier_durability_ != NULL;
}
inline void AbilityAppliedModifier::clear_modifier_durability() {
  if (GetArenaNoVirtual() == NULL && modifier_durability_ != NULL) delete modifier_durability_;
  modifier_durability_ = NULL;
}
inline const ::proto::ModifierDurability& AbilityAppliedModifier::modifier_durability() const {
  const ::proto::ModifierDurability* p = modifier_durability_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.modifier_durability)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ModifierDurability*>(
      &::proto::_ModifierDurability_default_instance_);
}
inline ::proto::ModifierDurability* AbilityAppliedModifier::mutable_modifier_durability() {
  
  if (modifier_durability_ == NULL) {
    modifier_durability_ = new ::proto::ModifierDurability;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.modifier_durability)
  return modifier_durability_;
}
inline ::proto::ModifierDurability* AbilityAppliedModifier::release_modifier_durability() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.modifier_durability)
  
  ::proto::ModifierDurability* temp = modifier_durability_;
  modifier_durability_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_modifier_durability(::proto::ModifierDurability* modifier_durability) {
  delete modifier_durability_;
  modifier_durability_ = modifier_durability;
  if (modifier_durability) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.modifier_durability)
}

// uint32 sbuff_uid = 12;
inline void AbilityAppliedModifier::clear_sbuff_uid() {
  sbuff_uid_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::sbuff_uid() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.sbuff_uid)
  return sbuff_uid_;
}
inline void AbilityAppliedModifier::set_sbuff_uid(::google::protobuf::uint32 value) {
  
  sbuff_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.sbuff_uid)
}

// bool is_serverbuff_modifier = 13;
inline void AbilityAppliedModifier::clear_is_serverbuff_modifier() {
  is_serverbuff_modifier_ = false;
}
inline bool AbilityAppliedModifier::is_serverbuff_modifier() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.is_serverbuff_modifier)
  return is_serverbuff_modifier_;
}
inline void AbilityAppliedModifier::set_is_serverbuff_modifier(bool value) {
  
  is_serverbuff_modifier_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.is_serverbuff_modifier)
}

// -------------------------------------------------------------------

// MassivePropParam

// int32 type = 1;
inline void MassivePropParam::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 MassivePropParam::type() const {
  // @@protoc_insertion_point(field_get:proto.MassivePropParam.type)
  return type_;
}
inline void MassivePropParam::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.MassivePropParam.type)
}

// repeated uint32 reaction_info_list = 2;
inline int MassivePropParam::reaction_info_list_size() const {
  return reaction_info_list_.size();
}
inline void MassivePropParam::clear_reaction_info_list() {
  reaction_info_list_.Clear();
}
inline ::google::protobuf::uint32 MassivePropParam::reaction_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MassivePropParam.reaction_info_list)
  return reaction_info_list_.Get(index);
}
inline void MassivePropParam::set_reaction_info_list(int index, ::google::protobuf::uint32 value) {
  reaction_info_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MassivePropParam.reaction_info_list)
}
inline void MassivePropParam::add_reaction_info_list(::google::protobuf::uint32 value) {
  reaction_info_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MassivePropParam.reaction_info_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MassivePropParam::reaction_info_list() const {
  // @@protoc_insertion_point(field_list:proto.MassivePropParam.reaction_info_list)
  return reaction_info_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MassivePropParam::mutable_reaction_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MassivePropParam.reaction_info_list)
  return &reaction_info_list_;
}

// repeated float param_list = 3;
inline int MassivePropParam::param_list_size() const {
  return param_list_.size();
}
inline void MassivePropParam::clear_param_list() {
  param_list_.Clear();
}
inline float MassivePropParam::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MassivePropParam.param_list)
  return param_list_.Get(index);
}
inline void MassivePropParam::set_param_list(int index, float value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MassivePropParam.param_list)
}
inline void MassivePropParam::add_param_list(float value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MassivePropParam.param_list)
}
inline const ::google::protobuf::RepeatedField< float >&
MassivePropParam::param_list() const {
  // @@protoc_insertion_point(field_list:proto.MassivePropParam.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< float >*
MassivePropParam::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MassivePropParam.param_list)
  return &param_list_;
}

// uint32 sync_flag = 4;
inline void MassivePropParam::clear_sync_flag() {
  sync_flag_ = 0u;
}
inline ::google::protobuf::uint32 MassivePropParam::sync_flag() const {
  // @@protoc_insertion_point(field_get:proto.MassivePropParam.sync_flag)
  return sync_flag_;
}
inline void MassivePropParam::set_sync_flag(::google::protobuf::uint32 value) {
  
  sync_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.MassivePropParam.sync_flag)
}

// -------------------------------------------------------------------

// MassivePropSyncInfo

// int64 id = 1;
inline void MassivePropSyncInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MassivePropSyncInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassivePropSyncInfo.id)
  return id_;
}
inline void MassivePropSyncInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassivePropSyncInfo.id)
}

// repeated .proto.MassivePropParam prop_list = 2;
inline int MassivePropSyncInfo::prop_list_size() const {
  return prop_list_.size();
}
inline void MassivePropSyncInfo::clear_prop_list() {
  prop_list_.Clear();
}
inline const ::proto::MassivePropParam& MassivePropSyncInfo::prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MassivePropSyncInfo.prop_list)
  return prop_list_.Get(index);
}
inline ::proto::MassivePropParam* MassivePropSyncInfo::mutable_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MassivePropSyncInfo.prop_list)
  return prop_list_.Mutable(index);
}
inline ::proto::MassivePropParam* MassivePropSyncInfo::add_prop_list() {
  // @@protoc_insertion_point(field_add:proto.MassivePropSyncInfo.prop_list)
  return prop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MassivePropParam >*
MassivePropSyncInfo::mutable_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MassivePropSyncInfo.prop_list)
  return &prop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MassivePropParam >&
MassivePropSyncInfo::prop_list() const {
  // @@protoc_insertion_point(field_list:proto.MassivePropSyncInfo.prop_list)
  return prop_list_;
}

// -------------------------------------------------------------------

// BreakoutVector2

// int32 x = 1;
inline void BreakoutVector2::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 BreakoutVector2::x() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutVector2.x)
  return x_;
}
inline void BreakoutVector2::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutVector2.x)
}

// int32 y = 2;
inline void BreakoutVector2::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 BreakoutVector2::y() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutVector2.y)
  return y_;
}
inline void BreakoutVector2::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutVector2.y)
}

// -------------------------------------------------------------------

// BreakoutBrickInfo

// uint32 hp = 1;
inline void BreakoutBrickInfo::clear_hp() {
  hp_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutBrickInfo::hp() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutBrickInfo.hp)
  return hp_;
}
inline void BreakoutBrickInfo::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutBrickInfo.hp)
}

// uint32 element_type = 2;
inline void BreakoutBrickInfo::clear_element_type() {
  element_type_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutBrickInfo::element_type() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutBrickInfo.element_type)
  return element_type_;
}
inline void BreakoutBrickInfo::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutBrickInfo.element_type)
}

// -------------------------------------------------------------------

// BreakoutPhysicalObjectModifier

// uint32 type = 1;
inline void BreakoutPhysicalObjectModifier::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObjectModifier::type() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.type)
  return type_;
}
inline void BreakoutPhysicalObjectModifier::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.type)
}

// uint32 id = 2;
inline void BreakoutPhysicalObjectModifier::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObjectModifier::id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.id)
  return id_;
}
inline void BreakoutPhysicalObjectModifier::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.id)
}

// int32 param1 = 3;
inline void BreakoutPhysicalObjectModifier::clear_param1() {
  param1_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::param1() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.param1)
  return param1_;
}
inline void BreakoutPhysicalObjectModifier::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.param1)
}

// int32 param2 = 4;
inline void BreakoutPhysicalObjectModifier::clear_param2() {
  param2_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::param2() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.param2)
  return param2_;
}
inline void BreakoutPhysicalObjectModifier::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.param2)
}

// int32 param3 = 5;
inline void BreakoutPhysicalObjectModifier::clear_param3() {
  param3_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::param3() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.param3)
  return param3_;
}
inline void BreakoutPhysicalObjectModifier::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.param3)
}

// int32 param4 = 6;
inline void BreakoutPhysicalObjectModifier::clear_param4() {
  param4_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::param4() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.param4)
  return param4_;
}
inline void BreakoutPhysicalObjectModifier::set_param4(::google::protobuf::int32 value) {
  
  param4_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.param4)
}

// int32 param5 = 7;
inline void BreakoutPhysicalObjectModifier::clear_param5() {
  param5_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::param5() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.param5)
  return param5_;
}
inline void BreakoutPhysicalObjectModifier::set_param5(::google::protobuf::int32 value) {
  
  param5_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.param5)
}

// int32 param6 = 8;
inline void BreakoutPhysicalObjectModifier::clear_param6() {
  param6_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::param6() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.param6)
  return param6_;
}
inline void BreakoutPhysicalObjectModifier::set_param6(::google::protobuf::int32 value) {
  
  param6_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.param6)
}

// bool bool1 = 9;
inline void BreakoutPhysicalObjectModifier::clear_bool1() {
  bool1_ = false;
}
inline bool BreakoutPhysicalObjectModifier::bool1() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.bool1)
  return bool1_;
}
inline void BreakoutPhysicalObjectModifier::set_bool1(bool value) {
  
  bool1_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.bool1)
}

// int32 duration = 10;
inline void BreakoutPhysicalObjectModifier::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::duration() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.duration)
  return duration_;
}
inline void BreakoutPhysicalObjectModifier::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.duration)
}

// int32 end_time = 11;
inline void BreakoutPhysicalObjectModifier::clear_end_time() {
  end_time_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObjectModifier::end_time() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.end_time)
  return end_time_;
}
inline void BreakoutPhysicalObjectModifier::set_end_time(::google::protobuf::int32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.end_time)
}

// uint32 combo = 12;
inline void BreakoutPhysicalObjectModifier::clear_combo() {
  combo_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObjectModifier::combo() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.combo)
  return combo_;
}
inline void BreakoutPhysicalObjectModifier::set_combo(::google::protobuf::uint32 value) {
  
  combo_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.combo)
}

// uint32 peer_id = 13;
inline void BreakoutPhysicalObjectModifier::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObjectModifier::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.peer_id)
  return peer_id_;
}
inline void BreakoutPhysicalObjectModifier::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.peer_id)
}

// uint32 skill_type = 14;
inline void BreakoutPhysicalObjectModifier::clear_skill_type() {
  skill_type_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObjectModifier::skill_type() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.skill_type)
  return skill_type_;
}
inline void BreakoutPhysicalObjectModifier::set_skill_type(::google::protobuf::uint32 value) {
  
  skill_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.skill_type)
}

// uint32 level = 15;
inline void BreakoutPhysicalObjectModifier::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObjectModifier::level() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.level)
  return level_;
}
inline void BreakoutPhysicalObjectModifier::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.level)
}

// uint32 choose_player_count = 16;
inline void BreakoutPhysicalObjectModifier::clear_choose_player_count() {
  choose_player_count_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObjectModifier::choose_player_count() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObjectModifier.choose_player_count)
  return choose_player_count_;
}
inline void BreakoutPhysicalObjectModifier::set_choose_player_count(::google::protobuf::uint32 value) {
  
  choose_player_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObjectModifier.choose_player_count)
}

// -------------------------------------------------------------------

// BreakoutPhysicalObject

// uint32 id = 1;
inline void BreakoutPhysicalObject::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.id)
  return id_;
}
inline void BreakoutPhysicalObject::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.id)
}

// uint32 index = 2;
inline void BreakoutPhysicalObject::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::index() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.index)
  return index_;
}
inline void BreakoutPhysicalObject::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.index)
}

// bool is_active = 3;
inline void BreakoutPhysicalObject::clear_is_active() {
  is_active_ = false;
}
inline bool BreakoutPhysicalObject::is_active() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.is_active)
  return is_active_;
}
inline void BreakoutPhysicalObject::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.is_active)
}

// .proto.BreakoutVector2 pos = 4;
inline bool BreakoutPhysicalObject::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void BreakoutPhysicalObject::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::BreakoutVector2& BreakoutPhysicalObject::pos() const {
  const ::proto::BreakoutVector2* p = pos_;
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BreakoutVector2*>(
      &::proto::_BreakoutVector2_default_instance_);
}
inline ::proto::BreakoutVector2* BreakoutPhysicalObject::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::BreakoutVector2;
  }
  // @@protoc_insertion_point(field_mutable:proto.BreakoutPhysicalObject.pos)
  return pos_;
}
inline ::proto::BreakoutVector2* BreakoutPhysicalObject::release_pos() {
  // @@protoc_insertion_point(field_release:proto.BreakoutPhysicalObject.pos)
  
  ::proto::BreakoutVector2* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void BreakoutPhysicalObject::set_allocated_pos(::proto::BreakoutVector2* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BreakoutPhysicalObject.pos)
}

// .proto.BreakoutVector2 move_dir = 5;
inline bool BreakoutPhysicalObject::has_move_dir() const {
  return this != internal_default_instance() && move_dir_ != NULL;
}
inline void BreakoutPhysicalObject::clear_move_dir() {
  if (GetArenaNoVirtual() == NULL && move_dir_ != NULL) delete move_dir_;
  move_dir_ = NULL;
}
inline const ::proto::BreakoutVector2& BreakoutPhysicalObject::move_dir() const {
  const ::proto::BreakoutVector2* p = move_dir_;
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.move_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BreakoutVector2*>(
      &::proto::_BreakoutVector2_default_instance_);
}
inline ::proto::BreakoutVector2* BreakoutPhysicalObject::mutable_move_dir() {
  
  if (move_dir_ == NULL) {
    move_dir_ = new ::proto::BreakoutVector2;
  }
  // @@protoc_insertion_point(field_mutable:proto.BreakoutPhysicalObject.move_dir)
  return move_dir_;
}
inline ::proto::BreakoutVector2* BreakoutPhysicalObject::release_move_dir() {
  // @@protoc_insertion_point(field_release:proto.BreakoutPhysicalObject.move_dir)
  
  ::proto::BreakoutVector2* temp = move_dir_;
  move_dir_ = NULL;
  return temp;
}
inline void BreakoutPhysicalObject::set_allocated_move_dir(::proto::BreakoutVector2* move_dir) {
  delete move_dir_;
  move_dir_ = move_dir;
  if (move_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BreakoutPhysicalObject.move_dir)
}

// int32 speed = 6;
inline void BreakoutPhysicalObject::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObject::speed() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.speed)
  return speed_;
}
inline void BreakoutPhysicalObject::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.speed)
}

// uint32 init_peer_id = 7;
inline void BreakoutPhysicalObject::clear_init_peer_id() {
  init_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::init_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.init_peer_id)
  return init_peer_id_;
}
inline void BreakoutPhysicalObject::set_init_peer_id(::google::protobuf::uint32 value) {
  
  init_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.init_peer_id)
}

// uint32 state = 8;
inline void BreakoutPhysicalObject::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::state() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.state)
  return state_;
}
inline void BreakoutPhysicalObject::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.state)
}

// uint32 element_type = 9;
inline void BreakoutPhysicalObject::clear_element_type() {
  element_type_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::element_type() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.element_type)
  return element_type_;
}
inline void BreakoutPhysicalObject::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.element_type)
}

// uint32 element_reaction_buff = 10;
inline void BreakoutPhysicalObject::clear_element_reaction_buff() {
  element_reaction_buff_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::element_reaction_buff() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.element_reaction_buff)
  return element_reaction_buff_;
}
inline void BreakoutPhysicalObject::set_element_reaction_buff(::google::protobuf::uint32 value) {
  
  element_reaction_buff_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.element_reaction_buff)
}

// repeated .proto.BreakoutPhysicalObjectModifier modifier_list = 11;
inline int BreakoutPhysicalObject::modifier_list_size() const {
  return modifier_list_.size();
}
inline void BreakoutPhysicalObject::clear_modifier_list() {
  modifier_list_.Clear();
}
inline const ::proto::BreakoutPhysicalObjectModifier& BreakoutPhysicalObject::modifier_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.modifier_list)
  return modifier_list_.Get(index);
}
inline ::proto::BreakoutPhysicalObjectModifier* BreakoutPhysicalObject::mutable_modifier_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutPhysicalObject.modifier_list)
  return modifier_list_.Mutable(index);
}
inline ::proto::BreakoutPhysicalObjectModifier* BreakoutPhysicalObject::add_modifier_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutPhysicalObject.modifier_list)
  return modifier_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObjectModifier >*
BreakoutPhysicalObject::mutable_modifier_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutPhysicalObject.modifier_list)
  return &modifier_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObjectModifier >&
BreakoutPhysicalObject::modifier_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutPhysicalObject.modifier_list)
  return modifier_list_;
}

// int32 total_rotation = 12;
inline void BreakoutPhysicalObject::clear_total_rotation() {
  total_rotation_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObject::total_rotation() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.total_rotation)
  return total_rotation_;
}
inline void BreakoutPhysicalObject::set_total_rotation(::google::protobuf::int32 value) {
  
  total_rotation_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.total_rotation)
}

// repeated .proto.BreakoutBrickInfo info_list = 13;
inline int BreakoutPhysicalObject::info_list_size() const {
  return info_list_.size();
}
inline void BreakoutPhysicalObject::clear_info_list() {
  info_list_.Clear();
}
inline const ::proto::BreakoutBrickInfo& BreakoutPhysicalObject::info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.info_list)
  return info_list_.Get(index);
}
inline ::proto::BreakoutBrickInfo* BreakoutPhysicalObject::mutable_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutPhysicalObject.info_list)
  return info_list_.Mutable(index);
}
inline ::proto::BreakoutBrickInfo* BreakoutPhysicalObject::add_info_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutPhysicalObject.info_list)
  return info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutBrickInfo >*
BreakoutPhysicalObject::mutable_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutPhysicalObject.info_list)
  return &info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutBrickInfo >&
BreakoutPhysicalObject::info_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutPhysicalObject.info_list)
  return info_list_;
}

// uint32 last_hit_peer_id = 14;
inline void BreakoutPhysicalObject::clear_last_hit_peer_id() {
  last_hit_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::last_hit_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.last_hit_peer_id)
  return last_hit_peer_id_;
}
inline void BreakoutPhysicalObject::set_last_hit_peer_id(::google::protobuf::uint32 value) {
  
  last_hit_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.last_hit_peer_id)
}

// uint32 speed_increase_count = 15;
inline void BreakoutPhysicalObject::clear_speed_increase_count() {
  speed_increase_count_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutPhysicalObject::speed_increase_count() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.speed_increase_count)
  return speed_increase_count_;
}
inline void BreakoutPhysicalObject::set_speed_increase_count(::google::protobuf::uint32 value) {
  
  speed_increase_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.speed_increase_count)
}

// int32 offset = 16;
inline void BreakoutPhysicalObject::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 BreakoutPhysicalObject::offset() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutPhysicalObject.offset)
  return offset_;
}
inline void BreakoutPhysicalObject::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutPhysicalObject.offset)
}

// -------------------------------------------------------------------

// BreakoutSpawnPoint

// uint32 id = 1;
inline void BreakoutSpawnPoint::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSpawnPoint::id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSpawnPoint.id)
  return id_;
}
inline void BreakoutSpawnPoint::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSpawnPoint.id)
}

// uint32 brick_suite_id = 2;
inline void BreakoutSpawnPoint::clear_brick_suite_id() {
  brick_suite_id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSpawnPoint::brick_suite_id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSpawnPoint.brick_suite_id)
  return brick_suite_id_;
}
inline void BreakoutSpawnPoint::set_brick_suite_id(::google::protobuf::uint32 value) {
  
  brick_suite_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSpawnPoint.brick_suite_id)
}

// repeated .proto.BreakoutPhysicalObject spawned_brick_list = 3;
inline int BreakoutSpawnPoint::spawned_brick_list_size() const {
  return spawned_brick_list_.size();
}
inline void BreakoutSpawnPoint::clear_spawned_brick_list() {
  spawned_brick_list_.Clear();
}
inline const ::proto::BreakoutPhysicalObject& BreakoutSpawnPoint::spawned_brick_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSpawnPoint.spawned_brick_list)
  return spawned_brick_list_.Get(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSpawnPoint::mutable_spawned_brick_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSpawnPoint.spawned_brick_list)
  return spawned_brick_list_.Mutable(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSpawnPoint::add_spawned_brick_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSpawnPoint.spawned_brick_list)
  return spawned_brick_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
BreakoutSpawnPoint::mutable_spawned_brick_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSpawnPoint.spawned_brick_list)
  return &spawned_brick_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
BreakoutSpawnPoint::spawned_brick_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSpawnPoint.spawned_brick_list)
  return spawned_brick_list_;
}

// -------------------------------------------------------------------

// BreakoutElementReactionCounter

// uint32 element_reaction = 1;
inline void BreakoutElementReactionCounter::clear_element_reaction() {
  element_reaction_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutElementReactionCounter::element_reaction() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutElementReactionCounter.element_reaction)
  return element_reaction_;
}
inline void BreakoutElementReactionCounter::set_element_reaction(::google::protobuf::uint32 value) {
  
  element_reaction_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutElementReactionCounter.element_reaction)
}

// uint32 count = 2;
inline void BreakoutElementReactionCounter::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutElementReactionCounter::count() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutElementReactionCounter.count)
  return count_;
}
inline void BreakoutElementReactionCounter::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutElementReactionCounter.count)
}

// -------------------------------------------------------------------

// BreakoutSyncConnectUidInfo

// uint32 uid = 1;
inline void BreakoutSyncConnectUidInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSyncConnectUidInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSyncConnectUidInfo.uid)
  return uid_;
}
inline void BreakoutSyncConnectUidInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSyncConnectUidInfo.uid)
}

// repeated uint32 skill_id_list = 2;
inline int BreakoutSyncConnectUidInfo::skill_id_list_size() const {
  return skill_id_list_.size();
}
inline void BreakoutSyncConnectUidInfo::clear_skill_id_list() {
  skill_id_list_.Clear();
}
inline ::google::protobuf::uint32 BreakoutSyncConnectUidInfo::skill_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSyncConnectUidInfo.skill_id_list)
  return skill_id_list_.Get(index);
}
inline void BreakoutSyncConnectUidInfo::set_skill_id_list(int index, ::google::protobuf::uint32 value) {
  skill_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BreakoutSyncConnectUidInfo.skill_id_list)
}
inline void BreakoutSyncConnectUidInfo::add_skill_id_list(::google::protobuf::uint32 value) {
  skill_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BreakoutSyncConnectUidInfo.skill_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BreakoutSyncConnectUidInfo::skill_id_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSyncConnectUidInfo.skill_id_list)
  return skill_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BreakoutSyncConnectUidInfo::mutable_skill_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSyncConnectUidInfo.skill_id_list)
  return &skill_id_list_;
}

// repeated uint32 skill_level_list = 3;
inline int BreakoutSyncConnectUidInfo::skill_level_list_size() const {
  return skill_level_list_.size();
}
inline void BreakoutSyncConnectUidInfo::clear_skill_level_list() {
  skill_level_list_.Clear();
}
inline ::google::protobuf::uint32 BreakoutSyncConnectUidInfo::skill_level_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSyncConnectUidInfo.skill_level_list)
  return skill_level_list_.Get(index);
}
inline void BreakoutSyncConnectUidInfo::set_skill_level_list(int index, ::google::protobuf::uint32 value) {
  skill_level_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BreakoutSyncConnectUidInfo.skill_level_list)
}
inline void BreakoutSyncConnectUidInfo::add_skill_level_list(::google::protobuf::uint32 value) {
  skill_level_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BreakoutSyncConnectUidInfo.skill_level_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BreakoutSyncConnectUidInfo::skill_level_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSyncConnectUidInfo.skill_level_list)
  return skill_level_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BreakoutSyncConnectUidInfo::mutable_skill_level_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSyncConnectUidInfo.skill_level_list)
  return &skill_level_list_;
}

// -------------------------------------------------------------------

// BreakoutSnapShot

// uint64 client_game_time = 1;
inline void BreakoutSnapShot::clear_client_game_time() {
  client_game_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BreakoutSnapShot::client_game_time() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.client_game_time)
  return client_game_time_;
}
inline void BreakoutSnapShot::set_client_game_time(::google::protobuf::uint64 value) {
  
  client_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.client_game_time)
}

// uint64 server_game_time = 2;
inline void BreakoutSnapShot::clear_server_game_time() {
  server_game_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BreakoutSnapShot::server_game_time() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.server_game_time)
  return server_game_time_;
}
inline void BreakoutSnapShot::set_server_game_time(::google::protobuf::uint64 value) {
  
  server_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.server_game_time)
}

// repeated .proto.BreakoutPhysicalObject ball_list = 3;
inline int BreakoutSnapShot::ball_list_size() const {
  return ball_list_.size();
}
inline void BreakoutSnapShot::clear_ball_list() {
  ball_list_.Clear();
}
inline const ::proto::BreakoutPhysicalObject& BreakoutSnapShot::ball_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.ball_list)
  return ball_list_.Get(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSnapShot::mutable_ball_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.ball_list)
  return ball_list_.Mutable(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSnapShot::add_ball_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.ball_list)
  return ball_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
BreakoutSnapShot::mutable_ball_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.ball_list)
  return &ball_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
BreakoutSnapShot::ball_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.ball_list)
  return ball_list_;
}

// repeated .proto.BreakoutPhysicalObject physical_object_list = 4;
inline int BreakoutSnapShot::physical_object_list_size() const {
  return physical_object_list_.size();
}
inline void BreakoutSnapShot::clear_physical_object_list() {
  physical_object_list_.Clear();
}
inline const ::proto::BreakoutPhysicalObject& BreakoutSnapShot::physical_object_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.physical_object_list)
  return physical_object_list_.Get(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSnapShot::mutable_physical_object_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.physical_object_list)
  return physical_object_list_.Mutable(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSnapShot::add_physical_object_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.physical_object_list)
  return physical_object_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
BreakoutSnapShot::mutable_physical_object_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.physical_object_list)
  return &physical_object_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
BreakoutSnapShot::physical_object_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.physical_object_list)
  return physical_object_list_;
}

// repeated .proto.BreakoutAction action_list = 5;
inline int BreakoutSnapShot::action_list_size() const {
  return action_list_.size();
}
inline void BreakoutSnapShot::clear_action_list() {
  action_list_.Clear();
}
inline const ::proto::BreakoutAction& BreakoutSnapShot::action_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.action_list)
  return action_list_.Get(index);
}
inline ::proto::BreakoutAction* BreakoutSnapShot::mutable_action_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.action_list)
  return action_list_.Mutable(index);
}
inline ::proto::BreakoutAction* BreakoutSnapShot::add_action_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.action_list)
  return action_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutAction >*
BreakoutSnapShot::mutable_action_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.action_list)
  return &action_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutAction >&
BreakoutSnapShot::action_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.action_list)
  return action_list_;
}

// uint32 wave_index = 6;
inline void BreakoutSnapShot::clear_wave_index() {
  wave_index_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSnapShot::wave_index() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.wave_index)
  return wave_index_;
}
inline void BreakoutSnapShot::set_wave_index(::google::protobuf::uint32 value) {
  
  wave_index_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.wave_index)
}

// bool is_finish = 7;
inline void BreakoutSnapShot::clear_is_finish() {
  is_finish_ = false;
}
inline bool BreakoutSnapShot::is_finish() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.is_finish)
  return is_finish_;
}
inline void BreakoutSnapShot::set_is_finish(bool value) {
  
  is_finish_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.is_finish)
}

// uint32 score = 8;
inline void BreakoutSnapShot::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSnapShot::score() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.score)
  return score_;
}
inline void BreakoutSnapShot::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.score)
}

// uint32 combo = 9;
inline void BreakoutSnapShot::clear_combo() {
  combo_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSnapShot::combo() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.combo)
  return combo_;
}
inline void BreakoutSnapShot::set_combo(::google::protobuf::uint32 value) {
  
  combo_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.combo)
}

// uint32 max_combo = 10;
inline void BreakoutSnapShot::clear_max_combo() {
  max_combo_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSnapShot::max_combo() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.max_combo)
  return max_combo_;
}
inline void BreakoutSnapShot::set_max_combo(::google::protobuf::uint32 value) {
  
  max_combo_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.max_combo)
}

// uint32 life_count = 11;
inline void BreakoutSnapShot::clear_life_count() {
  life_count_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSnapShot::life_count() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.life_count)
  return life_count_;
}
inline void BreakoutSnapShot::set_life_count(::google::protobuf::uint32 value) {
  
  life_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.life_count)
}

// uint32 wave_suite_index = 12;
inline void BreakoutSnapShot::clear_wave_suite_index() {
  wave_suite_index_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSnapShot::wave_suite_index() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.wave_suite_index)
  return wave_suite_index_;
}
inline void BreakoutSnapShot::set_wave_suite_index(::google::protobuf::uint32 value) {
  
  wave_suite_index_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.wave_suite_index)
}

// repeated .proto.BreakoutSpawnPoint spawn_point_list = 13;
inline int BreakoutSnapShot::spawn_point_list_size() const {
  return spawn_point_list_.size();
}
inline void BreakoutSnapShot::clear_spawn_point_list() {
  spawn_point_list_.Clear();
}
inline const ::proto::BreakoutSpawnPoint& BreakoutSnapShot::spawn_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.spawn_point_list)
  return spawn_point_list_.Get(index);
}
inline ::proto::BreakoutSpawnPoint* BreakoutSnapShot::mutable_spawn_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.spawn_point_list)
  return spawn_point_list_.Mutable(index);
}
inline ::proto::BreakoutSpawnPoint* BreakoutSnapShot::add_spawn_point_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.spawn_point_list)
  return spawn_point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSpawnPoint >*
BreakoutSnapShot::mutable_spawn_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.spawn_point_list)
  return &spawn_point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSpawnPoint >&
BreakoutSnapShot::spawn_point_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.spawn_point_list)
  return spawn_point_list_;
}

// uint32 remaining_boss_hp = 14;
inline void BreakoutSnapShot::clear_remaining_boss_hp() {
  remaining_boss_hp_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutSnapShot::remaining_boss_hp() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.remaining_boss_hp)
  return remaining_boss_hp_;
}
inline void BreakoutSnapShot::set_remaining_boss_hp(::google::protobuf::uint32 value) {
  
  remaining_boss_hp_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.remaining_boss_hp)
}

// repeated .proto.BreakoutElementReactionCounter brick_element_reaction_list = 15;
inline int BreakoutSnapShot::brick_element_reaction_list_size() const {
  return brick_element_reaction_list_.size();
}
inline void BreakoutSnapShot::clear_brick_element_reaction_list() {
  brick_element_reaction_list_.Clear();
}
inline const ::proto::BreakoutElementReactionCounter& BreakoutSnapShot::brick_element_reaction_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.brick_element_reaction_list)
  return brick_element_reaction_list_.Get(index);
}
inline ::proto::BreakoutElementReactionCounter* BreakoutSnapShot::mutable_brick_element_reaction_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.brick_element_reaction_list)
  return brick_element_reaction_list_.Mutable(index);
}
inline ::proto::BreakoutElementReactionCounter* BreakoutSnapShot::add_brick_element_reaction_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.brick_element_reaction_list)
  return brick_element_reaction_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >*
BreakoutSnapShot::mutable_brick_element_reaction_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.brick_element_reaction_list)
  return &brick_element_reaction_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >&
BreakoutSnapShot::brick_element_reaction_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.brick_element_reaction_list)
  return brick_element_reaction_list_;
}

// repeated .proto.BreakoutElementReactionCounter ball_element_reaction_list = 16;
inline int BreakoutSnapShot::ball_element_reaction_list_size() const {
  return ball_element_reaction_list_.size();
}
inline void BreakoutSnapShot::clear_ball_element_reaction_list() {
  ball_element_reaction_list_.Clear();
}
inline const ::proto::BreakoutElementReactionCounter& BreakoutSnapShot::ball_element_reaction_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.ball_element_reaction_list)
  return ball_element_reaction_list_.Get(index);
}
inline ::proto::BreakoutElementReactionCounter* BreakoutSnapShot::mutable_ball_element_reaction_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.ball_element_reaction_list)
  return ball_element_reaction_list_.Mutable(index);
}
inline ::proto::BreakoutElementReactionCounter* BreakoutSnapShot::add_ball_element_reaction_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.ball_element_reaction_list)
  return ball_element_reaction_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >*
BreakoutSnapShot::mutable_ball_element_reaction_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.ball_element_reaction_list)
  return &ball_element_reaction_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutElementReactionCounter >&
BreakoutSnapShot::ball_element_reaction_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.ball_element_reaction_list)
  return ball_element_reaction_list_;
}

// repeated .proto.BreakoutSyncConnectUidInfo uid_info_list = 17;
inline int BreakoutSnapShot::uid_info_list_size() const {
  return uid_info_list_.size();
}
inline void BreakoutSnapShot::clear_uid_info_list() {
  uid_info_list_.Clear();
}
inline const ::proto::BreakoutSyncConnectUidInfo& BreakoutSnapShot::uid_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.uid_info_list)
  return uid_info_list_.Get(index);
}
inline ::proto::BreakoutSyncConnectUidInfo* BreakoutSnapShot::mutable_uid_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.uid_info_list)
  return uid_info_list_.Mutable(index);
}
inline ::proto::BreakoutSyncConnectUidInfo* BreakoutSnapShot::add_uid_info_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.uid_info_list)
  return uid_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSyncConnectUidInfo >*
BreakoutSnapShot::mutable_uid_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.uid_info_list)
  return &uid_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutSyncConnectUidInfo >&
BreakoutSnapShot::uid_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.uid_info_list)
  return uid_info_list_;
}

// repeated .proto.BreakoutPhysicalObject dynamic_object_list = 18;
inline int BreakoutSnapShot::dynamic_object_list_size() const {
  return dynamic_object_list_.size();
}
inline void BreakoutSnapShot::clear_dynamic_object_list() {
  dynamic_object_list_.Clear();
}
inline const ::proto::BreakoutPhysicalObject& BreakoutSnapShot::dynamic_object_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.dynamic_object_list)
  return dynamic_object_list_.Get(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSnapShot::mutable_dynamic_object_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BreakoutSnapShot.dynamic_object_list)
  return dynamic_object_list_.Mutable(index);
}
inline ::proto::BreakoutPhysicalObject* BreakoutSnapShot::add_dynamic_object_list() {
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.dynamic_object_list)
  return dynamic_object_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >*
BreakoutSnapShot::mutable_dynamic_object_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.dynamic_object_list)
  return &dynamic_object_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BreakoutPhysicalObject >&
BreakoutSnapShot::dynamic_object_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.dynamic_object_list)
  return dynamic_object_list_;
}

// repeated uint32 id_index_list = 19;
inline int BreakoutSnapShot::id_index_list_size() const {
  return id_index_list_.size();
}
inline void BreakoutSnapShot::clear_id_index_list() {
  id_index_list_.Clear();
}
inline ::google::protobuf::uint32 BreakoutSnapShot::id_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.id_index_list)
  return id_index_list_.Get(index);
}
inline void BreakoutSnapShot::set_id_index_list(int index, ::google::protobuf::uint32 value) {
  id_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.id_index_list)
}
inline void BreakoutSnapShot::add_id_index_list(::google::protobuf::uint32 value) {
  id_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BreakoutSnapShot.id_index_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BreakoutSnapShot::id_index_list() const {
  // @@protoc_insertion_point(field_list:proto.BreakoutSnapShot.id_index_list)
  return id_index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BreakoutSnapShot::mutable_id_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BreakoutSnapShot.id_index_list)
  return &id_index_list_;
}

// int32 raw_client_game_time = 20;
inline void BreakoutSnapShot::clear_raw_client_game_time() {
  raw_client_game_time_ = 0;
}
inline ::google::protobuf::int32 BreakoutSnapShot::raw_client_game_time() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutSnapShot.raw_client_game_time)
  return raw_client_game_time_;
}
inline void BreakoutSnapShot::set_raw_client_game_time(::google::protobuf::int32 value) {
  
  raw_client_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutSnapShot.raw_client_game_time)
}

// -------------------------------------------------------------------

// BreakoutAction

// .proto.BreakoutAction.BreakoutActionType action_type = 1;
inline void BreakoutAction::clear_action_type() {
  action_type_ = 0;
}
inline ::proto::BreakoutAction_BreakoutActionType BreakoutAction::action_type() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.action_type)
  return static_cast< ::proto::BreakoutAction_BreakoutActionType >(action_type_);
}
inline void BreakoutAction::set_action_type(::proto::BreakoutAction_BreakoutActionType value) {
  
  action_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.action_type)
}

// uint64 client_game_time = 2;
inline void BreakoutAction::clear_client_game_time() {
  client_game_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BreakoutAction::client_game_time() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.client_game_time)
  return client_game_time_;
}
inline void BreakoutAction::set_client_game_time(::google::protobuf::uint64 value) {
  
  client_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.client_game_time)
}

// uint64 server_game_time = 3;
inline void BreakoutAction::clear_server_game_time() {
  server_game_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BreakoutAction::server_game_time() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.server_game_time)
  return server_game_time_;
}
inline void BreakoutAction::set_server_game_time(::google::protobuf::uint64 value) {
  
  server_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.server_game_time)
}

// bool is_failed = 4;
inline void BreakoutAction::clear_is_failed() {
  is_failed_ = false;
}
inline bool BreakoutAction::is_failed() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.is_failed)
  return is_failed_;
}
inline void BreakoutAction::set_is_failed(bool value) {
  
  is_failed_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.is_failed)
}

// uint32 pre_index = 5;
inline void BreakoutAction::clear_pre_index() {
  pre_index_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutAction::pre_index() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.pre_index)
  return pre_index_;
}
inline void BreakoutAction::set_pre_index(::google::protobuf::uint32 value) {
  
  pre_index_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.pre_index)
}

// uint32 new_index = 6;
inline void BreakoutAction::clear_new_index() {
  new_index_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutAction::new_index() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.new_index)
  return new_index_;
}
inline void BreakoutAction::set_new_index(::google::protobuf::uint32 value) {
  
  new_index_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.new_index)
}

// .proto.BreakoutVector2 pos = 7;
inline bool BreakoutAction::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void BreakoutAction::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::BreakoutVector2& BreakoutAction::pos() const {
  const ::proto::BreakoutVector2* p = pos_;
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BreakoutVector2*>(
      &::proto::_BreakoutVector2_default_instance_);
}
inline ::proto::BreakoutVector2* BreakoutAction::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::BreakoutVector2;
  }
  // @@protoc_insertion_point(field_mutable:proto.BreakoutAction.pos)
  return pos_;
}
inline ::proto::BreakoutVector2* BreakoutAction::release_pos() {
  // @@protoc_insertion_point(field_release:proto.BreakoutAction.pos)
  
  ::proto::BreakoutVector2* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void BreakoutAction::set_allocated_pos(::proto::BreakoutVector2* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BreakoutAction.pos)
}

// .proto.BreakoutVector2 move_dir = 8;
inline bool BreakoutAction::has_move_dir() const {
  return this != internal_default_instance() && move_dir_ != NULL;
}
inline void BreakoutAction::clear_move_dir() {
  if (GetArenaNoVirtual() == NULL && move_dir_ != NULL) delete move_dir_;
  move_dir_ = NULL;
}
inline const ::proto::BreakoutVector2& BreakoutAction::move_dir() const {
  const ::proto::BreakoutVector2* p = move_dir_;
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.move_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BreakoutVector2*>(
      &::proto::_BreakoutVector2_default_instance_);
}
inline ::proto::BreakoutVector2* BreakoutAction::mutable_move_dir() {
  
  if (move_dir_ == NULL) {
    move_dir_ = new ::proto::BreakoutVector2;
  }
  // @@protoc_insertion_point(field_mutable:proto.BreakoutAction.move_dir)
  return move_dir_;
}
inline ::proto::BreakoutVector2* BreakoutAction::release_move_dir() {
  // @@protoc_insertion_point(field_release:proto.BreakoutAction.move_dir)
  
  ::proto::BreakoutVector2* temp = move_dir_;
  move_dir_ = NULL;
  return temp;
}
inline void BreakoutAction::set_allocated_move_dir(::proto::BreakoutVector2* move_dir) {
  delete move_dir_;
  move_dir_ = move_dir;
  if (move_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BreakoutAction.move_dir)
}

// int32 speed = 9;
inline void BreakoutAction::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 BreakoutAction::speed() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.speed)
  return speed_;
}
inline void BreakoutAction::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.speed)
}

// uint32 peer_id = 10;
inline void BreakoutAction::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutAction::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.peer_id)
  return peer_id_;
}
inline void BreakoutAction::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.peer_id)
}

// uint32 element_type = 11;
inline void BreakoutAction::clear_element_type() {
  element_type_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutAction::element_type() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.element_type)
  return element_type_;
}
inline void BreakoutAction::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.element_type)
}

// uint32 element_reaction_buff = 12;
inline void BreakoutAction::clear_element_reaction_buff() {
  element_reaction_buff_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutAction::element_reaction_buff() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.element_reaction_buff)
  return element_reaction_buff_;
}
inline void BreakoutAction::set_element_reaction_buff(::google::protobuf::uint32 value) {
  
  element_reaction_buff_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.element_reaction_buff)
}

// uint32 speed_increase_count = 13;
inline void BreakoutAction::clear_speed_increase_count() {
  speed_increase_count_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutAction::speed_increase_count() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.speed_increase_count)
  return speed_increase_count_;
}
inline void BreakoutAction::set_speed_increase_count(::google::protobuf::uint32 value) {
  
  speed_increase_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.speed_increase_count)
}

// bool has_extra_ball = 14;
inline void BreakoutAction::clear_has_extra_ball() {
  has_extra_ball_ = false;
}
inline bool BreakoutAction::has_extra_ball() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.has_extra_ball)
  return has_extra_ball_;
}
inline void BreakoutAction::set_has_extra_ball(bool value) {
  
  has_extra_ball_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.has_extra_ball)
}

// .proto.BreakoutVector2 extra_ball_dir = 15;
inline bool BreakoutAction::has_extra_ball_dir() const {
  return this != internal_default_instance() && extra_ball_dir_ != NULL;
}
inline void BreakoutAction::clear_extra_ball_dir() {
  if (GetArenaNoVirtual() == NULL && extra_ball_dir_ != NULL) delete extra_ball_dir_;
  extra_ball_dir_ = NULL;
}
inline const ::proto::BreakoutVector2& BreakoutAction::extra_ball_dir() const {
  const ::proto::BreakoutVector2* p = extra_ball_dir_;
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.extra_ball_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BreakoutVector2*>(
      &::proto::_BreakoutVector2_default_instance_);
}
inline ::proto::BreakoutVector2* BreakoutAction::mutable_extra_ball_dir() {
  
  if (extra_ball_dir_ == NULL) {
    extra_ball_dir_ = new ::proto::BreakoutVector2;
  }
  // @@protoc_insertion_point(field_mutable:proto.BreakoutAction.extra_ball_dir)
  return extra_ball_dir_;
}
inline ::proto::BreakoutVector2* BreakoutAction::release_extra_ball_dir() {
  // @@protoc_insertion_point(field_release:proto.BreakoutAction.extra_ball_dir)
  
  ::proto::BreakoutVector2* temp = extra_ball_dir_;
  extra_ball_dir_ = NULL;
  return temp;
}
inline void BreakoutAction::set_allocated_extra_ball_dir(::proto::BreakoutVector2* extra_ball_dir) {
  delete extra_ball_dir_;
  extra_ball_dir_ = extra_ball_dir;
  if (extra_ball_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BreakoutAction.extra_ball_dir)
}

// uint32 extra_ball_index = 16;
inline void BreakoutAction::clear_extra_ball_index() {
  extra_ball_index_ = 0u;
}
inline ::google::protobuf::uint32 BreakoutAction::extra_ball_index() const {
  // @@protoc_insertion_point(field_get:proto.BreakoutAction.extra_ball_index)
  return extra_ball_index_;
}
inline void BreakoutAction::set_extra_ball_index(::google::protobuf::uint32 value) {
  
  extra_ball_index_ = value;
  // @@protoc_insertion_point(field_set:proto.BreakoutAction.extra_ball_index)
}

// -------------------------------------------------------------------

// AbilityMixinRecoverInfo

// uint32 local_id = 3;
inline void AbilityMixinRecoverInfo::clear_local_id() {
  local_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityMixinRecoverInfo::local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinRecoverInfo.local_id)
  return local_id_;
}
inline void AbilityMixinRecoverInfo::set_local_id(::google::protobuf::uint32 value) {
  
  local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinRecoverInfo.local_id)
}

// repeated uint32 data_list = 4;
inline int AbilityMixinRecoverInfo::data_list_size() const {
  return data_list_.size();
}
inline void AbilityMixinRecoverInfo::clear_data_list() {
  data_list_.Clear();
}
inline ::google::protobuf::uint32 AbilityMixinRecoverInfo::data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinRecoverInfo.data_list)
  return data_list_.Get(index);
}
inline void AbilityMixinRecoverInfo::set_data_list(int index, ::google::protobuf::uint32 value) {
  data_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AbilityMixinRecoverInfo.data_list)
}
inline void AbilityMixinRecoverInfo::add_data_list(::google::protobuf::uint32 value) {
  data_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AbilityMixinRecoverInfo.data_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AbilityMixinRecoverInfo::data_list() const {
  // @@protoc_insertion_point(field_list:proto.AbilityMixinRecoverInfo.data_list)
  return data_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AbilityMixinRecoverInfo::mutable_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityMixinRecoverInfo.data_list)
  return &data_list_;
}

// bool is_serverbuff_modifier = 5;
inline void AbilityMixinRecoverInfo::clear_is_serverbuff_modifier() {
  is_serverbuff_modifier_ = false;
}
inline bool AbilityMixinRecoverInfo::is_serverbuff_modifier() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinRecoverInfo.is_serverbuff_modifier)
  return is_serverbuff_modifier_;
}
inline void AbilityMixinRecoverInfo::set_is_serverbuff_modifier(bool value) {
  
  is_serverbuff_modifier_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinRecoverInfo.is_serverbuff_modifier)
}

// repeated .proto.MassivePropSyncInfo massive_prop_list = 6;
inline int AbilityMixinRecoverInfo::massive_prop_list_size() const {
  return massive_prop_list_.size();
}
inline void AbilityMixinRecoverInfo::clear_massive_prop_list() {
  massive_prop_list_.Clear();
}
inline const ::proto::MassivePropSyncInfo& AbilityMixinRecoverInfo::massive_prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinRecoverInfo.massive_prop_list)
  return massive_prop_list_.Get(index);
}
inline ::proto::MassivePropSyncInfo* AbilityMixinRecoverInfo::mutable_massive_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinRecoverInfo.massive_prop_list)
  return massive_prop_list_.Mutable(index);
}
inline ::proto::MassivePropSyncInfo* AbilityMixinRecoverInfo::add_massive_prop_list() {
  // @@protoc_insertion_point(field_add:proto.AbilityMixinRecoverInfo.massive_prop_list)
  return massive_prop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MassivePropSyncInfo >*
AbilityMixinRecoverInfo::mutable_massive_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityMixinRecoverInfo.massive_prop_list)
  return &massive_prop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MassivePropSyncInfo >&
AbilityMixinRecoverInfo::massive_prop_list() const {
  // @@protoc_insertion_point(field_list:proto.AbilityMixinRecoverInfo.massive_prop_list)
  return massive_prop_list_;
}

// .proto.BreakoutSnapShot breakout_snap_shot = 7;
inline bool AbilityMixinRecoverInfo::has_breakout_snap_shot() const {
  return this != internal_default_instance() && breakout_snap_shot_ != NULL;
}
inline void AbilityMixinRecoverInfo::clear_breakout_snap_shot() {
  if (GetArenaNoVirtual() == NULL && breakout_snap_shot_ != NULL) delete breakout_snap_shot_;
  breakout_snap_shot_ = NULL;
}
inline const ::proto::BreakoutSnapShot& AbilityMixinRecoverInfo::breakout_snap_shot() const {
  const ::proto::BreakoutSnapShot* p = breakout_snap_shot_;
  // @@protoc_insertion_point(field_get:proto.AbilityMixinRecoverInfo.breakout_snap_shot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BreakoutSnapShot*>(
      &::proto::_BreakoutSnapShot_default_instance_);
}
inline ::proto::BreakoutSnapShot* AbilityMixinRecoverInfo::mutable_breakout_snap_shot() {
  
  if (breakout_snap_shot_ == NULL) {
    breakout_snap_shot_ = new ::proto::BreakoutSnapShot;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityMixinRecoverInfo.breakout_snap_shot)
  return breakout_snap_shot_;
}
inline ::proto::BreakoutSnapShot* AbilityMixinRecoverInfo::release_breakout_snap_shot() {
  // @@protoc_insertion_point(field_release:proto.AbilityMixinRecoverInfo.breakout_snap_shot)
  
  ::proto::BreakoutSnapShot* temp = breakout_snap_shot_;
  breakout_snap_shot_ = NULL;
  return temp;
}
inline void AbilityMixinRecoverInfo::set_allocated_breakout_snap_shot(::proto::BreakoutSnapShot* breakout_snap_shot) {
  delete breakout_snap_shot_;
  breakout_snap_shot_ = breakout_snap_shot;
  if (breakout_snap_shot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityMixinRecoverInfo.breakout_snap_shot)
}

// uint32 instanced_ability_id = 1;
inline bool AbilityMixinRecoverInfo::has_instanced_ability_id() const {
  return Source_case() == kInstancedAbilityId;
}
inline void AbilityMixinRecoverInfo::set_has_instanced_ability_id() {
  _oneof_case_[0] = kInstancedAbilityId;
}
inline void AbilityMixinRecoverInfo::clear_instanced_ability_id() {
  if (has_instanced_ability_id()) {
    Source_.instanced_ability_id_ = 0u;
    clear_has_Source();
  }
}
inline ::google::protobuf::uint32 AbilityMixinRecoverInfo::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinRecoverInfo.instanced_ability_id)
  if (has_instanced_ability_id()) {
    return Source_.instanced_ability_id_;
  }
  return 0u;
}
inline void AbilityMixinRecoverInfo::set_instanced_ability_id(::google::protobuf::uint32 value) {
  if (!has_instanced_ability_id()) {
    clear_Source();
    set_has_instanced_ability_id();
  }
  Source_.instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinRecoverInfo.instanced_ability_id)
}

// uint32 instanced_modifier_id = 2;
inline bool AbilityMixinRecoverInfo::has_instanced_modifier_id() const {
  return Source_case() == kInstancedModifierId;
}
inline void AbilityMixinRecoverInfo::set_has_instanced_modifier_id() {
  _oneof_case_[0] = kInstancedModifierId;
}
inline void AbilityMixinRecoverInfo::clear_instanced_modifier_id() {
  if (has_instanced_modifier_id()) {
    Source_.instanced_modifier_id_ = 0u;
    clear_has_Source();
  }
}
inline ::google::protobuf::uint32 AbilityMixinRecoverInfo::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityMixinRecoverInfo.instanced_modifier_id)
  if (has_instanced_modifier_id()) {
    return Source_.instanced_modifier_id_;
  }
  return 0u;
}
inline void AbilityMixinRecoverInfo::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  if (!has_instanced_modifier_id()) {
    clear_Source();
    set_has_instanced_modifier_id();
  }
  Source_.instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityMixinRecoverInfo.instanced_modifier_id)
}

inline bool AbilityMixinRecoverInfo::has_Source() const {
  return Source_case() != SOURCE_NOT_SET;
}
inline void AbilityMixinRecoverInfo::clear_has_Source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
inline AbilityMixinRecoverInfo::SourceCase AbilityMixinRecoverInfo::Source_case() const {
  return AbilityMixinRecoverInfo::SourceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AbilitySyncStateInfo

// bool is_inited = 1;
inline void AbilitySyncStateInfo::clear_is_inited() {
  is_inited_ = false;
}
inline bool AbilitySyncStateInfo::is_inited() const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.is_inited)
  return is_inited_;
}
inline void AbilitySyncStateInfo::set_is_inited(bool value) {
  
  is_inited_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilitySyncStateInfo.is_inited)
}

// repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
inline int AbilitySyncStateInfo::dynamic_value_map_size() const {
  return dynamic_value_map_.size();
}
inline void AbilitySyncStateInfo::clear_dynamic_value_map() {
  dynamic_value_map_.Clear();
}
inline const ::proto::AbilityScalarValueEntry& AbilitySyncStateInfo::dynamic_value_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Get(index);
}
inline ::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::mutable_dynamic_value_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Mutable(index);
}
inline ::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::add_dynamic_value_map() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilitySyncStateInfo::mutable_dynamic_value_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.dynamic_value_map)
  return &dynamic_value_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilitySyncStateInfo::dynamic_value_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_;
}

// repeated .proto.AbilityAppliedAbility applied_abilities = 3;
inline int AbilitySyncStateInfo::applied_abilities_size() const {
  return applied_abilities_.size();
}
inline void AbilitySyncStateInfo::clear_applied_abilities() {
  applied_abilities_.Clear();
}
inline const ::proto::AbilityAppliedAbility& AbilitySyncStateInfo::applied_abilities(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Get(index);
}
inline ::proto::AbilityAppliedAbility* AbilitySyncStateInfo::mutable_applied_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Mutable(index);
}
inline ::proto::AbilityAppliedAbility* AbilitySyncStateInfo::add_applied_abilities() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >*
AbilitySyncStateInfo::mutable_applied_abilities() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.applied_abilities)
  return &applied_abilities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >&
AbilitySyncStateInfo::applied_abilities() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_;
}

// repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
inline int AbilitySyncStateInfo::applied_modifiers_size() const {
  return applied_modifiers_.size();
}
inline void AbilitySyncStateInfo::clear_applied_modifiers() {
  applied_modifiers_.Clear();
}
inline const ::proto::AbilityAppliedModifier& AbilitySyncStateInfo::applied_modifiers(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Get(index);
}
inline ::proto::AbilityAppliedModifier* AbilitySyncStateInfo::mutable_applied_modifiers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Mutable(index);
}
inline ::proto::AbilityAppliedModifier* AbilitySyncStateInfo::add_applied_modifiers() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >*
AbilitySyncStateInfo::mutable_applied_modifiers() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.applied_modifiers)
  return &applied_modifiers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >&
AbilitySyncStateInfo::applied_modifiers() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_;
}

// repeated .proto.AbilityMixinRecoverInfo mixin_recover_infos = 5;
inline int AbilitySyncStateInfo::mixin_recover_infos_size() const {
  return mixin_recover_infos_.size();
}
inline void AbilitySyncStateInfo::clear_mixin_recover_infos() {
  mixin_recover_infos_.Clear();
}
inline const ::proto::AbilityMixinRecoverInfo& AbilitySyncStateInfo::mixin_recover_infos(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.mixin_recover_infos)
  return mixin_recover_infos_.Get(index);
}
inline ::proto::AbilityMixinRecoverInfo* AbilitySyncStateInfo::mutable_mixin_recover_infos(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.mixin_recover_infos)
  return mixin_recover_infos_.Mutable(index);
}
inline ::proto::AbilityMixinRecoverInfo* AbilitySyncStateInfo::add_mixin_recover_infos() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.mixin_recover_infos)
  return mixin_recover_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityMixinRecoverInfo >*
AbilitySyncStateInfo::mutable_mixin_recover_infos() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.mixin_recover_infos)
  return &mixin_recover_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityMixinRecoverInfo >&
AbilitySyncStateInfo::mixin_recover_infos() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.mixin_recover_infos)
  return mixin_recover_infos_;
}

// repeated .proto.AbilityScalarValueEntry sgv_dynamic_value_map = 6;
inline int AbilitySyncStateInfo::sgv_dynamic_value_map_size() const {
  return sgv_dynamic_value_map_.size();
}
inline void AbilitySyncStateInfo::clear_sgv_dynamic_value_map() {
  sgv_dynamic_value_map_.Clear();
}
inline const ::proto::AbilityScalarValueEntry& AbilitySyncStateInfo::sgv_dynamic_value_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.sgv_dynamic_value_map)
  return sgv_dynamic_value_map_.Get(index);
}
inline ::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::mutable_sgv_dynamic_value_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.sgv_dynamic_value_map)
  return sgv_dynamic_value_map_.Mutable(index);
}
inline ::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::add_sgv_dynamic_value_map() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.sgv_dynamic_value_map)
  return sgv_dynamic_value_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilitySyncStateInfo::mutable_sgv_dynamic_value_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.sgv_dynamic_value_map)
  return &sgv_dynamic_value_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilitySyncStateInfo::sgv_dynamic_value_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.sgv_dynamic_value_map)
  return sgv_dynamic_value_map_;
}

// -------------------------------------------------------------------

// AbilityEmbryo

// uint32 ability_id = 1;
inline void AbilityEmbryo::clear_ability_id() {
  ability_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityEmbryo::ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityEmbryo.ability_id)
  return ability_id_;
}
inline void AbilityEmbryo::set_ability_id(::google::protobuf::uint32 value) {
  
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityEmbryo.ability_id)
}

// fixed32 ability_name_hash = 2;
inline void AbilityEmbryo::clear_ability_name_hash() {
  ability_name_hash_ = 0u;
}
inline ::google::protobuf::uint32 AbilityEmbryo::ability_name_hash() const {
  // @@protoc_insertion_point(field_get:proto.AbilityEmbryo.ability_name_hash)
  return ability_name_hash_;
}
inline void AbilityEmbryo::set_ability_name_hash(::google::protobuf::uint32 value) {
  
  ability_name_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityEmbryo.ability_name_hash)
}

// fixed32 ability_override_name_hash = 3;
inline void AbilityEmbryo::clear_ability_override_name_hash() {
  ability_override_name_hash_ = 0u;
}
inline ::google::protobuf::uint32 AbilityEmbryo::ability_override_name_hash() const {
  // @@protoc_insertion_point(field_get:proto.AbilityEmbryo.ability_override_name_hash)
  return ability_override_name_hash_;
}
inline void AbilityEmbryo::set_ability_override_name_hash(::google::protobuf::uint32 value) {
  
  ability_override_name_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityEmbryo.ability_override_name_hash)
}

// -------------------------------------------------------------------

// AbilityControlBlock

// repeated .proto.AbilityEmbryo ability_embryo_list = 1;
inline int AbilityControlBlock::ability_embryo_list_size() const {
  return ability_embryo_list_.size();
}
inline void AbilityControlBlock::clear_ability_embryo_list() {
  ability_embryo_list_.Clear();
}
inline const ::proto::AbilityEmbryo& AbilityControlBlock::ability_embryo_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityControlBlock.ability_embryo_list)
  return ability_embryo_list_.Get(index);
}
inline ::proto::AbilityEmbryo* AbilityControlBlock::mutable_ability_embryo_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityControlBlock.ability_embryo_list)
  return ability_embryo_list_.Mutable(index);
}
inline ::proto::AbilityEmbryo* AbilityControlBlock::add_ability_embryo_list() {
  // @@protoc_insertion_point(field_add:proto.AbilityControlBlock.ability_embryo_list)
  return ability_embryo_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityEmbryo >*
AbilityControlBlock::mutable_ability_embryo_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityControlBlock.ability_embryo_list)
  return &ability_embryo_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityEmbryo >&
AbilityControlBlock::ability_embryo_list() const {
  // @@protoc_insertion_point(field_list:proto.AbilityControlBlock.ability_embryo_list)
  return ability_embryo_list_;
}

// -------------------------------------------------------------------

// Vector

// float x = 1;
inline void Vector::clear_x() {
  x_ = 0;
}
inline float Vector::x() const {
  // @@protoc_insertion_point(field_get:proto.Vector.x)
  return x_;
}
inline void Vector::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.x)
}

// float y = 2;
inline void Vector::clear_y() {
  y_ = 0;
}
inline float Vector::y() const {
  // @@protoc_insertion_point(field_get:proto.Vector.y)
  return y_;
}
inline void Vector::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.y)
}

// float z = 3;
inline void Vector::clear_z() {
  z_ = 0;
}
inline float Vector::z() const {
  // @@protoc_insertion_point(field_get:proto.Vector.z)
  return z_;
}
inline void Vector::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.z)
}

// -------------------------------------------------------------------

// VectorPlane

// float x = 1;
inline void VectorPlane::clear_x() {
  x_ = 0;
}
inline float VectorPlane::x() const {
  // @@protoc_insertion_point(field_get:proto.VectorPlane.x)
  return x_;
}
inline void VectorPlane::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorPlane.x)
}

// float y = 2;
inline void VectorPlane::clear_y() {
  y_ = 0;
}
inline float VectorPlane::y() const {
  // @@protoc_insertion_point(field_get:proto.VectorPlane.y)
  return y_;
}
inline void VectorPlane::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorPlane.y)
}

// -------------------------------------------------------------------

// Vector3Int

// int32 x = 1;
inline void Vector3Int::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Vector3Int::x() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.x)
  return x_;
}
inline void Vector3Int::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.x)
}

// int32 y = 2;
inline void Vector3Int::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Vector3Int::y() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.y)
  return y_;
}
inline void Vector3Int::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.y)
}

// int32 z = 3;
inline void Vector3Int::clear_z() {
  z_ = 0;
}
inline ::google::protobuf::int32 Vector3Int::z() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.z)
  return z_;
}
inline void Vector3Int::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.z)
}

// -------------------------------------------------------------------

// EntityMoveInfo

// uint32 entity_id = 1;
inline void EntityMoveInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.entity_id)
  return entity_id_;
}
inline void EntityMoveInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.entity_id)
}

// .proto.MotionInfo motion_info = 2;
inline bool EntityMoveInfo::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void EntityMoveInfo::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& EntityMoveInfo::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityMoveInfo::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityMoveInfo.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* EntityMoveInfo::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.EntityMoveInfo.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void EntityMoveInfo::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityMoveInfo.motion_info)
}

// uint32 scene_time = 3;
inline void EntityMoveInfo::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveInfo::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.scene_time)
  return scene_time_;
}
inline void EntityMoveInfo::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.scene_time)
}

// uint32 reliable_seq = 4;
inline void EntityMoveInfo::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveInfo::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.reliable_seq)
  return reliable_seq_;
}
inline void EntityMoveInfo::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.reliable_seq)
}

// bool is_reliable = 5;
inline void EntityMoveInfo::clear_is_reliable() {
  is_reliable_ = false;
}
inline bool EntityMoveInfo::is_reliable() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.is_reliable)
  return is_reliable_;
}
inline void EntityMoveInfo::set_is_reliable(bool value) {
  
  is_reliable_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.is_reliable)
}

// -------------------------------------------------------------------

// MotionInfo

// .proto.Vector pos = 1;
inline bool MotionInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void MotionInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& MotionInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MotionInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.pos)
  return pos_;
}
inline ::proto::Vector* MotionInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MotionInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.pos)
}

// .proto.Vector rot = 2;
inline bool MotionInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void MotionInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& MotionInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MotionInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.rot)
  return rot_;
}
inline ::proto::Vector* MotionInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void MotionInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.rot)
}

// .proto.Vector speed = 3;
inline bool MotionInfo::has_speed() const {
  return this != internal_default_instance() && speed_ != NULL;
}
inline void MotionInfo::clear_speed() {
  if (GetArenaNoVirtual() == NULL && speed_ != NULL) delete speed_;
  speed_ = NULL;
}
inline const ::proto::Vector& MotionInfo::speed() const {
  const ::proto::Vector* p = speed_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.speed)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MotionInfo::mutable_speed() {
  
  if (speed_ == NULL) {
    speed_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.speed)
  return speed_;
}
inline ::proto::Vector* MotionInfo::release_speed() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.speed)
  
  ::proto::Vector* temp = speed_;
  speed_ = NULL;
  return temp;
}
inline void MotionInfo::set_allocated_speed(::proto::Vector* speed) {
  delete speed_;
  speed_ = speed;
  if (speed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.speed)
}

// .proto.MotionState state = 4;
inline void MotionInfo::clear_state() {
  state_ = 0;
}
inline ::proto::MotionState MotionInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.state)
  return static_cast< ::proto::MotionState >(state_);
}
inline void MotionInfo::set_state(::proto::MotionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.MotionInfo.state)
}

// repeated .proto.Vector params = 5;
inline int MotionInfo::params_size() const {
  return params_.size();
}
inline void MotionInfo::clear_params() {
  params_.Clear();
}
inline const ::proto::Vector& MotionInfo::params(int index) const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.params)
  return params_.Get(index);
}
inline ::proto::Vector* MotionInfo::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.params)
  return params_.Mutable(index);
}
inline ::proto::Vector* MotionInfo::add_params() {
  // @@protoc_insertion_point(field_add:proto.MotionInfo.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
MotionInfo::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.MotionInfo.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
MotionInfo::params() const {
  // @@protoc_insertion_point(field_list:proto.MotionInfo.params)
  return params_;
}

// .proto.Vector ref_pos = 6;
inline bool MotionInfo::has_ref_pos() const {
  return this != internal_default_instance() && ref_pos_ != NULL;
}
inline void MotionInfo::clear_ref_pos() {
  if (GetArenaNoVirtual() == NULL && ref_pos_ != NULL) delete ref_pos_;
  ref_pos_ = NULL;
}
inline const ::proto::Vector& MotionInfo::ref_pos() const {
  const ::proto::Vector* p = ref_pos_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.ref_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MotionInfo::mutable_ref_pos() {
  
  if (ref_pos_ == NULL) {
    ref_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.ref_pos)
  return ref_pos_;
}
inline ::proto::Vector* MotionInfo::release_ref_pos() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.ref_pos)
  
  ::proto::Vector* temp = ref_pos_;
  ref_pos_ = NULL;
  return temp;
}
inline void MotionInfo::set_allocated_ref_pos(::proto::Vector* ref_pos) {
  delete ref_pos_;
  ref_pos_ = ref_pos;
  if (ref_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.ref_pos)
}

// uint32 ref_id = 7;
inline void MotionInfo::clear_ref_id() {
  ref_id_ = 0u;
}
inline ::google::protobuf::uint32 MotionInfo::ref_id() const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.ref_id)
  return ref_id_;
}
inline void MotionInfo::set_ref_id(::google::protobuf::uint32 value) {
  
  ref_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MotionInfo.ref_id)
}

// uint32 scene_time = 8;
inline void MotionInfo::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 MotionInfo::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.scene_time)
  return scene_time_;
}
inline void MotionInfo::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MotionInfo.scene_time)
}

// uint64 interval_velocity = 9;
inline void MotionInfo::clear_interval_velocity() {
  interval_velocity_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MotionInfo::interval_velocity() const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.interval_velocity)
  return interval_velocity_;
}
inline void MotionInfo::set_interval_velocity(::google::protobuf::uint64 value) {
  
  interval_velocity_ = value;
  // @@protoc_insertion_point(field_set:proto.MotionInfo.interval_velocity)
}

// -------------------------------------------------------------------

// PlaceInfo

// .proto.Vector pos = 1;
inline bool PlaceInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlaceInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& PlaceInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlaceInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlaceInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlaceInfo.pos)
  return pos_;
}
inline ::proto::Vector* PlaceInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlaceInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlaceInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlaceInfo.pos)
}

// .proto.Vector rot = 2;
inline bool PlaceInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void PlaceInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& PlaceInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlaceInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlaceInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlaceInfo.rot)
  return rot_;
}
inline ::proto::Vector* PlaceInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlaceInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void PlaceInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlaceInfo.rot)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneWeaponInfo

// uint32 entity_id = 1;
inline void SceneWeaponInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.entity_id)
  return entity_id_;
}
inline void SceneWeaponInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.entity_id)
}

// uint32 gadget_id = 2;
inline void SceneWeaponInfo::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.gadget_id)
  return gadget_id_;
}
inline void SceneWeaponInfo::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.gadget_id)
}

// uint32 item_id = 3;
inline void SceneWeaponInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.item_id)
  return item_id_;
}
inline void SceneWeaponInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.item_id)
}

// uint64 guid = 4;
inline void SceneWeaponInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneWeaponInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.guid)
  return guid_;
}
inline void SceneWeaponInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.guid)
}

// uint32 level = 5;
inline void SceneWeaponInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.level)
  return level_;
}
inline void SceneWeaponInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.level)
}

// uint32 promote_level = 6;
inline void SceneWeaponInfo::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.promote_level)
  return promote_level_;
}
inline void SceneWeaponInfo::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.promote_level)
}

// .proto.AbilitySyncStateInfo ability_info = 7;
inline bool SceneWeaponInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void SceneWeaponInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& SceneWeaponInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* SceneWeaponInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneWeaponInfo.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* SceneWeaponInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.SceneWeaponInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void SceneWeaponInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneWeaponInfo.ability_info)
}

// map<uint32, uint32> affix_map = 8;
inline int SceneWeaponInfo::affix_map_size() const {
  return affix_map_.size();
}
inline void SceneWeaponInfo::clear_affix_map() {
  affix_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneWeaponInfo::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneWeaponInfo.affix_map)
  return affix_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneWeaponInfo::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneWeaponInfo.affix_map)
  return affix_map_.MutableMap();
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 9;
inline bool SceneWeaponInfo::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
inline void SceneWeaponInfo::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
inline const ::proto::EntityRendererChangedInfo& SceneWeaponInfo::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
inline ::proto::EntityRendererChangedInfo* SceneWeaponInfo::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneWeaponInfo.renderer_changed_info)
  return renderer_changed_info_;
}
inline ::proto::EntityRendererChangedInfo* SceneWeaponInfo::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.SceneWeaponInfo.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
inline void SceneWeaponInfo::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneWeaponInfo.renderer_changed_info)
}

// -------------------------------------------------------------------

// SceneReliquaryInfo

// uint32 item_id = 1;
inline void SceneReliquaryInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneReliquaryInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.item_id)
  return item_id_;
}
inline void SceneReliquaryInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.item_id)
}

// uint64 guid = 2;
inline void SceneReliquaryInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneReliquaryInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.guid)
  return guid_;
}
inline void SceneReliquaryInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.guid)
}

// uint32 level = 3;
inline void SceneReliquaryInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SceneReliquaryInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.level)
  return level_;
}
inline void SceneReliquaryInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.level)
}

// uint32 promote_level = 4;
inline void SceneReliquaryInfo::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 SceneReliquaryInfo::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.promote_level)
  return promote_level_;
}
inline void SceneReliquaryInfo::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.promote_level)
}

// -------------------------------------------------------------------

// ServerBuff

// uint32 server_buff_uid = 1;
inline void ServerBuff::clear_server_buff_uid() {
  server_buff_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::server_buff_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_uid)
  return server_buff_uid_;
}
inline void ServerBuff::set_server_buff_uid(::google::protobuf::uint32 value) {
  
  server_buff_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_uid)
}

// uint32 server_buff_id = 2;
inline void ServerBuff::clear_server_buff_id() {
  server_buff_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::server_buff_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_id)
  return server_buff_id_;
}
inline void ServerBuff::set_server_buff_id(::google::protobuf::uint32 value) {
  
  server_buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_id)
}

// uint32 server_buff_type = 3;
inline void ServerBuff::clear_server_buff_type() {
  server_buff_type_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::server_buff_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_type)
  return server_buff_type_;
}
inline void ServerBuff::set_server_buff_type(::google::protobuf::uint32 value) {
  
  server_buff_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_type)
}

// uint32 instanced_modifier_id = 4;
inline void ServerBuff::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void ServerBuff::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.instanced_modifier_id)
}

// bool is_modifier_added = 5;
inline void ServerBuff::clear_is_modifier_added() {
  is_modifier_added_ = false;
}
inline bool ServerBuff::is_modifier_added() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.is_modifier_added)
  return is_modifier_added_;
}
inline void ServerBuff::set_is_modifier_added(bool value) {
  
  is_modifier_added_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.is_modifier_added)
}

// -------------------------------------------------------------------

// CurVehicleInfo

// uint32 entity_id = 1;
inline void CurVehicleInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 CurVehicleInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.CurVehicleInfo.entity_id)
  return entity_id_;
}
inline void CurVehicleInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CurVehicleInfo.entity_id)
}

// uint32 pos = 2;
inline void CurVehicleInfo::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 CurVehicleInfo::pos() const {
  // @@protoc_insertion_point(field_get:proto.CurVehicleInfo.pos)
  return pos_;
}
inline void CurVehicleInfo::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto.CurVehicleInfo.pos)
}

// -------------------------------------------------------------------

// AvatarExcelInfo

// uint64 prefab_path_hash = 1;
inline void AvatarExcelInfo::clear_prefab_path_hash() {
  prefab_path_hash_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarExcelInfo::prefab_path_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExcelInfo.prefab_path_hash)
  return prefab_path_hash_;
}
inline void AvatarExcelInfo::set_prefab_path_hash(::google::protobuf::uint64 value) {
  
  prefab_path_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExcelInfo.prefab_path_hash)
}

// uint64 prefab_path_remote_hash = 2;
inline void AvatarExcelInfo::clear_prefab_path_remote_hash() {
  prefab_path_remote_hash_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarExcelInfo::prefab_path_remote_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExcelInfo.prefab_path_remote_hash)
  return prefab_path_remote_hash_;
}
inline void AvatarExcelInfo::set_prefab_path_remote_hash(::google::protobuf::uint64 value) {
  
  prefab_path_remote_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExcelInfo.prefab_path_remote_hash)
}

// uint64 controller_path_hash = 3;
inline void AvatarExcelInfo::clear_controller_path_hash() {
  controller_path_hash_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarExcelInfo::controller_path_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExcelInfo.controller_path_hash)
  return controller_path_hash_;
}
inline void AvatarExcelInfo::set_controller_path_hash(::google::protobuf::uint64 value) {
  
  controller_path_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExcelInfo.controller_path_hash)
}

// uint64 controller_path_remote_hash = 4;
inline void AvatarExcelInfo::clear_controller_path_remote_hash() {
  controller_path_remote_hash_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarExcelInfo::controller_path_remote_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExcelInfo.controller_path_remote_hash)
  return controller_path_remote_hash_;
}
inline void AvatarExcelInfo::set_controller_path_remote_hash(::google::protobuf::uint64 value) {
  
  controller_path_remote_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExcelInfo.controller_path_remote_hash)
}

// uint64 combat_config_hash = 5;
inline void AvatarExcelInfo::clear_combat_config_hash() {
  combat_config_hash_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarExcelInfo::combat_config_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExcelInfo.combat_config_hash)
  return combat_config_hash_;
}
inline void AvatarExcelInfo::set_combat_config_hash(::google::protobuf::uint64 value) {
  
  combat_config_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExcelInfo.combat_config_hash)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneAvatarInfo

// uint32 uid = 1;
inline void SceneAvatarInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.uid)
  return uid_;
}
inline void SceneAvatarInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.uid)
}

// uint32 avatar_id = 2;
inline void SceneAvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.avatar_id)
  return avatar_id_;
}
inline void SceneAvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.avatar_id)
}

// uint64 guid = 3;
inline void SceneAvatarInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneAvatarInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.guid)
  return guid_;
}
inline void SceneAvatarInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.guid)
}

// uint32 peer_id = 4;
inline void SceneAvatarInfo::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.peer_id)
  return peer_id_;
}
inline void SceneAvatarInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.peer_id)
}

// repeated uint32 equip_id_list = 5;
inline int SceneAvatarInfo::equip_id_list_size() const {
  return equip_id_list_.size();
}
inline void SceneAvatarInfo::clear_equip_id_list() {
  equip_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::equip_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.equip_id_list)
  return equip_id_list_.Get(index);
}
inline void SceneAvatarInfo::set_equip_id_list(int index, ::google::protobuf::uint32 value) {
  equip_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.equip_id_list)
}
inline void SceneAvatarInfo::add_equip_id_list(::google::protobuf::uint32 value) {
  equip_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.equip_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::equip_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.equip_id_list)
  return equip_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_equip_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.equip_id_list)
  return &equip_id_list_;
}

// uint32 skill_depot_id = 6;
inline void SceneAvatarInfo::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.skill_depot_id)
  return skill_depot_id_;
}
inline void SceneAvatarInfo::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.skill_depot_id)
}

// repeated uint32 talent_id_list = 7;
inline int SceneAvatarInfo::talent_id_list_size() const {
  return talent_id_list_.size();
}
inline void SceneAvatarInfo::clear_talent_id_list() {
  talent_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::talent_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.talent_id_list)
  return talent_id_list_.Get(index);
}
inline void SceneAvatarInfo::set_talent_id_list(int index, ::google::protobuf::uint32 value) {
  talent_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.talent_id_list)
}
inline void SceneAvatarInfo::add_talent_id_list(::google::protobuf::uint32 value) {
  talent_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.talent_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::talent_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.talent_id_list)
  return talent_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_talent_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.talent_id_list)
  return &talent_id_list_;
}

// .proto.SceneWeaponInfo weapon = 8;
inline bool SceneAvatarInfo::has_weapon() const {
  return this != internal_default_instance() && weapon_ != NULL;
}
inline void SceneAvatarInfo::clear_weapon() {
  if (GetArenaNoVirtual() == NULL && weapon_ != NULL) delete weapon_;
  weapon_ = NULL;
}
inline const ::proto::SceneWeaponInfo& SceneAvatarInfo::weapon() const {
  const ::proto::SceneWeaponInfo* p = weapon_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.weapon)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneWeaponInfo*>(
      &::proto::_SceneWeaponInfo_default_instance_);
}
inline ::proto::SceneWeaponInfo* SceneAvatarInfo::mutable_weapon() {
  
  if (weapon_ == NULL) {
    weapon_ = new ::proto::SceneWeaponInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.weapon)
  return weapon_;
}
inline ::proto::SceneWeaponInfo* SceneAvatarInfo::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarInfo.weapon)
  
  ::proto::SceneWeaponInfo* temp = weapon_;
  weapon_ = NULL;
  return temp;
}
inline void SceneAvatarInfo::set_allocated_weapon(::proto::SceneWeaponInfo* weapon) {
  delete weapon_;
  weapon_ = weapon;
  if (weapon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarInfo.weapon)
}

// repeated .proto.SceneReliquaryInfo reliquary_list = 9;
inline int SceneAvatarInfo::reliquary_list_size() const {
  return reliquary_list_.size();
}
inline void SceneAvatarInfo::clear_reliquary_list() {
  reliquary_list_.Clear();
}
inline const ::proto::SceneReliquaryInfo& SceneAvatarInfo::reliquary_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Get(index);
}
inline ::proto::SceneReliquaryInfo* SceneAvatarInfo::mutable_reliquary_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Mutable(index);
}
inline ::proto::SceneReliquaryInfo* SceneAvatarInfo::add_reliquary_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >*
SceneAvatarInfo::mutable_reliquary_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.reliquary_list)
  return &reliquary_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >&
SceneAvatarInfo::reliquary_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_;
}

// uint32 core_proud_skill_level = 11;
inline void SceneAvatarInfo::clear_core_proud_skill_level() {
  core_proud_skill_level_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::core_proud_skill_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.core_proud_skill_level)
  return core_proud_skill_level_;
}
inline void SceneAvatarInfo::set_core_proud_skill_level(::google::protobuf::uint32 value) {
  
  core_proud_skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.core_proud_skill_level)
}

// repeated uint32 inherent_proud_skill_list = 12;
inline int SceneAvatarInfo::inherent_proud_skill_list_size() const {
  return inherent_proud_skill_list_.size();
}
inline void SceneAvatarInfo::clear_inherent_proud_skill_list() {
  inherent_proud_skill_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::inherent_proud_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_.Get(index);
}
inline void SceneAvatarInfo::set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.inherent_proud_skill_list)
}
inline void SceneAvatarInfo::add_inherent_proud_skill_list(::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.inherent_proud_skill_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::inherent_proud_skill_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_inherent_proud_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return &inherent_proud_skill_list_;
}

// map<uint32, uint32> skill_level_map = 13;
inline int SceneAvatarInfo::skill_level_map_size() const {
  return skill_level_map_.size();
}
inline void SceneAvatarInfo::clear_skill_level_map() {
  skill_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneAvatarInfo::skill_level_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAvatarInfo.skill_level_map)
  return skill_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_skill_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAvatarInfo.skill_level_map)
  return skill_level_map_.MutableMap();
}

// map<uint32, uint32> proud_skill_extra_level_map = 14;
inline int SceneAvatarInfo::proud_skill_extra_level_map_size() const {
  return proud_skill_extra_level_map_.size();
}
inline void SceneAvatarInfo::clear_proud_skill_extra_level_map() {
  proud_skill_extra_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneAvatarInfo::proud_skill_extra_level_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_proud_skill_extra_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.MutableMap();
}

// repeated .proto.ServerBuff server_buff_list = 15;
inline int SceneAvatarInfo::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void SceneAvatarInfo::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& SceneAvatarInfo::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* SceneAvatarInfo::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* SceneAvatarInfo::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
SceneAvatarInfo::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
SceneAvatarInfo::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_;
}

// repeated uint32 team_resonance_list = 16;
inline int SceneAvatarInfo::team_resonance_list_size() const {
  return team_resonance_list_.size();
}
inline void SceneAvatarInfo::clear_team_resonance_list() {
  team_resonance_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::team_resonance_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.team_resonance_list)
  return team_resonance_list_.Get(index);
}
inline void SceneAvatarInfo::set_team_resonance_list(int index, ::google::protobuf::uint32 value) {
  team_resonance_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.team_resonance_list)
}
inline void SceneAvatarInfo::add_team_resonance_list(::google::protobuf::uint32 value) {
  team_resonance_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.team_resonance_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::team_resonance_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.team_resonance_list)
  return team_resonance_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_team_resonance_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.team_resonance_list)
  return &team_resonance_list_;
}

// uint32 wearing_flycloak_id = 17;
inline void SceneAvatarInfo::clear_wearing_flycloak_id() {
  wearing_flycloak_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::wearing_flycloak_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.wearing_flycloak_id)
  return wearing_flycloak_id_;
}
inline void SceneAvatarInfo::set_wearing_flycloak_id(::google::protobuf::uint32 value) {
  
  wearing_flycloak_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.wearing_flycloak_id)
}

// uint32 born_time = 18;
inline void SceneAvatarInfo::clear_born_time() {
  born_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::born_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.born_time)
  return born_time_;
}
inline void SceneAvatarInfo::set_born_time(::google::protobuf::uint32 value) {
  
  born_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.born_time)
}

// uint32 costume_id = 19;
inline void SceneAvatarInfo::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.costume_id)
  return costume_id_;
}
inline void SceneAvatarInfo::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.costume_id)
}

// .proto.CurVehicleInfo cur_vehicle_info = 20;
inline bool SceneAvatarInfo::has_cur_vehicle_info() const {
  return this != internal_default_instance() && cur_vehicle_info_ != NULL;
}
inline void SceneAvatarInfo::clear_cur_vehicle_info() {
  if (GetArenaNoVirtual() == NULL && cur_vehicle_info_ != NULL) delete cur_vehicle_info_;
  cur_vehicle_info_ = NULL;
}
inline const ::proto::CurVehicleInfo& SceneAvatarInfo::cur_vehicle_info() const {
  const ::proto::CurVehicleInfo* p = cur_vehicle_info_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.cur_vehicle_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CurVehicleInfo*>(
      &::proto::_CurVehicleInfo_default_instance_);
}
inline ::proto::CurVehicleInfo* SceneAvatarInfo::mutable_cur_vehicle_info() {
  
  if (cur_vehicle_info_ == NULL) {
    cur_vehicle_info_ = new ::proto::CurVehicleInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.cur_vehicle_info)
  return cur_vehicle_info_;
}
inline ::proto::CurVehicleInfo* SceneAvatarInfo::release_cur_vehicle_info() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarInfo.cur_vehicle_info)
  
  ::proto::CurVehicleInfo* temp = cur_vehicle_info_;
  cur_vehicle_info_ = NULL;
  return temp;
}
inline void SceneAvatarInfo::set_allocated_cur_vehicle_info(::proto::CurVehicleInfo* cur_vehicle_info) {
  delete cur_vehicle_info_;
  cur_vehicle_info_ = cur_vehicle_info;
  if (cur_vehicle_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarInfo.cur_vehicle_info)
}

// .proto.AvatarExcelInfo excel_info = 21;
inline bool SceneAvatarInfo::has_excel_info() const {
  return this != internal_default_instance() && excel_info_ != NULL;
}
inline void SceneAvatarInfo::clear_excel_info() {
  if (GetArenaNoVirtual() == NULL && excel_info_ != NULL) delete excel_info_;
  excel_info_ = NULL;
}
inline const ::proto::AvatarExcelInfo& SceneAvatarInfo::excel_info() const {
  const ::proto::AvatarExcelInfo* p = excel_info_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.excel_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarExcelInfo*>(
      &::proto::_AvatarExcelInfo_default_instance_);
}
inline ::proto::AvatarExcelInfo* SceneAvatarInfo::mutable_excel_info() {
  
  if (excel_info_ == NULL) {
    excel_info_ = new ::proto::AvatarExcelInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.excel_info)
  return excel_info_;
}
inline ::proto::AvatarExcelInfo* SceneAvatarInfo::release_excel_info() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarInfo.excel_info)
  
  ::proto::AvatarExcelInfo* temp = excel_info_;
  excel_info_ = NULL;
  return temp;
}
inline void SceneAvatarInfo::set_allocated_excel_info(::proto::AvatarExcelInfo* excel_info) {
  delete excel_info_;
  excel_info_ = excel_info;
  if (excel_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarInfo.excel_info)
}

// uint32 anim_hash = 22;
inline void SceneAvatarInfo::clear_anim_hash() {
  anim_hash_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::anim_hash() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.anim_hash)
  return anim_hash_;
}
inline void SceneAvatarInfo::set_anim_hash(::google::protobuf::uint32 value) {
  
  anim_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.anim_hash)
}

// -------------------------------------------------------------------

// SceneFishInfo

// uint32 fish_id = 1;
inline void SceneFishInfo::clear_fish_id() {
  fish_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneFishInfo::fish_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneFishInfo.fish_id)
  return fish_id_;
}
inline void SceneFishInfo::set_fish_id(::google::protobuf::uint32 value) {
  
  fish_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneFishInfo.fish_id)
}

// uint32 fish_pool_entity_id = 2;
inline void SceneFishInfo::clear_fish_pool_entity_id() {
  fish_pool_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneFishInfo::fish_pool_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneFishInfo.fish_pool_entity_id)
  return fish_pool_entity_id_;
}
inline void SceneFishInfo::set_fish_pool_entity_id(::google::protobuf::uint32 value) {
  
  fish_pool_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneFishInfo.fish_pool_entity_id)
}

// .proto.Vector fish_pool_pos = 3;
inline bool SceneFishInfo::has_fish_pool_pos() const {
  return this != internal_default_instance() && fish_pool_pos_ != NULL;
}
inline void SceneFishInfo::clear_fish_pool_pos() {
  if (GetArenaNoVirtual() == NULL && fish_pool_pos_ != NULL) delete fish_pool_pos_;
  fish_pool_pos_ = NULL;
}
inline const ::proto::Vector& SceneFishInfo::fish_pool_pos() const {
  const ::proto::Vector* p = fish_pool_pos_;
  // @@protoc_insertion_point(field_get:proto.SceneFishInfo.fish_pool_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* SceneFishInfo::mutable_fish_pool_pos() {
  
  if (fish_pool_pos_ == NULL) {
    fish_pool_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneFishInfo.fish_pool_pos)
  return fish_pool_pos_;
}
inline ::proto::Vector* SceneFishInfo::release_fish_pool_pos() {
  // @@protoc_insertion_point(field_release:proto.SceneFishInfo.fish_pool_pos)
  
  ::proto::Vector* temp = fish_pool_pos_;
  fish_pool_pos_ = NULL;
  return temp;
}
inline void SceneFishInfo::set_allocated_fish_pool_pos(::proto::Vector* fish_pool_pos) {
  delete fish_pool_pos_;
  fish_pool_pos_ = fish_pool_pos;
  if (fish_pool_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneFishInfo.fish_pool_pos)
}

// uint32 fish_pool_gadget_id = 4;
inline void SceneFishInfo::clear_fish_pool_gadget_id() {
  fish_pool_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneFishInfo::fish_pool_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneFishInfo.fish_pool_gadget_id)
  return fish_pool_gadget_id_;
}
inline void SceneFishInfo::set_fish_pool_gadget_id(::google::protobuf::uint32 value) {
  
  fish_pool_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneFishInfo.fish_pool_gadget_id)
}

// uint32 last_shock_time = 5;
inline void SceneFishInfo::clear_last_shock_time() {
  last_shock_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneFishInfo::last_shock_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneFishInfo.last_shock_time)
  return last_shock_time_;
}
inline void SceneFishInfo::set_last_shock_time(::google::protobuf::uint32 value) {
  
  last_shock_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneFishInfo.last_shock_time)
}

// -------------------------------------------------------------------

// FishtankFishInfo

// float fish_distance_from_water = 1;
inline void FishtankFishInfo::clear_fish_distance_from_water() {
  fish_distance_from_water_ = 0;
}
inline float FishtankFishInfo::fish_distance_from_water() const {
  // @@protoc_insertion_point(field_get:proto.FishtankFishInfo.fish_distance_from_water)
  return fish_distance_from_water_;
}
inline void FishtankFishInfo::set_fish_distance_from_water(float value) {
  
  fish_distance_from_water_ = value;
  // @@protoc_insertion_point(field_set:proto.FishtankFishInfo.fish_distance_from_water)
}

// float fish_scale = 2;
inline void FishtankFishInfo::clear_fish_scale() {
  fish_scale_ = 0;
}
inline float FishtankFishInfo::fish_scale() const {
  // @@protoc_insertion_point(field_get:proto.FishtankFishInfo.fish_scale)
  return fish_scale_;
}
inline void FishtankFishInfo::set_fish_scale(float value) {
  
  fish_scale_ = value;
  // @@protoc_insertion_point(field_set:proto.FishtankFishInfo.fish_scale)
}

// float initial_rotation_y = 3;
inline void FishtankFishInfo::clear_initial_rotation_y() {
  initial_rotation_y_ = 0;
}
inline float FishtankFishInfo::initial_rotation_y() const {
  // @@protoc_insertion_point(field_get:proto.FishtankFishInfo.initial_rotation_y)
  return initial_rotation_y_;
}
inline void FishtankFishInfo::set_initial_rotation_y(float value) {
  
  initial_rotation_y_ = value;
  // @@protoc_insertion_point(field_set:proto.FishtankFishInfo.initial_rotation_y)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneMonsterInfo

// uint32 monster_id = 1;
inline void SceneMonsterInfo::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.monster_id)
  return monster_id_;
}
inline void SceneMonsterInfo::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.monster_id)
}

// uint32 group_id = 2;
inline void SceneMonsterInfo::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::group_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.group_id)
  return group_id_;
}
inline void SceneMonsterInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.group_id)
}

// uint32 config_id = 3;
inline void SceneMonsterInfo::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.config_id)
  return config_id_;
}
inline void SceneMonsterInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.config_id)
}

// repeated .proto.SceneWeaponInfo weapon_list = 4;
inline int SceneMonsterInfo::weapon_list_size() const {
  return weapon_list_.size();
}
inline void SceneMonsterInfo::clear_weapon_list() {
  weapon_list_.Clear();
}
inline const ::proto::SceneWeaponInfo& SceneMonsterInfo::weapon_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Get(index);
}
inline ::proto::SceneWeaponInfo* SceneMonsterInfo::mutable_weapon_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Mutable(index);
}
inline ::proto::SceneWeaponInfo* SceneMonsterInfo::add_weapon_list() {
  // @@protoc_insertion_point(field_add:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >*
SceneMonsterInfo::mutable_weapon_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneMonsterInfo.weapon_list)
  return &weapon_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >&
SceneMonsterInfo::weapon_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_;
}

// uint32 authority_peer_id = 5;
inline void SceneMonsterInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void SceneMonsterInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.authority_peer_id)
}

// repeated uint32 affix_list = 6;
inline int SceneMonsterInfo::affix_list_size() const {
  return affix_list_.size();
}
inline void SceneMonsterInfo::clear_affix_list() {
  affix_list_.Clear();
}
inline ::google::protobuf::uint32 SceneMonsterInfo::affix_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.affix_list)
  return affix_list_.Get(index);
}
inline void SceneMonsterInfo::set_affix_list(int index, ::google::protobuf::uint32 value) {
  affix_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.affix_list)
}
inline void SceneMonsterInfo::add_affix_list(::google::protobuf::uint32 value) {
  affix_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneMonsterInfo.affix_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneMonsterInfo::affix_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneMonsterInfo.affix_list)
  return affix_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneMonsterInfo::mutable_affix_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneMonsterInfo.affix_list)
  return &affix_list_;
}

// bool is_elite = 7;
inline void SceneMonsterInfo::clear_is_elite() {
  is_elite_ = false;
}
inline bool SceneMonsterInfo::is_elite() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.is_elite)
  return is_elite_;
}
inline void SceneMonsterInfo::set_is_elite(bool value) {
  
  is_elite_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.is_elite)
}

// uint32 owner_entity_id = 8;
inline void SceneMonsterInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.owner_entity_id)
  return owner_entity_id_;
}
inline void SceneMonsterInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.owner_entity_id)
}

// uint32 summoned_tag = 9;
inline void SceneMonsterInfo::clear_summoned_tag() {
  summoned_tag_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::summoned_tag() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.summoned_tag)
  return summoned_tag_;
}
inline void SceneMonsterInfo::set_summoned_tag(::google::protobuf::uint32 value) {
  
  summoned_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.summoned_tag)
}

// map<uint32, uint32> summon_tag_map = 10;
inline int SceneMonsterInfo::summon_tag_map_size() const {
  return summon_tag_map_.size();
}
inline void SceneMonsterInfo::clear_summon_tag_map() {
  summon_tag_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneMonsterInfo::summon_tag_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneMonsterInfo.summon_tag_map)
  return summon_tag_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneMonsterInfo::mutable_summon_tag_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneMonsterInfo.summon_tag_map)
  return summon_tag_map_.MutableMap();
}

// uint32 pose_id = 11;
inline void SceneMonsterInfo::clear_pose_id() {
  pose_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::pose_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.pose_id)
  return pose_id_;
}
inline void SceneMonsterInfo::set_pose_id(::google::protobuf::uint32 value) {
  
  pose_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.pose_id)
}

// .proto.MonsterBornType born_type = 12;
inline void SceneMonsterInfo::clear_born_type() {
  born_type_ = 0;
}
inline ::proto::MonsterBornType SceneMonsterInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.born_type)
  return static_cast< ::proto::MonsterBornType >(born_type_);
}
inline void SceneMonsterInfo::set_born_type(::proto::MonsterBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.born_type)
}

// uint32 block_id = 13;
inline void SceneMonsterInfo::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.block_id)
  return block_id_;
}
inline void SceneMonsterInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.block_id)
}

// uint32 mark_flag = 14;
inline void SceneMonsterInfo::clear_mark_flag() {
  mark_flag_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::mark_flag() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.mark_flag)
  return mark_flag_;
}
inline void SceneMonsterInfo::set_mark_flag(::google::protobuf::uint32 value) {
  
  mark_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.mark_flag)
}

// uint32 title_id = 15;
inline void SceneMonsterInfo::clear_title_id() {
  title_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::title_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.title_id)
  return title_id_;
}
inline void SceneMonsterInfo::set_title_id(::google::protobuf::uint32 value) {
  
  title_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.title_id)
}

// uint32 special_name_id = 16;
inline void SceneMonsterInfo::clear_special_name_id() {
  special_name_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::special_name_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.special_name_id)
  return special_name_id_;
}
inline void SceneMonsterInfo::set_special_name_id(::google::protobuf::uint32 value) {
  
  special_name_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.special_name_id)
}

// uint32 attack_target_id = 17;
inline void SceneMonsterInfo::clear_attack_target_id() {
  attack_target_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::attack_target_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.attack_target_id)
  return attack_target_id_;
}
inline void SceneMonsterInfo::set_attack_target_id(::google::protobuf::uint32 value) {
  
  attack_target_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.attack_target_id)
}

// .proto.MonsterRoute monster_route = 18;
inline bool SceneMonsterInfo::has_monster_route() const {
  return this != internal_default_instance() && monster_route_ != NULL;
}
inline void SceneMonsterInfo::clear_monster_route() {
  if (GetArenaNoVirtual() == NULL && monster_route_ != NULL) delete monster_route_;
  monster_route_ = NULL;
}
inline const ::proto::MonsterRoute& SceneMonsterInfo::monster_route() const {
  const ::proto::MonsterRoute* p = monster_route_;
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.monster_route)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MonsterRoute*>(
      &::proto::_MonsterRoute_default_instance_);
}
inline ::proto::MonsterRoute* SceneMonsterInfo::mutable_monster_route() {
  
  if (monster_route_ == NULL) {
    monster_route_ = new ::proto::MonsterRoute;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneMonsterInfo.monster_route)
  return monster_route_;
}
inline ::proto::MonsterRoute* SceneMonsterInfo::release_monster_route() {
  // @@protoc_insertion_point(field_release:proto.SceneMonsterInfo.monster_route)
  
  ::proto::MonsterRoute* temp = monster_route_;
  monster_route_ = NULL;
  return temp;
}
inline void SceneMonsterInfo::set_allocated_monster_route(::proto::MonsterRoute* monster_route) {
  delete monster_route_;
  monster_route_ = monster_route;
  if (monster_route) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneMonsterInfo.monster_route)
}

// uint32 ai_config_id = 19;
inline void SceneMonsterInfo::clear_ai_config_id() {
  ai_config_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::ai_config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.ai_config_id)
  return ai_config_id_;
}
inline void SceneMonsterInfo::set_ai_config_id(::google::protobuf::uint32 value) {
  
  ai_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.ai_config_id)
}

// uint32 level_route_id = 20;
inline void SceneMonsterInfo::clear_level_route_id() {
  level_route_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::level_route_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.level_route_id)
  return level_route_id_;
}
inline void SceneMonsterInfo::set_level_route_id(::google::protobuf::uint32 value) {
  
  level_route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.level_route_id)
}

// uint32 init_pose_id = 21;
inline void SceneMonsterInfo::clear_init_pose_id() {
  init_pose_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::init_pose_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.init_pose_id)
  return init_pose_id_;
}
inline void SceneMonsterInfo::set_init_pose_id(::google::protobuf::uint32 value) {
  
  init_pose_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.init_pose_id)
}

// bool is_light = 22;
inline void SceneMonsterInfo::clear_is_light() {
  is_light_ = false;
}
inline bool SceneMonsterInfo::is_light() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.is_light)
  return is_light_;
}
inline void SceneMonsterInfo::set_is_light(bool value) {
  
  is_light_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.is_light)
}

// uint32 kill_num = 23;
inline void SceneMonsterInfo::clear_kill_num() {
  kill_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::kill_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.kill_num)
  return kill_num_;
}
inline void SceneMonsterInfo::set_kill_num(::google::protobuf::uint32 value) {
  
  kill_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.kill_num)
}

// .proto.SceneFishInfo fish_info = 50;
inline bool SceneMonsterInfo::has_fish_info() const {
  return content_case() == kFishInfo;
}
inline void SceneMonsterInfo::set_has_fish_info() {
  _oneof_case_[0] = kFishInfo;
}
inline void SceneMonsterInfo::clear_fish_info() {
  if (has_fish_info()) {
    delete content_.fish_info_;
    clear_has_content();
  }
}
inline  const ::proto::SceneFishInfo& SceneMonsterInfo::fish_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.fish_info)
  return has_fish_info()
      ? *content_.fish_info_
      : ::proto::SceneFishInfo::default_instance();
}
inline ::proto::SceneFishInfo* SceneMonsterInfo::mutable_fish_info() {
  if (!has_fish_info()) {
    clear_content();
    set_has_fish_info();
    content_.fish_info_ = new ::proto::SceneFishInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneMonsterInfo.fish_info)
  return content_.fish_info_;
}
inline ::proto::SceneFishInfo* SceneMonsterInfo::release_fish_info() {
  // @@protoc_insertion_point(field_release:proto.SceneMonsterInfo.fish_info)
  if (has_fish_info()) {
    clear_has_content();
    ::proto::SceneFishInfo* temp = content_.fish_info_;
    content_.fish_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneMonsterInfo::set_allocated_fish_info(::proto::SceneFishInfo* fish_info) {
  clear_content();
  if (fish_info) {
    set_has_fish_info();
    content_.fish_info_ = fish_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneMonsterInfo.fish_info)
}

// .proto.FishtankFishInfo fishtank_fish_info = 51;
inline bool SceneMonsterInfo::has_fishtank_fish_info() const {
  return content_case() == kFishtankFishInfo;
}
inline void SceneMonsterInfo::set_has_fishtank_fish_info() {
  _oneof_case_[0] = kFishtankFishInfo;
}
inline void SceneMonsterInfo::clear_fishtank_fish_info() {
  if (has_fishtank_fish_info()) {
    delete content_.fishtank_fish_info_;
    clear_has_content();
  }
}
inline  const ::proto::FishtankFishInfo& SceneMonsterInfo::fishtank_fish_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.fishtank_fish_info)
  return has_fishtank_fish_info()
      ? *content_.fishtank_fish_info_
      : ::proto::FishtankFishInfo::default_instance();
}
inline ::proto::FishtankFishInfo* SceneMonsterInfo::mutable_fishtank_fish_info() {
  if (!has_fishtank_fish_info()) {
    clear_content();
    set_has_fishtank_fish_info();
    content_.fishtank_fish_info_ = new ::proto::FishtankFishInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneMonsterInfo.fishtank_fish_info)
  return content_.fishtank_fish_info_;
}
inline ::proto::FishtankFishInfo* SceneMonsterInfo::release_fishtank_fish_info() {
  // @@protoc_insertion_point(field_release:proto.SceneMonsterInfo.fishtank_fish_info)
  if (has_fishtank_fish_info()) {
    clear_has_content();
    ::proto::FishtankFishInfo* temp = content_.fishtank_fish_info_;
    content_.fishtank_fish_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneMonsterInfo::set_allocated_fishtank_fish_info(::proto::FishtankFishInfo* fishtank_fish_info) {
  clear_content();
  if (fishtank_fish_info) {
    set_has_fishtank_fish_info();
    content_.fishtank_fish_info_ = fishtank_fish_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneMonsterInfo.fishtank_fish_info)
}

inline bool SceneMonsterInfo::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void SceneMonsterInfo::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline SceneMonsterInfo::ContentCase SceneMonsterInfo::content_case() const {
  return SceneMonsterInfo::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SceneNpcInfo

// uint32 npc_id = 1;
inline void SceneNpcInfo::clear_npc_id() {
  npc_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.npc_id)
  return npc_id_;
}
inline void SceneNpcInfo::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.npc_id)
}

// uint32 room_id = 2;
inline void SceneNpcInfo::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::room_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.room_id)
  return room_id_;
}
inline void SceneNpcInfo::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.room_id)
}

// uint32 parent_quest_id = 3;
inline void SceneNpcInfo::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.parent_quest_id)
  return parent_quest_id_;
}
inline void SceneNpcInfo::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.parent_quest_id)
}

// uint32 block_id = 4;
inline void SceneNpcInfo::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.block_id)
  return block_id_;
}
inline void SceneNpcInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.block_id)
}

// -------------------------------------------------------------------

// WorktopInfo

// repeated uint32 option_list = 1;
inline int WorktopInfo::option_list_size() const {
  return option_list_.size();
}
inline void WorktopInfo::clear_option_list() {
  option_list_.Clear();
}
inline ::google::protobuf::uint32 WorktopInfo::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorktopInfo.option_list)
  return option_list_.Get(index);
}
inline void WorktopInfo::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorktopInfo.option_list)
}
inline void WorktopInfo::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorktopInfo.option_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorktopInfo::option_list() const {
  // @@protoc_insertion_point(field_list:proto.WorktopInfo.option_list)
  return option_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorktopInfo::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorktopInfo.option_list)
  return &option_list_;
}

// bool is_guest_can_operate = 2;
inline void WorktopInfo::clear_is_guest_can_operate() {
  is_guest_can_operate_ = false;
}
inline bool WorktopInfo::is_guest_can_operate() const {
  // @@protoc_insertion_point(field_get:proto.WorktopInfo.is_guest_can_operate)
  return is_guest_can_operate_;
}
inline void WorktopInfo::set_is_guest_can_operate(bool value) {
  
  is_guest_can_operate_ = value;
  // @@protoc_insertion_point(field_set:proto.WorktopInfo.is_guest_can_operate)
}

// -------------------------------------------------------------------

// MathQuaternion

// float x = 1;
inline void MathQuaternion::clear_x() {
  x_ = 0;
}
inline float MathQuaternion::x() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.x)
  return x_;
}
inline void MathQuaternion::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.x)
}

// float y = 2;
inline void MathQuaternion::clear_y() {
  y_ = 0;
}
inline float MathQuaternion::y() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.y)
  return y_;
}
inline void MathQuaternion::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.y)
}

// float z = 3;
inline void MathQuaternion::clear_z() {
  z_ = 0;
}
inline float MathQuaternion::z() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.z)
  return z_;
}
inline void MathQuaternion::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.z)
}

// float w = 4;
inline void MathQuaternion::clear_w() {
  w_ = 0;
}
inline float MathQuaternion::w() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.w)
  return w_;
}
inline void MathQuaternion::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.w)
}

// -------------------------------------------------------------------

// PlatformInfo

// uint32 route_id = 1;
inline void PlatformInfo::clear_route_id() {
  route_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::route_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.route_id)
  return route_id_;
}
inline void PlatformInfo::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.route_id)
}

// int32 start_index = 2;
inline void PlatformInfo::clear_start_index() {
  start_index_ = 0;
}
inline ::google::protobuf::int32 PlatformInfo::start_index() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_index)
  return start_index_;
}
inline void PlatformInfo::set_start_index(::google::protobuf::int32 value) {
  
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_index)
}

// uint32 start_route_time = 3;
inline void PlatformInfo::clear_start_route_time() {
  start_route_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::start_route_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_route_time)
  return start_route_time_;
}
inline void PlatformInfo::set_start_route_time(::google::protobuf::uint32 value) {
  
  start_route_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_route_time)
}

// uint32 start_scene_time = 4;
inline void PlatformInfo::clear_start_scene_time() {
  start_scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::start_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_scene_time)
  return start_scene_time_;
}
inline void PlatformInfo::set_start_scene_time(::google::protobuf::uint32 value) {
  
  start_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_scene_time)
}

// .proto.Vector start_pos = 7;
inline bool PlatformInfo::has_start_pos() const {
  return this != internal_default_instance() && start_pos_ != NULL;
}
inline void PlatformInfo::clear_start_pos() {
  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) delete start_pos_;
  start_pos_ = NULL;
}
inline const ::proto::Vector& PlatformInfo::start_pos() const {
  const ::proto::Vector* p = start_pos_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlatformInfo::mutable_start_pos() {
  
  if (start_pos_ == NULL) {
    start_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.start_pos)
  return start_pos_;
}
inline ::proto::Vector* PlatformInfo::release_start_pos() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.start_pos)
  
  ::proto::Vector* temp = start_pos_;
  start_pos_ = NULL;
  return temp;
}
inline void PlatformInfo::set_allocated_start_pos(::proto::Vector* start_pos) {
  delete start_pos_;
  start_pos_ = start_pos;
  if (start_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.start_pos)
}

// bool is_started = 8;
inline void PlatformInfo::clear_is_started() {
  is_started_ = false;
}
inline bool PlatformInfo::is_started() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.is_started)
  return is_started_;
}
inline void PlatformInfo::set_is_started(bool value) {
  
  is_started_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.is_started)
}

// .proto.MathQuaternion start_rot = 9;
inline bool PlatformInfo::has_start_rot() const {
  return this != internal_default_instance() && start_rot_ != NULL;
}
inline void PlatformInfo::clear_start_rot() {
  if (GetArenaNoVirtual() == NULL && start_rot_ != NULL) delete start_rot_;
  start_rot_ = NULL;
}
inline const ::proto::MathQuaternion& PlatformInfo::start_rot() const {
  const ::proto::MathQuaternion* p = start_rot_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
inline ::proto::MathQuaternion* PlatformInfo::mutable_start_rot() {
  
  if (start_rot_ == NULL) {
    start_rot_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.start_rot)
  return start_rot_;
}
inline ::proto::MathQuaternion* PlatformInfo::release_start_rot() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.start_rot)
  
  ::proto::MathQuaternion* temp = start_rot_;
  start_rot_ = NULL;
  return temp;
}
inline void PlatformInfo::set_allocated_start_rot(::proto::MathQuaternion* start_rot) {
  delete start_rot_;
  start_rot_ = start_rot;
  if (start_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.start_rot)
}

// uint32 stop_scene_time = 10;
inline void PlatformInfo::clear_stop_scene_time() {
  stop_scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::stop_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.stop_scene_time)
  return stop_scene_time_;
}
inline void PlatformInfo::set_stop_scene_time(::google::protobuf::uint32 value) {
  
  stop_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.stop_scene_time)
}

// .proto.Vector pos_offset = 11;
inline bool PlatformInfo::has_pos_offset() const {
  return this != internal_default_instance() && pos_offset_ != NULL;
}
inline void PlatformInfo::clear_pos_offset() {
  if (GetArenaNoVirtual() == NULL && pos_offset_ != NULL) delete pos_offset_;
  pos_offset_ = NULL;
}
inline const ::proto::Vector& PlatformInfo::pos_offset() const {
  const ::proto::Vector* p = pos_offset_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.pos_offset)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlatformInfo::mutable_pos_offset() {
  
  if (pos_offset_ == NULL) {
    pos_offset_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.pos_offset)
  return pos_offset_;
}
inline ::proto::Vector* PlatformInfo::release_pos_offset() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.pos_offset)
  
  ::proto::Vector* temp = pos_offset_;
  pos_offset_ = NULL;
  return temp;
}
inline void PlatformInfo::set_allocated_pos_offset(::proto::Vector* pos_offset) {
  delete pos_offset_;
  pos_offset_ = pos_offset;
  if (pos_offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.pos_offset)
}

// .proto.MathQuaternion rot_offset = 12;
inline bool PlatformInfo::has_rot_offset() const {
  return this != internal_default_instance() && rot_offset_ != NULL;
}
inline void PlatformInfo::clear_rot_offset() {
  if (GetArenaNoVirtual() == NULL && rot_offset_ != NULL) delete rot_offset_;
  rot_offset_ = NULL;
}
inline const ::proto::MathQuaternion& PlatformInfo::rot_offset() const {
  const ::proto::MathQuaternion* p = rot_offset_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.rot_offset)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
inline ::proto::MathQuaternion* PlatformInfo::mutable_rot_offset() {
  
  if (rot_offset_ == NULL) {
    rot_offset_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.rot_offset)
  return rot_offset_;
}
inline ::proto::MathQuaternion* PlatformInfo::release_rot_offset() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.rot_offset)
  
  ::proto::MathQuaternion* temp = rot_offset_;
  rot_offset_ = NULL;
  return temp;
}
inline void PlatformInfo::set_allocated_rot_offset(::proto::MathQuaternion* rot_offset) {
  delete rot_offset_;
  rot_offset_ = rot_offset;
  if (rot_offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.rot_offset)
}

// .proto.MovingPlatformType moving_platform_type = 13;
inline void PlatformInfo::clear_moving_platform_type() {
  moving_platform_type_ = 0;
}
inline ::proto::MovingPlatformType PlatformInfo::moving_platform_type() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.moving_platform_type)
  return static_cast< ::proto::MovingPlatformType >(moving_platform_type_);
}
inline void PlatformInfo::set_moving_platform_type(::proto::MovingPlatformType value) {
  
  moving_platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.moving_platform_type)
}

// bool is_active = 14;
inline void PlatformInfo::clear_is_active() {
  is_active_ = false;
}
inline bool PlatformInfo::is_active() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.is_active)
  return is_active_;
}
inline void PlatformInfo::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.is_active)
}

// .proto.Route route = 15;
inline bool PlatformInfo::has_route() const {
  return this != internal_default_instance() && route_ != NULL;
}
inline void PlatformInfo::clear_route() {
  if (GetArenaNoVirtual() == NULL && route_ != NULL) delete route_;
  route_ = NULL;
}
inline const ::proto::Route& PlatformInfo::route() const {
  const ::proto::Route* p = route_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.route)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Route*>(
      &::proto::_Route_default_instance_);
}
inline ::proto::Route* PlatformInfo::mutable_route() {
  
  if (route_ == NULL) {
    route_ = new ::proto::Route;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.route)
  return route_;
}
inline ::proto::Route* PlatformInfo::release_route() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.route)
  
  ::proto::Route* temp = route_;
  route_ = NULL;
  return temp;
}
inline void PlatformInfo::set_allocated_route(::proto::Route* route) {
  delete route_;
  route_ = route;
  if (route) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.route)
}

// uint32 point_id = 16;
inline void PlatformInfo::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::point_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.point_id)
  return point_id_;
}
inline void PlatformInfo::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.point_id)
}

// -------------------------------------------------------------------

// RoutePoint

// .proto.Vector position = 1;
inline bool RoutePoint::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void RoutePoint::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::proto::Vector& RoutePoint::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.RoutePoint.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* RoutePoint::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.RoutePoint.position)
  return position_;
}
inline ::proto::Vector* RoutePoint::release_position() {
  // @@protoc_insertion_point(field_release:proto.RoutePoint.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void RoutePoint::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RoutePoint.position)
}

// float arrive_range = 2;
inline void RoutePoint::clear_arrive_range() {
  arrive_range_ = 0;
}
inline float RoutePoint::arrive_range() const {
  // @@protoc_insertion_point(field_get:proto.RoutePoint.arrive_range)
  return arrive_range_;
}
inline void RoutePoint::set_arrive_range(float value) {
  
  arrive_range_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePoint.arrive_range)
}

// bool has_reach_event = 3;
inline void RoutePoint::clear_has_reach_event() {
  has_reach_event_ = false;
}
inline bool RoutePoint::has_reach_event() const {
  // @@protoc_insertion_point(field_get:proto.RoutePoint.has_reach_event)
  return has_reach_event_;
}
inline void RoutePoint::set_has_reach_event(bool value) {
  
  has_reach_event_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePoint.has_reach_event)
}

// float velocity = 11;
inline bool RoutePoint::has_velocity() const {
  return move_params_case() == kVelocity;
}
inline void RoutePoint::set_has_velocity() {
  _oneof_case_[0] = kVelocity;
}
inline void RoutePoint::clear_velocity() {
  if (has_velocity()) {
    move_params_.velocity_ = 0;
    clear_has_move_params();
  }
}
inline float RoutePoint::velocity() const {
  // @@protoc_insertion_point(field_get:proto.RoutePoint.velocity)
  if (has_velocity()) {
    return move_params_.velocity_;
  }
  return 0;
}
inline void RoutePoint::set_velocity(float value) {
  if (!has_velocity()) {
    clear_move_params();
    set_has_velocity();
  }
  move_params_.velocity_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePoint.velocity)
}

// float time = 12;
inline bool RoutePoint::has_time() const {
  return move_params_case() == kTime;
}
inline void RoutePoint::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline void RoutePoint::clear_time() {
  if (has_time()) {
    move_params_.time_ = 0;
    clear_has_move_params();
  }
}
inline float RoutePoint::time() const {
  // @@protoc_insertion_point(field_get:proto.RoutePoint.time)
  if (has_time()) {
    return move_params_.time_;
  }
  return 0;
}
inline void RoutePoint::set_time(float value) {
  if (!has_time()) {
    clear_move_params();
    set_has_time();
  }
  move_params_.time_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePoint.time)
}

// .proto.Vector rotation = 21;
inline bool RoutePoint::has_rotation() const {
  return rotate_params_case() == kRotation;
}
inline void RoutePoint::set_has_rotation() {
  _oneof_case_[1] = kRotation;
}
inline void RoutePoint::clear_rotation() {
  if (has_rotation()) {
    delete rotate_params_.rotation_;
    clear_has_rotate_params();
  }
}
inline  const ::proto::Vector& RoutePoint::rotation() const {
  // @@protoc_insertion_point(field_get:proto.RoutePoint.rotation)
  return has_rotation()
      ? *rotate_params_.rotation_
      : ::proto::Vector::default_instance();
}
inline ::proto::Vector* RoutePoint::mutable_rotation() {
  if (!has_rotation()) {
    clear_rotate_params();
    set_has_rotation();
    rotate_params_.rotation_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.RoutePoint.rotation)
  return rotate_params_.rotation_;
}
inline ::proto::Vector* RoutePoint::release_rotation() {
  // @@protoc_insertion_point(field_release:proto.RoutePoint.rotation)
  if (has_rotation()) {
    clear_has_rotate_params();
    ::proto::Vector* temp = rotate_params_.rotation_;
    rotate_params_.rotation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RoutePoint::set_allocated_rotation(::proto::Vector* rotation) {
  clear_rotate_params();
  if (rotation) {
    set_has_rotation();
    rotate_params_.rotation_ = rotation;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RoutePoint.rotation)
}

// .proto.MathQuaternion rotation_speed = 22;
inline bool RoutePoint::has_rotation_speed() const {
  return rotate_params_case() == kRotationSpeed;
}
inline void RoutePoint::set_has_rotation_speed() {
  _oneof_case_[1] = kRotationSpeed;
}
inline void RoutePoint::clear_rotation_speed() {
  if (has_rotation_speed()) {
    delete rotate_params_.rotation_speed_;
    clear_has_rotate_params();
  }
}
inline  const ::proto::MathQuaternion& RoutePoint::rotation_speed() const {
  // @@protoc_insertion_point(field_get:proto.RoutePoint.rotation_speed)
  return has_rotation_speed()
      ? *rotate_params_.rotation_speed_
      : ::proto::MathQuaternion::default_instance();
}
inline ::proto::MathQuaternion* RoutePoint::mutable_rotation_speed() {
  if (!has_rotation_speed()) {
    clear_rotate_params();
    set_has_rotation_speed();
    rotate_params_.rotation_speed_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.RoutePoint.rotation_speed)
  return rotate_params_.rotation_speed_;
}
inline ::proto::MathQuaternion* RoutePoint::release_rotation_speed() {
  // @@protoc_insertion_point(field_release:proto.RoutePoint.rotation_speed)
  if (has_rotation_speed()) {
    clear_has_rotate_params();
    ::proto::MathQuaternion* temp = rotate_params_.rotation_speed_;
    rotate_params_.rotation_speed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RoutePoint::set_allocated_rotation_speed(::proto::MathQuaternion* rotation_speed) {
  clear_rotate_params();
  if (rotation_speed) {
    set_has_rotation_speed();
    rotate_params_.rotation_speed_ = rotation_speed;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RoutePoint.rotation_speed)
}

// .proto.MathQuaternion axis_speed = 23;
inline bool RoutePoint::has_axis_speed() const {
  return rotate_params_case() == kAxisSpeed;
}
inline void RoutePoint::set_has_axis_speed() {
  _oneof_case_[1] = kAxisSpeed;
}
inline void RoutePoint::clear_axis_speed() {
  if (has_axis_speed()) {
    delete rotate_params_.axis_speed_;
    clear_has_rotate_params();
  }
}
inline  const ::proto::MathQuaternion& RoutePoint::axis_speed() const {
  // @@protoc_insertion_point(field_get:proto.RoutePoint.axis_speed)
  return has_axis_speed()
      ? *rotate_params_.axis_speed_
      : ::proto::MathQuaternion::default_instance();
}
inline ::proto::MathQuaternion* RoutePoint::mutable_axis_speed() {
  if (!has_axis_speed()) {
    clear_rotate_params();
    set_has_axis_speed();
    rotate_params_.axis_speed_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.RoutePoint.axis_speed)
  return rotate_params_.axis_speed_;
}
inline ::proto::MathQuaternion* RoutePoint::release_axis_speed() {
  // @@protoc_insertion_point(field_release:proto.RoutePoint.axis_speed)
  if (has_axis_speed()) {
    clear_has_rotate_params();
    ::proto::MathQuaternion* temp = rotate_params_.axis_speed_;
    rotate_params_.axis_speed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RoutePoint::set_allocated_axis_speed(::proto::MathQuaternion* axis_speed) {
  clear_rotate_params();
  if (axis_speed) {
    set_has_axis_speed();
    rotate_params_.axis_speed_ = axis_speed;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RoutePoint.axis_speed)
}

inline bool RoutePoint::has_move_params() const {
  return move_params_case() != MOVE_PARAMS_NOT_SET;
}
inline void RoutePoint::clear_has_move_params() {
  _oneof_case_[0] = MOVE_PARAMS_NOT_SET;
}
inline bool RoutePoint::has_rotate_params() const {
  return rotate_params_case() != ROTATE_PARAMS_NOT_SET;
}
inline void RoutePoint::clear_has_rotate_params() {
  _oneof_case_[1] = ROTATE_PARAMS_NOT_SET;
}
inline RoutePoint::MoveParamsCase RoutePoint::move_params_case() const {
  return RoutePoint::MoveParamsCase(_oneof_case_[0]);
}
inline RoutePoint::RotateParamsCase RoutePoint::rotate_params_case() const {
  return RoutePoint::RotateParamsCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// Route

// repeated .proto.RoutePoint route_points = 1;
inline int Route::route_points_size() const {
  return route_points_.size();
}
inline void Route::clear_route_points() {
  route_points_.Clear();
}
inline const ::proto::RoutePoint& Route::route_points(int index) const {
  // @@protoc_insertion_point(field_get:proto.Route.route_points)
  return route_points_.Get(index);
}
inline ::proto::RoutePoint* Route::mutable_route_points(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Route.route_points)
  return route_points_.Mutable(index);
}
inline ::proto::RoutePoint* Route::add_route_points() {
  // @@protoc_insertion_point(field_add:proto.Route.route_points)
  return route_points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >*
Route::mutable_route_points() {
  // @@protoc_insertion_point(field_mutable_list:proto.Route.route_points)
  return &route_points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >&
Route::route_points() const {
  // @@protoc_insertion_point(field_list:proto.Route.route_points)
  return route_points_;
}

// uint32 route_type = 2;
inline void Route::clear_route_type() {
  route_type_ = 0u;
}
inline ::google::protobuf::uint32 Route::route_type() const {
  // @@protoc_insertion_point(field_get:proto.Route.route_type)
  return route_type_;
}
inline void Route::set_route_type(::google::protobuf::uint32 value) {
  
  route_type_ = value;
  // @@protoc_insertion_point(field_set:proto.Route.route_type)
}

// -------------------------------------------------------------------

// MonsterRoute

// repeated .proto.RoutePoint route_points = 1;
inline int MonsterRoute::route_points_size() const {
  return route_points_.size();
}
inline void MonsterRoute::clear_route_points() {
  route_points_.Clear();
}
inline const ::proto::RoutePoint& MonsterRoute::route_points(int index) const {
  // @@protoc_insertion_point(field_get:proto.MonsterRoute.route_points)
  return route_points_.Get(index);
}
inline ::proto::RoutePoint* MonsterRoute::mutable_route_points(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MonsterRoute.route_points)
  return route_points_.Mutable(index);
}
inline ::proto::RoutePoint* MonsterRoute::add_route_points() {
  // @@protoc_insertion_point(field_add:proto.MonsterRoute.route_points)
  return route_points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >*
MonsterRoute::mutable_route_points() {
  // @@protoc_insertion_point(field_mutable_list:proto.MonsterRoute.route_points)
  return &route_points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RoutePoint >&
MonsterRoute::route_points() const {
  // @@protoc_insertion_point(field_list:proto.MonsterRoute.route_points)
  return route_points_;
}

// uint32 speed_level = 2;
inline void MonsterRoute::clear_speed_level() {
  speed_level_ = 0u;
}
inline ::google::protobuf::uint32 MonsterRoute::speed_level() const {
  // @@protoc_insertion_point(field_get:proto.MonsterRoute.speed_level)
  return speed_level_;
}
inline void MonsterRoute::set_speed_level(::google::protobuf::uint32 value) {
  
  speed_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterRoute.speed_level)
}

// uint32 route_type = 3;
inline void MonsterRoute::clear_route_type() {
  route_type_ = 0u;
}
inline ::google::protobuf::uint32 MonsterRoute::route_type() const {
  // @@protoc_insertion_point(field_get:proto.MonsterRoute.route_type)
  return route_type_;
}
inline void MonsterRoute::set_route_type(::google::protobuf::uint32 value) {
  
  route_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterRoute.route_type)
}

// float arrive_range = 4;
inline void MonsterRoute::clear_arrive_range() {
  arrive_range_ = 0;
}
inline float MonsterRoute::arrive_range() const {
  // @@protoc_insertion_point(field_get:proto.MonsterRoute.arrive_range)
  return arrive_range_;
}
inline void MonsterRoute::set_arrive_range(float value) {
  
  arrive_range_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterRoute.arrive_range)
}

// -------------------------------------------------------------------

// WeatherInfo

// uint32 weather_area_id = 1;
inline void WeatherInfo::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
inline ::google::protobuf::uint32 WeatherInfo::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.WeatherInfo.weather_area_id)
  return weather_area_id_;
}
inline void WeatherInfo::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WeatherInfo.weather_area_id)
}

// -------------------------------------------------------------------

// ClientGadgetInfo

// uint32 camp_id = 1;
inline void ClientGadgetInfo::clear_camp_id() {
  camp_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.camp_id)
  return camp_id_;
}
inline void ClientGadgetInfo::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.camp_id)
}

// uint32 camp_type = 2;
inline void ClientGadgetInfo::clear_camp_type() {
  camp_type_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::camp_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.camp_type)
  return camp_type_;
}
inline void ClientGadgetInfo::set_camp_type(::google::protobuf::uint32 value) {
  
  camp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.camp_type)
}

// uint64 guid = 3;
inline void ClientGadgetInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientGadgetInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.guid)
  return guid_;
}
inline void ClientGadgetInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.guid)
}

// uint32 owner_entity_id = 4;
inline void ClientGadgetInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.owner_entity_id)
  return owner_entity_id_;
}
inline void ClientGadgetInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.owner_entity_id)
}

// uint32 target_entity_id = 5;
inline void ClientGadgetInfo::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.target_entity_id)
  return target_entity_id_;
}
inline void ClientGadgetInfo::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.target_entity_id)
}

// bool async_load = 6;
inline void ClientGadgetInfo::clear_async_load() {
  async_load_ = false;
}
inline bool ClientGadgetInfo::async_load() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.async_load)
  return async_load_;
}
inline void ClientGadgetInfo::set_async_load(bool value) {
  
  async_load_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.async_load)
}

// bool is_peer_id_from_player = 7;
inline void ClientGadgetInfo::clear_is_peer_id_from_player() {
  is_peer_id_from_player_ = false;
}
inline bool ClientGadgetInfo::is_peer_id_from_player() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.is_peer_id_from_player)
  return is_peer_id_from_player_;
}
inline void ClientGadgetInfo::set_is_peer_id_from_player(bool value) {
  
  is_peer_id_from_player_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.is_peer_id_from_player)
}

// repeated uint32 target_entity_id_list = 8;
inline int ClientGadgetInfo::target_entity_id_list_size() const {
  return target_entity_id_list_.size();
}
inline void ClientGadgetInfo::clear_target_entity_id_list() {
  target_entity_id_list_.Clear();
}
inline ::google::protobuf::uint32 ClientGadgetInfo::target_entity_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.target_entity_id_list)
  return target_entity_id_list_.Get(index);
}
inline void ClientGadgetInfo::set_target_entity_id_list(int index, ::google::protobuf::uint32 value) {
  target_entity_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.target_entity_id_list)
}
inline void ClientGadgetInfo::add_target_entity_id_list(::google::protobuf::uint32 value) {
  target_entity_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ClientGadgetInfo.target_entity_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientGadgetInfo::target_entity_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ClientGadgetInfo.target_entity_id_list)
  return target_entity_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientGadgetInfo::mutable_target_entity_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientGadgetInfo.target_entity_id_list)
  return &target_entity_id_list_;
}

// -------------------------------------------------------------------

// AbilityGadgetInfo

// uint32 camp_id = 1;
inline void AbilityGadgetInfo::clear_camp_id() {
  camp_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityGadgetInfo::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.camp_id)
  return camp_id_;
}
inline void AbilityGadgetInfo::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.camp_id)
}

// uint32 camp_target_type = 2;
inline void AbilityGadgetInfo::clear_camp_target_type() {
  camp_target_type_ = 0u;
}
inline ::google::protobuf::uint32 AbilityGadgetInfo::camp_target_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.camp_target_type)
  return camp_target_type_;
}
inline void AbilityGadgetInfo::set_camp_target_type(::google::protobuf::uint32 value) {
  
  camp_target_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.camp_target_type)
}

// uint32 target_entity_id = 3;
inline void AbilityGadgetInfo::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityGadgetInfo::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.target_entity_id)
  return target_entity_id_;
}
inline void AbilityGadgetInfo::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.target_entity_id)
}

// -------------------------------------------------------------------

// GatherGadgetInfo

// uint32 item_id = 1;
inline void GatherGadgetInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 GatherGadgetInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.GatherGadgetInfo.item_id)
  return item_id_;
}
inline void GatherGadgetInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GatherGadgetInfo.item_id)
}

// bool is_forbid_guest = 2;
inline void GatherGadgetInfo::clear_is_forbid_guest() {
  is_forbid_guest_ = false;
}
inline bool GatherGadgetInfo::is_forbid_guest() const {
  // @@protoc_insertion_point(field_get:proto.GatherGadgetInfo.is_forbid_guest)
  return is_forbid_guest_;
}
inline void GatherGadgetInfo::set_is_forbid_guest(bool value) {
  
  is_forbid_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GatherGadgetInfo.is_forbid_guest)
}

// -------------------------------------------------------------------

// StatueGadgetInfo

// repeated uint32 opened_statue_uid_list = 1;
inline int StatueGadgetInfo::opened_statue_uid_list_size() const {
  return opened_statue_uid_list_.size();
}
inline void StatueGadgetInfo::clear_opened_statue_uid_list() {
  opened_statue_uid_list_.Clear();
}
inline ::google::protobuf::uint32 StatueGadgetInfo::opened_statue_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.StatueGadgetInfo.opened_statue_uid_list)
  return opened_statue_uid_list_.Get(index);
}
inline void StatueGadgetInfo::set_opened_statue_uid_list(int index, ::google::protobuf::uint32 value) {
  opened_statue_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.StatueGadgetInfo.opened_statue_uid_list)
}
inline void StatueGadgetInfo::add_opened_statue_uid_list(::google::protobuf::uint32 value) {
  opened_statue_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.StatueGadgetInfo.opened_statue_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StatueGadgetInfo::opened_statue_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.StatueGadgetInfo.opened_statue_uid_list)
  return opened_statue_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StatueGadgetInfo::mutable_opened_statue_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.StatueGadgetInfo.opened_statue_uid_list)
  return &opened_statue_uid_list_;
}

// -------------------------------------------------------------------

// WeeklyBossResinDiscountInfo

// uint32 discount_num = 1;
inline void WeeklyBossResinDiscountInfo::clear_discount_num() {
  discount_num_ = 0u;
}
inline ::google::protobuf::uint32 WeeklyBossResinDiscountInfo::discount_num() const {
  // @@protoc_insertion_point(field_get:proto.WeeklyBossResinDiscountInfo.discount_num)
  return discount_num_;
}
inline void WeeklyBossResinDiscountInfo::set_discount_num(::google::protobuf::uint32 value) {
  
  discount_num_ = value;
  // @@protoc_insertion_point(field_set:proto.WeeklyBossResinDiscountInfo.discount_num)
}

// uint32 discount_num_limit = 2;
inline void WeeklyBossResinDiscountInfo::clear_discount_num_limit() {
  discount_num_limit_ = 0u;
}
inline ::google::protobuf::uint32 WeeklyBossResinDiscountInfo::discount_num_limit() const {
  // @@protoc_insertion_point(field_get:proto.WeeklyBossResinDiscountInfo.discount_num_limit)
  return discount_num_limit_;
}
inline void WeeklyBossResinDiscountInfo::set_discount_num_limit(::google::protobuf::uint32 value) {
  
  discount_num_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.WeeklyBossResinDiscountInfo.discount_num_limit)
}

// uint32 resin_cost = 3;
inline void WeeklyBossResinDiscountInfo::clear_resin_cost() {
  resin_cost_ = 0u;
}
inline ::google::protobuf::uint32 WeeklyBossResinDiscountInfo::resin_cost() const {
  // @@protoc_insertion_point(field_get:proto.WeeklyBossResinDiscountInfo.resin_cost)
  return resin_cost_;
}
inline void WeeklyBossResinDiscountInfo::set_resin_cost(::google::protobuf::uint32 value) {
  
  resin_cost_ = value;
  // @@protoc_insertion_point(field_set:proto.WeeklyBossResinDiscountInfo.resin_cost)
}

// uint32 original_resin_cost = 4;
inline void WeeklyBossResinDiscountInfo::clear_original_resin_cost() {
  original_resin_cost_ = 0u;
}
inline ::google::protobuf::uint32 WeeklyBossResinDiscountInfo::original_resin_cost() const {
  // @@protoc_insertion_point(field_get:proto.WeeklyBossResinDiscountInfo.original_resin_cost)
  return original_resin_cost_;
}
inline void WeeklyBossResinDiscountInfo::set_original_resin_cost(::google::protobuf::uint32 value) {
  
  original_resin_cost_ = value;
  // @@protoc_insertion_point(field_set:proto.WeeklyBossResinDiscountInfo.original_resin_cost)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BossChestInfo

// uint32 monster_config_id = 1;
inline void BossChestInfo::clear_monster_config_id() {
  monster_config_id_ = 0u;
}
inline ::google::protobuf::uint32 BossChestInfo::monster_config_id() const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.monster_config_id)
  return monster_config_id_;
}
inline void BossChestInfo::set_monster_config_id(::google::protobuf::uint32 value) {
  
  monster_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.monster_config_id)
}

// uint32 resin = 2;
inline void BossChestInfo::clear_resin() {
  resin_ = 0u;
}
inline ::google::protobuf::uint32 BossChestInfo::resin() const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.resin)
  return resin_;
}
inline void BossChestInfo::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.resin)
}

// repeated uint32 remain_uid_list = 3;
inline int BossChestInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void BossChestInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossChestInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void BossChestInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.remain_uid_list)
}
inline void BossChestInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestInfo.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestInfo.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestInfo.remain_uid_list)
  return &remain_uid_list_;
}

// repeated uint32 qualify_uid_list = 4;
inline int BossChestInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void BossChestInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossChestInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void BossChestInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.qualify_uid_list)
}
inline void BossChestInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestInfo.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestInfo.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

// map<uint32, .proto.WeeklyBossResinDiscountInfo> uid_discount_map = 5;
inline int BossChestInfo::uid_discount_map_size() const {
  return uid_discount_map_.size();
}
inline void BossChestInfo::clear_uid_discount_map() {
  uid_discount_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::WeeklyBossResinDiscountInfo >&
BossChestInfo::uid_discount_map() const {
  // @@protoc_insertion_point(field_map:proto.BossChestInfo.uid_discount_map)
  return uid_discount_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::WeeklyBossResinDiscountInfo >*
BossChestInfo::mutable_uid_discount_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BossChestInfo.uid_discount_map)
  return uid_discount_map_.MutableMap();
}

// -------------------------------------------------------------------

// BlossomChestInfo

// uint32 resin = 1;
inline void BlossomChestInfo::clear_resin() {
  resin_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestInfo::resin() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.resin)
  return resin_;
}
inline void BlossomChestInfo::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.resin)
}

// repeated uint32 qualify_uid_list = 2;
inline int BlossomChestInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void BlossomChestInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BlossomChestInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void BlossomChestInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.qualify_uid_list)
}
inline void BlossomChestInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestInfo.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestInfo.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

// repeated uint32 remain_uid_list = 3;
inline int BlossomChestInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void BlossomChestInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BlossomChestInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void BlossomChestInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.remain_uid_list)
}
inline void BlossomChestInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestInfo.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestInfo.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestInfo.remain_uid_list)
  return &remain_uid_list_;
}

// uint32 dead_time = 4;
inline void BlossomChestInfo::clear_dead_time() {
  dead_time_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestInfo::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.dead_time)
  return dead_time_;
}
inline void BlossomChestInfo::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.dead_time)
}

// uint32 blossom_refresh_type = 5;
inline void BlossomChestInfo::clear_blossom_refresh_type() {
  blossom_refresh_type_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestInfo::blossom_refresh_type() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.blossom_refresh_type)
  return blossom_refresh_type_;
}
inline void BlossomChestInfo::set_blossom_refresh_type(::google::protobuf::uint32 value) {
  
  blossom_refresh_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.blossom_refresh_type)
}

// uint32 refresh_id = 6;
inline void BlossomChestInfo::clear_refresh_id() {
  refresh_id_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestInfo::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.refresh_id)
  return refresh_id_;
}
inline void BlossomChestInfo::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.refresh_id)
}

// -------------------------------------------------------------------

// GadgetCrucibleInfo

// uint32 mp_play_id = 1;
inline void GadgetCrucibleInfo::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetCrucibleInfo::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetCrucibleInfo.mp_play_id)
  return mp_play_id_;
}
inline void GadgetCrucibleInfo::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetCrucibleInfo.mp_play_id)
}

// uint32 prepare_end_time = 2;
inline void GadgetCrucibleInfo::clear_prepare_end_time() {
  prepare_end_time_ = 0u;
}
inline ::google::protobuf::uint32 GadgetCrucibleInfo::prepare_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetCrucibleInfo.prepare_end_time)
  return prepare_end_time_;
}
inline void GadgetCrucibleInfo::set_prepare_end_time(::google::protobuf::uint32 value) {
  
  prepare_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetCrucibleInfo.prepare_end_time)
}

// -------------------------------------------------------------------

// GadgetPlayInfo

// uint32 play_type = 1;
inline void GadgetPlayInfo::clear_play_type() {
  play_type_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlayInfo::play_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayInfo.play_type)
  return play_type_;
}
inline void GadgetPlayInfo::set_play_type(::google::protobuf::uint32 value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayInfo.play_type)
}

// uint32 duration = 2;
inline void GadgetPlayInfo::clear_duration() {
  duration_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlayInfo::duration() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayInfo.duration)
  return duration_;
}
inline void GadgetPlayInfo::set_duration(::google::protobuf::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayInfo.duration)
}

// repeated uint32 progress_stage_list = 3;
inline int GadgetPlayInfo::progress_stage_list_size() const {
  return progress_stage_list_.size();
}
inline void GadgetPlayInfo::clear_progress_stage_list() {
  progress_stage_list_.Clear();
}
inline ::google::protobuf::uint32 GadgetPlayInfo::progress_stage_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayInfo.progress_stage_list)
  return progress_stage_list_.Get(index);
}
inline void GadgetPlayInfo::set_progress_stage_list(int index, ::google::protobuf::uint32 value) {
  progress_stage_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetPlayInfo.progress_stage_list)
}
inline void GadgetPlayInfo::add_progress_stage_list(::google::protobuf::uint32 value) {
  progress_stage_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetPlayInfo.progress_stage_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetPlayInfo::progress_stage_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetPlayInfo.progress_stage_list)
  return progress_stage_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetPlayInfo::mutable_progress_stage_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetPlayInfo.progress_stage_list)
  return &progress_stage_list_;
}

// uint32 start_cd = 4;
inline void GadgetPlayInfo::clear_start_cd() {
  start_cd_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlayInfo::start_cd() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayInfo.start_cd)
  return start_cd_;
}
inline void GadgetPlayInfo::set_start_cd(::google::protobuf::uint32 value) {
  
  start_cd_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayInfo.start_cd)
}

// uint32 start_time = 5;
inline void GadgetPlayInfo::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlayInfo::start_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayInfo.start_time)
  return start_time_;
}
inline void GadgetPlayInfo::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayInfo.start_time)
}

// uint32 progress = 6;
inline void GadgetPlayInfo::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 GadgetPlayInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayInfo.progress)
  return progress_;
}
inline void GadgetPlayInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayInfo.progress)
}

// .proto.GadgetCrucibleInfo crucible_info = 21;
inline bool GadgetPlayInfo::has_crucible_info() const {
  return play_info_case() == kCrucibleInfo;
}
inline void GadgetPlayInfo::set_has_crucible_info() {
  _oneof_case_[0] = kCrucibleInfo;
}
inline void GadgetPlayInfo::clear_crucible_info() {
  if (has_crucible_info()) {
    delete play_info_.crucible_info_;
    clear_has_play_info();
  }
}
inline  const ::proto::GadgetCrucibleInfo& GadgetPlayInfo::crucible_info() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayInfo.crucible_info)
  return has_crucible_info()
      ? *play_info_.crucible_info_
      : ::proto::GadgetCrucibleInfo::default_instance();
}
inline ::proto::GadgetCrucibleInfo* GadgetPlayInfo::mutable_crucible_info() {
  if (!has_crucible_info()) {
    clear_play_info();
    set_has_crucible_info();
    play_info_.crucible_info_ = new ::proto::GadgetCrucibleInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetPlayInfo.crucible_info)
  return play_info_.crucible_info_;
}
inline ::proto::GadgetCrucibleInfo* GadgetPlayInfo::release_crucible_info() {
  // @@protoc_insertion_point(field_release:proto.GadgetPlayInfo.crucible_info)
  if (has_crucible_info()) {
    clear_has_play_info();
    ::proto::GadgetCrucibleInfo* temp = play_info_.crucible_info_;
    play_info_.crucible_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GadgetPlayInfo::set_allocated_crucible_info(::proto::GadgetCrucibleInfo* crucible_info) {
  clear_play_info();
  if (crucible_info) {
    set_has_crucible_info();
    play_info_.crucible_info_ = crucible_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetPlayInfo.crucible_info)
}

inline bool GadgetPlayInfo::has_play_info() const {
  return play_info_case() != PLAY_INFO_NOT_SET;
}
inline void GadgetPlayInfo::clear_has_play_info() {
  _oneof_case_[0] = PLAY_INFO_NOT_SET;
}
inline GadgetPlayInfo::PlayInfoCase GadgetPlayInfo::play_info_case() const {
  return GadgetPlayInfo::PlayInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MpPlayRewardInfo

// uint32 resin = 1;
inline void MpPlayRewardInfo::clear_resin() {
  resin_ = 0u;
}
inline ::google::protobuf::uint32 MpPlayRewardInfo::resin() const {
  // @@protoc_insertion_point(field_get:proto.MpPlayRewardInfo.resin)
  return resin_;
}
inline void MpPlayRewardInfo::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.MpPlayRewardInfo.resin)
}

// repeated uint32 remain_uid_list = 2;
inline int MpPlayRewardInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void MpPlayRewardInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 MpPlayRewardInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MpPlayRewardInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void MpPlayRewardInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MpPlayRewardInfo.remain_uid_list)
}
inline void MpPlayRewardInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MpPlayRewardInfo.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MpPlayRewardInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.MpPlayRewardInfo.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MpPlayRewardInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MpPlayRewardInfo.remain_uid_list)
  return &remain_uid_list_;
}

// repeated uint32 qualify_uid_list = 3;
inline int MpPlayRewardInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void MpPlayRewardInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 MpPlayRewardInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MpPlayRewardInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void MpPlayRewardInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MpPlayRewardInfo.qualify_uid_list)
}
inline void MpPlayRewardInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MpPlayRewardInfo.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MpPlayRewardInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.MpPlayRewardInfo.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MpPlayRewardInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MpPlayRewardInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

// -------------------------------------------------------------------

// GadgetGeneralRewardInfo

// uint32 resin = 1;
inline void GadgetGeneralRewardInfo::clear_resin() {
  resin_ = 0u;
}
inline ::google::protobuf::uint32 GadgetGeneralRewardInfo::resin() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardInfo.resin)
  return resin_;
}
inline void GadgetGeneralRewardInfo::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardInfo.resin)
}

// uint32 dead_time = 2;
inline void GadgetGeneralRewardInfo::clear_dead_time() {
  dead_time_ = 0u;
}
inline ::google::protobuf::uint32 GadgetGeneralRewardInfo::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardInfo.dead_time)
  return dead_time_;
}
inline void GadgetGeneralRewardInfo::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardInfo.dead_time)
}

// repeated uint32 remain_uid_list = 3;
inline int GadgetGeneralRewardInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void GadgetGeneralRewardInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 GadgetGeneralRewardInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void GadgetGeneralRewardInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardInfo.remain_uid_list)
}
inline void GadgetGeneralRewardInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetGeneralRewardInfo.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetGeneralRewardInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetGeneralRewardInfo.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetGeneralRewardInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetGeneralRewardInfo.remain_uid_list)
  return &remain_uid_list_;
}

// repeated uint32 qualify_uid_list = 4;
inline int GadgetGeneralRewardInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void GadgetGeneralRewardInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 GadgetGeneralRewardInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void GadgetGeneralRewardInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardInfo.qualify_uid_list)
}
inline void GadgetGeneralRewardInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetGeneralRewardInfo.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetGeneralRewardInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetGeneralRewardInfo.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetGeneralRewardInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetGeneralRewardInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

// .proto.ItemParam item_param = 5;
inline bool GadgetGeneralRewardInfo::has_item_param() const {
  return this != internal_default_instance() && item_param_ != NULL;
}
inline void GadgetGeneralRewardInfo::clear_item_param() {
  if (GetArenaNoVirtual() == NULL && item_param_ != NULL) delete item_param_;
  item_param_ = NULL;
}
inline const ::proto::ItemParam& GadgetGeneralRewardInfo::item_param() const {
  const ::proto::ItemParam* p = item_param_;
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardInfo.item_param)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ItemParam*>(
      &::proto::_ItemParam_default_instance_);
}
inline ::proto::ItemParam* GadgetGeneralRewardInfo::mutable_item_param() {
  
  if (item_param_ == NULL) {
    item_param_ = new ::proto::ItemParam;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetGeneralRewardInfo.item_param)
  return item_param_;
}
inline ::proto::ItemParam* GadgetGeneralRewardInfo::release_item_param() {
  // @@protoc_insertion_point(field_release:proto.GadgetGeneralRewardInfo.item_param)
  
  ::proto::ItemParam* temp = item_param_;
  item_param_ = NULL;
  return temp;
}
inline void GadgetGeneralRewardInfo::set_allocated_item_param(::proto::ItemParam* item_param) {
  delete item_param_;
  item_param_ = item_param;
  if (item_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetGeneralRewardInfo.item_param)
}

// -------------------------------------------------------------------

// OfferingInfo

// uint32 offering_id = 1;
inline void OfferingInfo::clear_offering_id() {
  offering_id_ = 0u;
}
inline ::google::protobuf::uint32 OfferingInfo::offering_id() const {
  // @@protoc_insertion_point(field_get:proto.OfferingInfo.offering_id)
  return offering_id_;
}
inline void OfferingInfo::set_offering_id(::google::protobuf::uint32 value) {
  
  offering_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfferingInfo.offering_id)
}

// -------------------------------------------------------------------

// BuildingInfo

// uint32 building_id = 1;
inline void BuildingInfo::clear_building_id() {
  building_id_ = 0u;
}
inline ::google::protobuf::uint32 BuildingInfo::building_id() const {
  // @@protoc_insertion_point(field_get:proto.BuildingInfo.building_id)
  return building_id_;
}
inline void BuildingInfo::set_building_id(::google::protobuf::uint32 value) {
  
  building_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BuildingInfo.building_id)
}

// uint32 point_config_id = 2;
inline void BuildingInfo::clear_point_config_id() {
  point_config_id_ = 0u;
}
inline ::google::protobuf::uint32 BuildingInfo::point_config_id() const {
  // @@protoc_insertion_point(field_get:proto.BuildingInfo.point_config_id)
  return point_config_id_;
}
inline void BuildingInfo::set_point_config_id(::google::protobuf::uint32 value) {
  
  point_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BuildingInfo.point_config_id)
}

// uint32 cost = 3;
inline void BuildingInfo::clear_cost() {
  cost_ = 0u;
}
inline ::google::protobuf::uint32 BuildingInfo::cost() const {
  // @@protoc_insertion_point(field_get:proto.BuildingInfo.cost)
  return cost_;
}
inline void BuildingInfo::set_cost(::google::protobuf::uint32 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:proto.BuildingInfo.cost)
}

// uint32 refund = 5;
inline void BuildingInfo::clear_refund() {
  refund_ = 0u;
}
inline ::google::protobuf::uint32 BuildingInfo::refund() const {
  // @@protoc_insertion_point(field_get:proto.BuildingInfo.refund)
  return refund_;
}
inline void BuildingInfo::set_refund(::google::protobuf::uint32 value) {
  
  refund_ = value;
  // @@protoc_insertion_point(field_set:proto.BuildingInfo.refund)
}

// uint32 owner_uid = 6;
inline void BuildingInfo::clear_owner_uid() {
  owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 BuildingInfo::owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.BuildingInfo.owner_uid)
  return owner_uid_;
}
inline void BuildingInfo::set_owner_uid(::google::protobuf::uint32 value) {
  
  owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BuildingInfo.owner_uid)
}

// uint32 current_num = 7;
inline void BuildingInfo::clear_current_num() {
  current_num_ = 0u;
}
inline ::google::protobuf::uint32 BuildingInfo::current_num() const {
  // @@protoc_insertion_point(field_get:proto.BuildingInfo.current_num)
  return current_num_;
}
inline void BuildingInfo::set_current_num(::google::protobuf::uint32 value) {
  
  current_num_ = value;
  // @@protoc_insertion_point(field_set:proto.BuildingInfo.current_num)
}

// uint32 max_num = 8;
inline void BuildingInfo::clear_max_num() {
  max_num_ = 0u;
}
inline ::google::protobuf::uint32 BuildingInfo::max_num() const {
  // @@protoc_insertion_point(field_get:proto.BuildingInfo.max_num)
  return max_num_;
}
inline void BuildingInfo::set_max_num(::google::protobuf::uint32 value) {
  
  max_num_ = value;
  // @@protoc_insertion_point(field_set:proto.BuildingInfo.max_num)
}

// -------------------------------------------------------------------

// FoundationInfo

// .proto.FoundationStatus status = 1;
inline void FoundationInfo::clear_status() {
  status_ = 0;
}
inline ::proto::FoundationStatus FoundationInfo::status() const {
  // @@protoc_insertion_point(field_get:proto.FoundationInfo.status)
  return static_cast< ::proto::FoundationStatus >(status_);
}
inline void FoundationInfo::set_status(::proto::FoundationStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationInfo.status)
}

// repeated uint32 uid_list = 2;
inline int FoundationInfo::uid_list_size() const {
  return uid_list_.size();
}
inline void FoundationInfo::clear_uid_list() {
  uid_list_.Clear();
}
inline ::google::protobuf::uint32 FoundationInfo::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FoundationInfo.uid_list)
  return uid_list_.Get(index);
}
inline void FoundationInfo::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FoundationInfo.uid_list)
}
inline void FoundationInfo::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FoundationInfo.uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FoundationInfo::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.FoundationInfo.uid_list)
  return uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FoundationInfo::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FoundationInfo.uid_list)
  return &uid_list_;
}

// uint32 current_building_id = 3;
inline void FoundationInfo::clear_current_building_id() {
  current_building_id_ = 0u;
}
inline ::google::protobuf::uint32 FoundationInfo::current_building_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationInfo.current_building_id)
  return current_building_id_;
}
inline void FoundationInfo::set_current_building_id(::google::protobuf::uint32 value) {
  
  current_building_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationInfo.current_building_id)
}

// uint32 locked_by_uid = 4;
inline void FoundationInfo::clear_locked_by_uid() {
  locked_by_uid_ = 0u;
}
inline ::google::protobuf::uint32 FoundationInfo::locked_by_uid() const {
  // @@protoc_insertion_point(field_get:proto.FoundationInfo.locked_by_uid)
  return locked_by_uid_;
}
inline void FoundationInfo::set_locked_by_uid(::google::protobuf::uint32 value) {
  
  locked_by_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationInfo.locked_by_uid)
}

// -------------------------------------------------------------------

// VehicleMember

// uint32 uid = 1;
inline void VehicleMember::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleMember::uid() const {
  // @@protoc_insertion_point(field_get:proto.VehicleMember.uid)
  return uid_;
}
inline void VehicleMember::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleMember.uid)
}

// uint64 avatar_guid = 2;
inline void VehicleMember::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VehicleMember::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.VehicleMember.avatar_guid)
  return avatar_guid_;
}
inline void VehicleMember::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleMember.avatar_guid)
}

// uint32 pos = 3;
inline void VehicleMember::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 VehicleMember::pos() const {
  // @@protoc_insertion_point(field_get:proto.VehicleMember.pos)
  return pos_;
}
inline void VehicleMember::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleMember.pos)
}

// -------------------------------------------------------------------

// VehicleInfo

// repeated .proto.VehicleMember member_list = 1;
inline int VehicleInfo::member_list_size() const {
  return member_list_.size();
}
inline void VehicleInfo::clear_member_list() {
  member_list_.Clear();
}
inline const ::proto::VehicleMember& VehicleInfo::member_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.VehicleInfo.member_list)
  return member_list_.Get(index);
}
inline ::proto::VehicleMember* VehicleInfo::mutable_member_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.VehicleInfo.member_list)
  return member_list_.Mutable(index);
}
inline ::proto::VehicleMember* VehicleInfo::add_member_list() {
  // @@protoc_insertion_point(field_add:proto.VehicleInfo.member_list)
  return member_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::VehicleMember >*
VehicleInfo::mutable_member_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.VehicleInfo.member_list)
  return &member_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::VehicleMember >&
VehicleInfo::member_list() const {
  // @@protoc_insertion_point(field_list:proto.VehicleInfo.member_list)
  return member_list_;
}

// uint32 owner_uid = 2;
inline void VehicleInfo::clear_owner_uid() {
  owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 VehicleInfo::owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInfo.owner_uid)
  return owner_uid_;
}
inline void VehicleInfo::set_owner_uid(::google::protobuf::uint32 value) {
  
  owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInfo.owner_uid)
}

// float cur_stamina = 3;
inline void VehicleInfo::clear_cur_stamina() {
  cur_stamina_ = 0;
}
inline float VehicleInfo::cur_stamina() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInfo.cur_stamina)
  return cur_stamina_;
}
inline void VehicleInfo::set_cur_stamina(float value) {
  
  cur_stamina_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInfo.cur_stamina)
}

// -------------------------------------------------------------------

// EchoShellInfo

// uint32 shell_id = 1;
inline void EchoShellInfo::clear_shell_id() {
  shell_id_ = 0u;
}
inline ::google::protobuf::uint32 EchoShellInfo::shell_id() const {
  // @@protoc_insertion_point(field_get:proto.EchoShellInfo.shell_id)
  return shell_id_;
}
inline void EchoShellInfo::set_shell_id(::google::protobuf::uint32 value) {
  
  shell_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EchoShellInfo.shell_id)
}

// -------------------------------------------------------------------

// ScreenInfo

// uint32 live_id = 1;
inline void ScreenInfo::clear_live_id() {
  live_id_ = 0u;
}
inline ::google::protobuf::uint32 ScreenInfo::live_id() const {
  // @@protoc_insertion_point(field_get:proto.ScreenInfo.live_id)
  return live_id_;
}
inline void ScreenInfo::set_live_id(::google::protobuf::uint32 value) {
  
  live_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScreenInfo.live_id)
}

// uint32 projector_entity_id = 2;
inline void ScreenInfo::clear_projector_entity_id() {
  projector_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ScreenInfo::projector_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ScreenInfo.projector_entity_id)
  return projector_entity_id_;
}
inline void ScreenInfo::set_projector_entity_id(::google::protobuf::uint32 value) {
  
  projector_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScreenInfo.projector_entity_id)
}

// -------------------------------------------------------------------

// FishPoolInfo

// uint32 pool_id = 1;
inline void FishPoolInfo::clear_pool_id() {
  pool_id_ = 0u;
}
inline ::google::protobuf::uint32 FishPoolInfo::pool_id() const {
  // @@protoc_insertion_point(field_get:proto.FishPoolInfo.pool_id)
  return pool_id_;
}
inline void FishPoolInfo::set_pool_id(::google::protobuf::uint32 value) {
  
  pool_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FishPoolInfo.pool_id)
}

// repeated uint32 fish_area_list = 2;
inline int FishPoolInfo::fish_area_list_size() const {
  return fish_area_list_.size();
}
inline void FishPoolInfo::clear_fish_area_list() {
  fish_area_list_.Clear();
}
inline ::google::protobuf::uint32 FishPoolInfo::fish_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FishPoolInfo.fish_area_list)
  return fish_area_list_.Get(index);
}
inline void FishPoolInfo::set_fish_area_list(int index, ::google::protobuf::uint32 value) {
  fish_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FishPoolInfo.fish_area_list)
}
inline void FishPoolInfo::add_fish_area_list(::google::protobuf::uint32 value) {
  fish_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FishPoolInfo.fish_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FishPoolInfo::fish_area_list() const {
  // @@protoc_insertion_point(field_list:proto.FishPoolInfo.fish_area_list)
  return fish_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FishPoolInfo::mutable_fish_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FishPoolInfo.fish_area_list)
  return &fish_area_list_;
}

// uint32 today_fish_num = 3;
inline void FishPoolInfo::clear_today_fish_num() {
  today_fish_num_ = 0u;
}
inline ::google::protobuf::uint32 FishPoolInfo::today_fish_num() const {
  // @@protoc_insertion_point(field_get:proto.FishPoolInfo.today_fish_num)
  return today_fish_num_;
}
inline void FishPoolInfo::set_today_fish_num(::google::protobuf::uint32 value) {
  
  today_fish_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FishPoolInfo.today_fish_num)
}

// -------------------------------------------------------------------

// CustomCommonNodeInfo

// int32 parent_index = 1;
inline void CustomCommonNodeInfo::clear_parent_index() {
  parent_index_ = 0;
}
inline ::google::protobuf::int32 CustomCommonNodeInfo::parent_index() const {
  // @@protoc_insertion_point(field_get:proto.CustomCommonNodeInfo.parent_index)
  return parent_index_;
}
inline void CustomCommonNodeInfo::set_parent_index(::google::protobuf::int32 value) {
  
  parent_index_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomCommonNodeInfo.parent_index)
}

// uint32 config_id = 2;
inline void CustomCommonNodeInfo::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 CustomCommonNodeInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomCommonNodeInfo.config_id)
  return config_id_;
}
inline void CustomCommonNodeInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomCommonNodeInfo.config_id)
}

// string slot_identifier = 3;
inline void CustomCommonNodeInfo::clear_slot_identifier() {
  slot_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomCommonNodeInfo::slot_identifier() const {
  // @@protoc_insertion_point(field_get:proto.CustomCommonNodeInfo.slot_identifier)
  return slot_identifier_.GetNoArena();
}
inline void CustomCommonNodeInfo::set_slot_identifier(const ::std::string& value) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CustomCommonNodeInfo.slot_identifier)
}
#if LANG_CXX11
inline void CustomCommonNodeInfo::set_slot_identifier(::std::string&& value) {
  
  slot_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CustomCommonNodeInfo.slot_identifier)
}
#endif
inline void CustomCommonNodeInfo::set_slot_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CustomCommonNodeInfo.slot_identifier)
}
inline void CustomCommonNodeInfo::set_slot_identifier(const char* value, size_t size) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CustomCommonNodeInfo.slot_identifier)
}
inline ::std::string* CustomCommonNodeInfo::mutable_slot_identifier() {
  
  // @@protoc_insertion_point(field_mutable:proto.CustomCommonNodeInfo.slot_identifier)
  return slot_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomCommonNodeInfo::release_slot_identifier() {
  // @@protoc_insertion_point(field_release:proto.CustomCommonNodeInfo.slot_identifier)
  
  return slot_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomCommonNodeInfo::set_allocated_slot_identifier(::std::string* slot_identifier) {
  if (slot_identifier != NULL) {
    
  } else {
    
  }
  slot_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slot_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.CustomCommonNodeInfo.slot_identifier)
}

// -------------------------------------------------------------------

// CustomGadgetTreeInfo

// repeated .proto.CustomCommonNodeInfo node_list = 1;
inline int CustomGadgetTreeInfo::node_list_size() const {
  return node_list_.size();
}
inline void CustomGadgetTreeInfo::clear_node_list() {
  node_list_.Clear();
}
inline const ::proto::CustomCommonNodeInfo& CustomGadgetTreeInfo::node_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetTreeInfo.node_list)
  return node_list_.Get(index);
}
inline ::proto::CustomCommonNodeInfo* CustomGadgetTreeInfo::mutable_node_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CustomGadgetTreeInfo.node_list)
  return node_list_.Mutable(index);
}
inline ::proto::CustomCommonNodeInfo* CustomGadgetTreeInfo::add_node_list() {
  // @@protoc_insertion_point(field_add:proto.CustomGadgetTreeInfo.node_list)
  return node_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CustomCommonNodeInfo >*
CustomGadgetTreeInfo::mutable_node_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CustomGadgetTreeInfo.node_list)
  return &node_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CustomCommonNodeInfo >&
CustomGadgetTreeInfo::node_list() const {
  // @@protoc_insertion_point(field_list:proto.CustomGadgetTreeInfo.node_list)
  return node_list_;
}

// -------------------------------------------------------------------

// RoguelikeGadgetInfo

// uint32 cell_config_id = 1;
inline void RoguelikeGadgetInfo::clear_cell_config_id() {
  cell_config_id_ = 0u;
}
inline ::google::protobuf::uint32 RoguelikeGadgetInfo::cell_config_id() const {
  // @@protoc_insertion_point(field_get:proto.RoguelikeGadgetInfo.cell_config_id)
  return cell_config_id_;
}
inline void RoguelikeGadgetInfo::set_cell_config_id(::google::protobuf::uint32 value) {
  
  cell_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RoguelikeGadgetInfo.cell_config_id)
}

// uint32 cell_type = 2;
inline void RoguelikeGadgetInfo::clear_cell_type() {
  cell_type_ = 0u;
}
inline ::google::protobuf::uint32 RoguelikeGadgetInfo::cell_type() const {
  // @@protoc_insertion_point(field_get:proto.RoguelikeGadgetInfo.cell_type)
  return cell_type_;
}
inline void RoguelikeGadgetInfo::set_cell_type(::google::protobuf::uint32 value) {
  
  cell_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RoguelikeGadgetInfo.cell_type)
}

// uint32 cell_state = 3;
inline void RoguelikeGadgetInfo::clear_cell_state() {
  cell_state_ = 0u;
}
inline ::google::protobuf::uint32 RoguelikeGadgetInfo::cell_state() const {
  // @@protoc_insertion_point(field_get:proto.RoguelikeGadgetInfo.cell_state)
  return cell_state_;
}
inline void RoguelikeGadgetInfo::set_cell_state(::google::protobuf::uint32 value) {
  
  cell_state_ = value;
  // @@protoc_insertion_point(field_set:proto.RoguelikeGadgetInfo.cell_state)
}

// uint32 cell_id = 4;
inline void RoguelikeGadgetInfo::clear_cell_id() {
  cell_id_ = 0u;
}
inline ::google::protobuf::uint32 RoguelikeGadgetInfo::cell_id() const {
  // @@protoc_insertion_point(field_get:proto.RoguelikeGadgetInfo.cell_id)
  return cell_id_;
}
inline void RoguelikeGadgetInfo::set_cell_id(::google::protobuf::uint32 value) {
  
  cell_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RoguelikeGadgetInfo.cell_id)
}

// -------------------------------------------------------------------

// NightCrowGadgetInfo

// repeated uint32 argument_list = 1;
inline int NightCrowGadgetInfo::argument_list_size() const {
  return argument_list_.size();
}
inline void NightCrowGadgetInfo::clear_argument_list() {
  argument_list_.Clear();
}
inline ::google::protobuf::uint32 NightCrowGadgetInfo::argument_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.NightCrowGadgetInfo.argument_list)
  return argument_list_.Get(index);
}
inline void NightCrowGadgetInfo::set_argument_list(int index, ::google::protobuf::uint32 value) {
  argument_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.NightCrowGadgetInfo.argument_list)
}
inline void NightCrowGadgetInfo::add_argument_list(::google::protobuf::uint32 value) {
  argument_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.NightCrowGadgetInfo.argument_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NightCrowGadgetInfo::argument_list() const {
  // @@protoc_insertion_point(field_list:proto.NightCrowGadgetInfo.argument_list)
  return argument_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NightCrowGadgetInfo::mutable_argument_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.NightCrowGadgetInfo.argument_list)
  return &argument_list_;
}

// -------------------------------------------------------------------

// DeshretObeliskGadgetInfo

// repeated uint32 argument_list = 1;
inline int DeshretObeliskGadgetInfo::argument_list_size() const {
  return argument_list_.size();
}
inline void DeshretObeliskGadgetInfo::clear_argument_list() {
  argument_list_.Clear();
}
inline ::google::protobuf::uint32 DeshretObeliskGadgetInfo::argument_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DeshretObeliskGadgetInfo.argument_list)
  return argument_list_.Get(index);
}
inline void DeshretObeliskGadgetInfo::set_argument_list(int index, ::google::protobuf::uint32 value) {
  argument_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DeshretObeliskGadgetInfo.argument_list)
}
inline void DeshretObeliskGadgetInfo::add_argument_list(::google::protobuf::uint32 value) {
  argument_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DeshretObeliskGadgetInfo.argument_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DeshretObeliskGadgetInfo::argument_list() const {
  // @@protoc_insertion_point(field_list:proto.DeshretObeliskGadgetInfo.argument_list)
  return argument_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DeshretObeliskGadgetInfo::mutable_argument_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DeshretObeliskGadgetInfo.argument_list)
  return &argument_list_;
}

// -------------------------------------------------------------------

// CoinCollectOperatorInfo

// uint32 level_id = 1;
inline void CoinCollectOperatorInfo::clear_level_id() {
  level_id_ = 0u;
}
inline ::google::protobuf::uint32 CoinCollectOperatorInfo::level_id() const {
  // @@protoc_insertion_point(field_get:proto.CoinCollectOperatorInfo.level_id)
  return level_id_;
}
inline void CoinCollectOperatorInfo::set_level_id(::google::protobuf::uint32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CoinCollectOperatorInfo.level_id)
}

// -------------------------------------------------------------------

// SceneGadgetInfo

// uint32 gadget_id = 1;
inline void SceneGadgetInfo::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_id)
  return gadget_id_;
}
inline void SceneGadgetInfo::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_id)
}

// uint32 group_id = 2;
inline void SceneGadgetInfo::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::group_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.group_id)
  return group_id_;
}
inline void SceneGadgetInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.group_id)
}

// uint32 config_id = 3;
inline void SceneGadgetInfo::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.config_id)
  return config_id_;
}
inline void SceneGadgetInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.config_id)
}

// uint32 owner_entity_id = 4;
inline void SceneGadgetInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.owner_entity_id)
  return owner_entity_id_;
}
inline void SceneGadgetInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.owner_entity_id)
}

// .proto.GadgetBornType born_type = 5;
inline void SceneGadgetInfo::clear_born_type() {
  born_type_ = 0;
}
inline ::proto::GadgetBornType SceneGadgetInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.born_type)
  return static_cast< ::proto::GadgetBornType >(born_type_);
}
inline void SceneGadgetInfo::set_born_type(::proto::GadgetBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.born_type)
}

// uint32 gadget_state = 6;
inline void SceneGadgetInfo::clear_gadget_state() {
  gadget_state_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_state)
  return gadget_state_;
}
inline void SceneGadgetInfo::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_state)
}

// uint32 gadget_type = 7;
inline void SceneGadgetInfo::clear_gadget_type() {
  gadget_type_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::gadget_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_type)
  return gadget_type_;
}
inline void SceneGadgetInfo::set_gadget_type(::google::protobuf::uint32 value) {
  
  gadget_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_type)
}

// bool is_show_cutscene = 8;
inline void SceneGadgetInfo::clear_is_show_cutscene() {
  is_show_cutscene_ = false;
}
inline bool SceneGadgetInfo::is_show_cutscene() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.is_show_cutscene)
  return is_show_cutscene_;
}
inline void SceneGadgetInfo::set_is_show_cutscene(bool value) {
  
  is_show_cutscene_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.is_show_cutscene)
}

// uint32 authority_peer_id = 9;
inline void SceneGadgetInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void SceneGadgetInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.authority_peer_id)
}

// bool is_enable_interact = 10;
inline void SceneGadgetInfo::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
inline bool SceneGadgetInfo::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.is_enable_interact)
  return is_enable_interact_;
}
inline void SceneGadgetInfo::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.is_enable_interact)
}

// uint32 interact_id = 11;
inline void SceneGadgetInfo::clear_interact_id() {
  interact_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::interact_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.interact_id)
  return interact_id_;
}
inline void SceneGadgetInfo::set_interact_id(::google::protobuf::uint32 value) {
  
  interact_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.interact_id)
}

// uint32 mark_flag = 21;
inline void SceneGadgetInfo::clear_mark_flag() {
  mark_flag_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::mark_flag() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.mark_flag)
  return mark_flag_;
}
inline void SceneGadgetInfo::set_mark_flag(::google::protobuf::uint32 value) {
  
  mark_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.mark_flag)
}

// uint32 prop_owner_entity_id = 22;
inline void SceneGadgetInfo::clear_prop_owner_entity_id() {
  prop_owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::prop_owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.prop_owner_entity_id)
  return prop_owner_entity_id_;
}
inline void SceneGadgetInfo::set_prop_owner_entity_id(::google::protobuf::uint32 value) {
  
  prop_owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.prop_owner_entity_id)
}

// .proto.PlatformInfo platform = 23;
inline bool SceneGadgetInfo::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
inline void SceneGadgetInfo::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
inline const ::proto::PlatformInfo& SceneGadgetInfo::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
inline ::proto::PlatformInfo* SceneGadgetInfo::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.platform)
  return platform_;
}
inline ::proto::PlatformInfo* SceneGadgetInfo::release_platform() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline void SceneGadgetInfo::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.platform)
}

// repeated uint32 interact_uid_list = 24;
inline int SceneGadgetInfo::interact_uid_list_size() const {
  return interact_uid_list_.size();
}
inline void SceneGadgetInfo::clear_interact_uid_list() {
  interact_uid_list_.Clear();
}
inline ::google::protobuf::uint32 SceneGadgetInfo::interact_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.interact_uid_list)
  return interact_uid_list_.Get(index);
}
inline void SceneGadgetInfo::set_interact_uid_list(int index, ::google::protobuf::uint32 value) {
  interact_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.interact_uid_list)
}
inline void SceneGadgetInfo::add_interact_uid_list(::google::protobuf::uint32 value) {
  interact_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneGadgetInfo.interact_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneGadgetInfo::interact_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneGadgetInfo.interact_uid_list)
  return interact_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneGadgetInfo::mutable_interact_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneGadgetInfo.interact_uid_list)
  return &interact_uid_list_;
}

// uint32 draft_id = 25;
inline void SceneGadgetInfo::clear_draft_id() {
  draft_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::draft_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.draft_id)
  return draft_id_;
}
inline void SceneGadgetInfo::set_draft_id(::google::protobuf::uint32 value) {
  
  draft_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.draft_id)
}

// uint32 gadget_talk_state = 26;
inline void SceneGadgetInfo::clear_gadget_talk_state() {
  gadget_talk_state_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::gadget_talk_state() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_talk_state)
  return gadget_talk_state_;
}
inline void SceneGadgetInfo::set_gadget_talk_state(::google::protobuf::uint32 value) {
  
  gadget_talk_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_talk_state)
}

// .proto.GadgetPlayInfo play_info = 100;
inline bool SceneGadgetInfo::has_play_info() const {
  return this != internal_default_instance() && play_info_ != NULL;
}
inline void SceneGadgetInfo::clear_play_info() {
  if (GetArenaNoVirtual() == NULL && play_info_ != NULL) delete play_info_;
  play_info_ = NULL;
}
inline const ::proto::GadgetPlayInfo& SceneGadgetInfo::play_info() const {
  const ::proto::GadgetPlayInfo* p = play_info_;
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.play_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GadgetPlayInfo*>(
      &::proto::_GadgetPlayInfo_default_instance_);
}
inline ::proto::GadgetPlayInfo* SceneGadgetInfo::mutable_play_info() {
  
  if (play_info_ == NULL) {
    play_info_ = new ::proto::GadgetPlayInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.play_info)
  return play_info_;
}
inline ::proto::GadgetPlayInfo* SceneGadgetInfo::release_play_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.play_info)
  
  ::proto::GadgetPlayInfo* temp = play_info_;
  play_info_ = NULL;
  return temp;
}
inline void SceneGadgetInfo::set_allocated_play_info(::proto::GadgetPlayInfo* play_info) {
  delete play_info_;
  play_info_ = play_info;
  if (play_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.play_info)
}

// .proto.Item trifle_item = 12;
inline bool SceneGadgetInfo::has_trifle_item() const {
  return content_case() == kTrifleItem;
}
inline void SceneGadgetInfo::set_has_trifle_item() {
  _oneof_case_[0] = kTrifleItem;
}
inline void SceneGadgetInfo::clear_trifle_item() {
  if (has_trifle_item()) {
    delete content_.trifle_item_;
    clear_has_content();
  }
}
inline  const ::proto::Item& SceneGadgetInfo::trifle_item() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.trifle_item)
  return has_trifle_item()
      ? *content_.trifle_item_
      : ::proto::Item::default_instance();
}
inline ::proto::Item* SceneGadgetInfo::mutable_trifle_item() {
  if (!has_trifle_item()) {
    clear_content();
    set_has_trifle_item();
    content_.trifle_item_ = new ::proto::Item;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.trifle_item)
  return content_.trifle_item_;
}
inline ::proto::Item* SceneGadgetInfo::release_trifle_item() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.trifle_item)
  if (has_trifle_item()) {
    clear_has_content();
    ::proto::Item* temp = content_.trifle_item_;
    content_.trifle_item_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_trifle_item(::proto::Item* trifle_item) {
  clear_content();
  if (trifle_item) {
    set_has_trifle_item();
    content_.trifle_item_ = trifle_item;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.trifle_item)
}

// .proto.GatherGadgetInfo gather_gadget = 13;
inline bool SceneGadgetInfo::has_gather_gadget() const {
  return content_case() == kGatherGadget;
}
inline void SceneGadgetInfo::set_has_gather_gadget() {
  _oneof_case_[0] = kGatherGadget;
}
inline void SceneGadgetInfo::clear_gather_gadget() {
  if (has_gather_gadget()) {
    delete content_.gather_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::GatherGadgetInfo& SceneGadgetInfo::gather_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gather_gadget)
  return has_gather_gadget()
      ? *content_.gather_gadget_
      : ::proto::GatherGadgetInfo::default_instance();
}
inline ::proto::GatherGadgetInfo* SceneGadgetInfo::mutable_gather_gadget() {
  if (!has_gather_gadget()) {
    clear_content();
    set_has_gather_gadget();
    content_.gather_gadget_ = new ::proto::GatherGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.gather_gadget)
  return content_.gather_gadget_;
}
inline ::proto::GatherGadgetInfo* SceneGadgetInfo::release_gather_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.gather_gadget)
  if (has_gather_gadget()) {
    clear_has_content();
    ::proto::GatherGadgetInfo* temp = content_.gather_gadget_;
    content_.gather_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_gather_gadget(::proto::GatherGadgetInfo* gather_gadget) {
  clear_content();
  if (gather_gadget) {
    set_has_gather_gadget();
    content_.gather_gadget_ = gather_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.gather_gadget)
}

// .proto.WorktopInfo worktop = 14;
inline bool SceneGadgetInfo::has_worktop() const {
  return content_case() == kWorktop;
}
inline void SceneGadgetInfo::set_has_worktop() {
  _oneof_case_[0] = kWorktop;
}
inline void SceneGadgetInfo::clear_worktop() {
  if (has_worktop()) {
    delete content_.worktop_;
    clear_has_content();
  }
}
inline  const ::proto::WorktopInfo& SceneGadgetInfo::worktop() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.worktop)
  return has_worktop()
      ? *content_.worktop_
      : ::proto::WorktopInfo::default_instance();
}
inline ::proto::WorktopInfo* SceneGadgetInfo::mutable_worktop() {
  if (!has_worktop()) {
    clear_content();
    set_has_worktop();
    content_.worktop_ = new ::proto::WorktopInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.worktop)
  return content_.worktop_;
}
inline ::proto::WorktopInfo* SceneGadgetInfo::release_worktop() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.worktop)
  if (has_worktop()) {
    clear_has_content();
    ::proto::WorktopInfo* temp = content_.worktop_;
    content_.worktop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_worktop(::proto::WorktopInfo* worktop) {
  clear_content();
  if (worktop) {
    set_has_worktop();
    content_.worktop_ = worktop;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.worktop)
}

// .proto.ClientGadgetInfo client_gadget = 15;
inline bool SceneGadgetInfo::has_client_gadget() const {
  return content_case() == kClientGadget;
}
inline void SceneGadgetInfo::set_has_client_gadget() {
  _oneof_case_[0] = kClientGadget;
}
inline void SceneGadgetInfo::clear_client_gadget() {
  if (has_client_gadget()) {
    delete content_.client_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::ClientGadgetInfo& SceneGadgetInfo::client_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.client_gadget)
  return has_client_gadget()
      ? *content_.client_gadget_
      : ::proto::ClientGadgetInfo::default_instance();
}
inline ::proto::ClientGadgetInfo* SceneGadgetInfo::mutable_client_gadget() {
  if (!has_client_gadget()) {
    clear_content();
    set_has_client_gadget();
    content_.client_gadget_ = new ::proto::ClientGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.client_gadget)
  return content_.client_gadget_;
}
inline ::proto::ClientGadgetInfo* SceneGadgetInfo::release_client_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.client_gadget)
  if (has_client_gadget()) {
    clear_has_content();
    ::proto::ClientGadgetInfo* temp = content_.client_gadget_;
    content_.client_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_client_gadget(::proto::ClientGadgetInfo* client_gadget) {
  clear_content();
  if (client_gadget) {
    set_has_client_gadget();
    content_.client_gadget_ = client_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.client_gadget)
}

// .proto.WeatherInfo weather = 17;
inline bool SceneGadgetInfo::has_weather() const {
  return content_case() == kWeather;
}
inline void SceneGadgetInfo::set_has_weather() {
  _oneof_case_[0] = kWeather;
}
inline void SceneGadgetInfo::clear_weather() {
  if (has_weather()) {
    delete content_.weather_;
    clear_has_content();
  }
}
inline  const ::proto::WeatherInfo& SceneGadgetInfo::weather() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.weather)
  return has_weather()
      ? *content_.weather_
      : ::proto::WeatherInfo::default_instance();
}
inline ::proto::WeatherInfo* SceneGadgetInfo::mutable_weather() {
  if (!has_weather()) {
    clear_content();
    set_has_weather();
    content_.weather_ = new ::proto::WeatherInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.weather)
  return content_.weather_;
}
inline ::proto::WeatherInfo* SceneGadgetInfo::release_weather() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.weather)
  if (has_weather()) {
    clear_has_content();
    ::proto::WeatherInfo* temp = content_.weather_;
    content_.weather_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_weather(::proto::WeatherInfo* weather) {
  clear_content();
  if (weather) {
    set_has_weather();
    content_.weather_ = weather;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.weather)
}

// .proto.AbilityGadgetInfo ability_gadget = 18;
inline bool SceneGadgetInfo::has_ability_gadget() const {
  return content_case() == kAbilityGadget;
}
inline void SceneGadgetInfo::set_has_ability_gadget() {
  _oneof_case_[0] = kAbilityGadget;
}
inline void SceneGadgetInfo::clear_ability_gadget() {
  if (has_ability_gadget()) {
    delete content_.ability_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::AbilityGadgetInfo& SceneGadgetInfo::ability_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.ability_gadget)
  return has_ability_gadget()
      ? *content_.ability_gadget_
      : ::proto::AbilityGadgetInfo::default_instance();
}
inline ::proto::AbilityGadgetInfo* SceneGadgetInfo::mutable_ability_gadget() {
  if (!has_ability_gadget()) {
    clear_content();
    set_has_ability_gadget();
    content_.ability_gadget_ = new ::proto::AbilityGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.ability_gadget)
  return content_.ability_gadget_;
}
inline ::proto::AbilityGadgetInfo* SceneGadgetInfo::release_ability_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.ability_gadget)
  if (has_ability_gadget()) {
    clear_has_content();
    ::proto::AbilityGadgetInfo* temp = content_.ability_gadget_;
    content_.ability_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_ability_gadget(::proto::AbilityGadgetInfo* ability_gadget) {
  clear_content();
  if (ability_gadget) {
    set_has_ability_gadget();
    content_.ability_gadget_ = ability_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.ability_gadget)
}

// .proto.StatueGadgetInfo statue_gadget = 19;
inline bool SceneGadgetInfo::has_statue_gadget() const {
  return content_case() == kStatueGadget;
}
inline void SceneGadgetInfo::set_has_statue_gadget() {
  _oneof_case_[0] = kStatueGadget;
}
inline void SceneGadgetInfo::clear_statue_gadget() {
  if (has_statue_gadget()) {
    delete content_.statue_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::StatueGadgetInfo& SceneGadgetInfo::statue_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.statue_gadget)
  return has_statue_gadget()
      ? *content_.statue_gadget_
      : ::proto::StatueGadgetInfo::default_instance();
}
inline ::proto::StatueGadgetInfo* SceneGadgetInfo::mutable_statue_gadget() {
  if (!has_statue_gadget()) {
    clear_content();
    set_has_statue_gadget();
    content_.statue_gadget_ = new ::proto::StatueGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.statue_gadget)
  return content_.statue_gadget_;
}
inline ::proto::StatueGadgetInfo* SceneGadgetInfo::release_statue_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.statue_gadget)
  if (has_statue_gadget()) {
    clear_has_content();
    ::proto::StatueGadgetInfo* temp = content_.statue_gadget_;
    content_.statue_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_statue_gadget(::proto::StatueGadgetInfo* statue_gadget) {
  clear_content();
  if (statue_gadget) {
    set_has_statue_gadget();
    content_.statue_gadget_ = statue_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.statue_gadget)
}

// .proto.BossChestInfo boss_chest = 20;
inline bool SceneGadgetInfo::has_boss_chest() const {
  return content_case() == kBossChest;
}
inline void SceneGadgetInfo::set_has_boss_chest() {
  _oneof_case_[0] = kBossChest;
}
inline void SceneGadgetInfo::clear_boss_chest() {
  if (has_boss_chest()) {
    delete content_.boss_chest_;
    clear_has_content();
  }
}
inline  const ::proto::BossChestInfo& SceneGadgetInfo::boss_chest() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.boss_chest)
  return has_boss_chest()
      ? *content_.boss_chest_
      : ::proto::BossChestInfo::default_instance();
}
inline ::proto::BossChestInfo* SceneGadgetInfo::mutable_boss_chest() {
  if (!has_boss_chest()) {
    clear_content();
    set_has_boss_chest();
    content_.boss_chest_ = new ::proto::BossChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.boss_chest)
  return content_.boss_chest_;
}
inline ::proto::BossChestInfo* SceneGadgetInfo::release_boss_chest() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.boss_chest)
  if (has_boss_chest()) {
    clear_has_content();
    ::proto::BossChestInfo* temp = content_.boss_chest_;
    content_.boss_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_boss_chest(::proto::BossChestInfo* boss_chest) {
  clear_content();
  if (boss_chest) {
    set_has_boss_chest();
    content_.boss_chest_ = boss_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.boss_chest)
}

// .proto.BlossomChestInfo blossom_chest = 41;
inline bool SceneGadgetInfo::has_blossom_chest() const {
  return content_case() == kBlossomChest;
}
inline void SceneGadgetInfo::set_has_blossom_chest() {
  _oneof_case_[0] = kBlossomChest;
}
inline void SceneGadgetInfo::clear_blossom_chest() {
  if (has_blossom_chest()) {
    delete content_.blossom_chest_;
    clear_has_content();
  }
}
inline  const ::proto::BlossomChestInfo& SceneGadgetInfo::blossom_chest() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.blossom_chest)
  return has_blossom_chest()
      ? *content_.blossom_chest_
      : ::proto::BlossomChestInfo::default_instance();
}
inline ::proto::BlossomChestInfo* SceneGadgetInfo::mutable_blossom_chest() {
  if (!has_blossom_chest()) {
    clear_content();
    set_has_blossom_chest();
    content_.blossom_chest_ = new ::proto::BlossomChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.blossom_chest)
  return content_.blossom_chest_;
}
inline ::proto::BlossomChestInfo* SceneGadgetInfo::release_blossom_chest() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.blossom_chest)
  if (has_blossom_chest()) {
    clear_has_content();
    ::proto::BlossomChestInfo* temp = content_.blossom_chest_;
    content_.blossom_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_blossom_chest(::proto::BlossomChestInfo* blossom_chest) {
  clear_content();
  if (blossom_chest) {
    set_has_blossom_chest();
    content_.blossom_chest_ = blossom_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.blossom_chest)
}

// .proto.MpPlayRewardInfo mp_play_reward = 42;
inline bool SceneGadgetInfo::has_mp_play_reward() const {
  return content_case() == kMpPlayReward;
}
inline void SceneGadgetInfo::set_has_mp_play_reward() {
  _oneof_case_[0] = kMpPlayReward;
}
inline void SceneGadgetInfo::clear_mp_play_reward() {
  if (has_mp_play_reward()) {
    delete content_.mp_play_reward_;
    clear_has_content();
  }
}
inline  const ::proto::MpPlayRewardInfo& SceneGadgetInfo::mp_play_reward() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.mp_play_reward)
  return has_mp_play_reward()
      ? *content_.mp_play_reward_
      : ::proto::MpPlayRewardInfo::default_instance();
}
inline ::proto::MpPlayRewardInfo* SceneGadgetInfo::mutable_mp_play_reward() {
  if (!has_mp_play_reward()) {
    clear_content();
    set_has_mp_play_reward();
    content_.mp_play_reward_ = new ::proto::MpPlayRewardInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.mp_play_reward)
  return content_.mp_play_reward_;
}
inline ::proto::MpPlayRewardInfo* SceneGadgetInfo::release_mp_play_reward() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.mp_play_reward)
  if (has_mp_play_reward()) {
    clear_has_content();
    ::proto::MpPlayRewardInfo* temp = content_.mp_play_reward_;
    content_.mp_play_reward_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_mp_play_reward(::proto::MpPlayRewardInfo* mp_play_reward) {
  clear_content();
  if (mp_play_reward) {
    set_has_mp_play_reward();
    content_.mp_play_reward_ = mp_play_reward;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.mp_play_reward)
}

// .proto.GadgetGeneralRewardInfo general_reward = 43;
inline bool SceneGadgetInfo::has_general_reward() const {
  return content_case() == kGeneralReward;
}
inline void SceneGadgetInfo::set_has_general_reward() {
  _oneof_case_[0] = kGeneralReward;
}
inline void SceneGadgetInfo::clear_general_reward() {
  if (has_general_reward()) {
    delete content_.general_reward_;
    clear_has_content();
  }
}
inline  const ::proto::GadgetGeneralRewardInfo& SceneGadgetInfo::general_reward() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.general_reward)
  return has_general_reward()
      ? *content_.general_reward_
      : ::proto::GadgetGeneralRewardInfo::default_instance();
}
inline ::proto::GadgetGeneralRewardInfo* SceneGadgetInfo::mutable_general_reward() {
  if (!has_general_reward()) {
    clear_content();
    set_has_general_reward();
    content_.general_reward_ = new ::proto::GadgetGeneralRewardInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.general_reward)
  return content_.general_reward_;
}
inline ::proto::GadgetGeneralRewardInfo* SceneGadgetInfo::release_general_reward() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.general_reward)
  if (has_general_reward()) {
    clear_has_content();
    ::proto::GadgetGeneralRewardInfo* temp = content_.general_reward_;
    content_.general_reward_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_general_reward(::proto::GadgetGeneralRewardInfo* general_reward) {
  clear_content();
  if (general_reward) {
    set_has_general_reward();
    content_.general_reward_ = general_reward;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.general_reward)
}

// .proto.OfferingInfo offering_info = 44;
inline bool SceneGadgetInfo::has_offering_info() const {
  return content_case() == kOfferingInfo;
}
inline void SceneGadgetInfo::set_has_offering_info() {
  _oneof_case_[0] = kOfferingInfo;
}
inline void SceneGadgetInfo::clear_offering_info() {
  if (has_offering_info()) {
    delete content_.offering_info_;
    clear_has_content();
  }
}
inline  const ::proto::OfferingInfo& SceneGadgetInfo::offering_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.offering_info)
  return has_offering_info()
      ? *content_.offering_info_
      : ::proto::OfferingInfo::default_instance();
}
inline ::proto::OfferingInfo* SceneGadgetInfo::mutable_offering_info() {
  if (!has_offering_info()) {
    clear_content();
    set_has_offering_info();
    content_.offering_info_ = new ::proto::OfferingInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.offering_info)
  return content_.offering_info_;
}
inline ::proto::OfferingInfo* SceneGadgetInfo::release_offering_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.offering_info)
  if (has_offering_info()) {
    clear_has_content();
    ::proto::OfferingInfo* temp = content_.offering_info_;
    content_.offering_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_offering_info(::proto::OfferingInfo* offering_info) {
  clear_content();
  if (offering_info) {
    set_has_offering_info();
    content_.offering_info_ = offering_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.offering_info)
}

// .proto.FoundationInfo foundation_info = 45;
inline bool SceneGadgetInfo::has_foundation_info() const {
  return content_case() == kFoundationInfo;
}
inline void SceneGadgetInfo::set_has_foundation_info() {
  _oneof_case_[0] = kFoundationInfo;
}
inline void SceneGadgetInfo::clear_foundation_info() {
  if (has_foundation_info()) {
    delete content_.foundation_info_;
    clear_has_content();
  }
}
inline  const ::proto::FoundationInfo& SceneGadgetInfo::foundation_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.foundation_info)
  return has_foundation_info()
      ? *content_.foundation_info_
      : ::proto::FoundationInfo::default_instance();
}
inline ::proto::FoundationInfo* SceneGadgetInfo::mutable_foundation_info() {
  if (!has_foundation_info()) {
    clear_content();
    set_has_foundation_info();
    content_.foundation_info_ = new ::proto::FoundationInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.foundation_info)
  return content_.foundation_info_;
}
inline ::proto::FoundationInfo* SceneGadgetInfo::release_foundation_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.foundation_info)
  if (has_foundation_info()) {
    clear_has_content();
    ::proto::FoundationInfo* temp = content_.foundation_info_;
    content_.foundation_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_foundation_info(::proto::FoundationInfo* foundation_info) {
  clear_content();
  if (foundation_info) {
    set_has_foundation_info();
    content_.foundation_info_ = foundation_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.foundation_info)
}

// .proto.VehicleInfo vehicle_info = 46;
inline bool SceneGadgetInfo::has_vehicle_info() const {
  return content_case() == kVehicleInfo;
}
inline void SceneGadgetInfo::set_has_vehicle_info() {
  _oneof_case_[0] = kVehicleInfo;
}
inline void SceneGadgetInfo::clear_vehicle_info() {
  if (has_vehicle_info()) {
    delete content_.vehicle_info_;
    clear_has_content();
  }
}
inline  const ::proto::VehicleInfo& SceneGadgetInfo::vehicle_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.vehicle_info)
  return has_vehicle_info()
      ? *content_.vehicle_info_
      : ::proto::VehicleInfo::default_instance();
}
inline ::proto::VehicleInfo* SceneGadgetInfo::mutable_vehicle_info() {
  if (!has_vehicle_info()) {
    clear_content();
    set_has_vehicle_info();
    content_.vehicle_info_ = new ::proto::VehicleInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.vehicle_info)
  return content_.vehicle_info_;
}
inline ::proto::VehicleInfo* SceneGadgetInfo::release_vehicle_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.vehicle_info)
  if (has_vehicle_info()) {
    clear_has_content();
    ::proto::VehicleInfo* temp = content_.vehicle_info_;
    content_.vehicle_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_vehicle_info(::proto::VehicleInfo* vehicle_info) {
  clear_content();
  if (vehicle_info) {
    set_has_vehicle_info();
    content_.vehicle_info_ = vehicle_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.vehicle_info)
}

// .proto.EchoShellInfo shell_info = 47;
inline bool SceneGadgetInfo::has_shell_info() const {
  return content_case() == kShellInfo;
}
inline void SceneGadgetInfo::set_has_shell_info() {
  _oneof_case_[0] = kShellInfo;
}
inline void SceneGadgetInfo::clear_shell_info() {
  if (has_shell_info()) {
    delete content_.shell_info_;
    clear_has_content();
  }
}
inline  const ::proto::EchoShellInfo& SceneGadgetInfo::shell_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.shell_info)
  return has_shell_info()
      ? *content_.shell_info_
      : ::proto::EchoShellInfo::default_instance();
}
inline ::proto::EchoShellInfo* SceneGadgetInfo::mutable_shell_info() {
  if (!has_shell_info()) {
    clear_content();
    set_has_shell_info();
    content_.shell_info_ = new ::proto::EchoShellInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.shell_info)
  return content_.shell_info_;
}
inline ::proto::EchoShellInfo* SceneGadgetInfo::release_shell_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.shell_info)
  if (has_shell_info()) {
    clear_has_content();
    ::proto::EchoShellInfo* temp = content_.shell_info_;
    content_.shell_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_shell_info(::proto::EchoShellInfo* shell_info) {
  clear_content();
  if (shell_info) {
    set_has_shell_info();
    content_.shell_info_ = shell_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.shell_info)
}

// .proto.ScreenInfo screen_info = 48;
inline bool SceneGadgetInfo::has_screen_info() const {
  return content_case() == kScreenInfo;
}
inline void SceneGadgetInfo::set_has_screen_info() {
  _oneof_case_[0] = kScreenInfo;
}
inline void SceneGadgetInfo::clear_screen_info() {
  if (has_screen_info()) {
    delete content_.screen_info_;
    clear_has_content();
  }
}
inline  const ::proto::ScreenInfo& SceneGadgetInfo::screen_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.screen_info)
  return has_screen_info()
      ? *content_.screen_info_
      : ::proto::ScreenInfo::default_instance();
}
inline ::proto::ScreenInfo* SceneGadgetInfo::mutable_screen_info() {
  if (!has_screen_info()) {
    clear_content();
    set_has_screen_info();
    content_.screen_info_ = new ::proto::ScreenInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.screen_info)
  return content_.screen_info_;
}
inline ::proto::ScreenInfo* SceneGadgetInfo::release_screen_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.screen_info)
  if (has_screen_info()) {
    clear_has_content();
    ::proto::ScreenInfo* temp = content_.screen_info_;
    content_.screen_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_screen_info(::proto::ScreenInfo* screen_info) {
  clear_content();
  if (screen_info) {
    set_has_screen_info();
    content_.screen_info_ = screen_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.screen_info)
}

// .proto.FishPoolInfo fish_pool_info = 59;
inline bool SceneGadgetInfo::has_fish_pool_info() const {
  return content_case() == kFishPoolInfo;
}
inline void SceneGadgetInfo::set_has_fish_pool_info() {
  _oneof_case_[0] = kFishPoolInfo;
}
inline void SceneGadgetInfo::clear_fish_pool_info() {
  if (has_fish_pool_info()) {
    delete content_.fish_pool_info_;
    clear_has_content();
  }
}
inline  const ::proto::FishPoolInfo& SceneGadgetInfo::fish_pool_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.fish_pool_info)
  return has_fish_pool_info()
      ? *content_.fish_pool_info_
      : ::proto::FishPoolInfo::default_instance();
}
inline ::proto::FishPoolInfo* SceneGadgetInfo::mutable_fish_pool_info() {
  if (!has_fish_pool_info()) {
    clear_content();
    set_has_fish_pool_info();
    content_.fish_pool_info_ = new ::proto::FishPoolInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.fish_pool_info)
  return content_.fish_pool_info_;
}
inline ::proto::FishPoolInfo* SceneGadgetInfo::release_fish_pool_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.fish_pool_info)
  if (has_fish_pool_info()) {
    clear_has_content();
    ::proto::FishPoolInfo* temp = content_.fish_pool_info_;
    content_.fish_pool_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_fish_pool_info(::proto::FishPoolInfo* fish_pool_info) {
  clear_content();
  if (fish_pool_info) {
    set_has_fish_pool_info();
    content_.fish_pool_info_ = fish_pool_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.fish_pool_info)
}

// .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 60;
inline bool SceneGadgetInfo::has_custom_gadget_tree_info() const {
  return content_case() == kCustomGadgetTreeInfo;
}
inline void SceneGadgetInfo::set_has_custom_gadget_tree_info() {
  _oneof_case_[0] = kCustomGadgetTreeInfo;
}
inline void SceneGadgetInfo::clear_custom_gadget_tree_info() {
  if (has_custom_gadget_tree_info()) {
    delete content_.custom_gadget_tree_info_;
    clear_has_content();
  }
}
inline  const ::proto::CustomGadgetTreeInfo& SceneGadgetInfo::custom_gadget_tree_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.custom_gadget_tree_info)
  return has_custom_gadget_tree_info()
      ? *content_.custom_gadget_tree_info_
      : ::proto::CustomGadgetTreeInfo::default_instance();
}
inline ::proto::CustomGadgetTreeInfo* SceneGadgetInfo::mutable_custom_gadget_tree_info() {
  if (!has_custom_gadget_tree_info()) {
    clear_content();
    set_has_custom_gadget_tree_info();
    content_.custom_gadget_tree_info_ = new ::proto::CustomGadgetTreeInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.custom_gadget_tree_info)
  return content_.custom_gadget_tree_info_;
}
inline ::proto::CustomGadgetTreeInfo* SceneGadgetInfo::release_custom_gadget_tree_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.custom_gadget_tree_info)
  if (has_custom_gadget_tree_info()) {
    clear_has_content();
    ::proto::CustomGadgetTreeInfo* temp = content_.custom_gadget_tree_info_;
    content_.custom_gadget_tree_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_custom_gadget_tree_info(::proto::CustomGadgetTreeInfo* custom_gadget_tree_info) {
  clear_content();
  if (custom_gadget_tree_info) {
    set_has_custom_gadget_tree_info();
    content_.custom_gadget_tree_info_ = custom_gadget_tree_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.custom_gadget_tree_info)
}

// .proto.RoguelikeGadgetInfo roguelike_gadget_info = 61;
inline bool SceneGadgetInfo::has_roguelike_gadget_info() const {
  return content_case() == kRoguelikeGadgetInfo;
}
inline void SceneGadgetInfo::set_has_roguelike_gadget_info() {
  _oneof_case_[0] = kRoguelikeGadgetInfo;
}
inline void SceneGadgetInfo::clear_roguelike_gadget_info() {
  if (has_roguelike_gadget_info()) {
    delete content_.roguelike_gadget_info_;
    clear_has_content();
  }
}
inline  const ::proto::RoguelikeGadgetInfo& SceneGadgetInfo::roguelike_gadget_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.roguelike_gadget_info)
  return has_roguelike_gadget_info()
      ? *content_.roguelike_gadget_info_
      : ::proto::RoguelikeGadgetInfo::default_instance();
}
inline ::proto::RoguelikeGadgetInfo* SceneGadgetInfo::mutable_roguelike_gadget_info() {
  if (!has_roguelike_gadget_info()) {
    clear_content();
    set_has_roguelike_gadget_info();
    content_.roguelike_gadget_info_ = new ::proto::RoguelikeGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.roguelike_gadget_info)
  return content_.roguelike_gadget_info_;
}
inline ::proto::RoguelikeGadgetInfo* SceneGadgetInfo::release_roguelike_gadget_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.roguelike_gadget_info)
  if (has_roguelike_gadget_info()) {
    clear_has_content();
    ::proto::RoguelikeGadgetInfo* temp = content_.roguelike_gadget_info_;
    content_.roguelike_gadget_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_roguelike_gadget_info(::proto::RoguelikeGadgetInfo* roguelike_gadget_info) {
  clear_content();
  if (roguelike_gadget_info) {
    set_has_roguelike_gadget_info();
    content_.roguelike_gadget_info_ = roguelike_gadget_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.roguelike_gadget_info)
}

// .proto.NightCrowGadgetInfo night_crow_gadget_info = 62;
inline bool SceneGadgetInfo::has_night_crow_gadget_info() const {
  return content_case() == kNightCrowGadgetInfo;
}
inline void SceneGadgetInfo::set_has_night_crow_gadget_info() {
  _oneof_case_[0] = kNightCrowGadgetInfo;
}
inline void SceneGadgetInfo::clear_night_crow_gadget_info() {
  if (has_night_crow_gadget_info()) {
    delete content_.night_crow_gadget_info_;
    clear_has_content();
  }
}
inline  const ::proto::NightCrowGadgetInfo& SceneGadgetInfo::night_crow_gadget_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.night_crow_gadget_info)
  return has_night_crow_gadget_info()
      ? *content_.night_crow_gadget_info_
      : ::proto::NightCrowGadgetInfo::default_instance();
}
inline ::proto::NightCrowGadgetInfo* SceneGadgetInfo::mutable_night_crow_gadget_info() {
  if (!has_night_crow_gadget_info()) {
    clear_content();
    set_has_night_crow_gadget_info();
    content_.night_crow_gadget_info_ = new ::proto::NightCrowGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.night_crow_gadget_info)
  return content_.night_crow_gadget_info_;
}
inline ::proto::NightCrowGadgetInfo* SceneGadgetInfo::release_night_crow_gadget_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.night_crow_gadget_info)
  if (has_night_crow_gadget_info()) {
    clear_has_content();
    ::proto::NightCrowGadgetInfo* temp = content_.night_crow_gadget_info_;
    content_.night_crow_gadget_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_night_crow_gadget_info(::proto::NightCrowGadgetInfo* night_crow_gadget_info) {
  clear_content();
  if (night_crow_gadget_info) {
    set_has_night_crow_gadget_info();
    content_.night_crow_gadget_info_ = night_crow_gadget_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.night_crow_gadget_info)
}

// .proto.DeshretObeliskGadgetInfo deshret_obelisk_gadget_info = 63;
inline bool SceneGadgetInfo::has_deshret_obelisk_gadget_info() const {
  return content_case() == kDeshretObeliskGadgetInfo;
}
inline void SceneGadgetInfo::set_has_deshret_obelisk_gadget_info() {
  _oneof_case_[0] = kDeshretObeliskGadgetInfo;
}
inline void SceneGadgetInfo::clear_deshret_obelisk_gadget_info() {
  if (has_deshret_obelisk_gadget_info()) {
    delete content_.deshret_obelisk_gadget_info_;
    clear_has_content();
  }
}
inline  const ::proto::DeshretObeliskGadgetInfo& SceneGadgetInfo::deshret_obelisk_gadget_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.deshret_obelisk_gadget_info)
  return has_deshret_obelisk_gadget_info()
      ? *content_.deshret_obelisk_gadget_info_
      : ::proto::DeshretObeliskGadgetInfo::default_instance();
}
inline ::proto::DeshretObeliskGadgetInfo* SceneGadgetInfo::mutable_deshret_obelisk_gadget_info() {
  if (!has_deshret_obelisk_gadget_info()) {
    clear_content();
    set_has_deshret_obelisk_gadget_info();
    content_.deshret_obelisk_gadget_info_ = new ::proto::DeshretObeliskGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.deshret_obelisk_gadget_info)
  return content_.deshret_obelisk_gadget_info_;
}
inline ::proto::DeshretObeliskGadgetInfo* SceneGadgetInfo::release_deshret_obelisk_gadget_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.deshret_obelisk_gadget_info)
  if (has_deshret_obelisk_gadget_info()) {
    clear_has_content();
    ::proto::DeshretObeliskGadgetInfo* temp = content_.deshret_obelisk_gadget_info_;
    content_.deshret_obelisk_gadget_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_deshret_obelisk_gadget_info(::proto::DeshretObeliskGadgetInfo* deshret_obelisk_gadget_info) {
  clear_content();
  if (deshret_obelisk_gadget_info) {
    set_has_deshret_obelisk_gadget_info();
    content_.deshret_obelisk_gadget_info_ = deshret_obelisk_gadget_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.deshret_obelisk_gadget_info)
}

// .proto.CoinCollectOperatorInfo coin_collect_operator_info = 64;
inline bool SceneGadgetInfo::has_coin_collect_operator_info() const {
  return content_case() == kCoinCollectOperatorInfo;
}
inline void SceneGadgetInfo::set_has_coin_collect_operator_info() {
  _oneof_case_[0] = kCoinCollectOperatorInfo;
}
inline void SceneGadgetInfo::clear_coin_collect_operator_info() {
  if (has_coin_collect_operator_info()) {
    delete content_.coin_collect_operator_info_;
    clear_has_content();
  }
}
inline  const ::proto::CoinCollectOperatorInfo& SceneGadgetInfo::coin_collect_operator_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.coin_collect_operator_info)
  return has_coin_collect_operator_info()
      ? *content_.coin_collect_operator_info_
      : ::proto::CoinCollectOperatorInfo::default_instance();
}
inline ::proto::CoinCollectOperatorInfo* SceneGadgetInfo::mutable_coin_collect_operator_info() {
  if (!has_coin_collect_operator_info()) {
    clear_content();
    set_has_coin_collect_operator_info();
    content_.coin_collect_operator_info_ = new ::proto::CoinCollectOperatorInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.coin_collect_operator_info)
  return content_.coin_collect_operator_info_;
}
inline ::proto::CoinCollectOperatorInfo* SceneGadgetInfo::release_coin_collect_operator_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.coin_collect_operator_info)
  if (has_coin_collect_operator_info()) {
    clear_has_content();
    ::proto::CoinCollectOperatorInfo* temp = content_.coin_collect_operator_info_;
    content_.coin_collect_operator_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_coin_collect_operator_info(::proto::CoinCollectOperatorInfo* coin_collect_operator_info) {
  clear_content();
  if (coin_collect_operator_info) {
    set_has_coin_collect_operator_info();
    content_.coin_collect_operator_info_ = coin_collect_operator_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.coin_collect_operator_info)
}

inline bool SceneGadgetInfo::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void SceneGadgetInfo::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline SceneGadgetInfo::ContentCase SceneGadgetInfo::content_case() const {
  return SceneGadgetInfo::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AnimatorParameterValueInfo

// uint32 para_type = 1;
inline void AnimatorParameterValueInfo::clear_para_type() {
  para_type_ = 0u;
}
inline ::google::protobuf::uint32 AnimatorParameterValueInfo::para_type() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.para_type)
  return para_type_;
}
inline void AnimatorParameterValueInfo::set_para_type(::google::protobuf::uint32 value) {
  
  para_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.para_type)
}

// int32 int_val = 2;
inline bool AnimatorParameterValueInfo::has_int_val() const {
  return paraVal_case() == kIntVal;
}
inline void AnimatorParameterValueInfo::set_has_int_val() {
  _oneof_case_[0] = kIntVal;
}
inline void AnimatorParameterValueInfo::clear_int_val() {
  if (has_int_val()) {
    paraVal_.int_val_ = 0;
    clear_has_paraVal();
  }
}
inline ::google::protobuf::int32 AnimatorParameterValueInfo::int_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.int_val)
  if (has_int_val()) {
    return paraVal_.int_val_;
  }
  return 0;
}
inline void AnimatorParameterValueInfo::set_int_val(::google::protobuf::int32 value) {
  if (!has_int_val()) {
    clear_paraVal();
    set_has_int_val();
  }
  paraVal_.int_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.int_val)
}

// float float_val = 3;
inline bool AnimatorParameterValueInfo::has_float_val() const {
  return paraVal_case() == kFloatVal;
}
inline void AnimatorParameterValueInfo::set_has_float_val() {
  _oneof_case_[0] = kFloatVal;
}
inline void AnimatorParameterValueInfo::clear_float_val() {
  if (has_float_val()) {
    paraVal_.float_val_ = 0;
    clear_has_paraVal();
  }
}
inline float AnimatorParameterValueInfo::float_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.float_val)
  if (has_float_val()) {
    return paraVal_.float_val_;
  }
  return 0;
}
inline void AnimatorParameterValueInfo::set_float_val(float value) {
  if (!has_float_val()) {
    clear_paraVal();
    set_has_float_val();
  }
  paraVal_.float_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.float_val)
}

// bool bool_val = 4;
inline bool AnimatorParameterValueInfo::has_bool_val() const {
  return paraVal_case() == kBoolVal;
}
inline void AnimatorParameterValueInfo::set_has_bool_val() {
  _oneof_case_[0] = kBoolVal;
}
inline void AnimatorParameterValueInfo::clear_bool_val() {
  if (has_bool_val()) {
    paraVal_.bool_val_ = false;
    clear_has_paraVal();
  }
}
inline bool AnimatorParameterValueInfo::bool_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.bool_val)
  if (has_bool_val()) {
    return paraVal_.bool_val_;
  }
  return false;
}
inline void AnimatorParameterValueInfo::set_bool_val(bool value) {
  if (!has_bool_val()) {
    clear_paraVal();
    set_has_bool_val();
  }
  paraVal_.bool_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.bool_val)
}

inline bool AnimatorParameterValueInfo::has_paraVal() const {
  return paraVal_case() != PARAVAL_NOT_SET;
}
inline void AnimatorParameterValueInfo::clear_has_paraVal() {
  _oneof_case_[0] = PARAVAL_NOT_SET;
}
inline AnimatorParameterValueInfo::ParaValCase AnimatorParameterValueInfo::paraVal_case() const {
  return AnimatorParameterValueInfo::ParaValCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ServantInfo

// uint32 master_entity_id = 1;
inline void ServantInfo::clear_master_entity_id() {
  master_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ServantInfo::master_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ServantInfo.master_entity_id)
  return master_entity_id_;
}
inline void ServantInfo::set_master_entity_id(::google::protobuf::uint32 value) {
  
  master_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServantInfo.master_entity_id)
}

// uint32 born_slot_index = 2;
inline void ServantInfo::clear_born_slot_index() {
  born_slot_index_ = 0u;
}
inline ::google::protobuf::uint32 ServantInfo::born_slot_index() const {
  // @@protoc_insertion_point(field_get:proto.ServantInfo.born_slot_index)
  return born_slot_index_;
}
inline void ServantInfo::set_born_slot_index(::google::protobuf::uint32 value) {
  
  born_slot_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServantInfo.born_slot_index)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneEntityAiInfo

// bool is_ai_open = 1;
inline void SceneEntityAiInfo::clear_is_ai_open() {
  is_ai_open_ = false;
}
inline bool SceneEntityAiInfo::is_ai_open() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.is_ai_open)
  return is_ai_open_;
}
inline void SceneEntityAiInfo::set_is_ai_open(bool value) {
  
  is_ai_open_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAiInfo.is_ai_open)
}

// .proto.Vector born_pos = 2;
inline bool SceneEntityAiInfo::has_born_pos() const {
  return this != internal_default_instance() && born_pos_ != NULL;
}
inline void SceneEntityAiInfo::clear_born_pos() {
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) delete born_pos_;
  born_pos_ = NULL;
}
inline const ::proto::Vector& SceneEntityAiInfo::born_pos() const {
  const ::proto::Vector* p = born_pos_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.born_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* SceneEntityAiInfo::mutable_born_pos() {
  
  if (born_pos_ == NULL) {
    born_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAiInfo.born_pos)
  return born_pos_;
}
inline ::proto::Vector* SceneEntityAiInfo::release_born_pos() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityAiInfo.born_pos)
  
  ::proto::Vector* temp = born_pos_;
  born_pos_ = NULL;
  return temp;
}
inline void SceneEntityAiInfo::set_allocated_born_pos(::proto::Vector* born_pos) {
  delete born_pos_;
  born_pos_ = born_pos;
  if (born_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityAiInfo.born_pos)
}

// map<uint32, uint32> skill_cd_map = 3;
inline int SceneEntityAiInfo::skill_cd_map_size() const {
  return skill_cd_map_.size();
}
inline void SceneEntityAiInfo::clear_skill_cd_map() {
  skill_cd_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneEntityAiInfo::skill_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityAiInfo.skill_cd_map)
  return skill_cd_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneEntityAiInfo::mutable_skill_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityAiInfo.skill_cd_map)
  return skill_cd_map_.MutableMap();
}

// .proto.ServantInfo servant_info = 4;
inline bool SceneEntityAiInfo::has_servant_info() const {
  return this != internal_default_instance() && servant_info_ != NULL;
}
inline void SceneEntityAiInfo::clear_servant_info() {
  if (GetArenaNoVirtual() == NULL && servant_info_ != NULL) delete servant_info_;
  servant_info_ = NULL;
}
inline const ::proto::ServantInfo& SceneEntityAiInfo::servant_info() const {
  const ::proto::ServantInfo* p = servant_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.servant_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServantInfo*>(
      &::proto::_ServantInfo_default_instance_);
}
inline ::proto::ServantInfo* SceneEntityAiInfo::mutable_servant_info() {
  
  if (servant_info_ == NULL) {
    servant_info_ = new ::proto::ServantInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAiInfo.servant_info)
  return servant_info_;
}
inline ::proto::ServantInfo* SceneEntityAiInfo::release_servant_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityAiInfo.servant_info)
  
  ::proto::ServantInfo* temp = servant_info_;
  servant_info_ = NULL;
  return temp;
}
inline void SceneEntityAiInfo::set_allocated_servant_info(::proto::ServantInfo* servant_info) {
  delete servant_info_;
  servant_info_ = servant_info;
  if (servant_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityAiInfo.servant_info)
}

// map<uint32, uint32> ai_threat_map = 5;
inline int SceneEntityAiInfo::ai_threat_map_size() const {
  return ai_threat_map_.size();
}
inline void SceneEntityAiInfo::clear_ai_threat_map() {
  ai_threat_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneEntityAiInfo::ai_threat_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityAiInfo.ai_threat_map)
  return ai_threat_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneEntityAiInfo::mutable_ai_threat_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityAiInfo.ai_threat_map)
  return ai_threat_map_.MutableMap();
}

// map<uint32, uint32> skill_group_cd_map = 6;
inline int SceneEntityAiInfo::skill_group_cd_map_size() const {
  return skill_group_cd_map_.size();
}
inline void SceneEntityAiInfo::clear_skill_group_cd_map() {
  skill_group_cd_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneEntityAiInfo::skill_group_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityAiInfo.skill_group_cd_map)
  return skill_group_cd_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneEntityAiInfo::mutable_skill_group_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityAiInfo.skill_group_cd_map)
  return skill_group_cd_map_.MutableMap();
}

// uint32 cur_tactic = 7;
inline void SceneEntityAiInfo::clear_cur_tactic() {
  cur_tactic_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityAiInfo::cur_tactic() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.cur_tactic)
  return cur_tactic_;
}
inline void SceneEntityAiInfo::set_cur_tactic(::google::protobuf::uint32 value) {
  
  cur_tactic_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAiInfo.cur_tactic)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EntityRendererChangedInfo

// map<string, uint32> changed_renderers = 1;
inline int EntityRendererChangedInfo::changed_renderers_size() const {
  return changed_renderers_.size();
}
inline void EntityRendererChangedInfo::clear_changed_renderers() {
  changed_renderers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
EntityRendererChangedInfo::changed_renderers() const {
  // @@protoc_insertion_point(field_map:proto.EntityRendererChangedInfo.changed_renderers)
  return changed_renderers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
EntityRendererChangedInfo::mutable_changed_renderers() {
  // @@protoc_insertion_point(field_mutable_map:proto.EntityRendererChangedInfo.changed_renderers)
  return changed_renderers_.MutableMap();
}

// uint32 visibility_count = 2;
inline void EntityRendererChangedInfo::clear_visibility_count() {
  visibility_count_ = 0u;
}
inline ::google::protobuf::uint32 EntityRendererChangedInfo::visibility_count() const {
  // @@protoc_insertion_point(field_get:proto.EntityRendererChangedInfo.visibility_count)
  return visibility_count_;
}
inline void EntityRendererChangedInfo::set_visibility_count(::google::protobuf::uint32 value) {
  
  visibility_count_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityRendererChangedInfo.visibility_count)
}

// bool is_cached = 3;
inline void EntityRendererChangedInfo::clear_is_cached() {
  is_cached_ = false;
}
inline bool EntityRendererChangedInfo::is_cached() const {
  // @@protoc_insertion_point(field_get:proto.EntityRendererChangedInfo.is_cached)
  return is_cached_;
}
inline void EntityRendererChangedInfo::set_is_cached(bool value) {
  
  is_cached_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityRendererChangedInfo.is_cached)
}

// -------------------------------------------------------------------

// PropPair

// uint32 type = 1;
inline void PropPair::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 PropPair::type() const {
  // @@protoc_insertion_point(field_get:proto.PropPair.type)
  return type_;
}
inline void PropPair::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PropPair.type)
}

// .proto.PropValue prop_value = 2;
inline bool PropPair::has_prop_value() const {
  return this != internal_default_instance() && prop_value_ != NULL;
}
inline void PropPair::clear_prop_value() {
  if (GetArenaNoVirtual() == NULL && prop_value_ != NULL) delete prop_value_;
  prop_value_ = NULL;
}
inline const ::proto::PropValue& PropPair::prop_value() const {
  const ::proto::PropValue* p = prop_value_;
  // @@protoc_insertion_point(field_get:proto.PropPair.prop_value)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PropValue*>(
      &::proto::_PropValue_default_instance_);
}
inline ::proto::PropValue* PropPair::mutable_prop_value() {
  
  if (prop_value_ == NULL) {
    prop_value_ = new ::proto::PropValue;
  }
  // @@protoc_insertion_point(field_mutable:proto.PropPair.prop_value)
  return prop_value_;
}
inline ::proto::PropValue* PropPair::release_prop_value() {
  // @@protoc_insertion_point(field_release:proto.PropPair.prop_value)
  
  ::proto::PropValue* temp = prop_value_;
  prop_value_ = NULL;
  return temp;
}
inline void PropPair::set_allocated_prop_value(::proto::PropValue* prop_value) {
  delete prop_value_;
  prop_value_ = prop_value;
  if (prop_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PropPair.prop_value)
}

// -------------------------------------------------------------------

// FightPropPair

// uint32 prop_type = 1;
inline void FightPropPair::clear_prop_type() {
  prop_type_ = 0u;
}
inline ::google::protobuf::uint32 FightPropPair::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.FightPropPair.prop_type)
  return prop_type_;
}
inline void FightPropPair::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FightPropPair.prop_type)
}

// float prop_value = 2;
inline void FightPropPair::clear_prop_value() {
  prop_value_ = 0;
}
inline float FightPropPair::prop_value() const {
  // @@protoc_insertion_point(field_get:proto.FightPropPair.prop_value)
  return prop_value_;
}
inline void FightPropPair::set_prop_value(float value) {
  
  prop_value_ = value;
  // @@protoc_insertion_point(field_set:proto.FightPropPair.prop_value)
}

// -------------------------------------------------------------------

// AnimatorParameterValueInfoPair

// int32 name_id = 1;
inline void AnimatorParameterValueInfoPair::clear_name_id() {
  name_id_ = 0;
}
inline ::google::protobuf::int32 AnimatorParameterValueInfoPair::name_id() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfoPair.name_id)
  return name_id_;
}
inline void AnimatorParameterValueInfoPair::set_name_id(::google::protobuf::int32 value) {
  
  name_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfoPair.name_id)
}

// .proto.AnimatorParameterValueInfo animator_para = 2;
inline bool AnimatorParameterValueInfoPair::has_animator_para() const {
  return this != internal_default_instance() && animator_para_ != NULL;
}
inline void AnimatorParameterValueInfoPair::clear_animator_para() {
  if (GetArenaNoVirtual() == NULL && animator_para_ != NULL) delete animator_para_;
  animator_para_ = NULL;
}
inline const ::proto::AnimatorParameterValueInfo& AnimatorParameterValueInfoPair::animator_para() const {
  const ::proto::AnimatorParameterValueInfo* p = animator_para_;
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfoPair.animator_para)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AnimatorParameterValueInfo*>(
      &::proto::_AnimatorParameterValueInfo_default_instance_);
}
inline ::proto::AnimatorParameterValueInfo* AnimatorParameterValueInfoPair::mutable_animator_para() {
  
  if (animator_para_ == NULL) {
    animator_para_ = new ::proto::AnimatorParameterValueInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AnimatorParameterValueInfoPair.animator_para)
  return animator_para_;
}
inline ::proto::AnimatorParameterValueInfo* AnimatorParameterValueInfoPair::release_animator_para() {
  // @@protoc_insertion_point(field_release:proto.AnimatorParameterValueInfoPair.animator_para)
  
  ::proto::AnimatorParameterValueInfo* temp = animator_para_;
  animator_para_ = NULL;
  return temp;
}
inline void AnimatorParameterValueInfoPair::set_allocated_animator_para(::proto::AnimatorParameterValueInfo* animator_para) {
  delete animator_para_;
  animator_para_ = animator_para;
  if (animator_para) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AnimatorParameterValueInfoPair.animator_para)
}

// -------------------------------------------------------------------

// EntityEnvironmentInfo

// uint32 json_climate_type = 1;
inline void EntityEnvironmentInfo::clear_json_climate_type() {
  json_climate_type_ = 0u;
}
inline ::google::protobuf::uint32 EntityEnvironmentInfo::json_climate_type() const {
  // @@protoc_insertion_point(field_get:proto.EntityEnvironmentInfo.json_climate_type)
  return json_climate_type_;
}
inline void EntityEnvironmentInfo::set_json_climate_type(::google::protobuf::uint32 value) {
  
  json_climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityEnvironmentInfo.json_climate_type)
}

// uint32 climate_area_id = 2;
inline void EntityEnvironmentInfo::clear_climate_area_id() {
  climate_area_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityEnvironmentInfo::climate_area_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityEnvironmentInfo.climate_area_id)
  return climate_area_id_;
}
inline void EntityEnvironmentInfo::set_climate_area_id(::google::protobuf::uint32 value) {
  
  climate_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityEnvironmentInfo.climate_area_id)
}

// -------------------------------------------------------------------

// EntityClientExtraInfo

// .proto.Vector skill_anchor_position = 1;
inline bool EntityClientExtraInfo::has_skill_anchor_position() const {
  return this != internal_default_instance() && skill_anchor_position_ != NULL;
}
inline void EntityClientExtraInfo::clear_skill_anchor_position() {
  if (GetArenaNoVirtual() == NULL && skill_anchor_position_ != NULL) delete skill_anchor_position_;
  skill_anchor_position_ = NULL;
}
inline const ::proto::Vector& EntityClientExtraInfo::skill_anchor_position() const {
  const ::proto::Vector* p = skill_anchor_position_;
  // @@protoc_insertion_point(field_get:proto.EntityClientExtraInfo.skill_anchor_position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EntityClientExtraInfo::mutable_skill_anchor_position() {
  
  if (skill_anchor_position_ == NULL) {
    skill_anchor_position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityClientExtraInfo.skill_anchor_position)
  return skill_anchor_position_;
}
inline ::proto::Vector* EntityClientExtraInfo::release_skill_anchor_position() {
  // @@protoc_insertion_point(field_release:proto.EntityClientExtraInfo.skill_anchor_position)
  
  ::proto::Vector* temp = skill_anchor_position_;
  skill_anchor_position_ = NULL;
  return temp;
}
inline void EntityClientExtraInfo::set_allocated_skill_anchor_position(::proto::Vector* skill_anchor_position) {
  delete skill_anchor_position_;
  skill_anchor_position_ = skill_anchor_position;
  if (skill_anchor_position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityClientExtraInfo.skill_anchor_position)
}

// -------------------------------------------------------------------

// EntityAuthorityInfo

// .proto.AbilitySyncStateInfo ability_info = 1;
inline bool EntityAuthorityInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void EntityAuthorityInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& EntityAuthorityInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* EntityAuthorityInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityInfo.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* EntityAuthorityInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void EntityAuthorityInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityInfo.ability_info)
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 2;
inline bool EntityAuthorityInfo::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
inline void EntityAuthorityInfo::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
inline const ::proto::EntityRendererChangedInfo& EntityAuthorityInfo::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityInfo.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
inline ::proto::EntityRendererChangedInfo* EntityAuthorityInfo::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityInfo.renderer_changed_info)
  return renderer_changed_info_;
}
inline ::proto::EntityRendererChangedInfo* EntityAuthorityInfo::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityInfo.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
inline void EntityAuthorityInfo::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityInfo.renderer_changed_info)
}

// .proto.SceneEntityAiInfo ai_info = 3;
inline bool EntityAuthorityInfo::has_ai_info() const {
  return this != internal_default_instance() && ai_info_ != NULL;
}
inline void EntityAuthorityInfo::clear_ai_info() {
  if (GetArenaNoVirtual() == NULL && ai_info_ != NULL) delete ai_info_;
  ai_info_ = NULL;
}
inline const ::proto::SceneEntityAiInfo& EntityAuthorityInfo::ai_info() const {
  const ::proto::SceneEntityAiInfo* p = ai_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityInfo.ai_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEntityAiInfo*>(
      &::proto::_SceneEntityAiInfo_default_instance_);
}
inline ::proto::SceneEntityAiInfo* EntityAuthorityInfo::mutable_ai_info() {
  
  if (ai_info_ == NULL) {
    ai_info_ = new ::proto::SceneEntityAiInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityInfo.ai_info)
  return ai_info_;
}
inline ::proto::SceneEntityAiInfo* EntityAuthorityInfo::release_ai_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityInfo.ai_info)
  
  ::proto::SceneEntityAiInfo* temp = ai_info_;
  ai_info_ = NULL;
  return temp;
}
inline void EntityAuthorityInfo::set_allocated_ai_info(::proto::SceneEntityAiInfo* ai_info) {
  delete ai_info_;
  ai_info_ = ai_info;
  if (ai_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityInfo.ai_info)
}

// .proto.Vector born_pos = 4;
inline bool EntityAuthorityInfo::has_born_pos() const {
  return this != internal_default_instance() && born_pos_ != NULL;
}
inline void EntityAuthorityInfo::clear_born_pos() {
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) delete born_pos_;
  born_pos_ = NULL;
}
inline const ::proto::Vector& EntityAuthorityInfo::born_pos() const {
  const ::proto::Vector* p = born_pos_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityInfo.born_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EntityAuthorityInfo::mutable_born_pos() {
  
  if (born_pos_ == NULL) {
    born_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityInfo.born_pos)
  return born_pos_;
}
inline ::proto::Vector* EntityAuthorityInfo::release_born_pos() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityInfo.born_pos)
  
  ::proto::Vector* temp = born_pos_;
  born_pos_ = NULL;
  return temp;
}
inline void EntityAuthorityInfo::set_allocated_born_pos(::proto::Vector* born_pos) {
  delete born_pos_;
  born_pos_ = born_pos;
  if (born_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityInfo.born_pos)
}

// repeated .proto.AnimatorParameterValueInfoPair pose_para_list = 5;
inline int EntityAuthorityInfo::pose_para_list_size() const {
  return pose_para_list_.size();
}
inline void EntityAuthorityInfo::clear_pose_para_list() {
  pose_para_list_.Clear();
}
inline const ::proto::AnimatorParameterValueInfoPair& EntityAuthorityInfo::pose_para_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityInfo.pose_para_list)
  return pose_para_list_.Get(index);
}
inline ::proto::AnimatorParameterValueInfoPair* EntityAuthorityInfo::mutable_pose_para_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityInfo.pose_para_list)
  return pose_para_list_.Mutable(index);
}
inline ::proto::AnimatorParameterValueInfoPair* EntityAuthorityInfo::add_pose_para_list() {
  // @@protoc_insertion_point(field_add:proto.EntityAuthorityInfo.pose_para_list)
  return pose_para_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >*
EntityAuthorityInfo::mutable_pose_para_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EntityAuthorityInfo.pose_para_list)
  return &pose_para_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >&
EntityAuthorityInfo::pose_para_list() const {
  // @@protoc_insertion_point(field_list:proto.EntityAuthorityInfo.pose_para_list)
  return pose_para_list_;
}

// .proto.EntityClientExtraInfo client_extra_info = 6;
inline bool EntityAuthorityInfo::has_client_extra_info() const {
  return this != internal_default_instance() && client_extra_info_ != NULL;
}
inline void EntityAuthorityInfo::clear_client_extra_info() {
  if (GetArenaNoVirtual() == NULL && client_extra_info_ != NULL) delete client_extra_info_;
  client_extra_info_ = NULL;
}
inline const ::proto::EntityClientExtraInfo& EntityAuthorityInfo::client_extra_info() const {
  const ::proto::EntityClientExtraInfo* p = client_extra_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityInfo.client_extra_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityClientExtraInfo*>(
      &::proto::_EntityClientExtraInfo_default_instance_);
}
inline ::proto::EntityClientExtraInfo* EntityAuthorityInfo::mutable_client_extra_info() {
  
  if (client_extra_info_ == NULL) {
    client_extra_info_ = new ::proto::EntityClientExtraInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityInfo.client_extra_info)
  return client_extra_info_;
}
inline ::proto::EntityClientExtraInfo* EntityAuthorityInfo::release_client_extra_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityInfo.client_extra_info)
  
  ::proto::EntityClientExtraInfo* temp = client_extra_info_;
  client_extra_info_ = NULL;
  return temp;
}
inline void EntityAuthorityInfo::set_allocated_client_extra_info(::proto::EntityClientExtraInfo* client_extra_info) {
  delete client_extra_info_;
  client_extra_info_ = client_extra_info;
  if (client_extra_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityInfo.client_extra_info)
}

// -------------------------------------------------------------------

// SceneEntityInfo

// .proto.ProtEntityType entity_type = 1;
inline void SceneEntityInfo::clear_entity_type() {
  entity_type_ = 0;
}
inline ::proto::ProtEntityType SceneEntityInfo::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_type)
  return static_cast< ::proto::ProtEntityType >(entity_type_);
}
inline void SceneEntityInfo::set_entity_type(::proto::ProtEntityType value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_type)
}

// uint32 entity_id = 2;
inline void SceneEntityInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_id)
  return entity_id_;
}
inline void SceneEntityInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_id)
}

// string name = 3;
inline void SceneEntityInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SceneEntityInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.name)
  return name_.GetNoArena();
}
inline void SceneEntityInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.name)
}
#if LANG_CXX11
inline void SceneEntityInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SceneEntityInfo.name)
}
#endif
inline void SceneEntityInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SceneEntityInfo.name)
}
inline void SceneEntityInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SceneEntityInfo.name)
}
inline ::std::string* SceneEntityInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SceneEntityInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SceneEntityInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.name)
}

// .proto.MotionInfo motion_info = 4;
inline bool SceneEntityInfo::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void SceneEntityInfo::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityInfo::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityInfo::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* SceneEntityInfo::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void SceneEntityInfo::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.motion_info)
}

// repeated .proto.PropPair prop_list = 5;
inline int SceneEntityInfo::prop_list_size() const {
  return prop_list_.size();
}
inline void SceneEntityInfo::clear_prop_list() {
  prop_list_.Clear();
}
inline const ::proto::PropPair& SceneEntityInfo::prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.prop_list)
  return prop_list_.Get(index);
}
inline ::proto::PropPair* SceneEntityInfo::mutable_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.prop_list)
  return prop_list_.Mutable(index);
}
inline ::proto::PropPair* SceneEntityInfo::add_prop_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityInfo.prop_list)
  return prop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PropPair >*
SceneEntityInfo::mutable_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityInfo.prop_list)
  return &prop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PropPair >&
SceneEntityInfo::prop_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityInfo.prop_list)
  return prop_list_;
}

// repeated .proto.FightPropPair fight_prop_list = 6;
inline int SceneEntityInfo::fight_prop_list_size() const {
  return fight_prop_list_.size();
}
inline void SceneEntityInfo::clear_fight_prop_list() {
  fight_prop_list_.Clear();
}
inline const ::proto::FightPropPair& SceneEntityInfo::fight_prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.fight_prop_list)
  return fight_prop_list_.Get(index);
}
inline ::proto::FightPropPair* SceneEntityInfo::mutable_fight_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.fight_prop_list)
  return fight_prop_list_.Mutable(index);
}
inline ::proto::FightPropPair* SceneEntityInfo::add_fight_prop_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityInfo.fight_prop_list)
  return fight_prop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FightPropPair >*
SceneEntityInfo::mutable_fight_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityInfo.fight_prop_list)
  return &fight_prop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FightPropPair >&
SceneEntityInfo::fight_prop_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityInfo.fight_prop_list)
  return fight_prop_list_;
}

// uint32 life_state = 7;
inline void SceneEntityInfo::clear_life_state() {
  life_state_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::life_state() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.life_state)
  return life_state_;
}
inline void SceneEntityInfo::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.life_state)
}

// repeated .proto.AnimatorParameterValueInfoPair animator_para_list = 9;
inline int SceneEntityInfo::animator_para_list_size() const {
  return animator_para_list_.size();
}
inline void SceneEntityInfo::clear_animator_para_list() {
  animator_para_list_.Clear();
}
inline const ::proto::AnimatorParameterValueInfoPair& SceneEntityInfo::animator_para_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.animator_para_list)
  return animator_para_list_.Get(index);
}
inline ::proto::AnimatorParameterValueInfoPair* SceneEntityInfo::mutable_animator_para_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.animator_para_list)
  return animator_para_list_.Mutable(index);
}
inline ::proto::AnimatorParameterValueInfoPair* SceneEntityInfo::add_animator_para_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityInfo.animator_para_list)
  return animator_para_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >*
SceneEntityInfo::mutable_animator_para_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityInfo.animator_para_list)
  return &animator_para_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AnimatorParameterValueInfoPair >&
SceneEntityInfo::animator_para_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityInfo.animator_para_list)
  return animator_para_list_;
}

// uint32 last_move_scene_time_ms = 17;
inline void SceneEntityInfo::clear_last_move_scene_time_ms() {
  last_move_scene_time_ms_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::last_move_scene_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.last_move_scene_time_ms)
  return last_move_scene_time_ms_;
}
inline void SceneEntityInfo::set_last_move_scene_time_ms(::google::protobuf::uint32 value) {
  
  last_move_scene_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.last_move_scene_time_ms)
}

// uint32 last_move_reliable_seq = 18;
inline void SceneEntityInfo::clear_last_move_reliable_seq() {
  last_move_reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::last_move_reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.last_move_reliable_seq)
  return last_move_reliable_seq_;
}
inline void SceneEntityInfo::set_last_move_reliable_seq(::google::protobuf::uint32 value) {
  
  last_move_reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.last_move_reliable_seq)
}

// .proto.EntityClientData entity_client_data = 19;
inline bool SceneEntityInfo::has_entity_client_data() const {
  return this != internal_default_instance() && entity_client_data_ != NULL;
}
inline void SceneEntityInfo::clear_entity_client_data() {
  if (GetArenaNoVirtual() == NULL && entity_client_data_ != NULL) delete entity_client_data_;
  entity_client_data_ = NULL;
}
inline const ::proto::EntityClientData& SceneEntityInfo::entity_client_data() const {
  const ::proto::EntityClientData* p = entity_client_data_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_client_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityClientData*>(
      &::proto::_EntityClientData_default_instance_);
}
inline ::proto::EntityClientData* SceneEntityInfo::mutable_entity_client_data() {
  
  if (entity_client_data_ == NULL) {
    entity_client_data_ = new ::proto::EntityClientData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.entity_client_data)
  return entity_client_data_;
}
inline ::proto::EntityClientData* SceneEntityInfo::release_entity_client_data() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.entity_client_data)
  
  ::proto::EntityClientData* temp = entity_client_data_;
  entity_client_data_ = NULL;
  return temp;
}
inline void SceneEntityInfo::set_allocated_entity_client_data(::proto::EntityClientData* entity_client_data) {
  delete entity_client_data_;
  entity_client_data_ = entity_client_data;
  if (entity_client_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.entity_client_data)
}

// repeated .proto.EntityEnvironmentInfo entity_environment_info_list = 20;
inline int SceneEntityInfo::entity_environment_info_list_size() const {
  return entity_environment_info_list_.size();
}
inline void SceneEntityInfo::clear_entity_environment_info_list() {
  entity_environment_info_list_.Clear();
}
inline const ::proto::EntityEnvironmentInfo& SceneEntityInfo::entity_environment_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_environment_info_list)
  return entity_environment_info_list_.Get(index);
}
inline ::proto::EntityEnvironmentInfo* SceneEntityInfo::mutable_entity_environment_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.entity_environment_info_list)
  return entity_environment_info_list_.Mutable(index);
}
inline ::proto::EntityEnvironmentInfo* SceneEntityInfo::add_entity_environment_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityInfo.entity_environment_info_list)
  return entity_environment_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityEnvironmentInfo >*
SceneEntityInfo::mutable_entity_environment_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityInfo.entity_environment_info_list)
  return &entity_environment_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityEnvironmentInfo >&
SceneEntityInfo::entity_environment_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityInfo.entity_environment_info_list)
  return entity_environment_info_list_;
}

// .proto.EntityAuthorityInfo entity_authority_info = 21;
inline bool SceneEntityInfo::has_entity_authority_info() const {
  return this != internal_default_instance() && entity_authority_info_ != NULL;
}
inline void SceneEntityInfo::clear_entity_authority_info() {
  if (GetArenaNoVirtual() == NULL && entity_authority_info_ != NULL) delete entity_authority_info_;
  entity_authority_info_ = NULL;
}
inline const ::proto::EntityAuthorityInfo& SceneEntityInfo::entity_authority_info() const {
  const ::proto::EntityAuthorityInfo* p = entity_authority_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_authority_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityAuthorityInfo*>(
      &::proto::_EntityAuthorityInfo_default_instance_);
}
inline ::proto::EntityAuthorityInfo* SceneEntityInfo::mutable_entity_authority_info() {
  
  if (entity_authority_info_ == NULL) {
    entity_authority_info_ = new ::proto::EntityAuthorityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.entity_authority_info)
  return entity_authority_info_;
}
inline ::proto::EntityAuthorityInfo* SceneEntityInfo::release_entity_authority_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.entity_authority_info)
  
  ::proto::EntityAuthorityInfo* temp = entity_authority_info_;
  entity_authority_info_ = NULL;
  return temp;
}
inline void SceneEntityInfo::set_allocated_entity_authority_info(::proto::EntityAuthorityInfo* entity_authority_info) {
  delete entity_authority_info_;
  entity_authority_info_ = entity_authority_info;
  if (entity_authority_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.entity_authority_info)
}

// repeated string tag_list = 22;
inline int SceneEntityInfo::tag_list_size() const {
  return tag_list_.size();
}
inline void SceneEntityInfo::clear_tag_list() {
  tag_list_.Clear();
}
inline const ::std::string& SceneEntityInfo::tag_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.tag_list)
  return tag_list_.Get(index);
}
inline ::std::string* SceneEntityInfo::mutable_tag_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.tag_list)
  return tag_list_.Mutable(index);
}
inline void SceneEntityInfo::set_tag_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.tag_list)
  tag_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SceneEntityInfo::set_tag_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.tag_list)
  tag_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SceneEntityInfo::set_tag_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.SceneEntityInfo.tag_list)
}
inline void SceneEntityInfo::set_tag_list(int index, const char* value, size_t size) {
  tag_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.SceneEntityInfo.tag_list)
}
inline ::std::string* SceneEntityInfo::add_tag_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.SceneEntityInfo.tag_list)
  return tag_list_.Add();
}
inline void SceneEntityInfo::add_tag_list(const ::std::string& value) {
  tag_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.SceneEntityInfo.tag_list)
}
#if LANG_CXX11
inline void SceneEntityInfo::add_tag_list(::std::string&& value) {
  tag_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.SceneEntityInfo.tag_list)
}
#endif
inline void SceneEntityInfo::add_tag_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.SceneEntityInfo.tag_list)
}
inline void SceneEntityInfo::add_tag_list(const char* value, size_t size) {
  tag_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.SceneEntityInfo.tag_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SceneEntityInfo::tag_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityInfo.tag_list)
  return tag_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SceneEntityInfo::mutable_tag_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityInfo.tag_list)
  return &tag_list_;
}

// repeated .proto.ServerBuff server_buff_list = 23;
inline int SceneEntityInfo::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void SceneEntityInfo::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& SceneEntityInfo::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* SceneEntityInfo::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* SceneEntityInfo::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityInfo.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
SceneEntityInfo::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityInfo.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
SceneEntityInfo::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityInfo.server_buff_list)
  return server_buff_list_;
}

// .proto.SceneAvatarInfo avatar = 10;
inline bool SceneEntityInfo::has_avatar() const {
  return entity_case() == kAvatar;
}
inline void SceneEntityInfo::set_has_avatar() {
  _oneof_case_[0] = kAvatar;
}
inline void SceneEntityInfo::clear_avatar() {
  if (has_avatar()) {
    delete entity_.avatar_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneAvatarInfo& SceneEntityInfo::avatar() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.avatar)
  return has_avatar()
      ? *entity_.avatar_
      : ::proto::SceneAvatarInfo::default_instance();
}
inline ::proto::SceneAvatarInfo* SceneEntityInfo::mutable_avatar() {
  if (!has_avatar()) {
    clear_entity();
    set_has_avatar();
    entity_.avatar_ = new ::proto::SceneAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.avatar)
  return entity_.avatar_;
}
inline ::proto::SceneAvatarInfo* SceneEntityInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.avatar)
  if (has_avatar()) {
    clear_has_entity();
    ::proto::SceneAvatarInfo* temp = entity_.avatar_;
    entity_.avatar_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_avatar(::proto::SceneAvatarInfo* avatar) {
  clear_entity();
  if (avatar) {
    set_has_avatar();
    entity_.avatar_ = avatar;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.avatar)
}

// .proto.SceneMonsterInfo monster = 11;
inline bool SceneEntityInfo::has_monster() const {
  return entity_case() == kMonster;
}
inline void SceneEntityInfo::set_has_monster() {
  _oneof_case_[0] = kMonster;
}
inline void SceneEntityInfo::clear_monster() {
  if (has_monster()) {
    delete entity_.monster_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneMonsterInfo& SceneEntityInfo::monster() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.monster)
  return has_monster()
      ? *entity_.monster_
      : ::proto::SceneMonsterInfo::default_instance();
}
inline ::proto::SceneMonsterInfo* SceneEntityInfo::mutable_monster() {
  if (!has_monster()) {
    clear_entity();
    set_has_monster();
    entity_.monster_ = new ::proto::SceneMonsterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.monster)
  return entity_.monster_;
}
inline ::proto::SceneMonsterInfo* SceneEntityInfo::release_monster() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.monster)
  if (has_monster()) {
    clear_has_entity();
    ::proto::SceneMonsterInfo* temp = entity_.monster_;
    entity_.monster_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_monster(::proto::SceneMonsterInfo* monster) {
  clear_entity();
  if (monster) {
    set_has_monster();
    entity_.monster_ = monster;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.monster)
}

// .proto.SceneNpcInfo npc = 12;
inline bool SceneEntityInfo::has_npc() const {
  return entity_case() == kNpc;
}
inline void SceneEntityInfo::set_has_npc() {
  _oneof_case_[0] = kNpc;
}
inline void SceneEntityInfo::clear_npc() {
  if (has_npc()) {
    delete entity_.npc_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneNpcInfo& SceneEntityInfo::npc() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.npc)
  return has_npc()
      ? *entity_.npc_
      : ::proto::SceneNpcInfo::default_instance();
}
inline ::proto::SceneNpcInfo* SceneEntityInfo::mutable_npc() {
  if (!has_npc()) {
    clear_entity();
    set_has_npc();
    entity_.npc_ = new ::proto::SceneNpcInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.npc)
  return entity_.npc_;
}
inline ::proto::SceneNpcInfo* SceneEntityInfo::release_npc() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.npc)
  if (has_npc()) {
    clear_has_entity();
    ::proto::SceneNpcInfo* temp = entity_.npc_;
    entity_.npc_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_npc(::proto::SceneNpcInfo* npc) {
  clear_entity();
  if (npc) {
    set_has_npc();
    entity_.npc_ = npc;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.npc)
}

// .proto.SceneGadgetInfo gadget = 13;
inline bool SceneEntityInfo::has_gadget() const {
  return entity_case() == kGadget;
}
inline void SceneEntityInfo::set_has_gadget() {
  _oneof_case_[0] = kGadget;
}
inline void SceneEntityInfo::clear_gadget() {
  if (has_gadget()) {
    delete entity_.gadget_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneGadgetInfo& SceneEntityInfo::gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.gadget)
  return has_gadget()
      ? *entity_.gadget_
      : ::proto::SceneGadgetInfo::default_instance();
}
inline ::proto::SceneGadgetInfo* SceneEntityInfo::mutable_gadget() {
  if (!has_gadget()) {
    clear_entity();
    set_has_gadget();
    entity_.gadget_ = new ::proto::SceneGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.gadget)
  return entity_.gadget_;
}
inline ::proto::SceneGadgetInfo* SceneEntityInfo::release_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.gadget)
  if (has_gadget()) {
    clear_has_entity();
    ::proto::SceneGadgetInfo* temp = entity_.gadget_;
    entity_.gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_gadget(::proto::SceneGadgetInfo* gadget) {
  clear_entity();
  if (gadget) {
    set_has_gadget();
    entity_.gadget_ = gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.gadget)
}

inline bool SceneEntityInfo::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
inline void SceneEntityInfo::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
inline SceneEntityInfo::EntityCase SceneEntityInfo::entity_case() const {
  return SceneEntityInfo::EntityCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CreateGadgetInfo_Chest

// uint32 chest_drop_id = 1;
inline void CreateGadgetInfo_Chest::clear_chest_drop_id() {
  chest_drop_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateGadgetInfo_Chest::chest_drop_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.Chest.chest_drop_id)
  return chest_drop_id_;
}
inline void CreateGadgetInfo_Chest::set_chest_drop_id(::google::protobuf::uint32 value) {
  
  chest_drop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.Chest.chest_drop_id)
}

// bool is_show_cutscene = 2;
inline void CreateGadgetInfo_Chest::clear_is_show_cutscene() {
  is_show_cutscene_ = false;
}
inline bool CreateGadgetInfo_Chest::is_show_cutscene() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.Chest.is_show_cutscene)
  return is_show_cutscene_;
}
inline void CreateGadgetInfo_Chest::set_is_show_cutscene(bool value) {
  
  is_show_cutscene_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.Chest.is_show_cutscene)
}

// -------------------------------------------------------------------

// CreateGadgetInfo

// .proto.GadgetBornType born_type = 1;
inline void CreateGadgetInfo::clear_born_type() {
  born_type_ = 0;
}
inline ::proto::GadgetBornType CreateGadgetInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.born_type)
  return static_cast< ::proto::GadgetBornType >(born_type_);
}
inline void CreateGadgetInfo::set_born_type(::proto::GadgetBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.born_type)
}

// .proto.CreateGadgetInfo.Chest chest = 2;
inline bool CreateGadgetInfo::has_chest() const {
  return this != internal_default_instance() && chest_ != NULL;
}
inline void CreateGadgetInfo::clear_chest() {
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) delete chest_;
  chest_ = NULL;
}
inline const ::proto::CreateGadgetInfo_Chest& CreateGadgetInfo::chest() const {
  const ::proto::CreateGadgetInfo_Chest* p = chest_;
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.chest)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateGadgetInfo_Chest*>(
      &::proto::_CreateGadgetInfo_Chest_default_instance_);
}
inline ::proto::CreateGadgetInfo_Chest* CreateGadgetInfo::mutable_chest() {
  
  if (chest_ == NULL) {
    chest_ = new ::proto::CreateGadgetInfo_Chest;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateGadgetInfo.chest)
  return chest_;
}
inline ::proto::CreateGadgetInfo_Chest* CreateGadgetInfo::release_chest() {
  // @@protoc_insertion_point(field_release:proto.CreateGadgetInfo.chest)
  
  ::proto::CreateGadgetInfo_Chest* temp = chest_;
  chest_ = NULL;
  return temp;
}
inline void CreateGadgetInfo::set_allocated_chest(::proto::CreateGadgetInfo_Chest* chest) {
  delete chest_;
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateGadgetInfo.chest)
}

// -------------------------------------------------------------------

// CreateEntityInfo

// uint32 level = 5;
inline void CreateEntityInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.level)
  return level_;
}
inline void CreateEntityInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.level)
}

// .proto.Vector pos = 6;
inline bool CreateEntityInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void CreateEntityInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& CreateEntityInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* CreateEntityInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.pos)
  return pos_;
}
inline ::proto::Vector* CreateEntityInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CreateEntityInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.pos)
}

// .proto.Vector rot = 7;
inline bool CreateEntityInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void CreateEntityInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& CreateEntityInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* CreateEntityInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.rot)
  return rot_;
}
inline ::proto::Vector* CreateEntityInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void CreateEntityInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.rot)
}

// uint32 scene_id = 10;
inline void CreateEntityInfo::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.scene_id)
  return scene_id_;
}
inline void CreateEntityInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.scene_id)
}

// uint32 room_id = 11;
inline void CreateEntityInfo::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::room_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.room_id)
  return room_id_;
}
inline void CreateEntityInfo::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.room_id)
}

// uint32 client_unique_id = 12;
inline void CreateEntityInfo::clear_client_unique_id() {
  client_unique_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::client_unique_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.client_unique_id)
  return client_unique_id_;
}
inline void CreateEntityInfo::set_client_unique_id(::google::protobuf::uint32 value) {
  
  client_unique_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.client_unique_id)
}

// uint32 monster_id = 1;
inline bool CreateEntityInfo::has_monster_id() const {
  return entity_case() == kMonsterId;
}
inline void CreateEntityInfo::set_has_monster_id() {
  _oneof_case_[0] = kMonsterId;
}
inline void CreateEntityInfo::clear_monster_id() {
  if (has_monster_id()) {
    entity_.monster_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.monster_id)
  if (has_monster_id()) {
    return entity_.monster_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_monster_id(::google::protobuf::uint32 value) {
  if (!has_monster_id()) {
    clear_entity();
    set_has_monster_id();
  }
  entity_.monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.monster_id)
}

// uint32 npc_id = 2;
inline bool CreateEntityInfo::has_npc_id() const {
  return entity_case() == kNpcId;
}
inline void CreateEntityInfo::set_has_npc_id() {
  _oneof_case_[0] = kNpcId;
}
inline void CreateEntityInfo::clear_npc_id() {
  if (has_npc_id()) {
    entity_.npc_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.npc_id)
  if (has_npc_id()) {
    return entity_.npc_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_npc_id(::google::protobuf::uint32 value) {
  if (!has_npc_id()) {
    clear_entity();
    set_has_npc_id();
  }
  entity_.npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.npc_id)
}

// uint32 gadget_id = 3;
inline bool CreateEntityInfo::has_gadget_id() const {
  return entity_case() == kGadgetId;
}
inline void CreateEntityInfo::set_has_gadget_id() {
  _oneof_case_[0] = kGadgetId;
}
inline void CreateEntityInfo::clear_gadget_id() {
  if (has_gadget_id()) {
    entity_.gadget_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.gadget_id)
  if (has_gadget_id()) {
    return entity_.gadget_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_gadget_id(::google::protobuf::uint32 value) {
  if (!has_gadget_id()) {
    clear_entity();
    set_has_gadget_id();
  }
  entity_.gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.gadget_id)
}

// uint32 item_id = 4;
inline bool CreateEntityInfo::has_item_id() const {
  return entity_case() == kItemId;
}
inline void CreateEntityInfo::set_has_item_id() {
  _oneof_case_[0] = kItemId;
}
inline void CreateEntityInfo::clear_item_id() {
  if (has_item_id()) {
    entity_.item_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.item_id)
  if (has_item_id()) {
    return entity_.item_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_item_id(::google::protobuf::uint32 value) {
  if (!has_item_id()) {
    clear_entity();
    set_has_item_id();
  }
  entity_.item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.item_id)
}

// .proto.CreateGadgetInfo gadget = 13;
inline bool CreateEntityInfo::has_gadget() const {
  return entity_create_info_case() == kGadget;
}
inline void CreateEntityInfo::set_has_gadget() {
  _oneof_case_[1] = kGadget;
}
inline void CreateEntityInfo::clear_gadget() {
  if (has_gadget()) {
    delete entity_create_info_.gadget_;
    clear_has_entity_create_info();
  }
}
inline  const ::proto::CreateGadgetInfo& CreateEntityInfo::gadget() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.gadget)
  return has_gadget()
      ? *entity_create_info_.gadget_
      : ::proto::CreateGadgetInfo::default_instance();
}
inline ::proto::CreateGadgetInfo* CreateEntityInfo::mutable_gadget() {
  if (!has_gadget()) {
    clear_entity_create_info();
    set_has_gadget();
    entity_create_info_.gadget_ = new ::proto::CreateGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.gadget)
  return entity_create_info_.gadget_;
}
inline ::proto::CreateGadgetInfo* CreateEntityInfo::release_gadget() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.gadget)
  if (has_gadget()) {
    clear_has_entity_create_info();
    ::proto::CreateGadgetInfo* temp = entity_create_info_.gadget_;
    entity_create_info_.gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CreateEntityInfo::set_allocated_gadget(::proto::CreateGadgetInfo* gadget) {
  clear_entity_create_info();
  if (gadget) {
    set_has_gadget();
    entity_create_info_.gadget_ = gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.gadget)
}

inline bool CreateEntityInfo::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
inline void CreateEntityInfo::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
inline bool CreateEntityInfo::has_entity_create_info() const {
  return entity_create_info_case() != ENTITY_CREATE_INFO_NOT_SET;
}
inline void CreateEntityInfo::clear_has_entity_create_info() {
  _oneof_case_[1] = ENTITY_CREATE_INFO_NOT_SET;
}
inline CreateEntityInfo::EntityCase CreateEntityInfo::entity_case() const {
  return CreateEntityInfo::EntityCase(_oneof_case_[0]);
}
inline CreateEntityInfo::EntityCreateInfoCase CreateEntityInfo::entity_create_info_case() const {
  return CreateEntityInfo::EntityCreateInfoCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// TrialAvatarGrantRecord

// uint32 grant_reason = 1;
inline void TrialAvatarGrantRecord::clear_grant_reason() {
  grant_reason_ = 0u;
}
inline ::google::protobuf::uint32 TrialAvatarGrantRecord::grant_reason() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarGrantRecord.grant_reason)
  return grant_reason_;
}
inline void TrialAvatarGrantRecord::set_grant_reason(::google::protobuf::uint32 value) {
  
  grant_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarGrantRecord.grant_reason)
}

// uint32 from_parent_quest_id = 2;
inline void TrialAvatarGrantRecord::clear_from_parent_quest_id() {
  from_parent_quest_id_ = 0u;
}
inline ::google::protobuf::uint32 TrialAvatarGrantRecord::from_parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarGrantRecord.from_parent_quest_id)
  return from_parent_quest_id_;
}
inline void TrialAvatarGrantRecord::set_from_parent_quest_id(::google::protobuf::uint32 value) {
  
  from_parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarGrantRecord.from_parent_quest_id)
}

// -------------------------------------------------------------------

// TrialAvatarInfo

// uint32 trial_avatar_id = 1;
inline void TrialAvatarInfo::clear_trial_avatar_id() {
  trial_avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 TrialAvatarInfo::trial_avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.trial_avatar_id)
  return trial_avatar_id_;
}
inline void TrialAvatarInfo::set_trial_avatar_id(::google::protobuf::uint32 value) {
  
  trial_avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarInfo.trial_avatar_id)
}

// repeated .proto.Item trial_equip_list = 2;
inline int TrialAvatarInfo::trial_equip_list_size() const {
  return trial_equip_list_.size();
}
inline void TrialAvatarInfo::clear_trial_equip_list() {
  trial_equip_list_.Clear();
}
inline const ::proto::Item& TrialAvatarInfo::trial_equip_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Get(index);
}
inline ::proto::Item* TrialAvatarInfo::mutable_trial_equip_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Mutable(index);
}
inline ::proto::Item* TrialAvatarInfo::add_trial_equip_list() {
  // @@protoc_insertion_point(field_add:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Item >*
TrialAvatarInfo::mutable_trial_equip_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TrialAvatarInfo.trial_equip_list)
  return &trial_equip_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Item >&
TrialAvatarInfo::trial_equip_list() const {
  // @@protoc_insertion_point(field_list:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_;
}

// .proto.TrialAvatarGrantRecord grant_record = 3;
inline bool TrialAvatarInfo::has_grant_record() const {
  return this != internal_default_instance() && grant_record_ != NULL;
}
inline void TrialAvatarInfo::clear_grant_record() {
  if (GetArenaNoVirtual() == NULL && grant_record_ != NULL) delete grant_record_;
  grant_record_ = NULL;
}
inline const ::proto::TrialAvatarGrantRecord& TrialAvatarInfo::grant_record() const {
  const ::proto::TrialAvatarGrantRecord* p = grant_record_;
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.grant_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrialAvatarGrantRecord*>(
      &::proto::_TrialAvatarGrantRecord_default_instance_);
}
inline ::proto::TrialAvatarGrantRecord* TrialAvatarInfo::mutable_grant_record() {
  
  if (grant_record_ == NULL) {
    grant_record_ = new ::proto::TrialAvatarGrantRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TrialAvatarInfo.grant_record)
  return grant_record_;
}
inline ::proto::TrialAvatarGrantRecord* TrialAvatarInfo::release_grant_record() {
  // @@protoc_insertion_point(field_release:proto.TrialAvatarInfo.grant_record)
  
  ::proto::TrialAvatarGrantRecord* temp = grant_record_;
  grant_record_ = NULL;
  return temp;
}
inline void TrialAvatarInfo::set_allocated_grant_record(::proto::TrialAvatarGrantRecord* grant_record) {
  delete grant_record_;
  grant_record_ = grant_record;
  if (grant_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TrialAvatarInfo.grant_record)
}

// -------------------------------------------------------------------

// AvatarSkillInfo

// uint32 pass_cd_time = 1;
inline void AvatarSkillInfo::clear_pass_cd_time() {
  pass_cd_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarSkillInfo::pass_cd_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.pass_cd_time)
  return pass_cd_time_;
}
inline void AvatarSkillInfo::set_pass_cd_time(::google::protobuf::uint32 value) {
  
  pass_cd_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.pass_cd_time)
}

// repeated uint32 full_cd_time_list = 2;
inline int AvatarSkillInfo::full_cd_time_list_size() const {
  return full_cd_time_list_.size();
}
inline void AvatarSkillInfo::clear_full_cd_time_list() {
  full_cd_time_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarSkillInfo::full_cd_time_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.full_cd_time_list)
  return full_cd_time_list_.Get(index);
}
inline void AvatarSkillInfo::set_full_cd_time_list(int index, ::google::protobuf::uint32 value) {
  full_cd_time_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.full_cd_time_list)
}
inline void AvatarSkillInfo::add_full_cd_time_list(::google::protobuf::uint32 value) {
  full_cd_time_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarSkillInfo.full_cd_time_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarSkillInfo::full_cd_time_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarSkillInfo.full_cd_time_list)
  return full_cd_time_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarSkillInfo::mutable_full_cd_time_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarSkillInfo.full_cd_time_list)
  return &full_cd_time_list_;
}

// uint32 max_charge_count = 3;
inline void AvatarSkillInfo::clear_max_charge_count() {
  max_charge_count_ = 0u;
}
inline ::google::protobuf::uint32 AvatarSkillInfo::max_charge_count() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.max_charge_count)
  return max_charge_count_;
}
inline void AvatarSkillInfo::set_max_charge_count(::google::protobuf::uint32 value) {
  
  max_charge_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.max_charge_count)
}

// -------------------------------------------------------------------

// FetterData

// uint32 fetter_id = 1;
inline void FetterData::clear_fetter_id() {
  fetter_id_ = 0u;
}
inline ::google::protobuf::uint32 FetterData::fetter_id() const {
  // @@protoc_insertion_point(field_get:proto.FetterData.fetter_id)
  return fetter_id_;
}
inline void FetterData::set_fetter_id(::google::protobuf::uint32 value) {
  
  fetter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FetterData.fetter_id)
}

// uint32 fetter_state = 2;
inline void FetterData::clear_fetter_state() {
  fetter_state_ = 0u;
}
inline ::google::protobuf::uint32 FetterData::fetter_state() const {
  // @@protoc_insertion_point(field_get:proto.FetterData.fetter_state)
  return fetter_state_;
}
inline void FetterData::set_fetter_state(::google::protobuf::uint32 value) {
  
  fetter_state_ = value;
  // @@protoc_insertion_point(field_set:proto.FetterData.fetter_state)
}

// repeated uint32 cond_index_list = 3;
inline int FetterData::cond_index_list_size() const {
  return cond_index_list_.size();
}
inline void FetterData::clear_cond_index_list() {
  cond_index_list_.Clear();
}
inline ::google::protobuf::uint32 FetterData::cond_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FetterData.cond_index_list)
  return cond_index_list_.Get(index);
}
inline void FetterData::set_cond_index_list(int index, ::google::protobuf::uint32 value) {
  cond_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FetterData.cond_index_list)
}
inline void FetterData::add_cond_index_list(::google::protobuf::uint32 value) {
  cond_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FetterData.cond_index_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FetterData::cond_index_list() const {
  // @@protoc_insertion_point(field_list:proto.FetterData.cond_index_list)
  return cond_index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FetterData::mutable_cond_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FetterData.cond_index_list)
  return &cond_index_list_;
}

// -------------------------------------------------------------------

// AvatarFetterInfo

// uint32 exp_number = 1;
inline void AvatarFetterInfo::clear_exp_number() {
  exp_number_ = 0u;
}
inline ::google::protobuf::uint32 AvatarFetterInfo::exp_number() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.exp_number)
  return exp_number_;
}
inline void AvatarFetterInfo::set_exp_number(::google::protobuf::uint32 value) {
  
  exp_number_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.exp_number)
}

// uint32 exp_level = 2;
inline void AvatarFetterInfo::clear_exp_level() {
  exp_level_ = 0u;
}
inline ::google::protobuf::uint32 AvatarFetterInfo::exp_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.exp_level)
  return exp_level_;
}
inline void AvatarFetterInfo::set_exp_level(::google::protobuf::uint32 value) {
  
  exp_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.exp_level)
}

// repeated uint32 open_id_list = 3;
inline int AvatarFetterInfo::open_id_list_size() const {
  return open_id_list_.size();
}
inline void AvatarFetterInfo::clear_open_id_list() {
  open_id_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarFetterInfo::open_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.open_id_list)
  return open_id_list_.Get(index);
}
inline void AvatarFetterInfo::set_open_id_list(int index, ::google::protobuf::uint32 value) {
  open_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.open_id_list)
}
inline void AvatarFetterInfo::add_open_id_list(::google::protobuf::uint32 value) {
  open_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarFetterInfo.open_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarFetterInfo::open_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarFetterInfo.open_id_list)
  return open_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarFetterInfo::mutable_open_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarFetterInfo.open_id_list)
  return &open_id_list_;
}

// repeated uint32 finish_id_list = 4;
inline int AvatarFetterInfo::finish_id_list_size() const {
  return finish_id_list_.size();
}
inline void AvatarFetterInfo::clear_finish_id_list() {
  finish_id_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarFetterInfo::finish_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.finish_id_list)
  return finish_id_list_.Get(index);
}
inline void AvatarFetterInfo::set_finish_id_list(int index, ::google::protobuf::uint32 value) {
  finish_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.finish_id_list)
}
inline void AvatarFetterInfo::add_finish_id_list(::google::protobuf::uint32 value) {
  finish_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarFetterInfo.finish_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarFetterInfo::finish_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarFetterInfo.finish_id_list)
  return finish_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarFetterInfo::mutable_finish_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarFetterInfo.finish_id_list)
  return &finish_id_list_;
}

// repeated uint32 rewarded_fetter_level_list = 5;
inline int AvatarFetterInfo::rewarded_fetter_level_list_size() const {
  return rewarded_fetter_level_list_.size();
}
inline void AvatarFetterInfo::clear_rewarded_fetter_level_list() {
  rewarded_fetter_level_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarFetterInfo::rewarded_fetter_level_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.rewarded_fetter_level_list)
  return rewarded_fetter_level_list_.Get(index);
}
inline void AvatarFetterInfo::set_rewarded_fetter_level_list(int index, ::google::protobuf::uint32 value) {
  rewarded_fetter_level_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.rewarded_fetter_level_list)
}
inline void AvatarFetterInfo::add_rewarded_fetter_level_list(::google::protobuf::uint32 value) {
  rewarded_fetter_level_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarFetterInfo.rewarded_fetter_level_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarFetterInfo::rewarded_fetter_level_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarFetterInfo.rewarded_fetter_level_list)
  return rewarded_fetter_level_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarFetterInfo::mutable_rewarded_fetter_level_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarFetterInfo.rewarded_fetter_level_list)
  return &rewarded_fetter_level_list_;
}

// repeated .proto.FetterData fetter_list = 6;
inline int AvatarFetterInfo::fetter_list_size() const {
  return fetter_list_.size();
}
inline void AvatarFetterInfo::clear_fetter_list() {
  fetter_list_.Clear();
}
inline const ::proto::FetterData& AvatarFetterInfo::fetter_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.fetter_list)
  return fetter_list_.Get(index);
}
inline ::proto::FetterData* AvatarFetterInfo::mutable_fetter_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarFetterInfo.fetter_list)
  return fetter_list_.Mutable(index);
}
inline ::proto::FetterData* AvatarFetterInfo::add_fetter_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarFetterInfo.fetter_list)
  return fetter_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FetterData >*
AvatarFetterInfo::mutable_fetter_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarFetterInfo.fetter_list)
  return &fetter_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FetterData >&
AvatarFetterInfo::fetter_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarFetterInfo.fetter_list)
  return fetter_list_;
}

// -------------------------------------------------------------------

// AvatarExpeditionInfo

// .proto.AvatarExpeditionState state = 1;
inline void AvatarExpeditionInfo::clear_state() {
  state_ = 0;
}
inline ::proto::AvatarExpeditionState AvatarExpeditionInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.state)
  return static_cast< ::proto::AvatarExpeditionState >(state_);
}
inline void AvatarExpeditionInfo::set_state(::proto::AvatarExpeditionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.state)
}

// uint32 exp_id = 2;
inline void AvatarExpeditionInfo::clear_exp_id() {
  exp_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionInfo::exp_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.exp_id)
  return exp_id_;
}
inline void AvatarExpeditionInfo::set_exp_id(::google::protobuf::uint32 value) {
  
  exp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.exp_id)
}

// uint32 hour_time = 3;
inline void AvatarExpeditionInfo::clear_hour_time() {
  hour_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionInfo::hour_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.hour_time)
  return hour_time_;
}
inline void AvatarExpeditionInfo::set_hour_time(::google::protobuf::uint32 value) {
  
  hour_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.hour_time)
}

// uint32 start_time = 4;
inline void AvatarExpeditionInfo::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionInfo::start_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.start_time)
  return start_time_;
}
inline void AvatarExpeditionInfo::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.start_time)
}

// float shorten_ratio = 5;
inline void AvatarExpeditionInfo::clear_shorten_ratio() {
  shorten_ratio_ = 0;
}
inline float AvatarExpeditionInfo::shorten_ratio() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.shorten_ratio)
  return shorten_ratio_;
}
inline void AvatarExpeditionInfo::set_shorten_ratio(float value) {
  
  shorten_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.shorten_ratio)
}

// -------------------------------------------------------------------

// AvatarEquipAffixInfo

// uint32 equip_affix_id = 1;
inline void AvatarEquipAffixInfo::clear_equip_affix_id() {
  equip_affix_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarEquipAffixInfo::equip_affix_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEquipAffixInfo.equip_affix_id)
  return equip_affix_id_;
}
inline void AvatarEquipAffixInfo::set_equip_affix_id(::google::protobuf::uint32 value) {
  
  equip_affix_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEquipAffixInfo.equip_affix_id)
}

// uint32 left_cd_time = 2;
inline void AvatarEquipAffixInfo::clear_left_cd_time() {
  left_cd_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarEquipAffixInfo::left_cd_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEquipAffixInfo.left_cd_time)
  return left_cd_time_;
}
inline void AvatarEquipAffixInfo::set_left_cd_time(::google::protobuf::uint32 value) {
  
  left_cd_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEquipAffixInfo.left_cd_time)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarInfo

// uint32 avatar_id = 1;
inline void AvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.avatar_id)
  return avatar_id_;
}
inline void AvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.avatar_id)
}

// uint64 guid = 2;
inline void AvatarInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.guid)
  return guid_;
}
inline void AvatarInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.guid)
}

// map<uint32, .proto.PropValue> prop_map = 3;
inline int AvatarInfo::prop_map_size() const {
  return prop_map_.size();
}
inline void AvatarInfo::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
AvatarInfo::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
AvatarInfo::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.prop_map)
  return prop_map_.MutableMap();
}

// uint32 life_state = 4;
inline void AvatarInfo::clear_life_state() {
  life_state_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::life_state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.life_state)
  return life_state_;
}
inline void AvatarInfo::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.life_state)
}

// repeated uint64 equip_guid_list = 5;
inline int AvatarInfo::equip_guid_list_size() const {
  return equip_guid_list_.size();
}
inline void AvatarInfo::clear_equip_guid_list() {
  equip_guid_list_.Clear();
}
inline ::google::protobuf::uint64 AvatarInfo::equip_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.equip_guid_list)
  return equip_guid_list_.Get(index);
}
inline void AvatarInfo::set_equip_guid_list(int index, ::google::protobuf::uint64 value) {
  equip_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.equip_guid_list)
}
inline void AvatarInfo::add_equip_guid_list(::google::protobuf::uint64 value) {
  equip_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.equip_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarInfo::equip_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.equip_guid_list)
  return equip_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarInfo::mutable_equip_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.equip_guid_list)
  return &equip_guid_list_;
}

// repeated uint32 talent_id_list = 6;
inline int AvatarInfo::talent_id_list_size() const {
  return talent_id_list_.size();
}
inline void AvatarInfo::clear_talent_id_list() {
  talent_id_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarInfo::talent_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.talent_id_list)
  return talent_id_list_.Get(index);
}
inline void AvatarInfo::set_talent_id_list(int index, ::google::protobuf::uint32 value) {
  talent_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.talent_id_list)
}
inline void AvatarInfo::add_talent_id_list(::google::protobuf::uint32 value) {
  talent_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.talent_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::talent_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.talent_id_list)
  return talent_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_talent_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.talent_id_list)
  return &talent_id_list_;
}

// map<uint32, float> fight_prop_map = 7;
inline int AvatarInfo::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void AvatarInfo::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarInfo::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarInfo::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// .proto.TrialAvatarInfo trial_avatar_info = 9;
inline bool AvatarInfo::has_trial_avatar_info() const {
  return this != internal_default_instance() && trial_avatar_info_ != NULL;
}
inline void AvatarInfo::clear_trial_avatar_info() {
  if (GetArenaNoVirtual() == NULL && trial_avatar_info_ != NULL) delete trial_avatar_info_;
  trial_avatar_info_ = NULL;
}
inline const ::proto::TrialAvatarInfo& AvatarInfo::trial_avatar_info() const {
  const ::proto::TrialAvatarInfo* p = trial_avatar_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.trial_avatar_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrialAvatarInfo*>(
      &::proto::_TrialAvatarInfo_default_instance_);
}
inline ::proto::TrialAvatarInfo* AvatarInfo::mutable_trial_avatar_info() {
  
  if (trial_avatar_info_ == NULL) {
    trial_avatar_info_ = new ::proto::TrialAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.trial_avatar_info)
  return trial_avatar_info_;
}
inline ::proto::TrialAvatarInfo* AvatarInfo::release_trial_avatar_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarInfo.trial_avatar_info)
  
  ::proto::TrialAvatarInfo* temp = trial_avatar_info_;
  trial_avatar_info_ = NULL;
  return temp;
}
inline void AvatarInfo::set_allocated_trial_avatar_info(::proto::TrialAvatarInfo* trial_avatar_info) {
  delete trial_avatar_info_;
  trial_avatar_info_ = trial_avatar_info;
  if (trial_avatar_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarInfo.trial_avatar_info)
}

// map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
inline int AvatarInfo::skill_map_size() const {
  return skill_map_.size();
}
inline void AvatarInfo::clear_skill_map() {
  skill_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >&
AvatarInfo::skill_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.skill_map)
  return skill_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >*
AvatarInfo::mutable_skill_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.skill_map)
  return skill_map_.MutableMap();
}

// uint32 skill_depot_id = 11;
inline void AvatarInfo::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.skill_depot_id)
  return skill_depot_id_;
}
inline void AvatarInfo::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.skill_depot_id)
}

// .proto.AvatarFetterInfo fetter_info = 12;
inline bool AvatarInfo::has_fetter_info() const {
  return this != internal_default_instance() && fetter_info_ != NULL;
}
inline void AvatarInfo::clear_fetter_info() {
  if (GetArenaNoVirtual() == NULL && fetter_info_ != NULL) delete fetter_info_;
  fetter_info_ = NULL;
}
inline const ::proto::AvatarFetterInfo& AvatarInfo::fetter_info() const {
  const ::proto::AvatarFetterInfo* p = fetter_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.fetter_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarFetterInfo*>(
      &::proto::_AvatarFetterInfo_default_instance_);
}
inline ::proto::AvatarFetterInfo* AvatarInfo::mutable_fetter_info() {
  
  if (fetter_info_ == NULL) {
    fetter_info_ = new ::proto::AvatarFetterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.fetter_info)
  return fetter_info_;
}
inline ::proto::AvatarFetterInfo* AvatarInfo::release_fetter_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarInfo.fetter_info)
  
  ::proto::AvatarFetterInfo* temp = fetter_info_;
  fetter_info_ = NULL;
  return temp;
}
inline void AvatarInfo::set_allocated_fetter_info(::proto::AvatarFetterInfo* fetter_info) {
  delete fetter_info_;
  fetter_info_ = fetter_info;
  if (fetter_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarInfo.fetter_info)
}

// uint32 core_proud_skill_level = 13;
inline void AvatarInfo::clear_core_proud_skill_level() {
  core_proud_skill_level_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::core_proud_skill_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.core_proud_skill_level)
  return core_proud_skill_level_;
}
inline void AvatarInfo::set_core_proud_skill_level(::google::protobuf::uint32 value) {
  
  core_proud_skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.core_proud_skill_level)
}

// repeated uint32 inherent_proud_skill_list = 14;
inline int AvatarInfo::inherent_proud_skill_list_size() const {
  return inherent_proud_skill_list_.size();
}
inline void AvatarInfo::clear_inherent_proud_skill_list() {
  inherent_proud_skill_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarInfo::inherent_proud_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_.Get(index);
}
inline void AvatarInfo::set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.inherent_proud_skill_list)
}
inline void AvatarInfo::add_inherent_proud_skill_list(::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.inherent_proud_skill_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::inherent_proud_skill_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_inherent_proud_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.inherent_proud_skill_list)
  return &inherent_proud_skill_list_;
}

// map<uint32, uint32> skill_level_map = 15;
inline int AvatarInfo::skill_level_map_size() const {
  return skill_level_map_.size();
}
inline void AvatarInfo::clear_skill_level_map() {
  skill_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AvatarInfo::skill_level_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.skill_level_map)
  return skill_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AvatarInfo::mutable_skill_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.skill_level_map)
  return skill_level_map_.MutableMap();
}

// .proto.AvatarExpeditionState expedition_state = 16;
inline void AvatarInfo::clear_expedition_state() {
  expedition_state_ = 0;
}
inline ::proto::AvatarExpeditionState AvatarInfo::expedition_state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.expedition_state)
  return static_cast< ::proto::AvatarExpeditionState >(expedition_state_);
}
inline void AvatarInfo::set_expedition_state(::proto::AvatarExpeditionState value) {
  
  expedition_state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.expedition_state)
}

// map<uint32, uint32> proud_skill_extra_level_map = 17;
inline int AvatarInfo::proud_skill_extra_level_map_size() const {
  return proud_skill_extra_level_map_.size();
}
inline void AvatarInfo::clear_proud_skill_extra_level_map() {
  proud_skill_extra_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AvatarInfo::proud_skill_extra_level_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AvatarInfo::mutable_proud_skill_extra_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.MutableMap();
}

// bool is_focus = 18;
inline void AvatarInfo::clear_is_focus() {
  is_focus_ = false;
}
inline bool AvatarInfo::is_focus() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.is_focus)
  return is_focus_;
}
inline void AvatarInfo::set_is_focus(bool value) {
  
  is_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.is_focus)
}

// uint32 avatar_type = 19;
inline void AvatarInfo::clear_avatar_type() {
  avatar_type_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::avatar_type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.avatar_type)
  return avatar_type_;
}
inline void AvatarInfo::set_avatar_type(::google::protobuf::uint32 value) {
  
  avatar_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.avatar_type)
}

// repeated uint32 team_resonance_list = 20;
inline int AvatarInfo::team_resonance_list_size() const {
  return team_resonance_list_.size();
}
inline void AvatarInfo::clear_team_resonance_list() {
  team_resonance_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarInfo::team_resonance_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.team_resonance_list)
  return team_resonance_list_.Get(index);
}
inline void AvatarInfo::set_team_resonance_list(int index, ::google::protobuf::uint32 value) {
  team_resonance_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.team_resonance_list)
}
inline void AvatarInfo::add_team_resonance_list(::google::protobuf::uint32 value) {
  team_resonance_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.team_resonance_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::team_resonance_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.team_resonance_list)
  return team_resonance_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_team_resonance_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.team_resonance_list)
  return &team_resonance_list_;
}

// uint32 wearing_flycloak_id = 21;
inline void AvatarInfo::clear_wearing_flycloak_id() {
  wearing_flycloak_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::wearing_flycloak_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.wearing_flycloak_id)
  return wearing_flycloak_id_;
}
inline void AvatarInfo::set_wearing_flycloak_id(::google::protobuf::uint32 value) {
  
  wearing_flycloak_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.wearing_flycloak_id)
}

// repeated .proto.AvatarEquipAffixInfo equip_affix_list = 22;
inline int AvatarInfo::equip_affix_list_size() const {
  return equip_affix_list_.size();
}
inline void AvatarInfo::clear_equip_affix_list() {
  equip_affix_list_.Clear();
}
inline const ::proto::AvatarEquipAffixInfo& AvatarInfo::equip_affix_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.equip_affix_list)
  return equip_affix_list_.Get(index);
}
inline ::proto::AvatarEquipAffixInfo* AvatarInfo::mutable_equip_affix_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.equip_affix_list)
  return equip_affix_list_.Mutable(index);
}
inline ::proto::AvatarEquipAffixInfo* AvatarInfo::add_equip_affix_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.equip_affix_list)
  return equip_affix_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AvatarEquipAffixInfo >*
AvatarInfo::mutable_equip_affix_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.equip_affix_list)
  return &equip_affix_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AvatarEquipAffixInfo >&
AvatarInfo::equip_affix_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.equip_affix_list)
  return equip_affix_list_;
}

// uint32 born_time = 23;
inline void AvatarInfo::clear_born_time() {
  born_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::born_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.born_time)
  return born_time_;
}
inline void AvatarInfo::set_born_time(::google::protobuf::uint32 value) {
  
  born_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.born_time)
}

// repeated uint32 pending_promote_reward_list = 24;
inline int AvatarInfo::pending_promote_reward_list_size() const {
  return pending_promote_reward_list_.size();
}
inline void AvatarInfo::clear_pending_promote_reward_list() {
  pending_promote_reward_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarInfo::pending_promote_reward_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.pending_promote_reward_list)
  return pending_promote_reward_list_.Get(index);
}
inline void AvatarInfo::set_pending_promote_reward_list(int index, ::google::protobuf::uint32 value) {
  pending_promote_reward_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.pending_promote_reward_list)
}
inline void AvatarInfo::add_pending_promote_reward_list(::google::protobuf::uint32 value) {
  pending_promote_reward_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.pending_promote_reward_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::pending_promote_reward_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.pending_promote_reward_list)
  return pending_promote_reward_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_pending_promote_reward_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.pending_promote_reward_list)
  return &pending_promote_reward_list_;
}

// uint32 costume_id = 25;
inline void AvatarInfo::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.costume_id)
  return costume_id_;
}
inline void AvatarInfo::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.costume_id)
}

// .proto.AvatarExcelInfo excel_info = 26;
inline bool AvatarInfo::has_excel_info() const {
  return this != internal_default_instance() && excel_info_ != NULL;
}
inline void AvatarInfo::clear_excel_info() {
  if (GetArenaNoVirtual() == NULL && excel_info_ != NULL) delete excel_info_;
  excel_info_ = NULL;
}
inline const ::proto::AvatarExcelInfo& AvatarInfo::excel_info() const {
  const ::proto::AvatarExcelInfo* p = excel_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.excel_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarExcelInfo*>(
      &::proto::_AvatarExcelInfo_default_instance_);
}
inline ::proto::AvatarExcelInfo* AvatarInfo::mutable_excel_info() {
  
  if (excel_info_ == NULL) {
    excel_info_ = new ::proto::AvatarExcelInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.excel_info)
  return excel_info_;
}
inline ::proto::AvatarExcelInfo* AvatarInfo::release_excel_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarInfo.excel_info)
  
  ::proto::AvatarExcelInfo* temp = excel_info_;
  excel_info_ = NULL;
  return temp;
}
inline void AvatarInfo::set_allocated_excel_info(::proto::AvatarExcelInfo* excel_info) {
  delete excel_info_;
  excel_info_ = excel_info;
  if (excel_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarInfo.excel_info)
}

// uint32 anim_hash = 27;
inline void AvatarInfo::clear_anim_hash() {
  anim_hash_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::anim_hash() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.anim_hash)
  return anim_hash_;
}
inline void AvatarInfo::set_anim_hash(::google::protobuf::uint32 value) {
  
  anim_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.anim_hash)
}

// -------------------------------------------------------------------

// ShowEquip

// uint32 item_id = 1;
inline void ShowEquip::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 ShowEquip::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowEquip.item_id)
  return item_id_;
}
inline void ShowEquip::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowEquip.item_id)
}

// .proto.Reliquary reliquary = 2;
inline bool ShowEquip::has_reliquary() const {
  return detail_case() == kReliquary;
}
inline void ShowEquip::set_has_reliquary() {
  _oneof_case_[0] = kReliquary;
}
inline void ShowEquip::clear_reliquary() {
  if (has_reliquary()) {
    delete detail_.reliquary_;
    clear_has_detail();
  }
}
inline  const ::proto::Reliquary& ShowEquip::reliquary() const {
  // @@protoc_insertion_point(field_get:proto.ShowEquip.reliquary)
  return has_reliquary()
      ? *detail_.reliquary_
      : ::proto::Reliquary::default_instance();
}
inline ::proto::Reliquary* ShowEquip::mutable_reliquary() {
  if (!has_reliquary()) {
    clear_detail();
    set_has_reliquary();
    detail_.reliquary_ = new ::proto::Reliquary;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShowEquip.reliquary)
  return detail_.reliquary_;
}
inline ::proto::Reliquary* ShowEquip::release_reliquary() {
  // @@protoc_insertion_point(field_release:proto.ShowEquip.reliquary)
  if (has_reliquary()) {
    clear_has_detail();
    ::proto::Reliquary* temp = detail_.reliquary_;
    detail_.reliquary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ShowEquip::set_allocated_reliquary(::proto::Reliquary* reliquary) {
  clear_detail();
  if (reliquary) {
    set_has_reliquary();
    detail_.reliquary_ = reliquary;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShowEquip.reliquary)
}

// .proto.Weapon weapon = 3;
inline bool ShowEquip::has_weapon() const {
  return detail_case() == kWeapon;
}
inline void ShowEquip::set_has_weapon() {
  _oneof_case_[0] = kWeapon;
}
inline void ShowEquip::clear_weapon() {
  if (has_weapon()) {
    delete detail_.weapon_;
    clear_has_detail();
  }
}
inline  const ::proto::Weapon& ShowEquip::weapon() const {
  // @@protoc_insertion_point(field_get:proto.ShowEquip.weapon)
  return has_weapon()
      ? *detail_.weapon_
      : ::proto::Weapon::default_instance();
}
inline ::proto::Weapon* ShowEquip::mutable_weapon() {
  if (!has_weapon()) {
    clear_detail();
    set_has_weapon();
    detail_.weapon_ = new ::proto::Weapon;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShowEquip.weapon)
  return detail_.weapon_;
}
inline ::proto::Weapon* ShowEquip::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.ShowEquip.weapon)
  if (has_weapon()) {
    clear_has_detail();
    ::proto::Weapon* temp = detail_.weapon_;
    detail_.weapon_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ShowEquip::set_allocated_weapon(::proto::Weapon* weapon) {
  clear_detail();
  if (weapon) {
    set_has_weapon();
    detail_.weapon_ = weapon;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShowEquip.weapon)
}

inline bool ShowEquip::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void ShowEquip::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline ShowEquip::DetailCase ShowEquip::detail_case() const {
  return ShowEquip::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ShowAvatarInfo

// uint32 avatar_id = 1;
inline void ShowAvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 ShowAvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.avatar_id)
  return avatar_id_;
}
inline void ShowAvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowAvatarInfo.avatar_id)
}

// map<uint32, .proto.PropValue> prop_map = 2;
inline int ShowAvatarInfo::prop_map_size() const {
  return prop_map_.size();
}
inline void ShowAvatarInfo::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
ShowAvatarInfo::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.ShowAvatarInfo.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
ShowAvatarInfo::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ShowAvatarInfo.prop_map)
  return prop_map_.MutableMap();
}

// repeated uint32 talent_id_list = 3;
inline int ShowAvatarInfo::talent_id_list_size() const {
  return talent_id_list_.size();
}
inline void ShowAvatarInfo::clear_talent_id_list() {
  talent_id_list_.Clear();
}
inline ::google::protobuf::uint32 ShowAvatarInfo::talent_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.talent_id_list)
  return talent_id_list_.Get(index);
}
inline void ShowAvatarInfo::set_talent_id_list(int index, ::google::protobuf::uint32 value) {
  talent_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ShowAvatarInfo.talent_id_list)
}
inline void ShowAvatarInfo::add_talent_id_list(::google::protobuf::uint32 value) {
  talent_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ShowAvatarInfo.talent_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ShowAvatarInfo::talent_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ShowAvatarInfo.talent_id_list)
  return talent_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ShowAvatarInfo::mutable_talent_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShowAvatarInfo.talent_id_list)
  return &talent_id_list_;
}

// map<uint32, float> fight_prop_map = 4;
inline int ShowAvatarInfo::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void ShowAvatarInfo::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
ShowAvatarInfo::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.ShowAvatarInfo.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
ShowAvatarInfo::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ShowAvatarInfo.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// uint32 skill_depot_id = 5;
inline void ShowAvatarInfo::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 ShowAvatarInfo::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.skill_depot_id)
  return skill_depot_id_;
}
inline void ShowAvatarInfo::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowAvatarInfo.skill_depot_id)
}

// uint32 core_proud_skill_level = 6;
inline void ShowAvatarInfo::clear_core_proud_skill_level() {
  core_proud_skill_level_ = 0u;
}
inline ::google::protobuf::uint32 ShowAvatarInfo::core_proud_skill_level() const {
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.core_proud_skill_level)
  return core_proud_skill_level_;
}
inline void ShowAvatarInfo::set_core_proud_skill_level(::google::protobuf::uint32 value) {
  
  core_proud_skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowAvatarInfo.core_proud_skill_level)
}

// repeated uint32 inherent_proud_skill_list = 7;
inline int ShowAvatarInfo::inherent_proud_skill_list_size() const {
  return inherent_proud_skill_list_.size();
}
inline void ShowAvatarInfo::clear_inherent_proud_skill_list() {
  inherent_proud_skill_list_.Clear();
}
inline ::google::protobuf::uint32 ShowAvatarInfo::inherent_proud_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_.Get(index);
}
inline void ShowAvatarInfo::set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ShowAvatarInfo.inherent_proud_skill_list)
}
inline void ShowAvatarInfo::add_inherent_proud_skill_list(::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ShowAvatarInfo.inherent_proud_skill_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ShowAvatarInfo::inherent_proud_skill_list() const {
  // @@protoc_insertion_point(field_list:proto.ShowAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ShowAvatarInfo::mutable_inherent_proud_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShowAvatarInfo.inherent_proud_skill_list)
  return &inherent_proud_skill_list_;
}

// map<uint32, uint32> skill_level_map = 8;
inline int ShowAvatarInfo::skill_level_map_size() const {
  return skill_level_map_.size();
}
inline void ShowAvatarInfo::clear_skill_level_map() {
  skill_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ShowAvatarInfo::skill_level_map() const {
  // @@protoc_insertion_point(field_map:proto.ShowAvatarInfo.skill_level_map)
  return skill_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ShowAvatarInfo::mutable_skill_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ShowAvatarInfo.skill_level_map)
  return skill_level_map_.MutableMap();
}

// map<uint32, uint32> proud_skill_extra_level_map = 9;
inline int ShowAvatarInfo::proud_skill_extra_level_map_size() const {
  return proud_skill_extra_level_map_.size();
}
inline void ShowAvatarInfo::clear_proud_skill_extra_level_map() {
  proud_skill_extra_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ShowAvatarInfo::proud_skill_extra_level_map() const {
  // @@protoc_insertion_point(field_map:proto.ShowAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ShowAvatarInfo::mutable_proud_skill_extra_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ShowAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.MutableMap();
}

// repeated .proto.ShowEquip equip_list = 10;
inline int ShowAvatarInfo::equip_list_size() const {
  return equip_list_.size();
}
inline void ShowAvatarInfo::clear_equip_list() {
  equip_list_.Clear();
}
inline const ::proto::ShowEquip& ShowAvatarInfo::equip_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.equip_list)
  return equip_list_.Get(index);
}
inline ::proto::ShowEquip* ShowAvatarInfo::mutable_equip_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ShowAvatarInfo.equip_list)
  return equip_list_.Mutable(index);
}
inline ::proto::ShowEquip* ShowAvatarInfo::add_equip_list() {
  // @@protoc_insertion_point(field_add:proto.ShowAvatarInfo.equip_list)
  return equip_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ShowEquip >*
ShowAvatarInfo::mutable_equip_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShowAvatarInfo.equip_list)
  return &equip_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ShowEquip >&
ShowAvatarInfo::equip_list() const {
  // @@protoc_insertion_point(field_list:proto.ShowAvatarInfo.equip_list)
  return equip_list_;
}

// .proto.AvatarFetterInfo fetter_info = 11;
inline bool ShowAvatarInfo::has_fetter_info() const {
  return this != internal_default_instance() && fetter_info_ != NULL;
}
inline void ShowAvatarInfo::clear_fetter_info() {
  if (GetArenaNoVirtual() == NULL && fetter_info_ != NULL) delete fetter_info_;
  fetter_info_ = NULL;
}
inline const ::proto::AvatarFetterInfo& ShowAvatarInfo::fetter_info() const {
  const ::proto::AvatarFetterInfo* p = fetter_info_;
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.fetter_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarFetterInfo*>(
      &::proto::_AvatarFetterInfo_default_instance_);
}
inline ::proto::AvatarFetterInfo* ShowAvatarInfo::mutable_fetter_info() {
  
  if (fetter_info_ == NULL) {
    fetter_info_ = new ::proto::AvatarFetterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShowAvatarInfo.fetter_info)
  return fetter_info_;
}
inline ::proto::AvatarFetterInfo* ShowAvatarInfo::release_fetter_info() {
  // @@protoc_insertion_point(field_release:proto.ShowAvatarInfo.fetter_info)
  
  ::proto::AvatarFetterInfo* temp = fetter_info_;
  fetter_info_ = NULL;
  return temp;
}
inline void ShowAvatarInfo::set_allocated_fetter_info(::proto::AvatarFetterInfo* fetter_info) {
  delete fetter_info_;
  fetter_info_ = fetter_info;
  if (fetter_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShowAvatarInfo.fetter_info)
}

// uint32 costume_id = 12;
inline void ShowAvatarInfo::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 ShowAvatarInfo::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.costume_id)
  return costume_id_;
}
inline void ShowAvatarInfo::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowAvatarInfo.costume_id)
}

// .proto.AvatarExcelInfo excel_info = 13;
inline bool ShowAvatarInfo::has_excel_info() const {
  return this != internal_default_instance() && excel_info_ != NULL;
}
inline void ShowAvatarInfo::clear_excel_info() {
  if (GetArenaNoVirtual() == NULL && excel_info_ != NULL) delete excel_info_;
  excel_info_ = NULL;
}
inline const ::proto::AvatarExcelInfo& ShowAvatarInfo::excel_info() const {
  const ::proto::AvatarExcelInfo* p = excel_info_;
  // @@protoc_insertion_point(field_get:proto.ShowAvatarInfo.excel_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarExcelInfo*>(
      &::proto::_AvatarExcelInfo_default_instance_);
}
inline ::proto::AvatarExcelInfo* ShowAvatarInfo::mutable_excel_info() {
  
  if (excel_info_ == NULL) {
    excel_info_ = new ::proto::AvatarExcelInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShowAvatarInfo.excel_info)
  return excel_info_;
}
inline ::proto::AvatarExcelInfo* ShowAvatarInfo::release_excel_info() {
  // @@protoc_insertion_point(field_release:proto.ShowAvatarInfo.excel_info)
  
  ::proto::AvatarExcelInfo* temp = excel_info_;
  excel_info_ = NULL;
  return temp;
}
inline void ShowAvatarInfo::set_allocated_excel_info(::proto::AvatarExcelInfo* excel_info) {
  delete excel_info_;
  excel_info_ = excel_info;
  if (excel_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShowAvatarInfo.excel_info)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Quest

// uint32 quest_id = 1;
inline void Quest::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 Quest::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.quest_id)
  return quest_id_;
}
inline void Quest::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.quest_id)
}

// uint32 state = 2;
inline void Quest::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 Quest::state() const {
  // @@protoc_insertion_point(field_get:proto.Quest.state)
  return state_;
}
inline void Quest::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.state)
}

// uint32 start_time = 4;
inline void Quest::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 Quest::start_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.start_time)
  return start_time_;
}
inline void Quest::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.start_time)
}

// bool is_random = 5;
inline void Quest::clear_is_random() {
  is_random_ = false;
}
inline bool Quest::is_random() const {
  // @@protoc_insertion_point(field_get:proto.Quest.is_random)
  return is_random_;
}
inline void Quest::set_is_random(bool value) {
  
  is_random_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.is_random)
}

// uint32 parent_quest_id = 6;
inline void Quest::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
inline ::google::protobuf::uint32 Quest::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.parent_quest_id)
  return parent_quest_id_;
}
inline void Quest::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.parent_quest_id)
}

// uint32 quest_config_id = 7;
inline void Quest::clear_quest_config_id() {
  quest_config_id_ = 0u;
}
inline ::google::protobuf::uint32 Quest::quest_config_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.quest_config_id)
  return quest_config_id_;
}
inline void Quest::set_quest_config_id(::google::protobuf::uint32 value) {
  
  quest_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.quest_config_id)
}

// uint32 start_game_time = 8;
inline void Quest::clear_start_game_time() {
  start_game_time_ = 0u;
}
inline ::google::protobuf::uint32 Quest::start_game_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.start_game_time)
  return start_game_time_;
}
inline void Quest::set_start_game_time(::google::protobuf::uint32 value) {
  
  start_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.start_game_time)
}

// uint32 accept_time = 9;
inline void Quest::clear_accept_time() {
  accept_time_ = 0u;
}
inline ::google::protobuf::uint32 Quest::accept_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.accept_time)
  return accept_time_;
}
inline void Quest::set_accept_time(::google::protobuf::uint32 value) {
  
  accept_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.accept_time)
}

// repeated uint32 lacked_npc_list = 10;
inline int Quest::lacked_npc_list_size() const {
  return lacked_npc_list_.size();
}
inline void Quest::clear_lacked_npc_list() {
  lacked_npc_list_.Clear();
}
inline ::google::protobuf::uint32 Quest::lacked_npc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.lacked_npc_list)
  return lacked_npc_list_.Get(index);
}
inline void Quest::set_lacked_npc_list(int index, ::google::protobuf::uint32 value) {
  lacked_npc_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.lacked_npc_list)
}
inline void Quest::add_lacked_npc_list(::google::protobuf::uint32 value) {
  lacked_npc_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.lacked_npc_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::lacked_npc_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.lacked_npc_list)
  return lacked_npc_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_lacked_npc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.lacked_npc_list)
  return &lacked_npc_list_;
}

// repeated uint32 finish_progress_list = 11;
inline int Quest::finish_progress_list_size() const {
  return finish_progress_list_.size();
}
inline void Quest::clear_finish_progress_list() {
  finish_progress_list_.Clear();
}
inline ::google::protobuf::uint32 Quest::finish_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.finish_progress_list)
  return finish_progress_list_.Get(index);
}
inline void Quest::set_finish_progress_list(int index, ::google::protobuf::uint32 value) {
  finish_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.finish_progress_list)
}
inline void Quest::add_finish_progress_list(::google::protobuf::uint32 value) {
  finish_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.finish_progress_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::finish_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.finish_progress_list)
  return finish_progress_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_finish_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.finish_progress_list)
  return &finish_progress_list_;
}

// repeated uint32 fail_progress_list = 12;
inline int Quest::fail_progress_list_size() const {
  return fail_progress_list_.size();
}
inline void Quest::clear_fail_progress_list() {
  fail_progress_list_.Clear();
}
inline ::google::protobuf::uint32 Quest::fail_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.fail_progress_list)
  return fail_progress_list_.Get(index);
}
inline void Quest::set_fail_progress_list(int index, ::google::protobuf::uint32 value) {
  fail_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.fail_progress_list)
}
inline void Quest::add_fail_progress_list(::google::protobuf::uint32 value) {
  fail_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.fail_progress_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::fail_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.fail_progress_list)
  return fail_progress_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_fail_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.fail_progress_list)
  return &fail_progress_list_;
}

// map<uint32, uint32> lacked_npc_map = 13;
inline int Quest::lacked_npc_map_size() const {
  return lacked_npc_map_.size();
}
inline void Quest::clear_lacked_npc_map() {
  lacked_npc_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
Quest::lacked_npc_map() const {
  // @@protoc_insertion_point(field_map:proto.Quest.lacked_npc_map)
  return lacked_npc_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
Quest::mutable_lacked_npc_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.Quest.lacked_npc_map)
  return lacked_npc_map_.MutableMap();
}

// repeated uint32 lacked_place_list = 14;
inline int Quest::lacked_place_list_size() const {
  return lacked_place_list_.size();
}
inline void Quest::clear_lacked_place_list() {
  lacked_place_list_.Clear();
}
inline ::google::protobuf::uint32 Quest::lacked_place_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.lacked_place_list)
  return lacked_place_list_.Get(index);
}
inline void Quest::set_lacked_place_list(int index, ::google::protobuf::uint32 value) {
  lacked_place_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.lacked_place_list)
}
inline void Quest::add_lacked_place_list(::google::protobuf::uint32 value) {
  lacked_place_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.lacked_place_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::lacked_place_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.lacked_place_list)
  return lacked_place_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_lacked_place_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.lacked_place_list)
  return &lacked_place_list_;
}

// map<uint32, uint32> lacked_place_map = 15;
inline int Quest::lacked_place_map_size() const {
  return lacked_place_map_.size();
}
inline void Quest::clear_lacked_place_map() {
  lacked_place_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
Quest::lacked_place_map() const {
  // @@protoc_insertion_point(field_map:proto.Quest.lacked_place_map)
  return lacked_place_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
Quest::mutable_lacked_place_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.Quest.lacked_place_map)
  return lacked_place_map_.MutableMap();
}

// -------------------------------------------------------------------

// NpcPositionInfo

// uint32 npc_id = 1;
inline void NpcPositionInfo::clear_npc_id() {
  npc_id_ = 0u;
}
inline ::google::protobuf::uint32 NpcPositionInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.NpcPositionInfo.npc_id)
  return npc_id_;
}
inline void NpcPositionInfo::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.NpcPositionInfo.npc_id)
}

// .proto.Vector pos = 2;
inline bool NpcPositionInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void NpcPositionInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& NpcPositionInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.NpcPositionInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* NpcPositionInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.NpcPositionInfo.pos)
  return pos_;
}
inline ::proto::Vector* NpcPositionInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.NpcPositionInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NpcPositionInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.NpcPositionInfo.pos)
}

// -------------------------------------------------------------------

// MailTextContent

// string title = 1;
inline void MailTextContent::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailTextContent::title() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.title)
  return title_.GetNoArena();
}
inline void MailTextContent::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.title)
}
#if LANG_CXX11
inline void MailTextContent::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.title)
}
#endif
inline void MailTextContent::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.title)
}
inline void MailTextContent::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.title)
}
inline ::std::string* MailTextContent::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailTextContent::release_title() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailTextContent::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.title)
}

// string content = 2;
inline void MailTextContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailTextContent::content() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.content)
  return content_.GetNoArena();
}
inline void MailTextContent::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.content)
}
#if LANG_CXX11
inline void MailTextContent::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.content)
}
#endif
inline void MailTextContent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.content)
}
inline void MailTextContent::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.content)
}
inline ::std::string* MailTextContent::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailTextContent::release_content() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailTextContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.content)
}

// string sender = 3;
inline void MailTextContent::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailTextContent::sender() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.sender)
  return sender_.GetNoArena();
}
inline void MailTextContent::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.sender)
}
#if LANG_CXX11
inline void MailTextContent::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.sender)
}
#endif
inline void MailTextContent::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.sender)
}
inline void MailTextContent::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.sender)
}
inline ::std::string* MailTextContent::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailTextContent::release_sender() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailTextContent::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.sender)
}

// -------------------------------------------------------------------

// MailItem

// .proto.EquipParam equip_param = 1;
inline bool MailItem::has_equip_param() const {
  return this != internal_default_instance() && equip_param_ != NULL;
}
inline void MailItem::clear_equip_param() {
  if (GetArenaNoVirtual() == NULL && equip_param_ != NULL) delete equip_param_;
  equip_param_ = NULL;
}
inline const ::proto::EquipParam& MailItem::equip_param() const {
  const ::proto::EquipParam* p = equip_param_;
  // @@protoc_insertion_point(field_get:proto.MailItem.equip_param)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EquipParam*>(
      &::proto::_EquipParam_default_instance_);
}
inline ::proto::EquipParam* MailItem::mutable_equip_param() {
  
  if (equip_param_ == NULL) {
    equip_param_ = new ::proto::EquipParam;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailItem.equip_param)
  return equip_param_;
}
inline ::proto::EquipParam* MailItem::release_equip_param() {
  // @@protoc_insertion_point(field_release:proto.MailItem.equip_param)
  
  ::proto::EquipParam* temp = equip_param_;
  equip_param_ = NULL;
  return temp;
}
inline void MailItem::set_allocated_equip_param(::proto::EquipParam* equip_param) {
  delete equip_param_;
  equip_param_ = equip_param;
  if (equip_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailItem.equip_param)
}

// .proto.MaterialDeleteInfo delete_info = 2;
inline bool MailItem::has_delete_info() const {
  return this != internal_default_instance() && delete_info_ != NULL;
}
inline void MailItem::clear_delete_info() {
  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) delete delete_info_;
  delete_info_ = NULL;
}
inline const ::proto::MaterialDeleteInfo& MailItem::delete_info() const {
  const ::proto::MaterialDeleteInfo* p = delete_info_;
  // @@protoc_insertion_point(field_get:proto.MailItem.delete_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MaterialDeleteInfo*>(
      &::proto::_MaterialDeleteInfo_default_instance_);
}
inline ::proto::MaterialDeleteInfo* MailItem::mutable_delete_info() {
  
  if (delete_info_ == NULL) {
    delete_info_ = new ::proto::MaterialDeleteInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailItem.delete_info)
  return delete_info_;
}
inline ::proto::MaterialDeleteInfo* MailItem::release_delete_info() {
  // @@protoc_insertion_point(field_release:proto.MailItem.delete_info)
  
  ::proto::MaterialDeleteInfo* temp = delete_info_;
  delete_info_ = NULL;
  return temp;
}
inline void MailItem::set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info) {
  delete delete_info_;
  delete_info_ = delete_info;
  if (delete_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailItem.delete_info)
}

// -------------------------------------------------------------------

// MailData

// uint32 mail_id = 1;
inline void MailData::clear_mail_id() {
  mail_id_ = 0u;
}
inline ::google::protobuf::uint32 MailData::mail_id() const {
  // @@protoc_insertion_point(field_get:proto.MailData.mail_id)
  return mail_id_;
}
inline void MailData::set_mail_id(::google::protobuf::uint32 value) {
  
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.mail_id)
}

// .proto.MailTextContent mail_text_content = 4;
inline bool MailData::has_mail_text_content() const {
  return this != internal_default_instance() && mail_text_content_ != NULL;
}
inline void MailData::clear_mail_text_content() {
  if (GetArenaNoVirtual() == NULL && mail_text_content_ != NULL) delete mail_text_content_;
  mail_text_content_ = NULL;
}
inline const ::proto::MailTextContent& MailData::mail_text_content() const {
  const ::proto::MailTextContent* p = mail_text_content_;
  // @@protoc_insertion_point(field_get:proto.MailData.mail_text_content)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MailTextContent*>(
      &::proto::_MailTextContent_default_instance_);
}
inline ::proto::MailTextContent* MailData::mutable_mail_text_content() {
  
  if (mail_text_content_ == NULL) {
    mail_text_content_ = new ::proto::MailTextContent;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailData.mail_text_content)
  return mail_text_content_;
}
inline ::proto::MailTextContent* MailData::release_mail_text_content() {
  // @@protoc_insertion_point(field_release:proto.MailData.mail_text_content)
  
  ::proto::MailTextContent* temp = mail_text_content_;
  mail_text_content_ = NULL;
  return temp;
}
inline void MailData::set_allocated_mail_text_content(::proto::MailTextContent* mail_text_content) {
  delete mail_text_content_;
  mail_text_content_ = mail_text_content;
  if (mail_text_content) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailData.mail_text_content)
}

// repeated .proto.MailItem item_list = 7;
inline int MailData::item_list_size() const {
  return item_list_.size();
}
inline void MailData::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::MailItem& MailData::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailData.item_list)
  return item_list_.Get(index);
}
inline ::proto::MailItem* MailData::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailData.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::MailItem* MailData::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.MailData.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MailItem >*
MailData::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailData.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MailItem >&
MailData::item_list() const {
  // @@protoc_insertion_point(field_list:proto.MailData.item_list)
  return item_list_;
}

// uint32 send_time = 8;
inline void MailData::clear_send_time() {
  send_time_ = 0u;
}
inline ::google::protobuf::uint32 MailData::send_time() const {
  // @@protoc_insertion_point(field_get:proto.MailData.send_time)
  return send_time_;
}
inline void MailData::set_send_time(::google::protobuf::uint32 value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.send_time)
}

// uint32 expire_time = 9;
inline void MailData::clear_expire_time() {
  expire_time_ = 0u;
}
inline ::google::protobuf::uint32 MailData::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.MailData.expire_time)
  return expire_time_;
}
inline void MailData::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.expire_time)
}

// uint32 importance = 10;
inline void MailData::clear_importance() {
  importance_ = 0u;
}
inline ::google::protobuf::uint32 MailData::importance() const {
  // @@protoc_insertion_point(field_get:proto.MailData.importance)
  return importance_;
}
inline void MailData::set_importance(::google::protobuf::uint32 value) {
  
  importance_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.importance)
}

// bool is_read = 11;
inline void MailData::clear_is_read() {
  is_read_ = false;
}
inline bool MailData::is_read() const {
  // @@protoc_insertion_point(field_get:proto.MailData.is_read)
  return is_read_;
}
inline void MailData::set_is_read(bool value) {
  
  is_read_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.is_read)
}

// bool is_attachment_got = 12;
inline void MailData::clear_is_attachment_got() {
  is_attachment_got_ = false;
}
inline bool MailData::is_attachment_got() const {
  // @@protoc_insertion_point(field_get:proto.MailData.is_attachment_got)
  return is_attachment_got_;
}
inline void MailData::set_is_attachment_got(bool value) {
  
  is_attachment_got_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.is_attachment_got)
}

// uint32 config_id = 13;
inline void MailData::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 MailData::config_id() const {
  // @@protoc_insertion_point(field_get:proto.MailData.config_id)
  return config_id_;
}
inline void MailData::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.config_id)
}

// repeated string argument_list = 14;
inline int MailData::argument_list_size() const {
  return argument_list_.size();
}
inline void MailData::clear_argument_list() {
  argument_list_.Clear();
}
inline const ::std::string& MailData::argument_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailData.argument_list)
  return argument_list_.Get(index);
}
inline ::std::string* MailData::mutable_argument_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailData.argument_list)
  return argument_list_.Mutable(index);
}
inline void MailData::set_argument_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MailData.argument_list)
  argument_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MailData::set_argument_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MailData.argument_list)
  argument_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MailData::set_argument_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MailData.argument_list)
}
inline void MailData::set_argument_list(int index, const char* value, size_t size) {
  argument_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MailData.argument_list)
}
inline ::std::string* MailData::add_argument_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.MailData.argument_list)
  return argument_list_.Add();
}
inline void MailData::add_argument_list(const ::std::string& value) {
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MailData.argument_list)
}
#if LANG_CXX11
inline void MailData::add_argument_list(::std::string&& value) {
  argument_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MailData.argument_list)
}
#endif
inline void MailData::add_argument_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MailData.argument_list)
}
inline void MailData::add_argument_list(const char* value, size_t size) {
  argument_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MailData.argument_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailData::argument_list() const {
  // @@protoc_insertion_point(field_list:proto.MailData.argument_list)
  return argument_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MailData::mutable_argument_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailData.argument_list)
  return &argument_list_;
}

// .proto.MailCollectState collect_state = 15;
inline void MailData::clear_collect_state() {
  collect_state_ = 0;
}
inline ::proto::MailCollectState MailData::collect_state() const {
  // @@protoc_insertion_point(field_get:proto.MailData.collect_state)
  return static_cast< ::proto::MailCollectState >(collect_state_);
}
inline void MailData::set_collect_state(::proto::MailCollectState value) {
  
  collect_state_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.collect_state)
}

// -------------------------------------------------------------------

// OnlinePlayerInfo

// uint32 uid = 1;
inline void OnlinePlayerInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.uid)
  return uid_;
}
inline void OnlinePlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.uid)
}

// string nickname = 2;
inline void OnlinePlayerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlinePlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.nickname)
  return nickname_.GetNoArena();
}
inline void OnlinePlayerInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.nickname)
}
#if LANG_CXX11
inline void OnlinePlayerInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OnlinePlayerInfo.nickname)
}
#endif
inline void OnlinePlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OnlinePlayerInfo.nickname)
}
inline void OnlinePlayerInfo::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OnlinePlayerInfo.nickname)
}
inline ::std::string* OnlinePlayerInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.OnlinePlayerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlinePlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.OnlinePlayerInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlinePlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.OnlinePlayerInfo.nickname)
}

// uint32 player_level = 3;
inline void OnlinePlayerInfo::clear_player_level() {
  player_level_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::player_level() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.player_level)
  return player_level_;
}
inline void OnlinePlayerInfo::set_player_level(::google::protobuf::uint32 value) {
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.player_level)
}

// uint32 avatar_id = 4;
inline void OnlinePlayerInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.avatar_id)
  return avatar_id_;
}
inline void OnlinePlayerInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.avatar_id)
}

// .proto.MpSettingType mp_setting_type = 5;
inline void OnlinePlayerInfo::clear_mp_setting_type() {
  mp_setting_type_ = 0;
}
inline ::proto::MpSettingType OnlinePlayerInfo::mp_setting_type() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.mp_setting_type)
  return static_cast< ::proto::MpSettingType >(mp_setting_type_);
}
inline void OnlinePlayerInfo::set_mp_setting_type(::proto::MpSettingType value) {
  
  mp_setting_type_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.mp_setting_type)
}

// uint32 cur_player_num_in_world = 6;
inline void OnlinePlayerInfo::clear_cur_player_num_in_world() {
  cur_player_num_in_world_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::cur_player_num_in_world() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.cur_player_num_in_world)
  return cur_player_num_in_world_;
}
inline void OnlinePlayerInfo::set_cur_player_num_in_world(::google::protobuf::uint32 value) {
  
  cur_player_num_in_world_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.cur_player_num_in_world)
}

// uint32 world_level = 7;
inline void OnlinePlayerInfo::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::world_level() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.world_level)
  return world_level_;
}
inline void OnlinePlayerInfo::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.world_level)
}

// string online_id = 8;
inline void OnlinePlayerInfo::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlinePlayerInfo::online_id() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.online_id)
  return online_id_.GetNoArena();
}
inline void OnlinePlayerInfo::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.online_id)
}
#if LANG_CXX11
inline void OnlinePlayerInfo::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OnlinePlayerInfo.online_id)
}
#endif
inline void OnlinePlayerInfo::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OnlinePlayerInfo.online_id)
}
inline void OnlinePlayerInfo::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OnlinePlayerInfo.online_id)
}
inline ::std::string* OnlinePlayerInfo::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.OnlinePlayerInfo.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlinePlayerInfo::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.OnlinePlayerInfo.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlinePlayerInfo::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.OnlinePlayerInfo.online_id)
}

// uint32 name_card_id = 9;
inline void OnlinePlayerInfo::clear_name_card_id() {
  name_card_id_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.name_card_id)
  return name_card_id_;
}
inline void OnlinePlayerInfo::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.name_card_id)
}

// repeated uint32 blacklist_uid_list = 10;
inline int OnlinePlayerInfo::blacklist_uid_list_size() const {
  return blacklist_uid_list_.size();
}
inline void OnlinePlayerInfo::clear_blacklist_uid_list() {
  blacklist_uid_list_.Clear();
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::blacklist_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.blacklist_uid_list)
  return blacklist_uid_list_.Get(index);
}
inline void OnlinePlayerInfo::set_blacklist_uid_list(int index, ::google::protobuf::uint32 value) {
  blacklist_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.blacklist_uid_list)
}
inline void OnlinePlayerInfo::add_blacklist_uid_list(::google::protobuf::uint32 value) {
  blacklist_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.OnlinePlayerInfo.blacklist_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OnlinePlayerInfo::blacklist_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.OnlinePlayerInfo.blacklist_uid_list)
  return blacklist_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OnlinePlayerInfo::mutable_blacklist_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.OnlinePlayerInfo.blacklist_uid_list)
  return &blacklist_uid_list_;
}

// string signature = 11;
inline void OnlinePlayerInfo::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlinePlayerInfo::signature() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.signature)
  return signature_.GetNoArena();
}
inline void OnlinePlayerInfo::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.signature)
}
#if LANG_CXX11
inline void OnlinePlayerInfo::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OnlinePlayerInfo.signature)
}
#endif
inline void OnlinePlayerInfo::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OnlinePlayerInfo.signature)
}
inline void OnlinePlayerInfo::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OnlinePlayerInfo.signature)
}
inline ::std::string* OnlinePlayerInfo::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.OnlinePlayerInfo.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlinePlayerInfo::release_signature() {
  // @@protoc_insertion_point(field_release:proto.OnlinePlayerInfo.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlinePlayerInfo::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.OnlinePlayerInfo.signature)
}

// .proto.ProfilePicture profile_picture = 12;
inline bool OnlinePlayerInfo::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
inline void OnlinePlayerInfo::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
inline const ::proto::ProfilePicture& OnlinePlayerInfo::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
inline ::proto::ProfilePicture* OnlinePlayerInfo::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.OnlinePlayerInfo.profile_picture)
  return profile_picture_;
}
inline ::proto::ProfilePicture* OnlinePlayerInfo::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.OnlinePlayerInfo.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
inline void OnlinePlayerInfo::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OnlinePlayerInfo.profile_picture)
}

// string psn_id = 13;
inline void OnlinePlayerInfo::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlinePlayerInfo::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.psn_id)
  return psn_id_.GetNoArena();
}
inline void OnlinePlayerInfo::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.psn_id)
}
#if LANG_CXX11
inline void OnlinePlayerInfo::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OnlinePlayerInfo.psn_id)
}
#endif
inline void OnlinePlayerInfo::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OnlinePlayerInfo.psn_id)
}
inline void OnlinePlayerInfo::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OnlinePlayerInfo.psn_id)
}
inline ::std::string* OnlinePlayerInfo::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.OnlinePlayerInfo.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlinePlayerInfo::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.OnlinePlayerInfo.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlinePlayerInfo::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.OnlinePlayerInfo.psn_id)
}

// -------------------------------------------------------------------

// Birthday

// uint32 month = 1;
inline void Birthday::clear_month() {
  month_ = 0u;
}
inline ::google::protobuf::uint32 Birthday::month() const {
  // @@protoc_insertion_point(field_get:proto.Birthday.month)
  return month_;
}
inline void Birthday::set_month(::google::protobuf::uint32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:proto.Birthday.month)
}

// uint32 day = 2;
inline void Birthday::clear_day() {
  day_ = 0u;
}
inline ::google::protobuf::uint32 Birthday::day() const {
  // @@protoc_insertion_point(field_get:proto.Birthday.day)
  return day_;
}
inline void Birthday::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:proto.Birthday.day)
}

// -------------------------------------------------------------------

// MapMarkPoint

// uint32 scene_id = 1;
inline void MapMarkPoint::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 MapMarkPoint::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.scene_id)
  return scene_id_;
}
inline void MapMarkPoint::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.scene_id)
}

// string name = 2;
inline void MapMarkPoint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapMarkPoint::name() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.name)
  return name_.GetNoArena();
}
inline void MapMarkPoint::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.name)
}
#if LANG_CXX11
inline void MapMarkPoint::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MapMarkPoint.name)
}
#endif
inline void MapMarkPoint::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MapMarkPoint.name)
}
inline void MapMarkPoint::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MapMarkPoint.name)
}
inline ::std::string* MapMarkPoint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.MapMarkPoint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapMarkPoint::release_name() {
  // @@protoc_insertion_point(field_release:proto.MapMarkPoint.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapMarkPoint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.MapMarkPoint.name)
}

// .proto.Vector pos = 3;
inline bool MapMarkPoint::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void MapMarkPoint::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& MapMarkPoint::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MapMarkPoint::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MapMarkPoint.pos)
  return pos_;
}
inline ::proto::Vector* MapMarkPoint::release_pos() {
  // @@protoc_insertion_point(field_release:proto.MapMarkPoint.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MapMarkPoint::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MapMarkPoint.pos)
}

// .proto.MapMarkPointType point_type = 4;
inline void MapMarkPoint::clear_point_type() {
  point_type_ = 0;
}
inline ::proto::MapMarkPointType MapMarkPoint::point_type() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.point_type)
  return static_cast< ::proto::MapMarkPointType >(point_type_);
}
inline void MapMarkPoint::set_point_type(::proto::MapMarkPointType value) {
  
  point_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.point_type)
}

// uint32 monster_id = 5;
inline void MapMarkPoint::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 MapMarkPoint::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.monster_id)
  return monster_id_;
}
inline void MapMarkPoint::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.monster_id)
}

// .proto.MapMarkFromType from_type = 6;
inline void MapMarkPoint::clear_from_type() {
  from_type_ = 0;
}
inline ::proto::MapMarkFromType MapMarkPoint::from_type() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.from_type)
  return static_cast< ::proto::MapMarkFromType >(from_type_);
}
inline void MapMarkPoint::set_from_type(::proto::MapMarkFromType value) {
  
  from_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.from_type)
}

// uint32 quest_id = 7;
inline void MapMarkPoint::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 MapMarkPoint::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.quest_id)
  return quest_id_;
}
inline void MapMarkPoint::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.quest_id)
}

// -------------------------------------------------------------------

// MassiveWaterInfo

// int64 id = 1;
inline void MassiveWaterInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MassiveWaterInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveWaterInfo.id)
  return id_;
}
inline void MassiveWaterInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveWaterInfo.id)
}

// -------------------------------------------------------------------

// MassiveGrassInfo

// uint32 id = 1;
inline void MassiveGrassInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MassiveGrassInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.id)
  return id_;
}
inline void MassiveGrassInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveGrassInfo.id)
}

// .proto.Vector center = 2;
inline bool MassiveGrassInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void MassiveGrassInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& MassiveGrassInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveGrassInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveGrassInfo.center)
  return center_;
}
inline ::proto::Vector* MassiveGrassInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.MassiveGrassInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void MassiveGrassInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveGrassInfo.center)
}

// .proto.Vector size = 3;
inline bool MassiveGrassInfo::has_size() const {
  return this != internal_default_instance() && size_ != NULL;
}
inline void MassiveGrassInfo::clear_size() {
  if (GetArenaNoVirtual() == NULL && size_ != NULL) delete size_;
  size_ = NULL;
}
inline const ::proto::Vector& MassiveGrassInfo::size() const {
  const ::proto::Vector* p = size_;
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.size)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveGrassInfo::mutable_size() {
  
  if (size_ == NULL) {
    size_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveGrassInfo.size)
  return size_;
}
inline ::proto::Vector* MassiveGrassInfo::release_size() {
  // @@protoc_insertion_point(field_release:proto.MassiveGrassInfo.size)
  
  ::proto::Vector* temp = size_;
  size_ = NULL;
  return temp;
}
inline void MassiveGrassInfo::set_allocated_size(::proto::Vector* size) {
  delete size_;
  size_ = size;
  if (size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveGrassInfo.size)
}

// -------------------------------------------------------------------

// MassiveBoxInfo

// int32 id = 1;
inline void MassiveBoxInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 MassiveBoxInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.id)
  return id_;
}
inline void MassiveBoxInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveBoxInfo.id)
}

// uint32 configId = 2;
inline void MassiveBoxInfo::clear_configid() {
  configid_ = 0u;
}
inline ::google::protobuf::uint32 MassiveBoxInfo::configid() const {
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.configId)
  return configid_;
}
inline void MassiveBoxInfo::set_configid(::google::protobuf::uint32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveBoxInfo.configId)
}

// .proto.Vector center = 3;
inline bool MassiveBoxInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void MassiveBoxInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.center)
  return center_;
}
inline ::proto::Vector* MassiveBoxInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.center)
}

// .proto.Vector extents = 4;
inline bool MassiveBoxInfo::has_extents() const {
  return this != internal_default_instance() && extents_ != NULL;
}
inline void MassiveBoxInfo::clear_extents() {
  if (GetArenaNoVirtual() == NULL && extents_ != NULL) delete extents_;
  extents_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::extents() const {
  const ::proto::Vector* p = extents_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_extents() {
  
  if (extents_ == NULL) {
    extents_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.extents)
  return extents_;
}
inline ::proto::Vector* MassiveBoxInfo::release_extents() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.extents)
  
  ::proto::Vector* temp = extents_;
  extents_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_extents(::proto::Vector* extents) {
  delete extents_;
  extents_ = extents;
  if (extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.extents)
}

// .proto.Vector up = 5;
inline bool MassiveBoxInfo::has_up() const {
  return this != internal_default_instance() && up_ != NULL;
}
inline void MassiveBoxInfo::clear_up() {
  if (GetArenaNoVirtual() == NULL && up_ != NULL) delete up_;
  up_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::up() const {
  const ::proto::Vector* p = up_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.up)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_up() {
  
  if (up_ == NULL) {
    up_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.up)
  return up_;
}
inline ::proto::Vector* MassiveBoxInfo::release_up() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.up)
  
  ::proto::Vector* temp = up_;
  up_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_up(::proto::Vector* up) {
  delete up_;
  up_ = up;
  if (up) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.up)
}

// .proto.Vector forward = 6;
inline bool MassiveBoxInfo::has_forward() const {
  return this != internal_default_instance() && forward_ != NULL;
}
inline void MassiveBoxInfo::clear_forward() {
  if (GetArenaNoVirtual() == NULL && forward_ != NULL) delete forward_;
  forward_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::forward() const {
  const ::proto::Vector* p = forward_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_forward() {
  
  if (forward_ == NULL) {
    forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.forward)
  return forward_;
}
inline ::proto::Vector* MassiveBoxInfo::release_forward() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.forward)
  
  ::proto::Vector* temp = forward_;
  forward_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_forward(::proto::Vector* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.forward)
}

// .proto.Vector right = 7;
inline bool MassiveBoxInfo::has_right() const {
  return this != internal_default_instance() && right_ != NULL;
}
inline void MassiveBoxInfo::clear_right() {
  if (GetArenaNoVirtual() == NULL && right_ != NULL) delete right_;
  right_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::right() const {
  const ::proto::Vector* p = right_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.right)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_right() {
  
  if (right_ == NULL) {
    right_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.right)
  return right_;
}
inline ::proto::Vector* MassiveBoxInfo::release_right() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.right)
  
  ::proto::Vector* temp = right_;
  right_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_right(::proto::Vector* right) {
  delete right_;
  right_ = right;
  if (right) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.right)
}

// -------------------------------------------------------------------

// ClientMassiveEntity

// uint32 entity_type = 1;
inline void ClientMassiveEntity::clear_entity_type() {
  entity_type_ = 0u;
}
inline ::google::protobuf::uint32 ClientMassiveEntity::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.entity_type)
  return entity_type_;
}
inline void ClientMassiveEntity::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.entity_type)
}

// uint32 config_id = 2;
inline void ClientMassiveEntity::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientMassiveEntity::config_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.config_id)
  return config_id_;
}
inline void ClientMassiveEntity::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.config_id)
}

// int64 obj_id = 3;
inline void ClientMassiveEntity::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClientMassiveEntity::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.obj_id)
  return obj_id_;
}
inline void ClientMassiveEntity::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.obj_id)
}

// .proto.MassiveWaterInfo water_info = 4;
inline bool ClientMassiveEntity::has_water_info() const {
  return entity_info_case() == kWaterInfo;
}
inline void ClientMassiveEntity::set_has_water_info() {
  _oneof_case_[0] = kWaterInfo;
}
inline void ClientMassiveEntity::clear_water_info() {
  if (has_water_info()) {
    delete entity_info_.water_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveWaterInfo& ClientMassiveEntity::water_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.water_info)
  return has_water_info()
      ? *entity_info_.water_info_
      : ::proto::MassiveWaterInfo::default_instance();
}
inline ::proto::MassiveWaterInfo* ClientMassiveEntity::mutable_water_info() {
  if (!has_water_info()) {
    clear_entity_info();
    set_has_water_info();
    entity_info_.water_info_ = new ::proto::MassiveWaterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.water_info)
  return entity_info_.water_info_;
}
inline ::proto::MassiveWaterInfo* ClientMassiveEntity::release_water_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.water_info)
  if (has_water_info()) {
    clear_has_entity_info();
    ::proto::MassiveWaterInfo* temp = entity_info_.water_info_;
    entity_info_.water_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ClientMassiveEntity::set_allocated_water_info(::proto::MassiveWaterInfo* water_info) {
  clear_entity_info();
  if (water_info) {
    set_has_water_info();
    entity_info_.water_info_ = water_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.water_info)
}

// .proto.MassiveGrassInfo grass_info = 5;
inline bool ClientMassiveEntity::has_grass_info() const {
  return entity_info_case() == kGrassInfo;
}
inline void ClientMassiveEntity::set_has_grass_info() {
  _oneof_case_[0] = kGrassInfo;
}
inline void ClientMassiveEntity::clear_grass_info() {
  if (has_grass_info()) {
    delete entity_info_.grass_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveGrassInfo& ClientMassiveEntity::grass_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.grass_info)
  return has_grass_info()
      ? *entity_info_.grass_info_
      : ::proto::MassiveGrassInfo::default_instance();
}
inline ::proto::MassiveGrassInfo* ClientMassiveEntity::mutable_grass_info() {
  if (!has_grass_info()) {
    clear_entity_info();
    set_has_grass_info();
    entity_info_.grass_info_ = new ::proto::MassiveGrassInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.grass_info)
  return entity_info_.grass_info_;
}
inline ::proto::MassiveGrassInfo* ClientMassiveEntity::release_grass_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.grass_info)
  if (has_grass_info()) {
    clear_has_entity_info();
    ::proto::MassiveGrassInfo* temp = entity_info_.grass_info_;
    entity_info_.grass_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ClientMassiveEntity::set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info) {
  clear_entity_info();
  if (grass_info) {
    set_has_grass_info();
    entity_info_.grass_info_ = grass_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.grass_info)
}

// .proto.MassiveBoxInfo box_info = 6;
inline bool ClientMassiveEntity::has_box_info() const {
  return entity_info_case() == kBoxInfo;
}
inline void ClientMassiveEntity::set_has_box_info() {
  _oneof_case_[0] = kBoxInfo;
}
inline void ClientMassiveEntity::clear_box_info() {
  if (has_box_info()) {
    delete entity_info_.box_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveBoxInfo& ClientMassiveEntity::box_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.box_info)
  return has_box_info()
      ? *entity_info_.box_info_
      : ::proto::MassiveBoxInfo::default_instance();
}
inline ::proto::MassiveBoxInfo* ClientMassiveEntity::mutable_box_info() {
  if (!has_box_info()) {
    clear_entity_info();
    set_has_box_info();
    entity_info_.box_info_ = new ::proto::MassiveBoxInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.box_info)
  return entity_info_.box_info_;
}
inline ::proto::MassiveBoxInfo* ClientMassiveEntity::release_box_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.box_info)
  if (has_box_info()) {
    clear_has_entity_info();
    ::proto::MassiveBoxInfo* temp = entity_info_.box_info_;
    entity_info_.box_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ClientMassiveEntity::set_allocated_box_info(::proto::MassiveBoxInfo* box_info) {
  clear_entity_info();
  if (box_info) {
    set_has_box_info();
    entity_info_.box_info_ = box_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.box_info)
}

inline bool ClientMassiveEntity::has_entity_info() const {
  return entity_info_case() != ENTITY_INFO_NOT_SET;
}
inline void ClientMassiveEntity::clear_has_entity_info() {
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}
inline ClientMassiveEntity::EntityInfoCase ClientMassiveEntity::entity_info_case() const {
  return ClientMassiveEntity::EntityInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ShapeSphere

// .proto.Vector center = 1;
inline bool ShapeSphere::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void ShapeSphere::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& ShapeSphere::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.ShapeSphere.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ShapeSphere::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShapeSphere.center)
  return center_;
}
inline ::proto::Vector* ShapeSphere::release_center() {
  // @@protoc_insertion_point(field_release:proto.ShapeSphere.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void ShapeSphere::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShapeSphere.center)
}

// float radius = 2;
inline void ShapeSphere::clear_radius() {
  radius_ = 0;
}
inline float ShapeSphere::radius() const {
  // @@protoc_insertion_point(field_get:proto.ShapeSphere.radius)
  return radius_;
}
inline void ShapeSphere::set_radius(float value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:proto.ShapeSphere.radius)
}

// -------------------------------------------------------------------

// ShapeBox

// .proto.Vector center = 1;
inline bool ShapeBox::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void ShapeBox::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& ShapeBox::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.ShapeBox.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ShapeBox::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShapeBox.center)
  return center_;
}
inline ::proto::Vector* ShapeBox::release_center() {
  // @@protoc_insertion_point(field_release:proto.ShapeBox.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void ShapeBox::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShapeBox.center)
}

// .proto.Vector axis0 = 2;
inline bool ShapeBox::has_axis0() const {
  return this != internal_default_instance() && axis0_ != NULL;
}
inline void ShapeBox::clear_axis0() {
  if (GetArenaNoVirtual() == NULL && axis0_ != NULL) delete axis0_;
  axis0_ = NULL;
}
inline const ::proto::Vector& ShapeBox::axis0() const {
  const ::proto::Vector* p = axis0_;
  // @@protoc_insertion_point(field_get:proto.ShapeBox.axis0)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ShapeBox::mutable_axis0() {
  
  if (axis0_ == NULL) {
    axis0_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShapeBox.axis0)
  return axis0_;
}
inline ::proto::Vector* ShapeBox::release_axis0() {
  // @@protoc_insertion_point(field_release:proto.ShapeBox.axis0)
  
  ::proto::Vector* temp = axis0_;
  axis0_ = NULL;
  return temp;
}
inline void ShapeBox::set_allocated_axis0(::proto::Vector* axis0) {
  delete axis0_;
  axis0_ = axis0;
  if (axis0) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShapeBox.axis0)
}

// .proto.Vector axis1 = 3;
inline bool ShapeBox::has_axis1() const {
  return this != internal_default_instance() && axis1_ != NULL;
}
inline void ShapeBox::clear_axis1() {
  if (GetArenaNoVirtual() == NULL && axis1_ != NULL) delete axis1_;
  axis1_ = NULL;
}
inline const ::proto::Vector& ShapeBox::axis1() const {
  const ::proto::Vector* p = axis1_;
  // @@protoc_insertion_point(field_get:proto.ShapeBox.axis1)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ShapeBox::mutable_axis1() {
  
  if (axis1_ == NULL) {
    axis1_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShapeBox.axis1)
  return axis1_;
}
inline ::proto::Vector* ShapeBox::release_axis1() {
  // @@protoc_insertion_point(field_release:proto.ShapeBox.axis1)
  
  ::proto::Vector* temp = axis1_;
  axis1_ = NULL;
  return temp;
}
inline void ShapeBox::set_allocated_axis1(::proto::Vector* axis1) {
  delete axis1_;
  axis1_ = axis1;
  if (axis1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShapeBox.axis1)
}

// .proto.Vector axis2 = 4;
inline bool ShapeBox::has_axis2() const {
  return this != internal_default_instance() && axis2_ != NULL;
}
inline void ShapeBox::clear_axis2() {
  if (GetArenaNoVirtual() == NULL && axis2_ != NULL) delete axis2_;
  axis2_ = NULL;
}
inline const ::proto::Vector& ShapeBox::axis2() const {
  const ::proto::Vector* p = axis2_;
  // @@protoc_insertion_point(field_get:proto.ShapeBox.axis2)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ShapeBox::mutable_axis2() {
  
  if (axis2_ == NULL) {
    axis2_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShapeBox.axis2)
  return axis2_;
}
inline ::proto::Vector* ShapeBox::release_axis2() {
  // @@protoc_insertion_point(field_release:proto.ShapeBox.axis2)
  
  ::proto::Vector* temp = axis2_;
  axis2_ = NULL;
  return temp;
}
inline void ShapeBox::set_allocated_axis2(::proto::Vector* axis2) {
  delete axis2_;
  axis2_ = axis2;
  if (axis2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShapeBox.axis2)
}

// .proto.Vector extents = 5;
inline bool ShapeBox::has_extents() const {
  return this != internal_default_instance() && extents_ != NULL;
}
inline void ShapeBox::clear_extents() {
  if (GetArenaNoVirtual() == NULL && extents_ != NULL) delete extents_;
  extents_ = NULL;
}
inline const ::proto::Vector& ShapeBox::extents() const {
  const ::proto::Vector* p = extents_;
  // @@protoc_insertion_point(field_get:proto.ShapeBox.extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ShapeBox::mutable_extents() {
  
  if (extents_ == NULL) {
    extents_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShapeBox.extents)
  return extents_;
}
inline ::proto::Vector* ShapeBox::release_extents() {
  // @@protoc_insertion_point(field_release:proto.ShapeBox.extents)
  
  ::proto::Vector* temp = extents_;
  extents_ = NULL;
  return temp;
}
inline void ShapeBox::set_allocated_extents(::proto::Vector* extents) {
  delete extents_;
  extents_ = extents;
  if (extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShapeBox.extents)
}

// -------------------------------------------------------------------

// ServerMassiveEntity

// uint32 entity_type = 1;
inline void ServerMassiveEntity::clear_entity_type() {
  entity_type_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.entity_type)
  return entity_type_;
}
inline void ServerMassiveEntity::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.entity_type)
}

// uint32 config_id = 2;
inline void ServerMassiveEntity::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::config_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.config_id)
  return config_id_;
}
inline void ServerMassiveEntity::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.config_id)
}

// uint32 runtime_id = 3;
inline void ServerMassiveEntity::clear_runtime_id() {
  runtime_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::runtime_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.runtime_id)
  return runtime_id_;
}
inline void ServerMassiveEntity::set_runtime_id(::google::protobuf::uint32 value) {
  
  runtime_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.runtime_id)
}

// uint32 authority_peer_id = 4;
inline void ServerMassiveEntity::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.authority_peer_id)
  return authority_peer_id_;
}
inline void ServerMassiveEntity::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.authority_peer_id)
}

// int64 obj_id = 5;
inline void ServerMassiveEntity::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ServerMassiveEntity::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.obj_id)
  return obj_id_;
}
inline void ServerMassiveEntity::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.obj_id)
}

// .proto.MassiveWaterInfo water_info = 6;
inline bool ServerMassiveEntity::has_water_info() const {
  return entity_info_case() == kWaterInfo;
}
inline void ServerMassiveEntity::set_has_water_info() {
  _oneof_case_[0] = kWaterInfo;
}
inline void ServerMassiveEntity::clear_water_info() {
  if (has_water_info()) {
    delete entity_info_.water_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveWaterInfo& ServerMassiveEntity::water_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.water_info)
  return has_water_info()
      ? *entity_info_.water_info_
      : ::proto::MassiveWaterInfo::default_instance();
}
inline ::proto::MassiveWaterInfo* ServerMassiveEntity::mutable_water_info() {
  if (!has_water_info()) {
    clear_entity_info();
    set_has_water_info();
    entity_info_.water_info_ = new ::proto::MassiveWaterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.water_info)
  return entity_info_.water_info_;
}
inline ::proto::MassiveWaterInfo* ServerMassiveEntity::release_water_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.water_info)
  if (has_water_info()) {
    clear_has_entity_info();
    ::proto::MassiveWaterInfo* temp = entity_info_.water_info_;
    entity_info_.water_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerMassiveEntity::set_allocated_water_info(::proto::MassiveWaterInfo* water_info) {
  clear_entity_info();
  if (water_info) {
    set_has_water_info();
    entity_info_.water_info_ = water_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.water_info)
}

// .proto.MassiveGrassInfo grass_info = 7;
inline bool ServerMassiveEntity::has_grass_info() const {
  return entity_info_case() == kGrassInfo;
}
inline void ServerMassiveEntity::set_has_grass_info() {
  _oneof_case_[0] = kGrassInfo;
}
inline void ServerMassiveEntity::clear_grass_info() {
  if (has_grass_info()) {
    delete entity_info_.grass_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveGrassInfo& ServerMassiveEntity::grass_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.grass_info)
  return has_grass_info()
      ? *entity_info_.grass_info_
      : ::proto::MassiveGrassInfo::default_instance();
}
inline ::proto::MassiveGrassInfo* ServerMassiveEntity::mutable_grass_info() {
  if (!has_grass_info()) {
    clear_entity_info();
    set_has_grass_info();
    entity_info_.grass_info_ = new ::proto::MassiveGrassInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.grass_info)
  return entity_info_.grass_info_;
}
inline ::proto::MassiveGrassInfo* ServerMassiveEntity::release_grass_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.grass_info)
  if (has_grass_info()) {
    clear_has_entity_info();
    ::proto::MassiveGrassInfo* temp = entity_info_.grass_info_;
    entity_info_.grass_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerMassiveEntity::set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info) {
  clear_entity_info();
  if (grass_info) {
    set_has_grass_info();
    entity_info_.grass_info_ = grass_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.grass_info)
}

// .proto.MassiveBoxInfo box_info = 8;
inline bool ServerMassiveEntity::has_box_info() const {
  return entity_info_case() == kBoxInfo;
}
inline void ServerMassiveEntity::set_has_box_info() {
  _oneof_case_[0] = kBoxInfo;
}
inline void ServerMassiveEntity::clear_box_info() {
  if (has_box_info()) {
    delete entity_info_.box_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveBoxInfo& ServerMassiveEntity::box_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.box_info)
  return has_box_info()
      ? *entity_info_.box_info_
      : ::proto::MassiveBoxInfo::default_instance();
}
inline ::proto::MassiveBoxInfo* ServerMassiveEntity::mutable_box_info() {
  if (!has_box_info()) {
    clear_entity_info();
    set_has_box_info();
    entity_info_.box_info_ = new ::proto::MassiveBoxInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.box_info)
  return entity_info_.box_info_;
}
inline ::proto::MassiveBoxInfo* ServerMassiveEntity::release_box_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.box_info)
  if (has_box_info()) {
    clear_has_entity_info();
    ::proto::MassiveBoxInfo* temp = entity_info_.box_info_;
    entity_info_.box_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerMassiveEntity::set_allocated_box_info(::proto::MassiveBoxInfo* box_info) {
  clear_entity_info();
  if (box_info) {
    set_has_box_info();
    entity_info_.box_info_ = box_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.box_info)
}

inline bool ServerMassiveEntity::has_entity_info() const {
  return entity_info_case() != ENTITY_INFO_NOT_SET;
}
inline void ServerMassiveEntity::clear_has_entity_info() {
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}
inline ServerMassiveEntity::EntityInfoCase ServerMassiveEntity::entity_info_case() const {
  return ServerMassiveEntity::EntityInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MassiveEntityState

// uint32 entity_type = 1;
inline void MassiveEntityState::clear_entity_type() {
  entity_type_ = 0u;
}
inline ::google::protobuf::uint32 MassiveEntityState::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.entity_type)
  return entity_type_;
}
inline void MassiveEntityState::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.entity_type)
}

// int64 obj_id = 2;
inline void MassiveEntityState::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MassiveEntityState::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.obj_id)
  return obj_id_;
}
inline void MassiveEntityState::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.obj_id)
}

// uint32 element_state = 3;
inline void MassiveEntityState::clear_element_state() {
  element_state_ = 0u;
}
inline ::google::protobuf::uint32 MassiveEntityState::element_state() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.element_state)
  return element_state_;
}
inline void MassiveEntityState::set_element_state(::google::protobuf::uint32 value) {
  
  element_state_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.element_state)
}

// -------------------------------------------------------------------

// EntityClientData

// uint32 wind_change_scene_time = 1;
inline void EntityClientData::clear_wind_change_scene_time() {
  wind_change_scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityClientData::wind_change_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.wind_change_scene_time)
  return wind_change_scene_time_;
}
inline void EntityClientData::set_wind_change_scene_time(::google::protobuf::uint32 value) {
  
  wind_change_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.wind_change_scene_time)
}

// float windmill_sync_angle = 2;
inline void EntityClientData::clear_windmill_sync_angle() {
  windmill_sync_angle_ = 0;
}
inline float EntityClientData::windmill_sync_angle() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.windmill_sync_angle)
  return windmill_sync_angle_;
}
inline void EntityClientData::set_windmill_sync_angle(float value) {
  
  windmill_sync_angle_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.windmill_sync_angle)
}

// int32 wind_change_target_level = 3;
inline void EntityClientData::clear_wind_change_target_level() {
  wind_change_target_level_ = 0;
}
inline ::google::protobuf::int32 EntityClientData::wind_change_target_level() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.wind_change_target_level)
  return wind_change_target_level_;
}
inline void EntityClientData::set_wind_change_target_level(::google::protobuf::int32 value) {
  
  wind_change_target_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.wind_change_target_level)
}

// -------------------------------------------------------------------

// BlockInfo

// uint32 block_id = 1;
inline void BlockInfo::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 BlockInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.block_id)
  return block_id_;
}
inline void BlockInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.block_id)
}

// uint32 data_version = 2;
inline void BlockInfo::clear_data_version() {
  data_version_ = 0u;
}
inline ::google::protobuf::uint32 BlockInfo::data_version() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.data_version)
  return data_version_;
}
inline void BlockInfo::set_data_version(::google::protobuf::uint32 value) {
  
  data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.data_version)
}

// bytes bin_data = 3;
inline void BlockInfo::clear_bin_data() {
  bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::bin_data() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.bin_data)
  return bin_data_.GetNoArena();
}
inline void BlockInfo::set_bin_data(const ::std::string& value) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.BlockInfo.bin_data)
}
#if LANG_CXX11
inline void BlockInfo::set_bin_data(::std::string&& value) {
  
  bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.BlockInfo.bin_data)
}
#endif
inline void BlockInfo::set_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.BlockInfo.bin_data)
}
inline void BlockInfo::set_bin_data(const void* value, size_t size) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.BlockInfo.bin_data)
}
inline ::std::string* BlockInfo::mutable_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.BlockInfo.bin_data)
  return bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_bin_data() {
  // @@protoc_insertion_point(field_release:proto.BlockInfo.bin_data)
  
  return bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_bin_data(::std::string* bin_data) {
  if (bin_data != NULL) {
    
  } else {
    
  }
  bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.BlockInfo.bin_data)
}

// bool is_dirty = 4;
inline void BlockInfo::clear_is_dirty() {
  is_dirty_ = false;
}
inline bool BlockInfo::is_dirty() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.is_dirty)
  return is_dirty_;
}
inline void BlockInfo::set_is_dirty(bool value) {
  
  is_dirty_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.is_dirty)
}

// -------------------------------------------------------------------

// ShopMcoinProduct

// string product_id = 1;
inline void ShopMcoinProduct::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShopMcoinProduct::product_id() const {
  // @@protoc_insertion_point(field_get:proto.ShopMcoinProduct.product_id)
  return product_id_.GetNoArena();
}
inline void ShopMcoinProduct::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShopMcoinProduct.product_id)
}
#if LANG_CXX11
inline void ShopMcoinProduct::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShopMcoinProduct.product_id)
}
#endif
inline void ShopMcoinProduct::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShopMcoinProduct.product_id)
}
inline void ShopMcoinProduct::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShopMcoinProduct.product_id)
}
inline ::std::string* ShopMcoinProduct::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShopMcoinProduct.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShopMcoinProduct::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.ShopMcoinProduct.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShopMcoinProduct::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ShopMcoinProduct.product_id)
}

// string price_tier = 2;
inline void ShopMcoinProduct::clear_price_tier() {
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShopMcoinProduct::price_tier() const {
  // @@protoc_insertion_point(field_get:proto.ShopMcoinProduct.price_tier)
  return price_tier_.GetNoArena();
}
inline void ShopMcoinProduct::set_price_tier(const ::std::string& value) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShopMcoinProduct.price_tier)
}
#if LANG_CXX11
inline void ShopMcoinProduct::set_price_tier(::std::string&& value) {
  
  price_tier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShopMcoinProduct.price_tier)
}
#endif
inline void ShopMcoinProduct::set_price_tier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShopMcoinProduct.price_tier)
}
inline void ShopMcoinProduct::set_price_tier(const char* value, size_t size) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShopMcoinProduct.price_tier)
}
inline ::std::string* ShopMcoinProduct::mutable_price_tier() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShopMcoinProduct.price_tier)
  return price_tier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShopMcoinProduct::release_price_tier() {
  // @@protoc_insertion_point(field_release:proto.ShopMcoinProduct.price_tier)
  
  return price_tier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShopMcoinProduct::set_allocated_price_tier(::std::string* price_tier) {
  if (price_tier != NULL) {
    
  } else {
    
  }
  price_tier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_tier);
  // @@protoc_insertion_point(field_set_allocated:proto.ShopMcoinProduct.price_tier)
}

// uint32 mcoin_base = 3;
inline void ShopMcoinProduct::clear_mcoin_base() {
  mcoin_base_ = 0u;
}
inline ::google::protobuf::uint32 ShopMcoinProduct::mcoin_base() const {
  // @@protoc_insertion_point(field_get:proto.ShopMcoinProduct.mcoin_base)
  return mcoin_base_;
}
inline void ShopMcoinProduct::set_mcoin_base(::google::protobuf::uint32 value) {
  
  mcoin_base_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopMcoinProduct.mcoin_base)
}

// uint32 mcoin_non_first = 4;
inline void ShopMcoinProduct::clear_mcoin_non_first() {
  mcoin_non_first_ = 0u;
}
inline ::google::protobuf::uint32 ShopMcoinProduct::mcoin_non_first() const {
  // @@protoc_insertion_point(field_get:proto.ShopMcoinProduct.mcoin_non_first)
  return mcoin_non_first_;
}
inline void ShopMcoinProduct::set_mcoin_non_first(::google::protobuf::uint32 value) {
  
  mcoin_non_first_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopMcoinProduct.mcoin_non_first)
}

// uint32 mcoin_first = 5;
inline void ShopMcoinProduct::clear_mcoin_first() {
  mcoin_first_ = 0u;
}
inline ::google::protobuf::uint32 ShopMcoinProduct::mcoin_first() const {
  // @@protoc_insertion_point(field_get:proto.ShopMcoinProduct.mcoin_first)
  return mcoin_first_;
}
inline void ShopMcoinProduct::set_mcoin_first(::google::protobuf::uint32 value) {
  
  mcoin_first_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopMcoinProduct.mcoin_first)
}

// uint32 bought_num = 6;
inline void ShopMcoinProduct::clear_bought_num() {
  bought_num_ = 0u;
}
inline ::google::protobuf::uint32 ShopMcoinProduct::bought_num() const {
  // @@protoc_insertion_point(field_get:proto.ShopMcoinProduct.bought_num)
  return bought_num_;
}
inline void ShopMcoinProduct::set_bought_num(::google::protobuf::uint32 value) {
  
  bought_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopMcoinProduct.bought_num)
}

// bool is_audit = 7;
inline void ShopMcoinProduct::clear_is_audit() {
  is_audit_ = false;
}
inline bool ShopMcoinProduct::is_audit() const {
  // @@protoc_insertion_point(field_get:proto.ShopMcoinProduct.is_audit)
  return is_audit_;
}
inline void ShopMcoinProduct::set_is_audit(bool value) {
  
  is_audit_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopMcoinProduct.is_audit)
}

// -------------------------------------------------------------------

// ShopCardProduct_ResinCard

// repeated .proto.ItemParam base_item_list = 1;
inline int ShopCardProduct_ResinCard::base_item_list_size() const {
  return base_item_list_.size();
}
inline void ShopCardProduct_ResinCard::clear_base_item_list() {
  base_item_list_.Clear();
}
inline const ::proto::ItemParam& ShopCardProduct_ResinCard::base_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.ResinCard.base_item_list)
  return base_item_list_.Get(index);
}
inline ::proto::ItemParam* ShopCardProduct_ResinCard::mutable_base_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ShopCardProduct.ResinCard.base_item_list)
  return base_item_list_.Mutable(index);
}
inline ::proto::ItemParam* ShopCardProduct_ResinCard::add_base_item_list() {
  // @@protoc_insertion_point(field_add:proto.ShopCardProduct.ResinCard.base_item_list)
  return base_item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ShopCardProduct_ResinCard::mutable_base_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShopCardProduct.ResinCard.base_item_list)
  return &base_item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ShopCardProduct_ResinCard::base_item_list() const {
  // @@protoc_insertion_point(field_list:proto.ShopCardProduct.ResinCard.base_item_list)
  return base_item_list_;
}

// repeated .proto.ItemParam per_day_item_list = 2;
inline int ShopCardProduct_ResinCard::per_day_item_list_size() const {
  return per_day_item_list_.size();
}
inline void ShopCardProduct_ResinCard::clear_per_day_item_list() {
  per_day_item_list_.Clear();
}
inline const ::proto::ItemParam& ShopCardProduct_ResinCard::per_day_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.ResinCard.per_day_item_list)
  return per_day_item_list_.Get(index);
}
inline ::proto::ItemParam* ShopCardProduct_ResinCard::mutable_per_day_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ShopCardProduct.ResinCard.per_day_item_list)
  return per_day_item_list_.Mutable(index);
}
inline ::proto::ItemParam* ShopCardProduct_ResinCard::add_per_day_item_list() {
  // @@protoc_insertion_point(field_add:proto.ShopCardProduct.ResinCard.per_day_item_list)
  return per_day_item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ShopCardProduct_ResinCard::mutable_per_day_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShopCardProduct.ResinCard.per_day_item_list)
  return &per_day_item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ShopCardProduct_ResinCard::per_day_item_list() const {
  // @@protoc_insertion_point(field_list:proto.ShopCardProduct.ResinCard.per_day_item_list)
  return per_day_item_list_;
}

// -------------------------------------------------------------------

// ShopCardProduct

// string product_id = 1;
inline void ShopCardProduct::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShopCardProduct::product_id() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.product_id)
  return product_id_.GetNoArena();
}
inline void ShopCardProduct::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShopCardProduct.product_id)
}
#if LANG_CXX11
inline void ShopCardProduct::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShopCardProduct.product_id)
}
#endif
inline void ShopCardProduct::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShopCardProduct.product_id)
}
inline void ShopCardProduct::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShopCardProduct.product_id)
}
inline ::std::string* ShopCardProduct::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShopCardProduct.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShopCardProduct::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.ShopCardProduct.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShopCardProduct::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ShopCardProduct.product_id)
}

// string price_tier = 2;
inline void ShopCardProduct::clear_price_tier() {
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShopCardProduct::price_tier() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.price_tier)
  return price_tier_.GetNoArena();
}
inline void ShopCardProduct::set_price_tier(const ::std::string& value) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShopCardProduct.price_tier)
}
#if LANG_CXX11
inline void ShopCardProduct::set_price_tier(::std::string&& value) {
  
  price_tier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShopCardProduct.price_tier)
}
#endif
inline void ShopCardProduct::set_price_tier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShopCardProduct.price_tier)
}
inline void ShopCardProduct::set_price_tier(const char* value, size_t size) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShopCardProduct.price_tier)
}
inline ::std::string* ShopCardProduct::mutable_price_tier() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShopCardProduct.price_tier)
  return price_tier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShopCardProduct::release_price_tier() {
  // @@protoc_insertion_point(field_release:proto.ShopCardProduct.price_tier)
  
  return price_tier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShopCardProduct::set_allocated_price_tier(::std::string* price_tier) {
  if (price_tier != NULL) {
    
  } else {
    
  }
  price_tier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_tier);
  // @@protoc_insertion_point(field_set_allocated:proto.ShopCardProduct.price_tier)
}

// uint32 mcoin_base = 3;
inline void ShopCardProduct::clear_mcoin_base() {
  mcoin_base_ = 0u;
}
inline ::google::protobuf::uint32 ShopCardProduct::mcoin_base() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.mcoin_base)
  return mcoin_base_;
}
inline void ShopCardProduct::set_mcoin_base(::google::protobuf::uint32 value) {
  
  mcoin_base_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopCardProduct.mcoin_base)
}

// uint32 hcoin_per_day = 4;
inline void ShopCardProduct::clear_hcoin_per_day() {
  hcoin_per_day_ = 0u;
}
inline ::google::protobuf::uint32 ShopCardProduct::hcoin_per_day() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.hcoin_per_day)
  return hcoin_per_day_;
}
inline void ShopCardProduct::set_hcoin_per_day(::google::protobuf::uint32 value) {
  
  hcoin_per_day_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopCardProduct.hcoin_per_day)
}

// uint32 days = 5;
inline void ShopCardProduct::clear_days() {
  days_ = 0u;
}
inline ::google::protobuf::uint32 ShopCardProduct::days() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.days)
  return days_;
}
inline void ShopCardProduct::set_days(::google::protobuf::uint32 value) {
  
  days_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopCardProduct.days)
}

// uint32 remain_reward_days = 6;
inline void ShopCardProduct::clear_remain_reward_days() {
  remain_reward_days_ = 0u;
}
inline ::google::protobuf::uint32 ShopCardProduct::remain_reward_days() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.remain_reward_days)
  return remain_reward_days_;
}
inline void ShopCardProduct::set_remain_reward_days(::google::protobuf::uint32 value) {
  
  remain_reward_days_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopCardProduct.remain_reward_days)
}

// uint32 card_product_type = 7;
inline void ShopCardProduct::clear_card_product_type() {
  card_product_type_ = 0u;
}
inline ::google::protobuf::uint32 ShopCardProduct::card_product_type() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.card_product_type)
  return card_product_type_;
}
inline void ShopCardProduct::set_card_product_type(::google::protobuf::uint32 value) {
  
  card_product_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopCardProduct.card_product_type)
}

// .proto.ShopCardProduct.ResinCard resin_card = 101;
inline bool ShopCardProduct::has_resin_card() const {
  return extra_card_data_case() == kResinCard;
}
inline void ShopCardProduct::set_has_resin_card() {
  _oneof_case_[0] = kResinCard;
}
inline void ShopCardProduct::clear_resin_card() {
  if (has_resin_card()) {
    delete extra_card_data_.resin_card_;
    clear_has_extra_card_data();
  }
}
inline  const ::proto::ShopCardProduct_ResinCard& ShopCardProduct::resin_card() const {
  // @@protoc_insertion_point(field_get:proto.ShopCardProduct.resin_card)
  return has_resin_card()
      ? *extra_card_data_.resin_card_
      : ::proto::ShopCardProduct_ResinCard::default_instance();
}
inline ::proto::ShopCardProduct_ResinCard* ShopCardProduct::mutable_resin_card() {
  if (!has_resin_card()) {
    clear_extra_card_data();
    set_has_resin_card();
    extra_card_data_.resin_card_ = new ::proto::ShopCardProduct_ResinCard;
  }
  // @@protoc_insertion_point(field_mutable:proto.ShopCardProduct.resin_card)
  return extra_card_data_.resin_card_;
}
inline ::proto::ShopCardProduct_ResinCard* ShopCardProduct::release_resin_card() {
  // @@protoc_insertion_point(field_release:proto.ShopCardProduct.resin_card)
  if (has_resin_card()) {
    clear_has_extra_card_data();
    ::proto::ShopCardProduct_ResinCard* temp = extra_card_data_.resin_card_;
    extra_card_data_.resin_card_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ShopCardProduct::set_allocated_resin_card(::proto::ShopCardProduct_ResinCard* resin_card) {
  clear_extra_card_data();
  if (resin_card) {
    set_has_resin_card();
    extra_card_data_.resin_card_ = resin_card;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ShopCardProduct.resin_card)
}

inline bool ShopCardProduct::has_extra_card_data() const {
  return extra_card_data_case() != EXTRA_CARD_DATA_NOT_SET;
}
inline void ShopCardProduct::clear_has_extra_card_data() {
  _oneof_case_[0] = EXTRA_CARD_DATA_NOT_SET;
}
inline ShopCardProduct::ExtraCardDataCase ShopCardProduct::extra_card_data_case() const {
  return ShopCardProduct::ExtraCardDataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PlayProduct

// string product_id = 1;
inline void PlayProduct::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayProduct::product_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayProduct.product_id)
  return product_id_.GetNoArena();
}
inline void PlayProduct::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayProduct.product_id)
}
#if LANG_CXX11
inline void PlayProduct::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayProduct.product_id)
}
#endif
inline void PlayProduct::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayProduct.product_id)
}
inline void PlayProduct::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayProduct.product_id)
}
inline ::std::string* PlayProduct::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayProduct.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayProduct::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.PlayProduct.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayProduct::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayProduct.product_id)
}

// string price_tier = 2;
inline void PlayProduct::clear_price_tier() {
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayProduct::price_tier() const {
  // @@protoc_insertion_point(field_get:proto.PlayProduct.price_tier)
  return price_tier_.GetNoArena();
}
inline void PlayProduct::set_price_tier(const ::std::string& value) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayProduct.price_tier)
}
#if LANG_CXX11
inline void PlayProduct::set_price_tier(::std::string&& value) {
  
  price_tier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayProduct.price_tier)
}
#endif
inline void PlayProduct::set_price_tier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayProduct.price_tier)
}
inline void PlayProduct::set_price_tier(const char* value, size_t size) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayProduct.price_tier)
}
inline ::std::string* PlayProduct::mutable_price_tier() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayProduct.price_tier)
  return price_tier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayProduct::release_price_tier() {
  // @@protoc_insertion_point(field_release:proto.PlayProduct.price_tier)
  
  return price_tier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayProduct::set_allocated_price_tier(::std::string* price_tier) {
  if (price_tier != NULL) {
    
  } else {
    
  }
  price_tier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_tier);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayProduct.price_tier)
}

// uint32 schedule_id = 3;
inline void PlayProduct::clear_schedule_id() {
  schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayProduct::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayProduct.schedule_id)
  return schedule_id_;
}
inline void PlayProduct::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayProduct.schedule_id)
}

// -------------------------------------------------------------------

// ShopConcertProduct

// string product_id = 1;
inline void ShopConcertProduct::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShopConcertProduct::product_id() const {
  // @@protoc_insertion_point(field_get:proto.ShopConcertProduct.product_id)
  return product_id_.GetNoArena();
}
inline void ShopConcertProduct::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShopConcertProduct.product_id)
}
#if LANG_CXX11
inline void ShopConcertProduct::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShopConcertProduct.product_id)
}
#endif
inline void ShopConcertProduct::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShopConcertProduct.product_id)
}
inline void ShopConcertProduct::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShopConcertProduct.product_id)
}
inline ::std::string* ShopConcertProduct::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShopConcertProduct.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShopConcertProduct::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.ShopConcertProduct.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShopConcertProduct::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ShopConcertProduct.product_id)
}

// string price_tier = 2;
inline void ShopConcertProduct::clear_price_tier() {
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShopConcertProduct::price_tier() const {
  // @@protoc_insertion_point(field_get:proto.ShopConcertProduct.price_tier)
  return price_tier_.GetNoArena();
}
inline void ShopConcertProduct::set_price_tier(const ::std::string& value) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ShopConcertProduct.price_tier)
}
#if LANG_CXX11
inline void ShopConcertProduct::set_price_tier(::std::string&& value) {
  
  price_tier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ShopConcertProduct.price_tier)
}
#endif
inline void ShopConcertProduct::set_price_tier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ShopConcertProduct.price_tier)
}
inline void ShopConcertProduct::set_price_tier(const char* value, size_t size) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ShopConcertProduct.price_tier)
}
inline ::std::string* ShopConcertProduct::mutable_price_tier() {
  
  // @@protoc_insertion_point(field_mutable:proto.ShopConcertProduct.price_tier)
  return price_tier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShopConcertProduct::release_price_tier() {
  // @@protoc_insertion_point(field_release:proto.ShopConcertProduct.price_tier)
  
  return price_tier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShopConcertProduct::set_allocated_price_tier(::std::string* price_tier) {
  if (price_tier != NULL) {
    
  } else {
    
  }
  price_tier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_tier);
  // @@protoc_insertion_point(field_set_allocated:proto.ShopConcertProduct.price_tier)
}

// uint32 obtain_count = 3;
inline void ShopConcertProduct::clear_obtain_count() {
  obtain_count_ = 0u;
}
inline ::google::protobuf::uint32 ShopConcertProduct::obtain_count() const {
  // @@protoc_insertion_point(field_get:proto.ShopConcertProduct.obtain_count)
  return obtain_count_;
}
inline void ShopConcertProduct::set_obtain_count(::google::protobuf::uint32 value) {
  
  obtain_count_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopConcertProduct.obtain_count)
}

// uint32 obtain_limit = 4;
inline void ShopConcertProduct::clear_obtain_limit() {
  obtain_limit_ = 0u;
}
inline ::google::protobuf::uint32 ShopConcertProduct::obtain_limit() const {
  // @@protoc_insertion_point(field_get:proto.ShopConcertProduct.obtain_limit)
  return obtain_limit_;
}
inline void ShopConcertProduct::set_obtain_limit(::google::protobuf::uint32 value) {
  
  obtain_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopConcertProduct.obtain_limit)
}

// uint32 begin_time = 5;
inline void ShopConcertProduct::clear_begin_time() {
  begin_time_ = 0u;
}
inline ::google::protobuf::uint32 ShopConcertProduct::begin_time() const {
  // @@protoc_insertion_point(field_get:proto.ShopConcertProduct.begin_time)
  return begin_time_;
}
inline void ShopConcertProduct::set_begin_time(::google::protobuf::uint32 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopConcertProduct.begin_time)
}

// uint32 end_time = 6;
inline void ShopConcertProduct::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 ShopConcertProduct::end_time() const {
  // @@protoc_insertion_point(field_get:proto.ShopConcertProduct.end_time)
  return end_time_;
}
inline void ShopConcertProduct::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopConcertProduct.end_time)
}

// uint32 buy_times = 7;
inline void ShopConcertProduct::clear_buy_times() {
  buy_times_ = 0u;
}
inline ::google::protobuf::uint32 ShopConcertProduct::buy_times() const {
  // @@protoc_insertion_point(field_get:proto.ShopConcertProduct.buy_times)
  return buy_times_;
}
inline void ShopConcertProduct::set_buy_times(::google::protobuf::uint32 value) {
  
  buy_times_ = value;
  // @@protoc_insertion_point(field_set:proto.ShopConcertProduct.buy_times)
}

// -------------------------------------------------------------------

// HashedString

// uint32 hash = 1;
inline void HashedString::clear_hash() {
  hash_ = 0u;
}
inline ::google::protobuf::uint32 HashedString::hash() const {
  // @@protoc_insertion_point(field_get:proto.HashedString.hash)
  return hash_;
}
inline void HashedString::set_hash(::google::protobuf::uint32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:proto.HashedString.hash)
}

// -------------------------------------------------------------------

// PlayTeamEntityInfo

// uint32 entity_id = 1;
inline void PlayTeamEntityInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayTeamEntityInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayTeamEntityInfo.entity_id)
  return entity_id_;
}
inline void PlayTeamEntityInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayTeamEntityInfo.entity_id)
}

// uint32 player_uid = 2;
inline void PlayTeamEntityInfo::clear_player_uid() {
  player_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayTeamEntityInfo::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayTeamEntityInfo.player_uid)
  return player_uid_;
}
inline void PlayTeamEntityInfo::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayTeamEntityInfo.player_uid)
}

// uint32 authority_peer_id = 3;
inline void PlayTeamEntityInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayTeamEntityInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayTeamEntityInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void PlayTeamEntityInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayTeamEntityInfo.authority_peer_id)
}

// uint32 gadget_config_id = 5;
inline void PlayTeamEntityInfo::clear_gadget_config_id() {
  gadget_config_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayTeamEntityInfo::gadget_config_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayTeamEntityInfo.gadget_config_id)
  return gadget_config_id_;
}
inline void PlayTeamEntityInfo::set_gadget_config_id(::google::protobuf::uint32 value) {
  
  gadget_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayTeamEntityInfo.gadget_config_id)
}

// .proto.AbilitySyncStateInfo ability_info = 6;
inline bool PlayTeamEntityInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void PlayTeamEntityInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& PlayTeamEntityInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.PlayTeamEntityInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* PlayTeamEntityInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayTeamEntityInfo.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* PlayTeamEntityInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.PlayTeamEntityInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void PlayTeamEntityInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayTeamEntityInfo.ability_info)
}

// -------------------------------------------------------------------

// FeatureBlockInfo

// uint32 feature_type = 1;
inline void FeatureBlockInfo::clear_feature_type() {
  feature_type_ = 0u;
}
inline ::google::protobuf::uint32 FeatureBlockInfo::feature_type() const {
  // @@protoc_insertion_point(field_get:proto.FeatureBlockInfo.feature_type)
  return feature_type_;
}
inline void FeatureBlockInfo::set_feature_type(::google::protobuf::uint32 value) {
  
  feature_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FeatureBlockInfo.feature_type)
}

// uint32 end_time = 2;
inline void FeatureBlockInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 FeatureBlockInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.FeatureBlockInfo.end_time)
  return end_time_;
}
inline void FeatureBlockInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FeatureBlockInfo.end_time)
}

// -------------------------------------------------------------------

// MapMarkTipsInfo

// .proto.MapMarkTipsType tips_type = 1;
inline void MapMarkTipsInfo::clear_tips_type() {
  tips_type_ = 0;
}
inline ::proto::MapMarkTipsType MapMarkTipsInfo::tips_type() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkTipsInfo.tips_type)
  return static_cast< ::proto::MapMarkTipsType >(tips_type_);
}
inline void MapMarkTipsInfo::set_tips_type(::proto::MapMarkTipsType value) {
  
  tips_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkTipsInfo.tips_type)
}

// repeated uint32 point_id_list = 2;
inline int MapMarkTipsInfo::point_id_list_size() const {
  return point_id_list_.size();
}
inline void MapMarkTipsInfo::clear_point_id_list() {
  point_id_list_.Clear();
}
inline ::google::protobuf::uint32 MapMarkTipsInfo::point_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MapMarkTipsInfo.point_id_list)
  return point_id_list_.Get(index);
}
inline void MapMarkTipsInfo::set_point_id_list(int index, ::google::protobuf::uint32 value) {
  point_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MapMarkTipsInfo.point_id_list)
}
inline void MapMarkTipsInfo::add_point_id_list(::google::protobuf::uint32 value) {
  point_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MapMarkTipsInfo.point_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MapMarkTipsInfo::point_id_list() const {
  // @@protoc_insertion_point(field_list:proto.MapMarkTipsInfo.point_id_list)
  return point_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MapMarkTipsInfo::mutable_point_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MapMarkTipsInfo.point_id_list)
  return &point_id_list_;
}

// -------------------------------------------------------------------

// ExhibitionDisplayInfo

// uint32 id = 1;
inline void ExhibitionDisplayInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ExhibitionDisplayInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionDisplayInfo.id)
  return id_;
}
inline void ExhibitionDisplayInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionDisplayInfo.id)
}

// uint32 param = 2;
inline void ExhibitionDisplayInfo::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 ExhibitionDisplayInfo::param() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionDisplayInfo.param)
  return param_;
}
inline void ExhibitionDisplayInfo::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionDisplayInfo.param)
}

// uint32 detail_param = 3;
inline void ExhibitionDisplayInfo::clear_detail_param() {
  detail_param_ = 0u;
}
inline ::google::protobuf::uint32 ExhibitionDisplayInfo::detail_param() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionDisplayInfo.detail_param)
  return detail_param_;
}
inline void ExhibitionDisplayInfo::set_detail_param(::google::protobuf::uint32 value) {
  
  detail_param_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionDisplayInfo.detail_param)
}

// -------------------------------------------------------------------

// ProfilePicture

// uint32 avatar_id = 1;
inline void ProfilePicture::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 ProfilePicture::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ProfilePicture.avatar_id)
  return avatar_id_;
}
inline void ProfilePicture::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProfilePicture.avatar_id)
}

// uint32 costume_id = 2;
inline void ProfilePicture::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 ProfilePicture::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.ProfilePicture.costume_id)
  return costume_id_;
}
inline void ProfilePicture::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProfilePicture.costume_id)
}

// -------------------------------------------------------------------

// RedPointData

// uint32 red_point_type = 1;
inline void RedPointData::clear_red_point_type() {
  red_point_type_ = 0u;
}
inline ::google::protobuf::uint32 RedPointData::red_point_type() const {
  // @@protoc_insertion_point(field_get:proto.RedPointData.red_point_type)
  return red_point_type_;
}
inline void RedPointData::set_red_point_type(::google::protobuf::uint32 value) {
  
  red_point_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RedPointData.red_point_type)
}

// bool is_show = 2;
inline void RedPointData::clear_is_show() {
  is_show_ = false;
}
inline bool RedPointData::is_show() const {
  // @@protoc_insertion_point(field_get:proto.RedPointData.is_show)
  return is_show_;
}
inline void RedPointData::set_is_show(bool value) {
  
  is_show_ = value;
  // @@protoc_insertion_point(field_set:proto.RedPointData.is_show)
}

// uint32 content_id = 3;
inline void RedPointData::clear_content_id() {
  content_id_ = 0u;
}
inline ::google::protobuf::uint32 RedPointData::content_id() const {
  // @@protoc_insertion_point(field_get:proto.RedPointData.content_id)
  return content_id_;
}
inline void RedPointData::set_content_id(::google::protobuf::uint32 value) {
  
  content_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RedPointData.content_id)
}

// -------------------------------------------------------------------

// HomeMarkPointNPCData

// uint32 avatar_id = 1;
inline void HomeMarkPointNPCData::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeMarkPointNPCData::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointNPCData.avatar_id)
  return avatar_id_;
}
inline void HomeMarkPointNPCData::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeMarkPointNPCData.avatar_id)
}

// uint32 costume_id = 2;
inline void HomeMarkPointNPCData::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeMarkPointNPCData::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointNPCData.costume_id)
  return costume_id_;
}
inline void HomeMarkPointNPCData::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeMarkPointNPCData.costume_id)
}

// -------------------------------------------------------------------

// HomeMarkPointSuiteData

// uint32 suite_id = 1;
inline void HomeMarkPointSuiteData::clear_suite_id() {
  suite_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeMarkPointSuiteData::suite_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointSuiteData.suite_id)
  return suite_id_;
}
inline void HomeMarkPointSuiteData::set_suite_id(::google::protobuf::uint32 value) {
  
  suite_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeMarkPointSuiteData.suite_id)
}

// -------------------------------------------------------------------

// HomeMarkPointFurnitureData

// uint32 guid = 1;
inline void HomeMarkPointFurnitureData::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeMarkPointFurnitureData::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointFurnitureData.guid)
  return guid_;
}
inline void HomeMarkPointFurnitureData::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeMarkPointFurnitureData.guid)
}

// uint32 furniture_id = 2;
inline void HomeMarkPointFurnitureData::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeMarkPointFurnitureData::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointFurnitureData.furniture_id)
  return furniture_id_;
}
inline void HomeMarkPointFurnitureData::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeMarkPointFurnitureData.furniture_id)
}

// uint32 furniture_type = 3;
inline void HomeMarkPointFurnitureData::clear_furniture_type() {
  furniture_type_ = 0u;
}
inline ::google::protobuf::uint32 HomeMarkPointFurnitureData::furniture_type() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointFurnitureData.furniture_type)
  return furniture_type_;
}
inline void HomeMarkPointFurnitureData::set_furniture_type(::google::protobuf::uint32 value) {
  
  furniture_type_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeMarkPointFurnitureData.furniture_type)
}

// .proto.Vector pos = 4;
inline bool HomeMarkPointFurnitureData::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void HomeMarkPointFurnitureData::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& HomeMarkPointFurnitureData::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointFurnitureData.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HomeMarkPointFurnitureData::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeMarkPointFurnitureData.pos)
  return pos_;
}
inline ::proto::Vector* HomeMarkPointFurnitureData::release_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeMarkPointFurnitureData.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void HomeMarkPointFurnitureData::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeMarkPointFurnitureData.pos)
}

// .proto.HomeMarkPointNPCData npc_data = 6;
inline bool HomeMarkPointFurnitureData::has_npc_data() const {
  return extra_case() == kNpcData;
}
inline void HomeMarkPointFurnitureData::set_has_npc_data() {
  _oneof_case_[0] = kNpcData;
}
inline void HomeMarkPointFurnitureData::clear_npc_data() {
  if (has_npc_data()) {
    delete extra_.npc_data_;
    clear_has_extra();
  }
}
inline  const ::proto::HomeMarkPointNPCData& HomeMarkPointFurnitureData::npc_data() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointFurnitureData.npc_data)
  return has_npc_data()
      ? *extra_.npc_data_
      : ::proto::HomeMarkPointNPCData::default_instance();
}
inline ::proto::HomeMarkPointNPCData* HomeMarkPointFurnitureData::mutable_npc_data() {
  if (!has_npc_data()) {
    clear_extra();
    set_has_npc_data();
    extra_.npc_data_ = new ::proto::HomeMarkPointNPCData;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeMarkPointFurnitureData.npc_data)
  return extra_.npc_data_;
}
inline ::proto::HomeMarkPointNPCData* HomeMarkPointFurnitureData::release_npc_data() {
  // @@protoc_insertion_point(field_release:proto.HomeMarkPointFurnitureData.npc_data)
  if (has_npc_data()) {
    clear_has_extra();
    ::proto::HomeMarkPointNPCData* temp = extra_.npc_data_;
    extra_.npc_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeMarkPointFurnitureData::set_allocated_npc_data(::proto::HomeMarkPointNPCData* npc_data) {
  clear_extra();
  if (npc_data) {
    set_has_npc_data();
    extra_.npc_data_ = npc_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeMarkPointFurnitureData.npc_data)
}

// .proto.HomeMarkPointSuiteData suite_data = 7;
inline bool HomeMarkPointFurnitureData::has_suite_data() const {
  return extra_case() == kSuiteData;
}
inline void HomeMarkPointFurnitureData::set_has_suite_data() {
  _oneof_case_[0] = kSuiteData;
}
inline void HomeMarkPointFurnitureData::clear_suite_data() {
  if (has_suite_data()) {
    delete extra_.suite_data_;
    clear_has_extra();
  }
}
inline  const ::proto::HomeMarkPointSuiteData& HomeMarkPointFurnitureData::suite_data() const {
  // @@protoc_insertion_point(field_get:proto.HomeMarkPointFurnitureData.suite_data)
  return has_suite_data()
      ? *extra_.suite_data_
      : ::proto::HomeMarkPointSuiteData::default_instance();
}
inline ::proto::HomeMarkPointSuiteData* HomeMarkPointFurnitureData::mutable_suite_data() {
  if (!has_suite_data()) {
    clear_extra();
    set_has_suite_data();
    extra_.suite_data_ = new ::proto::HomeMarkPointSuiteData;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeMarkPointFurnitureData.suite_data)
  return extra_.suite_data_;
}
inline ::proto::HomeMarkPointSuiteData* HomeMarkPointFurnitureData::release_suite_data() {
  // @@protoc_insertion_point(field_release:proto.HomeMarkPointFurnitureData.suite_data)
  if (has_suite_data()) {
    clear_has_extra();
    ::proto::HomeMarkPointSuiteData* temp = extra_.suite_data_;
    extra_.suite_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeMarkPointFurnitureData::set_allocated_suite_data(::proto::HomeMarkPointSuiteData* suite_data) {
  clear_extra();
  if (suite_data) {
    set_has_suite_data();
    extra_.suite_data_ = suite_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeMarkPointFurnitureData.suite_data)
}

inline bool HomeMarkPointFurnitureData::has_extra() const {
  return extra_case() != EXTRA_NOT_SET;
}
inline void HomeMarkPointFurnitureData::clear_has_extra() {
  _oneof_case_[0] = EXTRA_NOT_SET;
}
inline HomeMarkPointFurnitureData::ExtraCase HomeMarkPointFurnitureData::extra_case() const {
  return HomeMarkPointFurnitureData::ExtraCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MapAreaInfo

// uint32 map_area_id = 1;
inline void MapAreaInfo::clear_map_area_id() {
  map_area_id_ = 0u;
}
inline ::google::protobuf::uint32 MapAreaInfo::map_area_id() const {
  // @@protoc_insertion_point(field_get:proto.MapAreaInfo.map_area_id)
  return map_area_id_;
}
inline void MapAreaInfo::set_map_area_id(::google::protobuf::uint32 value) {
  
  map_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapAreaInfo.map_area_id)
}

// bool is_open = 2;
inline void MapAreaInfo::clear_is_open() {
  is_open_ = false;
}
inline bool MapAreaInfo::is_open() const {
  // @@protoc_insertion_point(field_get:proto.MapAreaInfo.is_open)
  return is_open_;
}
inline void MapAreaInfo::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.MapAreaInfo.is_open)
}

// -------------------------------------------------------------------

// HomeFurnitureArrangementMuipData

// uint32 furniture_id = 1;
inline void HomeFurnitureArrangementMuipData::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureArrangementMuipData::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureArrangementMuipData.furniture_id)
  return furniture_id_;
}
inline void HomeFurnitureArrangementMuipData::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureArrangementMuipData.furniture_id)
}

// .proto.Vector spawn_pos = 2;
inline bool HomeFurnitureArrangementMuipData::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeFurnitureArrangementMuipData::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::Vector& HomeFurnitureArrangementMuipData::spawn_pos() const {
  const ::proto::Vector* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureArrangementMuipData.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HomeFurnitureArrangementMuipData::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureArrangementMuipData.spawn_pos)
  return spawn_pos_;
}
inline ::proto::Vector* HomeFurnitureArrangementMuipData::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureArrangementMuipData.spawn_pos)
  
  ::proto::Vector* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeFurnitureArrangementMuipData::set_allocated_spawn_pos(::proto::Vector* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureArrangementMuipData.spawn_pos)
}

// .proto.Vector spawn_rot = 3;
inline bool HomeFurnitureArrangementMuipData::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
inline void HomeFurnitureArrangementMuipData::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
inline const ::proto::Vector& HomeFurnitureArrangementMuipData::spawn_rot() const {
  const ::proto::Vector* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureArrangementMuipData.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HomeFurnitureArrangementMuipData::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureArrangementMuipData.spawn_rot)
  return spawn_rot_;
}
inline ::proto::Vector* HomeFurnitureArrangementMuipData::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureArrangementMuipData.spawn_rot)
  
  ::proto::Vector* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
inline void HomeFurnitureArrangementMuipData::set_allocated_spawn_rot(::proto::Vector* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureArrangementMuipData.spawn_rot)
}

// -------------------------------------------------------------------

// HomeBlockArrangementMuipData

// uint32 block_id = 1;
inline void HomeBlockArrangementMuipData::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlockArrangementMuipData::block_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockArrangementMuipData.block_id)
  return block_id_;
}
inline void HomeBlockArrangementMuipData::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockArrangementMuipData.block_id)
}

// repeated .proto.HomeFurnitureArrangementMuipData furniture_data_list = 2;
inline int HomeBlockArrangementMuipData::furniture_data_list_size() const {
  return furniture_data_list_.size();
}
inline void HomeBlockArrangementMuipData::clear_furniture_data_list() {
  furniture_data_list_.Clear();
}
inline const ::proto::HomeFurnitureArrangementMuipData& HomeBlockArrangementMuipData::furniture_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockArrangementMuipData.furniture_data_list)
  return furniture_data_list_.Get(index);
}
inline ::proto::HomeFurnitureArrangementMuipData* HomeBlockArrangementMuipData::mutable_furniture_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockArrangementMuipData.furniture_data_list)
  return furniture_data_list_.Mutable(index);
}
inline ::proto::HomeFurnitureArrangementMuipData* HomeBlockArrangementMuipData::add_furniture_data_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockArrangementMuipData.furniture_data_list)
  return furniture_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureArrangementMuipData >*
HomeBlockArrangementMuipData::mutable_furniture_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockArrangementMuipData.furniture_data_list)
  return &furniture_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureArrangementMuipData >&
HomeBlockArrangementMuipData::furniture_data_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockArrangementMuipData.furniture_data_list)
  return furniture_data_list_;
}

// -------------------------------------------------------------------

// HomeSceneArrangementMuipData

// uint32 module_id = 1;
inline void HomeSceneArrangementMuipData::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeSceneArrangementMuipData::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneArrangementMuipData.module_id)
  return module_id_;
}
inline void HomeSceneArrangementMuipData::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneArrangementMuipData.module_id)
}

// uint32 scene_id = 2;
inline void HomeSceneArrangementMuipData::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeSceneArrangementMuipData::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneArrangementMuipData.scene_id)
  return scene_id_;
}
inline void HomeSceneArrangementMuipData::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneArrangementMuipData.scene_id)
}

// bool is_room = 3;
inline void HomeSceneArrangementMuipData::clear_is_room() {
  is_room_ = false;
}
inline bool HomeSceneArrangementMuipData::is_room() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneArrangementMuipData.is_room)
  return is_room_;
}
inline void HomeSceneArrangementMuipData::set_is_room(bool value) {
  
  is_room_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneArrangementMuipData.is_room)
}

// repeated .proto.HomeBlockArrangementMuipData block_data_list = 4;
inline int HomeSceneArrangementMuipData::block_data_list_size() const {
  return block_data_list_.size();
}
inline void HomeSceneArrangementMuipData::clear_block_data_list() {
  block_data_list_.Clear();
}
inline const ::proto::HomeBlockArrangementMuipData& HomeSceneArrangementMuipData::block_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneArrangementMuipData.block_data_list)
  return block_data_list_.Get(index);
}
inline ::proto::HomeBlockArrangementMuipData* HomeSceneArrangementMuipData::mutable_block_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneArrangementMuipData.block_data_list)
  return block_data_list_.Mutable(index);
}
inline ::proto::HomeBlockArrangementMuipData* HomeSceneArrangementMuipData::add_block_data_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneArrangementMuipData.block_data_list)
  return block_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockArrangementMuipData >*
HomeSceneArrangementMuipData::mutable_block_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneArrangementMuipData.block_data_list)
  return &block_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockArrangementMuipData >&
HomeSceneArrangementMuipData::block_data_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneArrangementMuipData.block_data_list)
  return block_data_list_;
}

// -------------------------------------------------------------------

// CustomDungeonBattleRecordMuipData

// uint64 dungeon_guid = 1;
inline void CustomDungeonBattleRecordMuipData::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CustomDungeonBattleRecordMuipData::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBattleRecordMuipData.dungeon_guid)
  return dungeon_guid_;
}
inline void CustomDungeonBattleRecordMuipData::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonBattleRecordMuipData.dungeon_guid)
}

// uint32 min_cost_time = 2;
inline void CustomDungeonBattleRecordMuipData::clear_min_cost_time() {
  min_cost_time_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonBattleRecordMuipData::min_cost_time() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBattleRecordMuipData.min_cost_time)
  return min_cost_time_;
}
inline void CustomDungeonBattleRecordMuipData::set_min_cost_time(::google::protobuf::uint32 value) {
  
  min_cost_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonBattleRecordMuipData.min_cost_time)
}

// -------------------------------------------------------------------

// PlayerCustomDungeonMuipData

// uint32 uid = 1;
inline void PlayerCustomDungeonMuipData::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCustomDungeonMuipData::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCustomDungeonMuipData.uid)
  return uid_;
}
inline void PlayerCustomDungeonMuipData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCustomDungeonMuipData.uid)
}

// repeated uint64 publish_dungeon_list = 2;
inline int PlayerCustomDungeonMuipData::publish_dungeon_list_size() const {
  return publish_dungeon_list_.size();
}
inline void PlayerCustomDungeonMuipData::clear_publish_dungeon_list() {
  publish_dungeon_list_.Clear();
}
inline ::google::protobuf::uint64 PlayerCustomDungeonMuipData::publish_dungeon_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCustomDungeonMuipData.publish_dungeon_list)
  return publish_dungeon_list_.Get(index);
}
inline void PlayerCustomDungeonMuipData::set_publish_dungeon_list(int index, ::google::protobuf::uint64 value) {
  publish_dungeon_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerCustomDungeonMuipData.publish_dungeon_list)
}
inline void PlayerCustomDungeonMuipData::add_publish_dungeon_list(::google::protobuf::uint64 value) {
  publish_dungeon_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerCustomDungeonMuipData.publish_dungeon_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PlayerCustomDungeonMuipData::publish_dungeon_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCustomDungeonMuipData.publish_dungeon_list)
  return publish_dungeon_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PlayerCustomDungeonMuipData::mutable_publish_dungeon_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCustomDungeonMuipData.publish_dungeon_list)
  return &publish_dungeon_list_;
}

// repeated uint64 store_dungeon_list = 3;
inline int PlayerCustomDungeonMuipData::store_dungeon_list_size() const {
  return store_dungeon_list_.size();
}
inline void PlayerCustomDungeonMuipData::clear_store_dungeon_list() {
  store_dungeon_list_.Clear();
}
inline ::google::protobuf::uint64 PlayerCustomDungeonMuipData::store_dungeon_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCustomDungeonMuipData.store_dungeon_list)
  return store_dungeon_list_.Get(index);
}
inline void PlayerCustomDungeonMuipData::set_store_dungeon_list(int index, ::google::protobuf::uint64 value) {
  store_dungeon_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerCustomDungeonMuipData.store_dungeon_list)
}
inline void PlayerCustomDungeonMuipData::add_store_dungeon_list(::google::protobuf::uint64 value) {
  store_dungeon_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerCustomDungeonMuipData.store_dungeon_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PlayerCustomDungeonMuipData::store_dungeon_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCustomDungeonMuipData.store_dungeon_list)
  return store_dungeon_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PlayerCustomDungeonMuipData::mutable_store_dungeon_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCustomDungeonMuipData.store_dungeon_list)
  return &store_dungeon_list_;
}

// repeated .proto.CustomDungeonBattleRecordMuipData battle_record_list = 4;
inline int PlayerCustomDungeonMuipData::battle_record_list_size() const {
  return battle_record_list_.size();
}
inline void PlayerCustomDungeonMuipData::clear_battle_record_list() {
  battle_record_list_.Clear();
}
inline const ::proto::CustomDungeonBattleRecordMuipData& PlayerCustomDungeonMuipData::battle_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCustomDungeonMuipData.battle_record_list)
  return battle_record_list_.Get(index);
}
inline ::proto::CustomDungeonBattleRecordMuipData* PlayerCustomDungeonMuipData::mutable_battle_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCustomDungeonMuipData.battle_record_list)
  return battle_record_list_.Mutable(index);
}
inline ::proto::CustomDungeonBattleRecordMuipData* PlayerCustomDungeonMuipData::add_battle_record_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCustomDungeonMuipData.battle_record_list)
  return battle_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBattleRecordMuipData >*
PlayerCustomDungeonMuipData::mutable_battle_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCustomDungeonMuipData.battle_record_list)
  return &battle_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBattleRecordMuipData >&
PlayerCustomDungeonMuipData::battle_record_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCustomDungeonMuipData.battle_record_list)
  return battle_record_list_;
}

// -------------------------------------------------------------------

// CustomDungeonSettingMuipData

// bool is_arrive_finish = 1;
inline void CustomDungeonSettingMuipData::clear_is_arrive_finish() {
  is_arrive_finish_ = false;
}
inline bool CustomDungeonSettingMuipData::is_arrive_finish() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingMuipData.is_arrive_finish)
  return is_arrive_finish_;
}
inline void CustomDungeonSettingMuipData::set_is_arrive_finish(bool value) {
  
  is_arrive_finish_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingMuipData.is_arrive_finish)
}

// uint32 coin_limit = 2;
inline void CustomDungeonSettingMuipData::clear_coin_limit() {
  coin_limit_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSettingMuipData::coin_limit() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingMuipData.coin_limit)
  return coin_limit_;
}
inline void CustomDungeonSettingMuipData::set_coin_limit(::google::protobuf::uint32 value) {
  
  coin_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingMuipData.coin_limit)
}

// uint32 time_limit = 3;
inline void CustomDungeonSettingMuipData::clear_time_limit() {
  time_limit_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSettingMuipData::time_limit() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingMuipData.time_limit)
  return time_limit_;
}
inline void CustomDungeonSettingMuipData::set_time_limit(::google::protobuf::uint32 value) {
  
  time_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingMuipData.time_limit)
}

// bool is_forbid_skill = 4;
inline void CustomDungeonSettingMuipData::clear_is_forbid_skill() {
  is_forbid_skill_ = false;
}
inline bool CustomDungeonSettingMuipData::is_forbid_skill() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingMuipData.is_forbid_skill)
  return is_forbid_skill_;
}
inline void CustomDungeonSettingMuipData::set_is_forbid_skill(bool value) {
  
  is_forbid_skill_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingMuipData.is_forbid_skill)
}

// uint32 life_num = 5;
inline void CustomDungeonSettingMuipData::clear_life_num() {
  life_num_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSettingMuipData::life_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingMuipData.life_num)
  return life_num_;
}
inline void CustomDungeonSettingMuipData::set_life_num(::google::protobuf::uint32 value) {
  
  life_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingMuipData.life_num)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CustomDungeonAbstractMuipData

// uint32 first_publish_time = 1;
inline void CustomDungeonAbstractMuipData::clear_first_publish_time() {
  first_publish_time_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonAbstractMuipData::first_publish_time() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractMuipData.first_publish_time)
  return first_publish_time_;
}
inline void CustomDungeonAbstractMuipData::set_first_publish_time(::google::protobuf::uint32 value) {
  
  first_publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractMuipData.first_publish_time)
}

// uint32 last_publish_time = 2;
inline void CustomDungeonAbstractMuipData::clear_last_publish_time() {
  last_publish_time_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonAbstractMuipData::last_publish_time() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractMuipData.last_publish_time)
  return last_publish_time_;
}
inline void CustomDungeonAbstractMuipData::set_last_publish_time(::google::protobuf::uint32 value) {
  
  last_publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractMuipData.last_publish_time)
}

// map<uint32, uint32> brick_statistics_map = 3;
inline int CustomDungeonAbstractMuipData::brick_statistics_map_size() const {
  return brick_statistics_map_.size();
}
inline void CustomDungeonAbstractMuipData::clear_brick_statistics_map() {
  brick_statistics_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CustomDungeonAbstractMuipData::brick_statistics_map() const {
  // @@protoc_insertion_point(field_map:proto.CustomDungeonAbstractMuipData.brick_statistics_map)
  return brick_statistics_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CustomDungeonAbstractMuipData::mutable_brick_statistics_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CustomDungeonAbstractMuipData.brick_statistics_map)
  return brick_statistics_map_.MutableMap();
}

// -------------------------------------------------------------------

// CustomDungeonSocialMuipData

// uint32 play_num = 1;
inline void CustomDungeonSocialMuipData::clear_play_num() {
  play_num_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSocialMuipData::play_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSocialMuipData.play_num)
  return play_num_;
}
inline void CustomDungeonSocialMuipData::set_play_num(::google::protobuf::uint32 value) {
  
  play_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSocialMuipData.play_num)
}

// uint32 like_num = 2;
inline void CustomDungeonSocialMuipData::clear_like_num() {
  like_num_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSocialMuipData::like_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSocialMuipData.like_num)
  return like_num_;
}
inline void CustomDungeonSocialMuipData::set_like_num(::google::protobuf::uint32 value) {
  
  like_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSocialMuipData.like_num)
}

// uint32 store_num = 3;
inline void CustomDungeonSocialMuipData::clear_store_num() {
  store_num_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSocialMuipData::store_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSocialMuipData.store_num)
  return store_num_;
}
inline void CustomDungeonSocialMuipData::set_store_num(::google::protobuf::uint32 value) {
  
  store_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSocialMuipData.store_num)
}

// uint32 win_num = 4;
inline void CustomDungeonSocialMuipData::clear_win_num() {
  win_num_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSocialMuipData::win_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSocialMuipData.win_num)
  return win_num_;
}
inline void CustomDungeonSocialMuipData::set_win_num(::google::protobuf::uint32 value) {
  
  win_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSocialMuipData.win_num)
}

// -------------------------------------------------------------------

// CustomDungeonBriefMuipData

// uint64 dungeon_guid = 1;
inline void CustomDungeonBriefMuipData::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CustomDungeonBriefMuipData::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBriefMuipData.dungeon_guid)
  return dungeon_guid_;
}
inline void CustomDungeonBriefMuipData::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonBriefMuipData.dungeon_guid)
}

// uint32 dungeon_id = 2;
inline void CustomDungeonBriefMuipData::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonBriefMuipData::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBriefMuipData.dungeon_id)
  return dungeon_id_;
}
inline void CustomDungeonBriefMuipData::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonBriefMuipData.dungeon_id)
}

// string creator_nickname = 3;
inline void CustomDungeonBriefMuipData::clear_creator_nickname() {
  creator_nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CustomDungeonBriefMuipData::creator_nickname() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBriefMuipData.creator_nickname)
  return creator_nickname_.GetNoArena();
}
inline void CustomDungeonBriefMuipData::set_creator_nickname(const ::std::string& value) {
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CustomDungeonBriefMuipData.creator_nickname)
}
#if LANG_CXX11
inline void CustomDungeonBriefMuipData::set_creator_nickname(::std::string&& value) {
  
  creator_nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CustomDungeonBriefMuipData.creator_nickname)
}
#endif
inline void CustomDungeonBriefMuipData::set_creator_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CustomDungeonBriefMuipData.creator_nickname)
}
inline void CustomDungeonBriefMuipData::set_creator_nickname(const char* value, size_t size) {
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CustomDungeonBriefMuipData.creator_nickname)
}
inline ::std::string* CustomDungeonBriefMuipData::mutable_creator_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.CustomDungeonBriefMuipData.creator_nickname)
  return creator_nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomDungeonBriefMuipData::release_creator_nickname() {
  // @@protoc_insertion_point(field_release:proto.CustomDungeonBriefMuipData.creator_nickname)
  
  return creator_nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomDungeonBriefMuipData::set_allocated_creator_nickname(::std::string* creator_nickname) {
  if (creator_nickname != NULL) {
    
  } else {
    
  }
  creator_nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator_nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.CustomDungeonBriefMuipData.creator_nickname)
}

// repeated uint32 tag_list = 4;
inline int CustomDungeonBriefMuipData::tag_list_size() const {
  return tag_list_.size();
}
inline void CustomDungeonBriefMuipData::clear_tag_list() {
  tag_list_.Clear();
}
inline ::google::protobuf::uint32 CustomDungeonBriefMuipData::tag_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBriefMuipData.tag_list)
  return tag_list_.Get(index);
}
inline void CustomDungeonBriefMuipData::set_tag_list(int index, ::google::protobuf::uint32 value) {
  tag_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CustomDungeonBriefMuipData.tag_list)
}
inline void CustomDungeonBriefMuipData::add_tag_list(::google::protobuf::uint32 value) {
  tag_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CustomDungeonBriefMuipData.tag_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CustomDungeonBriefMuipData::tag_list() const {
  // @@protoc_insertion_point(field_list:proto.CustomDungeonBriefMuipData.tag_list)
  return tag_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CustomDungeonBriefMuipData::mutable_tag_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CustomDungeonBriefMuipData.tag_list)
  return &tag_list_;
}

// .proto.CustomDungeonSettingMuipData setting = 5;
inline bool CustomDungeonBriefMuipData::has_setting() const {
  return this != internal_default_instance() && setting_ != NULL;
}
inline void CustomDungeonBriefMuipData::clear_setting() {
  if (GetArenaNoVirtual() == NULL && setting_ != NULL) delete setting_;
  setting_ = NULL;
}
inline const ::proto::CustomDungeonSettingMuipData& CustomDungeonBriefMuipData::setting() const {
  const ::proto::CustomDungeonSettingMuipData* p = setting_;
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBriefMuipData.setting)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomDungeonSettingMuipData*>(
      &::proto::_CustomDungeonSettingMuipData_default_instance_);
}
inline ::proto::CustomDungeonSettingMuipData* CustomDungeonBriefMuipData::mutable_setting() {
  
  if (setting_ == NULL) {
    setting_ = new ::proto::CustomDungeonSettingMuipData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CustomDungeonBriefMuipData.setting)
  return setting_;
}
inline ::proto::CustomDungeonSettingMuipData* CustomDungeonBriefMuipData::release_setting() {
  // @@protoc_insertion_point(field_release:proto.CustomDungeonBriefMuipData.setting)
  
  ::proto::CustomDungeonSettingMuipData* temp = setting_;
  setting_ = NULL;
  return temp;
}
inline void CustomDungeonBriefMuipData::set_allocated_setting(::proto::CustomDungeonSettingMuipData* setting) {
  delete setting_;
  setting_ = setting;
  if (setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CustomDungeonBriefMuipData.setting)
}

// .proto.CustomDungeonAbstractMuipData abstract = 6;
inline bool CustomDungeonBriefMuipData::has_abstract() const {
  return this != internal_default_instance() && abstract_ != NULL;
}
inline void CustomDungeonBriefMuipData::clear_abstract() {
  if (GetArenaNoVirtual() == NULL && abstract_ != NULL) delete abstract_;
  abstract_ = NULL;
}
inline const ::proto::CustomDungeonAbstractMuipData& CustomDungeonBriefMuipData::abstract() const {
  const ::proto::CustomDungeonAbstractMuipData* p = abstract_;
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBriefMuipData.abstract)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomDungeonAbstractMuipData*>(
      &::proto::_CustomDungeonAbstractMuipData_default_instance_);
}
inline ::proto::CustomDungeonAbstractMuipData* CustomDungeonBriefMuipData::mutable_abstract() {
  
  if (abstract_ == NULL) {
    abstract_ = new ::proto::CustomDungeonAbstractMuipData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CustomDungeonBriefMuipData.abstract)
  return abstract_;
}
inline ::proto::CustomDungeonAbstractMuipData* CustomDungeonBriefMuipData::release_abstract() {
  // @@protoc_insertion_point(field_release:proto.CustomDungeonBriefMuipData.abstract)
  
  ::proto::CustomDungeonAbstractMuipData* temp = abstract_;
  abstract_ = NULL;
  return temp;
}
inline void CustomDungeonBriefMuipData::set_allocated_abstract(::proto::CustomDungeonAbstractMuipData* abstract) {
  delete abstract_;
  abstract_ = abstract;
  if (abstract) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CustomDungeonBriefMuipData.abstract)
}

// .proto.CustomDungeonSocialMuipData social = 7;
inline bool CustomDungeonBriefMuipData::has_social() const {
  return this != internal_default_instance() && social_ != NULL;
}
inline void CustomDungeonBriefMuipData::clear_social() {
  if (GetArenaNoVirtual() == NULL && social_ != NULL) delete social_;
  social_ = NULL;
}
inline const ::proto::CustomDungeonSocialMuipData& CustomDungeonBriefMuipData::social() const {
  const ::proto::CustomDungeonSocialMuipData* p = social_;
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBriefMuipData.social)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomDungeonSocialMuipData*>(
      &::proto::_CustomDungeonSocialMuipData_default_instance_);
}
inline ::proto::CustomDungeonSocialMuipData* CustomDungeonBriefMuipData::mutable_social() {
  
  if (social_ == NULL) {
    social_ = new ::proto::CustomDungeonSocialMuipData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CustomDungeonBriefMuipData.social)
  return social_;
}
inline ::proto::CustomDungeonSocialMuipData* CustomDungeonBriefMuipData::release_social() {
  // @@protoc_insertion_point(field_release:proto.CustomDungeonBriefMuipData.social)
  
  ::proto::CustomDungeonSocialMuipData* temp = social_;
  social_ = NULL;
  return temp;
}
inline void CustomDungeonBriefMuipData::set_allocated_social(::proto::CustomDungeonSocialMuipData* social) {
  delete social_;
  social_ = social;
  if (social) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CustomDungeonBriefMuipData.social)
}

// -------------------------------------------------------------------

// CustomDungeonBatchBriefMuipData

// repeated .proto.CustomDungeonBriefMuipData brief_list = 1;
inline int CustomDungeonBatchBriefMuipData::brief_list_size() const {
  return brief_list_.size();
}
inline void CustomDungeonBatchBriefMuipData::clear_brief_list() {
  brief_list_.Clear();
}
inline const ::proto::CustomDungeonBriefMuipData& CustomDungeonBatchBriefMuipData::brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonBatchBriefMuipData.brief_list)
  return brief_list_.Get(index);
}
inline ::proto::CustomDungeonBriefMuipData* CustomDungeonBatchBriefMuipData::mutable_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CustomDungeonBatchBriefMuipData.brief_list)
  return brief_list_.Mutable(index);
}
inline ::proto::CustomDungeonBriefMuipData* CustomDungeonBatchBriefMuipData::add_brief_list() {
  // @@protoc_insertion_point(field_add:proto.CustomDungeonBatchBriefMuipData.brief_list)
  return brief_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefMuipData >*
CustomDungeonBatchBriefMuipData::mutable_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CustomDungeonBatchBriefMuipData.brief_list)
  return &brief_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefMuipData >&
CustomDungeonBatchBriefMuipData::brief_list() const {
  // @@protoc_insertion_point(field_list:proto.CustomDungeonBatchBriefMuipData.brief_list)
  return brief_list_;
}

// -------------------------------------------------------------------

// HomeBlueprintBriefMuipData

// string share_code = 1;
inline void HomeBlueprintBriefMuipData::clear_share_code() {
  share_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeBlueprintBriefMuipData::share_code() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBriefMuipData.share_code)
  return share_code_.GetNoArena();
}
inline void HomeBlueprintBriefMuipData::set_share_code(const ::std::string& value) {
  
  share_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBriefMuipData.share_code)
}
#if LANG_CXX11
inline void HomeBlueprintBriefMuipData::set_share_code(::std::string&& value) {
  
  share_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeBlueprintBriefMuipData.share_code)
}
#endif
inline void HomeBlueprintBriefMuipData::set_share_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  share_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeBlueprintBriefMuipData.share_code)
}
inline void HomeBlueprintBriefMuipData::set_share_code(const char* value, size_t size) {
  
  share_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeBlueprintBriefMuipData.share_code)
}
inline ::std::string* HomeBlueprintBriefMuipData::mutable_share_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeBlueprintBriefMuipData.share_code)
  return share_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeBlueprintBriefMuipData::release_share_code() {
  // @@protoc_insertion_point(field_release:proto.HomeBlueprintBriefMuipData.share_code)
  
  return share_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeBlueprintBriefMuipData::set_allocated_share_code(::std::string* share_code) {
  if (share_code != NULL) {
    
  } else {
    
  }
  share_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), share_code);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlueprintBriefMuipData.share_code)
}

// uint32 owner_uid = 2;
inline void HomeBlueprintBriefMuipData::clear_owner_uid() {
  owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlueprintBriefMuipData::owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBriefMuipData.owner_uid)
  return owner_uid_;
}
inline void HomeBlueprintBriefMuipData::set_owner_uid(::google::protobuf::uint32 value) {
  
  owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBriefMuipData.owner_uid)
}

// uint32 module_id = 3;
inline void HomeBlueprintBriefMuipData::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlueprintBriefMuipData::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBriefMuipData.module_id)
  return module_id_;
}
inline void HomeBlueprintBriefMuipData::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBriefMuipData.module_id)
}

// uint32 scene_id = 4;
inline void HomeBlueprintBriefMuipData::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlueprintBriefMuipData::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBriefMuipData.scene_id)
  return scene_id_;
}
inline void HomeBlueprintBriefMuipData::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBriefMuipData.scene_id)
}

// uint32 block_id = 5;
inline void HomeBlueprintBriefMuipData::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlueprintBriefMuipData::block_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBriefMuipData.block_id)
  return block_id_;
}
inline void HomeBlueprintBriefMuipData::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBriefMuipData.block_id)
}

// bool is_allow_copy = 6;
inline void HomeBlueprintBriefMuipData::clear_is_allow_copy() {
  is_allow_copy_ = false;
}
inline bool HomeBlueprintBriefMuipData::is_allow_copy() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBriefMuipData.is_allow_copy)
  return is_allow_copy_;
}
inline void HomeBlueprintBriefMuipData::set_is_allow_copy(bool value) {
  
  is_allow_copy_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBriefMuipData.is_allow_copy)
}

// uint32 create_time = 7;
inline void HomeBlueprintBriefMuipData::clear_create_time() {
  create_time_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlueprintBriefMuipData::create_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBriefMuipData.create_time)
  return create_time_;
}
inline void HomeBlueprintBriefMuipData::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBriefMuipData.create_time)
}

// -------------------------------------------------------------------

// HomeBlueprintBatchBriefMuipData

// repeated .proto.HomeBlueprintBriefMuipData brief_list = 1;
inline int HomeBlueprintBatchBriefMuipData::brief_list_size() const {
  return brief_list_.size();
}
inline void HomeBlueprintBatchBriefMuipData::clear_brief_list() {
  brief_list_.Clear();
}
inline const ::proto::HomeBlueprintBriefMuipData& HomeBlueprintBatchBriefMuipData::brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBatchBriefMuipData.brief_list)
  return brief_list_.Get(index);
}
inline ::proto::HomeBlueprintBriefMuipData* HomeBlueprintBatchBriefMuipData::mutable_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlueprintBatchBriefMuipData.brief_list)
  return brief_list_.Mutable(index);
}
inline ::proto::HomeBlueprintBriefMuipData* HomeBlueprintBatchBriefMuipData::add_brief_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlueprintBatchBriefMuipData.brief_list)
  return brief_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeBlueprintBriefMuipData >*
HomeBlueprintBatchBriefMuipData::mutable_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlueprintBatchBriefMuipData.brief_list)
  return &brief_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlueprintBriefMuipData >&
HomeBlueprintBatchBriefMuipData::brief_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlueprintBatchBriefMuipData.brief_list)
  return brief_list_;
}

// repeated string not_exist_share_code_list = 2;
inline int HomeBlueprintBatchBriefMuipData::not_exist_share_code_list_size() const {
  return not_exist_share_code_list_.size();
}
inline void HomeBlueprintBatchBriefMuipData::clear_not_exist_share_code_list() {
  not_exist_share_code_list_.Clear();
}
inline const ::std::string& HomeBlueprintBatchBriefMuipData::not_exist_share_code_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
  return not_exist_share_code_list_.Get(index);
}
inline ::std::string* HomeBlueprintBatchBriefMuipData::mutable_not_exist_share_code_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
  return not_exist_share_code_list_.Mutable(index);
}
inline void HomeBlueprintBatchBriefMuipData::set_not_exist_share_code_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
  not_exist_share_code_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void HomeBlueprintBatchBriefMuipData::set_not_exist_share_code_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
  not_exist_share_code_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void HomeBlueprintBatchBriefMuipData::set_not_exist_share_code_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  not_exist_share_code_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
}
inline void HomeBlueprintBatchBriefMuipData::set_not_exist_share_code_list(int index, const char* value, size_t size) {
  not_exist_share_code_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
}
inline ::std::string* HomeBlueprintBatchBriefMuipData::add_not_exist_share_code_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
  return not_exist_share_code_list_.Add();
}
inline void HomeBlueprintBatchBriefMuipData::add_not_exist_share_code_list(const ::std::string& value) {
  not_exist_share_code_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
}
#if LANG_CXX11
inline void HomeBlueprintBatchBriefMuipData::add_not_exist_share_code_list(::std::string&& value) {
  not_exist_share_code_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
}
#endif
inline void HomeBlueprintBatchBriefMuipData::add_not_exist_share_code_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  not_exist_share_code_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
}
inline void HomeBlueprintBatchBriefMuipData::add_not_exist_share_code_list(const char* value, size_t size) {
  not_exist_share_code_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HomeBlueprintBatchBriefMuipData::not_exist_share_code_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
  return not_exist_share_code_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HomeBlueprintBatchBriefMuipData::mutable_not_exist_share_code_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlueprintBatchBriefMuipData.not_exist_share_code_list)
  return &not_exist_share_code_list_;
}

// -------------------------------------------------------------------

// ContentAuditInfo

// bool is_open = 1;
inline void ContentAuditInfo::clear_is_open() {
  is_open_ = false;
}
inline bool ContentAuditInfo::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditInfo.is_open)
  return is_open_;
}
inline void ContentAuditInfo::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ContentAuditInfo.is_open)
}

// string content = 2;
inline void ContentAuditInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContentAuditInfo::content() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditInfo.content)
  return content_.GetNoArena();
}
inline void ContentAuditInfo::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ContentAuditInfo.content)
}
#if LANG_CXX11
inline void ContentAuditInfo::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ContentAuditInfo.content)
}
#endif
inline void ContentAuditInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ContentAuditInfo.content)
}
inline void ContentAuditInfo::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ContentAuditInfo.content)
}
inline ::std::string* ContentAuditInfo::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.ContentAuditInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentAuditInfo::release_content() {
  // @@protoc_insertion_point(field_release:proto.ContentAuditInfo.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentAuditInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.ContentAuditInfo.content)
}

// uint32 submit_count = 3;
inline void ContentAuditInfo::clear_submit_count() {
  submit_count_ = 0u;
}
inline ::google::protobuf::uint32 ContentAuditInfo::submit_count() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditInfo.submit_count)
  return submit_count_;
}
inline void ContentAuditInfo::set_submit_count(::google::protobuf::uint32 value) {
  
  submit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.ContentAuditInfo.submit_count)
}

// .proto.AuditState audit_state = 4;
inline void ContentAuditInfo::clear_audit_state() {
  audit_state_ = 0;
}
inline ::proto::AuditState ContentAuditInfo::audit_state() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditInfo.audit_state)
  return static_cast< ::proto::AuditState >(audit_state_);
}
inline void ContentAuditInfo::set_audit_state(::proto::AuditState value) {
  
  audit_state_ = value;
  // @@protoc_insertion_point(field_set:proto.ContentAuditInfo.audit_state)
}

// uint32 submit_limit = 5;
inline void ContentAuditInfo::clear_submit_limit() {
  submit_limit_ = 0u;
}
inline ::google::protobuf::uint32 ContentAuditInfo::submit_limit() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditInfo.submit_limit)
  return submit_limit_;
}
inline void ContentAuditInfo::set_submit_limit(::google::protobuf::uint32 value) {
  
  submit_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.ContentAuditInfo.submit_limit)
}

// -------------------------------------------------------------------

// ContentAuditData

// string type = 1;
inline void ContentAuditData::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContentAuditData::type() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditData.type)
  return type_.GetNoArena();
}
inline void ContentAuditData::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ContentAuditData.type)
}
#if LANG_CXX11
inline void ContentAuditData::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ContentAuditData.type)
}
#endif
inline void ContentAuditData::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ContentAuditData.type)
}
inline void ContentAuditData::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ContentAuditData.type)
}
inline ::std::string* ContentAuditData::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.ContentAuditData.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentAuditData::release_type() {
  // @@protoc_insertion_point(field_release:proto.ContentAuditData.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentAuditData::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proto.ContentAuditData.type)
}

// string content = 2;
inline void ContentAuditData::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContentAuditData::content() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditData.content)
  return content_.GetNoArena();
}
inline void ContentAuditData::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ContentAuditData.content)
}
#if LANG_CXX11
inline void ContentAuditData::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ContentAuditData.content)
}
#endif
inline void ContentAuditData::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ContentAuditData.content)
}
inline void ContentAuditData::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ContentAuditData.content)
}
inline ::std::string* ContentAuditData::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.ContentAuditData.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentAuditData::release_content() {
  // @@protoc_insertion_point(field_release:proto.ContentAuditData.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentAuditData::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.ContentAuditData.content)
}

// uint32 auto_pass_time = 3;
inline void ContentAuditData::clear_auto_pass_time() {
  auto_pass_time_ = 0u;
}
inline ::google::protobuf::uint32 ContentAuditData::auto_pass_time() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditData.auto_pass_time)
  return auto_pass_time_;
}
inline void ContentAuditData::set_auto_pass_time(::google::protobuf::uint32 value) {
  
  auto_pass_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ContentAuditData.auto_pass_time)
}

// -------------------------------------------------------------------

// ContentAuditField

// repeated .proto.ContentAuditData segment_list = 1;
inline int ContentAuditField::segment_list_size() const {
  return segment_list_.size();
}
inline void ContentAuditField::clear_segment_list() {
  segment_list_.Clear();
}
inline const ::proto::ContentAuditData& ContentAuditField::segment_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditField.segment_list)
  return segment_list_.Get(index);
}
inline ::proto::ContentAuditData* ContentAuditField::mutable_segment_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ContentAuditField.segment_list)
  return segment_list_.Mutable(index);
}
inline ::proto::ContentAuditData* ContentAuditField::add_segment_list() {
  // @@protoc_insertion_point(field_add:proto.ContentAuditField.segment_list)
  return segment_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditData >*
ContentAuditField::mutable_segment_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ContentAuditField.segment_list)
  return &segment_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditData >&
ContentAuditField::segment_list() const {
  // @@protoc_insertion_point(field_list:proto.ContentAuditField.segment_list)
  return segment_list_;
}

// string name = 2;
inline void ContentAuditField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContentAuditField::name() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditField.name)
  return name_.GetNoArena();
}
inline void ContentAuditField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ContentAuditField.name)
}
#if LANG_CXX11
inline void ContentAuditField::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ContentAuditField.name)
}
#endif
inline void ContentAuditField::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ContentAuditField.name)
}
inline void ContentAuditField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ContentAuditField.name)
}
inline ::std::string* ContentAuditField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ContentAuditField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentAuditField::release_name() {
  // @@protoc_insertion_point(field_release:proto.ContentAuditField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentAuditField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.ContentAuditField.name)
}

// -------------------------------------------------------------------

// ContentAuditAuxiliaryField

// string name = 1;
inline void ContentAuditAuxiliaryField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContentAuditAuxiliaryField::name() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditAuxiliaryField.name)
  return name_.GetNoArena();
}
inline void ContentAuditAuxiliaryField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ContentAuditAuxiliaryField.name)
}
#if LANG_CXX11
inline void ContentAuditAuxiliaryField::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ContentAuditAuxiliaryField.name)
}
#endif
inline void ContentAuditAuxiliaryField::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ContentAuditAuxiliaryField.name)
}
inline void ContentAuditAuxiliaryField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ContentAuditAuxiliaryField.name)
}
inline ::std::string* ContentAuditAuxiliaryField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ContentAuditAuxiliaryField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentAuditAuxiliaryField::release_name() {
  // @@protoc_insertion_point(field_release:proto.ContentAuditAuxiliaryField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentAuditAuxiliaryField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.ContentAuditAuxiliaryField.name)
}

// string value = 2;
inline void ContentAuditAuxiliaryField::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContentAuditAuxiliaryField::value() const {
  // @@protoc_insertion_point(field_get:proto.ContentAuditAuxiliaryField.value)
  return value_.GetNoArena();
}
inline void ContentAuditAuxiliaryField::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ContentAuditAuxiliaryField.value)
}
#if LANG_CXX11
inline void ContentAuditAuxiliaryField::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ContentAuditAuxiliaryField.value)
}
#endif
inline void ContentAuditAuxiliaryField::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ContentAuditAuxiliaryField.value)
}
inline void ContentAuditAuxiliaryField::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ContentAuditAuxiliaryField.value)
}
inline ::std::string* ContentAuditAuxiliaryField::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto.ContentAuditAuxiliaryField.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentAuditAuxiliaryField::release_value() {
  // @@protoc_insertion_point(field_release:proto.ContentAuditAuxiliaryField.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentAuditAuxiliaryField::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.ContentAuditAuxiliaryField.value)
}

// -------------------------------------------------------------------

// NicknameSignatureAuditData

// string aid = 1;
inline void NicknameSignatureAuditData::clear_aid() {
  aid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NicknameSignatureAuditData::aid() const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.aid)
  return aid_.GetNoArena();
}
inline void NicknameSignatureAuditData::set_aid(const ::std::string& value) {
  
  aid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.NicknameSignatureAuditData.aid)
}
#if LANG_CXX11
inline void NicknameSignatureAuditData::set_aid(::std::string&& value) {
  
  aid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.NicknameSignatureAuditData.aid)
}
#endif
inline void NicknameSignatureAuditData::set_aid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  aid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.NicknameSignatureAuditData.aid)
}
inline void NicknameSignatureAuditData::set_aid(const char* value, size_t size) {
  
  aid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.NicknameSignatureAuditData.aid)
}
inline ::std::string* NicknameSignatureAuditData::mutable_aid() {
  
  // @@protoc_insertion_point(field_mutable:proto.NicknameSignatureAuditData.aid)
  return aid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NicknameSignatureAuditData::release_aid() {
  // @@protoc_insertion_point(field_release:proto.NicknameSignatureAuditData.aid)
  
  return aid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NicknameSignatureAuditData::set_allocated_aid(::std::string* aid) {
  if (aid != NULL) {
    
  } else {
    
  }
  aid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aid);
  // @@protoc_insertion_point(field_set_allocated:proto.NicknameSignatureAuditData.aid)
}

// string entity_id = 2;
inline void NicknameSignatureAuditData::clear_entity_id() {
  entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NicknameSignatureAuditData::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.entity_id)
  return entity_id_.GetNoArena();
}
inline void NicknameSignatureAuditData::set_entity_id(const ::std::string& value) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.NicknameSignatureAuditData.entity_id)
}
#if LANG_CXX11
inline void NicknameSignatureAuditData::set_entity_id(::std::string&& value) {
  
  entity_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.NicknameSignatureAuditData.entity_id)
}
#endif
inline void NicknameSignatureAuditData::set_entity_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.NicknameSignatureAuditData.entity_id)
}
inline void NicknameSignatureAuditData::set_entity_id(const char* value, size_t size) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.NicknameSignatureAuditData.entity_id)
}
inline ::std::string* NicknameSignatureAuditData::mutable_entity_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.NicknameSignatureAuditData.entity_id)
  return entity_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NicknameSignatureAuditData::release_entity_id() {
  // @@protoc_insertion_point(field_release:proto.NicknameSignatureAuditData.entity_id)
  
  return entity_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NicknameSignatureAuditData::set_allocated_entity_id(::std::string* entity_id) {
  if (entity_id != NULL) {
    
  } else {
    
  }
  entity_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_id);
  // @@protoc_insertion_point(field_set_allocated:proto.NicknameSignatureAuditData.entity_id)
}

// string lang = 3;
inline void NicknameSignatureAuditData::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NicknameSignatureAuditData::lang() const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.lang)
  return lang_.GetNoArena();
}
inline void NicknameSignatureAuditData::set_lang(const ::std::string& value) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.NicknameSignatureAuditData.lang)
}
#if LANG_CXX11
inline void NicknameSignatureAuditData::set_lang(::std::string&& value) {
  
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.NicknameSignatureAuditData.lang)
}
#endif
inline void NicknameSignatureAuditData::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.NicknameSignatureAuditData.lang)
}
inline void NicknameSignatureAuditData::set_lang(const char* value, size_t size) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.NicknameSignatureAuditData.lang)
}
inline ::std::string* NicknameSignatureAuditData::mutable_lang() {
  
  // @@protoc_insertion_point(field_mutable:proto.NicknameSignatureAuditData.lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NicknameSignatureAuditData::release_lang() {
  // @@protoc_insertion_point(field_release:proto.NicknameSignatureAuditData.lang)
  
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NicknameSignatureAuditData::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    
  } else {
    
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:proto.NicknameSignatureAuditData.lang)
}

// string queue_key = 4;
inline void NicknameSignatureAuditData::clear_queue_key() {
  queue_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NicknameSignatureAuditData::queue_key() const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.queue_key)
  return queue_key_.GetNoArena();
}
inline void NicknameSignatureAuditData::set_queue_key(const ::std::string& value) {
  
  queue_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.NicknameSignatureAuditData.queue_key)
}
#if LANG_CXX11
inline void NicknameSignatureAuditData::set_queue_key(::std::string&& value) {
  
  queue_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.NicknameSignatureAuditData.queue_key)
}
#endif
inline void NicknameSignatureAuditData::set_queue_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  queue_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.NicknameSignatureAuditData.queue_key)
}
inline void NicknameSignatureAuditData::set_queue_key(const char* value, size_t size) {
  
  queue_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.NicknameSignatureAuditData.queue_key)
}
inline ::std::string* NicknameSignatureAuditData::mutable_queue_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.NicknameSignatureAuditData.queue_key)
  return queue_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NicknameSignatureAuditData::release_queue_key() {
  // @@protoc_insertion_point(field_release:proto.NicknameSignatureAuditData.queue_key)
  
  return queue_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NicknameSignatureAuditData::set_allocated_queue_key(::std::string* queue_key) {
  if (queue_key != NULL) {
    
  } else {
    
  }
  queue_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), queue_key);
  // @@protoc_insertion_point(field_set_allocated:proto.NicknameSignatureAuditData.queue_key)
}

// string region = 5;
inline void NicknameSignatureAuditData::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NicknameSignatureAuditData::region() const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.region)
  return region_.GetNoArena();
}
inline void NicknameSignatureAuditData::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.NicknameSignatureAuditData.region)
}
#if LANG_CXX11
inline void NicknameSignatureAuditData::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.NicknameSignatureAuditData.region)
}
#endif
inline void NicknameSignatureAuditData::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.NicknameSignatureAuditData.region)
}
inline void NicknameSignatureAuditData::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.NicknameSignatureAuditData.region)
}
inline ::std::string* NicknameSignatureAuditData::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto.NicknameSignatureAuditData.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NicknameSignatureAuditData::release_region() {
  // @@protoc_insertion_point(field_release:proto.NicknameSignatureAuditData.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NicknameSignatureAuditData::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto.NicknameSignatureAuditData.region)
}

// uint32 uid = 6;
inline void NicknameSignatureAuditData::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 NicknameSignatureAuditData::uid() const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.uid)
  return uid_;
}
inline void NicknameSignatureAuditData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.NicknameSignatureAuditData.uid)
}

// repeated .proto.ContentAuditField audit_field_list = 7;
inline int NicknameSignatureAuditData::audit_field_list_size() const {
  return audit_field_list_.size();
}
inline void NicknameSignatureAuditData::clear_audit_field_list() {
  audit_field_list_.Clear();
}
inline const ::proto::ContentAuditField& NicknameSignatureAuditData::audit_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.audit_field_list)
  return audit_field_list_.Get(index);
}
inline ::proto::ContentAuditField* NicknameSignatureAuditData::mutable_audit_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.NicknameSignatureAuditData.audit_field_list)
  return audit_field_list_.Mutable(index);
}
inline ::proto::ContentAuditField* NicknameSignatureAuditData::add_audit_field_list() {
  // @@protoc_insertion_point(field_add:proto.NicknameSignatureAuditData.audit_field_list)
  return audit_field_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditField >*
NicknameSignatureAuditData::mutable_audit_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.NicknameSignatureAuditData.audit_field_list)
  return &audit_field_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditField >&
NicknameSignatureAuditData::audit_field_list() const {
  // @@protoc_insertion_point(field_list:proto.NicknameSignatureAuditData.audit_field_list)
  return audit_field_list_;
}

// repeated .proto.ContentAuditAuxiliaryField aux_field_list = 8;
inline int NicknameSignatureAuditData::aux_field_list_size() const {
  return aux_field_list_.size();
}
inline void NicknameSignatureAuditData::clear_aux_field_list() {
  aux_field_list_.Clear();
}
inline const ::proto::ContentAuditAuxiliaryField& NicknameSignatureAuditData::aux_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.NicknameSignatureAuditData.aux_field_list)
  return aux_field_list_.Get(index);
}
inline ::proto::ContentAuditAuxiliaryField* NicknameSignatureAuditData::mutable_aux_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.NicknameSignatureAuditData.aux_field_list)
  return aux_field_list_.Mutable(index);
}
inline ::proto::ContentAuditAuxiliaryField* NicknameSignatureAuditData::add_aux_field_list() {
  // @@protoc_insertion_point(field_add:proto.NicknameSignatureAuditData.aux_field_list)
  return aux_field_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >*
NicknameSignatureAuditData::mutable_aux_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.NicknameSignatureAuditData.aux_field_list)
  return &aux_field_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >&
NicknameSignatureAuditData::aux_field_list() const {
  // @@protoc_insertion_point(field_list:proto.NicknameSignatureAuditData.aux_field_list)
  return aux_field_list_;
}

// -------------------------------------------------------------------

// AvatarRenameAuditContent

// string type = 1;
inline void AvatarRenameAuditContent::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditContent::type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditContent.type)
  return type_.GetNoArena();
}
inline void AvatarRenameAuditContent::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditContent.type)
}
#if LANG_CXX11
inline void AvatarRenameAuditContent::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditContent.type)
}
#endif
inline void AvatarRenameAuditContent::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditContent.type)
}
inline void AvatarRenameAuditContent::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditContent.type)
}
inline ::std::string* AvatarRenameAuditContent::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditContent.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditContent::release_type() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditContent.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditContent::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditContent.type)
}

// string content = 2;
inline void AvatarRenameAuditContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditContent::content() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditContent.content)
  return content_.GetNoArena();
}
inline void AvatarRenameAuditContent::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditContent.content)
}
#if LANG_CXX11
inline void AvatarRenameAuditContent::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditContent.content)
}
#endif
inline void AvatarRenameAuditContent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditContent.content)
}
inline void AvatarRenameAuditContent::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditContent.content)
}
inline ::std::string* AvatarRenameAuditContent::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditContent.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditContent::release_content() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditContent.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditContent.content)
}

// uint32 auto_fail_time = 3;
inline void AvatarRenameAuditContent::clear_auto_fail_time() {
  auto_fail_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarRenameAuditContent::auto_fail_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditContent.auto_fail_time)
  return auto_fail_time_;
}
inline void AvatarRenameAuditContent::set_auto_fail_time(::google::protobuf::uint32 value) {
  
  auto_fail_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditContent.auto_fail_time)
}

// -------------------------------------------------------------------

// AvatarRenameContentAuditField

// repeated .proto.AvatarRenameAuditContent segment_list = 1;
inline int AvatarRenameContentAuditField::segment_list_size() const {
  return segment_list_.size();
}
inline void AvatarRenameContentAuditField::clear_segment_list() {
  segment_list_.Clear();
}
inline const ::proto::AvatarRenameAuditContent& AvatarRenameContentAuditField::segment_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameContentAuditField.segment_list)
  return segment_list_.Get(index);
}
inline ::proto::AvatarRenameAuditContent* AvatarRenameContentAuditField::mutable_segment_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameContentAuditField.segment_list)
  return segment_list_.Mutable(index);
}
inline ::proto::AvatarRenameAuditContent* AvatarRenameContentAuditField::add_segment_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarRenameContentAuditField.segment_list)
  return segment_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameAuditContent >*
AvatarRenameContentAuditField::mutable_segment_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarRenameContentAuditField.segment_list)
  return &segment_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameAuditContent >&
AvatarRenameContentAuditField::segment_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarRenameContentAuditField.segment_list)
  return segment_list_;
}

// string name = 2;
inline void AvatarRenameContentAuditField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameContentAuditField::name() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameContentAuditField.name)
  return name_.GetNoArena();
}
inline void AvatarRenameContentAuditField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameContentAuditField.name)
}
#if LANG_CXX11
inline void AvatarRenameContentAuditField::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameContentAuditField.name)
}
#endif
inline void AvatarRenameContentAuditField::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameContentAuditField.name)
}
inline void AvatarRenameContentAuditField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameContentAuditField.name)
}
inline ::std::string* AvatarRenameContentAuditField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameContentAuditField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameContentAuditField::release_name() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameContentAuditField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameContentAuditField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameContentAuditField.name)
}

// -------------------------------------------------------------------

// AvatarRenameAuditData

// string aid = 1;
inline void AvatarRenameAuditData::clear_aid() {
  aid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditData::aid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.aid)
  return aid_.GetNoArena();
}
inline void AvatarRenameAuditData::set_aid(const ::std::string& value) {
  
  aid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditData.aid)
}
#if LANG_CXX11
inline void AvatarRenameAuditData::set_aid(::std::string&& value) {
  
  aid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditData.aid)
}
#endif
inline void AvatarRenameAuditData::set_aid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  aid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditData.aid)
}
inline void AvatarRenameAuditData::set_aid(const char* value, size_t size) {
  
  aid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditData.aid)
}
inline ::std::string* AvatarRenameAuditData::mutable_aid() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditData.aid)
  return aid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditData::release_aid() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditData.aid)
  
  return aid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditData::set_allocated_aid(::std::string* aid) {
  if (aid != NULL) {
    
  } else {
    
  }
  aid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aid);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditData.aid)
}

// string entity_id = 2;
inline void AvatarRenameAuditData::clear_entity_id() {
  entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditData::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.entity_id)
  return entity_id_.GetNoArena();
}
inline void AvatarRenameAuditData::set_entity_id(const ::std::string& value) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditData.entity_id)
}
#if LANG_CXX11
inline void AvatarRenameAuditData::set_entity_id(::std::string&& value) {
  
  entity_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditData.entity_id)
}
#endif
inline void AvatarRenameAuditData::set_entity_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditData.entity_id)
}
inline void AvatarRenameAuditData::set_entity_id(const char* value, size_t size) {
  
  entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditData.entity_id)
}
inline ::std::string* AvatarRenameAuditData::mutable_entity_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditData.entity_id)
  return entity_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditData::release_entity_id() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditData.entity_id)
  
  return entity_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditData::set_allocated_entity_id(::std::string* entity_id) {
  if (entity_id != NULL) {
    
  } else {
    
  }
  entity_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_id);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditData.entity_id)
}

// string lang = 3;
inline void AvatarRenameAuditData::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditData::lang() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.lang)
  return lang_.GetNoArena();
}
inline void AvatarRenameAuditData::set_lang(const ::std::string& value) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditData.lang)
}
#if LANG_CXX11
inline void AvatarRenameAuditData::set_lang(::std::string&& value) {
  
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditData.lang)
}
#endif
inline void AvatarRenameAuditData::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditData.lang)
}
inline void AvatarRenameAuditData::set_lang(const char* value, size_t size) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditData.lang)
}
inline ::std::string* AvatarRenameAuditData::mutable_lang() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditData.lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditData::release_lang() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditData.lang)
  
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditData::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    
  } else {
    
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditData.lang)
}

// string queue_key = 4;
inline void AvatarRenameAuditData::clear_queue_key() {
  queue_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditData::queue_key() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.queue_key)
  return queue_key_.GetNoArena();
}
inline void AvatarRenameAuditData::set_queue_key(const ::std::string& value) {
  
  queue_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditData.queue_key)
}
#if LANG_CXX11
inline void AvatarRenameAuditData::set_queue_key(::std::string&& value) {
  
  queue_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditData.queue_key)
}
#endif
inline void AvatarRenameAuditData::set_queue_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  queue_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditData.queue_key)
}
inline void AvatarRenameAuditData::set_queue_key(const char* value, size_t size) {
  
  queue_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditData.queue_key)
}
inline ::std::string* AvatarRenameAuditData::mutable_queue_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditData.queue_key)
  return queue_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditData::release_queue_key() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditData.queue_key)
  
  return queue_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditData::set_allocated_queue_key(::std::string* queue_key) {
  if (queue_key != NULL) {
    
  } else {
    
  }
  queue_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), queue_key);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditData.queue_key)
}

// string region = 5;
inline void AvatarRenameAuditData::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditData::region() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.region)
  return region_.GetNoArena();
}
inline void AvatarRenameAuditData::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditData.region)
}
#if LANG_CXX11
inline void AvatarRenameAuditData::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditData.region)
}
#endif
inline void AvatarRenameAuditData::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditData.region)
}
inline void AvatarRenameAuditData::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditData.region)
}
inline ::std::string* AvatarRenameAuditData::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditData.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditData::release_region() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditData.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditData::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditData.region)
}

// uint32 uid = 6;
inline void AvatarRenameAuditData::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 AvatarRenameAuditData::uid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.uid)
  return uid_;
}
inline void AvatarRenameAuditData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditData.uid)
}

// repeated .proto.AvatarRenameContentAuditField audit_field_list = 7;
inline int AvatarRenameAuditData::audit_field_list_size() const {
  return audit_field_list_.size();
}
inline void AvatarRenameAuditData::clear_audit_field_list() {
  audit_field_list_.Clear();
}
inline const ::proto::AvatarRenameContentAuditField& AvatarRenameAuditData::audit_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.audit_field_list)
  return audit_field_list_.Get(index);
}
inline ::proto::AvatarRenameContentAuditField* AvatarRenameAuditData::mutable_audit_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditData.audit_field_list)
  return audit_field_list_.Mutable(index);
}
inline ::proto::AvatarRenameContentAuditField* AvatarRenameAuditData::add_audit_field_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarRenameAuditData.audit_field_list)
  return audit_field_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameContentAuditField >*
AvatarRenameAuditData::mutable_audit_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarRenameAuditData.audit_field_list)
  return &audit_field_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AvatarRenameContentAuditField >&
AvatarRenameAuditData::audit_field_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarRenameAuditData.audit_field_list)
  return audit_field_list_;
}

// repeated .proto.ContentAuditAuxiliaryField aux_field_list = 8;
inline int AvatarRenameAuditData::aux_field_list_size() const {
  return aux_field_list_.size();
}
inline void AvatarRenameAuditData::clear_aux_field_list() {
  aux_field_list_.Clear();
}
inline const ::proto::ContentAuditAuxiliaryField& AvatarRenameAuditData::aux_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditData.aux_field_list)
  return aux_field_list_.Get(index);
}
inline ::proto::ContentAuditAuxiliaryField* AvatarRenameAuditData::mutable_aux_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditData.aux_field_list)
  return aux_field_list_.Mutable(index);
}
inline ::proto::ContentAuditAuxiliaryField* AvatarRenameAuditData::add_aux_field_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarRenameAuditData.aux_field_list)
  return aux_field_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >*
AvatarRenameAuditData::mutable_aux_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarRenameAuditData.aux_field_list)
  return &aux_field_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ContentAuditAuxiliaryField >&
AvatarRenameAuditData::aux_field_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarRenameAuditData.aux_field_list)
  return aux_field_list_;
}

// -------------------------------------------------------------------

// ActivityDungeonAvatar

// uint32 avatar_id = 1;
inline void ActivityDungeonAvatar::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 ActivityDungeonAvatar::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ActivityDungeonAvatar.avatar_id)
  return avatar_id_;
}
inline void ActivityDungeonAvatar::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ActivityDungeonAvatar.avatar_id)
}

// bool is_trial = 2;
inline void ActivityDungeonAvatar::clear_is_trial() {
  is_trial_ = false;
}
inline bool ActivityDungeonAvatar::is_trial() const {
  // @@protoc_insertion_point(field_get:proto.ActivityDungeonAvatar.is_trial)
  return is_trial_;
}
inline void ActivityDungeonAvatar::set_is_trial(bool value) {
  
  is_trial_ = value;
  // @@protoc_insertion_point(field_set:proto.ActivityDungeonAvatar.is_trial)
}

// uint32 costume_id = 3;
inline void ActivityDungeonAvatar::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 ActivityDungeonAvatar::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.ActivityDungeonAvatar.costume_id)
  return costume_id_;
}
inline void ActivityDungeonAvatar::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ActivityDungeonAvatar.costume_id)
}

// -------------------------------------------------------------------

// GCGChallengeData

// uint32 challenge_id = 1;
inline void GCGChallengeData::clear_challenge_id() {
  challenge_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGChallengeData::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGChallengeData.challenge_id)
  return challenge_id_;
}
inline void GCGChallengeData::set_challenge_id(::google::protobuf::uint32 value) {
  
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGChallengeData.challenge_id)
}

// uint32 challenge_type = 2;
inline void GCGChallengeData::clear_challenge_type() {
  challenge_type_ = 0u;
}
inline ::google::protobuf::uint32 GCGChallengeData::challenge_type() const {
  // @@protoc_insertion_point(field_get:proto.GCGChallengeData.challenge_type)
  return challenge_type_;
}
inline void GCGChallengeData::set_challenge_type(::google::protobuf::uint32 value) {
  
  challenge_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGChallengeData.challenge_type)
}

// repeated uint32 param_list = 3;
inline int GCGChallengeData::param_list_size() const {
  return param_list_.size();
}
inline void GCGChallengeData::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::uint32 GCGChallengeData::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGChallengeData.param_list)
  return param_list_.Get(index);
}
inline void GCGChallengeData::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGChallengeData.param_list)
}
inline void GCGChallengeData::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGChallengeData.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGChallengeData::param_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGChallengeData.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGChallengeData::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGChallengeData.param_list)
  return &param_list_;
}

// uint32 progress = 4;
inline void GCGChallengeData::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 GCGChallengeData::progress() const {
  // @@protoc_insertion_point(field_get:proto.GCGChallengeData.progress)
  return progress_;
}
inline void GCGChallengeData::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGChallengeData.progress)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GCGDuelExtra

// repeated uint32 card_id_list = 1;
inline int GCGDuelExtra::card_id_list_size() const {
  return card_id_list_.size();
}
inline void GCGDuelExtra::clear_card_id_list() {
  card_id_list_.Clear();
}
inline ::google::protobuf::uint32 GCGDuelExtra::card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.card_id_list)
  return card_id_list_.Get(index);
}
inline void GCGDuelExtra::set_card_id_list(int index, ::google::protobuf::uint32 value) {
  card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.card_id_list)
}
inline void GCGDuelExtra::add_card_id_list(::google::protobuf::uint32 value) {
  card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGDuelExtra.card_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGDuelExtra::card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGDuelExtra.card_id_list)
  return card_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGDuelExtra::mutable_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGDuelExtra.card_id_list)
  return &card_id_list_;
}

// uint32 field_id = 2;
inline void GCGDuelExtra::clear_field_id() {
  field_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGDuelExtra::field_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.field_id)
  return field_id_;
}
inline void GCGDuelExtra::set_field_id(::google::protobuf::uint32 value) {
  
  field_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.field_id)
}

// uint32 card_back_id = 3;
inline void GCGDuelExtra::clear_card_back_id() {
  card_back_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGDuelExtra::card_back_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.card_back_id)
  return card_back_id_;
}
inline void GCGDuelExtra::set_card_back_id(::google::protobuf::uint32 value) {
  
  card_back_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.card_back_id)
}

// map<uint32, uint32> card_face_map = 4;
inline int GCGDuelExtra::card_face_map_size() const {
  return card_face_map_.size();
}
inline void GCGDuelExtra::clear_card_face_map() {
  card_face_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GCGDuelExtra::card_face_map() const {
  // @@protoc_insertion_point(field_map:proto.GCGDuelExtra.card_face_map)
  return card_face_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GCGDuelExtra::mutable_card_face_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GCGDuelExtra.card_face_map)
  return card_face_map_.MutableMap();
}

// repeated .proto.GCGChallengeData challenge_list = 5;
inline int GCGDuelExtra::challenge_list_size() const {
  return challenge_list_.size();
}
inline void GCGDuelExtra::clear_challenge_list() {
  challenge_list_.Clear();
}
inline const ::proto::GCGChallengeData& GCGDuelExtra::challenge_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.challenge_list)
  return challenge_list_.Get(index);
}
inline ::proto::GCGChallengeData* GCGDuelExtra::mutable_challenge_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GCGDuelExtra.challenge_list)
  return challenge_list_.Mutable(index);
}
inline ::proto::GCGChallengeData* GCGDuelExtra::add_challenge_list() {
  // @@protoc_insertion_point(field_add:proto.GCGDuelExtra.challenge_list)
  return challenge_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GCGChallengeData >*
GCGDuelExtra::mutable_challenge_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGDuelExtra.challenge_list)
  return &challenge_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GCGChallengeData >&
GCGDuelExtra::challenge_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGDuelExtra.challenge_list)
  return challenge_list_;
}

// uint32 score = 6;
inline void GCGDuelExtra::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 GCGDuelExtra::score() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.score)
  return score_;
}
inline void GCGDuelExtra::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.score)
}

// bool is_match_ai = 7;
inline void GCGDuelExtra::clear_is_match_ai() {
  is_match_ai_ = false;
}
inline bool GCGDuelExtra::is_match_ai() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.is_match_ai)
  return is_match_ai_;
}
inline void GCGDuelExtra::set_is_match_ai(bool value) {
  
  is_match_ai_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.is_match_ai)
}

// uint32 ai_deck_id = 8;
inline void GCGDuelExtra::clear_ai_deck_id() {
  ai_deck_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGDuelExtra::ai_deck_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.ai_deck_id)
  return ai_deck_id_;
}
inline void GCGDuelExtra::set_ai_deck_id(::google::protobuf::uint32 value) {
  
  ai_deck_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.ai_deck_id)
}

// bool is_internal = 9;
inline void GCGDuelExtra::clear_is_internal() {
  is_internal_ = false;
}
inline bool GCGDuelExtra::is_internal() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.is_internal)
  return is_internal_;
}
inline void GCGDuelExtra::set_is_internal(bool value) {
  
  is_internal_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.is_internal)
}

// repeated uint32 forbid_finish_challenge_list = 10;
inline int GCGDuelExtra::forbid_finish_challenge_list_size() const {
  return forbid_finish_challenge_list_.size();
}
inline void GCGDuelExtra::clear_forbid_finish_challenge_list() {
  forbid_finish_challenge_list_.Clear();
}
inline ::google::protobuf::uint32 GCGDuelExtra::forbid_finish_challenge_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.forbid_finish_challenge_list)
  return forbid_finish_challenge_list_.Get(index);
}
inline void GCGDuelExtra::set_forbid_finish_challenge_list(int index, ::google::protobuf::uint32 value) {
  forbid_finish_challenge_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.forbid_finish_challenge_list)
}
inline void GCGDuelExtra::add_forbid_finish_challenge_list(::google::protobuf::uint32 value) {
  forbid_finish_challenge_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGDuelExtra.forbid_finish_challenge_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGDuelExtra::forbid_finish_challenge_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGDuelExtra.forbid_finish_challenge_list)
  return forbid_finish_challenge_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGDuelExtra::mutable_forbid_finish_challenge_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGDuelExtra.forbid_finish_challenge_list)
  return &forbid_finish_challenge_list_;
}

// uint32 level = 11;
inline void GCGDuelExtra::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 GCGDuelExtra::level() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.level)
  return level_;
}
inline void GCGDuelExtra::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.level)
}

// uint32 client_version = 12;
inline void GCGDuelExtra::clear_client_version() {
  client_version_ = 0u;
}
inline ::google::protobuf::uint32 GCGDuelExtra::client_version() const {
  // @@protoc_insertion_point(field_get:proto.GCGDuelExtra.client_version)
  return client_version_;
}
inline void GCGDuelExtra::set_client_version(::google::protobuf::uint32 value) {
  
  client_version_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGDuelExtra.client_version)
}

// -------------------------------------------------------------------

// QueryIpRegionData

// string ip = 1;
inline void QueryIpRegionData::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryIpRegionData::ip() const {
  // @@protoc_insertion_point(field_get:proto.QueryIpRegionData.ip)
  return ip_.GetNoArena();
}
inline void QueryIpRegionData::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryIpRegionData.ip)
}
#if LANG_CXX11
inline void QueryIpRegionData::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryIpRegionData.ip)
}
#endif
inline void QueryIpRegionData::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryIpRegionData.ip)
}
inline void QueryIpRegionData::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryIpRegionData.ip)
}
inline ::std::string* QueryIpRegionData::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryIpRegionData.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryIpRegionData::release_ip() {
  // @@protoc_insertion_point(field_release:proto.QueryIpRegionData.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryIpRegionData::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryIpRegionData.ip)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::BreakoutAction_BreakoutActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BreakoutAction_BreakoutActionType>() {
  return ::proto::BreakoutAction_BreakoutActionType_descriptor();
}
template <> struct is_proto_enum< ::proto::TrialAvatarGrantRecord_GrantReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TrialAvatarGrantRecord_GrantReason>() {
  return ::proto::TrialAvatarGrantRecord_GrantReason_descriptor();
}
template <> struct is_proto_enum< ::proto::ENetReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ENetReason>() {
  return ::proto::ENetReason_descriptor();
}
template <> struct is_proto_enum< ::proto::AccountType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AccountType>() {
  return ::proto::AccountType_descriptor();
}
template <> struct is_proto_enum< ::proto::ChannelIdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChannelIdType>() {
  return ::proto::ChannelIdType_descriptor();
}
template <> struct is_proto_enum< ::proto::ServiceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServiceType>() {
  return ::proto::ServiceType_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientType>() {
  return ::proto::ClientType_descriptor();
}
template <> struct is_proto_enum< ::proto::RegionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RegionType>() {
  return ::proto::RegionType_descriptor();
}
template <> struct is_proto_enum< ::proto::ActionReasonType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ActionReasonType>() {
  return ::proto::ActionReasonType_descriptor();
}
template <> struct is_proto_enum< ::proto::StoreType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::StoreType>() {
  return ::proto::StoreType_descriptor();
}
template <> struct is_proto_enum< ::proto::VirtualItem> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VirtualItem>() {
  return ::proto::VirtualItem_descriptor();
}
template <> struct is_proto_enum< ::proto::ReliquaryFilterKey> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReliquaryFilterKey>() {
  return ::proto::ReliquaryFilterKey_descriptor();
}
template <> struct is_proto_enum< ::proto::ReliquaryFilterLockState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReliquaryFilterLockState>() {
  return ::proto::ReliquaryFilterLockState_descriptor();
}
template <> struct is_proto_enum< ::proto::ReliquaryFilterLevelState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReliquaryFilterLevelState>() {
  return ::proto::ReliquaryFilterLevelState_descriptor();
}
template <> struct is_proto_enum< ::proto::ReliquaryFilterWearedState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReliquaryFilterWearedState>() {
  return ::proto::ReliquaryFilterWearedState_descriptor();
}
template <> struct is_proto_enum< ::proto::AbilityScalarType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AbilityScalarType>() {
  return ::proto::AbilityScalarType_descriptor();
}
template <> struct is_proto_enum< ::proto::MotionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MotionState>() {
  return ::proto::MotionState_descriptor();
}
template <> struct is_proto_enum< ::proto::ProtEntityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ProtEntityType>() {
  return ::proto::ProtEntityType_descriptor();
}
template <> struct is_proto_enum< ::proto::NpcTalkState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::NpcTalkState>() {
  return ::proto::NpcTalkState_descriptor();
}
template <> struct is_proto_enum< ::proto::VehicleSlot> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VehicleSlot>() {
  return ::proto::VehicleSlot_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterBornType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterBornType>() {
  return ::proto::MonsterBornType_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetBornType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetBornType>() {
  return ::proto::GadgetBornType_descriptor();
}
template <> struct is_proto_enum< ::proto::MovingPlatformType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MovingPlatformType>() {
  return ::proto::MovingPlatformType_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetPlayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetPlayType>() {
  return ::proto::GadgetPlayType_descriptor();
}
template <> struct is_proto_enum< ::proto::FoundationStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FoundationStatus>() {
  return ::proto::FoundationStatus_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangHpReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangHpReason>() {
  return ::proto::ChangHpReason_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerDieType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerDieType>() {
  return ::proto::PlayerDieType_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerDieOption> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerDieOption>() {
  return ::proto::PlayerDieOption_descriptor();
}
template <> struct is_proto_enum< ::proto::FetterState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FetterState>() {
  return ::proto::FetterState_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionState>() {
  return ::proto::AvatarExpeditionState_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarType>() {
  return ::proto::AvatarType_descriptor();
}
template <> struct is_proto_enum< ::proto::EventTriggerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EventTriggerType>() {
  return ::proto::EventTriggerType_descriptor();
}
template <> struct is_proto_enum< ::proto::MailCollectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MailCollectState>() {
  return ::proto::MailCollectState_descriptor();
}
template <> struct is_proto_enum< ::proto::MpSettingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MpSettingType>() {
  return ::proto::MpSettingType_descriptor();
}
template <> struct is_proto_enum< ::proto::MathExpressionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MathExpressionType>() {
  return ::proto::MathExpressionType_descriptor();
}
template <> struct is_proto_enum< ::proto::LoginRewardConfigType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LoginRewardConfigType>() {
  return ::proto::LoginRewardConfigType_descriptor();
}
template <> struct is_proto_enum< ::proto::LanguageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LanguageType>() {
  return ::proto::LanguageType_descriptor();
}
template <> struct is_proto_enum< ::proto::PlatformType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlatformType>() {
  return ::proto::PlatformType_descriptor();
}
template <> struct is_proto_enum< ::proto::MapMarkPointType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MapMarkPointType>() {
  return ::proto::MapMarkPointType_descriptor();
}
template <> struct is_proto_enum< ::proto::MapMarkFromType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MapMarkFromType>() {
  return ::proto::MapMarkFromType_descriptor();
}
template <> struct is_proto_enum< ::proto::DungeonCandidateTeamInviteState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DungeonCandidateTeamInviteState>() {
  return ::proto::DungeonCandidateTeamInviteState_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterGuestBanDrop> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterGuestBanDrop>() {
  return ::proto::MonsterGuestBanDrop_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetGuestBanDrop> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetGuestBanDrop>() {
  return ::proto::GadgetGuestBanDrop_descriptor();
}
template <> struct is_proto_enum< ::proto::GroupLoadStrategy> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GroupLoadStrategy>() {
  return ::proto::GroupLoadStrategy_descriptor();
}
template <> struct is_proto_enum< ::proto::MatchType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MatchType>() {
  return ::proto::MatchType_descriptor();
}
template <> struct is_proto_enum< ::proto::MpPlayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MpPlayType>() {
  return ::proto::MpPlayType_descriptor();
}
template <> struct is_proto_enum< ::proto::OpActivityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OpActivityType>() {
  return ::proto::OpActivityType_descriptor();
}
template <> struct is_proto_enum< ::proto::MatchReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MatchReason>() {
  return ::proto::MatchReason_descriptor();
}
template <> struct is_proto_enum< ::proto::LuaShellNotifyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LuaShellNotifyType>() {
  return ::proto::LuaShellNotifyType_descriptor();
}
template <> struct is_proto_enum< ::proto::LuaShellType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LuaShellType>() {
  return ::proto::LuaShellType_descriptor();
}
template <> struct is_proto_enum< ::proto::SalesmanStatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SalesmanStatusType>() {
  return ::proto::SalesmanStatusType_descriptor();
}
template <> struct is_proto_enum< ::proto::SecurityCheckType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SecurityCheckType>() {
  return ::proto::SecurityCheckType_descriptor();
}
template <> struct is_proto_enum< ::proto::CodexType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CodexType>() {
  return ::proto::CodexType_descriptor();
}
template <> struct is_proto_enum< ::proto::SegmentCRCModuleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SegmentCRCModuleType>() {
  return ::proto::SegmentCRCModuleType_descriptor();
}
template <> struct is_proto_enum< ::proto::ExchangeMcoinType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExchangeMcoinType>() {
  return ::proto::ExchangeMcoinType_descriptor();
}
template <> struct is_proto_enum< ::proto::ExploreType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExploreType>() {
  return ::proto::ExploreType_descriptor();
}
template <> struct is_proto_enum< ::proto::AsterLittleStageState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AsterLittleStageState>() {
  return ::proto::AsterLittleStageState_descriptor();
}
template <> struct is_proto_enum< ::proto::HuntingOfferState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HuntingOfferState>() {
  return ::proto::HuntingOfferState_descriptor();
}
template <> struct is_proto_enum< ::proto::RegionSearchState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RegionSearchState>() {
  return ::proto::RegionSearchState_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerTag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerTag>() {
  return ::proto::PlayerTag_descriptor();
}
template <> struct is_proto_enum< ::proto::FeatureBlockType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FeatureBlockType>() {
  return ::proto::FeatureBlockType_descriptor();
}
template <> struct is_proto_enum< ::proto::ReportReasonType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ReportReasonType>() {
  return ::proto::ReportReasonType_descriptor();
}
template <> struct is_proto_enum< ::proto::MapMarkTipsType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MapMarkTipsType>() {
  return ::proto::MapMarkTipsType_descriptor();
}
template <> struct is_proto_enum< ::proto::ExpeditionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExpeditionState>() {
  return ::proto::ExpeditionState_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterReason>() {
  return ::proto::EnterReason_descriptor();
}
template <> struct is_proto_enum< ::proto::FriendEnterHomeOption> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FriendEnterHomeOption>() {
  return ::proto::FriendEnterHomeOption_descriptor();
}
template <> struct is_proto_enum< ::proto::ChatChannel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChatChannel>() {
  return ::proto::ChatChannel_descriptor();
}
template <> struct is_proto_enum< ::proto::LeaveWorldReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LeaveWorldReason>() {
  return ::proto::LeaveWorldReason_descriptor();
}
template <> struct is_proto_enum< ::proto::DungeonCandidateTeamPlayerState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DungeonCandidateTeamPlayerState>() {
  return ::proto::DungeonCandidateTeamPlayerState_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateGadgetReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateGadgetReason>() {
  return ::proto::CreateGadgetReason_descriptor();
}
template <> struct is_proto_enum< ::proto::LunaRiteHintStatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LunaRiteHintStatusType>() {
  return ::proto::LunaRiteHintStatusType_descriptor();
}
template <> struct is_proto_enum< ::proto::LunaRiteHintPointType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LunaRiteHintPointType>() {
  return ::proto::LunaRiteHintPointType_descriptor();
}
template <> struct is_proto_enum< ::proto::GroupVariableType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GroupVariableType>() {
  return ::proto::GroupVariableType_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientInputType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientInputType>() {
  return ::proto::ClientInputType_descriptor();
}
template <> struct is_proto_enum< ::proto::CustomDungeonEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CustomDungeonEvent>() {
  return ::proto::CustomDungeonEvent_descriptor();
}
template <> struct is_proto_enum< ::proto::PlatformCategory> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlatformCategory>() {
  return ::proto::PlatformCategory_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneidConstValue> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneidConstValue>() {
  return ::proto::SceneidConstValue_descriptor();
}
template <> struct is_proto_enum< ::proto::CityidConstValue> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CityidConstValue>() {
  return ::proto::CityidConstValue_descriptor();
}
template <> struct is_proto_enum< ::proto::AranaraCollectionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AranaraCollectionState>() {
  return ::proto::AranaraCollectionState_descriptor();
}
template <> struct is_proto_enum< ::proto::AuditState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AuditState>() {
  return ::proto::AuditState_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarRenameAuditSourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarRenameAuditSourceType>() {
  return ::proto::AvatarRenameAuditSourceType_descriptor();
}
template <> struct is_proto_enum< ::proto::ResetAvatarRenameReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ResetAvatarRenameReason>() {
  return ::proto::ResetAvatarRenameReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_define_2eproto__INCLUDED
