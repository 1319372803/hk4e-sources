// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_recharge.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_recharge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class RechargeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RechargeReq>
     _instance;
} _RechargeReq_default_instance_;
class RechargeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RechargeRsp>
     _instance;
} _RechargeRsp_default_instance_;
class OrderFinishNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OrderFinishNotify>
     _instance;
} _OrderFinishNotify_default_instance_;
class CardProductRewardNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CardProductRewardNotify>
     _instance;
} _CardProductRewardNotify_default_instance_;
class ProductPriceTierDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProductPriceTier>
     _instance;
} _ProductPriceTier_default_instance_;
class ResinCardDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResinCardData>
     _instance;
} _ResinCardData_default_instance_;
class PlayerRechargeDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerRechargeDataNotify>
     _instance;
} _PlayerRechargeDataNotify_default_instance_;
class OrderDisplayNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OrderDisplayNotify>
     _instance;
} _OrderDisplayNotify_default_instance_;
class ReportTrackingIOInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReportTrackingIOInfoNotify>
     _instance;
} _ReportTrackingIOInfoNotify_default_instance_;
class TakeResinCardDailyRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeResinCardDailyRewardReq>
     _instance;
} _TakeResinCardDailyRewardReq_default_instance_;
class TakeResinCardDailyRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeResinCardDailyRewardRsp>
     _instance;
} _TakeResinCardDailyRewardRsp_default_instance_;
class ResinCardDataUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResinCardDataUpdateNotify>
     _instance;
} _ResinCardDataUpdateNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5frecharge_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeReq, play_product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeReq, card_product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeReq, mcoin_product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeReq, concert_product_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRsp, is_show_minors_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRsp, product_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, card_product_remain_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, add_mcoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, product_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardProductRewardNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardProductRewardNotify, hcoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardProductRewardNotify, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardProductRewardNotify, remain_days_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductPriceTier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductPriceTier, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductPriceTier, price_tier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardData, remain_reward_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardData, expire_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardData, last_daily_reward_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardData, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRechargeDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRechargeDataNotify, card_product_remain_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRechargeDataNotify, product_price_tier_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDisplayNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDisplayNotify, order_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTrackingIOInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTrackingIOInfoNotify, rydevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTrackingIOInfoNotify, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTrackingIOInfoNotify, client_tz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTrackingIOInfoNotify, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportTrackingIOInfoNotify, mac_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeResinCardDailyRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeResinCardDailyRewardReq, product_config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeResinCardDailyRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeResinCardDailyRewardRsp, item_vec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeResinCardDailyRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeResinCardDailyRewardRsp, product_config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardDataUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardDataUpdateNotify, today_start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResinCardDataUpdateNotify, card_data_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RechargeReq)},
  { 9, -1, sizeof(RechargeRsp)},
  { 17, -1, sizeof(OrderFinishNotify)},
  { 27, -1, sizeof(CardProductRewardNotify)},
  { 35, -1, sizeof(ProductPriceTier)},
  { 42, -1, sizeof(ResinCardData)},
  { 51, -1, sizeof(PlayerRechargeDataNotify)},
  { 58, -1, sizeof(OrderDisplayNotify)},
  { 64, -1, sizeof(ReportTrackingIOInfoNotify)},
  { 74, -1, sizeof(TakeResinCardDailyRewardReq)},
  { 80, -1, sizeof(TakeResinCardDailyRewardRsp)},
  { 88, -1, sizeof(ResinCardDataUpdateNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RechargeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RechargeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderFinishNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardProductRewardNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductPriceTier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResinCardData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerRechargeDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderDisplayNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReportTrackingIOInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeResinCardDailyRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeResinCardDailyRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResinCardDataUpdateNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_recharge.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _RechargeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RechargeReq_default_instance_);_RechargeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RechargeRsp_default_instance_);_OrderFinishNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OrderFinishNotify_default_instance_);_CardProductRewardNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CardProductRewardNotify_default_instance_);_ProductPriceTier_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProductPriceTier_default_instance_);_ResinCardData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResinCardData_default_instance_);_PlayerRechargeDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerRechargeDataNotify_default_instance_);_OrderDisplayNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OrderDisplayNotify_default_instance_);_ReportTrackingIOInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReportTrackingIOInfoNotify_default_instance_);_TakeResinCardDailyRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeResinCardDailyRewardReq_default_instance_);_TakeResinCardDailyRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeResinCardDailyRewardRsp_default_instance_);_ResinCardDataUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResinCardDataUpdateNotify_default_instance_);_RechargeReq_default_instance_._instance.get_mutable()->play_product_ = const_cast< ::proto::PlayProduct*>(
      ::proto::PlayProduct::internal_default_instance());
  _RechargeReq_default_instance_._instance.get_mutable()->card_product_ = const_cast< ::proto::ShopCardProduct*>(
      ::proto::ShopCardProduct::internal_default_instance());
  _RechargeReq_default_instance_._instance.get_mutable()->mcoin_product_ = const_cast< ::proto::ShopMcoinProduct*>(
      ::proto::ShopMcoinProduct::internal_default_instance());
  _RechargeReq_default_instance_._instance.get_mutable()->concert_product_ = const_cast< ::proto::ShopConcertProduct*>(
      ::proto::ShopConcertProduct::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026cmd/cmd_recharge.proto\022\005proto\032\014define."
      "proto\"\311\001\n\013RechargeReq\022(\n\014play_product\030\n "
      "\001(\0132\022.proto.PlayProduct\022,\n\014card_product\030"
      "\010 \001(\0132\026.proto.ShopCardProduct\022.\n\rmcoin_p"
      "roduct\030\016 \001(\0132\027.proto.ShopMcoinProduct\0222\n"
      "\017concert_product\030\007 \001(\0132\031.proto.ShopConce"
      "rtProduct\"O\n\013RechargeRsp\022\017\n\007retcode\030\014 \001("
      "\005\022\033\n\023is_show_minors_hint\030\006 \001(\010\022\022\n\nproduc"
      "t_id\030\002 \001(\t\"\223\001\n\021OrderFinishNotify\022\020\n\010orde"
      "r_id\030\003 \001(\r\022 \n\030card_product_remain_days\030\017"
      " \001(\r\022#\n\titem_list\030\t \003(\0132\020.proto.ItemPara"
      "m\022\021\n\tadd_mcoin\030\007 \001(\r\022\022\n\nproduct_id\030\006 \001(\t"
      "\"Q\n\027CardProductRewardNotify\022\r\n\005hcoin\030\006 \001"
      "(\r\022\022\n\nproduct_id\030\016 \001(\t\022\023\n\013remain_days\030\001 "
      "\001(\r\":\n\020ProductPriceTier\022\022\n\nproduct_id\030\006 "
      "\001(\t\022\022\n\nprice_tier\030\014 \001(\t\"s\n\rResinCardData"
      "\022\032\n\022remain_reward_days\030\003 \001(\r\022\023\n\013expire_t"
      "ime\030\014 \001(\r\022\036\n\026last_daily_reward_time\030\002 \001("
      "\r\022\021\n\tconfig_id\030\007 \001(\r\"v\n\030PlayerRechargeDa"
      "taNotify\022 \n\030card_product_remain_days\030\014 \001"
      "(\r\0228\n\027product_price_tier_list\030\013 \003(\0132\027.pr"
      "oto.ProductPriceTier\"&\n\022OrderDisplayNoti"
      "fy\022\020\n\010order_id\030\001 \001(\r\"s\n\032ReportTrackingIO"
      "InfoNotify\022\024\n\014rydevicetype\030\014 \001(\t\022\020\n\010devi"
      "ceid\030\001 \001(\t\022\021\n\tclient_tz\030\r \001(\t\022\r\n\005appid\030\016"
      " \001(\t\022\013\n\003mac\030\017 \001(\t\"8\n\033TakeResinCardDailyR"
      "ewardReq\022\031\n\021product_config_id\030\016 \001(\r\"m\n\033T"
      "akeResinCardDailyRewardRsp\022\"\n\010item_vec\030\006"
      " \003(\0132\020.proto.ItemParam\022\017\n\007retcode\030\004 \001(\005\022"
      "\031\n\021product_config_id\030\014 \001(\r\"c\n\031ResinCardD"
      "ataUpdateNotify\022\030\n\020today_start_time\030\006 \001("
      "\r\022,\n\016card_data_list\030\002 \003(\0132\024.proto.ResinC"
      "ardDataB(Z&github.com/teyvat-helper/hk4e"
      "-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1337);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_recharge.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5frecharge_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RechargeReq::kPlayProductFieldNumber;
const int RechargeReq::kCardProductFieldNumber;
const int RechargeReq::kMcoinProductFieldNumber;
const int RechargeReq::kConcertProductFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RechargeReq::RechargeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RechargeReq)
}
RechargeReq::RechargeReq(const RechargeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_concert_product()) {
    concert_product_ = new ::proto::ShopConcertProduct(*from.concert_product_);
  } else {
    concert_product_ = NULL;
  }
  if (from.has_card_product()) {
    card_product_ = new ::proto::ShopCardProduct(*from.card_product_);
  } else {
    card_product_ = NULL;
  }
  if (from.has_play_product()) {
    play_product_ = new ::proto::PlayProduct(*from.play_product_);
  } else {
    play_product_ = NULL;
  }
  if (from.has_mcoin_product()) {
    mcoin_product_ = new ::proto::ShopMcoinProduct(*from.mcoin_product_);
  } else {
    mcoin_product_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.RechargeReq)
}

void RechargeReq::SharedCtor() {
  ::memset(&concert_product_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mcoin_product_) -
      reinterpret_cast<char*>(&concert_product_)) + sizeof(mcoin_product_));
  _cached_size_ = 0;
}

RechargeReq::~RechargeReq() {
  // @@protoc_insertion_point(destructor:proto.RechargeReq)
  SharedDtor();
}

void RechargeReq::SharedDtor() {
  if (this != internal_default_instance()) delete concert_product_;
  if (this != internal_default_instance()) delete card_product_;
  if (this != internal_default_instance()) delete play_product_;
  if (this != internal_default_instance()) delete mcoin_product_;
}

void RechargeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeReq::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RechargeReq& RechargeReq::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

RechargeReq* RechargeReq::New(::google::protobuf::Arena* arena) const {
  RechargeReq* n = new RechargeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RechargeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RechargeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && concert_product_ != NULL) {
    delete concert_product_;
  }
  concert_product_ = NULL;
  if (GetArenaNoVirtual() == NULL && card_product_ != NULL) {
    delete card_product_;
  }
  card_product_ = NULL;
  if (GetArenaNoVirtual() == NULL && play_product_ != NULL) {
    delete play_product_;
  }
  play_product_ = NULL;
  if (GetArenaNoVirtual() == NULL && mcoin_product_ != NULL) {
    delete mcoin_product_;
  }
  mcoin_product_ = NULL;
  _internal_metadata_.Clear();
}

bool RechargeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RechargeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ShopConcertProduct concert_product = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_concert_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ShopCardProduct card_product = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_card_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayProduct play_product = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_play_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ShopMcoinProduct mcoin_product = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mcoin_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RechargeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RechargeReq)
  return false;
#undef DO_
}

void RechargeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RechargeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ShopConcertProduct concert_product = 7;
  if (this->has_concert_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->concert_product_, output);
  }

  // .proto.ShopCardProduct card_product = 8;
  if (this->has_card_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->card_product_, output);
  }

  // .proto.PlayProduct play_product = 10;
  if (this->has_play_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->play_product_, output);
  }

  // .proto.ShopMcoinProduct mcoin_product = 14;
  if (this->has_mcoin_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->mcoin_product_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RechargeReq)
}

::google::protobuf::uint8* RechargeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RechargeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ShopConcertProduct concert_product = 7;
  if (this->has_concert_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->concert_product_, deterministic, target);
  }

  // .proto.ShopCardProduct card_product = 8;
  if (this->has_card_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->card_product_, deterministic, target);
  }

  // .proto.PlayProduct play_product = 10;
  if (this->has_play_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->play_product_, deterministic, target);
  }

  // .proto.ShopMcoinProduct mcoin_product = 14;
  if (this->has_mcoin_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->mcoin_product_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RechargeReq)
  return target;
}

size_t RechargeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RechargeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ShopConcertProduct concert_product = 7;
  if (this->has_concert_product()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->concert_product_);
  }

  // .proto.ShopCardProduct card_product = 8;
  if (this->has_card_product()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->card_product_);
  }

  // .proto.PlayProduct play_product = 10;
  if (this->has_play_product()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->play_product_);
  }

  // .proto.ShopMcoinProduct mcoin_product = 14;
  if (this->has_mcoin_product()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mcoin_product_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RechargeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RechargeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RechargeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RechargeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RechargeReq)
    MergeFrom(*source);
  }
}

void RechargeReq::MergeFrom(const RechargeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RechargeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_concert_product()) {
    mutable_concert_product()->::proto::ShopConcertProduct::MergeFrom(from.concert_product());
  }
  if (from.has_card_product()) {
    mutable_card_product()->::proto::ShopCardProduct::MergeFrom(from.card_product());
  }
  if (from.has_play_product()) {
    mutable_play_product()->::proto::PlayProduct::MergeFrom(from.play_product());
  }
  if (from.has_mcoin_product()) {
    mutable_mcoin_product()->::proto::ShopMcoinProduct::MergeFrom(from.mcoin_product());
  }
}

void RechargeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RechargeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeReq::CopyFrom(const RechargeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RechargeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeReq::IsInitialized() const {
  return true;
}

void RechargeReq::Swap(RechargeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RechargeReq::InternalSwap(RechargeReq* other) {
  using std::swap;
  swap(concert_product_, other->concert_product_);
  swap(card_product_, other->card_product_);
  swap(play_product_, other->play_product_);
  swap(mcoin_product_, other->mcoin_product_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RechargeReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RechargeReq

// .proto.PlayProduct play_product = 10;
bool RechargeReq::has_play_product() const {
  return this != internal_default_instance() && play_product_ != NULL;
}
void RechargeReq::clear_play_product() {
  if (GetArenaNoVirtual() == NULL && play_product_ != NULL) delete play_product_;
  play_product_ = NULL;
}
const ::proto::PlayProduct& RechargeReq::play_product() const {
  const ::proto::PlayProduct* p = play_product_;
  // @@protoc_insertion_point(field_get:proto.RechargeReq.play_product)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlayProduct*>(
      &::proto::_PlayProduct_default_instance_);
}
::proto::PlayProduct* RechargeReq::mutable_play_product() {
  
  if (play_product_ == NULL) {
    play_product_ = new ::proto::PlayProduct;
  }
  // @@protoc_insertion_point(field_mutable:proto.RechargeReq.play_product)
  return play_product_;
}
::proto::PlayProduct* RechargeReq::release_play_product() {
  // @@protoc_insertion_point(field_release:proto.RechargeReq.play_product)
  
  ::proto::PlayProduct* temp = play_product_;
  play_product_ = NULL;
  return temp;
}
void RechargeReq::set_allocated_play_product(::proto::PlayProduct* play_product) {
  delete play_product_;
  play_product_ = play_product;
  if (play_product) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeReq.play_product)
}

// .proto.ShopCardProduct card_product = 8;
bool RechargeReq::has_card_product() const {
  return this != internal_default_instance() && card_product_ != NULL;
}
void RechargeReq::clear_card_product() {
  if (GetArenaNoVirtual() == NULL && card_product_ != NULL) delete card_product_;
  card_product_ = NULL;
}
const ::proto::ShopCardProduct& RechargeReq::card_product() const {
  const ::proto::ShopCardProduct* p = card_product_;
  // @@protoc_insertion_point(field_get:proto.RechargeReq.card_product)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ShopCardProduct*>(
      &::proto::_ShopCardProduct_default_instance_);
}
::proto::ShopCardProduct* RechargeReq::mutable_card_product() {
  
  if (card_product_ == NULL) {
    card_product_ = new ::proto::ShopCardProduct;
  }
  // @@protoc_insertion_point(field_mutable:proto.RechargeReq.card_product)
  return card_product_;
}
::proto::ShopCardProduct* RechargeReq::release_card_product() {
  // @@protoc_insertion_point(field_release:proto.RechargeReq.card_product)
  
  ::proto::ShopCardProduct* temp = card_product_;
  card_product_ = NULL;
  return temp;
}
void RechargeReq::set_allocated_card_product(::proto::ShopCardProduct* card_product) {
  delete card_product_;
  card_product_ = card_product;
  if (card_product) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeReq.card_product)
}

// .proto.ShopMcoinProduct mcoin_product = 14;
bool RechargeReq::has_mcoin_product() const {
  return this != internal_default_instance() && mcoin_product_ != NULL;
}
void RechargeReq::clear_mcoin_product() {
  if (GetArenaNoVirtual() == NULL && mcoin_product_ != NULL) delete mcoin_product_;
  mcoin_product_ = NULL;
}
const ::proto::ShopMcoinProduct& RechargeReq::mcoin_product() const {
  const ::proto::ShopMcoinProduct* p = mcoin_product_;
  // @@protoc_insertion_point(field_get:proto.RechargeReq.mcoin_product)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ShopMcoinProduct*>(
      &::proto::_ShopMcoinProduct_default_instance_);
}
::proto::ShopMcoinProduct* RechargeReq::mutable_mcoin_product() {
  
  if (mcoin_product_ == NULL) {
    mcoin_product_ = new ::proto::ShopMcoinProduct;
  }
  // @@protoc_insertion_point(field_mutable:proto.RechargeReq.mcoin_product)
  return mcoin_product_;
}
::proto::ShopMcoinProduct* RechargeReq::release_mcoin_product() {
  // @@protoc_insertion_point(field_release:proto.RechargeReq.mcoin_product)
  
  ::proto::ShopMcoinProduct* temp = mcoin_product_;
  mcoin_product_ = NULL;
  return temp;
}
void RechargeReq::set_allocated_mcoin_product(::proto::ShopMcoinProduct* mcoin_product) {
  delete mcoin_product_;
  mcoin_product_ = mcoin_product;
  if (mcoin_product) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeReq.mcoin_product)
}

// .proto.ShopConcertProduct concert_product = 7;
bool RechargeReq::has_concert_product() const {
  return this != internal_default_instance() && concert_product_ != NULL;
}
void RechargeReq::clear_concert_product() {
  if (GetArenaNoVirtual() == NULL && concert_product_ != NULL) delete concert_product_;
  concert_product_ = NULL;
}
const ::proto::ShopConcertProduct& RechargeReq::concert_product() const {
  const ::proto::ShopConcertProduct* p = concert_product_;
  // @@protoc_insertion_point(field_get:proto.RechargeReq.concert_product)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ShopConcertProduct*>(
      &::proto::_ShopConcertProduct_default_instance_);
}
::proto::ShopConcertProduct* RechargeReq::mutable_concert_product() {
  
  if (concert_product_ == NULL) {
    concert_product_ = new ::proto::ShopConcertProduct;
  }
  // @@protoc_insertion_point(field_mutable:proto.RechargeReq.concert_product)
  return concert_product_;
}
::proto::ShopConcertProduct* RechargeReq::release_concert_product() {
  // @@protoc_insertion_point(field_release:proto.RechargeReq.concert_product)
  
  ::proto::ShopConcertProduct* temp = concert_product_;
  concert_product_ = NULL;
  return temp;
}
void RechargeReq::set_allocated_concert_product(::proto::ShopConcertProduct* concert_product) {
  delete concert_product_;
  concert_product_ = concert_product;
  if (concert_product) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeReq.concert_product)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RechargeRsp::kRetcodeFieldNumber;
const int RechargeRsp::kIsShowMinorsHintFieldNumber;
const int RechargeRsp::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RechargeRsp::RechargeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RechargeRsp)
}
RechargeRsp::RechargeRsp(const RechargeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  ::memcpy(&is_show_minors_hint_, &from.is_show_minors_hint_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&is_show_minors_hint_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.RechargeRsp)
}

void RechargeRsp::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_show_minors_hint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&is_show_minors_hint_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

RechargeRsp::~RechargeRsp() {
  // @@protoc_insertion_point(destructor:proto.RechargeRsp)
  SharedDtor();
}

void RechargeRsp::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RechargeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeRsp::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RechargeRsp& RechargeRsp::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

RechargeRsp* RechargeRsp::New(::google::protobuf::Arena* arena) const {
  RechargeRsp* n = new RechargeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RechargeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RechargeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_show_minors_hint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&is_show_minors_hint_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool RechargeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RechargeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string product_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RechargeRsp.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_show_minors_hint = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_show_minors_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RechargeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RechargeRsp)
  return false;
#undef DO_
}

void RechargeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RechargeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 2;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RechargeRsp.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->product_id(), output);
  }

  // bool is_show_minors_hint = 6;
  if (this->is_show_minors_hint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_show_minors_hint(), output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RechargeRsp)
}

::google::protobuf::uint8* RechargeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RechargeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 2;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RechargeRsp.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->product_id(), target);
  }

  // bool is_show_minors_hint = 6;
  if (this->is_show_minors_hint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_show_minors_hint(), target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RechargeRsp)
  return target;
}

size_t RechargeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RechargeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 2;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // bool is_show_minors_hint = 6;
  if (this->is_show_minors_hint() != 0) {
    total_size += 1 + 1;
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RechargeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RechargeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RechargeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RechargeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RechargeRsp)
    MergeFrom(*source);
  }
}

void RechargeRsp::MergeFrom(const RechargeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RechargeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.is_show_minors_hint() != 0) {
    set_is_show_minors_hint(from.is_show_minors_hint());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RechargeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RechargeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeRsp::CopyFrom(const RechargeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RechargeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeRsp::IsInitialized() const {
  return true;
}

void RechargeRsp::Swap(RechargeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RechargeRsp::InternalSwap(RechargeRsp* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  swap(is_show_minors_hint_, other->is_show_minors_hint_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RechargeRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RechargeRsp

// int32 retcode = 12;
void RechargeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RechargeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RechargeRsp.retcode)
  return retcode_;
}
void RechargeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RechargeRsp.retcode)
}

// bool is_show_minors_hint = 6;
void RechargeRsp::clear_is_show_minors_hint() {
  is_show_minors_hint_ = false;
}
bool RechargeRsp::is_show_minors_hint() const {
  // @@protoc_insertion_point(field_get:proto.RechargeRsp.is_show_minors_hint)
  return is_show_minors_hint_;
}
void RechargeRsp::set_is_show_minors_hint(bool value) {
  
  is_show_minors_hint_ = value;
  // @@protoc_insertion_point(field_set:proto.RechargeRsp.is_show_minors_hint)
}

// string product_id = 2;
void RechargeRsp::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RechargeRsp::product_id() const {
  // @@protoc_insertion_point(field_get:proto.RechargeRsp.product_id)
  return product_id_.GetNoArena();
}
void RechargeRsp::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RechargeRsp.product_id)
}
#if LANG_CXX11
void RechargeRsp::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RechargeRsp.product_id)
}
#endif
void RechargeRsp::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RechargeRsp.product_id)
}
void RechargeRsp::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RechargeRsp.product_id)
}
::std::string* RechargeRsp::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.RechargeRsp.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RechargeRsp::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.RechargeRsp.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RechargeRsp::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeRsp.product_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderFinishNotify::kOrderIdFieldNumber;
const int OrderFinishNotify::kCardProductRemainDaysFieldNumber;
const int OrderFinishNotify::kItemListFieldNumber;
const int OrderFinishNotify::kAddMcoinFieldNumber;
const int OrderFinishNotify::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderFinishNotify::OrderFinishNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OrderFinishNotify)
}
OrderFinishNotify::OrderFinishNotify(const OrderFinishNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  ::memcpy(&order_id_, &from.order_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&card_product_remain_days_) -
    reinterpret_cast<char*>(&order_id_)) + sizeof(card_product_remain_days_));
  // @@protoc_insertion_point(copy_constructor:proto.OrderFinishNotify)
}

void OrderFinishNotify::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&order_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&card_product_remain_days_) -
      reinterpret_cast<char*>(&order_id_)) + sizeof(card_product_remain_days_));
  _cached_size_ = 0;
}

OrderFinishNotify::~OrderFinishNotify() {
  // @@protoc_insertion_point(destructor:proto.OrderFinishNotify)
  SharedDtor();
}

void OrderFinishNotify::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderFinishNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderFinishNotify::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderFinishNotify& OrderFinishNotify::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderFinishNotify* OrderFinishNotify::New(::google::protobuf::Arena* arena) const {
  OrderFinishNotify* n = new OrderFinishNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderFinishNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&order_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&card_product_remain_days_) -
      reinterpret_cast<char*>(&order_id_)) + sizeof(card_product_remain_days_));
  _internal_metadata_.Clear();
}

bool OrderFinishNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OrderFinishNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 order_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.OrderFinishNotify.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 add_mcoin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_mcoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 card_product_remain_days = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_product_remain_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OrderFinishNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OrderFinishNotify)
  return false;
#undef DO_
}

void OrderFinishNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 3;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->order_id(), output);
  }

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OrderFinishNotify.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->product_id(), output);
  }

  // uint32 add_mcoin = 7;
  if (this->add_mcoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->add_mcoin(), output);
  }

  // repeated .proto.ItemParam item_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->item_list(static_cast<int>(i)), output);
  }

  // uint32 card_product_remain_days = 15;
  if (this->card_product_remain_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->card_product_remain_days(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OrderFinishNotify)
}

::google::protobuf::uint8* OrderFinishNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 3;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->order_id(), target);
  }

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OrderFinishNotify.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->product_id(), target);
  }

  // uint32 add_mcoin = 7;
  if (this->add_mcoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->add_mcoin(), target);
  }

  // repeated .proto.ItemParam item_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 card_product_remain_days = 15;
  if (this->card_product_remain_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->card_product_remain_days(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OrderFinishNotify)
  return target;
}

size_t OrderFinishNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OrderFinishNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // uint32 order_id = 3;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  // uint32 add_mcoin = 7;
  if (this->add_mcoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->add_mcoin());
  }

  // uint32 card_product_remain_days = 15;
  if (this->card_product_remain_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_product_remain_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderFinishNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OrderFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderFinishNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderFinishNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OrderFinishNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OrderFinishNotify)
    MergeFrom(*source);
  }
}

void OrderFinishNotify::MergeFrom(const OrderFinishNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OrderFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
  if (from.add_mcoin() != 0) {
    set_add_mcoin(from.add_mcoin());
  }
  if (from.card_product_remain_days() != 0) {
    set_card_product_remain_days(from.card_product_remain_days());
  }
}

void OrderFinishNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OrderFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderFinishNotify::CopyFrom(const OrderFinishNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OrderFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderFinishNotify::IsInitialized() const {
  return true;
}

void OrderFinishNotify::Swap(OrderFinishNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderFinishNotify::InternalSwap(OrderFinishNotify* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  product_id_.Swap(&other->product_id_);
  swap(order_id_, other->order_id_);
  swap(add_mcoin_, other->add_mcoin_);
  swap(card_product_remain_days_, other->card_product_remain_days_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderFinishNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderFinishNotify

// uint32 order_id = 3;
void OrderFinishNotify::clear_order_id() {
  order_id_ = 0u;
}
::google::protobuf::uint32 OrderFinishNotify::order_id() const {
  // @@protoc_insertion_point(field_get:proto.OrderFinishNotify.order_id)
  return order_id_;
}
void OrderFinishNotify::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderFinishNotify.order_id)
}

// uint32 card_product_remain_days = 15;
void OrderFinishNotify::clear_card_product_remain_days() {
  card_product_remain_days_ = 0u;
}
::google::protobuf::uint32 OrderFinishNotify::card_product_remain_days() const {
  // @@protoc_insertion_point(field_get:proto.OrderFinishNotify.card_product_remain_days)
  return card_product_remain_days_;
}
void OrderFinishNotify::set_card_product_remain_days(::google::protobuf::uint32 value) {
  
  card_product_remain_days_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderFinishNotify.card_product_remain_days)
}

// repeated .proto.ItemParam item_list = 9;
int OrderFinishNotify::item_list_size() const {
  return item_list_.size();
}
void OrderFinishNotify::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& OrderFinishNotify::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.OrderFinishNotify.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* OrderFinishNotify::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.OrderFinishNotify.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* OrderFinishNotify::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.OrderFinishNotify.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
OrderFinishNotify::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.OrderFinishNotify.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
OrderFinishNotify::item_list() const {
  // @@protoc_insertion_point(field_list:proto.OrderFinishNotify.item_list)
  return item_list_;
}

// uint32 add_mcoin = 7;
void OrderFinishNotify::clear_add_mcoin() {
  add_mcoin_ = 0u;
}
::google::protobuf::uint32 OrderFinishNotify::add_mcoin() const {
  // @@protoc_insertion_point(field_get:proto.OrderFinishNotify.add_mcoin)
  return add_mcoin_;
}
void OrderFinishNotify::set_add_mcoin(::google::protobuf::uint32 value) {
  
  add_mcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderFinishNotify.add_mcoin)
}

// string product_id = 6;
void OrderFinishNotify::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderFinishNotify::product_id() const {
  // @@protoc_insertion_point(field_get:proto.OrderFinishNotify.product_id)
  return product_id_.GetNoArena();
}
void OrderFinishNotify::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OrderFinishNotify.product_id)
}
#if LANG_CXX11
void OrderFinishNotify::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OrderFinishNotify.product_id)
}
#endif
void OrderFinishNotify::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OrderFinishNotify.product_id)
}
void OrderFinishNotify::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OrderFinishNotify.product_id)
}
::std::string* OrderFinishNotify::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.OrderFinishNotify.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderFinishNotify::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.OrderFinishNotify.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderFinishNotify::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.OrderFinishNotify.product_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardProductRewardNotify::kHcoinFieldNumber;
const int CardProductRewardNotify::kProductIdFieldNumber;
const int CardProductRewardNotify::kRemainDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardProductRewardNotify::CardProductRewardNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CardProductRewardNotify)
}
CardProductRewardNotify::CardProductRewardNotify(const CardProductRewardNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  ::memcpy(&remain_days_, &from.remain_days_,
    static_cast<size_t>(reinterpret_cast<char*>(&hcoin_) -
    reinterpret_cast<char*>(&remain_days_)) + sizeof(hcoin_));
  // @@protoc_insertion_point(copy_constructor:proto.CardProductRewardNotify)
}

void CardProductRewardNotify::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&remain_days_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hcoin_) -
      reinterpret_cast<char*>(&remain_days_)) + sizeof(hcoin_));
  _cached_size_ = 0;
}

CardProductRewardNotify::~CardProductRewardNotify() {
  // @@protoc_insertion_point(destructor:proto.CardProductRewardNotify)
  SharedDtor();
}

void CardProductRewardNotify::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardProductRewardNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardProductRewardNotify::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardProductRewardNotify& CardProductRewardNotify::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardProductRewardNotify* CardProductRewardNotify::New(::google::protobuf::Arena* arena) const {
  CardProductRewardNotify* n = new CardProductRewardNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardProductRewardNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CardProductRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&remain_days_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hcoin_) -
      reinterpret_cast<char*>(&remain_days_)) + sizeof(hcoin_));
  _internal_metadata_.Clear();
}

bool CardProductRewardNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CardProductRewardNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 remain_days = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remain_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hcoin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hcoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.CardProductRewardNotify.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CardProductRewardNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CardProductRewardNotify)
  return false;
#undef DO_
}

void CardProductRewardNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CardProductRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 remain_days = 1;
  if (this->remain_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->remain_days(), output);
  }

  // uint32 hcoin = 6;
  if (this->hcoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->hcoin(), output);
  }

  // string product_id = 14;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CardProductRewardNotify.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->product_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CardProductRewardNotify)
}

::google::protobuf::uint8* CardProductRewardNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CardProductRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 remain_days = 1;
  if (this->remain_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->remain_days(), target);
  }

  // uint32 hcoin = 6;
  if (this->hcoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->hcoin(), target);
  }

  // string product_id = 14;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CardProductRewardNotify.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->product_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CardProductRewardNotify)
  return target;
}

size_t CardProductRewardNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CardProductRewardNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 14;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // uint32 remain_days = 1;
  if (this->remain_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remain_days());
  }

  // uint32 hcoin = 6;
  if (this->hcoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hcoin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardProductRewardNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CardProductRewardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CardProductRewardNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardProductRewardNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CardProductRewardNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CardProductRewardNotify)
    MergeFrom(*source);
  }
}

void CardProductRewardNotify::MergeFrom(const CardProductRewardNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CardProductRewardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.remain_days() != 0) {
    set_remain_days(from.remain_days());
  }
  if (from.hcoin() != 0) {
    set_hcoin(from.hcoin());
  }
}

void CardProductRewardNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CardProductRewardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardProductRewardNotify::CopyFrom(const CardProductRewardNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CardProductRewardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardProductRewardNotify::IsInitialized() const {
  return true;
}

void CardProductRewardNotify::Swap(CardProductRewardNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardProductRewardNotify::InternalSwap(CardProductRewardNotify* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  swap(remain_days_, other->remain_days_);
  swap(hcoin_, other->hcoin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardProductRewardNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardProductRewardNotify

// uint32 hcoin = 6;
void CardProductRewardNotify::clear_hcoin() {
  hcoin_ = 0u;
}
::google::protobuf::uint32 CardProductRewardNotify::hcoin() const {
  // @@protoc_insertion_point(field_get:proto.CardProductRewardNotify.hcoin)
  return hcoin_;
}
void CardProductRewardNotify::set_hcoin(::google::protobuf::uint32 value) {
  
  hcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.CardProductRewardNotify.hcoin)
}

// string product_id = 14;
void CardProductRewardNotify::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardProductRewardNotify::product_id() const {
  // @@protoc_insertion_point(field_get:proto.CardProductRewardNotify.product_id)
  return product_id_.GetNoArena();
}
void CardProductRewardNotify::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CardProductRewardNotify.product_id)
}
#if LANG_CXX11
void CardProductRewardNotify::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CardProductRewardNotify.product_id)
}
#endif
void CardProductRewardNotify::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CardProductRewardNotify.product_id)
}
void CardProductRewardNotify::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CardProductRewardNotify.product_id)
}
::std::string* CardProductRewardNotify::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.CardProductRewardNotify.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardProductRewardNotify::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.CardProductRewardNotify.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardProductRewardNotify::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.CardProductRewardNotify.product_id)
}

// uint32 remain_days = 1;
void CardProductRewardNotify::clear_remain_days() {
  remain_days_ = 0u;
}
::google::protobuf::uint32 CardProductRewardNotify::remain_days() const {
  // @@protoc_insertion_point(field_get:proto.CardProductRewardNotify.remain_days)
  return remain_days_;
}
void CardProductRewardNotify::set_remain_days(::google::protobuf::uint32 value) {
  
  remain_days_ = value;
  // @@protoc_insertion_point(field_set:proto.CardProductRewardNotify.remain_days)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductPriceTier::kProductIdFieldNumber;
const int ProductPriceTier::kPriceTierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductPriceTier::ProductPriceTier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ProductPriceTier)
}
ProductPriceTier::ProductPriceTier(const ProductPriceTier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  price_tier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price_tier().size() > 0) {
    price_tier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_tier_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ProductPriceTier)
}

void ProductPriceTier::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_tier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ProductPriceTier::~ProductPriceTier() {
  // @@protoc_insertion_point(destructor:proto.ProductPriceTier)
  SharedDtor();
}

void ProductPriceTier::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_tier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProductPriceTier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductPriceTier::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductPriceTier& ProductPriceTier::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductPriceTier* ProductPriceTier::New(::google::protobuf::Arena* arena) const {
  ProductPriceTier* n = new ProductPriceTier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductPriceTier::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProductPriceTier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProductPriceTier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ProductPriceTier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string product_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ProductPriceTier.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string price_tier = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price_tier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price_tier().data(), static_cast<int>(this->price_tier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ProductPriceTier.price_tier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ProductPriceTier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ProductPriceTier)
  return false;
#undef DO_
}

void ProductPriceTier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ProductPriceTier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ProductPriceTier.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->product_id(), output);
  }

  // string price_tier = 12;
  if (this->price_tier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price_tier().data(), static_cast<int>(this->price_tier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ProductPriceTier.price_tier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->price_tier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ProductPriceTier)
}

::google::protobuf::uint8* ProductPriceTier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProductPriceTier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 6;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ProductPriceTier.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->product_id(), target);
  }

  // string price_tier = 12;
  if (this->price_tier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price_tier().data(), static_cast<int>(this->price_tier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ProductPriceTier.price_tier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->price_tier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProductPriceTier)
  return target;
}

size_t ProductPriceTier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProductPriceTier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 6;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // string price_tier = 12;
  if (this->price_tier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price_tier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductPriceTier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ProductPriceTier)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductPriceTier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductPriceTier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ProductPriceTier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ProductPriceTier)
    MergeFrom(*source);
  }
}

void ProductPriceTier::MergeFrom(const ProductPriceTier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ProductPriceTier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.price_tier().size() > 0) {

    price_tier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_tier_);
  }
}

void ProductPriceTier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ProductPriceTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductPriceTier::CopyFrom(const ProductPriceTier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProductPriceTier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductPriceTier::IsInitialized() const {
  return true;
}

void ProductPriceTier::Swap(ProductPriceTier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductPriceTier::InternalSwap(ProductPriceTier* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  price_tier_.Swap(&other->price_tier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductPriceTier::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductPriceTier

// string product_id = 6;
void ProductPriceTier::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductPriceTier::product_id() const {
  // @@protoc_insertion_point(field_get:proto.ProductPriceTier.product_id)
  return product_id_.GetNoArena();
}
void ProductPriceTier::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ProductPriceTier.product_id)
}
#if LANG_CXX11
void ProductPriceTier::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ProductPriceTier.product_id)
}
#endif
void ProductPriceTier::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ProductPriceTier.product_id)
}
void ProductPriceTier::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ProductPriceTier.product_id)
}
::std::string* ProductPriceTier::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ProductPriceTier.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductPriceTier::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.ProductPriceTier.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductPriceTier::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ProductPriceTier.product_id)
}

// string price_tier = 12;
void ProductPriceTier::clear_price_tier() {
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductPriceTier::price_tier() const {
  // @@protoc_insertion_point(field_get:proto.ProductPriceTier.price_tier)
  return price_tier_.GetNoArena();
}
void ProductPriceTier::set_price_tier(const ::std::string& value) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ProductPriceTier.price_tier)
}
#if LANG_CXX11
void ProductPriceTier::set_price_tier(::std::string&& value) {
  
  price_tier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ProductPriceTier.price_tier)
}
#endif
void ProductPriceTier::set_price_tier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ProductPriceTier.price_tier)
}
void ProductPriceTier::set_price_tier(const char* value, size_t size) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ProductPriceTier.price_tier)
}
::std::string* ProductPriceTier::mutable_price_tier() {
  
  // @@protoc_insertion_point(field_mutable:proto.ProductPriceTier.price_tier)
  return price_tier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductPriceTier::release_price_tier() {
  // @@protoc_insertion_point(field_release:proto.ProductPriceTier.price_tier)
  
  return price_tier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductPriceTier::set_allocated_price_tier(::std::string* price_tier) {
  if (price_tier != NULL) {
    
  } else {
    
  }
  price_tier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_tier);
  // @@protoc_insertion_point(field_set_allocated:proto.ProductPriceTier.price_tier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResinCardData::kRemainRewardDaysFieldNumber;
const int ResinCardData::kExpireTimeFieldNumber;
const int ResinCardData::kLastDailyRewardTimeFieldNumber;
const int ResinCardData::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResinCardData::ResinCardData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResinCardData)
}
ResinCardData::ResinCardData(const ResinCardData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_daily_reward_time_, &from.last_daily_reward_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&expire_time_) -
    reinterpret_cast<char*>(&last_daily_reward_time_)) + sizeof(expire_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ResinCardData)
}

void ResinCardData::SharedCtor() {
  ::memset(&last_daily_reward_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expire_time_) -
      reinterpret_cast<char*>(&last_daily_reward_time_)) + sizeof(expire_time_));
  _cached_size_ = 0;
}

ResinCardData::~ResinCardData() {
  // @@protoc_insertion_point(destructor:proto.ResinCardData)
  SharedDtor();
}

void ResinCardData::SharedDtor() {
}

void ResinCardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResinCardData::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResinCardData& ResinCardData::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResinCardData* ResinCardData::New(::google::protobuf::Arena* arena) const {
  ResinCardData* n = new ResinCardData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResinCardData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResinCardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&last_daily_reward_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expire_time_) -
      reinterpret_cast<char*>(&last_daily_reward_time_)) + sizeof(expire_time_));
  _internal_metadata_.Clear();
}

bool ResinCardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResinCardData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 last_daily_reward_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_daily_reward_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 remain_reward_days = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remain_reward_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 expire_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResinCardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResinCardData)
  return false;
#undef DO_
}

void ResinCardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResinCardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_daily_reward_time = 2;
  if (this->last_daily_reward_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_daily_reward_time(), output);
  }

  // uint32 remain_reward_days = 3;
  if (this->remain_reward_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->remain_reward_days(), output);
  }

  // uint32 config_id = 7;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->config_id(), output);
  }

  // uint32 expire_time = 12;
  if (this->expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->expire_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResinCardData)
}

::google::protobuf::uint8* ResinCardData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResinCardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_daily_reward_time = 2;
  if (this->last_daily_reward_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_daily_reward_time(), target);
  }

  // uint32 remain_reward_days = 3;
  if (this->remain_reward_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->remain_reward_days(), target);
  }

  // uint32 config_id = 7;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->config_id(), target);
  }

  // uint32 expire_time = 12;
  if (this->expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->expire_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResinCardData)
  return target;
}

size_t ResinCardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResinCardData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 last_daily_reward_time = 2;
  if (this->last_daily_reward_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_daily_reward_time());
  }

  // uint32 remain_reward_days = 3;
  if (this->remain_reward_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remain_reward_days());
  }

  // uint32 config_id = 7;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 expire_time = 12;
  if (this->expire_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expire_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResinCardData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResinCardData)
  GOOGLE_DCHECK_NE(&from, this);
  const ResinCardData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResinCardData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResinCardData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResinCardData)
    MergeFrom(*source);
  }
}

void ResinCardData::MergeFrom(const ResinCardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResinCardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_daily_reward_time() != 0) {
    set_last_daily_reward_time(from.last_daily_reward_time());
  }
  if (from.remain_reward_days() != 0) {
    set_remain_reward_days(from.remain_reward_days());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.expire_time() != 0) {
    set_expire_time(from.expire_time());
  }
}

void ResinCardData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResinCardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResinCardData::CopyFrom(const ResinCardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResinCardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResinCardData::IsInitialized() const {
  return true;
}

void ResinCardData::Swap(ResinCardData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResinCardData::InternalSwap(ResinCardData* other) {
  using std::swap;
  swap(last_daily_reward_time_, other->last_daily_reward_time_);
  swap(remain_reward_days_, other->remain_reward_days_);
  swap(config_id_, other->config_id_);
  swap(expire_time_, other->expire_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResinCardData::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResinCardData

// uint32 remain_reward_days = 3;
void ResinCardData::clear_remain_reward_days() {
  remain_reward_days_ = 0u;
}
::google::protobuf::uint32 ResinCardData::remain_reward_days() const {
  // @@protoc_insertion_point(field_get:proto.ResinCardData.remain_reward_days)
  return remain_reward_days_;
}
void ResinCardData::set_remain_reward_days(::google::protobuf::uint32 value) {
  
  remain_reward_days_ = value;
  // @@protoc_insertion_point(field_set:proto.ResinCardData.remain_reward_days)
}

// uint32 expire_time = 12;
void ResinCardData::clear_expire_time() {
  expire_time_ = 0u;
}
::google::protobuf::uint32 ResinCardData::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.ResinCardData.expire_time)
  return expire_time_;
}
void ResinCardData::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ResinCardData.expire_time)
}

// uint32 last_daily_reward_time = 2;
void ResinCardData::clear_last_daily_reward_time() {
  last_daily_reward_time_ = 0u;
}
::google::protobuf::uint32 ResinCardData::last_daily_reward_time() const {
  // @@protoc_insertion_point(field_get:proto.ResinCardData.last_daily_reward_time)
  return last_daily_reward_time_;
}
void ResinCardData::set_last_daily_reward_time(::google::protobuf::uint32 value) {
  
  last_daily_reward_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ResinCardData.last_daily_reward_time)
}

// uint32 config_id = 7;
void ResinCardData::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 ResinCardData::config_id() const {
  // @@protoc_insertion_point(field_get:proto.ResinCardData.config_id)
  return config_id_;
}
void ResinCardData::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResinCardData.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRechargeDataNotify::kCardProductRemainDaysFieldNumber;
const int PlayerRechargeDataNotify::kProductPriceTierListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRechargeDataNotify::PlayerRechargeDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerRechargeDataNotify)
}
PlayerRechargeDataNotify::PlayerRechargeDataNotify(const PlayerRechargeDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      product_price_tier_list_(from.product_price_tier_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  card_product_remain_days_ = from.card_product_remain_days_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerRechargeDataNotify)
}

void PlayerRechargeDataNotify::SharedCtor() {
  card_product_remain_days_ = 0u;
  _cached_size_ = 0;
}

PlayerRechargeDataNotify::~PlayerRechargeDataNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerRechargeDataNotify)
  SharedDtor();
}

void PlayerRechargeDataNotify::SharedDtor() {
}

void PlayerRechargeDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRechargeDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRechargeDataNotify& PlayerRechargeDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerRechargeDataNotify* PlayerRechargeDataNotify::New(::google::protobuf::Arena* arena) const {
  PlayerRechargeDataNotify* n = new PlayerRechargeDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRechargeDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerRechargeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_price_tier_list_.Clear();
  card_product_remain_days_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerRechargeDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerRechargeDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ProductPriceTier product_price_tier_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product_price_tier_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 card_product_remain_days = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_product_remain_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerRechargeDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerRechargeDataNotify)
  return false;
#undef DO_
}

void PlayerRechargeDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerRechargeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ProductPriceTier product_price_tier_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_price_tier_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->product_price_tier_list(static_cast<int>(i)), output);
  }

  // uint32 card_product_remain_days = 12;
  if (this->card_product_remain_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->card_product_remain_days(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerRechargeDataNotify)
}

::google::protobuf::uint8* PlayerRechargeDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerRechargeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ProductPriceTier product_price_tier_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_price_tier_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->product_price_tier_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 card_product_remain_days = 12;
  if (this->card_product_remain_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->card_product_remain_days(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerRechargeDataNotify)
  return target;
}

size_t PlayerRechargeDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerRechargeDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ProductPriceTier product_price_tier_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->product_price_tier_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product_price_tier_list(static_cast<int>(i)));
    }
  }

  // uint32 card_product_remain_days = 12;
  if (this->card_product_remain_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_product_remain_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRechargeDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerRechargeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRechargeDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRechargeDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerRechargeDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerRechargeDataNotify)
    MergeFrom(*source);
  }
}

void PlayerRechargeDataNotify::MergeFrom(const PlayerRechargeDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerRechargeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_price_tier_list_.MergeFrom(from.product_price_tier_list_);
  if (from.card_product_remain_days() != 0) {
    set_card_product_remain_days(from.card_product_remain_days());
  }
}

void PlayerRechargeDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerRechargeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRechargeDataNotify::CopyFrom(const PlayerRechargeDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerRechargeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRechargeDataNotify::IsInitialized() const {
  return true;
}

void PlayerRechargeDataNotify::Swap(PlayerRechargeDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRechargeDataNotify::InternalSwap(PlayerRechargeDataNotify* other) {
  using std::swap;
  product_price_tier_list_.InternalSwap(&other->product_price_tier_list_);
  swap(card_product_remain_days_, other->card_product_remain_days_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRechargeDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRechargeDataNotify

// uint32 card_product_remain_days = 12;
void PlayerRechargeDataNotify::clear_card_product_remain_days() {
  card_product_remain_days_ = 0u;
}
::google::protobuf::uint32 PlayerRechargeDataNotify::card_product_remain_days() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRechargeDataNotify.card_product_remain_days)
  return card_product_remain_days_;
}
void PlayerRechargeDataNotify::set_card_product_remain_days(::google::protobuf::uint32 value) {
  
  card_product_remain_days_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRechargeDataNotify.card_product_remain_days)
}

// repeated .proto.ProductPriceTier product_price_tier_list = 11;
int PlayerRechargeDataNotify::product_price_tier_list_size() const {
  return product_price_tier_list_.size();
}
void PlayerRechargeDataNotify::clear_product_price_tier_list() {
  product_price_tier_list_.Clear();
}
const ::proto::ProductPriceTier& PlayerRechargeDataNotify::product_price_tier_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerRechargeDataNotify.product_price_tier_list)
  return product_price_tier_list_.Get(index);
}
::proto::ProductPriceTier* PlayerRechargeDataNotify::mutable_product_price_tier_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerRechargeDataNotify.product_price_tier_list)
  return product_price_tier_list_.Mutable(index);
}
::proto::ProductPriceTier* PlayerRechargeDataNotify::add_product_price_tier_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerRechargeDataNotify.product_price_tier_list)
  return product_price_tier_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ProductPriceTier >*
PlayerRechargeDataNotify::mutable_product_price_tier_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerRechargeDataNotify.product_price_tier_list)
  return &product_price_tier_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ProductPriceTier >&
PlayerRechargeDataNotify::product_price_tier_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerRechargeDataNotify.product_price_tier_list)
  return product_price_tier_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderDisplayNotify::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderDisplayNotify::OrderDisplayNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OrderDisplayNotify)
}
OrderDisplayNotify::OrderDisplayNotify(const OrderDisplayNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_id_ = from.order_id_;
  // @@protoc_insertion_point(copy_constructor:proto.OrderDisplayNotify)
}

void OrderDisplayNotify::SharedCtor() {
  order_id_ = 0u;
  _cached_size_ = 0;
}

OrderDisplayNotify::~OrderDisplayNotify() {
  // @@protoc_insertion_point(destructor:proto.OrderDisplayNotify)
  SharedDtor();
}

void OrderDisplayNotify::SharedDtor() {
}

void OrderDisplayNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderDisplayNotify::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderDisplayNotify& OrderDisplayNotify::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderDisplayNotify* OrderDisplayNotify::New(::google::protobuf::Arena* arena) const {
  OrderDisplayNotify* n = new OrderDisplayNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderDisplayNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OrderDisplayNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_id_ = 0u;
  _internal_metadata_.Clear();
}

bool OrderDisplayNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OrderDisplayNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 order_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OrderDisplayNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OrderDisplayNotify)
  return false;
#undef DO_
}

void OrderDisplayNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OrderDisplayNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->order_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OrderDisplayNotify)
}

::google::protobuf::uint8* OrderDisplayNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OrderDisplayNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->order_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OrderDisplayNotify)
  return target;
}

size_t OrderDisplayNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OrderDisplayNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderDisplayNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OrderDisplayNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderDisplayNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderDisplayNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OrderDisplayNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OrderDisplayNotify)
    MergeFrom(*source);
  }
}

void OrderDisplayNotify::MergeFrom(const OrderDisplayNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OrderDisplayNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
}

void OrderDisplayNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OrderDisplayNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderDisplayNotify::CopyFrom(const OrderDisplayNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OrderDisplayNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderDisplayNotify::IsInitialized() const {
  return true;
}

void OrderDisplayNotify::Swap(OrderDisplayNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderDisplayNotify::InternalSwap(OrderDisplayNotify* other) {
  using std::swap;
  swap(order_id_, other->order_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderDisplayNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderDisplayNotify

// uint32 order_id = 1;
void OrderDisplayNotify::clear_order_id() {
  order_id_ = 0u;
}
::google::protobuf::uint32 OrderDisplayNotify::order_id() const {
  // @@protoc_insertion_point(field_get:proto.OrderDisplayNotify.order_id)
  return order_id_;
}
void OrderDisplayNotify::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OrderDisplayNotify.order_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportTrackingIOInfoNotify::kRydevicetypeFieldNumber;
const int ReportTrackingIOInfoNotify::kDeviceidFieldNumber;
const int ReportTrackingIOInfoNotify::kClientTzFieldNumber;
const int ReportTrackingIOInfoNotify::kAppidFieldNumber;
const int ReportTrackingIOInfoNotify::kMacFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportTrackingIOInfoNotify::ReportTrackingIOInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReportTrackingIOInfoNotify)
}
ReportTrackingIOInfoNotify::ReportTrackingIOInfoNotify(const ReportTrackingIOInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  rydevicetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rydevicetype().size() > 0) {
    rydevicetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rydevicetype_);
  }
  client_tz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_tz().size() > 0) {
    client_tz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_tz_);
  }
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appid().size() > 0) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ReportTrackingIOInfoNotify)
}

void ReportTrackingIOInfoNotify::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rydevicetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_tz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReportTrackingIOInfoNotify::~ReportTrackingIOInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.ReportTrackingIOInfoNotify)
  SharedDtor();
}

void ReportTrackingIOInfoNotify::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rydevicetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_tz_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReportTrackingIOInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportTrackingIOInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportTrackingIOInfoNotify& ReportTrackingIOInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReportTrackingIOInfoNotify* ReportTrackingIOInfoNotify::New(::google::protobuf::Arena* arena) const {
  ReportTrackingIOInfoNotify* n = new ReportTrackingIOInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportTrackingIOInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReportTrackingIOInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rydevicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_tz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReportTrackingIOInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReportTrackingIOInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string deviceid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReportTrackingIOInfoNotify.deviceid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rydevicetype = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rydevicetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rydevicetype().data(), static_cast<int>(this->rydevicetype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReportTrackingIOInfoNotify.rydevicetype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_tz = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_tz()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_tz().data(), static_cast<int>(this->client_tz().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReportTrackingIOInfoNotify.client_tz"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appid().data(), static_cast<int>(this->appid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReportTrackingIOInfoNotify.appid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mac = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReportTrackingIOInfoNotify.mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReportTrackingIOInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReportTrackingIOInfoNotify)
  return false;
#undef DO_
}

void ReportTrackingIOInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReportTrackingIOInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // string rydevicetype = 12;
  if (this->rydevicetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rydevicetype().data(), static_cast<int>(this->rydevicetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.rydevicetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->rydevicetype(), output);
  }

  // string client_tz = 13;
  if (this->client_tz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_tz().data(), static_cast<int>(this->client_tz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.client_tz");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->client_tz(), output);
  }

  // string appid = 14;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), static_cast<int>(this->appid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.appid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->appid(), output);
  }

  // string mac = 15;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->mac(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReportTrackingIOInfoNotify)
}

::google::protobuf::uint8* ReportTrackingIOInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReportTrackingIOInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // string rydevicetype = 12;
  if (this->rydevicetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rydevicetype().data(), static_cast<int>(this->rydevicetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.rydevicetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->rydevicetype(), target);
  }

  // string client_tz = 13;
  if (this->client_tz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_tz().data(), static_cast<int>(this->client_tz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.client_tz");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->client_tz(), target);
  }

  // string appid = 14;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), static_cast<int>(this->appid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.appid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->appid(), target);
  }

  // string mac = 15;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReportTrackingIOInfoNotify.mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->mac(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReportTrackingIOInfoNotify)
  return target;
}

size_t ReportTrackingIOInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReportTrackingIOInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string deviceid = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string rydevicetype = 12;
  if (this->rydevicetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rydevicetype());
  }

  // string client_tz = 13;
  if (this->client_tz().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_tz());
  }

  // string appid = 14;
  if (this->appid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  // string mac = 15;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportTrackingIOInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReportTrackingIOInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportTrackingIOInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportTrackingIOInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReportTrackingIOInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReportTrackingIOInfoNotify)
    MergeFrom(*source);
  }
}

void ReportTrackingIOInfoNotify::MergeFrom(const ReportTrackingIOInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReportTrackingIOInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.rydevicetype().size() > 0) {

    rydevicetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rydevicetype_);
  }
  if (from.client_tz().size() > 0) {

    client_tz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_tz_);
  }
  if (from.appid().size() > 0) {

    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
}

void ReportTrackingIOInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReportTrackingIOInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportTrackingIOInfoNotify::CopyFrom(const ReportTrackingIOInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReportTrackingIOInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportTrackingIOInfoNotify::IsInitialized() const {
  return true;
}

void ReportTrackingIOInfoNotify::Swap(ReportTrackingIOInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportTrackingIOInfoNotify::InternalSwap(ReportTrackingIOInfoNotify* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  rydevicetype_.Swap(&other->rydevicetype_);
  client_tz_.Swap(&other->client_tz_);
  appid_.Swap(&other->appid_);
  mac_.Swap(&other->mac_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportTrackingIOInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportTrackingIOInfoNotify

// string rydevicetype = 12;
void ReportTrackingIOInfoNotify::clear_rydevicetype() {
  rydevicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReportTrackingIOInfoNotify::rydevicetype() const {
  // @@protoc_insertion_point(field_get:proto.ReportTrackingIOInfoNotify.rydevicetype)
  return rydevicetype_.GetNoArena();
}
void ReportTrackingIOInfoNotify::set_rydevicetype(const ::std::string& value) {
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReportTrackingIOInfoNotify.rydevicetype)
}
#if LANG_CXX11
void ReportTrackingIOInfoNotify::set_rydevicetype(::std::string&& value) {
  
  rydevicetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ReportTrackingIOInfoNotify.rydevicetype)
}
#endif
void ReportTrackingIOInfoNotify::set_rydevicetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReportTrackingIOInfoNotify.rydevicetype)
}
void ReportTrackingIOInfoNotify::set_rydevicetype(const char* value, size_t size) {
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReportTrackingIOInfoNotify.rydevicetype)
}
::std::string* ReportTrackingIOInfoNotify::mutable_rydevicetype() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReportTrackingIOInfoNotify.rydevicetype)
  return rydevicetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReportTrackingIOInfoNotify::release_rydevicetype() {
  // @@protoc_insertion_point(field_release:proto.ReportTrackingIOInfoNotify.rydevicetype)
  
  return rydevicetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportTrackingIOInfoNotify::set_allocated_rydevicetype(::std::string* rydevicetype) {
  if (rydevicetype != NULL) {
    
  } else {
    
  }
  rydevicetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rydevicetype);
  // @@protoc_insertion_point(field_set_allocated:proto.ReportTrackingIOInfoNotify.rydevicetype)
}

// string deviceid = 1;
void ReportTrackingIOInfoNotify::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReportTrackingIOInfoNotify::deviceid() const {
  // @@protoc_insertion_point(field_get:proto.ReportTrackingIOInfoNotify.deviceid)
  return deviceid_.GetNoArena();
}
void ReportTrackingIOInfoNotify::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReportTrackingIOInfoNotify.deviceid)
}
#if LANG_CXX11
void ReportTrackingIOInfoNotify::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ReportTrackingIOInfoNotify.deviceid)
}
#endif
void ReportTrackingIOInfoNotify::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReportTrackingIOInfoNotify.deviceid)
}
void ReportTrackingIOInfoNotify::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReportTrackingIOInfoNotify.deviceid)
}
::std::string* ReportTrackingIOInfoNotify::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReportTrackingIOInfoNotify.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReportTrackingIOInfoNotify::release_deviceid() {
  // @@protoc_insertion_point(field_release:proto.ReportTrackingIOInfoNotify.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportTrackingIOInfoNotify::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:proto.ReportTrackingIOInfoNotify.deviceid)
}

// string client_tz = 13;
void ReportTrackingIOInfoNotify::clear_client_tz() {
  client_tz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReportTrackingIOInfoNotify::client_tz() const {
  // @@protoc_insertion_point(field_get:proto.ReportTrackingIOInfoNotify.client_tz)
  return client_tz_.GetNoArena();
}
void ReportTrackingIOInfoNotify::set_client_tz(const ::std::string& value) {
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReportTrackingIOInfoNotify.client_tz)
}
#if LANG_CXX11
void ReportTrackingIOInfoNotify::set_client_tz(::std::string&& value) {
  
  client_tz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ReportTrackingIOInfoNotify.client_tz)
}
#endif
void ReportTrackingIOInfoNotify::set_client_tz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReportTrackingIOInfoNotify.client_tz)
}
void ReportTrackingIOInfoNotify::set_client_tz(const char* value, size_t size) {
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReportTrackingIOInfoNotify.client_tz)
}
::std::string* ReportTrackingIOInfoNotify::mutable_client_tz() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReportTrackingIOInfoNotify.client_tz)
  return client_tz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReportTrackingIOInfoNotify::release_client_tz() {
  // @@protoc_insertion_point(field_release:proto.ReportTrackingIOInfoNotify.client_tz)
  
  return client_tz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportTrackingIOInfoNotify::set_allocated_client_tz(::std::string* client_tz) {
  if (client_tz != NULL) {
    
  } else {
    
  }
  client_tz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_tz);
  // @@protoc_insertion_point(field_set_allocated:proto.ReportTrackingIOInfoNotify.client_tz)
}

// string appid = 14;
void ReportTrackingIOInfoNotify::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReportTrackingIOInfoNotify::appid() const {
  // @@protoc_insertion_point(field_get:proto.ReportTrackingIOInfoNotify.appid)
  return appid_.GetNoArena();
}
void ReportTrackingIOInfoNotify::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReportTrackingIOInfoNotify.appid)
}
#if LANG_CXX11
void ReportTrackingIOInfoNotify::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ReportTrackingIOInfoNotify.appid)
}
#endif
void ReportTrackingIOInfoNotify::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReportTrackingIOInfoNotify.appid)
}
void ReportTrackingIOInfoNotify::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReportTrackingIOInfoNotify.appid)
}
::std::string* ReportTrackingIOInfoNotify::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReportTrackingIOInfoNotify.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReportTrackingIOInfoNotify::release_appid() {
  // @@protoc_insertion_point(field_release:proto.ReportTrackingIOInfoNotify.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportTrackingIOInfoNotify::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:proto.ReportTrackingIOInfoNotify.appid)
}

// string mac = 15;
void ReportTrackingIOInfoNotify::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReportTrackingIOInfoNotify::mac() const {
  // @@protoc_insertion_point(field_get:proto.ReportTrackingIOInfoNotify.mac)
  return mac_.GetNoArena();
}
void ReportTrackingIOInfoNotify::set_mac(const ::std::string& value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReportTrackingIOInfoNotify.mac)
}
#if LANG_CXX11
void ReportTrackingIOInfoNotify::set_mac(::std::string&& value) {
  
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ReportTrackingIOInfoNotify.mac)
}
#endif
void ReportTrackingIOInfoNotify::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReportTrackingIOInfoNotify.mac)
}
void ReportTrackingIOInfoNotify::set_mac(const char* value, size_t size) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReportTrackingIOInfoNotify.mac)
}
::std::string* ReportTrackingIOInfoNotify::mutable_mac() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReportTrackingIOInfoNotify.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReportTrackingIOInfoNotify::release_mac() {
  // @@protoc_insertion_point(field_release:proto.ReportTrackingIOInfoNotify.mac)
  
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportTrackingIOInfoNotify::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    
  } else {
    
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:proto.ReportTrackingIOInfoNotify.mac)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeResinCardDailyRewardReq::kProductConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeResinCardDailyRewardReq::TakeResinCardDailyRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeResinCardDailyRewardReq)
}
TakeResinCardDailyRewardReq::TakeResinCardDailyRewardReq(const TakeResinCardDailyRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_config_id_ = from.product_config_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeResinCardDailyRewardReq)
}

void TakeResinCardDailyRewardReq::SharedCtor() {
  product_config_id_ = 0u;
  _cached_size_ = 0;
}

TakeResinCardDailyRewardReq::~TakeResinCardDailyRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakeResinCardDailyRewardReq)
  SharedDtor();
}

void TakeResinCardDailyRewardReq::SharedDtor() {
}

void TakeResinCardDailyRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeResinCardDailyRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeResinCardDailyRewardReq& TakeResinCardDailyRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeResinCardDailyRewardReq* TakeResinCardDailyRewardReq::New(::google::protobuf::Arena* arena) const {
  TakeResinCardDailyRewardReq* n = new TakeResinCardDailyRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeResinCardDailyRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeResinCardDailyRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_config_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TakeResinCardDailyRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeResinCardDailyRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 product_config_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &product_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeResinCardDailyRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeResinCardDailyRewardReq)
  return false;
#undef DO_
}

void TakeResinCardDailyRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeResinCardDailyRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 product_config_id = 14;
  if (this->product_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->product_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeResinCardDailyRewardReq)
}

::google::protobuf::uint8* TakeResinCardDailyRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeResinCardDailyRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 product_config_id = 14;
  if (this->product_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->product_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeResinCardDailyRewardReq)
  return target;
}

size_t TakeResinCardDailyRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeResinCardDailyRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 product_config_id = 14;
  if (this->product_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->product_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeResinCardDailyRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeResinCardDailyRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeResinCardDailyRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeResinCardDailyRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeResinCardDailyRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeResinCardDailyRewardReq)
    MergeFrom(*source);
  }
}

void TakeResinCardDailyRewardReq::MergeFrom(const TakeResinCardDailyRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeResinCardDailyRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_config_id() != 0) {
    set_product_config_id(from.product_config_id());
  }
}

void TakeResinCardDailyRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeResinCardDailyRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeResinCardDailyRewardReq::CopyFrom(const TakeResinCardDailyRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeResinCardDailyRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeResinCardDailyRewardReq::IsInitialized() const {
  return true;
}

void TakeResinCardDailyRewardReq::Swap(TakeResinCardDailyRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeResinCardDailyRewardReq::InternalSwap(TakeResinCardDailyRewardReq* other) {
  using std::swap;
  swap(product_config_id_, other->product_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeResinCardDailyRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeResinCardDailyRewardReq

// uint32 product_config_id = 14;
void TakeResinCardDailyRewardReq::clear_product_config_id() {
  product_config_id_ = 0u;
}
::google::protobuf::uint32 TakeResinCardDailyRewardReq::product_config_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeResinCardDailyRewardReq.product_config_id)
  return product_config_id_;
}
void TakeResinCardDailyRewardReq::set_product_config_id(::google::protobuf::uint32 value) {
  
  product_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeResinCardDailyRewardReq.product_config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeResinCardDailyRewardRsp::kItemVecFieldNumber;
const int TakeResinCardDailyRewardRsp::kRetcodeFieldNumber;
const int TakeResinCardDailyRewardRsp::kProductConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeResinCardDailyRewardRsp::TakeResinCardDailyRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeResinCardDailyRewardRsp)
}
TakeResinCardDailyRewardRsp::TakeResinCardDailyRewardRsp(const TakeResinCardDailyRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_vec_(from.item_vec_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&product_config_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(product_config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeResinCardDailyRewardRsp)
}

void TakeResinCardDailyRewardRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&product_config_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(product_config_id_));
  _cached_size_ = 0;
}

TakeResinCardDailyRewardRsp::~TakeResinCardDailyRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeResinCardDailyRewardRsp)
  SharedDtor();
}

void TakeResinCardDailyRewardRsp::SharedDtor() {
}

void TakeResinCardDailyRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeResinCardDailyRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeResinCardDailyRewardRsp& TakeResinCardDailyRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeResinCardDailyRewardRsp* TakeResinCardDailyRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakeResinCardDailyRewardRsp* n = new TakeResinCardDailyRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeResinCardDailyRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeResinCardDailyRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_vec_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&product_config_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(product_config_id_));
  _internal_metadata_.Clear();
}

bool TakeResinCardDailyRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeResinCardDailyRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_vec = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 product_config_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &product_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeResinCardDailyRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeResinCardDailyRewardRsp)
  return false;
#undef DO_
}

void TakeResinCardDailyRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeResinCardDailyRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // repeated .proto.ItemParam item_vec = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_vec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item_vec(static_cast<int>(i)), output);
  }

  // uint32 product_config_id = 12;
  if (this->product_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->product_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeResinCardDailyRewardRsp)
}

::google::protobuf::uint8* TakeResinCardDailyRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeResinCardDailyRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // repeated .proto.ItemParam item_vec = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_vec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->item_vec(static_cast<int>(i)), deterministic, target);
  }

  // uint32 product_config_id = 12;
  if (this->product_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->product_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeResinCardDailyRewardRsp)
  return target;
}

size_t TakeResinCardDailyRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeResinCardDailyRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_vec = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->item_vec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_vec(static_cast<int>(i)));
    }
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 product_config_id = 12;
  if (this->product_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->product_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeResinCardDailyRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeResinCardDailyRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeResinCardDailyRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeResinCardDailyRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeResinCardDailyRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeResinCardDailyRewardRsp)
    MergeFrom(*source);
  }
}

void TakeResinCardDailyRewardRsp::MergeFrom(const TakeResinCardDailyRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeResinCardDailyRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_vec_.MergeFrom(from.item_vec_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.product_config_id() != 0) {
    set_product_config_id(from.product_config_id());
  }
}

void TakeResinCardDailyRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeResinCardDailyRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeResinCardDailyRewardRsp::CopyFrom(const TakeResinCardDailyRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeResinCardDailyRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeResinCardDailyRewardRsp::IsInitialized() const {
  return true;
}

void TakeResinCardDailyRewardRsp::Swap(TakeResinCardDailyRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeResinCardDailyRewardRsp::InternalSwap(TakeResinCardDailyRewardRsp* other) {
  using std::swap;
  item_vec_.InternalSwap(&other->item_vec_);
  swap(retcode_, other->retcode_);
  swap(product_config_id_, other->product_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeResinCardDailyRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeResinCardDailyRewardRsp

// repeated .proto.ItemParam item_vec = 6;
int TakeResinCardDailyRewardRsp::item_vec_size() const {
  return item_vec_.size();
}
void TakeResinCardDailyRewardRsp::clear_item_vec() {
  item_vec_.Clear();
}
const ::proto::ItemParam& TakeResinCardDailyRewardRsp::item_vec(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeResinCardDailyRewardRsp.item_vec)
  return item_vec_.Get(index);
}
::proto::ItemParam* TakeResinCardDailyRewardRsp::mutable_item_vec(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TakeResinCardDailyRewardRsp.item_vec)
  return item_vec_.Mutable(index);
}
::proto::ItemParam* TakeResinCardDailyRewardRsp::add_item_vec() {
  // @@protoc_insertion_point(field_add:proto.TakeResinCardDailyRewardRsp.item_vec)
  return item_vec_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TakeResinCardDailyRewardRsp::mutable_item_vec() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeResinCardDailyRewardRsp.item_vec)
  return &item_vec_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TakeResinCardDailyRewardRsp::item_vec() const {
  // @@protoc_insertion_point(field_list:proto.TakeResinCardDailyRewardRsp.item_vec)
  return item_vec_;
}

// int32 retcode = 4;
void TakeResinCardDailyRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeResinCardDailyRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeResinCardDailyRewardRsp.retcode)
  return retcode_;
}
void TakeResinCardDailyRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeResinCardDailyRewardRsp.retcode)
}

// uint32 product_config_id = 12;
void TakeResinCardDailyRewardRsp::clear_product_config_id() {
  product_config_id_ = 0u;
}
::google::protobuf::uint32 TakeResinCardDailyRewardRsp::product_config_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeResinCardDailyRewardRsp.product_config_id)
  return product_config_id_;
}
void TakeResinCardDailyRewardRsp::set_product_config_id(::google::protobuf::uint32 value) {
  
  product_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeResinCardDailyRewardRsp.product_config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResinCardDataUpdateNotify::kTodayStartTimeFieldNumber;
const int ResinCardDataUpdateNotify::kCardDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResinCardDataUpdateNotify::ResinCardDataUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResinCardDataUpdateNotify)
}
ResinCardDataUpdateNotify::ResinCardDataUpdateNotify(const ResinCardDataUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      card_data_list_(from.card_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  today_start_time_ = from.today_start_time_;
  // @@protoc_insertion_point(copy_constructor:proto.ResinCardDataUpdateNotify)
}

void ResinCardDataUpdateNotify::SharedCtor() {
  today_start_time_ = 0u;
  _cached_size_ = 0;
}

ResinCardDataUpdateNotify::~ResinCardDataUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.ResinCardDataUpdateNotify)
  SharedDtor();
}

void ResinCardDataUpdateNotify::SharedDtor() {
}

void ResinCardDataUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResinCardDataUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResinCardDataUpdateNotify& ResinCardDataUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResinCardDataUpdateNotify* ResinCardDataUpdateNotify::New(::google::protobuf::Arena* arena) const {
  ResinCardDataUpdateNotify* n = new ResinCardDataUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResinCardDataUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResinCardDataUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_data_list_.Clear();
  today_start_time_ = 0u;
  _internal_metadata_.Clear();
}

bool ResinCardDataUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResinCardDataUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ResinCardData card_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_card_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 today_start_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &today_start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResinCardDataUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResinCardDataUpdateNotify)
  return false;
#undef DO_
}

void ResinCardDataUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResinCardDataUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ResinCardData card_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->card_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->card_data_list(static_cast<int>(i)), output);
  }

  // uint32 today_start_time = 6;
  if (this->today_start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->today_start_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResinCardDataUpdateNotify)
}

::google::protobuf::uint8* ResinCardDataUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResinCardDataUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ResinCardData card_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->card_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->card_data_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 today_start_time = 6;
  if (this->today_start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->today_start_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResinCardDataUpdateNotify)
  return target;
}

size_t ResinCardDataUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResinCardDataUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ResinCardData card_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->card_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->card_data_list(static_cast<int>(i)));
    }
  }

  // uint32 today_start_time = 6;
  if (this->today_start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->today_start_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResinCardDataUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResinCardDataUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ResinCardDataUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResinCardDataUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResinCardDataUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResinCardDataUpdateNotify)
    MergeFrom(*source);
  }
}

void ResinCardDataUpdateNotify::MergeFrom(const ResinCardDataUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResinCardDataUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  card_data_list_.MergeFrom(from.card_data_list_);
  if (from.today_start_time() != 0) {
    set_today_start_time(from.today_start_time());
  }
}

void ResinCardDataUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResinCardDataUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResinCardDataUpdateNotify::CopyFrom(const ResinCardDataUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResinCardDataUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResinCardDataUpdateNotify::IsInitialized() const {
  return true;
}

void ResinCardDataUpdateNotify::Swap(ResinCardDataUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResinCardDataUpdateNotify::InternalSwap(ResinCardDataUpdateNotify* other) {
  using std::swap;
  card_data_list_.InternalSwap(&other->card_data_list_);
  swap(today_start_time_, other->today_start_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResinCardDataUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResinCardDataUpdateNotify

// uint32 today_start_time = 6;
void ResinCardDataUpdateNotify::clear_today_start_time() {
  today_start_time_ = 0u;
}
::google::protobuf::uint32 ResinCardDataUpdateNotify::today_start_time() const {
  // @@protoc_insertion_point(field_get:proto.ResinCardDataUpdateNotify.today_start_time)
  return today_start_time_;
}
void ResinCardDataUpdateNotify::set_today_start_time(::google::protobuf::uint32 value) {
  
  today_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ResinCardDataUpdateNotify.today_start_time)
}

// repeated .proto.ResinCardData card_data_list = 2;
int ResinCardDataUpdateNotify::card_data_list_size() const {
  return card_data_list_.size();
}
void ResinCardDataUpdateNotify::clear_card_data_list() {
  card_data_list_.Clear();
}
const ::proto::ResinCardData& ResinCardDataUpdateNotify::card_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ResinCardDataUpdateNotify.card_data_list)
  return card_data_list_.Get(index);
}
::proto::ResinCardData* ResinCardDataUpdateNotify::mutable_card_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ResinCardDataUpdateNotify.card_data_list)
  return card_data_list_.Mutable(index);
}
::proto::ResinCardData* ResinCardDataUpdateNotify::add_card_data_list() {
  // @@protoc_insertion_point(field_add:proto.ResinCardDataUpdateNotify.card_data_list)
  return card_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ResinCardData >*
ResinCardDataUpdateNotify::mutable_card_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ResinCardDataUpdateNotify.card_data_list)
  return &card_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ResinCardData >&
ResinCardDataUpdateNotify::card_data_list() const {
  // @@protoc_insertion_point(field_list:proto.ResinCardDataUpdateNotify.card_data_list)
  return card_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
