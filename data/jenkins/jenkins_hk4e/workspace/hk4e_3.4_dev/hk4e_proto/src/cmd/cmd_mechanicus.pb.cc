// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_mechanicus.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_mechanicus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class MechanicusInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusInfo>
     _instance;
} _MechanicusInfo_default_instance_;
class GetMechanicusInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetMechanicusInfoReq>
     _instance;
} _GetMechanicusInfoReq_default_instance_;
class GetMechanicusInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetMechanicusInfoRsp>
     _instance;
} _GetMechanicusInfoRsp_default_instance_;
class MechanicusSequenceOpenNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusSequenceOpenNotify>
     _instance;
} _MechanicusSequenceOpenNotify_default_instance_;
class MechanicusCoinNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusCoinNotify>
     _instance;
} _MechanicusCoinNotify_default_instance_;
class MechanicusOpenNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusOpenNotify>
     _instance;
} _MechanicusOpenNotify_default_instance_;
class MechanicusCloseNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusCloseNotify>
     _instance;
} _MechanicusCloseNotify_default_instance_;
class MechanicusUnlockGearReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusUnlockGearReq>
     _instance;
} _MechanicusUnlockGearReq_default_instance_;
class MechanicusUnlockGearRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusUnlockGearRsp>
     _instance;
} _MechanicusUnlockGearRsp_default_instance_;
class MechanicusLevelupGearReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusLevelupGearReq>
     _instance;
} _MechanicusLevelupGearReq_default_instance_;
class MechanicusLevelupGearRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusLevelupGearRsp>
     _instance;
} _MechanicusLevelupGearRsp_default_instance_;
class EnterMechanicusDungeonReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterMechanicusDungeonReq>
     _instance;
} _EnterMechanicusDungeonReq_default_instance_;
class EnterMechanicusDungeonRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterMechanicusDungeonRsp>
     _instance;
} _EnterMechanicusDungeonRsp_default_instance_;
class MechanicusCandidateTeamCreateReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusCandidateTeamCreateReq>
     _instance;
} _MechanicusCandidateTeamCreateReq_default_instance_;
class MechanicusCandidateTeamCreateRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MechanicusCandidateTeamCreateRsp>
     _instance;
} _MechanicusCandidateTeamCreateRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5fmechanicus_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, gear_level_pair_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, open_sequence_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, coin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, punish_over_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, mechanicus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, finish_difficult_level_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusInfo, is_finish_teach_dungeon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMechanicusInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMechanicusInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMechanicusInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMechanicusInfoRsp, mechanicus_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusSequenceOpenNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusSequenceOpenNotify, mechanicus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusSequenceOpenNotify, sequence_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCoinNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCoinNotify, mechanicus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCoinNotify, coin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusOpenNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusOpenNotify, mechanicus_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCloseNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCloseNotify, mechanicus_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusUnlockGearReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusUnlockGearReq, mechanicus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusUnlockGearReq, gear_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusUnlockGearRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusUnlockGearRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusUnlockGearRsp, mechanicus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusUnlockGearRsp, gear_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearReq, gear_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearReq, mechanicus_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearRsp, gear_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearRsp, mechanicus_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearRsp, after_gear_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusLevelupGearRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterMechanicusDungeonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterMechanicusDungeonReq, difficult_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterMechanicusDungeonRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterMechanicusDungeonRsp, wrong_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterMechanicusDungeonRsp, difficult_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterMechanicusDungeonRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterMechanicusDungeonRsp, dungeon_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCandidateTeamCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCandidateTeamCreateReq, difficult_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCandidateTeamCreateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCandidateTeamCreateRsp, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCandidateTeamCreateRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MechanicusCandidateTeamCreateRsp, difficult_level_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MechanicusInfo)},
  { 12, -1, sizeof(GetMechanicusInfoReq)},
  { 17, -1, sizeof(GetMechanicusInfoRsp)},
  { 24, -1, sizeof(MechanicusSequenceOpenNotify)},
  { 31, -1, sizeof(MechanicusCoinNotify)},
  { 38, -1, sizeof(MechanicusOpenNotify)},
  { 44, -1, sizeof(MechanicusCloseNotify)},
  { 50, -1, sizeof(MechanicusUnlockGearReq)},
  { 57, -1, sizeof(MechanicusUnlockGearRsp)},
  { 65, -1, sizeof(MechanicusLevelupGearReq)},
  { 72, -1, sizeof(MechanicusLevelupGearRsp)},
  { 81, -1, sizeof(EnterMechanicusDungeonReq)},
  { 87, -1, sizeof(EnterMechanicusDungeonRsp)},
  { 96, -1, sizeof(MechanicusCandidateTeamCreateReq)},
  { 102, -1, sizeof(MechanicusCandidateTeamCreateRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetMechanicusInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetMechanicusInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusSequenceOpenNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusCoinNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusOpenNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusCloseNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusUnlockGearReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusUnlockGearRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusLevelupGearReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusLevelupGearRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterMechanicusDungeonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterMechanicusDungeonRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusCandidateTeamCreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MechanicusCandidateTeamCreateRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_mechanicus.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _MechanicusInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusInfo_default_instance_);_GetMechanicusInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetMechanicusInfoReq_default_instance_);_GetMechanicusInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetMechanicusInfoRsp_default_instance_);_MechanicusSequenceOpenNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusSequenceOpenNotify_default_instance_);_MechanicusCoinNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusCoinNotify_default_instance_);_MechanicusOpenNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusOpenNotify_default_instance_);_MechanicusCloseNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusCloseNotify_default_instance_);_MechanicusUnlockGearReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusUnlockGearReq_default_instance_);_MechanicusUnlockGearRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusUnlockGearRsp_default_instance_);_MechanicusLevelupGearReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusLevelupGearReq_default_instance_);_MechanicusLevelupGearRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusLevelupGearRsp_default_instance_);_EnterMechanicusDungeonReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterMechanicusDungeonReq_default_instance_);_EnterMechanicusDungeonRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterMechanicusDungeonRsp_default_instance_);_MechanicusCandidateTeamCreateReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusCandidateTeamCreateReq_default_instance_);_MechanicusCandidateTeamCreateRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MechanicusCandidateTeamCreateRsp_default_instance_);_GetMechanicusInfoRsp_default_instance_._instance.get_mutable()->mechanicus_info_ = const_cast< ::proto::MechanicusInfo*>(
      ::proto::MechanicusInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030cmd/cmd_mechanicus.proto\022\005proto\032\014defin"
      "e.proto\"\345\001\n\016MechanicusInfo\022/\n\024gear_level"
      "_pair_list\030\016 \003(\0132\021.proto.Uint32Pair\022\035\n\025o"
      "pen_sequence_id_list\030\007 \003(\r\022\014\n\004coin\030\010 \001(\r"
      "\022\030\n\020punish_over_time\030\014 \001(\r\022\025\n\rmechanicus"
      "_id\030\n \001(\r\022#\n\033finish_difficult_level_list"
      "\030\r \003(\r\022\037\n\027is_finish_teach_dungeon\030\004 \001(\010\""
      "\026\n\024GetMechanicusInfoReq\"W\n\024GetMechanicus"
      "InfoRsp\022\017\n\007retcode\030\016 \001(\005\022.\n\017mechanicus_i"
      "nfo\030\017 \001(\0132\025.proto.MechanicusInfo\"J\n\034Mech"
      "anicusSequenceOpenNotify\022\025\n\rmechanicus_i"
      "d\030\010 \001(\r\022\023\n\013sequence_id\030\007 \001(\r\";\n\024Mechanic"
      "usCoinNotify\022\025\n\rmechanicus_id\030\007 \001(\r\022\014\n\004c"
      "oin\030\004 \001(\r\"-\n\024MechanicusOpenNotify\022\025\n\rmec"
      "hanicus_id\030\002 \001(\r\".\n\025MechanicusCloseNotif"
      "y\022\025\n\rmechanicus_id\030\006 \001(\r\"A\n\027MechanicusUn"
      "lockGearReq\022\025\n\rmechanicus_id\030\007 \001(\r\022\017\n\007ge"
      "ar_id\030\006 \001(\r\"R\n\027MechanicusUnlockGearRsp\022\017"
      "\n\007retcode\030\003 \001(\005\022\025\n\rmechanicus_id\030\010 \001(\r\022\017"
      "\n\007gear_id\030\016 \001(\r\"B\n\030MechanicusLevelupGear"
      "Req\022\017\n\007gear_id\030\016 \001(\r\022\025\n\rmechanicus_id\030\014 "
      "\001(\r\"m\n\030MechanicusLevelupGearRsp\022\017\n\007gear_"
      "id\030\007 \001(\r\022\025\n\rmechanicus_id\030\002 \001(\r\022\030\n\020after"
      "_gear_level\030\014 \001(\r\022\017\n\007retcode\030\010 \001(\005\"4\n\031En"
      "terMechanicusDungeonReq\022\027\n\017difficult_lev"
      "el\030\007 \001(\r\"l\n\031EnterMechanicusDungeonRsp\022\021\n"
      "\twrong_uid\030\014 \001(\r\022\027\n\017difficult_level\030\r \001("
      "\r\022\017\n\007retcode\030\006 \001(\005\022\022\n\ndungeon_id\030\013 \001(\r\";"
      "\n MechanicusCandidateTeamCreateReq\022\027\n\017di"
      "fficult_level\030\006 \001(\r\"`\n MechanicusCandida"
      "teTeamCreateRsp\022\022\n\ndungeon_id\030\001 \001(\r\022\017\n\007r"
      "etcode\030\007 \001(\005\022\027\n\017difficult_level\030\n \001(\rB(Z"
      "&github.com/teyvat-helper/hk4e-proto/pbb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_mechanicus.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fmechanicus_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusInfo::kGearLevelPairListFieldNumber;
const int MechanicusInfo::kOpenSequenceIdListFieldNumber;
const int MechanicusInfo::kCoinFieldNumber;
const int MechanicusInfo::kPunishOverTimeFieldNumber;
const int MechanicusInfo::kMechanicusIdFieldNumber;
const int MechanicusInfo::kFinishDifficultLevelListFieldNumber;
const int MechanicusInfo::kIsFinishTeachDungeonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusInfo::MechanicusInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusInfo)
}
MechanicusInfo::MechanicusInfo(const MechanicusInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      open_sequence_id_list_(from.open_sequence_id_list_),
      finish_difficult_level_list_(from.finish_difficult_level_list_),
      gear_level_pair_list_(from.gear_level_pair_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_finish_teach_dungeon_, &from.is_finish_teach_dungeon_,
    static_cast<size_t>(reinterpret_cast<char*>(&punish_over_time_) -
    reinterpret_cast<char*>(&is_finish_teach_dungeon_)) + sizeof(punish_over_time_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusInfo)
}

void MechanicusInfo::SharedCtor() {
  ::memset(&is_finish_teach_dungeon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&punish_over_time_) -
      reinterpret_cast<char*>(&is_finish_teach_dungeon_)) + sizeof(punish_over_time_));
  _cached_size_ = 0;
}

MechanicusInfo::~MechanicusInfo() {
  // @@protoc_insertion_point(destructor:proto.MechanicusInfo)
  SharedDtor();
}

void MechanicusInfo::SharedDtor() {
}

void MechanicusInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusInfo::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusInfo& MechanicusInfo::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusInfo* MechanicusInfo::New(::google::protobuf::Arena* arena) const {
  MechanicusInfo* n = new MechanicusInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_sequence_id_list_.Clear();
  finish_difficult_level_list_.Clear();
  gear_level_pair_list_.Clear();
  ::memset(&is_finish_teach_dungeon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&punish_over_time_) -
      reinterpret_cast<char*>(&is_finish_teach_dungeon_)) + sizeof(punish_over_time_));
  _internal_metadata_.Clear();
}

bool MechanicusInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_finish_teach_dungeon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finish_teach_dungeon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 open_sequence_id_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_open_sequence_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_open_sequence_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 coin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 punish_over_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &punish_over_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 finish_difficult_level_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_finish_difficult_level_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106u, input, this->mutable_finish_difficult_level_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Uint32Pair gear_level_pair_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gear_level_pair_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusInfo)
  return false;
#undef DO_
}

void MechanicusInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_finish_teach_dungeon = 4;
  if (this->is_finish_teach_dungeon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_finish_teach_dungeon(), output);
  }

  // repeated uint32 open_sequence_id_list = 7;
  if (this->open_sequence_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _open_sequence_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->open_sequence_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->open_sequence_id_list(i), output);
  }

  // uint32 coin = 8;
  if (this->coin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->coin(), output);
  }

  // uint32 mechanicus_id = 10;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mechanicus_id(), output);
  }

  // uint32 punish_over_time = 12;
  if (this->punish_over_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->punish_over_time(), output);
  }

  // repeated uint32 finish_difficult_level_list = 13;
  if (this->finish_difficult_level_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finish_difficult_level_list_cached_byte_size_));
  }
  for (int i = 0, n = this->finish_difficult_level_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->finish_difficult_level_list(i), output);
  }

  // repeated .proto.Uint32Pair gear_level_pair_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gear_level_pair_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->gear_level_pair_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusInfo)
}

::google::protobuf::uint8* MechanicusInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_finish_teach_dungeon = 4;
  if (this->is_finish_teach_dungeon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_finish_teach_dungeon(), target);
  }

  // repeated uint32 open_sequence_id_list = 7;
  if (this->open_sequence_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _open_sequence_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->open_sequence_id_list_, target);
  }

  // uint32 coin = 8;
  if (this->coin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->coin(), target);
  }

  // uint32 mechanicus_id = 10;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mechanicus_id(), target);
  }

  // uint32 punish_over_time = 12;
  if (this->punish_over_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->punish_over_time(), target);
  }

  // repeated uint32 finish_difficult_level_list = 13;
  if (this->finish_difficult_level_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _finish_difficult_level_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->finish_difficult_level_list_, target);
  }

  // repeated .proto.Uint32Pair gear_level_pair_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gear_level_pair_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->gear_level_pair_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusInfo)
  return target;
}

size_t MechanicusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 open_sequence_id_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->open_sequence_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _open_sequence_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 finish_difficult_level_list = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->finish_difficult_level_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finish_difficult_level_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.Uint32Pair gear_level_pair_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->gear_level_pair_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gear_level_pair_list(static_cast<int>(i)));
    }
  }

  // bool is_finish_teach_dungeon = 4;
  if (this->is_finish_teach_dungeon() != 0) {
    total_size += 1 + 1;
  }

  // uint32 coin = 8;
  if (this->coin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->coin());
  }

  // uint32 mechanicus_id = 10;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  // uint32 punish_over_time = 12;
  if (this->punish_over_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->punish_over_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusInfo)
    MergeFrom(*source);
  }
}

void MechanicusInfo::MergeFrom(const MechanicusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_sequence_id_list_.MergeFrom(from.open_sequence_id_list_);
  finish_difficult_level_list_.MergeFrom(from.finish_difficult_level_list_);
  gear_level_pair_list_.MergeFrom(from.gear_level_pair_list_);
  if (from.is_finish_teach_dungeon() != 0) {
    set_is_finish_teach_dungeon(from.is_finish_teach_dungeon());
  }
  if (from.coin() != 0) {
    set_coin(from.coin());
  }
  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
  if (from.punish_over_time() != 0) {
    set_punish_over_time(from.punish_over_time());
  }
}

void MechanicusInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusInfo::CopyFrom(const MechanicusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusInfo::IsInitialized() const {
  return true;
}

void MechanicusInfo::Swap(MechanicusInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusInfo::InternalSwap(MechanicusInfo* other) {
  using std::swap;
  open_sequence_id_list_.InternalSwap(&other->open_sequence_id_list_);
  finish_difficult_level_list_.InternalSwap(&other->finish_difficult_level_list_);
  gear_level_pair_list_.InternalSwap(&other->gear_level_pair_list_);
  swap(is_finish_teach_dungeon_, other->is_finish_teach_dungeon_);
  swap(coin_, other->coin_);
  swap(mechanicus_id_, other->mechanicus_id_);
  swap(punish_over_time_, other->punish_over_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusInfo

// repeated .proto.Uint32Pair gear_level_pair_list = 14;
int MechanicusInfo::gear_level_pair_list_size() const {
  return gear_level_pair_list_.size();
}
void MechanicusInfo::clear_gear_level_pair_list() {
  gear_level_pair_list_.Clear();
}
const ::proto::Uint32Pair& MechanicusInfo::gear_level_pair_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MechanicusInfo.gear_level_pair_list)
  return gear_level_pair_list_.Get(index);
}
::proto::Uint32Pair* MechanicusInfo::mutable_gear_level_pair_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MechanicusInfo.gear_level_pair_list)
  return gear_level_pair_list_.Mutable(index);
}
::proto::Uint32Pair* MechanicusInfo::add_gear_level_pair_list() {
  // @@protoc_insertion_point(field_add:proto.MechanicusInfo.gear_level_pair_list)
  return gear_level_pair_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Uint32Pair >*
MechanicusInfo::mutable_gear_level_pair_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MechanicusInfo.gear_level_pair_list)
  return &gear_level_pair_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Uint32Pair >&
MechanicusInfo::gear_level_pair_list() const {
  // @@protoc_insertion_point(field_list:proto.MechanicusInfo.gear_level_pair_list)
  return gear_level_pair_list_;
}

// repeated uint32 open_sequence_id_list = 7;
int MechanicusInfo::open_sequence_id_list_size() const {
  return open_sequence_id_list_.size();
}
void MechanicusInfo::clear_open_sequence_id_list() {
  open_sequence_id_list_.Clear();
}
::google::protobuf::uint32 MechanicusInfo::open_sequence_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MechanicusInfo.open_sequence_id_list)
  return open_sequence_id_list_.Get(index);
}
void MechanicusInfo::set_open_sequence_id_list(int index, ::google::protobuf::uint32 value) {
  open_sequence_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MechanicusInfo.open_sequence_id_list)
}
void MechanicusInfo::add_open_sequence_id_list(::google::protobuf::uint32 value) {
  open_sequence_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MechanicusInfo.open_sequence_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MechanicusInfo::open_sequence_id_list() const {
  // @@protoc_insertion_point(field_list:proto.MechanicusInfo.open_sequence_id_list)
  return open_sequence_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MechanicusInfo::mutable_open_sequence_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MechanicusInfo.open_sequence_id_list)
  return &open_sequence_id_list_;
}

// uint32 coin = 8;
void MechanicusInfo::clear_coin() {
  coin_ = 0u;
}
::google::protobuf::uint32 MechanicusInfo::coin() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusInfo.coin)
  return coin_;
}
void MechanicusInfo::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusInfo.coin)
}

// uint32 punish_over_time = 12;
void MechanicusInfo::clear_punish_over_time() {
  punish_over_time_ = 0u;
}
::google::protobuf::uint32 MechanicusInfo::punish_over_time() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusInfo.punish_over_time)
  return punish_over_time_;
}
void MechanicusInfo::set_punish_over_time(::google::protobuf::uint32 value) {
  
  punish_over_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusInfo.punish_over_time)
}

// uint32 mechanicus_id = 10;
void MechanicusInfo::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusInfo::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusInfo.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusInfo::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusInfo.mechanicus_id)
}

// repeated uint32 finish_difficult_level_list = 13;
int MechanicusInfo::finish_difficult_level_list_size() const {
  return finish_difficult_level_list_.size();
}
void MechanicusInfo::clear_finish_difficult_level_list() {
  finish_difficult_level_list_.Clear();
}
::google::protobuf::uint32 MechanicusInfo::finish_difficult_level_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MechanicusInfo.finish_difficult_level_list)
  return finish_difficult_level_list_.Get(index);
}
void MechanicusInfo::set_finish_difficult_level_list(int index, ::google::protobuf::uint32 value) {
  finish_difficult_level_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MechanicusInfo.finish_difficult_level_list)
}
void MechanicusInfo::add_finish_difficult_level_list(::google::protobuf::uint32 value) {
  finish_difficult_level_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MechanicusInfo.finish_difficult_level_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MechanicusInfo::finish_difficult_level_list() const {
  // @@protoc_insertion_point(field_list:proto.MechanicusInfo.finish_difficult_level_list)
  return finish_difficult_level_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MechanicusInfo::mutable_finish_difficult_level_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MechanicusInfo.finish_difficult_level_list)
  return &finish_difficult_level_list_;
}

// bool is_finish_teach_dungeon = 4;
void MechanicusInfo::clear_is_finish_teach_dungeon() {
  is_finish_teach_dungeon_ = false;
}
bool MechanicusInfo::is_finish_teach_dungeon() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusInfo.is_finish_teach_dungeon)
  return is_finish_teach_dungeon_;
}
void MechanicusInfo::set_is_finish_teach_dungeon(bool value) {
  
  is_finish_teach_dungeon_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusInfo.is_finish_teach_dungeon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMechanicusInfoReq::GetMechanicusInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetMechanicusInfoReq)
}
GetMechanicusInfoReq::GetMechanicusInfoReq(const GetMechanicusInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetMechanicusInfoReq)
}

void GetMechanicusInfoReq::SharedCtor() {
  _cached_size_ = 0;
}

GetMechanicusInfoReq::~GetMechanicusInfoReq() {
  // @@protoc_insertion_point(destructor:proto.GetMechanicusInfoReq)
  SharedDtor();
}

void GetMechanicusInfoReq::SharedDtor() {
}

void GetMechanicusInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMechanicusInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMechanicusInfoReq& GetMechanicusInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetMechanicusInfoReq* GetMechanicusInfoReq::New(::google::protobuf::Arena* arena) const {
  GetMechanicusInfoReq* n = new GetMechanicusInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMechanicusInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetMechanicusInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetMechanicusInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetMechanicusInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetMechanicusInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetMechanicusInfoReq)
  return false;
#undef DO_
}

void GetMechanicusInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetMechanicusInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetMechanicusInfoReq)
}

::google::protobuf::uint8* GetMechanicusInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetMechanicusInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetMechanicusInfoReq)
  return target;
}

size_t GetMechanicusInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetMechanicusInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMechanicusInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetMechanicusInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMechanicusInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMechanicusInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetMechanicusInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetMechanicusInfoReq)
    MergeFrom(*source);
  }
}

void GetMechanicusInfoReq::MergeFrom(const GetMechanicusInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetMechanicusInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetMechanicusInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetMechanicusInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMechanicusInfoReq::CopyFrom(const GetMechanicusInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetMechanicusInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMechanicusInfoReq::IsInitialized() const {
  return true;
}

void GetMechanicusInfoReq::Swap(GetMechanicusInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMechanicusInfoReq::InternalSwap(GetMechanicusInfoReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMechanicusInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMechanicusInfoReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMechanicusInfoRsp::kRetcodeFieldNumber;
const int GetMechanicusInfoRsp::kMechanicusInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMechanicusInfoRsp::GetMechanicusInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetMechanicusInfoRsp)
}
GetMechanicusInfoRsp::GetMechanicusInfoRsp(const GetMechanicusInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mechanicus_info()) {
    mechanicus_info_ = new ::proto::MechanicusInfo(*from.mechanicus_info_);
  } else {
    mechanicus_info_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetMechanicusInfoRsp)
}

void GetMechanicusInfoRsp::SharedCtor() {
  ::memset(&mechanicus_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&mechanicus_info_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetMechanicusInfoRsp::~GetMechanicusInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.GetMechanicusInfoRsp)
  SharedDtor();
}

void GetMechanicusInfoRsp::SharedDtor() {
  if (this != internal_default_instance()) delete mechanicus_info_;
}

void GetMechanicusInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMechanicusInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMechanicusInfoRsp& GetMechanicusInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetMechanicusInfoRsp* GetMechanicusInfoRsp::New(::google::protobuf::Arena* arena) const {
  GetMechanicusInfoRsp* n = new GetMechanicusInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMechanicusInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetMechanicusInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mechanicus_info_ != NULL) {
    delete mechanicus_info_;
  }
  mechanicus_info_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetMechanicusInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetMechanicusInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MechanicusInfo mechanicus_info = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mechanicus_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetMechanicusInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetMechanicusInfoRsp)
  return false;
#undef DO_
}

void GetMechanicusInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetMechanicusInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  // .proto.MechanicusInfo mechanicus_info = 15;
  if (this->has_mechanicus_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->mechanicus_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetMechanicusInfoRsp)
}

::google::protobuf::uint8* GetMechanicusInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetMechanicusInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  // .proto.MechanicusInfo mechanicus_info = 15;
  if (this->has_mechanicus_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->mechanicus_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetMechanicusInfoRsp)
  return target;
}

size_t GetMechanicusInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetMechanicusInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MechanicusInfo mechanicus_info = 15;
  if (this->has_mechanicus_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mechanicus_info_);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMechanicusInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetMechanicusInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMechanicusInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMechanicusInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetMechanicusInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetMechanicusInfoRsp)
    MergeFrom(*source);
  }
}

void GetMechanicusInfoRsp::MergeFrom(const GetMechanicusInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetMechanicusInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mechanicus_info()) {
    mutable_mechanicus_info()->::proto::MechanicusInfo::MergeFrom(from.mechanicus_info());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetMechanicusInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetMechanicusInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMechanicusInfoRsp::CopyFrom(const GetMechanicusInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetMechanicusInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMechanicusInfoRsp::IsInitialized() const {
  return true;
}

void GetMechanicusInfoRsp::Swap(GetMechanicusInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMechanicusInfoRsp::InternalSwap(GetMechanicusInfoRsp* other) {
  using std::swap;
  swap(mechanicus_info_, other->mechanicus_info_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMechanicusInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMechanicusInfoRsp

// int32 retcode = 14;
void GetMechanicusInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetMechanicusInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetMechanicusInfoRsp.retcode)
  return retcode_;
}
void GetMechanicusInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetMechanicusInfoRsp.retcode)
}

// .proto.MechanicusInfo mechanicus_info = 15;
bool GetMechanicusInfoRsp::has_mechanicus_info() const {
  return this != internal_default_instance() && mechanicus_info_ != NULL;
}
void GetMechanicusInfoRsp::clear_mechanicus_info() {
  if (GetArenaNoVirtual() == NULL && mechanicus_info_ != NULL) delete mechanicus_info_;
  mechanicus_info_ = NULL;
}
const ::proto::MechanicusInfo& GetMechanicusInfoRsp::mechanicus_info() const {
  const ::proto::MechanicusInfo* p = mechanicus_info_;
  // @@protoc_insertion_point(field_get:proto.GetMechanicusInfoRsp.mechanicus_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MechanicusInfo*>(
      &::proto::_MechanicusInfo_default_instance_);
}
::proto::MechanicusInfo* GetMechanicusInfoRsp::mutable_mechanicus_info() {
  
  if (mechanicus_info_ == NULL) {
    mechanicus_info_ = new ::proto::MechanicusInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetMechanicusInfoRsp.mechanicus_info)
  return mechanicus_info_;
}
::proto::MechanicusInfo* GetMechanicusInfoRsp::release_mechanicus_info() {
  // @@protoc_insertion_point(field_release:proto.GetMechanicusInfoRsp.mechanicus_info)
  
  ::proto::MechanicusInfo* temp = mechanicus_info_;
  mechanicus_info_ = NULL;
  return temp;
}
void GetMechanicusInfoRsp::set_allocated_mechanicus_info(::proto::MechanicusInfo* mechanicus_info) {
  delete mechanicus_info_;
  mechanicus_info_ = mechanicus_info;
  if (mechanicus_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetMechanicusInfoRsp.mechanicus_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusSequenceOpenNotify::kMechanicusIdFieldNumber;
const int MechanicusSequenceOpenNotify::kSequenceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusSequenceOpenNotify::MechanicusSequenceOpenNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusSequenceOpenNotify)
}
MechanicusSequenceOpenNotify::MechanicusSequenceOpenNotify(const MechanicusSequenceOpenNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sequence_id_, &from.sequence_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mechanicus_id_) -
    reinterpret_cast<char*>(&sequence_id_)) + sizeof(mechanicus_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusSequenceOpenNotify)
}

void MechanicusSequenceOpenNotify::SharedCtor() {
  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(mechanicus_id_));
  _cached_size_ = 0;
}

MechanicusSequenceOpenNotify::~MechanicusSequenceOpenNotify() {
  // @@protoc_insertion_point(destructor:proto.MechanicusSequenceOpenNotify)
  SharedDtor();
}

void MechanicusSequenceOpenNotify::SharedDtor() {
}

void MechanicusSequenceOpenNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusSequenceOpenNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusSequenceOpenNotify& MechanicusSequenceOpenNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusSequenceOpenNotify* MechanicusSequenceOpenNotify::New(::google::protobuf::Arena* arena) const {
  MechanicusSequenceOpenNotify* n = new MechanicusSequenceOpenNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusSequenceOpenNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusSequenceOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(mechanicus_id_));
  _internal_metadata_.Clear();
}

bool MechanicusSequenceOpenNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusSequenceOpenNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sequence_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusSequenceOpenNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusSequenceOpenNotify)
  return false;
#undef DO_
}

void MechanicusSequenceOpenNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusSequenceOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequence_id = 7;
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->sequence_id(), output);
  }

  // uint32 mechanicus_id = 8;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->mechanicus_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusSequenceOpenNotify)
}

::google::protobuf::uint8* MechanicusSequenceOpenNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusSequenceOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequence_id = 7;
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->sequence_id(), target);
  }

  // uint32 mechanicus_id = 8;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->mechanicus_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusSequenceOpenNotify)
  return target;
}

size_t MechanicusSequenceOpenNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusSequenceOpenNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 sequence_id = 7;
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequence_id());
  }

  // uint32 mechanicus_id = 8;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusSequenceOpenNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusSequenceOpenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusSequenceOpenNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusSequenceOpenNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusSequenceOpenNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusSequenceOpenNotify)
    MergeFrom(*source);
  }
}

void MechanicusSequenceOpenNotify::MergeFrom(const MechanicusSequenceOpenNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusSequenceOpenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
}

void MechanicusSequenceOpenNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusSequenceOpenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusSequenceOpenNotify::CopyFrom(const MechanicusSequenceOpenNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusSequenceOpenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusSequenceOpenNotify::IsInitialized() const {
  return true;
}

void MechanicusSequenceOpenNotify::Swap(MechanicusSequenceOpenNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusSequenceOpenNotify::InternalSwap(MechanicusSequenceOpenNotify* other) {
  using std::swap;
  swap(sequence_id_, other->sequence_id_);
  swap(mechanicus_id_, other->mechanicus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusSequenceOpenNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusSequenceOpenNotify

// uint32 mechanicus_id = 8;
void MechanicusSequenceOpenNotify::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusSequenceOpenNotify::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusSequenceOpenNotify.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusSequenceOpenNotify::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusSequenceOpenNotify.mechanicus_id)
}

// uint32 sequence_id = 7;
void MechanicusSequenceOpenNotify::clear_sequence_id() {
  sequence_id_ = 0u;
}
::google::protobuf::uint32 MechanicusSequenceOpenNotify::sequence_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusSequenceOpenNotify.sequence_id)
  return sequence_id_;
}
void MechanicusSequenceOpenNotify::set_sequence_id(::google::protobuf::uint32 value) {
  
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusSequenceOpenNotify.sequence_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusCoinNotify::kMechanicusIdFieldNumber;
const int MechanicusCoinNotify::kCoinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusCoinNotify::MechanicusCoinNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusCoinNotify)
}
MechanicusCoinNotify::MechanicusCoinNotify(const MechanicusCoinNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&mechanicus_id_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(mechanicus_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusCoinNotify)
}

void MechanicusCoinNotify::SharedCtor() {
  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(mechanicus_id_));
  _cached_size_ = 0;
}

MechanicusCoinNotify::~MechanicusCoinNotify() {
  // @@protoc_insertion_point(destructor:proto.MechanicusCoinNotify)
  SharedDtor();
}

void MechanicusCoinNotify::SharedDtor() {
}

void MechanicusCoinNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusCoinNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusCoinNotify& MechanicusCoinNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusCoinNotify* MechanicusCoinNotify::New(::google::protobuf::Arena* arena) const {
  MechanicusCoinNotify* n = new MechanicusCoinNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusCoinNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusCoinNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(mechanicus_id_));
  _internal_metadata_.Clear();
}

bool MechanicusCoinNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusCoinNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 coin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusCoinNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusCoinNotify)
  return false;
#undef DO_
}

void MechanicusCoinNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusCoinNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 coin = 4;
  if (this->coin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->coin(), output);
  }

  // uint32 mechanicus_id = 7;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mechanicus_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusCoinNotify)
}

::google::protobuf::uint8* MechanicusCoinNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusCoinNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 coin = 4;
  if (this->coin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->coin(), target);
  }

  // uint32 mechanicus_id = 7;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mechanicus_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusCoinNotify)
  return target;
}

size_t MechanicusCoinNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusCoinNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 coin = 4;
  if (this->coin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->coin());
  }

  // uint32 mechanicus_id = 7;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusCoinNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusCoinNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusCoinNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusCoinNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusCoinNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusCoinNotify)
    MergeFrom(*source);
  }
}

void MechanicusCoinNotify::MergeFrom(const MechanicusCoinNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusCoinNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    set_coin(from.coin());
  }
  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
}

void MechanicusCoinNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusCoinNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusCoinNotify::CopyFrom(const MechanicusCoinNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusCoinNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusCoinNotify::IsInitialized() const {
  return true;
}

void MechanicusCoinNotify::Swap(MechanicusCoinNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusCoinNotify::InternalSwap(MechanicusCoinNotify* other) {
  using std::swap;
  swap(coin_, other->coin_);
  swap(mechanicus_id_, other->mechanicus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusCoinNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusCoinNotify

// uint32 mechanicus_id = 7;
void MechanicusCoinNotify::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusCoinNotify::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusCoinNotify.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusCoinNotify::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusCoinNotify.mechanicus_id)
}

// uint32 coin = 4;
void MechanicusCoinNotify::clear_coin() {
  coin_ = 0u;
}
::google::protobuf::uint32 MechanicusCoinNotify::coin() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusCoinNotify.coin)
  return coin_;
}
void MechanicusCoinNotify::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusCoinNotify.coin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusOpenNotify::kMechanicusIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusOpenNotify::MechanicusOpenNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusOpenNotify)
}
MechanicusOpenNotify::MechanicusOpenNotify(const MechanicusOpenNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mechanicus_id_ = from.mechanicus_id_;
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusOpenNotify)
}

void MechanicusOpenNotify::SharedCtor() {
  mechanicus_id_ = 0u;
  _cached_size_ = 0;
}

MechanicusOpenNotify::~MechanicusOpenNotify() {
  // @@protoc_insertion_point(destructor:proto.MechanicusOpenNotify)
  SharedDtor();
}

void MechanicusOpenNotify::SharedDtor() {
}

void MechanicusOpenNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusOpenNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusOpenNotify& MechanicusOpenNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusOpenNotify* MechanicusOpenNotify::New(::google::protobuf::Arena* arena) const {
  MechanicusOpenNotify* n = new MechanicusOpenNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusOpenNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mechanicus_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MechanicusOpenNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusOpenNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mechanicus_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusOpenNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusOpenNotify)
  return false;
#undef DO_
}

void MechanicusOpenNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 2;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mechanicus_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusOpenNotify)
}

::google::protobuf::uint8* MechanicusOpenNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusOpenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 2;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mechanicus_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusOpenNotify)
  return target;
}

size_t MechanicusOpenNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusOpenNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mechanicus_id = 2;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusOpenNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusOpenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusOpenNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusOpenNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusOpenNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusOpenNotify)
    MergeFrom(*source);
  }
}

void MechanicusOpenNotify::MergeFrom(const MechanicusOpenNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusOpenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
}

void MechanicusOpenNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusOpenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusOpenNotify::CopyFrom(const MechanicusOpenNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusOpenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusOpenNotify::IsInitialized() const {
  return true;
}

void MechanicusOpenNotify::Swap(MechanicusOpenNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusOpenNotify::InternalSwap(MechanicusOpenNotify* other) {
  using std::swap;
  swap(mechanicus_id_, other->mechanicus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusOpenNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusOpenNotify

// uint32 mechanicus_id = 2;
void MechanicusOpenNotify::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusOpenNotify::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusOpenNotify.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusOpenNotify::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusOpenNotify.mechanicus_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusCloseNotify::kMechanicusIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusCloseNotify::MechanicusCloseNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusCloseNotify)
}
MechanicusCloseNotify::MechanicusCloseNotify(const MechanicusCloseNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mechanicus_id_ = from.mechanicus_id_;
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusCloseNotify)
}

void MechanicusCloseNotify::SharedCtor() {
  mechanicus_id_ = 0u;
  _cached_size_ = 0;
}

MechanicusCloseNotify::~MechanicusCloseNotify() {
  // @@protoc_insertion_point(destructor:proto.MechanicusCloseNotify)
  SharedDtor();
}

void MechanicusCloseNotify::SharedDtor() {
}

void MechanicusCloseNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusCloseNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusCloseNotify& MechanicusCloseNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusCloseNotify* MechanicusCloseNotify::New(::google::protobuf::Arena* arena) const {
  MechanicusCloseNotify* n = new MechanicusCloseNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusCloseNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusCloseNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mechanicus_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MechanicusCloseNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusCloseNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mechanicus_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusCloseNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusCloseNotify)
  return false;
#undef DO_
}

void MechanicusCloseNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusCloseNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 6;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mechanicus_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusCloseNotify)
}

::google::protobuf::uint8* MechanicusCloseNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusCloseNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 6;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mechanicus_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusCloseNotify)
  return target;
}

size_t MechanicusCloseNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusCloseNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mechanicus_id = 6;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusCloseNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusCloseNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusCloseNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusCloseNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusCloseNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusCloseNotify)
    MergeFrom(*source);
  }
}

void MechanicusCloseNotify::MergeFrom(const MechanicusCloseNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusCloseNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
}

void MechanicusCloseNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusCloseNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusCloseNotify::CopyFrom(const MechanicusCloseNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusCloseNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusCloseNotify::IsInitialized() const {
  return true;
}

void MechanicusCloseNotify::Swap(MechanicusCloseNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusCloseNotify::InternalSwap(MechanicusCloseNotify* other) {
  using std::swap;
  swap(mechanicus_id_, other->mechanicus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusCloseNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusCloseNotify

// uint32 mechanicus_id = 6;
void MechanicusCloseNotify::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusCloseNotify::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusCloseNotify.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusCloseNotify::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusCloseNotify.mechanicus_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusUnlockGearReq::kMechanicusIdFieldNumber;
const int MechanicusUnlockGearReq::kGearIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusUnlockGearReq::MechanicusUnlockGearReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusUnlockGearReq)
}
MechanicusUnlockGearReq::MechanicusUnlockGearReq(const MechanicusUnlockGearReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gear_id_, &from.gear_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mechanicus_id_) -
    reinterpret_cast<char*>(&gear_id_)) + sizeof(mechanicus_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusUnlockGearReq)
}

void MechanicusUnlockGearReq::SharedCtor() {
  ::memset(&gear_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&gear_id_)) + sizeof(mechanicus_id_));
  _cached_size_ = 0;
}

MechanicusUnlockGearReq::~MechanicusUnlockGearReq() {
  // @@protoc_insertion_point(destructor:proto.MechanicusUnlockGearReq)
  SharedDtor();
}

void MechanicusUnlockGearReq::SharedDtor() {
}

void MechanicusUnlockGearReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusUnlockGearReq::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusUnlockGearReq& MechanicusUnlockGearReq::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusUnlockGearReq* MechanicusUnlockGearReq::New(::google::protobuf::Arena* arena) const {
  MechanicusUnlockGearReq* n = new MechanicusUnlockGearReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusUnlockGearReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusUnlockGearReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gear_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&gear_id_)) + sizeof(mechanicus_id_));
  _internal_metadata_.Clear();
}

bool MechanicusUnlockGearReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusUnlockGearReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gear_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gear_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusUnlockGearReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusUnlockGearReq)
  return false;
#undef DO_
}

void MechanicusUnlockGearReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusUnlockGearReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gear_id = 6;
  if (this->gear_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gear_id(), output);
  }

  // uint32 mechanicus_id = 7;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mechanicus_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusUnlockGearReq)
}

::google::protobuf::uint8* MechanicusUnlockGearReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusUnlockGearReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gear_id = 6;
  if (this->gear_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gear_id(), target);
  }

  // uint32 mechanicus_id = 7;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mechanicus_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusUnlockGearReq)
  return target;
}

size_t MechanicusUnlockGearReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusUnlockGearReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gear_id = 6;
  if (this->gear_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gear_id());
  }

  // uint32 mechanicus_id = 7;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusUnlockGearReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusUnlockGearReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusUnlockGearReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusUnlockGearReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusUnlockGearReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusUnlockGearReq)
    MergeFrom(*source);
  }
}

void MechanicusUnlockGearReq::MergeFrom(const MechanicusUnlockGearReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusUnlockGearReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gear_id() != 0) {
    set_gear_id(from.gear_id());
  }
  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
}

void MechanicusUnlockGearReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusUnlockGearReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusUnlockGearReq::CopyFrom(const MechanicusUnlockGearReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusUnlockGearReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusUnlockGearReq::IsInitialized() const {
  return true;
}

void MechanicusUnlockGearReq::Swap(MechanicusUnlockGearReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusUnlockGearReq::InternalSwap(MechanicusUnlockGearReq* other) {
  using std::swap;
  swap(gear_id_, other->gear_id_);
  swap(mechanicus_id_, other->mechanicus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusUnlockGearReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusUnlockGearReq

// uint32 mechanicus_id = 7;
void MechanicusUnlockGearReq::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusUnlockGearReq::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusUnlockGearReq.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusUnlockGearReq::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusUnlockGearReq.mechanicus_id)
}

// uint32 gear_id = 6;
void MechanicusUnlockGearReq::clear_gear_id() {
  gear_id_ = 0u;
}
::google::protobuf::uint32 MechanicusUnlockGearReq::gear_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusUnlockGearReq.gear_id)
  return gear_id_;
}
void MechanicusUnlockGearReq::set_gear_id(::google::protobuf::uint32 value) {
  
  gear_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusUnlockGearReq.gear_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusUnlockGearRsp::kRetcodeFieldNumber;
const int MechanicusUnlockGearRsp::kMechanicusIdFieldNumber;
const int MechanicusUnlockGearRsp::kGearIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusUnlockGearRsp::MechanicusUnlockGearRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusUnlockGearRsp)
}
MechanicusUnlockGearRsp::MechanicusUnlockGearRsp(const MechanicusUnlockGearRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gear_id_, &from.gear_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mechanicus_id_) -
    reinterpret_cast<char*>(&gear_id_)) + sizeof(mechanicus_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusUnlockGearRsp)
}

void MechanicusUnlockGearRsp::SharedCtor() {
  ::memset(&gear_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&gear_id_)) + sizeof(mechanicus_id_));
  _cached_size_ = 0;
}

MechanicusUnlockGearRsp::~MechanicusUnlockGearRsp() {
  // @@protoc_insertion_point(destructor:proto.MechanicusUnlockGearRsp)
  SharedDtor();
}

void MechanicusUnlockGearRsp::SharedDtor() {
}

void MechanicusUnlockGearRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusUnlockGearRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusUnlockGearRsp& MechanicusUnlockGearRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusUnlockGearRsp* MechanicusUnlockGearRsp::New(::google::protobuf::Arena* arena) const {
  MechanicusUnlockGearRsp* n = new MechanicusUnlockGearRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusUnlockGearRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusUnlockGearRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gear_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_id_) -
      reinterpret_cast<char*>(&gear_id_)) + sizeof(mechanicus_id_));
  _internal_metadata_.Clear();
}

bool MechanicusUnlockGearRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusUnlockGearRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gear_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gear_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusUnlockGearRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusUnlockGearRsp)
  return false;
#undef DO_
}

void MechanicusUnlockGearRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusUnlockGearRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // uint32 mechanicus_id = 8;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->mechanicus_id(), output);
  }

  // uint32 gear_id = 14;
  if (this->gear_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->gear_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusUnlockGearRsp)
}

::google::protobuf::uint8* MechanicusUnlockGearRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusUnlockGearRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // uint32 mechanicus_id = 8;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->mechanicus_id(), target);
  }

  // uint32 gear_id = 14;
  if (this->gear_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->gear_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusUnlockGearRsp)
  return target;
}

size_t MechanicusUnlockGearRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusUnlockGearRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gear_id = 14;
  if (this->gear_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gear_id());
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 mechanicus_id = 8;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusUnlockGearRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusUnlockGearRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusUnlockGearRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusUnlockGearRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusUnlockGearRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusUnlockGearRsp)
    MergeFrom(*source);
  }
}

void MechanicusUnlockGearRsp::MergeFrom(const MechanicusUnlockGearRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusUnlockGearRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gear_id() != 0) {
    set_gear_id(from.gear_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
}

void MechanicusUnlockGearRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusUnlockGearRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusUnlockGearRsp::CopyFrom(const MechanicusUnlockGearRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusUnlockGearRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusUnlockGearRsp::IsInitialized() const {
  return true;
}

void MechanicusUnlockGearRsp::Swap(MechanicusUnlockGearRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusUnlockGearRsp::InternalSwap(MechanicusUnlockGearRsp* other) {
  using std::swap;
  swap(gear_id_, other->gear_id_);
  swap(retcode_, other->retcode_);
  swap(mechanicus_id_, other->mechanicus_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusUnlockGearRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusUnlockGearRsp

// int32 retcode = 3;
void MechanicusUnlockGearRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MechanicusUnlockGearRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusUnlockGearRsp.retcode)
  return retcode_;
}
void MechanicusUnlockGearRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusUnlockGearRsp.retcode)
}

// uint32 mechanicus_id = 8;
void MechanicusUnlockGearRsp::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusUnlockGearRsp::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusUnlockGearRsp.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusUnlockGearRsp::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusUnlockGearRsp.mechanicus_id)
}

// uint32 gear_id = 14;
void MechanicusUnlockGearRsp::clear_gear_id() {
  gear_id_ = 0u;
}
::google::protobuf::uint32 MechanicusUnlockGearRsp::gear_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusUnlockGearRsp.gear_id)
  return gear_id_;
}
void MechanicusUnlockGearRsp::set_gear_id(::google::protobuf::uint32 value) {
  
  gear_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusUnlockGearRsp.gear_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusLevelupGearReq::kGearIdFieldNumber;
const int MechanicusLevelupGearReq::kMechanicusIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusLevelupGearReq::MechanicusLevelupGearReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusLevelupGearReq)
}
MechanicusLevelupGearReq::MechanicusLevelupGearReq(const MechanicusLevelupGearReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mechanicus_id_, &from.mechanicus_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gear_id_) -
    reinterpret_cast<char*>(&mechanicus_id_)) + sizeof(gear_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusLevelupGearReq)
}

void MechanicusLevelupGearReq::SharedCtor() {
  ::memset(&mechanicus_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gear_id_) -
      reinterpret_cast<char*>(&mechanicus_id_)) + sizeof(gear_id_));
  _cached_size_ = 0;
}

MechanicusLevelupGearReq::~MechanicusLevelupGearReq() {
  // @@protoc_insertion_point(destructor:proto.MechanicusLevelupGearReq)
  SharedDtor();
}

void MechanicusLevelupGearReq::SharedDtor() {
}

void MechanicusLevelupGearReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusLevelupGearReq::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusLevelupGearReq& MechanicusLevelupGearReq::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusLevelupGearReq* MechanicusLevelupGearReq::New(::google::protobuf::Arena* arena) const {
  MechanicusLevelupGearReq* n = new MechanicusLevelupGearReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusLevelupGearReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusLevelupGearReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mechanicus_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gear_id_) -
      reinterpret_cast<char*>(&mechanicus_id_)) + sizeof(gear_id_));
  _internal_metadata_.Clear();
}

bool MechanicusLevelupGearReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusLevelupGearReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mechanicus_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gear_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gear_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusLevelupGearReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusLevelupGearReq)
  return false;
#undef DO_
}

void MechanicusLevelupGearReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusLevelupGearReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 12;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mechanicus_id(), output);
  }

  // uint32 gear_id = 14;
  if (this->gear_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->gear_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusLevelupGearReq)
}

::google::protobuf::uint8* MechanicusLevelupGearReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusLevelupGearReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 12;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mechanicus_id(), target);
  }

  // uint32 gear_id = 14;
  if (this->gear_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->gear_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusLevelupGearReq)
  return target;
}

size_t MechanicusLevelupGearReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusLevelupGearReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mechanicus_id = 12;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  // uint32 gear_id = 14;
  if (this->gear_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gear_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusLevelupGearReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusLevelupGearReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusLevelupGearReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusLevelupGearReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusLevelupGearReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusLevelupGearReq)
    MergeFrom(*source);
  }
}

void MechanicusLevelupGearReq::MergeFrom(const MechanicusLevelupGearReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusLevelupGearReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
  if (from.gear_id() != 0) {
    set_gear_id(from.gear_id());
  }
}

void MechanicusLevelupGearReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusLevelupGearReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusLevelupGearReq::CopyFrom(const MechanicusLevelupGearReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusLevelupGearReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusLevelupGearReq::IsInitialized() const {
  return true;
}

void MechanicusLevelupGearReq::Swap(MechanicusLevelupGearReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusLevelupGearReq::InternalSwap(MechanicusLevelupGearReq* other) {
  using std::swap;
  swap(mechanicus_id_, other->mechanicus_id_);
  swap(gear_id_, other->gear_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusLevelupGearReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusLevelupGearReq

// uint32 gear_id = 14;
void MechanicusLevelupGearReq::clear_gear_id() {
  gear_id_ = 0u;
}
::google::protobuf::uint32 MechanicusLevelupGearReq::gear_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusLevelupGearReq.gear_id)
  return gear_id_;
}
void MechanicusLevelupGearReq::set_gear_id(::google::protobuf::uint32 value) {
  
  gear_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusLevelupGearReq.gear_id)
}

// uint32 mechanicus_id = 12;
void MechanicusLevelupGearReq::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusLevelupGearReq::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusLevelupGearReq.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusLevelupGearReq::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusLevelupGearReq.mechanicus_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusLevelupGearRsp::kGearIdFieldNumber;
const int MechanicusLevelupGearRsp::kMechanicusIdFieldNumber;
const int MechanicusLevelupGearRsp::kAfterGearLevelFieldNumber;
const int MechanicusLevelupGearRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusLevelupGearRsp::MechanicusLevelupGearRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusLevelupGearRsp)
}
MechanicusLevelupGearRsp::MechanicusLevelupGearRsp(const MechanicusLevelupGearRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mechanicus_id_, &from.mechanicus_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&after_gear_level_) -
    reinterpret_cast<char*>(&mechanicus_id_)) + sizeof(after_gear_level_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusLevelupGearRsp)
}

void MechanicusLevelupGearRsp::SharedCtor() {
  ::memset(&mechanicus_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&after_gear_level_) -
      reinterpret_cast<char*>(&mechanicus_id_)) + sizeof(after_gear_level_));
  _cached_size_ = 0;
}

MechanicusLevelupGearRsp::~MechanicusLevelupGearRsp() {
  // @@protoc_insertion_point(destructor:proto.MechanicusLevelupGearRsp)
  SharedDtor();
}

void MechanicusLevelupGearRsp::SharedDtor() {
}

void MechanicusLevelupGearRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusLevelupGearRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusLevelupGearRsp& MechanicusLevelupGearRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusLevelupGearRsp* MechanicusLevelupGearRsp::New(::google::protobuf::Arena* arena) const {
  MechanicusLevelupGearRsp* n = new MechanicusLevelupGearRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusLevelupGearRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusLevelupGearRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mechanicus_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&after_gear_level_) -
      reinterpret_cast<char*>(&mechanicus_id_)) + sizeof(after_gear_level_));
  _internal_metadata_.Clear();
}

bool MechanicusLevelupGearRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusLevelupGearRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mechanicus_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gear_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gear_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 after_gear_level = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &after_gear_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusLevelupGearRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusLevelupGearRsp)
  return false;
#undef DO_
}

void MechanicusLevelupGearRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusLevelupGearRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 2;
  if (this->mechanicus_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mechanicus_id(), output);
  }

  // uint32 gear_id = 7;
  if (this->gear_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->gear_id(), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint32 after_gear_level = 12;
  if (this->after_gear_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->after_gear_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusLevelupGearRsp)
}

::google::protobuf::uint8* MechanicusLevelupGearRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusLevelupGearRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mechanicus_id = 2;
  if (this->mechanicus_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mechanicus_id(), target);
  }

  // uint32 gear_id = 7;
  if (this->gear_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->gear_id(), target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint32 after_gear_level = 12;
  if (this->after_gear_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->after_gear_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusLevelupGearRsp)
  return target;
}

size_t MechanicusLevelupGearRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusLevelupGearRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 mechanicus_id = 2;
  if (this->mechanicus_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_id());
  }

  // uint32 gear_id = 7;
  if (this->gear_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gear_id());
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 after_gear_level = 12;
  if (this->after_gear_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->after_gear_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusLevelupGearRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusLevelupGearRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusLevelupGearRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusLevelupGearRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusLevelupGearRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusLevelupGearRsp)
    MergeFrom(*source);
  }
}

void MechanicusLevelupGearRsp::MergeFrom(const MechanicusLevelupGearRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusLevelupGearRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mechanicus_id() != 0) {
    set_mechanicus_id(from.mechanicus_id());
  }
  if (from.gear_id() != 0) {
    set_gear_id(from.gear_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.after_gear_level() != 0) {
    set_after_gear_level(from.after_gear_level());
  }
}

void MechanicusLevelupGearRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusLevelupGearRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusLevelupGearRsp::CopyFrom(const MechanicusLevelupGearRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusLevelupGearRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusLevelupGearRsp::IsInitialized() const {
  return true;
}

void MechanicusLevelupGearRsp::Swap(MechanicusLevelupGearRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusLevelupGearRsp::InternalSwap(MechanicusLevelupGearRsp* other) {
  using std::swap;
  swap(mechanicus_id_, other->mechanicus_id_);
  swap(gear_id_, other->gear_id_);
  swap(retcode_, other->retcode_);
  swap(after_gear_level_, other->after_gear_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusLevelupGearRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusLevelupGearRsp

// uint32 gear_id = 7;
void MechanicusLevelupGearRsp::clear_gear_id() {
  gear_id_ = 0u;
}
::google::protobuf::uint32 MechanicusLevelupGearRsp::gear_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusLevelupGearRsp.gear_id)
  return gear_id_;
}
void MechanicusLevelupGearRsp::set_gear_id(::google::protobuf::uint32 value) {
  
  gear_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusLevelupGearRsp.gear_id)
}

// uint32 mechanicus_id = 2;
void MechanicusLevelupGearRsp::clear_mechanicus_id() {
  mechanicus_id_ = 0u;
}
::google::protobuf::uint32 MechanicusLevelupGearRsp::mechanicus_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusLevelupGearRsp.mechanicus_id)
  return mechanicus_id_;
}
void MechanicusLevelupGearRsp::set_mechanicus_id(::google::protobuf::uint32 value) {
  
  mechanicus_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusLevelupGearRsp.mechanicus_id)
}

// uint32 after_gear_level = 12;
void MechanicusLevelupGearRsp::clear_after_gear_level() {
  after_gear_level_ = 0u;
}
::google::protobuf::uint32 MechanicusLevelupGearRsp::after_gear_level() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusLevelupGearRsp.after_gear_level)
  return after_gear_level_;
}
void MechanicusLevelupGearRsp::set_after_gear_level(::google::protobuf::uint32 value) {
  
  after_gear_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusLevelupGearRsp.after_gear_level)
}

// int32 retcode = 8;
void MechanicusLevelupGearRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MechanicusLevelupGearRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusLevelupGearRsp.retcode)
  return retcode_;
}
void MechanicusLevelupGearRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusLevelupGearRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterMechanicusDungeonReq::kDifficultLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterMechanicusDungeonReq::EnterMechanicusDungeonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterMechanicusDungeonReq)
}
EnterMechanicusDungeonReq::EnterMechanicusDungeonReq(const EnterMechanicusDungeonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  difficult_level_ = from.difficult_level_;
  // @@protoc_insertion_point(copy_constructor:proto.EnterMechanicusDungeonReq)
}

void EnterMechanicusDungeonReq::SharedCtor() {
  difficult_level_ = 0u;
  _cached_size_ = 0;
}

EnterMechanicusDungeonReq::~EnterMechanicusDungeonReq() {
  // @@protoc_insertion_point(destructor:proto.EnterMechanicusDungeonReq)
  SharedDtor();
}

void EnterMechanicusDungeonReq::SharedDtor() {
}

void EnterMechanicusDungeonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterMechanicusDungeonReq::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterMechanicusDungeonReq& EnterMechanicusDungeonReq::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterMechanicusDungeonReq* EnterMechanicusDungeonReq::New(::google::protobuf::Arena* arena) const {
  EnterMechanicusDungeonReq* n = new EnterMechanicusDungeonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterMechanicusDungeonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterMechanicusDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  difficult_level_ = 0u;
  _internal_metadata_.Clear();
}

bool EnterMechanicusDungeonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterMechanicusDungeonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 difficult_level = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difficult_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterMechanicusDungeonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterMechanicusDungeonReq)
  return false;
#undef DO_
}

void EnterMechanicusDungeonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterMechanicusDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 difficult_level = 7;
  if (this->difficult_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->difficult_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterMechanicusDungeonReq)
}

::google::protobuf::uint8* EnterMechanicusDungeonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterMechanicusDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 difficult_level = 7;
  if (this->difficult_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->difficult_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterMechanicusDungeonReq)
  return target;
}

size_t EnterMechanicusDungeonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterMechanicusDungeonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 difficult_level = 7;
  if (this->difficult_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difficult_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterMechanicusDungeonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterMechanicusDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterMechanicusDungeonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterMechanicusDungeonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterMechanicusDungeonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterMechanicusDungeonReq)
    MergeFrom(*source);
  }
}

void EnterMechanicusDungeonReq::MergeFrom(const EnterMechanicusDungeonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterMechanicusDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.difficult_level() != 0) {
    set_difficult_level(from.difficult_level());
  }
}

void EnterMechanicusDungeonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterMechanicusDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterMechanicusDungeonReq::CopyFrom(const EnterMechanicusDungeonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterMechanicusDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterMechanicusDungeonReq::IsInitialized() const {
  return true;
}

void EnterMechanicusDungeonReq::Swap(EnterMechanicusDungeonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterMechanicusDungeonReq::InternalSwap(EnterMechanicusDungeonReq* other) {
  using std::swap;
  swap(difficult_level_, other->difficult_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterMechanicusDungeonReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterMechanicusDungeonReq

// uint32 difficult_level = 7;
void EnterMechanicusDungeonReq::clear_difficult_level() {
  difficult_level_ = 0u;
}
::google::protobuf::uint32 EnterMechanicusDungeonReq::difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.EnterMechanicusDungeonReq.difficult_level)
  return difficult_level_;
}
void EnterMechanicusDungeonReq::set_difficult_level(::google::protobuf::uint32 value) {
  
  difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterMechanicusDungeonReq.difficult_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterMechanicusDungeonRsp::kWrongUidFieldNumber;
const int EnterMechanicusDungeonRsp::kDifficultLevelFieldNumber;
const int EnterMechanicusDungeonRsp::kRetcodeFieldNumber;
const int EnterMechanicusDungeonRsp::kDungeonIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterMechanicusDungeonRsp::EnterMechanicusDungeonRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterMechanicusDungeonRsp)
}
EnterMechanicusDungeonRsp::EnterMechanicusDungeonRsp(const EnterMechanicusDungeonRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&difficult_level_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(difficult_level_));
  // @@protoc_insertion_point(copy_constructor:proto.EnterMechanicusDungeonRsp)
}

void EnterMechanicusDungeonRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficult_level_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(difficult_level_));
  _cached_size_ = 0;
}

EnterMechanicusDungeonRsp::~EnterMechanicusDungeonRsp() {
  // @@protoc_insertion_point(destructor:proto.EnterMechanicusDungeonRsp)
  SharedDtor();
}

void EnterMechanicusDungeonRsp::SharedDtor() {
}

void EnterMechanicusDungeonRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterMechanicusDungeonRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterMechanicusDungeonRsp& EnterMechanicusDungeonRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterMechanicusDungeonRsp* EnterMechanicusDungeonRsp::New(::google::protobuf::Arena* arena) const {
  EnterMechanicusDungeonRsp* n = new EnterMechanicusDungeonRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterMechanicusDungeonRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterMechanicusDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficult_level_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(difficult_level_));
  _internal_metadata_.Clear();
}

bool EnterMechanicusDungeonRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterMechanicusDungeonRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wrong_uid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wrong_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 difficult_level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difficult_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterMechanicusDungeonRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterMechanicusDungeonRsp)
  return false;
#undef DO_
}

void EnterMechanicusDungeonRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterMechanicusDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dungeon_id(), output);
  }

  // uint32 wrong_uid = 12;
  if (this->wrong_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->wrong_uid(), output);
  }

  // uint32 difficult_level = 13;
  if (this->difficult_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->difficult_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterMechanicusDungeonRsp)
}

::google::protobuf::uint8* EnterMechanicusDungeonRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterMechanicusDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dungeon_id(), target);
  }

  // uint32 wrong_uid = 12;
  if (this->wrong_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->wrong_uid(), target);
  }

  // uint32 difficult_level = 13;
  if (this->difficult_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->difficult_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterMechanicusDungeonRsp)
  return target;
}

size_t EnterMechanicusDungeonRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterMechanicusDungeonRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 wrong_uid = 12;
  if (this->wrong_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wrong_uid());
  }

  // uint32 difficult_level = 13;
  if (this->difficult_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difficult_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterMechanicusDungeonRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterMechanicusDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterMechanicusDungeonRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterMechanicusDungeonRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterMechanicusDungeonRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterMechanicusDungeonRsp)
    MergeFrom(*source);
  }
}

void EnterMechanicusDungeonRsp::MergeFrom(const EnterMechanicusDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterMechanicusDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.wrong_uid() != 0) {
    set_wrong_uid(from.wrong_uid());
  }
  if (from.difficult_level() != 0) {
    set_difficult_level(from.difficult_level());
  }
}

void EnterMechanicusDungeonRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterMechanicusDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterMechanicusDungeonRsp::CopyFrom(const EnterMechanicusDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterMechanicusDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterMechanicusDungeonRsp::IsInitialized() const {
  return true;
}

void EnterMechanicusDungeonRsp::Swap(EnterMechanicusDungeonRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterMechanicusDungeonRsp::InternalSwap(EnterMechanicusDungeonRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(wrong_uid_, other->wrong_uid_);
  swap(difficult_level_, other->difficult_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterMechanicusDungeonRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterMechanicusDungeonRsp

// uint32 wrong_uid = 12;
void EnterMechanicusDungeonRsp::clear_wrong_uid() {
  wrong_uid_ = 0u;
}
::google::protobuf::uint32 EnterMechanicusDungeonRsp::wrong_uid() const {
  // @@protoc_insertion_point(field_get:proto.EnterMechanicusDungeonRsp.wrong_uid)
  return wrong_uid_;
}
void EnterMechanicusDungeonRsp::set_wrong_uid(::google::protobuf::uint32 value) {
  
  wrong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterMechanicusDungeonRsp.wrong_uid)
}

// uint32 difficult_level = 13;
void EnterMechanicusDungeonRsp::clear_difficult_level() {
  difficult_level_ = 0u;
}
::google::protobuf::uint32 EnterMechanicusDungeonRsp::difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.EnterMechanicusDungeonRsp.difficult_level)
  return difficult_level_;
}
void EnterMechanicusDungeonRsp::set_difficult_level(::google::protobuf::uint32 value) {
  
  difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterMechanicusDungeonRsp.difficult_level)
}

// int32 retcode = 6;
void EnterMechanicusDungeonRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EnterMechanicusDungeonRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterMechanicusDungeonRsp.retcode)
  return retcode_;
}
void EnterMechanicusDungeonRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterMechanicusDungeonRsp.retcode)
}

// uint32 dungeon_id = 11;
void EnterMechanicusDungeonRsp::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 EnterMechanicusDungeonRsp::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterMechanicusDungeonRsp.dungeon_id)
  return dungeon_id_;
}
void EnterMechanicusDungeonRsp::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterMechanicusDungeonRsp.dungeon_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusCandidateTeamCreateReq::kDifficultLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusCandidateTeamCreateReq::MechanicusCandidateTeamCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusCandidateTeamCreateReq)
}
MechanicusCandidateTeamCreateReq::MechanicusCandidateTeamCreateReq(const MechanicusCandidateTeamCreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  difficult_level_ = from.difficult_level_;
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusCandidateTeamCreateReq)
}

void MechanicusCandidateTeamCreateReq::SharedCtor() {
  difficult_level_ = 0u;
  _cached_size_ = 0;
}

MechanicusCandidateTeamCreateReq::~MechanicusCandidateTeamCreateReq() {
  // @@protoc_insertion_point(destructor:proto.MechanicusCandidateTeamCreateReq)
  SharedDtor();
}

void MechanicusCandidateTeamCreateReq::SharedDtor() {
}

void MechanicusCandidateTeamCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusCandidateTeamCreateReq::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusCandidateTeamCreateReq& MechanicusCandidateTeamCreateReq::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusCandidateTeamCreateReq* MechanicusCandidateTeamCreateReq::New(::google::protobuf::Arena* arena) const {
  MechanicusCandidateTeamCreateReq* n = new MechanicusCandidateTeamCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusCandidateTeamCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusCandidateTeamCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  difficult_level_ = 0u;
  _internal_metadata_.Clear();
}

bool MechanicusCandidateTeamCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusCandidateTeamCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 difficult_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difficult_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusCandidateTeamCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusCandidateTeamCreateReq)
  return false;
#undef DO_
}

void MechanicusCandidateTeamCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusCandidateTeamCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 difficult_level = 6;
  if (this->difficult_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->difficult_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusCandidateTeamCreateReq)
}

::google::protobuf::uint8* MechanicusCandidateTeamCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusCandidateTeamCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 difficult_level = 6;
  if (this->difficult_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->difficult_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusCandidateTeamCreateReq)
  return target;
}

size_t MechanicusCandidateTeamCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusCandidateTeamCreateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 difficult_level = 6;
  if (this->difficult_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difficult_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusCandidateTeamCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusCandidateTeamCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusCandidateTeamCreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusCandidateTeamCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusCandidateTeamCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusCandidateTeamCreateReq)
    MergeFrom(*source);
  }
}

void MechanicusCandidateTeamCreateReq::MergeFrom(const MechanicusCandidateTeamCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusCandidateTeamCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.difficult_level() != 0) {
    set_difficult_level(from.difficult_level());
  }
}

void MechanicusCandidateTeamCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusCandidateTeamCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusCandidateTeamCreateReq::CopyFrom(const MechanicusCandidateTeamCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusCandidateTeamCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusCandidateTeamCreateReq::IsInitialized() const {
  return true;
}

void MechanicusCandidateTeamCreateReq::Swap(MechanicusCandidateTeamCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusCandidateTeamCreateReq::InternalSwap(MechanicusCandidateTeamCreateReq* other) {
  using std::swap;
  swap(difficult_level_, other->difficult_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusCandidateTeamCreateReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusCandidateTeamCreateReq

// uint32 difficult_level = 6;
void MechanicusCandidateTeamCreateReq::clear_difficult_level() {
  difficult_level_ = 0u;
}
::google::protobuf::uint32 MechanicusCandidateTeamCreateReq::difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusCandidateTeamCreateReq.difficult_level)
  return difficult_level_;
}
void MechanicusCandidateTeamCreateReq::set_difficult_level(::google::protobuf::uint32 value) {
  
  difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusCandidateTeamCreateReq.difficult_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanicusCandidateTeamCreateRsp::kDungeonIdFieldNumber;
const int MechanicusCandidateTeamCreateRsp::kRetcodeFieldNumber;
const int MechanicusCandidateTeamCreateRsp::kDifficultLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanicusCandidateTeamCreateRsp::MechanicusCandidateTeamCreateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MechanicusCandidateTeamCreateRsp)
}
MechanicusCandidateTeamCreateRsp::MechanicusCandidateTeamCreateRsp(const MechanicusCandidateTeamCreateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_id_, &from.dungeon_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&difficult_level_) -
    reinterpret_cast<char*>(&dungeon_id_)) + sizeof(difficult_level_));
  // @@protoc_insertion_point(copy_constructor:proto.MechanicusCandidateTeamCreateRsp)
}

void MechanicusCandidateTeamCreateRsp::SharedCtor() {
  ::memset(&dungeon_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficult_level_) -
      reinterpret_cast<char*>(&dungeon_id_)) + sizeof(difficult_level_));
  _cached_size_ = 0;
}

MechanicusCandidateTeamCreateRsp::~MechanicusCandidateTeamCreateRsp() {
  // @@protoc_insertion_point(destructor:proto.MechanicusCandidateTeamCreateRsp)
  SharedDtor();
}

void MechanicusCandidateTeamCreateRsp::SharedDtor() {
}

void MechanicusCandidateTeamCreateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MechanicusCandidateTeamCreateRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MechanicusCandidateTeamCreateRsp& MechanicusCandidateTeamCreateRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::InitDefaults();
  return *internal_default_instance();
}

MechanicusCandidateTeamCreateRsp* MechanicusCandidateTeamCreateRsp::New(::google::protobuf::Arena* arena) const {
  MechanicusCandidateTeamCreateRsp* n = new MechanicusCandidateTeamCreateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MechanicusCandidateTeamCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MechanicusCandidateTeamCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficult_level_) -
      reinterpret_cast<char*>(&dungeon_id_)) + sizeof(difficult_level_));
  _internal_metadata_.Clear();
}

bool MechanicusCandidateTeamCreateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MechanicusCandidateTeamCreateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dungeon_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 difficult_level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difficult_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MechanicusCandidateTeamCreateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MechanicusCandidateTeamCreateRsp)
  return false;
#undef DO_
}

void MechanicusCandidateTeamCreateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MechanicusCandidateTeamCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dungeon_id = 1;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dungeon_id(), output);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // uint32 difficult_level = 10;
  if (this->difficult_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->difficult_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MechanicusCandidateTeamCreateRsp)
}

::google::protobuf::uint8* MechanicusCandidateTeamCreateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MechanicusCandidateTeamCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dungeon_id = 1;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dungeon_id(), target);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // uint32 difficult_level = 10;
  if (this->difficult_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->difficult_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MechanicusCandidateTeamCreateRsp)
  return target;
}

size_t MechanicusCandidateTeamCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MechanicusCandidateTeamCreateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 dungeon_id = 1;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 difficult_level = 10;
  if (this->difficult_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difficult_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MechanicusCandidateTeamCreateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MechanicusCandidateTeamCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanicusCandidateTeamCreateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MechanicusCandidateTeamCreateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MechanicusCandidateTeamCreateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MechanicusCandidateTeamCreateRsp)
    MergeFrom(*source);
  }
}

void MechanicusCandidateTeamCreateRsp::MergeFrom(const MechanicusCandidateTeamCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MechanicusCandidateTeamCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.difficult_level() != 0) {
    set_difficult_level(from.difficult_level());
  }
}

void MechanicusCandidateTeamCreateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MechanicusCandidateTeamCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanicusCandidateTeamCreateRsp::CopyFrom(const MechanicusCandidateTeamCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MechanicusCandidateTeamCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanicusCandidateTeamCreateRsp::IsInitialized() const {
  return true;
}

void MechanicusCandidateTeamCreateRsp::Swap(MechanicusCandidateTeamCreateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanicusCandidateTeamCreateRsp::InternalSwap(MechanicusCandidateTeamCreateRsp* other) {
  using std::swap;
  swap(dungeon_id_, other->dungeon_id_);
  swap(retcode_, other->retcode_);
  swap(difficult_level_, other->difficult_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MechanicusCandidateTeamCreateRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmechanicus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmechanicus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MechanicusCandidateTeamCreateRsp

// uint32 dungeon_id = 1;
void MechanicusCandidateTeamCreateRsp::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 MechanicusCandidateTeamCreateRsp::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusCandidateTeamCreateRsp.dungeon_id)
  return dungeon_id_;
}
void MechanicusCandidateTeamCreateRsp::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusCandidateTeamCreateRsp.dungeon_id)
}

// int32 retcode = 7;
void MechanicusCandidateTeamCreateRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MechanicusCandidateTeamCreateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusCandidateTeamCreateRsp.retcode)
  return retcode_;
}
void MechanicusCandidateTeamCreateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusCandidateTeamCreateRsp.retcode)
}

// uint32 difficult_level = 10;
void MechanicusCandidateTeamCreateRsp::clear_difficult_level() {
  difficult_level_ = 0u;
}
::google::protobuf::uint32 MechanicusCandidateTeamCreateRsp::difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.MechanicusCandidateTeamCreateRsp.difficult_level)
  return difficult_level_;
}
void MechanicusCandidateTeamCreateRsp::set_difficult_level(::google::protobuf::uint32 value) {
  
  difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MechanicusCandidateTeamCreateRsp.difficult_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
