// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_chat.proto

#ifndef PROTOBUF_cmd_2fcmd_5fchat_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fchat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "cmd/cmd_scene.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class ChatChannelDataNotify;
class ChatChannelDataNotifyDefaultTypeInternal;
extern ChatChannelDataNotifyDefaultTypeInternal _ChatChannelDataNotify_default_instance_;
class ChatChannelInfo;
class ChatChannelInfoDefaultTypeInternal;
extern ChatChannelInfoDefaultTypeInternal _ChatChannelInfo_default_instance_;
class ChatChannelInfoNotify;
class ChatChannelInfoNotifyDefaultTypeInternal;
extern ChatChannelInfoNotifyDefaultTypeInternal _ChatChannelInfoNotify_default_instance_;
class ChatChannelShieldNotify;
class ChatChannelShieldNotifyDefaultTypeInternal;
extern ChatChannelShieldNotifyDefaultTypeInternal _ChatChannelShieldNotify_default_instance_;
class ChatChannelUpdateNotify;
class ChatChannelUpdateNotifyDefaultTypeInternal;
extern ChatChannelUpdateNotifyDefaultTypeInternal _ChatChannelUpdateNotify_default_instance_;
class PrivateChatNotify;
class PrivateChatNotifyDefaultTypeInternal;
extern PrivateChatNotifyDefaultTypeInternal _PrivateChatNotify_default_instance_;
class PrivateChatReq;
class PrivateChatReqDefaultTypeInternal;
extern PrivateChatReqDefaultTypeInternal _PrivateChatReq_default_instance_;
class PrivateChatRsp;
class PrivateChatRspDefaultTypeInternal;
extern PrivateChatRspDefaultTypeInternal _PrivateChatRsp_default_instance_;
class PullPrivateChatReq;
class PullPrivateChatReqDefaultTypeInternal;
extern PullPrivateChatReqDefaultTypeInternal _PullPrivateChatReq_default_instance_;
class PullPrivateChatRsp;
class PullPrivateChatRspDefaultTypeInternal;
extern PullPrivateChatRspDefaultTypeInternal _PullPrivateChatRsp_default_instance_;
class PullRecentChatReq;
class PullRecentChatReqDefaultTypeInternal;
extern PullRecentChatReqDefaultTypeInternal _PullRecentChatReq_default_instance_;
class PullRecentChatRsp;
class PullRecentChatRspDefaultTypeInternal;
extern PullRecentChatRspDefaultTypeInternal _PullRecentChatRsp_default_instance_;
class ReadPrivateChatReq;
class ReadPrivateChatReqDefaultTypeInternal;
extern ReadPrivateChatReqDefaultTypeInternal _ReadPrivateChatReq_default_instance_;
class ReadPrivateChatRsp;
class ReadPrivateChatRspDefaultTypeInternal;
extern ReadPrivateChatRspDefaultTypeInternal _ReadPrivateChatRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fchat_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fchat_2eproto

// ===================================================================

class PrivateChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PrivateChatReq) */ {
 public:
  PrivateChatReq();
  virtual ~PrivateChatReq();

  PrivateChatReq(const PrivateChatReq& from);

  inline PrivateChatReq& operator=(const PrivateChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrivateChatReq(PrivateChatReq&& from) noexcept
    : PrivateChatReq() {
    *this = ::std::move(from);
  }

  inline PrivateChatReq& operator=(PrivateChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivateChatReq& default_instance();

  enum ContentCase {
    kText = 3,
    kIcon = 4,
    CONTENT_NOT_SET = 0,
  };

  static inline const PrivateChatReq* internal_default_instance() {
    return reinterpret_cast<const PrivateChatReq*>(
               &_PrivateChatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PrivateChatReq* other);
  friend void swap(PrivateChatReq& a, PrivateChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrivateChatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PrivateChatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrivateChatReq& from);
  void MergeFrom(const PrivateChatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrivateChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 7;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 7;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // string text = 3;
  private:
  bool has_text() const;
  public:
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // uint32 icon = 4;
  private:
  bool has_icon() const;
  public:
  void clear_icon();
  static const int kIconFieldNumber = 4;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:proto.PrivateChatReq)
 private:
  void set_has_text();
  void set_has_icon();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  union ContentUnion {
    ContentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::google::protobuf::uint32 icon_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrivateChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PrivateChatRsp) */ {
 public:
  PrivateChatRsp();
  virtual ~PrivateChatRsp();

  PrivateChatRsp(const PrivateChatRsp& from);

  inline PrivateChatRsp& operator=(const PrivateChatRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrivateChatRsp(PrivateChatRsp&& from) noexcept
    : PrivateChatRsp() {
    *this = ::std::move(from);
  }

  inline PrivateChatRsp& operator=(PrivateChatRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivateChatRsp& default_instance();

  static inline const PrivateChatRsp* internal_default_instance() {
    return reinterpret_cast<const PrivateChatRsp*>(
               &_PrivateChatRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PrivateChatRsp* other);
  friend void swap(PrivateChatRsp& a, PrivateChatRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrivateChatRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PrivateChatRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrivateChatRsp& from);
  void MergeFrom(const PrivateChatRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrivateChatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 chat_forbidden_endtime = 12;
  void clear_chat_forbidden_endtime();
  static const int kChatForbiddenEndtimeFieldNumber = 12;
  ::google::protobuf::uint32 chat_forbidden_endtime() const;
  void set_chat_forbidden_endtime(::google::protobuf::uint32 value);

  // int32 retcode = 14;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 14;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PrivateChatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chat_forbidden_endtime_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrivateChatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PrivateChatNotify) */ {
 public:
  PrivateChatNotify();
  virtual ~PrivateChatNotify();

  PrivateChatNotify(const PrivateChatNotify& from);

  inline PrivateChatNotify& operator=(const PrivateChatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrivateChatNotify(PrivateChatNotify&& from) noexcept
    : PrivateChatNotify() {
    *this = ::std::move(from);
  }

  inline PrivateChatNotify& operator=(PrivateChatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivateChatNotify& default_instance();

  static inline const PrivateChatNotify* internal_default_instance() {
    return reinterpret_cast<const PrivateChatNotify*>(
               &_PrivateChatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PrivateChatNotify* other);
  friend void swap(PrivateChatNotify& a, PrivateChatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrivateChatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PrivateChatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrivateChatNotify& from);
  void MergeFrom(const PrivateChatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrivateChatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ChatInfo chat_info = 7;
  bool has_chat_info() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 7;
  const ::proto::ChatInfo& chat_info() const;
  ::proto::ChatInfo* mutable_chat_info();
  ::proto::ChatInfo* release_chat_info();
  void set_allocated_chat_info(::proto::ChatInfo* chat_info);

  // @@protoc_insertion_point(class_scope:proto.PrivateChatNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatInfo* chat_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullPrivateChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PullPrivateChatReq) */ {
 public:
  PullPrivateChatReq();
  virtual ~PullPrivateChatReq();

  PullPrivateChatReq(const PullPrivateChatReq& from);

  inline PullPrivateChatReq& operator=(const PullPrivateChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullPrivateChatReq(PullPrivateChatReq&& from) noexcept
    : PullPrivateChatReq() {
    *this = ::std::move(from);
  }

  inline PullPrivateChatReq& operator=(PullPrivateChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullPrivateChatReq& default_instance();

  static inline const PullPrivateChatReq* internal_default_instance() {
    return reinterpret_cast<const PullPrivateChatReq*>(
               &_PullPrivateChatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PullPrivateChatReq* other);
  friend void swap(PullPrivateChatReq& a, PullPrivateChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullPrivateChatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PullPrivateChatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PullPrivateChatReq& from);
  void MergeFrom(const PullPrivateChatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PullPrivateChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 from_sequence = 12;
  void clear_from_sequence();
  static const int kFromSequenceFieldNumber = 12;
  ::google::protobuf::uint32 from_sequence() const;
  void set_from_sequence(::google::protobuf::uint32 value);

  // uint32 target_uid = 5;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 5;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 pull_num = 7;
  void clear_pull_num();
  static const int kPullNumFieldNumber = 7;
  ::google::protobuf::uint32 pull_num() const;
  void set_pull_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PullPrivateChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 from_sequence_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 pull_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullPrivateChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PullPrivateChatRsp) */ {
 public:
  PullPrivateChatRsp();
  virtual ~PullPrivateChatRsp();

  PullPrivateChatRsp(const PullPrivateChatRsp& from);

  inline PullPrivateChatRsp& operator=(const PullPrivateChatRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullPrivateChatRsp(PullPrivateChatRsp&& from) noexcept
    : PullPrivateChatRsp() {
    *this = ::std::move(from);
  }

  inline PullPrivateChatRsp& operator=(PullPrivateChatRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullPrivateChatRsp& default_instance();

  static inline const PullPrivateChatRsp* internal_default_instance() {
    return reinterpret_cast<const PullPrivateChatRsp*>(
               &_PullPrivateChatRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PullPrivateChatRsp* other);
  friend void swap(PullPrivateChatRsp& a, PullPrivateChatRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullPrivateChatRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PullPrivateChatRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PullPrivateChatRsp& from);
  void MergeFrom(const PullPrivateChatRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PullPrivateChatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ChatInfo chat_info = 15;
  int chat_info_size() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 15;
  const ::proto::ChatInfo& chat_info(int index) const;
  ::proto::ChatInfo* mutable_chat_info(int index);
  ::proto::ChatInfo* add_chat_info();
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
      mutable_chat_info();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
      chat_info() const;

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PullPrivateChatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo > chat_info_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullRecentChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PullRecentChatReq) */ {
 public:
  PullRecentChatReq();
  virtual ~PullRecentChatReq();

  PullRecentChatReq(const PullRecentChatReq& from);

  inline PullRecentChatReq& operator=(const PullRecentChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullRecentChatReq(PullRecentChatReq&& from) noexcept
    : PullRecentChatReq() {
    *this = ::std::move(from);
  }

  inline PullRecentChatReq& operator=(PullRecentChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullRecentChatReq& default_instance();

  static inline const PullRecentChatReq* internal_default_instance() {
    return reinterpret_cast<const PullRecentChatReq*>(
               &_PullRecentChatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PullRecentChatReq* other);
  friend void swap(PullRecentChatReq& a, PullRecentChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullRecentChatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PullRecentChatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PullRecentChatReq& from);
  void MergeFrom(const PullRecentChatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PullRecentChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 pull_num = 6;
  void clear_pull_num();
  static const int kPullNumFieldNumber = 6;
  ::google::protobuf::uint32 pull_num() const;
  void set_pull_num(::google::protobuf::uint32 value);

  // uint32 begin_sequence = 15;
  void clear_begin_sequence();
  static const int kBeginSequenceFieldNumber = 15;
  ::google::protobuf::uint32 begin_sequence() const;
  void set_begin_sequence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PullRecentChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 pull_num_;
  ::google::protobuf::uint32 begin_sequence_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullRecentChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PullRecentChatRsp) */ {
 public:
  PullRecentChatRsp();
  virtual ~PullRecentChatRsp();

  PullRecentChatRsp(const PullRecentChatRsp& from);

  inline PullRecentChatRsp& operator=(const PullRecentChatRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullRecentChatRsp(PullRecentChatRsp&& from) noexcept
    : PullRecentChatRsp() {
    *this = ::std::move(from);
  }

  inline PullRecentChatRsp& operator=(PullRecentChatRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullRecentChatRsp& default_instance();

  static inline const PullRecentChatRsp* internal_default_instance() {
    return reinterpret_cast<const PullRecentChatRsp*>(
               &_PullRecentChatRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PullRecentChatRsp* other);
  friend void swap(PullRecentChatRsp& a, PullRecentChatRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullRecentChatRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PullRecentChatRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PullRecentChatRsp& from);
  void MergeFrom(const PullRecentChatRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PullRecentChatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ChatInfo chat_info = 15;
  int chat_info_size() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 15;
  const ::proto::ChatInfo& chat_info(int index) const;
  ::proto::ChatInfo* mutable_chat_info(int index);
  ::proto::ChatInfo* add_chat_info();
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
      mutable_chat_info();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
      chat_info() const;

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PullRecentChatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo > chat_info_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadPrivateChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReadPrivateChatReq) */ {
 public:
  ReadPrivateChatReq();
  virtual ~ReadPrivateChatReq();

  ReadPrivateChatReq(const ReadPrivateChatReq& from);

  inline ReadPrivateChatReq& operator=(const ReadPrivateChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadPrivateChatReq(ReadPrivateChatReq&& from) noexcept
    : ReadPrivateChatReq() {
    *this = ::std::move(from);
  }

  inline ReadPrivateChatReq& operator=(ReadPrivateChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadPrivateChatReq& default_instance();

  static inline const ReadPrivateChatReq* internal_default_instance() {
    return reinterpret_cast<const ReadPrivateChatReq*>(
               &_ReadPrivateChatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ReadPrivateChatReq* other);
  friend void swap(ReadPrivateChatReq& a, ReadPrivateChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadPrivateChatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadPrivateChatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadPrivateChatReq& from);
  void MergeFrom(const ReadPrivateChatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadPrivateChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReadPrivateChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadPrivateChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReadPrivateChatRsp) */ {
 public:
  ReadPrivateChatRsp();
  virtual ~ReadPrivateChatRsp();

  ReadPrivateChatRsp(const ReadPrivateChatRsp& from);

  inline ReadPrivateChatRsp& operator=(const ReadPrivateChatRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadPrivateChatRsp(ReadPrivateChatRsp&& from) noexcept
    : ReadPrivateChatRsp() {
    *this = ::std::move(from);
  }

  inline ReadPrivateChatRsp& operator=(ReadPrivateChatRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadPrivateChatRsp& default_instance();

  static inline const ReadPrivateChatRsp* internal_default_instance() {
    return reinterpret_cast<const ReadPrivateChatRsp*>(
               &_ReadPrivateChatRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ReadPrivateChatRsp* other);
  friend void swap(ReadPrivateChatRsp& a, ReadPrivateChatRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadPrivateChatRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadPrivateChatRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadPrivateChatRsp& from);
  void MergeFrom(const ReadPrivateChatRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadPrivateChatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ReadPrivateChatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatChannelUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatChannelUpdateNotify) */ {
 public:
  ChatChannelUpdateNotify();
  virtual ~ChatChannelUpdateNotify();

  ChatChannelUpdateNotify(const ChatChannelUpdateNotify& from);

  inline ChatChannelUpdateNotify& operator=(const ChatChannelUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatChannelUpdateNotify(ChatChannelUpdateNotify&& from) noexcept
    : ChatChannelUpdateNotify() {
    *this = ::std::move(from);
  }

  inline ChatChannelUpdateNotify& operator=(ChatChannelUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatChannelUpdateNotify& default_instance();

  static inline const ChatChannelUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const ChatChannelUpdateNotify*>(
               &_ChatChannelUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ChatChannelUpdateNotify* other);
  friend void swap(ChatChannelUpdateNotify& a, ChatChannelUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatChannelUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatChannelUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatChannelUpdateNotify& from);
  void MergeFrom(const ChatChannelUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatChannelUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ChatChannelInfo channel_info = 14;
  bool has_channel_info() const;
  void clear_channel_info();
  static const int kChannelInfoFieldNumber = 14;
  const ::proto::ChatChannelInfo& channel_info() const;
  ::proto::ChatChannelInfo* mutable_channel_info();
  ::proto::ChatChannelInfo* release_channel_info();
  void set_allocated_channel_info(::proto::ChatChannelInfo* channel_info);

  // uint32 channel_id = 3;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // bool is_create = 15;
  void clear_is_create();
  static const int kIsCreateFieldNumber = 15;
  bool is_create() const;
  void set_is_create(bool value);

  // @@protoc_insertion_point(class_scope:proto.ChatChannelUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatChannelInfo* channel_info_;
  ::google::protobuf::uint32 channel_id_;
  bool is_create_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatChannelInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatChannelInfo) */ {
 public:
  ChatChannelInfo();
  virtual ~ChatChannelInfo();

  ChatChannelInfo(const ChatChannelInfo& from);

  inline ChatChannelInfo& operator=(const ChatChannelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatChannelInfo(ChatChannelInfo&& from) noexcept
    : ChatChannelInfo() {
    *this = ::std::move(from);
  }

  inline ChatChannelInfo& operator=(ChatChannelInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatChannelInfo& default_instance();

  static inline const ChatChannelInfo* internal_default_instance() {
    return reinterpret_cast<const ChatChannelInfo*>(
               &_ChatChannelInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ChatChannelInfo* other);
  friend void swap(ChatChannelInfo& a, ChatChannelInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatChannelInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatChannelInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatChannelInfo& from);
  void MergeFrom(const ChatChannelInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatChannelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 channel_id = 8;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 8;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // bool is_shield = 15;
  void clear_is_shield();
  static const int kIsShieldFieldNumber = 15;
  bool is_shield() const;
  void set_is_shield(bool value);

  // @@protoc_insertion_point(class_scope:proto.ChatChannelInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 channel_id_;
  bool is_shield_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatChannelDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatChannelDataNotify) */ {
 public:
  ChatChannelDataNotify();
  virtual ~ChatChannelDataNotify();

  ChatChannelDataNotify(const ChatChannelDataNotify& from);

  inline ChatChannelDataNotify& operator=(const ChatChannelDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatChannelDataNotify(ChatChannelDataNotify&& from) noexcept
    : ChatChannelDataNotify() {
    *this = ::std::move(from);
  }

  inline ChatChannelDataNotify& operator=(ChatChannelDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatChannelDataNotify& default_instance();

  static inline const ChatChannelDataNotify* internal_default_instance() {
    return reinterpret_cast<const ChatChannelDataNotify*>(
               &_ChatChannelDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ChatChannelDataNotify* other);
  friend void swap(ChatChannelDataNotify& a, ChatChannelDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatChannelDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatChannelDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatChannelDataNotify& from);
  void MergeFrom(const ChatChannelDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatChannelDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 channel_list = 3;
  int channel_list_size() const;
  void clear_channel_list();
  static const int kChannelListFieldNumber = 3;
  ::google::protobuf::uint32 channel_list(int index) const;
  void set_channel_list(int index, ::google::protobuf::uint32 value);
  void add_channel_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      channel_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_channel_list();

  // repeated .proto.ChatChannelInfo channel_info_list = 7;
  int channel_info_list_size() const;
  void clear_channel_info_list();
  static const int kChannelInfoListFieldNumber = 7;
  const ::proto::ChatChannelInfo& channel_info_list(int index) const;
  ::proto::ChatChannelInfo* mutable_channel_info_list(int index);
  ::proto::ChatChannelInfo* add_channel_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ChatChannelInfo >*
      mutable_channel_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChatChannelInfo >&
      channel_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.ChatChannelDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > channel_list_;
  mutable int _channel_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChatChannelInfo > channel_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatChannelShieldNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatChannelShieldNotify) */ {
 public:
  ChatChannelShieldNotify();
  virtual ~ChatChannelShieldNotify();

  ChatChannelShieldNotify(const ChatChannelShieldNotify& from);

  inline ChatChannelShieldNotify& operator=(const ChatChannelShieldNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatChannelShieldNotify(ChatChannelShieldNotify&& from) noexcept
    : ChatChannelShieldNotify() {
    *this = ::std::move(from);
  }

  inline ChatChannelShieldNotify& operator=(ChatChannelShieldNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatChannelShieldNotify& default_instance();

  static inline const ChatChannelShieldNotify* internal_default_instance() {
    return reinterpret_cast<const ChatChannelShieldNotify*>(
               &_ChatChannelShieldNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ChatChannelShieldNotify* other);
  friend void swap(ChatChannelShieldNotify& a, ChatChannelShieldNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatChannelShieldNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatChannelShieldNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatChannelShieldNotify& from);
  void MergeFrom(const ChatChannelShieldNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatChannelShieldNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_shield = 5;
  void clear_is_shield();
  static const int kIsShieldFieldNumber = 5;
  bool is_shield() const;
  void set_is_shield(bool value);

  // uint32 channel_id = 14;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 14;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChatChannelShieldNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_shield_;
  ::google::protobuf::uint32 channel_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatChannelInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatChannelInfoNotify) */ {
 public:
  ChatChannelInfoNotify();
  virtual ~ChatChannelInfoNotify();

  ChatChannelInfoNotify(const ChatChannelInfoNotify& from);

  inline ChatChannelInfoNotify& operator=(const ChatChannelInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatChannelInfoNotify(ChatChannelInfoNotify&& from) noexcept
    : ChatChannelInfoNotify() {
    *this = ::std::move(from);
  }

  inline ChatChannelInfoNotify& operator=(ChatChannelInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatChannelInfoNotify& default_instance();

  static inline const ChatChannelInfoNotify* internal_default_instance() {
    return reinterpret_cast<const ChatChannelInfoNotify*>(
               &_ChatChannelInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ChatChannelInfoNotify* other);
  friend void swap(ChatChannelInfoNotify& a, ChatChannelInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatChannelInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatChannelInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatChannelInfoNotify& from);
  void MergeFrom(const ChatChannelInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatChannelInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ChatChannelInfo channel_info = 2;
  bool has_channel_info() const;
  void clear_channel_info();
  static const int kChannelInfoFieldNumber = 2;
  const ::proto::ChatChannelInfo& channel_info() const;
  ::proto::ChatChannelInfo* mutable_channel_info();
  ::proto::ChatChannelInfo* release_channel_info();
  void set_allocated_channel_info(::proto::ChatChannelInfo* channel_info);

  // @@protoc_insertion_point(class_scope:proto.ChatChannelInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatChannelInfo* channel_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fchat_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PrivateChatReq

// uint32 target_uid = 7;
inline void PrivateChatReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PrivateChatReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatReq.target_uid)
  return target_uid_;
}
inline void PrivateChatReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.target_uid)
}

// string text = 3;
inline bool PrivateChatReq::has_text() const {
  return content_case() == kText;
}
inline void PrivateChatReq::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void PrivateChatReq::clear_text() {
  if (has_text()) {
    content_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
inline const ::std::string& PrivateChatReq::text() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatReq.text)
  if (has_text()) {
    return content_.text_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void PrivateChatReq::set_text(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.text)
}
#if LANG_CXX11
inline void PrivateChatReq::set_text(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PrivateChatReq.text)
}
#endif
inline void PrivateChatReq::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PrivateChatReq.text)
}
inline void PrivateChatReq::set_text(const char* value, size_t size) {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PrivateChatReq.text)
}
inline ::std::string* PrivateChatReq::mutable_text() {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.PrivateChatReq.text)
  return content_.text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateChatReq::release_text() {
  // @@protoc_insertion_point(field_release:proto.PrivateChatReq.text)
  if (has_text()) {
    clear_has_content();
    return content_.text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void PrivateChatReq::set_allocated_text(::std::string* text) {
  if (!has_text()) {
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (text != NULL) {
    set_has_text();
    content_.text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        text);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PrivateChatReq.text)
}

// uint32 icon = 4;
inline bool PrivateChatReq::has_icon() const {
  return content_case() == kIcon;
}
inline void PrivateChatReq::set_has_icon() {
  _oneof_case_[0] = kIcon;
}
inline void PrivateChatReq::clear_icon() {
  if (has_icon()) {
    content_.icon_ = 0u;
    clear_has_content();
  }
}
inline ::google::protobuf::uint32 PrivateChatReq::icon() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatReq.icon)
  if (has_icon()) {
    return content_.icon_;
  }
  return 0u;
}
inline void PrivateChatReq::set_icon(::google::protobuf::uint32 value) {
  if (!has_icon()) {
    clear_content();
    set_has_icon();
  }
  content_.icon_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.icon)
}

inline bool PrivateChatReq::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void PrivateChatReq::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline PrivateChatReq::ContentCase PrivateChatReq::content_case() const {
  return PrivateChatReq::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PrivateChatRsp

// uint32 chat_forbidden_endtime = 12;
inline void PrivateChatRsp::clear_chat_forbidden_endtime() {
  chat_forbidden_endtime_ = 0u;
}
inline ::google::protobuf::uint32 PrivateChatRsp::chat_forbidden_endtime() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatRsp.chat_forbidden_endtime)
  return chat_forbidden_endtime_;
}
inline void PrivateChatRsp::set_chat_forbidden_endtime(::google::protobuf::uint32 value) {
  
  chat_forbidden_endtime_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatRsp.chat_forbidden_endtime)
}

// int32 retcode = 14;
inline void PrivateChatRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PrivateChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatRsp.retcode)
  return retcode_;
}
inline void PrivateChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatRsp.retcode)
}

// -------------------------------------------------------------------

// PrivateChatNotify

// .proto.ChatInfo chat_info = 7;
inline bool PrivateChatNotify::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
inline void PrivateChatNotify::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
inline const ::proto::ChatInfo& PrivateChatNotify::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PrivateChatNotify.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
inline ::proto::ChatInfo* PrivateChatNotify::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PrivateChatNotify.chat_info)
  return chat_info_;
}
inline ::proto::ChatInfo* PrivateChatNotify::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PrivateChatNotify.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
inline void PrivateChatNotify::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PrivateChatNotify.chat_info)
}

// -------------------------------------------------------------------

// PullPrivateChatReq

// uint32 target_uid = 5;
inline void PullPrivateChatReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PullPrivateChatReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatReq.target_uid)
  return target_uid_;
}
inline void PullPrivateChatReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatReq.target_uid)
}

// uint32 pull_num = 7;
inline void PullPrivateChatReq::clear_pull_num() {
  pull_num_ = 0u;
}
inline ::google::protobuf::uint32 PullPrivateChatReq::pull_num() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatReq.pull_num)
  return pull_num_;
}
inline void PullPrivateChatReq::set_pull_num(::google::protobuf::uint32 value) {
  
  pull_num_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatReq.pull_num)
}

// uint32 from_sequence = 12;
inline void PullPrivateChatReq::clear_from_sequence() {
  from_sequence_ = 0u;
}
inline ::google::protobuf::uint32 PullPrivateChatReq::from_sequence() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatReq.from_sequence)
  return from_sequence_;
}
inline void PullPrivateChatReq::set_from_sequence(::google::protobuf::uint32 value) {
  
  from_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatReq.from_sequence)
}

// -------------------------------------------------------------------

// PullPrivateChatRsp

// repeated .proto.ChatInfo chat_info = 15;
inline int PullPrivateChatRsp::chat_info_size() const {
  return chat_info_.size();
}
inline void PullPrivateChatRsp::clear_chat_info() {
  chat_info_.Clear();
}
inline const ::proto::ChatInfo& PullPrivateChatRsp::chat_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatRsp.chat_info)
  return chat_info_.Get(index);
}
inline ::proto::ChatInfo* PullPrivateChatRsp::mutable_chat_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PullPrivateChatRsp.chat_info)
  return chat_info_.Mutable(index);
}
inline ::proto::ChatInfo* PullPrivateChatRsp::add_chat_info() {
  // @@protoc_insertion_point(field_add:proto.PullPrivateChatRsp.chat_info)
  return chat_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
PullPrivateChatRsp::mutable_chat_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.PullPrivateChatRsp.chat_info)
  return &chat_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
PullPrivateChatRsp::chat_info() const {
  // @@protoc_insertion_point(field_list:proto.PullPrivateChatRsp.chat_info)
  return chat_info_;
}

// int32 retcode = 11;
inline void PullPrivateChatRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PullPrivateChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatRsp.retcode)
  return retcode_;
}
inline void PullPrivateChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatRsp.retcode)
}

// -------------------------------------------------------------------

// PullRecentChatReq

// uint32 pull_num = 6;
inline void PullRecentChatReq::clear_pull_num() {
  pull_num_ = 0u;
}
inline ::google::protobuf::uint32 PullRecentChatReq::pull_num() const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatReq.pull_num)
  return pull_num_;
}
inline void PullRecentChatReq::set_pull_num(::google::protobuf::uint32 value) {
  
  pull_num_ = value;
  // @@protoc_insertion_point(field_set:proto.PullRecentChatReq.pull_num)
}

// uint32 begin_sequence = 15;
inline void PullRecentChatReq::clear_begin_sequence() {
  begin_sequence_ = 0u;
}
inline ::google::protobuf::uint32 PullRecentChatReq::begin_sequence() const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatReq.begin_sequence)
  return begin_sequence_;
}
inline void PullRecentChatReq::set_begin_sequence(::google::protobuf::uint32 value) {
  
  begin_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.PullRecentChatReq.begin_sequence)
}

// -------------------------------------------------------------------

// PullRecentChatRsp

// repeated .proto.ChatInfo chat_info = 15;
inline int PullRecentChatRsp::chat_info_size() const {
  return chat_info_.size();
}
inline void PullRecentChatRsp::clear_chat_info() {
  chat_info_.Clear();
}
inline const ::proto::ChatInfo& PullRecentChatRsp::chat_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatRsp.chat_info)
  return chat_info_.Get(index);
}
inline ::proto::ChatInfo* PullRecentChatRsp::mutable_chat_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PullRecentChatRsp.chat_info)
  return chat_info_.Mutable(index);
}
inline ::proto::ChatInfo* PullRecentChatRsp::add_chat_info() {
  // @@protoc_insertion_point(field_add:proto.PullRecentChatRsp.chat_info)
  return chat_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
PullRecentChatRsp::mutable_chat_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.PullRecentChatRsp.chat_info)
  return &chat_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
PullRecentChatRsp::chat_info() const {
  // @@protoc_insertion_point(field_list:proto.PullRecentChatRsp.chat_info)
  return chat_info_;
}

// int32 retcode = 3;
inline void PullRecentChatRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PullRecentChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatRsp.retcode)
  return retcode_;
}
inline void PullRecentChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PullRecentChatRsp.retcode)
}

// -------------------------------------------------------------------

// ReadPrivateChatReq

// uint32 target_uid = 1;
inline void ReadPrivateChatReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 ReadPrivateChatReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ReadPrivateChatReq.target_uid)
  return target_uid_;
}
inline void ReadPrivateChatReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadPrivateChatReq.target_uid)
}

// -------------------------------------------------------------------

// ReadPrivateChatRsp

// int32 retcode = 1;
inline void ReadPrivateChatRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ReadPrivateChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ReadPrivateChatRsp.retcode)
  return retcode_;
}
inline void ReadPrivateChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadPrivateChatRsp.retcode)
}

// -------------------------------------------------------------------

// ChatChannelUpdateNotify

// uint32 channel_id = 3;
inline void ChatChannelUpdateNotify::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 ChatChannelUpdateNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelUpdateNotify.channel_id)
  return channel_id_;
}
inline void ChatChannelUpdateNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelUpdateNotify.channel_id)
}

// bool is_create = 15;
inline void ChatChannelUpdateNotify::clear_is_create() {
  is_create_ = false;
}
inline bool ChatChannelUpdateNotify::is_create() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelUpdateNotify.is_create)
  return is_create_;
}
inline void ChatChannelUpdateNotify::set_is_create(bool value) {
  
  is_create_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelUpdateNotify.is_create)
}

// .proto.ChatChannelInfo channel_info = 14;
inline bool ChatChannelUpdateNotify::has_channel_info() const {
  return this != internal_default_instance() && channel_info_ != NULL;
}
inline void ChatChannelUpdateNotify::clear_channel_info() {
  if (GetArenaNoVirtual() == NULL && channel_info_ != NULL) delete channel_info_;
  channel_info_ = NULL;
}
inline const ::proto::ChatChannelInfo& ChatChannelUpdateNotify::channel_info() const {
  const ::proto::ChatChannelInfo* p = channel_info_;
  // @@protoc_insertion_point(field_get:proto.ChatChannelUpdateNotify.channel_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatChannelInfo*>(
      &::proto::_ChatChannelInfo_default_instance_);
}
inline ::proto::ChatChannelInfo* ChatChannelUpdateNotify::mutable_channel_info() {
  
  if (channel_info_ == NULL) {
    channel_info_ = new ::proto::ChatChannelInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatChannelUpdateNotify.channel_info)
  return channel_info_;
}
inline ::proto::ChatChannelInfo* ChatChannelUpdateNotify::release_channel_info() {
  // @@protoc_insertion_point(field_release:proto.ChatChannelUpdateNotify.channel_info)
  
  ::proto::ChatChannelInfo* temp = channel_info_;
  channel_info_ = NULL;
  return temp;
}
inline void ChatChannelUpdateNotify::set_allocated_channel_info(::proto::ChatChannelInfo* channel_info) {
  delete channel_info_;
  channel_info_ = channel_info;
  if (channel_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatChannelUpdateNotify.channel_info)
}

// -------------------------------------------------------------------

// ChatChannelInfo

// bool is_shield = 15;
inline void ChatChannelInfo::clear_is_shield() {
  is_shield_ = false;
}
inline bool ChatChannelInfo::is_shield() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelInfo.is_shield)
  return is_shield_;
}
inline void ChatChannelInfo::set_is_shield(bool value) {
  
  is_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelInfo.is_shield)
}

// uint32 channel_id = 8;
inline void ChatChannelInfo::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 ChatChannelInfo::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelInfo.channel_id)
  return channel_id_;
}
inline void ChatChannelInfo::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelInfo.channel_id)
}

// -------------------------------------------------------------------

// ChatChannelDataNotify

// repeated uint32 channel_list = 3;
inline int ChatChannelDataNotify::channel_list_size() const {
  return channel_list_.size();
}
inline void ChatChannelDataNotify::clear_channel_list() {
  channel_list_.Clear();
}
inline ::google::protobuf::uint32 ChatChannelDataNotify::channel_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelDataNotify.channel_list)
  return channel_list_.Get(index);
}
inline void ChatChannelDataNotify::set_channel_list(int index, ::google::protobuf::uint32 value) {
  channel_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChatChannelDataNotify.channel_list)
}
inline void ChatChannelDataNotify::add_channel_list(::google::protobuf::uint32 value) {
  channel_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChatChannelDataNotify.channel_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChatChannelDataNotify::channel_list() const {
  // @@protoc_insertion_point(field_list:proto.ChatChannelDataNotify.channel_list)
  return channel_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChatChannelDataNotify::mutable_channel_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatChannelDataNotify.channel_list)
  return &channel_list_;
}

// repeated .proto.ChatChannelInfo channel_info_list = 7;
inline int ChatChannelDataNotify::channel_info_list_size() const {
  return channel_info_list_.size();
}
inline void ChatChannelDataNotify::clear_channel_info_list() {
  channel_info_list_.Clear();
}
inline const ::proto::ChatChannelInfo& ChatChannelDataNotify::channel_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_.Get(index);
}
inline ::proto::ChatChannelInfo* ChatChannelDataNotify::mutable_channel_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_.Mutable(index);
}
inline ::proto::ChatChannelInfo* ChatChannelDataNotify::add_channel_info_list() {
  // @@protoc_insertion_point(field_add:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ChatChannelInfo >*
ChatChannelDataNotify::mutable_channel_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatChannelDataNotify.channel_info_list)
  return &channel_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ChatChannelInfo >&
ChatChannelDataNotify::channel_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_;
}

// -------------------------------------------------------------------

// ChatChannelShieldNotify

// bool is_shield = 5;
inline void ChatChannelShieldNotify::clear_is_shield() {
  is_shield_ = false;
}
inline bool ChatChannelShieldNotify::is_shield() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelShieldNotify.is_shield)
  return is_shield_;
}
inline void ChatChannelShieldNotify::set_is_shield(bool value) {
  
  is_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelShieldNotify.is_shield)
}

// uint32 channel_id = 14;
inline void ChatChannelShieldNotify::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 ChatChannelShieldNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelShieldNotify.channel_id)
  return channel_id_;
}
inline void ChatChannelShieldNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelShieldNotify.channel_id)
}

// -------------------------------------------------------------------

// ChatChannelInfoNotify

// .proto.ChatChannelInfo channel_info = 2;
inline bool ChatChannelInfoNotify::has_channel_info() const {
  return this != internal_default_instance() && channel_info_ != NULL;
}
inline void ChatChannelInfoNotify::clear_channel_info() {
  if (GetArenaNoVirtual() == NULL && channel_info_ != NULL) delete channel_info_;
  channel_info_ = NULL;
}
inline const ::proto::ChatChannelInfo& ChatChannelInfoNotify::channel_info() const {
  const ::proto::ChatChannelInfo* p = channel_info_;
  // @@protoc_insertion_point(field_get:proto.ChatChannelInfoNotify.channel_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatChannelInfo*>(
      &::proto::_ChatChannelInfo_default_instance_);
}
inline ::proto::ChatChannelInfo* ChatChannelInfoNotify::mutable_channel_info() {
  
  if (channel_info_ == NULL) {
    channel_info_ = new ::proto::ChatChannelInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatChannelInfoNotify.channel_info)
  return channel_info_;
}
inline ::proto::ChatChannelInfo* ChatChannelInfoNotify::release_channel_info() {
  // @@protoc_insertion_point(field_release:proto.ChatChannelInfoNotify.channel_info)
  
  ::proto::ChatChannelInfo* temp = channel_info_;
  channel_info_ = NULL;
  return temp;
}
inline void ChatChannelInfoNotify::set_allocated_channel_info(::proto::ChatChannelInfo* channel_info) {
  delete channel_info_;
  channel_info_ = channel_info;
  if (channel_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatChannelInfoNotify.channel_info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fchat_2eproto__INCLUDED
