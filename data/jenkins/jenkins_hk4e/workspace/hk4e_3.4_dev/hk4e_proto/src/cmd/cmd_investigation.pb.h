// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_investigation.proto

#ifndef PROTOBUF_cmd_2fcmd_5finvestigation_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5finvestigation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class GetInvestigationMonsterReq;
class GetInvestigationMonsterReqDefaultTypeInternal;
extern GetInvestigationMonsterReqDefaultTypeInternal _GetInvestigationMonsterReq_default_instance_;
class GetInvestigationMonsterRsp;
class GetInvestigationMonsterRspDefaultTypeInternal;
extern GetInvestigationMonsterRspDefaultTypeInternal _GetInvestigationMonsterRsp_default_instance_;
class Investigation;
class InvestigationDefaultTypeInternal;
extern InvestigationDefaultTypeInternal _Investigation_default_instance_;
class InvestigationMonster;
class InvestigationMonsterDefaultTypeInternal;
extern InvestigationMonsterDefaultTypeInternal _InvestigationMonster_default_instance_;
class InvestigationMonsterUpdateNotify;
class InvestigationMonsterUpdateNotifyDefaultTypeInternal;
extern InvestigationMonsterUpdateNotifyDefaultTypeInternal _InvestigationMonsterUpdateNotify_default_instance_;
class InvestigationQuestDailyNotify;
class InvestigationQuestDailyNotifyDefaultTypeInternal;
extern InvestigationQuestDailyNotifyDefaultTypeInternal _InvestigationQuestDailyNotify_default_instance_;
class InvestigationReadQuestDailyNotify;
class InvestigationReadQuestDailyNotifyDefaultTypeInternal;
extern InvestigationReadQuestDailyNotifyDefaultTypeInternal _InvestigationReadQuestDailyNotify_default_instance_;
class InvestigationTarget;
class InvestigationTargetDefaultTypeInternal;
extern InvestigationTargetDefaultTypeInternal _InvestigationTarget_default_instance_;
class MarkTargetInvestigationMonsterNotify;
class MarkTargetInvestigationMonsterNotifyDefaultTypeInternal;
extern MarkTargetInvestigationMonsterNotifyDefaultTypeInternal _MarkTargetInvestigationMonsterNotify_default_instance_;
class PlayerInvestigationAllInfoNotify;
class PlayerInvestigationAllInfoNotifyDefaultTypeInternal;
extern PlayerInvestigationAllInfoNotifyDefaultTypeInternal _PlayerInvestigationAllInfoNotify_default_instance_;
class PlayerInvestigationNotify;
class PlayerInvestigationNotifyDefaultTypeInternal;
extern PlayerInvestigationNotifyDefaultTypeInternal _PlayerInvestigationNotify_default_instance_;
class PlayerInvestigationTargetNotify;
class PlayerInvestigationTargetNotifyDefaultTypeInternal;
extern PlayerInvestigationTargetNotifyDefaultTypeInternal _PlayerInvestigationTargetNotify_default_instance_;
class TakeInvestigationRewardReq;
class TakeInvestigationRewardReqDefaultTypeInternal;
extern TakeInvestigationRewardReqDefaultTypeInternal _TakeInvestigationRewardReq_default_instance_;
class TakeInvestigationRewardRsp;
class TakeInvestigationRewardRspDefaultTypeInternal;
extern TakeInvestigationRewardRspDefaultTypeInternal _TakeInvestigationRewardRsp_default_instance_;
class TakeInvestigationTargetRewardReq;
class TakeInvestigationTargetRewardReqDefaultTypeInternal;
extern TakeInvestigationTargetRewardReqDefaultTypeInternal _TakeInvestigationTargetRewardReq_default_instance_;
class TakeInvestigationTargetRewardRsp;
class TakeInvestigationTargetRewardRspDefaultTypeInternal;
extern TakeInvestigationTargetRewardRspDefaultTypeInternal _TakeInvestigationTargetRewardRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5finvestigation_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5finvestigation_2eproto

enum Investigation_State {
  Investigation_State_INVALID = 0,
  Investigation_State_IN_PROGRESS = 1,
  Investigation_State_COMPLETE = 2,
  Investigation_State_REWARD_TAKEN = 3,
  Investigation_State_Investigation_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Investigation_State_Investigation_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Investigation_State_IsValid(int value);
const Investigation_State Investigation_State_State_MIN = Investigation_State_INVALID;
const Investigation_State Investigation_State_State_MAX = Investigation_State_REWARD_TAKEN;
const int Investigation_State_State_ARRAYSIZE = Investigation_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* Investigation_State_descriptor();
inline const ::std::string& Investigation_State_Name(Investigation_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    Investigation_State_descriptor(), value);
}
inline bool Investigation_State_Parse(
    const ::std::string& name, Investigation_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Investigation_State>(
    Investigation_State_descriptor(), name, value);
}
enum InvestigationTarget_State {
  InvestigationTarget_State_INVALID = 0,
  InvestigationTarget_State_IN_PROGRESS = 1,
  InvestigationTarget_State_COMPLETE = 2,
  InvestigationTarget_State_REWARD_TAKEN = 3,
  InvestigationTarget_State_InvestigationTarget_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InvestigationTarget_State_InvestigationTarget_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InvestigationTarget_State_IsValid(int value);
const InvestigationTarget_State InvestigationTarget_State_State_MIN = InvestigationTarget_State_INVALID;
const InvestigationTarget_State InvestigationTarget_State_State_MAX = InvestigationTarget_State_REWARD_TAKEN;
const int InvestigationTarget_State_State_ARRAYSIZE = InvestigationTarget_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* InvestigationTarget_State_descriptor();
inline const ::std::string& InvestigationTarget_State_Name(InvestigationTarget_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    InvestigationTarget_State_descriptor(), value);
}
inline bool InvestigationTarget_State_Parse(
    const ::std::string& name, InvestigationTarget_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InvestigationTarget_State>(
    InvestigationTarget_State_descriptor(), name, value);
}
enum InvestigationMonster_LockState {
  InvestigationMonster_LockState_LOCK_NONE = 0,
  InvestigationMonster_LockState_LOCK_QUEST = 1,
  InvestigationMonster_LockState_InvestigationMonster_LockState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InvestigationMonster_LockState_InvestigationMonster_LockState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InvestigationMonster_LockState_IsValid(int value);
const InvestigationMonster_LockState InvestigationMonster_LockState_LockState_MIN = InvestigationMonster_LockState_LOCK_NONE;
const InvestigationMonster_LockState InvestigationMonster_LockState_LockState_MAX = InvestigationMonster_LockState_LOCK_QUEST;
const int InvestigationMonster_LockState_LockState_ARRAYSIZE = InvestigationMonster_LockState_LockState_MAX + 1;

const ::google::protobuf::EnumDescriptor* InvestigationMonster_LockState_descriptor();
inline const ::std::string& InvestigationMonster_LockState_Name(InvestigationMonster_LockState value) {
  return ::google::protobuf::internal::NameOfEnum(
    InvestigationMonster_LockState_descriptor(), value);
}
inline bool InvestigationMonster_LockState_Parse(
    const ::std::string& name, InvestigationMonster_LockState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InvestigationMonster_LockState>(
    InvestigationMonster_LockState_descriptor(), name, value);
}
// ===================================================================

class Investigation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Investigation) */ {
 public:
  Investigation();
  virtual ~Investigation();

  Investigation(const Investigation& from);

  inline Investigation& operator=(const Investigation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Investigation(Investigation&& from) noexcept
    : Investigation() {
    *this = ::std::move(from);
  }

  inline Investigation& operator=(Investigation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Investigation& default_instance();

  static inline const Investigation* internal_default_instance() {
    return reinterpret_cast<const Investigation*>(
               &_Investigation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Investigation* other);
  friend void swap(Investigation& a, Investigation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Investigation* New() const PROTOBUF_FINAL { return New(NULL); }

  Investigation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Investigation& from);
  void MergeFrom(const Investigation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Investigation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Investigation_State State;
  static const State INVALID =
    Investigation_State_INVALID;
  static const State IN_PROGRESS =
    Investigation_State_IN_PROGRESS;
  static const State COMPLETE =
    Investigation_State_COMPLETE;
  static const State REWARD_TAKEN =
    Investigation_State_REWARD_TAKEN;
  static inline bool State_IsValid(int value) {
    return Investigation_State_IsValid(value);
  }
  static const State State_MIN =
    Investigation_State_State_MIN;
  static const State State_MAX =
    Investigation_State_State_MAX;
  static const int State_ARRAYSIZE =
    Investigation_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return Investigation_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return Investigation_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return Investigation_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Investigation.State state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::proto::Investigation_State state() const;
  void set_state(::proto::Investigation_State value);

  // uint32 total_progress = 5;
  void clear_total_progress();
  static const int kTotalProgressFieldNumber = 5;
  ::google::protobuf::uint32 total_progress() const;
  void set_total_progress(::google::protobuf::uint32 value);

  // uint32 id = 9;
  void clear_id();
  static const int kIdFieldNumber = 9;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 progress = 13;
  void clear_progress();
  static const int kProgressFieldNumber = 13;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Investigation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  ::google::protobuf::uint32 total_progress_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvestigationTarget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InvestigationTarget) */ {
 public:
  InvestigationTarget();
  virtual ~InvestigationTarget();

  InvestigationTarget(const InvestigationTarget& from);

  inline InvestigationTarget& operator=(const InvestigationTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvestigationTarget(InvestigationTarget&& from) noexcept
    : InvestigationTarget() {
    *this = ::std::move(from);
  }

  inline InvestigationTarget& operator=(InvestigationTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestigationTarget& default_instance();

  static inline const InvestigationTarget* internal_default_instance() {
    return reinterpret_cast<const InvestigationTarget*>(
               &_InvestigationTarget_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(InvestigationTarget* other);
  friend void swap(InvestigationTarget& a, InvestigationTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvestigationTarget* New() const PROTOBUF_FINAL { return New(NULL); }

  InvestigationTarget* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvestigationTarget& from);
  void MergeFrom(const InvestigationTarget& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvestigationTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InvestigationTarget_State State;
  static const State INVALID =
    InvestigationTarget_State_INVALID;
  static const State IN_PROGRESS =
    InvestigationTarget_State_IN_PROGRESS;
  static const State COMPLETE =
    InvestigationTarget_State_COMPLETE;
  static const State REWARD_TAKEN =
    InvestigationTarget_State_REWARD_TAKEN;
  static inline bool State_IsValid(int value) {
    return InvestigationTarget_State_IsValid(value);
  }
  static const State State_MIN =
    InvestigationTarget_State_State_MIN;
  static const State State_MAX =
    InvestigationTarget_State_State_MAX;
  static const int State_ARRAYSIZE =
    InvestigationTarget_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return InvestigationTarget_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return InvestigationTarget_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return InvestigationTarget_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.InvestigationTarget.State state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::proto::InvestigationTarget_State state() const;
  void set_state(::proto::InvestigationTarget_State value);

  // uint32 investigation_id = 3;
  void clear_investigation_id();
  static const int kInvestigationIdFieldNumber = 3;
  ::google::protobuf::uint32 investigation_id() const;
  void set_investigation_id(::google::protobuf::uint32 value);

  // uint32 quest_id = 15;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 15;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // uint32 total_progress = 7;
  void clear_total_progress();
  static const int kTotalProgressFieldNumber = 7;
  ::google::protobuf::uint32 total_progress() const;
  void set_total_progress(::google::protobuf::uint32 value);

  // uint32 progress = 8;
  void clear_progress();
  static const int kProgressFieldNumber = 8;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InvestigationTarget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  ::google::protobuf::uint32 investigation_id_;
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 total_progress_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInvestigationAllInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerInvestigationAllInfoNotify) */ {
 public:
  PlayerInvestigationAllInfoNotify();
  virtual ~PlayerInvestigationAllInfoNotify();

  PlayerInvestigationAllInfoNotify(const PlayerInvestigationAllInfoNotify& from);

  inline PlayerInvestigationAllInfoNotify& operator=(const PlayerInvestigationAllInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInvestigationAllInfoNotify(PlayerInvestigationAllInfoNotify&& from) noexcept
    : PlayerInvestigationAllInfoNotify() {
    *this = ::std::move(from);
  }

  inline PlayerInvestigationAllInfoNotify& operator=(PlayerInvestigationAllInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInvestigationAllInfoNotify& default_instance();

  static inline const PlayerInvestigationAllInfoNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerInvestigationAllInfoNotify*>(
               &_PlayerInvestigationAllInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlayerInvestigationAllInfoNotify* other);
  friend void swap(PlayerInvestigationAllInfoNotify& a, PlayerInvestigationAllInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInvestigationAllInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInvestigationAllInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInvestigationAllInfoNotify& from);
  void MergeFrom(const PlayerInvestigationAllInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInvestigationAllInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.InvestigationTarget investigation_target_list = 12;
  int investigation_target_list_size() const;
  void clear_investigation_target_list();
  static const int kInvestigationTargetListFieldNumber = 12;
  const ::proto::InvestigationTarget& investigation_target_list(int index) const;
  ::proto::InvestigationTarget* mutable_investigation_target_list(int index);
  ::proto::InvestigationTarget* add_investigation_target_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >*
      mutable_investigation_target_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >&
      investigation_target_list() const;

  // repeated .proto.Investigation investigation_list = 15;
  int investigation_list_size() const;
  void clear_investigation_list();
  static const int kInvestigationListFieldNumber = 15;
  const ::proto::Investigation& investigation_list(int index) const;
  ::proto::Investigation* mutable_investigation_list(int index);
  ::proto::Investigation* add_investigation_list();
  ::google::protobuf::RepeatedPtrField< ::proto::Investigation >*
      mutable_investigation_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::Investigation >&
      investigation_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerInvestigationAllInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget > investigation_target_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::Investigation > investigation_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeInvestigationRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeInvestigationRewardReq) */ {
 public:
  TakeInvestigationRewardReq();
  virtual ~TakeInvestigationRewardReq();

  TakeInvestigationRewardReq(const TakeInvestigationRewardReq& from);

  inline TakeInvestigationRewardReq& operator=(const TakeInvestigationRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeInvestigationRewardReq(TakeInvestigationRewardReq&& from) noexcept
    : TakeInvestigationRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeInvestigationRewardReq& operator=(TakeInvestigationRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeInvestigationRewardReq& default_instance();

  static inline const TakeInvestigationRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeInvestigationRewardReq*>(
               &_TakeInvestigationRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TakeInvestigationRewardReq* other);
  friend void swap(TakeInvestigationRewardReq& a, TakeInvestigationRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeInvestigationRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeInvestigationRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeInvestigationRewardReq& from);
  void MergeFrom(const TakeInvestigationRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeInvestigationRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeInvestigationRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeInvestigationRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeInvestigationRewardRsp) */ {
 public:
  TakeInvestigationRewardRsp();
  virtual ~TakeInvestigationRewardRsp();

  TakeInvestigationRewardRsp(const TakeInvestigationRewardRsp& from);

  inline TakeInvestigationRewardRsp& operator=(const TakeInvestigationRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeInvestigationRewardRsp(TakeInvestigationRewardRsp&& from) noexcept
    : TakeInvestigationRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeInvestigationRewardRsp& operator=(TakeInvestigationRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeInvestigationRewardRsp& default_instance();

  static inline const TakeInvestigationRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeInvestigationRewardRsp*>(
               &_TakeInvestigationRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TakeInvestigationRewardRsp* other);
  friend void swap(TakeInvestigationRewardRsp& a, TakeInvestigationRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeInvestigationRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeInvestigationRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeInvestigationRewardRsp& from);
  void MergeFrom(const TakeInvestigationRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeInvestigationRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 id = 12;
  void clear_id();
  static const int kIdFieldNumber = 12;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeInvestigationRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeInvestigationTargetRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeInvestigationTargetRewardReq) */ {
 public:
  TakeInvestigationTargetRewardReq();
  virtual ~TakeInvestigationTargetRewardReq();

  TakeInvestigationTargetRewardReq(const TakeInvestigationTargetRewardReq& from);

  inline TakeInvestigationTargetRewardReq& operator=(const TakeInvestigationTargetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeInvestigationTargetRewardReq(TakeInvestigationTargetRewardReq&& from) noexcept
    : TakeInvestigationTargetRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeInvestigationTargetRewardReq& operator=(TakeInvestigationTargetRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeInvestigationTargetRewardReq& default_instance();

  static inline const TakeInvestigationTargetRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeInvestigationTargetRewardReq*>(
               &_TakeInvestigationTargetRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TakeInvestigationTargetRewardReq* other);
  friend void swap(TakeInvestigationTargetRewardReq& a, TakeInvestigationTargetRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeInvestigationTargetRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeInvestigationTargetRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeInvestigationTargetRewardReq& from);
  void MergeFrom(const TakeInvestigationTargetRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeInvestigationTargetRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 quest_id = 11;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 11;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeInvestigationTargetRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeInvestigationTargetRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeInvestigationTargetRewardRsp) */ {
 public:
  TakeInvestigationTargetRewardRsp();
  virtual ~TakeInvestigationTargetRewardRsp();

  TakeInvestigationTargetRewardRsp(const TakeInvestigationTargetRewardRsp& from);

  inline TakeInvestigationTargetRewardRsp& operator=(const TakeInvestigationTargetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeInvestigationTargetRewardRsp(TakeInvestigationTargetRewardRsp&& from) noexcept
    : TakeInvestigationTargetRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeInvestigationTargetRewardRsp& operator=(TakeInvestigationTargetRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeInvestigationTargetRewardRsp& default_instance();

  static inline const TakeInvestigationTargetRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeInvestigationTargetRewardRsp*>(
               &_TakeInvestigationTargetRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TakeInvestigationTargetRewardRsp* other);
  friend void swap(TakeInvestigationTargetRewardRsp& a, TakeInvestigationTargetRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeInvestigationTargetRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeInvestigationTargetRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeInvestigationTargetRewardRsp& from);
  void MergeFrom(const TakeInvestigationTargetRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeInvestigationTargetRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 quest_id = 2;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 2;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeInvestigationTargetRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInvestigationMonsterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetInvestigationMonsterReq) */ {
 public:
  GetInvestigationMonsterReq();
  virtual ~GetInvestigationMonsterReq();

  GetInvestigationMonsterReq(const GetInvestigationMonsterReq& from);

  inline GetInvestigationMonsterReq& operator=(const GetInvestigationMonsterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInvestigationMonsterReq(GetInvestigationMonsterReq&& from) noexcept
    : GetInvestigationMonsterReq() {
    *this = ::std::move(from);
  }

  inline GetInvestigationMonsterReq& operator=(GetInvestigationMonsterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvestigationMonsterReq& default_instance();

  static inline const GetInvestigationMonsterReq* internal_default_instance() {
    return reinterpret_cast<const GetInvestigationMonsterReq*>(
               &_GetInvestigationMonsterReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetInvestigationMonsterReq* other);
  friend void swap(GetInvestigationMonsterReq& a, GetInvestigationMonsterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInvestigationMonsterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetInvestigationMonsterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetInvestigationMonsterReq& from);
  void MergeFrom(const GetInvestigationMonsterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetInvestigationMonsterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 city_id_list = 3;
  int city_id_list_size() const;
  void clear_city_id_list();
  static const int kCityIdListFieldNumber = 3;
  ::google::protobuf::uint32 city_id_list(int index) const;
  void set_city_id_list(int index, ::google::protobuf::uint32 value);
  void add_city_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      city_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_city_id_list();

  // bool is_for_mark = 4;
  void clear_is_for_mark();
  static const int kIsForMarkFieldNumber = 4;
  bool is_for_mark() const;
  void set_is_for_mark(bool value);

  // @@protoc_insertion_point(class_scope:proto.GetInvestigationMonsterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > city_id_list_;
  mutable int _city_id_list_cached_byte_size_;
  bool is_for_mark_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvestigationMonster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InvestigationMonster) */ {
 public:
  InvestigationMonster();
  virtual ~InvestigationMonster();

  InvestigationMonster(const InvestigationMonster& from);

  inline InvestigationMonster& operator=(const InvestigationMonster& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvestigationMonster(InvestigationMonster&& from) noexcept
    : InvestigationMonster() {
    *this = ::std::move(from);
  }

  inline InvestigationMonster& operator=(InvestigationMonster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestigationMonster& default_instance();

  static inline const InvestigationMonster* internal_default_instance() {
    return reinterpret_cast<const InvestigationMonster*>(
               &_InvestigationMonster_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(InvestigationMonster* other);
  friend void swap(InvestigationMonster& a, InvestigationMonster& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvestigationMonster* New() const PROTOBUF_FINAL { return New(NULL); }

  InvestigationMonster* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvestigationMonster& from);
  void MergeFrom(const InvestigationMonster& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvestigationMonster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef InvestigationMonster_LockState LockState;
  static const LockState LOCK_NONE =
    InvestigationMonster_LockState_LOCK_NONE;
  static const LockState LOCK_QUEST =
    InvestigationMonster_LockState_LOCK_QUEST;
  static inline bool LockState_IsValid(int value) {
    return InvestigationMonster_LockState_IsValid(value);
  }
  static const LockState LockState_MIN =
    InvestigationMonster_LockState_LockState_MIN;
  static const LockState LockState_MAX =
    InvestigationMonster_LockState_LockState_MAX;
  static const int LockState_ARRAYSIZE =
    InvestigationMonster_LockState_LockState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LockState_descriptor() {
    return InvestigationMonster_LockState_descriptor();
  }
  static inline const ::std::string& LockState_Name(LockState value) {
    return InvestigationMonster_LockState_Name(value);
  }
  static inline bool LockState_Parse(const ::std::string& name,
      LockState* value) {
    return InvestigationMonster_LockState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
  bool has_weekly_boss_resin_discount_info() const;
  void clear_weekly_boss_resin_discount_info();
  static const int kWeeklyBossResinDiscountInfoFieldNumber = 12;
  const ::proto::WeeklyBossResinDiscountInfo& weekly_boss_resin_discount_info() const;
  ::proto::WeeklyBossResinDiscountInfo* mutable_weekly_boss_resin_discount_info();
  ::proto::WeeklyBossResinDiscountInfo* release_weekly_boss_resin_discount_info();
  void set_allocated_weekly_boss_resin_discount_info(::proto::WeeklyBossResinDiscountInfo* weekly_boss_resin_discount_info);

  // .proto.Vector pos = 14;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 14;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 boss_chest_num = 1;
  void clear_boss_chest_num();
  static const int kBossChestNumFieldNumber = 1;
  ::google::protobuf::uint32 boss_chest_num() const;
  void set_boss_chest_num(::google::protobuf::uint32 value);

  // .proto.InvestigationMonster.LockState lock_state = 2;
  void clear_lock_state();
  static const int kLockStateFieldNumber = 2;
  ::proto::InvestigationMonster_LockState lock_state() const;
  void set_lock_state(::proto::InvestigationMonster_LockState value);

  // uint32 refresh_interval = 3;
  void clear_refresh_interval();
  static const int kRefreshIntervalFieldNumber = 3;
  ::google::protobuf::uint32 refresh_interval() const;
  void set_refresh_interval(::google::protobuf::uint32 value);

  // uint32 max_boss_chest_num = 4;
  void clear_max_boss_chest_num();
  static const int kMaxBossChestNumFieldNumber = 4;
  ::google::protobuf::uint32 max_boss_chest_num() const;
  void set_max_boss_chest_num(::google::protobuf::uint32 value);

  // uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 city_id = 6;
  void clear_city_id();
  static const int kCityIdFieldNumber = 6;
  ::google::protobuf::uint32 city_id() const;
  void set_city_id(::google::protobuf::uint32 value);

  // uint32 next_boss_chest_refresh_time = 7;
  void clear_next_boss_chest_refresh_time();
  static const int kNextBossChestRefreshTimeFieldNumber = 7;
  ::google::protobuf::uint32 next_boss_chest_refresh_time() const;
  void set_next_boss_chest_refresh_time(::google::protobuf::uint32 value);

  // uint32 resin = 8;
  void clear_resin();
  static const int kResinFieldNumber = 8;
  ::google::protobuf::uint32 resin() const;
  void set_resin(::google::protobuf::uint32 value);

  // uint32 scene_id = 10;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 10;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 next_refresh_time = 11;
  void clear_next_refresh_time();
  static const int kNextRefreshTimeFieldNumber = 11;
  ::google::protobuf::uint32 next_refresh_time() const;
  void set_next_refresh_time(::google::protobuf::uint32 value);

  // bool is_alive = 9;
  void clear_is_alive();
  static const int kIsAliveFieldNumber = 9;
  bool is_alive() const;
  void set_is_alive(bool value);

  // bool is_area_locked = 15;
  void clear_is_area_locked();
  static const int kIsAreaLockedFieldNumber = 15;
  bool is_area_locked() const;
  void set_is_area_locked(bool value);

  // uint32 id = 13;
  void clear_id();
  static const int kIdFieldNumber = 13;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 group_id = 285;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 285;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 monster_id = 301;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 301;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InvestigationMonster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::WeeklyBossResinDiscountInfo* weekly_boss_resin_discount_info_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 boss_chest_num_;
  int lock_state_;
  ::google::protobuf::uint32 refresh_interval_;
  ::google::protobuf::uint32 max_boss_chest_num_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 city_id_;
  ::google::protobuf::uint32 next_boss_chest_refresh_time_;
  ::google::protobuf::uint32 resin_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 next_refresh_time_;
  bool is_alive_;
  bool is_area_locked_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 monster_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInvestigationMonsterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetInvestigationMonsterRsp) */ {
 public:
  GetInvestigationMonsterRsp();
  virtual ~GetInvestigationMonsterRsp();

  GetInvestigationMonsterRsp(const GetInvestigationMonsterRsp& from);

  inline GetInvestigationMonsterRsp& operator=(const GetInvestigationMonsterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInvestigationMonsterRsp(GetInvestigationMonsterRsp&& from) noexcept
    : GetInvestigationMonsterRsp() {
    *this = ::std::move(from);
  }

  inline GetInvestigationMonsterRsp& operator=(GetInvestigationMonsterRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvestigationMonsterRsp& default_instance();

  static inline const GetInvestigationMonsterRsp* internal_default_instance() {
    return reinterpret_cast<const GetInvestigationMonsterRsp*>(
               &_GetInvestigationMonsterRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetInvestigationMonsterRsp* other);
  friend void swap(GetInvestigationMonsterRsp& a, GetInvestigationMonsterRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInvestigationMonsterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetInvestigationMonsterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetInvestigationMonsterRsp& from);
  void MergeFrom(const GetInvestigationMonsterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetInvestigationMonsterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.InvestigationMonster monster_list = 10;
  int monster_list_size() const;
  void clear_monster_list();
  static const int kMonsterListFieldNumber = 10;
  const ::proto::InvestigationMonster& monster_list(int index) const;
  ::proto::InvestigationMonster* mutable_monster_list(int index);
  ::proto::InvestigationMonster* add_monster_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InvestigationMonster >*
      mutable_monster_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationMonster >&
      monster_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool is_for_mark = 2;
  void clear_is_for_mark();
  static const int kIsForMarkFieldNumber = 2;
  bool is_for_mark() const;
  void set_is_for_mark(bool value);

  // @@protoc_insertion_point(class_scope:proto.GetInvestigationMonsterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::InvestigationMonster > monster_list_;
  ::google::protobuf::int32 retcode_;
  bool is_for_mark_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInvestigationNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerInvestigationNotify) */ {
 public:
  PlayerInvestigationNotify();
  virtual ~PlayerInvestigationNotify();

  PlayerInvestigationNotify(const PlayerInvestigationNotify& from);

  inline PlayerInvestigationNotify& operator=(const PlayerInvestigationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInvestigationNotify(PlayerInvestigationNotify&& from) noexcept
    : PlayerInvestigationNotify() {
    *this = ::std::move(from);
  }

  inline PlayerInvestigationNotify& operator=(PlayerInvestigationNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInvestigationNotify& default_instance();

  static inline const PlayerInvestigationNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerInvestigationNotify*>(
               &_PlayerInvestigationNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PlayerInvestigationNotify* other);
  friend void swap(PlayerInvestigationNotify& a, PlayerInvestigationNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInvestigationNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInvestigationNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInvestigationNotify& from);
  void MergeFrom(const PlayerInvestigationNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInvestigationNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Investigation investigation_list = 1;
  int investigation_list_size() const;
  void clear_investigation_list();
  static const int kInvestigationListFieldNumber = 1;
  const ::proto::Investigation& investigation_list(int index) const;
  ::proto::Investigation* mutable_investigation_list(int index);
  ::proto::Investigation* add_investigation_list();
  ::google::protobuf::RepeatedPtrField< ::proto::Investigation >*
      mutable_investigation_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::Investigation >&
      investigation_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerInvestigationNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Investigation > investigation_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInvestigationTargetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerInvestigationTargetNotify) */ {
 public:
  PlayerInvestigationTargetNotify();
  virtual ~PlayerInvestigationTargetNotify();

  PlayerInvestigationTargetNotify(const PlayerInvestigationTargetNotify& from);

  inline PlayerInvestigationTargetNotify& operator=(const PlayerInvestigationTargetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerInvestigationTargetNotify(PlayerInvestigationTargetNotify&& from) noexcept
    : PlayerInvestigationTargetNotify() {
    *this = ::std::move(from);
  }

  inline PlayerInvestigationTargetNotify& operator=(PlayerInvestigationTargetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInvestigationTargetNotify& default_instance();

  static inline const PlayerInvestigationTargetNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerInvestigationTargetNotify*>(
               &_PlayerInvestigationTargetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PlayerInvestigationTargetNotify* other);
  friend void swap(PlayerInvestigationTargetNotify& a, PlayerInvestigationTargetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerInvestigationTargetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInvestigationTargetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInvestigationTargetNotify& from);
  void MergeFrom(const PlayerInvestigationTargetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInvestigationTargetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.InvestigationTarget investigation_target_list = 1;
  int investigation_target_list_size() const;
  void clear_investigation_target_list();
  static const int kInvestigationTargetListFieldNumber = 1;
  const ::proto::InvestigationTarget& investigation_target_list(int index) const;
  ::proto::InvestigationTarget* mutable_investigation_target_list(int index);
  ::proto::InvestigationTarget* add_investigation_target_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >*
      mutable_investigation_target_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >&
      investigation_target_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerInvestigationTargetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget > investigation_target_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkTargetInvestigationMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkTargetInvestigationMonsterNotify) */ {
 public:
  MarkTargetInvestigationMonsterNotify();
  virtual ~MarkTargetInvestigationMonsterNotify();

  MarkTargetInvestigationMonsterNotify(const MarkTargetInvestigationMonsterNotify& from);

  inline MarkTargetInvestigationMonsterNotify& operator=(const MarkTargetInvestigationMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkTargetInvestigationMonsterNotify(MarkTargetInvestigationMonsterNotify&& from) noexcept
    : MarkTargetInvestigationMonsterNotify() {
    *this = ::std::move(from);
  }

  inline MarkTargetInvestigationMonsterNotify& operator=(MarkTargetInvestigationMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkTargetInvestigationMonsterNotify& default_instance();

  static inline const MarkTargetInvestigationMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const MarkTargetInvestigationMonsterNotify*>(
               &_MarkTargetInvestigationMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(MarkTargetInvestigationMonsterNotify* other);
  friend void swap(MarkTargetInvestigationMonsterNotify& a, MarkTargetInvestigationMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkTargetInvestigationMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkTargetInvestigationMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkTargetInvestigationMonsterNotify& from);
  void MergeFrom(const MarkTargetInvestigationMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkTargetInvestigationMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 monster_id = 4;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 4;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 group_id = 5;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 5;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 11;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 11;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 investigation_monster_id = 12;
  void clear_investigation_monster_id();
  static const int kInvestigationMonsterIdFieldNumber = 12;
  ::google::protobuf::uint32 investigation_monster_id() const;
  void set_investigation_monster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MarkTargetInvestigationMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 investigation_monster_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvestigationMonsterUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InvestigationMonsterUpdateNotify) */ {
 public:
  InvestigationMonsterUpdateNotify();
  virtual ~InvestigationMonsterUpdateNotify();

  InvestigationMonsterUpdateNotify(const InvestigationMonsterUpdateNotify& from);

  inline InvestigationMonsterUpdateNotify& operator=(const InvestigationMonsterUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvestigationMonsterUpdateNotify(InvestigationMonsterUpdateNotify&& from) noexcept
    : InvestigationMonsterUpdateNotify() {
    *this = ::std::move(from);
  }

  inline InvestigationMonsterUpdateNotify& operator=(InvestigationMonsterUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestigationMonsterUpdateNotify& default_instance();

  static inline const InvestigationMonsterUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const InvestigationMonsterUpdateNotify*>(
               &_InvestigationMonsterUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(InvestigationMonsterUpdateNotify* other);
  friend void swap(InvestigationMonsterUpdateNotify& a, InvestigationMonsterUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvestigationMonsterUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InvestigationMonsterUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvestigationMonsterUpdateNotify& from);
  void MergeFrom(const InvestigationMonsterUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvestigationMonsterUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.InvestigationMonster investigation_monster = 5;
  bool has_investigation_monster() const;
  void clear_investigation_monster();
  static const int kInvestigationMonsterFieldNumber = 5;
  const ::proto::InvestigationMonster& investigation_monster() const;
  ::proto::InvestigationMonster* mutable_investigation_monster();
  ::proto::InvestigationMonster* release_investigation_monster();
  void set_allocated_investigation_monster(::proto::InvestigationMonster* investigation_monster);

  // @@protoc_insertion_point(class_scope:proto.InvestigationMonsterUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::InvestigationMonster* investigation_monster_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvestigationQuestDailyNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InvestigationQuestDailyNotify) */ {
 public:
  InvestigationQuestDailyNotify();
  virtual ~InvestigationQuestDailyNotify();

  InvestigationQuestDailyNotify(const InvestigationQuestDailyNotify& from);

  inline InvestigationQuestDailyNotify& operator=(const InvestigationQuestDailyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvestigationQuestDailyNotify(InvestigationQuestDailyNotify&& from) noexcept
    : InvestigationQuestDailyNotify() {
    *this = ::std::move(from);
  }

  inline InvestigationQuestDailyNotify& operator=(InvestigationQuestDailyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestigationQuestDailyNotify& default_instance();

  static inline const InvestigationQuestDailyNotify* internal_default_instance() {
    return reinterpret_cast<const InvestigationQuestDailyNotify*>(
               &_InvestigationQuestDailyNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(InvestigationQuestDailyNotify* other);
  friend void swap(InvestigationQuestDailyNotify& a, InvestigationQuestDailyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvestigationQuestDailyNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InvestigationQuestDailyNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvestigationQuestDailyNotify& from);
  void MergeFrom(const InvestigationQuestDailyNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvestigationQuestDailyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.InvestigationQuestDailyNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvestigationReadQuestDailyNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InvestigationReadQuestDailyNotify) */ {
 public:
  InvestigationReadQuestDailyNotify();
  virtual ~InvestigationReadQuestDailyNotify();

  InvestigationReadQuestDailyNotify(const InvestigationReadQuestDailyNotify& from);

  inline InvestigationReadQuestDailyNotify& operator=(const InvestigationReadQuestDailyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvestigationReadQuestDailyNotify(InvestigationReadQuestDailyNotify&& from) noexcept
    : InvestigationReadQuestDailyNotify() {
    *this = ::std::move(from);
  }

  inline InvestigationReadQuestDailyNotify& operator=(InvestigationReadQuestDailyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestigationReadQuestDailyNotify& default_instance();

  static inline const InvestigationReadQuestDailyNotify* internal_default_instance() {
    return reinterpret_cast<const InvestigationReadQuestDailyNotify*>(
               &_InvestigationReadQuestDailyNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(InvestigationReadQuestDailyNotify* other);
  friend void swap(InvestigationReadQuestDailyNotify& a, InvestigationReadQuestDailyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvestigationReadQuestDailyNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InvestigationReadQuestDailyNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvestigationReadQuestDailyNotify& from);
  void MergeFrom(const InvestigationReadQuestDailyNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvestigationReadQuestDailyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.InvestigationReadQuestDailyNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5finvestigation_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Investigation

// uint32 total_progress = 5;
inline void Investigation::clear_total_progress() {
  total_progress_ = 0u;
}
inline ::google::protobuf::uint32 Investigation::total_progress() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.total_progress)
  return total_progress_;
}
inline void Investigation::set_total_progress(::google::protobuf::uint32 value) {
  
  total_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.total_progress)
}

// .proto.Investigation.State state = 2;
inline void Investigation::clear_state() {
  state_ = 0;
}
inline ::proto::Investigation_State Investigation::state() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.state)
  return static_cast< ::proto::Investigation_State >(state_);
}
inline void Investigation::set_state(::proto::Investigation_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.state)
}

// uint32 progress = 13;
inline void Investigation::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 Investigation::progress() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.progress)
  return progress_;
}
inline void Investigation::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.progress)
}

// uint32 id = 9;
inline void Investigation::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Investigation::id() const {
  // @@protoc_insertion_point(field_get:proto.Investigation.id)
  return id_;
}
inline void Investigation::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.Investigation.id)
}

// -------------------------------------------------------------------

// InvestigationTarget

// uint32 quest_id = 15;
inline void InvestigationTarget::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationTarget::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.quest_id)
  return quest_id_;
}
inline void InvestigationTarget::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.quest_id)
}

// .proto.InvestigationTarget.State state = 2;
inline void InvestigationTarget::clear_state() {
  state_ = 0;
}
inline ::proto::InvestigationTarget_State InvestigationTarget::state() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.state)
  return static_cast< ::proto::InvestigationTarget_State >(state_);
}
inline void InvestigationTarget::set_state(::proto::InvestigationTarget_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.state)
}

// uint32 progress = 8;
inline void InvestigationTarget::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationTarget::progress() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.progress)
  return progress_;
}
inline void InvestigationTarget::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.progress)
}

// uint32 total_progress = 7;
inline void InvestigationTarget::clear_total_progress() {
  total_progress_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationTarget::total_progress() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.total_progress)
  return total_progress_;
}
inline void InvestigationTarget::set_total_progress(::google::protobuf::uint32 value) {
  
  total_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.total_progress)
}

// uint32 investigation_id = 3;
inline void InvestigationTarget::clear_investigation_id() {
  investigation_id_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationTarget::investigation_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationTarget.investigation_id)
  return investigation_id_;
}
inline void InvestigationTarget::set_investigation_id(::google::protobuf::uint32 value) {
  
  investigation_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationTarget.investigation_id)
}

// -------------------------------------------------------------------

// PlayerInvestigationAllInfoNotify

// repeated .proto.Investigation investigation_list = 15;
inline int PlayerInvestigationAllInfoNotify::investigation_list_size() const {
  return investigation_list_.size();
}
inline void PlayerInvestigationAllInfoNotify::clear_investigation_list() {
  investigation_list_.Clear();
}
inline const ::proto::Investigation& PlayerInvestigationAllInfoNotify::investigation_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_.Get(index);
}
inline ::proto::Investigation* PlayerInvestigationAllInfoNotify::mutable_investigation_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_.Mutable(index);
}
inline ::proto::Investigation* PlayerInvestigationAllInfoNotify::add_investigation_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Investigation >*
PlayerInvestigationAllInfoNotify::mutable_investigation_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return &investigation_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Investigation >&
PlayerInvestigationAllInfoNotify::investigation_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationAllInfoNotify.investigation_list)
  return investigation_list_;
}

// repeated .proto.InvestigationTarget investigation_target_list = 12;
inline int PlayerInvestigationAllInfoNotify::investigation_target_list_size() const {
  return investigation_target_list_.size();
}
inline void PlayerInvestigationAllInfoNotify::clear_investigation_target_list() {
  investigation_target_list_.Clear();
}
inline const ::proto::InvestigationTarget& PlayerInvestigationAllInfoNotify::investigation_target_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_.Get(index);
}
inline ::proto::InvestigationTarget* PlayerInvestigationAllInfoNotify::mutable_investigation_target_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_.Mutable(index);
}
inline ::proto::InvestigationTarget* PlayerInvestigationAllInfoNotify::add_investigation_target_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >*
PlayerInvestigationAllInfoNotify::mutable_investigation_target_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return &investigation_target_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >&
PlayerInvestigationAllInfoNotify::investigation_target_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationAllInfoNotify.investigation_target_list)
  return investigation_target_list_;
}

// -------------------------------------------------------------------

// TakeInvestigationRewardReq

// uint32 id = 5;
inline void TakeInvestigationRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 TakeInvestigationRewardReq::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationRewardReq.id)
  return id_;
}
inline void TakeInvestigationRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationRewardReq.id)
}

// -------------------------------------------------------------------

// TakeInvestigationRewardRsp

// int32 retcode = 4;
inline void TakeInvestigationRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakeInvestigationRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationRewardRsp.retcode)
  return retcode_;
}
inline void TakeInvestigationRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationRewardRsp.retcode)
}

// uint32 id = 12;
inline void TakeInvestigationRewardRsp::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 TakeInvestigationRewardRsp::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationRewardRsp.id)
  return id_;
}
inline void TakeInvestigationRewardRsp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationRewardRsp.id)
}

// -------------------------------------------------------------------

// TakeInvestigationTargetRewardReq

// uint32 quest_id = 11;
inline void TakeInvestigationTargetRewardReq::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeInvestigationTargetRewardReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationTargetRewardReq.quest_id)
  return quest_id_;
}
inline void TakeInvestigationTargetRewardReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationTargetRewardReq.quest_id)
}

// -------------------------------------------------------------------

// TakeInvestigationTargetRewardRsp

// int32 retcode = 1;
inline void TakeInvestigationTargetRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakeInvestigationTargetRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationTargetRewardRsp.retcode)
  return retcode_;
}
inline void TakeInvestigationTargetRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationTargetRewardRsp.retcode)
}

// uint32 quest_id = 2;
inline void TakeInvestigationTargetRewardRsp::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeInvestigationTargetRewardRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeInvestigationTargetRewardRsp.quest_id)
  return quest_id_;
}
inline void TakeInvestigationTargetRewardRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeInvestigationTargetRewardRsp.quest_id)
}

// -------------------------------------------------------------------

// GetInvestigationMonsterReq

// repeated uint32 city_id_list = 3;
inline int GetInvestigationMonsterReq::city_id_list_size() const {
  return city_id_list_.size();
}
inline void GetInvestigationMonsterReq::clear_city_id_list() {
  city_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetInvestigationMonsterReq::city_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterReq.city_id_list)
  return city_id_list_.Get(index);
}
inline void GetInvestigationMonsterReq::set_city_id_list(int index, ::google::protobuf::uint32 value) {
  city_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterReq.city_id_list)
}
inline void GetInvestigationMonsterReq::add_city_id_list(::google::protobuf::uint32 value) {
  city_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetInvestigationMonsterReq.city_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetInvestigationMonsterReq::city_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetInvestigationMonsterReq.city_id_list)
  return city_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetInvestigationMonsterReq::mutable_city_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetInvestigationMonsterReq.city_id_list)
  return &city_id_list_;
}

// bool is_for_mark = 4;
inline void GetInvestigationMonsterReq::clear_is_for_mark() {
  is_for_mark_ = false;
}
inline bool GetInvestigationMonsterReq::is_for_mark() const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterReq.is_for_mark)
  return is_for_mark_;
}
inline void GetInvestigationMonsterReq::set_is_for_mark(bool value) {
  
  is_for_mark_ = value;
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterReq.is_for_mark)
}

// -------------------------------------------------------------------

// InvestigationMonster

// bool is_alive = 9;
inline void InvestigationMonster::clear_is_alive() {
  is_alive_ = false;
}
inline bool InvestigationMonster::is_alive() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.is_alive)
  return is_alive_;
}
inline void InvestigationMonster::set_is_alive(bool value) {
  
  is_alive_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.is_alive)
}

// uint32 refresh_interval = 3;
inline void InvestigationMonster::clear_refresh_interval() {
  refresh_interval_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::refresh_interval() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.refresh_interval)
  return refresh_interval_;
}
inline void InvestigationMonster::set_refresh_interval(::google::protobuf::uint32 value) {
  
  refresh_interval_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.refresh_interval)
}

// uint32 id = 13;
inline void InvestigationMonster::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.id)
  return id_;
}
inline void InvestigationMonster::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.id)
}

// uint32 level = 5;
inline void InvestigationMonster::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::level() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.level)
  return level_;
}
inline void InvestigationMonster::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.level)
}

// uint32 boss_chest_num = 1;
inline void InvestigationMonster::clear_boss_chest_num() {
  boss_chest_num_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::boss_chest_num() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.boss_chest_num)
  return boss_chest_num_;
}
inline void InvestigationMonster::set_boss_chest_num(::google::protobuf::uint32 value) {
  
  boss_chest_num_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.boss_chest_num)
}

// .proto.WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
inline bool InvestigationMonster::has_weekly_boss_resin_discount_info() const {
  return this != internal_default_instance() && weekly_boss_resin_discount_info_ != NULL;
}
inline void InvestigationMonster::clear_weekly_boss_resin_discount_info() {
  if (GetArenaNoVirtual() == NULL && weekly_boss_resin_discount_info_ != NULL) delete weekly_boss_resin_discount_info_;
  weekly_boss_resin_discount_info_ = NULL;
}
inline const ::proto::WeeklyBossResinDiscountInfo& InvestigationMonster::weekly_boss_resin_discount_info() const {
  const ::proto::WeeklyBossResinDiscountInfo* p = weekly_boss_resin_discount_info_;
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.weekly_boss_resin_discount_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WeeklyBossResinDiscountInfo*>(
      &::proto::_WeeklyBossResinDiscountInfo_default_instance_);
}
inline ::proto::WeeklyBossResinDiscountInfo* InvestigationMonster::mutable_weekly_boss_resin_discount_info() {
  
  if (weekly_boss_resin_discount_info_ == NULL) {
    weekly_boss_resin_discount_info_ = new ::proto::WeeklyBossResinDiscountInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.InvestigationMonster.weekly_boss_resin_discount_info)
  return weekly_boss_resin_discount_info_;
}
inline ::proto::WeeklyBossResinDiscountInfo* InvestigationMonster::release_weekly_boss_resin_discount_info() {
  // @@protoc_insertion_point(field_release:proto.InvestigationMonster.weekly_boss_resin_discount_info)
  
  ::proto::WeeklyBossResinDiscountInfo* temp = weekly_boss_resin_discount_info_;
  weekly_boss_resin_discount_info_ = NULL;
  return temp;
}
inline void InvestigationMonster::set_allocated_weekly_boss_resin_discount_info(::proto::WeeklyBossResinDiscountInfo* weekly_boss_resin_discount_info) {
  delete weekly_boss_resin_discount_info_;
  weekly_boss_resin_discount_info_ = weekly_boss_resin_discount_info;
  if (weekly_boss_resin_discount_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.InvestigationMonster.weekly_boss_resin_discount_info)
}

// uint32 monster_id = 301;
inline void InvestigationMonster::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.monster_id)
  return monster_id_;
}
inline void InvestigationMonster::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.monster_id)
}

// .proto.Vector pos = 14;
inline bool InvestigationMonster::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void InvestigationMonster::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& InvestigationMonster::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* InvestigationMonster::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.InvestigationMonster.pos)
  return pos_;
}
inline ::proto::Vector* InvestigationMonster::release_pos() {
  // @@protoc_insertion_point(field_release:proto.InvestigationMonster.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void InvestigationMonster::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.InvestigationMonster.pos)
}

// uint32 resin = 8;
inline void InvestigationMonster::clear_resin() {
  resin_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::resin() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.resin)
  return resin_;
}
inline void InvestigationMonster::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.resin)
}

// uint32 max_boss_chest_num = 4;
inline void InvestigationMonster::clear_max_boss_chest_num() {
  max_boss_chest_num_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::max_boss_chest_num() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.max_boss_chest_num)
  return max_boss_chest_num_;
}
inline void InvestigationMonster::set_max_boss_chest_num(::google::protobuf::uint32 value) {
  
  max_boss_chest_num_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.max_boss_chest_num)
}

// uint32 next_refresh_time = 11;
inline void InvestigationMonster::clear_next_refresh_time() {
  next_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::next_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.next_refresh_time)
  return next_refresh_time_;
}
inline void InvestigationMonster::set_next_refresh_time(::google::protobuf::uint32 value) {
  
  next_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.next_refresh_time)
}

// uint32 group_id = 285;
inline void InvestigationMonster::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::group_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.group_id)
  return group_id_;
}
inline void InvestigationMonster::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.group_id)
}

// uint32 scene_id = 10;
inline void InvestigationMonster::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.scene_id)
  return scene_id_;
}
inline void InvestigationMonster::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.scene_id)
}

// bool is_area_locked = 15;
inline void InvestigationMonster::clear_is_area_locked() {
  is_area_locked_ = false;
}
inline bool InvestigationMonster::is_area_locked() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.is_area_locked)
  return is_area_locked_;
}
inline void InvestigationMonster::set_is_area_locked(bool value) {
  
  is_area_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.is_area_locked)
}

// .proto.InvestigationMonster.LockState lock_state = 2;
inline void InvestigationMonster::clear_lock_state() {
  lock_state_ = 0;
}
inline ::proto::InvestigationMonster_LockState InvestigationMonster::lock_state() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.lock_state)
  return static_cast< ::proto::InvestigationMonster_LockState >(lock_state_);
}
inline void InvestigationMonster::set_lock_state(::proto::InvestigationMonster_LockState value) {
  
  lock_state_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.lock_state)
}

// uint32 next_boss_chest_refresh_time = 7;
inline void InvestigationMonster::clear_next_boss_chest_refresh_time() {
  next_boss_chest_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::next_boss_chest_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.next_boss_chest_refresh_time)
  return next_boss_chest_refresh_time_;
}
inline void InvestigationMonster::set_next_boss_chest_refresh_time(::google::protobuf::uint32 value) {
  
  next_boss_chest_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.next_boss_chest_refresh_time)
}

// uint32 city_id = 6;
inline void InvestigationMonster::clear_city_id() {
  city_id_ = 0u;
}
inline ::google::protobuf::uint32 InvestigationMonster::city_id() const {
  // @@protoc_insertion_point(field_get:proto.InvestigationMonster.city_id)
  return city_id_;
}
inline void InvestigationMonster::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InvestigationMonster.city_id)
}

// -------------------------------------------------------------------

// GetInvestigationMonsterRsp

// repeated .proto.InvestigationMonster monster_list = 10;
inline int GetInvestigationMonsterRsp::monster_list_size() const {
  return monster_list_.size();
}
inline void GetInvestigationMonsterRsp::clear_monster_list() {
  monster_list_.Clear();
}
inline const ::proto::InvestigationMonster& GetInvestigationMonsterRsp::monster_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_.Get(index);
}
inline ::proto::InvestigationMonster* GetInvestigationMonsterRsp::mutable_monster_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_.Mutable(index);
}
inline ::proto::InvestigationMonster* GetInvestigationMonsterRsp::add_monster_list() {
  // @@protoc_insertion_point(field_add:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::InvestigationMonster >*
GetInvestigationMonsterRsp::mutable_monster_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetInvestigationMonsterRsp.monster_list)
  return &monster_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationMonster >&
GetInvestigationMonsterRsp::monster_list() const {
  // @@protoc_insertion_point(field_list:proto.GetInvestigationMonsterRsp.monster_list)
  return monster_list_;
}

// int32 retcode = 1;
inline void GetInvestigationMonsterRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetInvestigationMonsterRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterRsp.retcode)
  return retcode_;
}
inline void GetInvestigationMonsterRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterRsp.retcode)
}

// bool is_for_mark = 2;
inline void GetInvestigationMonsterRsp::clear_is_for_mark() {
  is_for_mark_ = false;
}
inline bool GetInvestigationMonsterRsp::is_for_mark() const {
  // @@protoc_insertion_point(field_get:proto.GetInvestigationMonsterRsp.is_for_mark)
  return is_for_mark_;
}
inline void GetInvestigationMonsterRsp::set_is_for_mark(bool value) {
  
  is_for_mark_ = value;
  // @@protoc_insertion_point(field_set:proto.GetInvestigationMonsterRsp.is_for_mark)
}

// -------------------------------------------------------------------

// PlayerInvestigationNotify

// repeated .proto.Investigation investigation_list = 1;
inline int PlayerInvestigationNotify::investigation_list_size() const {
  return investigation_list_.size();
}
inline void PlayerInvestigationNotify::clear_investigation_list() {
  investigation_list_.Clear();
}
inline const ::proto::Investigation& PlayerInvestigationNotify::investigation_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_.Get(index);
}
inline ::proto::Investigation* PlayerInvestigationNotify::mutable_investigation_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_.Mutable(index);
}
inline ::proto::Investigation* PlayerInvestigationNotify::add_investigation_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Investigation >*
PlayerInvestigationNotify::mutable_investigation_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationNotify.investigation_list)
  return &investigation_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Investigation >&
PlayerInvestigationNotify::investigation_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationNotify.investigation_list)
  return investigation_list_;
}

// -------------------------------------------------------------------

// PlayerInvestigationTargetNotify

// repeated .proto.InvestigationTarget investigation_target_list = 1;
inline int PlayerInvestigationTargetNotify::investigation_target_list_size() const {
  return investigation_target_list_.size();
}
inline void PlayerInvestigationTargetNotify::clear_investigation_target_list() {
  investigation_target_list_.Clear();
}
inline const ::proto::InvestigationTarget& PlayerInvestigationTargetNotify::investigation_target_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_.Get(index);
}
inline ::proto::InvestigationTarget* PlayerInvestigationTargetNotify::mutable_investigation_target_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_.Mutable(index);
}
inline ::proto::InvestigationTarget* PlayerInvestigationTargetNotify::add_investigation_target_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >*
PlayerInvestigationTargetNotify::mutable_investigation_target_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return &investigation_target_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::InvestigationTarget >&
PlayerInvestigationTargetNotify::investigation_target_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerInvestigationTargetNotify.investigation_target_list)
  return investigation_target_list_;
}

// -------------------------------------------------------------------

// MarkTargetInvestigationMonsterNotify

// uint32 scene_id = 11;
inline void MarkTargetInvestigationMonsterNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.scene_id)
  return scene_id_;
}
inline void MarkTargetInvestigationMonsterNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.scene_id)
}

// uint32 monster_id = 4;
inline void MarkTargetInvestigationMonsterNotify::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.monster_id)
  return monster_id_;
}
inline void MarkTargetInvestigationMonsterNotify::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.monster_id)
}

// uint32 group_id = 5;
inline void MarkTargetInvestigationMonsterNotify::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::group_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.group_id)
  return group_id_;
}
inline void MarkTargetInvestigationMonsterNotify::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.group_id)
}

// uint32 investigation_monster_id = 12;
inline void MarkTargetInvestigationMonsterNotify::clear_investigation_monster_id() {
  investigation_monster_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkTargetInvestigationMonsterNotify::investigation_monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkTargetInvestigationMonsterNotify.investigation_monster_id)
  return investigation_monster_id_;
}
inline void MarkTargetInvestigationMonsterNotify::set_investigation_monster_id(::google::protobuf::uint32 value) {
  
  investigation_monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkTargetInvestigationMonsterNotify.investigation_monster_id)
}

// -------------------------------------------------------------------

// InvestigationMonsterUpdateNotify

// .proto.InvestigationMonster investigation_monster = 5;
inline bool InvestigationMonsterUpdateNotify::has_investigation_monster() const {
  return this != internal_default_instance() && investigation_monster_ != NULL;
}
inline void InvestigationMonsterUpdateNotify::clear_investigation_monster() {
  if (GetArenaNoVirtual() == NULL && investigation_monster_ != NULL) delete investigation_monster_;
  investigation_monster_ = NULL;
}
inline const ::proto::InvestigationMonster& InvestigationMonsterUpdateNotify::investigation_monster() const {
  const ::proto::InvestigationMonster* p = investigation_monster_;
  // @@protoc_insertion_point(field_get:proto.InvestigationMonsterUpdateNotify.investigation_monster)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::InvestigationMonster*>(
      &::proto::_InvestigationMonster_default_instance_);
}
inline ::proto::InvestigationMonster* InvestigationMonsterUpdateNotify::mutable_investigation_monster() {
  
  if (investigation_monster_ == NULL) {
    investigation_monster_ = new ::proto::InvestigationMonster;
  }
  // @@protoc_insertion_point(field_mutable:proto.InvestigationMonsterUpdateNotify.investigation_monster)
  return investigation_monster_;
}
inline ::proto::InvestigationMonster* InvestigationMonsterUpdateNotify::release_investigation_monster() {
  // @@protoc_insertion_point(field_release:proto.InvestigationMonsterUpdateNotify.investigation_monster)
  
  ::proto::InvestigationMonster* temp = investigation_monster_;
  investigation_monster_ = NULL;
  return temp;
}
inline void InvestigationMonsterUpdateNotify::set_allocated_investigation_monster(::proto::InvestigationMonster* investigation_monster) {
  delete investigation_monster_;
  investigation_monster_ = investigation_monster;
  if (investigation_monster) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.InvestigationMonsterUpdateNotify.investigation_monster)
}

// -------------------------------------------------------------------

// InvestigationQuestDailyNotify

// -------------------------------------------------------------------

// InvestigationReadQuestDailyNotify

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::Investigation_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::Investigation_State>() {
  return ::proto::Investigation_State_descriptor();
}
template <> struct is_proto_enum< ::proto::InvestigationTarget_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InvestigationTarget_State>() {
  return ::proto::InvestigationTarget_State_descriptor();
}
template <> struct is_proto_enum< ::proto::InvestigationMonster_LockState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InvestigationMonster_LockState>() {
  return ::proto::InvestigationMonster_LockState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5finvestigation_2eproto__INCLUDED
