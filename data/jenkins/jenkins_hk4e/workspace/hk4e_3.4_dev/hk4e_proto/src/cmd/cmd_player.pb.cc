// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_player.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class GetPlayerTokenReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerTokenReq>
     _instance;
} _GetPlayerTokenReq_default_instance_;
class GetPlayerTokenRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerTokenRsp>
     _instance;
} _GetPlayerTokenRsp_default_instance_;
class TrackingIOInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TrackingIOInfo>
     _instance;
} _TrackingIOInfo_default_instance_;
class AdjustTrackingInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdjustTrackingInfo>
     _instance;
} _AdjustTrackingInfo_default_instance_;
class PlayerLoginReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginReq>
     _instance;
} _PlayerLoginReq_default_instance_;
class ShortAbilityHashPairDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShortAbilityHashPair>
     _instance;
} _ShortAbilityHashPair_default_instance_;
class PlayerLoginRsp_BlockInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry>
     _instance;
} _PlayerLoginRsp_BlockInfoMapEntry_default_instance_;
class PlayerLoginRsp_AbilityHashMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry>
     _instance;
} _PlayerLoginRsp_AbilityHashMapEntry_default_instance_;
class PlayerLoginRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRsp>
     _instance;
} _PlayerLoginRsp_default_instance_;
class PlayerLogoutReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogoutReq>
     _instance;
} _PlayerLogoutReq_default_instance_;
class PlayerLogoutRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogoutRsp>
     _instance;
} _PlayerLogoutRsp_default_instance_;
class PlayerLogoutNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogoutNotify>
     _instance;
} _PlayerLogoutNotify_default_instance_;
class PlayerDataNotify_PropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerDataNotify::PlayerDataNotify_PropMapEntry>
     _instance;
} _PlayerDataNotify_PropMapEntry_default_instance_;
class PlayerDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerDataNotify>
     _instance;
} _PlayerDataNotify_default_instance_;
class ChangeGameTimeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeGameTimeReq>
     _instance;
} _ChangeGameTimeReq_default_instance_;
class ChangeGameTimeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeGameTimeRsp>
     _instance;
} _ChangeGameTimeRsp_default_instance_;
class PlayerGameTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerGameTimeNotify>
     _instance;
} _PlayerGameTimeNotify_default_instance_;
class PlayerPropNotify_PropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropNotify::PlayerPropNotify_PropMapEntry>
     _instance;
} _PlayerPropNotify_PropMapEntry_default_instance_;
class PlayerPropNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropNotify>
     _instance;
} _PlayerPropNotify_default_instance_;
class ClientTriggerEventNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientTriggerEventNotify>
     _instance;
} _ClientTriggerEventNotify_default_instance_;
class SetPlayerPropReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerPropReq>
     _instance;
} _SetPlayerPropReq_default_instance_;
class SetPlayerPropRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerPropRsp>
     _instance;
} _SetPlayerPropRsp_default_instance_;
class SetPlayerBornDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBornDataReq>
     _instance;
} _SetPlayerBornDataReq_default_instance_;
class SetPlayerBornDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBornDataRsp>
     _instance;
} _SetPlayerBornDataRsp_default_instance_;
class DoSetPlayerBornDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DoSetPlayerBornDataNotify>
     _instance;
} _DoSetPlayerBornDataNotify_default_instance_;
class PlayerPropChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropChangeNotify>
     _instance;
} _PlayerPropChangeNotify_default_instance_;
class SetPlayerNameReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerNameReq>
     _instance;
} _SetPlayerNameReq_default_instance_;
class SetPlayerNameRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerNameRsp>
     _instance;
} _SetPlayerNameRsp_default_instance_;
class SetOpenStateReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetOpenStateReq>
     _instance;
} _SetOpenStateReq_default_instance_;
class SetOpenStateRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetOpenStateRsp>
     _instance;
} _SetOpenStateRsp_default_instance_;
class OpenStateUpdateNotify_OpenStateMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry>
     _instance;
} _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_;
class OpenStateUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateUpdateNotify>
     _instance;
} _OpenStateUpdateNotify_default_instance_;
class OpenStateChangeNotify_OpenStateMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry>
     _instance;
} _OpenStateChangeNotify_OpenStateMapEntry_default_instance_;
class OpenStateChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OpenStateChangeNotify>
     _instance;
} _OpenStateChangeNotify_default_instance_;
class PlayerCookReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookReq>
     _instance;
} _PlayerCookReq_default_instance_;
class PlayerCookRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookRsp>
     _instance;
} _PlayerCookRsp_default_instance_;
class PlayerRandomCookReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerRandomCookReq>
     _instance;
} _PlayerRandomCookReq_default_instance_;
class PlayerRandomCookRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerRandomCookRsp>
     _instance;
} _PlayerRandomCookRsp_default_instance_;
class CookRecipeDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookRecipeData>
     _instance;
} _CookRecipeData_default_instance_;
class CookDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookDataNotify>
     _instance;
} _CookDataNotify_default_instance_;
class CookRecipeDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookRecipeDataNotify>
     _instance;
} _CookRecipeDataNotify_default_instance_;
class CookGradeDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CookGradeDataNotify>
     _instance;
} _CookGradeDataNotify_default_instance_;
class PlayerCompoundMaterialReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCompoundMaterialReq>
     _instance;
} _PlayerCompoundMaterialReq_default_instance_;
class CompoundQueueDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CompoundQueueData>
     _instance;
} _CompoundQueueData_default_instance_;
class PlayerCompoundMaterialRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCompoundMaterialRsp>
     _instance;
} _PlayerCompoundMaterialRsp_default_instance_;
class TakeCompoundOutputReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeCompoundOutputReq>
     _instance;
} _TakeCompoundOutputReq_default_instance_;
class TakeCompoundOutputRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeCompoundOutputRsp>
     _instance;
} _TakeCompoundOutputRsp_default_instance_;
class CompoundDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CompoundDataNotify>
     _instance;
} _CompoundDataNotify_default_instance_;
class GetCompoundDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetCompoundDataReq>
     _instance;
} _GetCompoundDataReq_default_instance_;
class GetCompoundDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetCompoundDataRsp>
     _instance;
} _GetCompoundDataRsp_default_instance_;
class PlayerTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerTimeNotify>
     _instance;
} _PlayerTimeNotify_default_instance_;
class PlayerSetPauseReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetPauseReq>
     _instance;
} _PlayerSetPauseReq_default_instance_;
class PlayerSetPauseRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetPauseRsp>
     _instance;
} _PlayerSetPauseRsp_default_instance_;
class PlayerSetLanguageReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetLanguageReq>
     _instance;
} _PlayerSetLanguageReq_default_instance_;
class PlayerSetLanguageRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerSetLanguageRsp>
     _instance;
} _PlayerSetLanguageRsp_default_instance_;
class DataResVersionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DataResVersionNotify>
     _instance;
} _DataResVersionNotify_default_instance_;
class DailyTaskInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskInfo>
     _instance;
} _DailyTaskInfo_default_instance_;
class DailyTaskDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskDataNotify>
     _instance;
} _DailyTaskDataNotify_default_instance_;
class DailyTaskProgressNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskProgressNotify>
     _instance;
} _DailyTaskProgressNotify_default_instance_;
class DailyTaskScoreRewardNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskScoreRewardNotify>
     _instance;
} _DailyTaskScoreRewardNotify_default_instance_;
class WorldOwnerDailyTaskNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldOwnerDailyTaskNotify>
     _instance;
} _WorldOwnerDailyTaskNotify_default_instance_;
class AddRandTaskInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddRandTaskInfoNotify>
     _instance;
} _AddRandTaskInfoNotify_default_instance_;
class RemoveRandTaskInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveRandTaskInfoNotify>
     _instance;
} _RemoveRandTaskInfoNotify_default_instance_;
class TakePlayerLevelRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakePlayerLevelRewardReq>
     _instance;
} _TakePlayerLevelRewardReq_default_instance_;
class TakePlayerLevelRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakePlayerLevelRewardRsp>
     _instance;
} _TakePlayerLevelRewardRsp_default_instance_;
class PlayerLevelRewardUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLevelRewardUpdateNotify>
     _instance;
} _PlayerLevelRewardUpdateNotify_default_instance_;
class GivingRecord_MaterialCntMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GivingRecord::GivingRecord_MaterialCntMapEntry>
     _instance;
} _GivingRecord_MaterialCntMapEntry_default_instance_;
class GivingRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GivingRecord>
     _instance;
} _GivingRecord_default_instance_;
class GivingRecordNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GivingRecordNotify>
     _instance;
} _GivingRecordNotify_default_instance_;
class GivingRecordChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GivingRecordChangeNotify>
     _instance;
} _GivingRecordChangeNotify_default_instance_;
class ItemGivingReq_ItemGuidCountMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry>
     _instance;
} _ItemGivingReq_ItemGuidCountMapEntry_default_instance_;
class ItemGivingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemGivingReq>
     _instance;
} _ItemGivingReq_default_instance_;
class ItemGivingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemGivingRsp>
     _instance;
} _ItemGivingRsp_default_instance_;
class PlayerCookArgsReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookArgsReq>
     _instance;
} _PlayerCookArgsReq_default_instance_;
class PlayerCookArgsRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCookArgsRsp>
     _instance;
} _PlayerCookArgsRsp_default_instance_;
class PlayerLuaShellNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLuaShellNotify>
     _instance;
} _PlayerLuaShellNotify_default_instance_;
class ServerDisconnectClientNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDisconnectClientNotify>
     _instance;
} _ServerDisconnectClientNotify_default_instance_;
class AntiAddictNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AntiAddictNotify>
     _instance;
} _AntiAddictNotify_default_instance_;
class PlayerForceExitReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerForceExitReq>
     _instance;
} _PlayerForceExitReq_default_instance_;
class PlayerForceExitRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerForceExitRsp>
     _instance;
} _PlayerForceExitRsp_default_instance_;
class PlayerInjectFixNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerInjectFixNotify>
     _instance;
} _PlayerInjectFixNotify_default_instance_;
class TaskVarDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TaskVar>
     _instance;
} _TaskVar_default_instance_;
class TaskVarNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TaskVarNotify>
     _instance;
} _TaskVarNotify_default_instance_;
class ClientLockGameTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientLockGameTimeNotify>
     _instance;
} _ClientLockGameTimeNotify_default_instance_;
class GetNextResourceInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetNextResourceInfoReq>
     _instance;
} _GetNextResourceInfoReq_default_instance_;
class GetNextResourceInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetNextResourceInfoRsp>
     _instance;
} _GetNextResourceInfoRsp_default_instance_;
class AdjustWorldLevelReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdjustWorldLevelReq>
     _instance;
} _AdjustWorldLevelReq_default_instance_;
class AdjustWorldLevelRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdjustWorldLevelRsp>
     _instance;
} _AdjustWorldLevelRsp_default_instance_;
class DailyTaskFilterCityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskFilterCityReq>
     _instance;
} _DailyTaskFilterCityReq_default_instance_;
class DailyTaskFilterCityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskFilterCityRsp>
     _instance;
} _DailyTaskFilterCityRsp_default_instance_;
class DailyTaskUnlockedCitiesNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DailyTaskUnlockedCitiesNotify>
     _instance;
} _DailyTaskUnlockedCitiesNotify_default_instance_;
class ExclusiveRuleInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExclusiveRuleInfo>
     _instance;
} _ExclusiveRuleInfo_default_instance_;
class ExclusiveRuleNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExclusiveRuleNotify>
     _instance;
} _ExclusiveRuleNotify_default_instance_;
class CompoundUnlockNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CompoundUnlockNotify>
     _instance;
} _CompoundUnlockNotify_default_instance_;
class GameplayRecommendationSkillRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameplayRecommendationSkillRequest>
     _instance;
} _GameplayRecommendationSkillRequest_default_instance_;
class GameplayRecommendationReliquaryRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameplayRecommendationReliquaryRequest>
     _instance;
} _GameplayRecommendationReliquaryRequest_default_instance_;
class GameplayRecommendationElementReliquaryRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameplayRecommendationElementReliquaryRequest>
     _instance;
} _GameplayRecommendationElementReliquaryRequest_default_instance_;
class GetGameplayRecommendationReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetGameplayRecommendationReq>
     _instance;
  const ::proto::GameplayRecommendationSkillRequest* skill_request_;
  const ::proto::GameplayRecommendationReliquaryRequest* reliquary_request_;
  const ::proto::GameplayRecommendationElementReliquaryRequest* element_reliquary_request_;
} _GetGameplayRecommendationReq_default_instance_;
class GameplayRecommendationSkillResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameplayRecommendationSkillResponse>
     _instance;
} _GameplayRecommendationSkillResponse_default_instance_;
class GameplayRecommendationReliquaryMainPropDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameplayRecommendationReliquaryMainPropData>
     _instance;
} _GameplayRecommendationReliquaryMainPropData_default_instance_;
class GameplayRecommendationReliquaryResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameplayRecommendationReliquaryResponse>
     _instance;
} _GameplayRecommendationReliquaryResponse_default_instance_;
class GameplayRecommendationElementReliquaryResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameplayRecommendationElementReliquaryResponse>
     _instance;
} _GameplayRecommendationElementReliquaryResponse_default_instance_;
class GetGameplayRecommendationRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetGameplayRecommendationRsp>
     _instance;
  const ::proto::GameplayRecommendationSkillResponse* skill_response_;
  const ::proto::GameplayRecommendationReliquaryResponse* reliquary_response_;
  const ::proto::GameplayRecommendationElementReliquaryResponse* element_reliquary_response_;
} _GetGameplayRecommendationRsp_default_instance_;
class TakeBackGivingItemReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeBackGivingItemReq>
     _instance;
} _TakeBackGivingItemReq_default_instance_;
class TakeBackGivingItemRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeBackGivingItemRsp>
     _instance;
} _TakeBackGivingItemRsp_default_instance_;
class PlayerNicknameAuditDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerNicknameAuditDataNotify>
     _instance;
} _PlayerNicknameAuditDataNotify_default_instance_;
class PlayerNicknameNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerNicknameNotify>
     _instance;
} _PlayerNicknameNotify_default_instance_;
class NicknameAuditConfigNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NicknameAuditConfigNotify>
     _instance;
} _NicknameAuditConfigNotify_default_instance_;
class ReadNicknameAuditReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReadNicknameAuditReq>
     _instance;
} _ReadNicknameAuditReq_default_instance_;
class ReadNicknameAuditRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReadNicknameAuditRsp>
     _instance;
} _ReadNicknameAuditRsp_default_instance_;
class PlayerCompoundMaterialBoostReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCompoundMaterialBoostReq>
     _instance;
} _PlayerCompoundMaterialBoostReq_default_instance_;
class PlayerCompoundMaterialBoostRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCompoundMaterialBoostRsp>
     _instance;
} _PlayerCompoundMaterialBoostRsp_default_instance_;
class PlayerGameTimeByLuaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerGameTimeByLuaNotify>
     _instance;
} _PlayerGameTimeByLuaNotify_default_instance_;
class PlayerIpRegionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerIpRegionNotify>
     _instance;
} _PlayerIpRegionNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fplayer_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[114];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, psn_region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, sub_channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, cloud_client_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, minors_reg_min_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, online_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, client_ip_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, platform_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, client_rand_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, lang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenReq, psn_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, minors_reg_min_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, platform_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, account_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, is_login_white_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, black_uid_end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, is_watchdog_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, psn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, sub_channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, security_cmd_buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, client_version_random_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, secret_key_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, finish_collection_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, secret_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, stop_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, is_proficient_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, reg_platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, server_rand_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, extra_bin_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, client_ip_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, gm_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerTokenRsp, key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, rydevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, client_tz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, current_caid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, cached_caid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIOInfo, appid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustTrackingInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustTrackingInfo, event_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustTrackingInfo, adid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustTrackingInfo, idfa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustTrackingInfo, app_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustTrackingInfo, gps_adid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustTrackingInfo, fire_adid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, language_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, reg_platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, tracking_io_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, extra_bin_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, client_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, account_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, client_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, security_library_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, psn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, client_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, cps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, login_rand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, target_home_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, adjust_tracking_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, is_transfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, environment_error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, online_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, is_editor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, checksum_client_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, security_cmd_reply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, security_library_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, device_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, client_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, sub_channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, device_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, client_verison_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, platform_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, target_home_owner_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, cloud_client_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, gm_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, system_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginReq, platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShortAbilityHashPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShortAbilityHashPair, ability_config_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShortAbilityHashPair, ability_name_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_sc_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, block_info_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_audit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_transfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_silence_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, next_res_version_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_silence_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, login_rand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_new_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_version_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, game_biz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, next_resource_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_relogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, total_tick_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_enable_client_hash_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, sc_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, ability_hash_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, register_cps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_login_rsp_split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_use_ability_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, ability_hash_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, short_ability_hash_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, is_data_need_relogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, res_version_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, feature_block_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, player_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, client_silence_version_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, target_home_owner_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginRsp, player_data_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutReq, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogoutNotify, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, server_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, nick_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, is_first_login_today_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerDataNotify, prop_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeReq, game_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeReq, is_force_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeReq, extra_days_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeRsp, extra_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameTimeRsp, cur_game_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeNotify, game_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeNotify, is_home_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropNotify, prop_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTriggerEventNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTriggerEventNotify, force_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTriggerEventNotify, event_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropReq, prop_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerPropRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataReq, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataReq, nick_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBornDataRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoSetPlayerBornDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropChangeNotify, prop_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropChangeNotify, prop_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameReq, nick_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerNameRsp, nick_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateReq, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateReq, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOpenStateRsp, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateUpdateNotify, open_state_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenStateChangeNotify, open_state_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, cook_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, qte_quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, recipe_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookReq, assist_avatar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, extral_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, cook_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, qte_quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookRsp, recipe_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookReq, material_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRandomCookRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeData, proficiency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeData, recipe_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookDataNotify, recipe_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookDataNotify, grade_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookRecipeDataNotify, recipe_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookGradeDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CookGradeDataNotify, grade_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialReq, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialReq, compound_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, output_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, compound_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, output_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundQueueData, wait_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialRsp, compound_que_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputReq, compound_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputReq, compound_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputRsp, item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeCompoundOutputRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundDataNotify, unlock_compound_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundDataNotify, compound_que_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, unlock_compound_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCompoundDataRsp, compound_que_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, server_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, player_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTimeNotify, is_paused_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseReq, is_paused_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetPauseRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageReq, language_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerSetLanguageRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_silence_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_silence_version_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, res_version_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, is_data_need_relogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_version_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_silence_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResVersionNotify, client_md5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, finish_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, daily_task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskInfo, is_finished_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, score_reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, finished_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskDataNotify, is_taken_score_reward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskProgressNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskProgressNotify, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskScoreRewardNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskScoreRewardNotify, reward_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerDailyTaskNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerDailyTaskNotify, task_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerDailyTaskNotify, finished_daily_task_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldOwnerDailyTaskNotify, filter_city_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRandTaskInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRandTaskInfoNotify, rand_task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRandTaskInfoNotify, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, is_succ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRandTaskInfoNotify, rand_task_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardReq, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakePlayerLevelRewardRsp, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelRewardUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelRewardUpdateNotify, level_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, is_finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, is_gadget_giving_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, giving_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, last_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecord, material_cnt_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordNotify, giving_record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordChangeNotify, is_deactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GivingRecordChangeNotify, giving_record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, item_guid_count_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, giving_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, item_param_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingReq, item_giving_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingRsp, giving_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingRsp, giving_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGivingRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsReq, assist_avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsReq, recipe_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCookArgsRsp, qte_range_ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, shell_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, lua_shell_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLuaShellNotify, use_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDisconnectClientNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDisconnectClientNotify, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AntiAddictNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AntiAddictNotify, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AntiAddictNotify, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AntiAddictNotify, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerForceExitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerForceExitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerForceExitRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInjectFixNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInjectFixNotify, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInjectFixNotify, inject_fix_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskVar, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskVar, value_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskVarNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskVarNotify, task_var_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLockGameTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientLockGameTimeNotify, is_lock_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextResourceInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextResourceInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextResourceInfoRsp, next_resource_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextResourceInfoRsp, next_res_version_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextResourceInfoRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustWorldLevelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustWorldLevelReq, expect_world_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustWorldLevelReq, cur_world_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustWorldLevelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustWorldLevelRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustWorldLevelRsp, cd_over_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustWorldLevelRsp, after_world_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskFilterCityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskFilterCityReq, city_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskFilterCityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskFilterCityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskFilterCityRsp, city_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskUnlockedCitiesNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyTaskUnlockedCitiesNotify, unlocked_city_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExclusiveRuleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExclusiveRuleInfo, object_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExclusiveRuleInfo, rule_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExclusiveRuleNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExclusiveRuleNotify, rule_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundUnlockNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompoundUnlockNotify, compound_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationSkillRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationSkillRequest, skill_depot_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryRequest, equip_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationElementReliquaryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationElementReliquaryRequest, equip_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationElementReliquaryRequest, element_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationReq, avatar_id_),
  offsetof(GetGameplayRecommendationReqDefaultTypeInternal, skill_request_),
  offsetof(GetGameplayRecommendationReqDefaultTypeInternal, reliquary_request_),
  offsetof(GetGameplayRecommendationReqDefaultTypeInternal, element_reliquary_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationReq, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationSkillResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationSkillResponse, skill_depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationSkillResponse, skill_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryMainPropData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryMainPropData, permillage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryMainPropData, main_prop_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryResponse, main_prop_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationReliquaryResponse, equip_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationElementReliquaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationElementReliquaryResponse, element_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationElementReliquaryResponse, main_prop_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameplayRecommendationElementReliquaryResponse, equip_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationRsp, avatar_id_),
  offsetof(GetGameplayRecommendationRspDefaultTypeInternal, skill_response_),
  offsetof(GetGameplayRecommendationRspDefaultTypeInternal, reliquary_response_),
  offsetof(GetGameplayRecommendationRspDefaultTypeInternal, element_reliquary_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameplayRecommendationRsp, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeBackGivingItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeBackGivingItemReq, giving_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeBackGivingItemRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeBackGivingItemRsp, giving_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeBackGivingItemRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerNicknameAuditDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerNicknameAuditDataNotify, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerNicknameNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerNicknameNotify, nickname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameAuditConfigNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameAuditConfigNotify, is_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameAuditConfigNotify, submit_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadNicknameAuditReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadNicknameAuditRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadNicknameAuditRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostReq, is_boost_all_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostReq, target_compound_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostReq, consume_material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostReq, consume_material_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostRsp, take_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostRsp, take_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCompoundMaterialBoostRsp, compound_que_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeByLuaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeByLuaNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeByLuaNotify, sim_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerGameTimeByLuaNotify, game_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerIpRegionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerIpRegionNotify, ip_code_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GetPlayerTokenReq)},
  { 25, -1, sizeof(GetPlayerTokenRsp)},
  { 62, -1, sizeof(TrackingIOInfo)},
  { 74, -1, sizeof(AdjustTrackingInfo)},
  { 85, -1, sizeof(PlayerLoginReq)},
  { 132, -1, sizeof(ShortAbilityHashPair)},
  { 139, -1, sizeof(PlayerLoginRsp)},
  { 179, -1, sizeof(PlayerLogoutReq)},
  { 185, -1, sizeof(PlayerLogoutRsp)},
  { 191, -1, sizeof(PlayerLogoutNotify)},
  { 197, -1, sizeof(PlayerDataNotify)},
  { 207, -1, sizeof(ChangeGameTimeReq)},
  { 215, -1, sizeof(ChangeGameTimeRsp)},
  { 223, -1, sizeof(PlayerGameTimeNotify)},
  { 231, -1, sizeof(PlayerPropNotify)},
  { 237, -1, sizeof(ClientTriggerEventNotify)},
  { 244, -1, sizeof(SetPlayerPropReq)},
  { 250, -1, sizeof(SetPlayerPropRsp)},
  { 256, -1, sizeof(SetPlayerBornDataReq)},
  { 263, -1, sizeof(SetPlayerBornDataRsp)},
  { 269, -1, sizeof(DoSetPlayerBornDataNotify)},
  { 274, -1, sizeof(PlayerPropChangeNotify)},
  { 281, -1, sizeof(SetPlayerNameReq)},
  { 287, -1, sizeof(SetPlayerNameRsp)},
  { 294, -1, sizeof(SetOpenStateReq)},
  { 301, -1, sizeof(SetOpenStateRsp)},
  { 309, -1, sizeof(OpenStateUpdateNotify)},
  { 315, -1, sizeof(OpenStateChangeNotify)},
  { 321, -1, sizeof(PlayerCookReq)},
  { 330, -1, sizeof(PlayerCookRsp)},
  { 341, -1, sizeof(PlayerRandomCookReq)},
  { 347, -1, sizeof(PlayerRandomCookRsp)},
  { 353, -1, sizeof(CookRecipeData)},
  { 360, -1, sizeof(CookDataNotify)},
  { 367, -1, sizeof(CookRecipeDataNotify)},
  { 373, -1, sizeof(CookGradeDataNotify)},
  { 379, -1, sizeof(PlayerCompoundMaterialReq)},
  { 386, -1, sizeof(CompoundQueueData)},
  { 395, -1, sizeof(PlayerCompoundMaterialRsp)},
  { 402, -1, sizeof(TakeCompoundOutputReq)},
  { 409, -1, sizeof(TakeCompoundOutputRsp)},
  { 416, -1, sizeof(CompoundDataNotify)},
  { 423, -1, sizeof(GetCompoundDataReq)},
  { 428, -1, sizeof(GetCompoundDataRsp)},
  { 436, -1, sizeof(PlayerTimeNotify)},
  { 444, -1, sizeof(PlayerSetPauseReq)},
  { 450, -1, sizeof(PlayerSetPauseRsp)},
  { 456, -1, sizeof(PlayerSetLanguageReq)},
  { 462, -1, sizeof(PlayerSetLanguageRsp)},
  { 468, -1, sizeof(DataResVersionNotify)},
  { 482, -1, sizeof(DailyTaskInfo)},
  { 492, -1, sizeof(DailyTaskDataNotify)},
  { 500, -1, sizeof(DailyTaskProgressNotify)},
  { 506, -1, sizeof(DailyTaskScoreRewardNotify)},
  { 512, -1, sizeof(WorldOwnerDailyTaskNotify)},
  { 520, -1, sizeof(AddRandTaskInfoNotify)},
  { 527, -1, sizeof(RemoveRandTaskInfoNotify)},
  { 535, -1, sizeof(TakePlayerLevelRewardReq)},
  { 541, -1, sizeof(TakePlayerLevelRewardRsp)},
  { 549, -1, sizeof(PlayerLevelRewardUpdateNotify)},
  { 555, -1, sizeof(GivingRecord)},
  { 567, -1, sizeof(GivingRecordNotify)},
  { 573, -1, sizeof(GivingRecordChangeNotify)},
  { 580, -1, sizeof(ItemGivingReq)},
  { 589, -1, sizeof(ItemGivingRsp)},
  { 597, -1, sizeof(PlayerCookArgsReq)},
  { 604, -1, sizeof(PlayerCookArgsRsp)},
  { 611, -1, sizeof(PlayerLuaShellNotify)},
  { 620, -1, sizeof(ServerDisconnectClientNotify)},
  { 626, -1, sizeof(AntiAddictNotify)},
  { 634, -1, sizeof(PlayerForceExitReq)},
  { 639, -1, sizeof(PlayerForceExitRsp)},
  { 645, -1, sizeof(PlayerInjectFixNotify)},
  { 652, -1, sizeof(TaskVar)},
  { 659, -1, sizeof(TaskVarNotify)},
  { 665, -1, sizeof(ClientLockGameTimeNotify)},
  { 671, -1, sizeof(GetNextResourceInfoReq)},
  { 676, -1, sizeof(GetNextResourceInfoRsp)},
  { 684, -1, sizeof(AdjustWorldLevelReq)},
  { 691, -1, sizeof(AdjustWorldLevelRsp)},
  { 699, -1, sizeof(DailyTaskFilterCityReq)},
  { 705, -1, sizeof(DailyTaskFilterCityRsp)},
  { 712, -1, sizeof(DailyTaskUnlockedCitiesNotify)},
  { 718, -1, sizeof(ExclusiveRuleInfo)},
  { 725, -1, sizeof(ExclusiveRuleNotify)},
  { 731, -1, sizeof(CompoundUnlockNotify)},
  { 737, -1, sizeof(GameplayRecommendationSkillRequest)},
  { 743, -1, sizeof(GameplayRecommendationReliquaryRequest)},
  { 749, -1, sizeof(GameplayRecommendationElementReliquaryRequest)},
  { 756, -1, sizeof(GetGameplayRecommendationReq)},
  { 766, -1, sizeof(GameplayRecommendationSkillResponse)},
  { 773, -1, sizeof(GameplayRecommendationReliquaryMainPropData)},
  { 780, -1, sizeof(GameplayRecommendationReliquaryResponse)},
  { 787, -1, sizeof(GameplayRecommendationElementReliquaryResponse)},
  { 795, -1, sizeof(GetGameplayRecommendationRsp)},
  { 806, -1, sizeof(TakeBackGivingItemReq)},
  { 812, -1, sizeof(TakeBackGivingItemRsp)},
  { 819, -1, sizeof(PlayerNicknameAuditDataNotify)},
  { 825, -1, sizeof(PlayerNicknameNotify)},
  { 831, -1, sizeof(NicknameAuditConfigNotify)},
  { 838, -1, sizeof(ReadNicknameAuditReq)},
  { 843, -1, sizeof(ReadNicknameAuditRsp)},
  { 849, -1, sizeof(PlayerCompoundMaterialBoostReq)},
  { 858, -1, sizeof(PlayerCompoundMaterialBoostRsp)},
  { 867, -1, sizeof(PlayerGameTimeByLuaNotify)},
  { 875, -1, sizeof(PlayerIpRegionNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerTokenReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerTokenRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrackingIOInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdjustTrackingInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShortAbilityHashPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginRsp_BlockInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginRsp_AbilityHashMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLogoutRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLogoutNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerDataNotify_PropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeGameTimeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeGameTimeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerGameTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPropNotify_PropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPropNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientTriggerEventNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerPropReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerPropRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBornDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBornDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DoSetPlayerBornDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPropChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerNameRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetOpenStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetOpenStateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateChangeNotify_OpenStateMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenStateChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerRandomCookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerRandomCookRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookRecipeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookRecipeDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CookGradeDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCompoundMaterialReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompoundQueueData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCompoundMaterialRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeCompoundOutputReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeCompoundOutputRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompoundDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetCompoundDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetCompoundDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetPauseReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetPauseRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetLanguageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerSetLanguageRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataResVersionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskProgressNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskScoreRewardNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldOwnerDailyTaskNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddRandTaskInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveRandTaskInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakePlayerLevelRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakePlayerLevelRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLevelRewardUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GivingRecord_MaterialCntMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GivingRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GivingRecordNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GivingRecordChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemGivingReq_ItemGuidCountMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemGivingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemGivingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookArgsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCookArgsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLuaShellNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDisconnectClientNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AntiAddictNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerForceExitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerForceExitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerInjectFixNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TaskVar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TaskVarNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientLockGameTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetNextResourceInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetNextResourceInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdjustWorldLevelReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdjustWorldLevelRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskFilterCityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskFilterCityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DailyTaskUnlockedCitiesNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExclusiveRuleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExclusiveRuleNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompoundUnlockNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameplayRecommendationSkillRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameplayRecommendationReliquaryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameplayRecommendationElementReliquaryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGameplayRecommendationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameplayRecommendationSkillResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameplayRecommendationReliquaryMainPropData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameplayRecommendationReliquaryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameplayRecommendationElementReliquaryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGameplayRecommendationRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeBackGivingItemReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeBackGivingItemRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerNicknameAuditDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerNicknameNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NicknameAuditConfigNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadNicknameAuditReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadNicknameAuditRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCompoundMaterialBoostReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCompoundMaterialBoostRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerGameTimeByLuaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerIpRegionNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_player.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[6].reflection = PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::CreateReflection(file_level_metadata[6].descriptor, _PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[7].reflection = PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::CreateReflection(file_level_metadata[7].descriptor, _PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[12].reflection = PlayerDataNotify::PlayerDataNotify_PropMapEntry::CreateReflection(file_level_metadata[12].descriptor, _PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[17].reflection = PlayerPropNotify::PlayerPropNotify_PropMapEntry::CreateReflection(file_level_metadata[17].descriptor, _PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[30].reflection = OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::CreateReflection(file_level_metadata[30].descriptor, _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[32].reflection = OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::CreateReflection(file_level_metadata[32].descriptor, _OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[66].reflection = GivingRecord::GivingRecord_MaterialCntMapEntry::CreateReflection(file_level_metadata[66].descriptor, _GivingRecord_MaterialCntMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[70].reflection = ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::CreateReflection(file_level_metadata[70].descriptor, _ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 114);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _GetPlayerTokenReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerTokenReq_default_instance_);_GetPlayerTokenRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerTokenRsp_default_instance_);_TrackingIOInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TrackingIOInfo_default_instance_);_AdjustTrackingInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdjustTrackingInfo_default_instance_);_PlayerLoginReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginReq_default_instance_);_ShortAbilityHashPair_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShortAbilityHashPair_default_instance_);_PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginRsp_BlockInfoMapEntry_default_instance_);_PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginRsp_AbilityHashMapEntry_default_instance_);_PlayerLoginRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginRsp_default_instance_);_PlayerLogoutReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogoutReq_default_instance_);_PlayerLogoutRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogoutRsp_default_instance_);_PlayerLogoutNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogoutNotify_default_instance_);_PlayerDataNotify_PropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerDataNotify_PropMapEntry_default_instance_);_PlayerDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerDataNotify_default_instance_);_ChangeGameTimeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeGameTimeReq_default_instance_);_ChangeGameTimeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeGameTimeRsp_default_instance_);_PlayerGameTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerGameTimeNotify_default_instance_);_PlayerPropNotify_PropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPropNotify_PropMapEntry_default_instance_);_PlayerPropNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPropNotify_default_instance_);_ClientTriggerEventNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientTriggerEventNotify_default_instance_);_SetPlayerPropReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerPropReq_default_instance_);_SetPlayerPropRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerPropRsp_default_instance_);_SetPlayerBornDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBornDataReq_default_instance_);_SetPlayerBornDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBornDataRsp_default_instance_);_DoSetPlayerBornDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DoSetPlayerBornDataNotify_default_instance_);_PlayerPropChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPropChangeNotify_default_instance_);_SetPlayerNameReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerNameReq_default_instance_);_SetPlayerNameRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerNameRsp_default_instance_);_SetOpenStateReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetOpenStateReq_default_instance_);_SetOpenStateRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetOpenStateRsp_default_instance_);_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_);_OpenStateUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateUpdateNotify_default_instance_);_OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateChangeNotify_OpenStateMapEntry_default_instance_);_OpenStateChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpenStateChangeNotify_default_instance_);_PlayerCookReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookReq_default_instance_);_PlayerCookRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookRsp_default_instance_);_PlayerRandomCookReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerRandomCookReq_default_instance_);_PlayerRandomCookRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerRandomCookRsp_default_instance_);_CookRecipeData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookRecipeData_default_instance_);_CookDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookDataNotify_default_instance_);_CookRecipeDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookRecipeDataNotify_default_instance_);_CookGradeDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CookGradeDataNotify_default_instance_);_PlayerCompoundMaterialReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCompoundMaterialReq_default_instance_);_CompoundQueueData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CompoundQueueData_default_instance_);_PlayerCompoundMaterialRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCompoundMaterialRsp_default_instance_);_TakeCompoundOutputReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeCompoundOutputReq_default_instance_);_TakeCompoundOutputRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeCompoundOutputRsp_default_instance_);_CompoundDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CompoundDataNotify_default_instance_);_GetCompoundDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetCompoundDataReq_default_instance_);_GetCompoundDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetCompoundDataRsp_default_instance_);_PlayerTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerTimeNotify_default_instance_);_PlayerSetPauseReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetPauseReq_default_instance_);_PlayerSetPauseRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetPauseRsp_default_instance_);_PlayerSetLanguageReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetLanguageReq_default_instance_);_PlayerSetLanguageRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerSetLanguageRsp_default_instance_);_DataResVersionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DataResVersionNotify_default_instance_);_DailyTaskInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskInfo_default_instance_);_DailyTaskDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskDataNotify_default_instance_);_DailyTaskProgressNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskProgressNotify_default_instance_);_DailyTaskScoreRewardNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskScoreRewardNotify_default_instance_);_WorldOwnerDailyTaskNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldOwnerDailyTaskNotify_default_instance_);_AddRandTaskInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddRandTaskInfoNotify_default_instance_);_RemoveRandTaskInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveRandTaskInfoNotify_default_instance_);_TakePlayerLevelRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakePlayerLevelRewardReq_default_instance_);_TakePlayerLevelRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakePlayerLevelRewardRsp_default_instance_);_PlayerLevelRewardUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLevelRewardUpdateNotify_default_instance_);_GivingRecord_MaterialCntMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GivingRecord_MaterialCntMapEntry_default_instance_);_GivingRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GivingRecord_default_instance_);_GivingRecordNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GivingRecordNotify_default_instance_);_GivingRecordChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GivingRecordChangeNotify_default_instance_);_ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemGivingReq_ItemGuidCountMapEntry_default_instance_);_ItemGivingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemGivingReq_default_instance_);_ItemGivingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemGivingRsp_default_instance_);_PlayerCookArgsReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookArgsReq_default_instance_);_PlayerCookArgsRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCookArgsRsp_default_instance_);_PlayerLuaShellNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLuaShellNotify_default_instance_);_ServerDisconnectClientNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDisconnectClientNotify_default_instance_);_AntiAddictNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AntiAddictNotify_default_instance_);_PlayerForceExitReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerForceExitReq_default_instance_);_PlayerForceExitRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerForceExitRsp_default_instance_);_PlayerInjectFixNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerInjectFixNotify_default_instance_);_TaskVar_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TaskVar_default_instance_);_TaskVarNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TaskVarNotify_default_instance_);_ClientLockGameTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientLockGameTimeNotify_default_instance_);_GetNextResourceInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetNextResourceInfoReq_default_instance_);_GetNextResourceInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetNextResourceInfoRsp_default_instance_);_AdjustWorldLevelReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdjustWorldLevelReq_default_instance_);_AdjustWorldLevelRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdjustWorldLevelRsp_default_instance_);_DailyTaskFilterCityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskFilterCityReq_default_instance_);_DailyTaskFilterCityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskFilterCityRsp_default_instance_);_DailyTaskUnlockedCitiesNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DailyTaskUnlockedCitiesNotify_default_instance_);_ExclusiveRuleInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExclusiveRuleInfo_default_instance_);_ExclusiveRuleNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExclusiveRuleNotify_default_instance_);_CompoundUnlockNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CompoundUnlockNotify_default_instance_);_GameplayRecommendationSkillRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameplayRecommendationSkillRequest_default_instance_);_GameplayRecommendationReliquaryRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameplayRecommendationReliquaryRequest_default_instance_);_GameplayRecommendationElementReliquaryRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameplayRecommendationElementReliquaryRequest_default_instance_);_GetGameplayRecommendationReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetGameplayRecommendationReq_default_instance_);_GameplayRecommendationSkillResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameplayRecommendationSkillResponse_default_instance_);_GameplayRecommendationReliquaryMainPropData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameplayRecommendationReliquaryMainPropData_default_instance_);_GameplayRecommendationReliquaryResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameplayRecommendationReliquaryResponse_default_instance_);_GameplayRecommendationElementReliquaryResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameplayRecommendationElementReliquaryResponse_default_instance_);_GetGameplayRecommendationRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetGameplayRecommendationRsp_default_instance_);_TakeBackGivingItemReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeBackGivingItemReq_default_instance_);_TakeBackGivingItemRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeBackGivingItemRsp_default_instance_);_PlayerNicknameAuditDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerNicknameAuditDataNotify_default_instance_);_PlayerNicknameNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerNicknameNotify_default_instance_);_NicknameAuditConfigNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NicknameAuditConfigNotify_default_instance_);_ReadNicknameAuditReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReadNicknameAuditReq_default_instance_);_ReadNicknameAuditRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReadNicknameAuditRsp_default_instance_);_PlayerCompoundMaterialBoostReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCompoundMaterialBoostReq_default_instance_);_PlayerCompoundMaterialBoostRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCompoundMaterialBoostRsp_default_instance_);_PlayerGameTimeByLuaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerGameTimeByLuaNotify_default_instance_);_PlayerIpRegionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerIpRegionNotify_default_instance_);_GetPlayerTokenRsp_default_instance_._instance.get_mutable()->stop_server_ = const_cast< ::proto::StopServerInfo*>(
      ::proto::StopServerInfo::internal_default_instance());
  _PlayerLoginReq_default_instance_._instance.get_mutable()->tracking_io_info_ = const_cast< ::proto::TrackingIOInfo*>(
      ::proto::TrackingIOInfo::internal_default_instance());
  _PlayerLoginReq_default_instance_._instance.get_mutable()->adjust_tracking_info_ = const_cast< ::proto::AdjustTrackingInfo*>(
      ::proto::AdjustTrackingInfo::internal_default_instance());
  _PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable());
  _PlayerLoginRsp_BlockInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable());
  _PlayerLoginRsp_AbilityHashMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerLoginRsp_default_instance_._instance.get_mutable()->next_res_version_config_ = const_cast< ::proto::ResVersionConfig*>(
      ::proto::ResVersionConfig::internal_default_instance());
  _PlayerLoginRsp_default_instance_._instance.get_mutable()->res_version_config_ = const_cast< ::proto::ResVersionConfig*>(
      ::proto::ResVersionConfig::internal_default_instance());
  _PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable());
  _PlayerDataNotify_PropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable());
  _PlayerPropNotify_PropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
  _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable());
  _OpenStateChangeNotify_OpenStateMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerCookRsp_default_instance_._instance.get_mutable()->recipe_data_ = const_cast< ::proto::CookRecipeData*>(
      ::proto::CookRecipeData::internal_default_instance());
  _CookRecipeDataNotify_default_instance_._instance.get_mutable()->recipe_data_ = const_cast< ::proto::CookRecipeData*>(
      ::proto::CookRecipeData::internal_default_instance());
  _PlayerCompoundMaterialRsp_default_instance_._instance.get_mutable()->compound_que_data_ = const_cast< ::proto::CompoundQueueData*>(
      ::proto::CompoundQueueData::internal_default_instance());
  _DataResVersionNotify_default_instance_._instance.get_mutable()->res_version_config_ = const_cast< ::proto::ResVersionConfig*>(
      ::proto::ResVersionConfig::internal_default_instance());
  _DailyTaskProgressNotify_default_instance_._instance.get_mutable()->info_ = const_cast< ::proto::DailyTaskInfo*>(
      ::proto::DailyTaskInfo::internal_default_instance());
  _AddRandTaskInfoNotify_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _GivingRecord_MaterialCntMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GivingRecord_MaterialCntMapEntry_default_instance_._instance.get_mutable());
  _GivingRecord_MaterialCntMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GivingRecordChangeNotify_default_instance_._instance.get_mutable()->giving_record_ = const_cast< ::proto::GivingRecord*>(
      ::proto::GivingRecord::internal_default_instance());
  _ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable());
  _ItemGivingReq_ItemGuidCountMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GetNextResourceInfoRsp_default_instance_._instance.get_mutable()->next_res_version_config_ = const_cast< ::proto::ResVersionConfig*>(
      ::proto::ResVersionConfig::internal_default_instance());
  _GetGameplayRecommendationReq_default_instance_.skill_request_ = const_cast< ::proto::GameplayRecommendationSkillRequest*>(
      ::proto::GameplayRecommendationSkillRequest::internal_default_instance());
  _GetGameplayRecommendationReq_default_instance_.reliquary_request_ = const_cast< ::proto::GameplayRecommendationReliquaryRequest*>(
      ::proto::GameplayRecommendationReliquaryRequest::internal_default_instance());
  _GetGameplayRecommendationReq_default_instance_.element_reliquary_request_ = const_cast< ::proto::GameplayRecommendationElementReliquaryRequest*>(
      ::proto::GameplayRecommendationElementReliquaryRequest::internal_default_instance());
  _GetGameplayRecommendationRsp_default_instance_.skill_response_ = const_cast< ::proto::GameplayRecommendationSkillResponse*>(
      ::proto::GameplayRecommendationSkillResponse::internal_default_instance());
  _GetGameplayRecommendationRsp_default_instance_.reliquary_response_ = const_cast< ::proto::GameplayRecommendationReliquaryResponse*>(
      ::proto::GameplayRecommendationReliquaryResponse::internal_default_instance());
  _GetGameplayRecommendationRsp_default_instance_.element_reliquary_response_ = const_cast< ::proto::GameplayRecommendationElementReliquaryResponse*>(
      ::proto::GameplayRecommendationElementReliquaryResponse::internal_default_instance());
  _PlayerNicknameAuditDataNotify_default_instance_._instance.get_mutable()->info_ = const_cast< ::proto::ContentAuditInfo*>(
      ::proto::ContentAuditInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_player.proto\022\005proto\032\014define.pr"
      "oto\"\263\003\n\021GetPlayerTokenReq\022\023\n\013account_ext"
      "\030\t \001(\t\022\025\n\raccount_token\030\n \001(\t\022\022\n\nchannel"
      "_id\030\017 \001(\r\022\020\n\010is_guest\030\006 \001(\010\022\022\n\npsn_regio"
      "n\030\004 \001(\t\022\026\n\016sub_channel_id\030\010 \001(\r\022\023\n\013accou"
      "nt_uid\030\013 \001(\t\022\017\n\006key_id\030\373\r \001(\r\022\024\n\014account"
      "_type\030\001 \001(\r\022\027\n\017cloud_client_ip\030\016 \001(\r\022\033\n\022"
      "minors_reg_min_age\030\343\007 \001(\r\022\013\n\003uid\030\002 \001(\r\022\021"
      "\n\tonline_id\030\007 \001(\t\022\021\n\010birthday\030\266\r \001(\t\022\025\n\r"
      "client_ip_str\030\003 \001(\t\022\025\n\rplatform_type\030\014 \001"
      "(\r\022\030\n\017client_rand_key\030\370\005 \001(\t\022\024\n\014country_"
      "code\030\005 \001(\t\022\r\n\004lang\030\374\006 \001(\r\022\016\n\006psn_id\030\r \001("
      "\t\"\367\005\n\021GetPlayerTokenRsp\022\033\n\022minors_reg_mi"
      "n_age\030\231\014 \001(\r\022\023\n\nchannel_id\030\200\007 \001(\r\022\025\n\rpla"
      "tform_type\030\010 \001(\r\022\023\n\013account_uid\030\014 \001(\t\022\034\n"
      "\023is_login_white_list\030\275\004 \001(\010\022\020\n\010is_guest\030"
      "\004 \001(\010\022\032\n\022black_uid_end_time\030\016 \001(\r\022\030\n\017is_"
      "watchdog_uid\030\354\017 \001(\010\022\017\n\006psn_id\030\223\016 \001(\t\022\014\n\003"
      "tag\030\343\014 \001(\r\022\025\n\014country_code\030\335\017 \001(\t\022\r\n\005tok"
      "en\030\013 \001(\t\022\027\n\016sub_channel_id\030\212\016 \001(\r\022\033\n\023sec"
      "urity_cmd_buffer\030\006 \001(\014\022\"\n\031client_version"
      "_random_key\030\371\013 \001(\t\022\021\n\010birthday\030\251\007 \001(\t\022\027\n"
      "\017secret_key_seed\030\r \001(\004\022\024\n\014account_type\030\005"
      " \001(\r\022\013\n\003msg\030\007 \001(\t\022\"\n\031finish_collection_i"
      "d_list\030\350\014 \003(\r\022\r\n\004sign\030\364\010 \001(\t\022\022\n\nsecret_k"
      "ey\030\017 \001(\t\022+\n\013stop_server\030\346\n \001(\0132\025.proto.S"
      "topServerInfo\022\017\n\007retcode\030\002 \001(\005\022\013\n\003uid\030\001 "
      "\001(\r\022\034\n\024is_proficient_player\030\t \001(\010\022\025\n\014reg"
      "_platform\030\330\010 \001(\r\022\030\n\017server_rand_key\030\325\013 \001"
      "(\t\022\026\n\016extra_bin_data\030\003 \001(\014\022\026\n\rclient_ip_"
      "str\030\334\006 \001(\t\022\016\n\006gm_uid\030\n \001(\r\022\017\n\006key_id\030\224\t "
      "\001(\r\"\222\001\n\016TrackingIOInfo\022\024\n\014rydevicetype\030\013"
      " \001(\t\022\013\n\003mac\030\006 \001(\t\022\020\n\010deviceid\030\t \001(\t\022\021\n\tc"
      "lient_tz\030\005 \001(\t\022\024\n\014current_caid\030\007 \001(\t\022\023\n\013"
      "cached_caid\030\017 \001(\t\022\r\n\005appid\030\001 \001(\t\"}\n\022Adju"
      "stTrackingInfo\022\023\n\013event_token\030\t \001(\t\022\014\n\004a"
      "did\030\004 \001(\t\022\014\n\004idfa\030\002 \001(\t\022\021\n\tapp_token\030\016 \001"
      "(\t\022\020\n\010gps_adid\030\003 \001(\t\022\021\n\tfire_adid\030\r \001(\t\""
      "\225\010\n\016PlayerLoginReq\022\025\n\rlanguage_type\030\006 \001("
      "\r\022\025\n\014reg_platform\030\347\004 \001(\r\0220\n\020tracking_io_"
      "info\030\374\014 \001(\0132\025.proto.TrackingIOInfo\022\024\n\014ac"
      "count_type\030\r \001(\r\022\r\n\005token\030\017 \001(\t\022\027\n\016extra"
      "_bin_data\030\262\013 \001(\014\022\023\n\nchannel_id\030\242\n \001(\r\022\034\n"
      "\023client_data_version\030\260\005 \001(\r\022\023\n\013account_u"
      "id\030\002 \001(\t\022\026\n\016client_version\030\014 \001(\t\022\035\n\024secu"
      "rity_library_md5\030\204\006 \001(\t\022\025\n\014country_code\030"
      "\320\017 \001(\t\022\017\n\006psn_id\030\364\t \001(\t\022\024\n\013client_port\030\257"
      "\003 \001(\r\022\023\n\013device_name\030\t \001(\t\022\014\n\003cps\030\213\t \001(\t"
      "\022\022\n\nlogin_rand\030\003 \001(\004\022\032\n\021target_home_para"
      "m\030\330\007 \001(\r\0228\n\024adjust_tracking_info\030\230\016 \001(\0132"
      "\031.proto.AdjustTrackingInfo\022\024\n\013is_transfe"
      "r\030\214\007 \001(\010\022\014\n\003tag\030\373\r \001(\r\022\020\n\010is_guest\030\005 \001(\010"
      "\022\037\n\026environment_error_code\030\352\017 \001(\014\022\022\n\tonl"
      "ine_id\030\207\007 \001(\t\022\021\n\tis_editor\030\010 \001(\010\022 \n\027chec"
      "ksum_client_version\030\335\006 \001(\t\022\033\n\022security_c"
      "md_reply\030\313\017 \001(\014\022!\n\030security_library_vers"
      "ion\030\275\t \001(\t\022\021\n\010birthday\030\364\014 \001(\t\022\023\n\013device_"
      "uuid\030\004 \001(\t\022\025\n\014client_token\030\212\014 \001(\r\022\026\n\016sub"
      "_channel_id\030\027 \001(\r\022\022\n\ntarget_uid\030\013 \001(\r\022\023\n"
      "\013device_info\030\001 \001(\t\022\034\n\023client_verison_has"
      "h\030\253\r \001(\t\022\021\n\010checksum\030\374\013 \001(\t\022\025\n\rplatform_"
      "type\030\016 \001(\r\022\036\n\025target_home_owner_uid\030\310\016 \001"
      "(\r\022\030\n\017cloud_client_ip\030\267\n \001(\r\022\017\n\006gm_uid\030\344"
      "\004 \001(\r\022\026\n\016system_version\030\n \001(\t\022\020\n\010platfor"
      "m\030\007 \001(\t\"N\n\024ShortAbilityHashPair\022\033\n\023abili"
      "ty_config_hash\030\017 \001(\017\022\031\n\021ability_name_has"
      "h\030\001 \001(\017\"\343\t\n\016PlayerLoginRsp\022\033\n\023client_dat"
      "a_version\030\001 \001(\r\022\023\n\nis_sc_open\030\225\013 \001(\010\022\017\n\007"
      "retcode\030\017 \001(\005\022@\n\016block_info_map\030\273\004 \003(\0132\'"
      ".proto.PlayerLoginRsp.BlockInfoMapEntry\022"
      "\021\n\010is_audit\030\225\r \001(\010\022\024\n\013is_transfer\030\342\017 \001(\010"
      "\022\033\n\022client_silence_md5\030\322\r \001(\t\0229\n\027next_re"
      "s_version_config\030\245\014 \001(\0132\027.proto.ResVersi"
      "onConfig\022#\n\033client_silence_data_version\030"
      "\006 \001(\r\022\022\n\nlogin_rand\030\004 \001(\004\022\025\n\ris_new_play"
      "er\030\010 \001(\010\022\036\n\025client_version_suffix\030\227\010 \001(\t"
      "\022\020\n\010game_biz\030\005 \001(\t\022\032\n\021next_resource_url\030"
      "\355\004 \001(\t\022\022\n\nis_relogin\030\n \001(\010\022\027\n\017total_tick"
      "_time\030} \001(\001\022$\n\033is_enable_client_hash_deb"
      "ug\030\244\007 \001(\010\022\020\n\007sc_info\030\350\017 \001(\014\022\031\n\021ability_h"
      "ash_code\030\014 \001(\005\022\025\n\014register_cps\030\370\017 \001(\t\022\033\n"
      "\022is_login_rsp_split\030\361\014 \001(\010\022\033\n\023is_use_abi"
      "lity_hash\030\002 \001(\010\022C\n\020ability_hash_map\030\013 \003("
      "\0132).proto.PlayerLoginRsp.AbilityHashMapE"
      "ntry\022<\n\026short_ability_hash_map\030\372\001 \003(\0132\033."
      "proto.ShortAbilityHashPair\022\023\n\nclient_md5"
      "\030\246\016 \001(\t\022\025\n\014country_code\030\354\016 \001(\t\022\035\n\024is_dat"
      "a_need_relogin\030\267\007 \001(\010\0224\n\022res_version_con"
      "fig\030\261\017 \001(\0132\027.proto.ResVersionConfig\0229\n\027f"
      "eature_block_info_list\030\310\n \003(\0132\027.proto.Fe"
      "atureBlockInfo\022\021\n\010birthday\030\360\004 \001(\t\022\022\n\ntar"
      "get_uid\030\016 \001(\r\022\023\n\013player_data\030\r \001(\014\022&\n\035cl"
      "ient_silence_version_suffix\030\223\n \001(\t\022\036\n\025ta"
      "rget_home_owner_uid\030\251\004 \001(\r\022\033\n\023player_dat"
      "a_version\030\007 \001(\r\032E\n\021BlockInfoMapEntry\022\013\n\003"
      "key\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132\020.proto.BlockIn"
      "fo:\0028\001\0325\n\023AbilityHashMapEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"\331\001\n\017PlayerLogoutRe"
      "q\022-\n\006reason\030\006 \001(\0162\035.proto.PlayerLogoutRe"
      "q.Reason\"\226\001\n\006Reason\022\016\n\nDISCONNECT\020\000\022\016\n\nC"
      "LIENT_REQ\020\001\022\013\n\007TIMEOUT\020\002\022\r\n\tADMIN_REQ\020\003\022"
      "\020\n\014SERVER_CLOSE\020\004\022\014\n\010GM_CLEAR\020\005\022\023\n\017PLAYE"
      "R_TRANSFER\020\006\022\033\n\027CLIENT_CHECKSUM_INVALID\020"
      "\007\"\"\n\017PlayerLogoutRsp\022\017\n\007retcode\030\014 \001(\005\"%\n"
      "\022PlayerLogoutNotify\022\017\n\007retcode\030\r \001(\005\"\345\001\n"
      "\020PlayerDataNotify\022\023\n\013server_time\030\007 \001(\004\022\021"
      "\n\tnick_name\030\010 \001(\t\022\034\n\024is_first_login_toda"
      "y\030\014 \001(\010\022\021\n\tregion_id\030\006 \001(\r\0226\n\010prop_map\030\017"
      " \003(\0132$.proto.PlayerDataNotify.PropMapEnt"
      "ry\032@\n\014PropMapEntry\022\013\n\003key\030\001 \001(\r\022\037\n\005value"
      "\030\002 \001(\0132\020.proto.PropValue:\0028\001\"P\n\021ChangeGa"
      "meTimeReq\022\021\n\tgame_time\030\006 \001(\r\022\024\n\014is_force"
      "_set\030\013 \001(\010\022\022\n\nextra_days\030\014 \001(\r\"O\n\021Change"
      "GameTimeRsp\022\017\n\007retcode\030\010 \001(\005\022\022\n\nextra_da"
      "ys\030\005 \001(\r\022\025\n\rcur_game_time\030\016 \001(\r\"G\n\024Playe"
      "rGameTimeNotify\022\013\n\003uid\030\007 \001(\r\022\021\n\tgame_tim"
      "e\030\003 \001(\r\022\017\n\007is_home\030\r \001(\010\"\214\001\n\020PlayerPropN"
      "otify\0226\n\010prop_map\030\r \003(\0132$.proto.PlayerPr"
      "opNotify.PropMapEntry\032@\n\014PropMapEntry\022\013\n"
      "\003key\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132\020.proto.PropVa"
      "lue:\0028\001\"Y\n\030ClientTriggerEventNotify\022\020\n\010f"
      "orce_id\030\003 \001(\r\022+\n\nevent_type\030\002 \001(\0162\027.prot"
      "o.EventTriggerType\"7\n\020SetPlayerPropReq\022#"
      "\n\tprop_list\030\007 \003(\0132\020.proto.PropValue\"#\n\020S"
      "etPlayerPropRsp\022\017\n\007retcode\030\013 \001(\005\"<\n\024SetP"
      "layerBornDataReq\022\021\n\tavatar_id\030\002 \001(\r\022\021\n\tn"
      "ick_name\030\r \001(\t\"\'\n\024SetPlayerBornDataRsp\022\017"
      "\n\007retcode\030\n \001(\005\"\033\n\031DoSetPlayerBornDataNo"
      "tify\"\?\n\026PlayerPropChangeNotify\022\022\n\nprop_d"
      "elta\030\r \001(\r\022\021\n\tprop_type\030\014 \001(\r\"%\n\020SetPlay"
      "erNameReq\022\021\n\tnick_name\030\001 \001(\t\"6\n\020SetPlaye"
      "rNameRsp\022\017\n\007retcode\030\t \001(\005\022\021\n\tnick_name\030\016"
      " \001(\t\"-\n\017SetOpenStateReq\022\013\n\003key\030\014 \001(\r\022\r\n\005"
      "value\030\005 \001(\r\">\n\017SetOpenStateRsp\022\013\n\003key\030\t "
      "\001(\r\022\017\n\007retcode\030\016 \001(\005\022\r\n\005value\030\017 \001(\r\"\224\001\n\025"
      "OpenStateUpdateNotify\022F\n\016open_state_map\030"
      "\006 \003(\0132..proto.OpenStateUpdateNotify.Open"
      "StateMapEntry\0323\n\021OpenStateMapEntry\022\013\n\003ke"
      "y\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\224\001\n\025OpenState"
      "ChangeNotify\022F\n\016open_state_map\030\004 \003(\0132..p"
      "roto.OpenStateChangeNotify.OpenStateMapE"
      "ntry\0323\n\021OpenStateMapEntry\022\013\n\003key\030\001 \001(\r\022\r"
      "\n\005value\030\002 \001(\r:\0028\001\"b\n\rPlayerCookReq\022\022\n\nco"
      "ok_count\030\001 \001(\r\022\023\n\013qte_quality\030\014 \001(\r\022\021\n\tr"
      "ecipe_id\030\010 \001(\r\022\025\n\rassist_avatar\030\016 \001(\r\"\306\001"
      "\n\rPlayerCookRsp\022*\n\020extral_item_list\030\017 \003("
      "\0132\020.proto.ItemParam\022\022\n\ncook_count\030\014 \001(\r\022"
      "#\n\titem_list\030\013 \003(\0132\020.proto.ItemParam\022\017\n\007"
      "retcode\030\003 \001(\005\022\023\n\013qte_quality\030\005 \001(\r\022*\n\013re"
      "cipe_data\030\007 \001(\0132\025.proto.CookRecipeData\">"
      "\n\023PlayerRandomCookReq\022\'\n\rmaterial_list\030\r"
      " \003(\0132\020.proto.ItemParam\"&\n\023PlayerRandomCo"
      "okRsp\022\017\n\007retcode\030\004 \001(\005\"8\n\016CookRecipeData"
      "\022\023\n\013proficiency\030\r \001(\r\022\021\n\trecipe_id\030\t \001(\r"
      "\"P\n\016CookDataNotify\022/\n\020recipe_data_list\030\002"
      " \003(\0132\025.proto.CookRecipeData\022\r\n\005grade\030\013 \001"
      "(\r\"B\n\024CookRecipeDataNotify\022*\n\013recipe_dat"
      "a\030\004 \001(\0132\025.proto.CookRecipeData\"$\n\023CookGr"
      "adeDataNotify\022\r\n\005grade\030\014 \001(\r\"\?\n\031PlayerCo"
      "mpoundMaterialReq\022\r\n\005count\030\013 \001(\r\022\023\n\013comp"
      "ound_id\030\003 \001(\r\"g\n\021CompoundQueueData\022\024\n\014ou"
      "tput_count\030\001 \001(\r\022\023\n\013compound_id\030\004 \001(\r\022\023\n"
      "\013output_time\030\016 \001(\r\022\022\n\nwait_count\030\010 \001(\r\"a"
      "\n\031PlayerCompoundMaterialRsp\0223\n\021compound_"
      "que_data\030\005 \001(\0132\030.proto.CompoundQueueData"
      "\022\017\n\007retcode\030\014 \001(\005\"G\n\025TakeCompoundOutputR"
      "eq\022\031\n\021compound_group_id\030\003 \001(\r\022\023\n\013compoun"
      "d_id\030\n \001(\r\"M\n\025TakeCompoundOutputRsp\022#\n\ti"
      "tem_list\030\006 \003(\0132\020.proto.ItemParam\022\017\n\007retc"
      "ode\030\002 \001(\005\"l\n\022CompoundDataNotify\022\034\n\024unloc"
      "k_compound_list\030\001 \003(\r\0228\n\026compound_que_da"
      "ta_list\030\t \003(\0132\030.proto.CompoundQueueData\""
      "\024\n\022GetCompoundDataReq\"}\n\022GetCompoundData"
      "Rsp\022\017\n\007retcode\030\003 \001(\005\022\034\n\024unlock_compound_"
      "list\030\013 \003(\r\0228\n\026compound_que_data_list\030\007 \003"
      "(\0132\030.proto.CompoundQueueData\"O\n\020PlayerTi"
      "meNotify\022\023\n\013server_time\030\005 \001(\004\022\023\n\013player_"
      "time\030\013 \001(\004\022\021\n\tis_paused\030\016 \001(\010\"&\n\021PlayerS"
      "etPauseReq\022\021\n\tis_paused\030\001 \001(\010\"$\n\021PlayerS"
      "etPauseRsp\022\017\n\007retcode\030\017 \001(\005\"-\n\024PlayerSet"
      "LanguageReq\022\025\n\rlanguage_type\030\005 \001(\r\"\'\n\024Pl"
      "ayerSetLanguageRsp\022\017\n\007retcode\030\013 \001(\005\"\273\003\n\024"
      "DataResVersionNotify\022\032\n\022client_silence_m"
      "d5\030\n \001(\t\022%\n\035client_silence_version_suffi"
      "x\030\017 \001(\t\0223\n\022res_version_config\030\t \001(\0132\027.pr"
      "oto.ResVersionConfig\022\034\n\024is_data_need_rel"
      "ogin\030\007 \001(\010\022A\n\007op_type\030\014 \001(\01620.proto.Data"
      "ResVersionNotify.DataResVersionOpType\022\033\n"
      "\023client_data_version\030\002 \001(\r\022\035\n\025client_ver"
      "sion_suffix\030\005 \001(\t\022#\n\033client_silence_data"
      "_version\030\001 \001(\r\022\022\n\nclient_md5\030\016 \001(\t\"U\n\024Da"
      "taResVersionOpType\022\020\n\014OP_TYPE_NONE\020\000\022\023\n\017"
      "OP_TYPE_RELOGIN\020\001\022\026\n\022OP_TYPE_MP_RELOGIN\020"
      "\002\"y\n\rDailyTaskInfo\022\021\n\treward_id\030\003 \001(\r\022\020\n"
      "\010progress\030\r \001(\r\022\027\n\017finish_progress\030\n \001(\r"
      "\022\025\n\rdaily_task_id\030\004 \001(\r\022\023\n\013is_finished\030\016"
      " \001(\010\"c\n\023DailyTaskDataNotify\022\027\n\017score_rew"
      "ard_id\030\013 \001(\r\022\024\n\014finished_num\030\004 \001(\r\022\035\n\025is"
      "_taken_score_reward\030\t \001(\010\"=\n\027DailyTaskPr"
      "ogressNotify\022\"\n\004info\030\014 \001(\0132\024.proto.Daily"
      "TaskInfo\"/\n\032DailyTaskScoreRewardNotify\022\021"
      "\n\treward_id\030\016 \001(\r\"}\n\031WorldOwnerDailyTask"
      "Notify\022\'\n\ttask_list\030\001 \003(\0132\024.proto.DailyT"
      "askInfo\022\037\n\027finished_daily_task_num\030\005 \001(\r"
      "\022\026\n\016filter_city_id\030\002 \001(\r\"I\n\025AddRandTaskI"
      "nfoNotify\022\024\n\014rand_task_id\030\005 \001(\r\022\032\n\003pos\030\r"
      " \001(\0132\r.proto.Vector\"\301\001\n\030RemoveRandTaskIn"
      "foNotify\022\017\n\007is_succ\030\t \001(\010\022<\n\006reason\030\n \001("
      "\0162,.proto.RemoveRandTaskInfoNotify.Finis"
      "hReason\022\024\n\014rand_task_id\030\r \001(\r\"@\n\014FinishR"
      "eason\022\013\n\007DEFAULT\020\000\022\t\n\005CLEAR\020\001\022\014\n\010DISTANC"
      "E\020\002\022\n\n\006FINISH\020\003\")\n\030TakePlayerLevelReward"
      "Req\022\r\n\005level\030\003 \001(\r\"M\n\030TakePlayerLevelRew"
      "ardRsp\022\021\n\treward_id\030\t \001(\r\022\017\n\007retcode\030\r \001"
      "(\005\022\r\n\005level\030\006 \001(\r\"3\n\035PlayerLevelRewardUp"
      "dateNotify\022\022\n\nlevel_list\030\t \003(\r\"\206\002\n\014Givin"
      "gRecord\022\023\n\013is_finished\030\t \001(\010\022\020\n\010group_id"
      "\030\005 \001(\r\022\030\n\020is_gadget_giving\030\010 \001(\010\022\021\n\tgivi"
      "ng_id\030\003 \001(\r\022\025\n\rlast_group_id\030\006 \001(\r\022\021\n\tco"
      "nfig_id\030\002 \001(\r\022A\n\020material_cnt_map\030\017 \003(\0132"
      "\'.proto.GivingRecord.MaterialCntMapEntry"
      "\0325\n\023MaterialCntMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005"
      "value\030\002 \001(\r:\0028\001\"E\n\022GivingRecordNotify\022/\n"
      "\022giving_record_list\030\016 \003(\0132\023.proto.Giving"
      "Record\"[\n\030GivingRecordChangeNotify\022\023\n\013is"
      "_deactive\030\013 \001(\010\022*\n\rgiving_record\030\017 \001(\0132\023"
      ".proto.GivingRecord\"\267\002\n\rItemGivingReq\022G\n"
      "\023item_guid_count_map\030\017 \003(\0132*.proto.ItemG"
      "ivingReq.ItemGuidCountMapEntry\022\021\n\tgiving"
      "_id\030\r \001(\r\022)\n\017item_param_list\030\004 \003(\0132\020.pro"
      "to.ItemParam\022=\n\020item_giving_type\030\002 \001(\0162#"
      ".proto.ItemGivingReq.ItemGivingType\0327\n\025I"
      "temGuidCountMapEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005val"
      "ue\030\002 \001(\r:\0028\001\"\'\n\016ItemGivingType\022\t\n\005QUEST\020"
      "\000\022\n\n\006GADGET\020\001\"L\n\rItemGivingRsp\022\027\n\017giving"
      "_group_id\030\001 \001(\r\022\021\n\tgiving_id\030\r \001(\r\022\017\n\007re"
      "tcode\030\003 \001(\005\"=\n\021PlayerCookArgsReq\022\025\n\rassi"
      "st_avatar\030\n \001(\r\022\021\n\trecipe_id\030\013 \001(\r\"=\n\021Pl"
      "ayerCookArgsRsp\022\017\n\007retcode\030\004 \001(\005\022\027\n\017qte_"
      "range_ratio\030\014 \001(\002\"p\n\024PlayerLuaShellNotif"
      "y\022\'\n\nshell_type\030\007 \001(\0162\023.proto.LuaShellTy"
      "pe\022\n\n\002id\030\005 \001(\r\022\021\n\tlua_shell\030\014 \001(\014\022\020\n\010use"
      "_type\030\n \001(\r\",\n\034ServerDisconnectClientNot"
      "ify\022\014\n\004data\030\n \001(\r\"@\n\020AntiAddictNotify\022\020\n"
      "\010msg_type\030\006 \001(\005\022\013\n\003msg\030\003 \001(\t\022\r\n\005level\030\005 "
      "\001(\t\"\024\n\022PlayerForceExitReq\"%\n\022PlayerForce"
      "ExitRsp\022\017\n\007retcode\030\017 \001(\005\"7\n\025PlayerInject"
      "FixNotify\022\n\n\002id\030\r \001(\r\022\022\n\ninject_fix\030\n \001("
      "\014\"*\n\007TaskVar\022\013\n\003key\030\010 \001(\r\022\022\n\nvalue_list\030"
      "\006 \003(\005\"6\n\rTaskVarNotify\022%\n\rtask_var_list\030"
      "\007 \003(\0132\016.proto.TaskVar\"+\n\030ClientLockGameT"
      "imeNotify\022\017\n\007is_lock\030\005 \001(\010\"\030\n\026GetNextRes"
      "ourceInfoReq\"~\n\026GetNextResourceInfoRsp\022\031"
      "\n\021next_resource_url\030\016 \001(\t\0228\n\027next_res_ve"
      "rsion_config\030\002 \001(\0132\027.proto.ResVersionCon"
      "fig\022\017\n\007retcode\030\014 \001(\005\"J\n\023AdjustWorldLevel"
      "Req\022\032\n\022expect_world_level\030\010 \001(\r\022\027\n\017cur_w"
      "orld_level\030\t \001(\r\"W\n\023AdjustWorldLevelRsp\022"
      "\017\n\007retcode\030\r \001(\005\022\024\n\014cd_over_time\030\017 \001(\r\022\031"
      "\n\021after_world_level\030\016 \001(\r\")\n\026DailyTaskFi"
      "lterCityReq\022\017\n\007city_id\030\010 \001(\r\":\n\026DailyTas"
      "kFilterCityRsp\022\017\n\007retcode\030\005 \001(\005\022\017\n\007city_"
      "id\030\t \001(\r\";\n\035DailyTaskUnlockedCitiesNotif"
      "y\022\032\n\022unlocked_city_list\030\014 \003(\r\">\n\021Exclusi"
      "veRuleInfo\022\026\n\016object_id_list\030\001 \003(\r\022\021\n\tru"
      "le_type\030\n \001(\r\"G\n\023ExclusiveRuleNotify\0220\n\016"
      "rule_info_list\030\005 \003(\0132\030.proto.ExclusiveRu"
      "leInfo\"+\n\024CompoundUnlockNotify\022\023\n\013compou"
      "nd_id\030\003 \001(\r\"<\n\"GameplayRecommendationSki"
      "llRequest\022\026\n\016skill_depot_id\030\001 \001(\r\"<\n&Gam"
      "eplayRecommendationReliquaryRequest\022\022\n\ne"
      "quip_type\030\006 \001(\r\"Y\n-GameplayRecommendatio"
      "nElementReliquaryRequest\022\022\n\nequip_type\030\t"
      " \001(\r\022\024\n\014element_type\030\014 \001(\r\"\251\002\n\034GetGamepl"
      "ayRecommendationReq\022\021\n\tavatar_id\030\t \001(\r\022C"
      "\n\rskill_request\030\251\004 \001(\0132).proto.GameplayR"
      "ecommendationSkillRequestH\000\022K\n\021reliquary"
      "_request\030\311\017 \001(\0132-.proto.GameplayRecommen"
      "dationReliquaryRequestH\000\022Z\n\031element_reli"
      "quary_request\030\321\013 \001(\01324.proto.GameplayRec"
      "ommendationElementReliquaryRequestH\000B\010\n\006"
      "detail\"T\n#GameplayRecommendationSkillRes"
      "ponse\022\026\n\016skill_depot_id\030\r \001(\r\022\025\n\rskill_i"
      "d_list\030\t \003(\r\"W\n+GameplayRecommendationRe"
      "liquaryMainPropData\022\022\n\npermillage\030\001 \001(\r\022"
      "\024\n\014main_prop_id\030\014 \001(\r\"\216\001\n\'GameplayRecomm"
      "endationReliquaryResponse\022O\n\023main_prop_d"
      "ata_list\030\010 \003(\01322.proto.GameplayRecommend"
      "ationReliquaryMainPropData\022\022\n\nequip_type"
      "\030\003 \001(\r\"\253\001\n.GameplayRecommendationElement"
      "ReliquaryResponse\022\024\n\014element_type\030\013 \001(\r\022"
      "O\n\023main_prop_data_list\030\005 \003(\01322.proto.Gam"
      "eplayRecommendationReliquaryMainPropData"
      "\022\022\n\nequip_type\030\017 \001(\r\"\300\002\n\034GetGameplayReco"
      "mmendationRsp\022\017\n\007retcode\030\006 \001(\005\022\021\n\tavatar"
      "_id\030\017 \001(\r\022E\n\016skill_response\030\376\007 \001(\0132*.pro"
      "to.GameplayRecommendationSkillResponseH\000"
      "\022M\n\022reliquary_response\030\304\001 \001(\0132..proto.Ga"
      "meplayRecommendationReliquaryResponseH\000\022"
      "\\\n\032element_reliquary_response\030\247\001 \001(\01325.p"
      "roto.GameplayRecommendationElementReliqu"
      "aryResponseH\000B\010\n\006detail\"*\n\025TakeBackGivin"
      "gItemReq\022\021\n\tgiving_id\030\004 \001(\r\";\n\025TakeBackG"
      "ivingItemRsp\022\021\n\tgiving_id\030\n \001(\r\022\017\n\007retco"
      "de\030\006 \001(\005\"F\n\035PlayerNicknameAuditDataNotif"
      "y\022%\n\004info\030\r \001(\0132\027.proto.ContentAuditInfo"
      "\"(\n\024PlayerNicknameNotify\022\020\n\010nickname\030\007 \001"
      "(\t\"B\n\031NicknameAuditConfigNotify\022\017\n\007is_op"
      "en\030\010 \001(\010\022\024\n\014submit_limit\030\014 \001(\r\"\026\n\024ReadNi"
      "cknameAuditReq\"\'\n\024ReadNicknameAuditRsp\022\017"
      "\n\007retcode\030\014 \001(\005\"\225\001\n\036PlayerCompoundMateri"
      "alBoostReq\022\024\n\014is_boost_all\030\010 \001(\010\022 \n\030targ"
      "et_compound_group_id\030\016 \001(\r\022\033\n\023consume_ma"
      "terial_id\030\t \001(\r\022\036\n\026consume_material_coun"
      "t\030\001 \001(\r\"\316\001\n\036PlayerCompoundMaterialBoostR"
      "sp\022(\n\016take_item_list\030\002 \003(\0132\020.proto.ItemP"
      "aram\0227\n\013take_status\030\006 \001(\0162\".proto.Compou"
      "ndBoostTakeStatusType\022\017\n\007retcode\030\007 \001(\005\0228"
      "\n\026compound_que_data_list\030\001 \003(\0132\030.proto.C"
      "ompoundQueueData\"N\n\031PlayerGameTimeByLuaN"
      "otify\022\013\n\003uid\030\r \001(\r\022\021\n\tsim_speed\030\t \001(\r\022\021\n"
      "\tgame_time\030\n \001(\r\"\'\n\024PlayerIpRegionNotify"
      "\022\017\n\007ip_code\030\t \001(\t*\305\001\n\033CompoundBoostTakeS"
      "tatusType\022#\n\037COMPOUND_BOOST_TAKE_STATUS_"
      "NONE\020\000\022)\n%COMPOUND_BOOST_TAKE_STATUS_BOO"
      "ST_ONLY\020\001\022-\n)COMPOUND_BOOST_TAKE_STATUS_"
      "BOOST_AND_TAKE\020\002\022\'\n#COMPOUND_BOOST_TAKE_"
      "STATUS_BAG_FULL\020\003B(Z&github.com/teyvat-h"
      "elper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 13147);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_player.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fplayer_2eproto

const ::google::protobuf::EnumDescriptor* PlayerLogoutReq_Reason_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[0];
}
bool PlayerLogoutReq_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerLogoutReq_Reason PlayerLogoutReq::DISCONNECT;
const PlayerLogoutReq_Reason PlayerLogoutReq::CLIENT_REQ;
const PlayerLogoutReq_Reason PlayerLogoutReq::TIMEOUT;
const PlayerLogoutReq_Reason PlayerLogoutReq::ADMIN_REQ;
const PlayerLogoutReq_Reason PlayerLogoutReq::SERVER_CLOSE;
const PlayerLogoutReq_Reason PlayerLogoutReq::GM_CLEAR;
const PlayerLogoutReq_Reason PlayerLogoutReq::PLAYER_TRANSFER;
const PlayerLogoutReq_Reason PlayerLogoutReq::CLIENT_CHECKSUM_INVALID;
const PlayerLogoutReq_Reason PlayerLogoutReq::Reason_MIN;
const PlayerLogoutReq_Reason PlayerLogoutReq::Reason_MAX;
const int PlayerLogoutReq::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DataResVersionNotify_DataResVersionOpType_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[1];
}
bool DataResVersionNotify_DataResVersionOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataResVersionNotify_DataResVersionOpType DataResVersionNotify::OP_TYPE_NONE;
const DataResVersionNotify_DataResVersionOpType DataResVersionNotify::OP_TYPE_RELOGIN;
const DataResVersionNotify_DataResVersionOpType DataResVersionNotify::OP_TYPE_MP_RELOGIN;
const DataResVersionNotify_DataResVersionOpType DataResVersionNotify::DataResVersionOpType_MIN;
const DataResVersionNotify_DataResVersionOpType DataResVersionNotify::DataResVersionOpType_MAX;
const int DataResVersionNotify::DataResVersionOpType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RemoveRandTaskInfoNotify_FinishReason_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[2];
}
bool RemoveRandTaskInfoNotify_FinishReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::DEFAULT;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::CLEAR;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::DISTANCE;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::FINISH;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::FinishReason_MIN;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::FinishReason_MAX;
const int RemoveRandTaskInfoNotify::FinishReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ItemGivingReq_ItemGivingType_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[3];
}
bool ItemGivingReq_ItemGivingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ItemGivingReq_ItemGivingType ItemGivingReq::QUEST;
const ItemGivingReq_ItemGivingType ItemGivingReq::GADGET;
const ItemGivingReq_ItemGivingType ItemGivingReq::ItemGivingType_MIN;
const ItemGivingReq_ItemGivingType ItemGivingReq::ItemGivingType_MAX;
const int ItemGivingReq::ItemGivingType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CompoundBoostTakeStatusType_descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_enum_descriptors[4];
}
bool CompoundBoostTakeStatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerTokenReq::kAccountExtFieldNumber;
const int GetPlayerTokenReq::kAccountTokenFieldNumber;
const int GetPlayerTokenReq::kChannelIdFieldNumber;
const int GetPlayerTokenReq::kIsGuestFieldNumber;
const int GetPlayerTokenReq::kPsnRegionFieldNumber;
const int GetPlayerTokenReq::kSubChannelIdFieldNumber;
const int GetPlayerTokenReq::kAccountUidFieldNumber;
const int GetPlayerTokenReq::kKeyIdFieldNumber;
const int GetPlayerTokenReq::kAccountTypeFieldNumber;
const int GetPlayerTokenReq::kCloudClientIpFieldNumber;
const int GetPlayerTokenReq::kMinorsRegMinAgeFieldNumber;
const int GetPlayerTokenReq::kUidFieldNumber;
const int GetPlayerTokenReq::kOnlineIdFieldNumber;
const int GetPlayerTokenReq::kBirthdayFieldNumber;
const int GetPlayerTokenReq::kClientIpStrFieldNumber;
const int GetPlayerTokenReq::kPlatformTypeFieldNumber;
const int GetPlayerTokenReq::kClientRandKeyFieldNumber;
const int GetPlayerTokenReq::kCountryCodeFieldNumber;
const int GetPlayerTokenReq::kLangFieldNumber;
const int GetPlayerTokenReq::kPsnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerTokenReq::GetPlayerTokenReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerTokenReq)
}
GetPlayerTokenReq::GetPlayerTokenReq(const GetPlayerTokenReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_ip_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_ip_str().size() > 0) {
    client_ip_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_ip_str_);
  }
  psn_region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.psn_region().size() > 0) {
    psn_region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_region_);
  }
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country_code().size() > 0) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  account_ext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_ext().size() > 0) {
    account_ext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_ext_);
  }
  account_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_token().size() > 0) {
    account_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_token_);
  }
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_uid().size() > 0) {
    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.psn_id().size() > 0) {
    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  client_rand_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_rand_key().size() > 0) {
    client_rand_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_rand_key_);
  }
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthday().size() > 0) {
    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  ::memcpy(&account_type_, &from.account_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_id_) -
    reinterpret_cast<char*>(&account_type_)) + sizeof(key_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerTokenReq)
}

void GetPlayerTokenReq::SharedCtor() {
  client_ip_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_rand_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_id_) -
      reinterpret_cast<char*>(&account_type_)) + sizeof(key_id_));
  _cached_size_ = 0;
}

GetPlayerTokenReq::~GetPlayerTokenReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerTokenReq)
  SharedDtor();
}

void GetPlayerTokenReq::SharedDtor() {
  client_ip_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_rand_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPlayerTokenReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerTokenReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerTokenReq& GetPlayerTokenReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerTokenReq* GetPlayerTokenReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerTokenReq* n = new GetPlayerTokenReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerTokenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_ip_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_rand_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_id_) -
      reinterpret_cast<char*>(&account_type_)) + sizeof(key_id_));
  _internal_metadata_.Clear();
}

bool GetPlayerTokenReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerTokenReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 account_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_ip_str = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_ip_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_ip_str().data(), static_cast<int>(this->client_ip_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.client_ip_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string psn_region = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psn_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_region().data(), static_cast<int>(this->psn_region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.psn_region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.country_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_guest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sub_channel_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_ext = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_ext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_ext().data(), static_cast<int>(this->account_ext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.account_ext"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_token = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_token().data(), static_cast<int>(this->account_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.account_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_uid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_uid().data(), static_cast<int>(this->account_uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.account_uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string psn_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psn_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id().data(), static_cast<int>(this->psn_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.psn_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cloud_client_ip = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cloud_client_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_rand_key = 760;
      case 760: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 6082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_rand_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_rand_key().data(), static_cast<int>(this->client_rand_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.client_rand_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lang = 892;
      case 892: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 7136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 minors_reg_min_age = 995;
      case 995: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 7960 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minors_reg_min_age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthday = 1718;
      case 1718: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 13746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), static_cast<int>(this->birthday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenReq.birthday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 key_id = 1787;
      case 1787: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 14296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerTokenReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerTokenReq)
  return false;
#undef DO_
}

void GetPlayerTokenReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 account_type = 1;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_type(), output);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // string client_ip_str = 3;
  if (this->client_ip_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_ip_str().data(), static_cast<int>(this->client_ip_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.client_ip_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_ip_str(), output);
  }

  // string psn_region = 4;
  if (this->psn_region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_region().data(), static_cast<int>(this->psn_region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.psn_region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->psn_region(), output);
  }

  // string country_code = 5;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->country_code(), output);
  }

  // bool is_guest = 6;
  if (this->is_guest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_guest(), output);
  }

  // string online_id = 7;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->online_id(), output);
  }

  // uint32 sub_channel_id = 8;
  if (this->sub_channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->sub_channel_id(), output);
  }

  // string account_ext = 9;
  if (this->account_ext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_ext().data(), static_cast<int>(this->account_ext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_ext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->account_ext(), output);
  }

  // string account_token = 10;
  if (this->account_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_token().data(), static_cast<int>(this->account_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->account_token(), output);
  }

  // string account_uid = 11;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->account_uid(), output);
  }

  // uint32 platform_type = 12;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->platform_type(), output);
  }

  // string psn_id = 13;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.psn_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->psn_id(), output);
  }

  // uint32 cloud_client_ip = 14;
  if (this->cloud_client_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->cloud_client_ip(), output);
  }

  // uint32 channel_id = 15;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->channel_id(), output);
  }

  // string client_rand_key = 760;
  if (this->client_rand_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_rand_key().data(), static_cast<int>(this->client_rand_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.client_rand_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      760, this->client_rand_key(), output);
  }

  // uint32 lang = 892;
  if (this->lang() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(892, this->lang(), output);
  }

  // uint32 minors_reg_min_age = 995;
  if (this->minors_reg_min_age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(995, this->minors_reg_min_age(), output);
  }

  // string birthday = 1718;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1718, this->birthday(), output);
  }

  // uint32 key_id = 1787;
  if (this->key_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1787, this->key_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerTokenReq)
}

::google::protobuf::uint8* GetPlayerTokenReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 account_type = 1;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_type(), target);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // string client_ip_str = 3;
  if (this->client_ip_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_ip_str().data(), static_cast<int>(this->client_ip_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.client_ip_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->client_ip_str(), target);
  }

  // string psn_region = 4;
  if (this->psn_region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_region().data(), static_cast<int>(this->psn_region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.psn_region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->psn_region(), target);
  }

  // string country_code = 5;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->country_code(), target);
  }

  // bool is_guest = 6;
  if (this->is_guest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_guest(), target);
  }

  // string online_id = 7;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->online_id(), target);
  }

  // uint32 sub_channel_id = 8;
  if (this->sub_channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->sub_channel_id(), target);
  }

  // string account_ext = 9;
  if (this->account_ext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_ext().data(), static_cast<int>(this->account_ext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_ext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->account_ext(), target);
  }

  // string account_token = 10;
  if (this->account_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_token().data(), static_cast<int>(this->account_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->account_token(), target);
  }

  // string account_uid = 11;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.account_uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->account_uid(), target);
  }

  // uint32 platform_type = 12;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->platform_type(), target);
  }

  // string psn_id = 13;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.psn_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->psn_id(), target);
  }

  // uint32 cloud_client_ip = 14;
  if (this->cloud_client_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->cloud_client_ip(), target);
  }

  // uint32 channel_id = 15;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->channel_id(), target);
  }

  // string client_rand_key = 760;
  if (this->client_rand_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_rand_key().data(), static_cast<int>(this->client_rand_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.client_rand_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        760, this->client_rand_key(), target);
  }

  // uint32 lang = 892;
  if (this->lang() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(892, this->lang(), target);
  }

  // uint32 minors_reg_min_age = 995;
  if (this->minors_reg_min_age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(995, this->minors_reg_min_age(), target);
  }

  // string birthday = 1718;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenReq.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1718, this->birthday(), target);
  }

  // uint32 key_id = 1787;
  if (this->key_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1787, this->key_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerTokenReq)
  return target;
}

size_t GetPlayerTokenReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerTokenReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string client_ip_str = 3;
  if (this->client_ip_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_ip_str());
  }

  // string psn_region = 4;
  if (this->psn_region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->psn_region());
  }

  // string country_code = 5;
  if (this->country_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country_code());
  }

  // string online_id = 7;
  if (this->online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // string account_ext = 9;
  if (this->account_ext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_ext());
  }

  // string account_token = 10;
  if (this->account_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_token());
  }

  // string account_uid = 11;
  if (this->account_uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_uid());
  }

  // string psn_id = 13;
  if (this->psn_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->psn_id());
  }

  // string client_rand_key = 760;
  if (this->client_rand_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_rand_key());
  }

  // string birthday = 1718;
  if (this->birthday().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // uint32 account_type = 1;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // bool is_guest = 6;
  if (this->is_guest() != 0) {
    total_size += 1 + 1;
  }

  // uint32 sub_channel_id = 8;
  if (this->sub_channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sub_channel_id());
  }

  // uint32 platform_type = 12;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform_type());
  }

  // uint32 cloud_client_ip = 14;
  if (this->cloud_client_ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cloud_client_ip());
  }

  // uint32 channel_id = 15;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  // uint32 lang = 892;
  if (this->lang() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lang());
  }

  // uint32 minors_reg_min_age = 995;
  if (this->minors_reg_min_age() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minors_reg_min_age());
  }

  // uint32 key_id = 1787;
  if (this->key_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerTokenReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerTokenReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerTokenReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerTokenReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerTokenReq)
    MergeFrom(*source);
  }
}

void GetPlayerTokenReq::MergeFrom(const GetPlayerTokenReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_ip_str().size() > 0) {

    client_ip_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_ip_str_);
  }
  if (from.psn_region().size() > 0) {

    psn_region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_region_);
  }
  if (from.country_code().size() > 0) {

    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.account_ext().size() > 0) {

    account_ext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_ext_);
  }
  if (from.account_token().size() > 0) {

    account_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_token_);
  }
  if (from.account_uid().size() > 0) {

    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  if (from.psn_id().size() > 0) {

    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  if (from.client_rand_key().size() > 0) {

    client_rand_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_rand_key_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.is_guest() != 0) {
    set_is_guest(from.is_guest());
  }
  if (from.sub_channel_id() != 0) {
    set_sub_channel_id(from.sub_channel_id());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
  if (from.cloud_client_ip() != 0) {
    set_cloud_client_ip(from.cloud_client_ip());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.lang() != 0) {
    set_lang(from.lang());
  }
  if (from.minors_reg_min_age() != 0) {
    set_minors_reg_min_age(from.minors_reg_min_age());
  }
  if (from.key_id() != 0) {
    set_key_id(from.key_id());
  }
}

void GetPlayerTokenReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerTokenReq::CopyFrom(const GetPlayerTokenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerTokenReq::IsInitialized() const {
  return true;
}

void GetPlayerTokenReq::Swap(GetPlayerTokenReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerTokenReq::InternalSwap(GetPlayerTokenReq* other) {
  using std::swap;
  client_ip_str_.Swap(&other->client_ip_str_);
  psn_region_.Swap(&other->psn_region_);
  country_code_.Swap(&other->country_code_);
  online_id_.Swap(&other->online_id_);
  account_ext_.Swap(&other->account_ext_);
  account_token_.Swap(&other->account_token_);
  account_uid_.Swap(&other->account_uid_);
  psn_id_.Swap(&other->psn_id_);
  client_rand_key_.Swap(&other->client_rand_key_);
  birthday_.Swap(&other->birthday_);
  swap(account_type_, other->account_type_);
  swap(uid_, other->uid_);
  swap(is_guest_, other->is_guest_);
  swap(sub_channel_id_, other->sub_channel_id_);
  swap(platform_type_, other->platform_type_);
  swap(cloud_client_ip_, other->cloud_client_ip_);
  swap(channel_id_, other->channel_id_);
  swap(lang_, other->lang_);
  swap(minors_reg_min_age_, other->minors_reg_min_age_);
  swap(key_id_, other->key_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerTokenReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerTokenReq

// string account_ext = 9;
void GetPlayerTokenReq::clear_account_ext() {
  account_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::account_ext() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.GetNoArena();
}
void GetPlayerTokenReq::set_account_ext(const ::std::string& value) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_ext)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_account_ext(::std::string&& value) {
  
  account_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_ext)
}
#endif
void GetPlayerTokenReq::set_account_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_ext)
}
void GetPlayerTokenReq::set_account_ext(const char* value, size_t size) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_ext)
}
::std::string* GetPlayerTokenReq::mutable_account_ext() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_account_ext() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_ext)
  
  return account_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_account_ext(::std::string* account_ext) {
  if (account_ext != NULL) {
    
  } else {
    
  }
  account_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_ext);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_ext)
}

// string account_token = 10;
void GetPlayerTokenReq::clear_account_token() {
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::account_token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_token)
  return account_token_.GetNoArena();
}
void GetPlayerTokenReq::set_account_token(const ::std::string& value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_token)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_account_token(::std::string&& value) {
  
  account_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_token)
}
#endif
void GetPlayerTokenReq::set_account_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_token)
}
void GetPlayerTokenReq::set_account_token(const char* value, size_t size) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_token)
}
::std::string* GetPlayerTokenReq::mutable_account_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_token)
  return account_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_account_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_token)
  
  return account_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_account_token(::std::string* account_token) {
  if (account_token != NULL) {
    
  } else {
    
  }
  account_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_token)
}

// uint32 channel_id = 15;
void GetPlayerTokenReq::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.channel_id)
  return channel_id_;
}
void GetPlayerTokenReq::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.channel_id)
}

// bool is_guest = 6;
void GetPlayerTokenReq::clear_is_guest() {
  is_guest_ = false;
}
bool GetPlayerTokenReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.is_guest)
  return is_guest_;
}
void GetPlayerTokenReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.is_guest)
}

// string psn_region = 4;
void GetPlayerTokenReq::clear_psn_region() {
  psn_region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::psn_region() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.psn_region)
  return psn_region_.GetNoArena();
}
void GetPlayerTokenReq::set_psn_region(const ::std::string& value) {
  
  psn_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.psn_region)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_psn_region(::std::string&& value) {
  
  psn_region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.psn_region)
}
#endif
void GetPlayerTokenReq::set_psn_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.psn_region)
}
void GetPlayerTokenReq::set_psn_region(const char* value, size_t size) {
  
  psn_region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.psn_region)
}
::std::string* GetPlayerTokenReq::mutable_psn_region() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.psn_region)
  return psn_region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_psn_region() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.psn_region)
  
  return psn_region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_psn_region(::std::string* psn_region) {
  if (psn_region != NULL) {
    
  } else {
    
  }
  psn_region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_region);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.psn_region)
}

// uint32 sub_channel_id = 8;
void GetPlayerTokenReq::clear_sub_channel_id() {
  sub_channel_id_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::sub_channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.sub_channel_id)
  return sub_channel_id_;
}
void GetPlayerTokenReq::set_sub_channel_id(::google::protobuf::uint32 value) {
  
  sub_channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.sub_channel_id)
}

// string account_uid = 11;
void GetPlayerTokenReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.GetNoArena();
}
void GetPlayerTokenReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_uid)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_uid)
}
#endif
void GetPlayerTokenReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_uid)
}
void GetPlayerTokenReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_uid)
}
::std::string* GetPlayerTokenReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_uid)
}

// uint32 key_id = 1787;
void GetPlayerTokenReq::clear_key_id() {
  key_id_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::key_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.key_id)
  return key_id_;
}
void GetPlayerTokenReq::set_key_id(::google::protobuf::uint32 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.key_id)
}

// uint32 account_type = 1;
void GetPlayerTokenReq::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_type)
  return account_type_;
}
void GetPlayerTokenReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_type)
}

// uint32 cloud_client_ip = 14;
void GetPlayerTokenReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.cloud_client_ip)
  return cloud_client_ip_;
}
void GetPlayerTokenReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.cloud_client_ip)
}

// uint32 minors_reg_min_age = 995;
void GetPlayerTokenReq::clear_minors_reg_min_age() {
  minors_reg_min_age_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::minors_reg_min_age() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.minors_reg_min_age)
  return minors_reg_min_age_;
}
void GetPlayerTokenReq::set_minors_reg_min_age(::google::protobuf::uint32 value) {
  
  minors_reg_min_age_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.minors_reg_min_age)
}

// uint32 uid = 2;
void GetPlayerTokenReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.uid)
  return uid_;
}
void GetPlayerTokenReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.uid)
}

// string online_id = 7;
void GetPlayerTokenReq::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::online_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.online_id)
  return online_id_.GetNoArena();
}
void GetPlayerTokenReq::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.online_id)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.online_id)
}
#endif
void GetPlayerTokenReq::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.online_id)
}
void GetPlayerTokenReq::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.online_id)
}
::std::string* GetPlayerTokenReq::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.online_id)
}

// string birthday = 1718;
void GetPlayerTokenReq::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::birthday() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.birthday)
  return birthday_.GetNoArena();
}
void GetPlayerTokenReq::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.birthday)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.birthday)
}
#endif
void GetPlayerTokenReq::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.birthday)
}
void GetPlayerTokenReq::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.birthday)
}
::std::string* GetPlayerTokenReq::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.birthday)
}

// string client_ip_str = 3;
void GetPlayerTokenReq::clear_client_ip_str() {
  client_ip_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::client_ip_str() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.client_ip_str)
  return client_ip_str_.GetNoArena();
}
void GetPlayerTokenReq::set_client_ip_str(const ::std::string& value) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.client_ip_str)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_client_ip_str(::std::string&& value) {
  
  client_ip_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.client_ip_str)
}
#endif
void GetPlayerTokenReq::set_client_ip_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.client_ip_str)
}
void GetPlayerTokenReq::set_client_ip_str(const char* value, size_t size) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.client_ip_str)
}
::std::string* GetPlayerTokenReq::mutable_client_ip_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.client_ip_str)
  return client_ip_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_client_ip_str() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.client_ip_str)
  
  return client_ip_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_client_ip_str(::std::string* client_ip_str) {
  if (client_ip_str != NULL) {
    
  } else {
    
  }
  client_ip_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_ip_str);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.client_ip_str)
}

// uint32 platform_type = 12;
void GetPlayerTokenReq::clear_platform_type() {
  platform_type_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.platform_type)
  return platform_type_;
}
void GetPlayerTokenReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.platform_type)
}

// string client_rand_key = 760;
void GetPlayerTokenReq::clear_client_rand_key() {
  client_rand_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::client_rand_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.client_rand_key)
  return client_rand_key_.GetNoArena();
}
void GetPlayerTokenReq::set_client_rand_key(const ::std::string& value) {
  
  client_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.client_rand_key)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_client_rand_key(::std::string&& value) {
  
  client_rand_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.client_rand_key)
}
#endif
void GetPlayerTokenReq::set_client_rand_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.client_rand_key)
}
void GetPlayerTokenReq::set_client_rand_key(const char* value, size_t size) {
  
  client_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.client_rand_key)
}
::std::string* GetPlayerTokenReq::mutable_client_rand_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.client_rand_key)
  return client_rand_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_client_rand_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.client_rand_key)
  
  return client_rand_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_client_rand_key(::std::string* client_rand_key) {
  if (client_rand_key != NULL) {
    
  } else {
    
  }
  client_rand_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_rand_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.client_rand_key)
}

// string country_code = 5;
void GetPlayerTokenReq::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::country_code() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.country_code)
  return country_code_.GetNoArena();
}
void GetPlayerTokenReq::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.country_code)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.country_code)
}
#endif
void GetPlayerTokenReq::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.country_code)
}
void GetPlayerTokenReq::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.country_code)
}
::std::string* GetPlayerTokenReq::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.country_code)
}

// uint32 lang = 892;
void GetPlayerTokenReq::clear_lang() {
  lang_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenReq::lang() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.lang)
  return lang_;
}
void GetPlayerTokenReq::set_lang(::google::protobuf::uint32 value) {
  
  lang_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.lang)
}

// string psn_id = 13;
void GetPlayerTokenReq::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenReq::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.psn_id)
  return psn_id_.GetNoArena();
}
void GetPlayerTokenReq::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.psn_id)
}
#if LANG_CXX11
void GetPlayerTokenReq::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.psn_id)
}
#endif
void GetPlayerTokenReq::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.psn_id)
}
void GetPlayerTokenReq::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.psn_id)
}
::std::string* GetPlayerTokenReq::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenReq::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenReq::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.psn_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerTokenRsp::kMinorsRegMinAgeFieldNumber;
const int GetPlayerTokenRsp::kChannelIdFieldNumber;
const int GetPlayerTokenRsp::kPlatformTypeFieldNumber;
const int GetPlayerTokenRsp::kAccountUidFieldNumber;
const int GetPlayerTokenRsp::kIsLoginWhiteListFieldNumber;
const int GetPlayerTokenRsp::kIsGuestFieldNumber;
const int GetPlayerTokenRsp::kBlackUidEndTimeFieldNumber;
const int GetPlayerTokenRsp::kIsWatchdogUidFieldNumber;
const int GetPlayerTokenRsp::kPsnIdFieldNumber;
const int GetPlayerTokenRsp::kTagFieldNumber;
const int GetPlayerTokenRsp::kCountryCodeFieldNumber;
const int GetPlayerTokenRsp::kTokenFieldNumber;
const int GetPlayerTokenRsp::kSubChannelIdFieldNumber;
const int GetPlayerTokenRsp::kSecurityCmdBufferFieldNumber;
const int GetPlayerTokenRsp::kClientVersionRandomKeyFieldNumber;
const int GetPlayerTokenRsp::kBirthdayFieldNumber;
const int GetPlayerTokenRsp::kSecretKeySeedFieldNumber;
const int GetPlayerTokenRsp::kAccountTypeFieldNumber;
const int GetPlayerTokenRsp::kMsgFieldNumber;
const int GetPlayerTokenRsp::kFinishCollectionIdListFieldNumber;
const int GetPlayerTokenRsp::kSignFieldNumber;
const int GetPlayerTokenRsp::kSecretKeyFieldNumber;
const int GetPlayerTokenRsp::kStopServerFieldNumber;
const int GetPlayerTokenRsp::kRetcodeFieldNumber;
const int GetPlayerTokenRsp::kUidFieldNumber;
const int GetPlayerTokenRsp::kIsProficientPlayerFieldNumber;
const int GetPlayerTokenRsp::kRegPlatformFieldNumber;
const int GetPlayerTokenRsp::kServerRandKeyFieldNumber;
const int GetPlayerTokenRsp::kExtraBinDataFieldNumber;
const int GetPlayerTokenRsp::kClientIpStrFieldNumber;
const int GetPlayerTokenRsp::kGmUidFieldNumber;
const int GetPlayerTokenRsp::kKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerTokenRsp::GetPlayerTokenRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerTokenRsp)
}
GetPlayerTokenRsp::GetPlayerTokenRsp(const GetPlayerTokenRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      finish_collection_id_list_(from.finish_collection_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra_bin_data().size() > 0) {
    extra_bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_bin_data_);
  }
  security_cmd_buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_cmd_buffer().size() > 0) {
    security_cmd_buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_cmd_buffer_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_uid().size() > 0) {
    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret_key().size() > 0) {
    secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
  }
  client_ip_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_ip_str().size() > 0) {
    client_ip_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_ip_str_);
  }
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthday().size() > 0) {
    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  server_rand_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_rand_key().size() > 0) {
    server_rand_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_rand_key_);
  }
  client_version_random_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_version_random_key().size() > 0) {
    client_version_random_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_random_key_);
  }
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.psn_id().size() > 0) {
    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country_code().size() > 0) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  if (from.has_stop_server()) {
    stop_server_ = new ::proto::StopServerInfo(*from.stop_server_);
  } else {
    stop_server_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(tag_));
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerTokenRsp)
}

void GetPlayerTokenRsp::SharedCtor() {
  extra_bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_cmd_buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_ip_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_rand_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_random_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stop_server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&stop_server_)) + sizeof(tag_));
  _cached_size_ = 0;
}

GetPlayerTokenRsp::~GetPlayerTokenRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerTokenRsp)
  SharedDtor();
}

void GetPlayerTokenRsp::SharedDtor() {
  extra_bin_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_cmd_buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_ip_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_rand_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_random_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stop_server_;
}

void GetPlayerTokenRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerTokenRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerTokenRsp& GetPlayerTokenRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerTokenRsp* GetPlayerTokenRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerTokenRsp* n = new GetPlayerTokenRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerTokenRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerTokenRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finish_collection_id_list_.Clear();
  extra_bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_cmd_buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_ip_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_rand_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_random_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && stop_server_ != NULL) {
    delete stop_server_;
  }
  stop_server_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(tag_));
  _internal_metadata_.Clear();
}

bool GetPlayerTokenRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerTokenRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes extra_bin_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra_bin_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_guest = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 account_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes security_cmd_buffer = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_security_cmd_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_proficient_player = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_proficient_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gm_uid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_uid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_uid().data(), static_cast<int>(this->account_uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.account_uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 secret_key_seed = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &secret_key_seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 black_uid_end_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &black_uid_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret_key = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret_key().data(), static_cast<int>(this->secret_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.secret_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_login_white_list = 573;
      case 573: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 4584 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_login_white_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_ip_str = 860;
      case 860: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 6882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_ip_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_ip_str().data(), static_cast<int>(this->client_ip_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.client_ip_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel_id = 896;
      case 896: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 7168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthday = 937;
      case 937: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 7498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), static_cast<int>(this->birthday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.birthday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reg_platform = 1112;
      case 1112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 8896 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reg_platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 1140;
      case 1140: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 9122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), static_cast<int>(this->sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 key_id = 1172;
      case 1172: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 9376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.StopServerInfo stop_server = 1382;
      case 1382: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 11058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stop_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_rand_key = 1493;
      case 1493: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 11946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_rand_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_rand_key().data(), static_cast<int>(this->server_rand_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.server_rand_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_version_random_key = 1529;
      case 1529: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 12234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version_random_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version_random_key().data(), static_cast<int>(this->client_version_random_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.client_version_random_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 minors_reg_min_age = 1561;
      case 1561: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 12488 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minors_reg_min_age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tag = 1635;
      case 1635: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 13080 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 finish_collection_id_list = 1640;
      case 1640: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 13122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_finish_collection_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 13120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 13122u, input, this->mutable_finish_collection_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sub_channel_id = 1802;
      case 1802: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 14416 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string psn_id = 1811;
      case 1811: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 14490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psn_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id().data(), static_cast<int>(this->psn_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.psn_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country_code = 2013;
      case 2013: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 16106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetPlayerTokenRsp.country_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_watchdog_uid = 2028;
      case 2028: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 16224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_watchdog_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerTokenRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerTokenRsp)
  return false;
#undef DO_
}

void GetPlayerTokenRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerTokenRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // bytes extra_bin_data = 3;
  if (this->extra_bin_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->extra_bin_data(), output);
  }

  // bool is_guest = 4;
  if (this->is_guest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_guest(), output);
  }

  // uint32 account_type = 5;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->account_type(), output);
  }

  // bytes security_cmd_buffer = 6;
  if (this->security_cmd_buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->security_cmd_buffer(), output);
  }

  // string msg = 7;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msg(), output);
  }

  // uint32 platform_type = 8;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->platform_type(), output);
  }

  // bool is_proficient_player = 9;
  if (this->is_proficient_player() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_proficient_player(), output);
  }

  // uint32 gm_uid = 10;
  if (this->gm_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->gm_uid(), output);
  }

  // string token = 11;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->token(), output);
  }

  // string account_uid = 12;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.account_uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->account_uid(), output);
  }

  // uint64 secret_key_seed = 13;
  if (this->secret_key_seed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->secret_key_seed(), output);
  }

  // uint32 black_uid_end_time = 14;
  if (this->black_uid_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->black_uid_end_time(), output);
  }

  // string secret_key = 15;
  if (this->secret_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_key().data(), static_cast<int>(this->secret_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.secret_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->secret_key(), output);
  }

  // bool is_login_white_list = 573;
  if (this->is_login_white_list() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(573, this->is_login_white_list(), output);
  }

  // string client_ip_str = 860;
  if (this->client_ip_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_ip_str().data(), static_cast<int>(this->client_ip_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.client_ip_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      860, this->client_ip_str(), output);
  }

  // uint32 channel_id = 896;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(896, this->channel_id(), output);
  }

  // string birthday = 937;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      937, this->birthday(), output);
  }

  // uint32 reg_platform = 1112;
  if (this->reg_platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1112, this->reg_platform(), output);
  }

  // string sign = 1140;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1140, this->sign(), output);
  }

  // uint32 key_id = 1172;
  if (this->key_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1172, this->key_id(), output);
  }

  // .proto.StopServerInfo stop_server = 1382;
  if (this->has_stop_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1382, *this->stop_server_, output);
  }

  // string server_rand_key = 1493;
  if (this->server_rand_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_rand_key().data(), static_cast<int>(this->server_rand_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.server_rand_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1493, this->server_rand_key(), output);
  }

  // string client_version_random_key = 1529;
  if (this->client_version_random_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_random_key().data(), static_cast<int>(this->client_version_random_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.client_version_random_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1529, this->client_version_random_key(), output);
  }

  // uint32 minors_reg_min_age = 1561;
  if (this->minors_reg_min_age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1561, this->minors_reg_min_age(), output);
  }

  // uint32 tag = 1635;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1635, this->tag(), output);
  }

  // repeated uint32 finish_collection_id_list = 1640;
  if (this->finish_collection_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1640, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finish_collection_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->finish_collection_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->finish_collection_id_list(i), output);
  }

  // uint32 sub_channel_id = 1802;
  if (this->sub_channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1802, this->sub_channel_id(), output);
  }

  // string psn_id = 1811;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.psn_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1811, this->psn_id(), output);
  }

  // string country_code = 2013;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2013, this->country_code(), output);
  }

  // bool is_watchdog_uid = 2028;
  if (this->is_watchdog_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2028, this->is_watchdog_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerTokenRsp)
}

::google::protobuf::uint8* GetPlayerTokenRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerTokenRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // bytes extra_bin_data = 3;
  if (this->extra_bin_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->extra_bin_data(), target);
  }

  // bool is_guest = 4;
  if (this->is_guest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_guest(), target);
  }

  // uint32 account_type = 5;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->account_type(), target);
  }

  // bytes security_cmd_buffer = 6;
  if (this->security_cmd_buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->security_cmd_buffer(), target);
  }

  // string msg = 7;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->msg(), target);
  }

  // uint32 platform_type = 8;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->platform_type(), target);
  }

  // bool is_proficient_player = 9;
  if (this->is_proficient_player() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_proficient_player(), target);
  }

  // uint32 gm_uid = 10;
  if (this->gm_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->gm_uid(), target);
  }

  // string token = 11;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->token(), target);
  }

  // string account_uid = 12;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.account_uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->account_uid(), target);
  }

  // uint64 secret_key_seed = 13;
  if (this->secret_key_seed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->secret_key_seed(), target);
  }

  // uint32 black_uid_end_time = 14;
  if (this->black_uid_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->black_uid_end_time(), target);
  }

  // string secret_key = 15;
  if (this->secret_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_key().data(), static_cast<int>(this->secret_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.secret_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->secret_key(), target);
  }

  // bool is_login_white_list = 573;
  if (this->is_login_white_list() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(573, this->is_login_white_list(), target);
  }

  // string client_ip_str = 860;
  if (this->client_ip_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_ip_str().data(), static_cast<int>(this->client_ip_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.client_ip_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        860, this->client_ip_str(), target);
  }

  // uint32 channel_id = 896;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(896, this->channel_id(), target);
  }

  // string birthday = 937;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        937, this->birthday(), target);
  }

  // uint32 reg_platform = 1112;
  if (this->reg_platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1112, this->reg_platform(), target);
  }

  // string sign = 1140;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1140, this->sign(), target);
  }

  // uint32 key_id = 1172;
  if (this->key_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1172, this->key_id(), target);
  }

  // .proto.StopServerInfo stop_server = 1382;
  if (this->has_stop_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1382, *this->stop_server_, deterministic, target);
  }

  // string server_rand_key = 1493;
  if (this->server_rand_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_rand_key().data(), static_cast<int>(this->server_rand_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.server_rand_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1493, this->server_rand_key(), target);
  }

  // string client_version_random_key = 1529;
  if (this->client_version_random_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_random_key().data(), static_cast<int>(this->client_version_random_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.client_version_random_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1529, this->client_version_random_key(), target);
  }

  // uint32 minors_reg_min_age = 1561;
  if (this->minors_reg_min_age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1561, this->minors_reg_min_age(), target);
  }

  // uint32 tag = 1635;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1635, this->tag(), target);
  }

  // repeated uint32 finish_collection_id_list = 1640;
  if (this->finish_collection_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1640,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _finish_collection_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->finish_collection_id_list_, target);
  }

  // uint32 sub_channel_id = 1802;
  if (this->sub_channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1802, this->sub_channel_id(), target);
  }

  // string psn_id = 1811;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.psn_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1811, this->psn_id(), target);
  }

  // string country_code = 2013;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetPlayerTokenRsp.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2013, this->country_code(), target);
  }

  // bool is_watchdog_uid = 2028;
  if (this->is_watchdog_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2028, this->is_watchdog_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerTokenRsp)
  return target;
}

size_t GetPlayerTokenRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerTokenRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 finish_collection_id_list = 1640;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->finish_collection_id_list_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finish_collection_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes extra_bin_data = 3;
  if (this->extra_bin_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra_bin_data());
  }

  // bytes security_cmd_buffer = 6;
  if (this->security_cmd_buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->security_cmd_buffer());
  }

  // string msg = 7;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string token = 11;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string account_uid = 12;
  if (this->account_uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_uid());
  }

  // string secret_key = 15;
  if (this->secret_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret_key());
  }

  // string client_ip_str = 860;
  if (this->client_ip_str().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_ip_str());
  }

  // string birthday = 937;
  if (this->birthday().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // string sign = 1140;
  if (this->sign().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // string server_rand_key = 1493;
  if (this->server_rand_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_rand_key());
  }

  // string client_version_random_key = 1529;
  if (this->client_version_random_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version_random_key());
  }

  // string psn_id = 1811;
  if (this->psn_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->psn_id());
  }

  // string country_code = 2013;
  if (this->country_code().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country_code());
  }

  // .proto.StopServerInfo stop_server = 1382;
  if (this->has_stop_server()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stop_server_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 account_type = 5;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // uint32 platform_type = 8;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform_type());
  }

  // uint32 gm_uid = 10;
  if (this->gm_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm_uid());
  }

  // uint32 black_uid_end_time = 14;
  if (this->black_uid_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->black_uid_end_time());
  }

  // uint64 secret_key_seed = 13;
  if (this->secret_key_seed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->secret_key_seed());
  }

  // uint32 sub_channel_id = 1802;
  if (this->sub_channel_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sub_channel_id());
  }

  // bool is_login_white_list = 573;
  if (this->is_login_white_list() != 0) {
    total_size += 2 + 1;
  }

  // bool is_guest = 4;
  if (this->is_guest() != 0) {
    total_size += 1 + 1;
  }

  // bool is_watchdog_uid = 2028;
  if (this->is_watchdog_uid() != 0) {
    total_size += 2 + 1;
  }

  // bool is_proficient_player = 9;
  if (this->is_proficient_player() != 0) {
    total_size += 1 + 1;
  }

  // uint32 channel_id = 896;
  if (this->channel_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  // uint32 reg_platform = 1112;
  if (this->reg_platform() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reg_platform());
  }

  // uint32 key_id = 1172;
  if (this->key_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key_id());
  }

  // uint32 minors_reg_min_age = 1561;
  if (this->minors_reg_min_age() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minors_reg_min_age());
  }

  // uint32 tag = 1635;
  if (this->tag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerTokenRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerTokenRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerTokenRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerTokenRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerTokenRsp)
    MergeFrom(*source);
  }
}

void GetPlayerTokenRsp::MergeFrom(const GetPlayerTokenRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerTokenRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  finish_collection_id_list_.MergeFrom(from.finish_collection_id_list_);
  if (from.extra_bin_data().size() > 0) {

    extra_bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_bin_data_);
  }
  if (from.security_cmd_buffer().size() > 0) {

    security_cmd_buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_cmd_buffer_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.account_uid().size() > 0) {

    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  if (from.secret_key().size() > 0) {

    secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
  }
  if (from.client_ip_str().size() > 0) {

    client_ip_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_ip_str_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.server_rand_key().size() > 0) {

    server_rand_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_rand_key_);
  }
  if (from.client_version_random_key().size() > 0) {

    client_version_random_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_random_key_);
  }
  if (from.psn_id().size() > 0) {

    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  if (from.country_code().size() > 0) {

    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  if (from.has_stop_server()) {
    mutable_stop_server()->::proto::StopServerInfo::MergeFrom(from.stop_server());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
  if (from.gm_uid() != 0) {
    set_gm_uid(from.gm_uid());
  }
  if (from.black_uid_end_time() != 0) {
    set_black_uid_end_time(from.black_uid_end_time());
  }
  if (from.secret_key_seed() != 0) {
    set_secret_key_seed(from.secret_key_seed());
  }
  if (from.sub_channel_id() != 0) {
    set_sub_channel_id(from.sub_channel_id());
  }
  if (from.is_login_white_list() != 0) {
    set_is_login_white_list(from.is_login_white_list());
  }
  if (from.is_guest() != 0) {
    set_is_guest(from.is_guest());
  }
  if (from.is_watchdog_uid() != 0) {
    set_is_watchdog_uid(from.is_watchdog_uid());
  }
  if (from.is_proficient_player() != 0) {
    set_is_proficient_player(from.is_proficient_player());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.reg_platform() != 0) {
    set_reg_platform(from.reg_platform());
  }
  if (from.key_id() != 0) {
    set_key_id(from.key_id());
  }
  if (from.minors_reg_min_age() != 0) {
    set_minors_reg_min_age(from.minors_reg_min_age());
  }
  if (from.tag() != 0) {
    set_tag(from.tag());
  }
}

void GetPlayerTokenRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerTokenRsp::CopyFrom(const GetPlayerTokenRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerTokenRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerTokenRsp::IsInitialized() const {
  return true;
}

void GetPlayerTokenRsp::Swap(GetPlayerTokenRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerTokenRsp::InternalSwap(GetPlayerTokenRsp* other) {
  using std::swap;
  finish_collection_id_list_.InternalSwap(&other->finish_collection_id_list_);
  extra_bin_data_.Swap(&other->extra_bin_data_);
  security_cmd_buffer_.Swap(&other->security_cmd_buffer_);
  msg_.Swap(&other->msg_);
  token_.Swap(&other->token_);
  account_uid_.Swap(&other->account_uid_);
  secret_key_.Swap(&other->secret_key_);
  client_ip_str_.Swap(&other->client_ip_str_);
  birthday_.Swap(&other->birthday_);
  sign_.Swap(&other->sign_);
  server_rand_key_.Swap(&other->server_rand_key_);
  client_version_random_key_.Swap(&other->client_version_random_key_);
  psn_id_.Swap(&other->psn_id_);
  country_code_.Swap(&other->country_code_);
  swap(stop_server_, other->stop_server_);
  swap(uid_, other->uid_);
  swap(retcode_, other->retcode_);
  swap(account_type_, other->account_type_);
  swap(platform_type_, other->platform_type_);
  swap(gm_uid_, other->gm_uid_);
  swap(black_uid_end_time_, other->black_uid_end_time_);
  swap(secret_key_seed_, other->secret_key_seed_);
  swap(sub_channel_id_, other->sub_channel_id_);
  swap(is_login_white_list_, other->is_login_white_list_);
  swap(is_guest_, other->is_guest_);
  swap(is_watchdog_uid_, other->is_watchdog_uid_);
  swap(is_proficient_player_, other->is_proficient_player_);
  swap(channel_id_, other->channel_id_);
  swap(reg_platform_, other->reg_platform_);
  swap(key_id_, other->key_id_);
  swap(minors_reg_min_age_, other->minors_reg_min_age_);
  swap(tag_, other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerTokenRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerTokenRsp

// uint32 minors_reg_min_age = 1561;
void GetPlayerTokenRsp::clear_minors_reg_min_age() {
  minors_reg_min_age_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::minors_reg_min_age() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.minors_reg_min_age)
  return minors_reg_min_age_;
}
void GetPlayerTokenRsp::set_minors_reg_min_age(::google::protobuf::uint32 value) {
  
  minors_reg_min_age_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.minors_reg_min_age)
}

// uint32 channel_id = 896;
void GetPlayerTokenRsp::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.channel_id)
  return channel_id_;
}
void GetPlayerTokenRsp::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.channel_id)
}

// uint32 platform_type = 8;
void GetPlayerTokenRsp::clear_platform_type() {
  platform_type_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.platform_type)
  return platform_type_;
}
void GetPlayerTokenRsp::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.platform_type)
}

// string account_uid = 12;
void GetPlayerTokenRsp::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.GetNoArena();
}
void GetPlayerTokenRsp::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_uid)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.account_uid)
}
#endif
void GetPlayerTokenRsp::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.account_uid)
}
void GetPlayerTokenRsp::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.account_uid)
}
::std::string* GetPlayerTokenRsp::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.account_uid)
}

// bool is_login_white_list = 573;
void GetPlayerTokenRsp::clear_is_login_white_list() {
  is_login_white_list_ = false;
}
bool GetPlayerTokenRsp::is_login_white_list() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_login_white_list)
  return is_login_white_list_;
}
void GetPlayerTokenRsp::set_is_login_white_list(bool value) {
  
  is_login_white_list_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_login_white_list)
}

// bool is_guest = 4;
void GetPlayerTokenRsp::clear_is_guest() {
  is_guest_ = false;
}
bool GetPlayerTokenRsp::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_guest)
  return is_guest_;
}
void GetPlayerTokenRsp::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_guest)
}

// uint32 black_uid_end_time = 14;
void GetPlayerTokenRsp::clear_black_uid_end_time() {
  black_uid_end_time_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::black_uid_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.black_uid_end_time)
  return black_uid_end_time_;
}
void GetPlayerTokenRsp::set_black_uid_end_time(::google::protobuf::uint32 value) {
  
  black_uid_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.black_uid_end_time)
}

// bool is_watchdog_uid = 2028;
void GetPlayerTokenRsp::clear_is_watchdog_uid() {
  is_watchdog_uid_ = false;
}
bool GetPlayerTokenRsp::is_watchdog_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_watchdog_uid)
  return is_watchdog_uid_;
}
void GetPlayerTokenRsp::set_is_watchdog_uid(bool value) {
  
  is_watchdog_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_watchdog_uid)
}

// string psn_id = 1811;
void GetPlayerTokenRsp::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.psn_id)
  return psn_id_.GetNoArena();
}
void GetPlayerTokenRsp::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.psn_id)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.psn_id)
}
#endif
void GetPlayerTokenRsp::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.psn_id)
}
void GetPlayerTokenRsp::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.psn_id)
}
::std::string* GetPlayerTokenRsp::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.psn_id)
}

// uint32 tag = 1635;
void GetPlayerTokenRsp::clear_tag() {
  tag_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::tag() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.tag)
  return tag_;
}
void GetPlayerTokenRsp::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.tag)
}

// string country_code = 2013;
void GetPlayerTokenRsp::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::country_code() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.country_code)
  return country_code_.GetNoArena();
}
void GetPlayerTokenRsp::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.country_code)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.country_code)
}
#endif
void GetPlayerTokenRsp::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.country_code)
}
void GetPlayerTokenRsp::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.country_code)
}
::std::string* GetPlayerTokenRsp::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.country_code)
}

// string token = 11;
void GetPlayerTokenRsp::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.token)
  return token_.GetNoArena();
}
void GetPlayerTokenRsp::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.token)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.token)
}
#endif
void GetPlayerTokenRsp::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.token)
}
void GetPlayerTokenRsp::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.token)
}
::std::string* GetPlayerTokenRsp::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.token)
}

// uint32 sub_channel_id = 1802;
void GetPlayerTokenRsp::clear_sub_channel_id() {
  sub_channel_id_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::sub_channel_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.sub_channel_id)
  return sub_channel_id_;
}
void GetPlayerTokenRsp::set_sub_channel_id(::google::protobuf::uint32 value) {
  
  sub_channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.sub_channel_id)
}

// bytes security_cmd_buffer = 6;
void GetPlayerTokenRsp::clear_security_cmd_buffer() {
  security_cmd_buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::security_cmd_buffer() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.security_cmd_buffer)
  return security_cmd_buffer_.GetNoArena();
}
void GetPlayerTokenRsp::set_security_cmd_buffer(const ::std::string& value) {
  
  security_cmd_buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_security_cmd_buffer(::std::string&& value) {
  
  security_cmd_buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
#endif
void GetPlayerTokenRsp::set_security_cmd_buffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_cmd_buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
void GetPlayerTokenRsp::set_security_cmd_buffer(const void* value, size_t size) {
  
  security_cmd_buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.security_cmd_buffer)
}
::std::string* GetPlayerTokenRsp::mutable_security_cmd_buffer() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.security_cmd_buffer)
  return security_cmd_buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_security_cmd_buffer() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.security_cmd_buffer)
  
  return security_cmd_buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_security_cmd_buffer(::std::string* security_cmd_buffer) {
  if (security_cmd_buffer != NULL) {
    
  } else {
    
  }
  security_cmd_buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_cmd_buffer);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.security_cmd_buffer)
}

// string client_version_random_key = 1529;
void GetPlayerTokenRsp::clear_client_version_random_key() {
  client_version_random_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::client_version_random_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.client_version_random_key)
  return client_version_random_key_.GetNoArena();
}
void GetPlayerTokenRsp::set_client_version_random_key(const ::std::string& value) {
  
  client_version_random_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.client_version_random_key)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_client_version_random_key(::std::string&& value) {
  
  client_version_random_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.client_version_random_key)
}
#endif
void GetPlayerTokenRsp::set_client_version_random_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_random_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.client_version_random_key)
}
void GetPlayerTokenRsp::set_client_version_random_key(const char* value, size_t size) {
  
  client_version_random_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.client_version_random_key)
}
::std::string* GetPlayerTokenRsp::mutable_client_version_random_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.client_version_random_key)
  return client_version_random_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_client_version_random_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.client_version_random_key)
  
  return client_version_random_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_client_version_random_key(::std::string* client_version_random_key) {
  if (client_version_random_key != NULL) {
    
  } else {
    
  }
  client_version_random_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_random_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.client_version_random_key)
}

// string birthday = 937;
void GetPlayerTokenRsp::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::birthday() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.birthday)
  return birthday_.GetNoArena();
}
void GetPlayerTokenRsp::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.birthday)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.birthday)
}
#endif
void GetPlayerTokenRsp::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.birthday)
}
void GetPlayerTokenRsp::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.birthday)
}
::std::string* GetPlayerTokenRsp::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.birthday)
}

// uint64 secret_key_seed = 13;
void GetPlayerTokenRsp::clear_secret_key_seed() {
  secret_key_seed_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetPlayerTokenRsp::secret_key_seed() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key_seed)
  return secret_key_seed_;
}
void GetPlayerTokenRsp::set_secret_key_seed(::google::protobuf::uint64 value) {
  
  secret_key_seed_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key_seed)
}

// uint32 account_type = 5;
void GetPlayerTokenRsp::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_type)
  return account_type_;
}
void GetPlayerTokenRsp::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_type)
}

// string msg = 7;
void GetPlayerTokenRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.msg)
  return msg_.GetNoArena();
}
void GetPlayerTokenRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.msg)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.msg)
}
#endif
void GetPlayerTokenRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.msg)
}
void GetPlayerTokenRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.msg)
}
::std::string* GetPlayerTokenRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.msg)
}

// repeated uint32 finish_collection_id_list = 1640;
int GetPlayerTokenRsp::finish_collection_id_list_size() const {
  return finish_collection_id_list_.size();
}
void GetPlayerTokenRsp::clear_finish_collection_id_list() {
  finish_collection_id_list_.Clear();
}
::google::protobuf::uint32 GetPlayerTokenRsp::finish_collection_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.finish_collection_id_list)
  return finish_collection_id_list_.Get(index);
}
void GetPlayerTokenRsp::set_finish_collection_id_list(int index, ::google::protobuf::uint32 value) {
  finish_collection_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.finish_collection_id_list)
}
void GetPlayerTokenRsp::add_finish_collection_id_list(::google::protobuf::uint32 value) {
  finish_collection_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetPlayerTokenRsp.finish_collection_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetPlayerTokenRsp::finish_collection_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerTokenRsp.finish_collection_id_list)
  return finish_collection_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetPlayerTokenRsp::mutable_finish_collection_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerTokenRsp.finish_collection_id_list)
  return &finish_collection_id_list_;
}

// string sign = 1140;
void GetPlayerTokenRsp::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::sign() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.sign)
  return sign_.GetNoArena();
}
void GetPlayerTokenRsp::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.sign)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.sign)
}
#endif
void GetPlayerTokenRsp::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.sign)
}
void GetPlayerTokenRsp::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.sign)
}
::std::string* GetPlayerTokenRsp::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_sign() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.sign)
}

// string secret_key = 15;
void GetPlayerTokenRsp::clear_secret_key() {
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::secret_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.GetNoArena();
}
void GetPlayerTokenRsp::set_secret_key(const ::std::string& value) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_secret_key(::std::string&& value) {
  
  secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.secret_key)
}
#endif
void GetPlayerTokenRsp::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.secret_key)
}
void GetPlayerTokenRsp::set_secret_key(const char* value, size_t size) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.secret_key)
}
::std::string* GetPlayerTokenRsp::mutable_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_secret_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.secret_key)
  
  return secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_secret_key(::std::string* secret_key) {
  if (secret_key != NULL) {
    
  } else {
    
  }
  secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.secret_key)
}

// .proto.StopServerInfo stop_server = 1382;
bool GetPlayerTokenRsp::has_stop_server() const {
  return this != internal_default_instance() && stop_server_ != NULL;
}
void GetPlayerTokenRsp::clear_stop_server() {
  if (GetArenaNoVirtual() == NULL && stop_server_ != NULL) delete stop_server_;
  stop_server_ = NULL;
}
const ::proto::StopServerInfo& GetPlayerTokenRsp::stop_server() const {
  const ::proto::StopServerInfo* p = stop_server_;
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.stop_server)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::StopServerInfo*>(
      &::proto::_StopServerInfo_default_instance_);
}
::proto::StopServerInfo* GetPlayerTokenRsp::mutable_stop_server() {
  
  if (stop_server_ == NULL) {
    stop_server_ = new ::proto::StopServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.stop_server)
  return stop_server_;
}
::proto::StopServerInfo* GetPlayerTokenRsp::release_stop_server() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.stop_server)
  
  ::proto::StopServerInfo* temp = stop_server_;
  stop_server_ = NULL;
  return temp;
}
void GetPlayerTokenRsp::set_allocated_stop_server(::proto::StopServerInfo* stop_server) {
  delete stop_server_;
  stop_server_ = stop_server;
  if (stop_server) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.stop_server)
}

// int32 retcode = 2;
void GetPlayerTokenRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerTokenRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.retcode)
  return retcode_;
}
void GetPlayerTokenRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.retcode)
}

// uint32 uid = 1;
void GetPlayerTokenRsp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.uid)
  return uid_;
}
void GetPlayerTokenRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.uid)
}

// bool is_proficient_player = 9;
void GetPlayerTokenRsp::clear_is_proficient_player() {
  is_proficient_player_ = false;
}
bool GetPlayerTokenRsp::is_proficient_player() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_proficient_player)
  return is_proficient_player_;
}
void GetPlayerTokenRsp::set_is_proficient_player(bool value) {
  
  is_proficient_player_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_proficient_player)
}

// uint32 reg_platform = 1112;
void GetPlayerTokenRsp::clear_reg_platform() {
  reg_platform_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::reg_platform() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.reg_platform)
  return reg_platform_;
}
void GetPlayerTokenRsp::set_reg_platform(::google::protobuf::uint32 value) {
  
  reg_platform_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.reg_platform)
}

// string server_rand_key = 1493;
void GetPlayerTokenRsp::clear_server_rand_key() {
  server_rand_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::server_rand_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.server_rand_key)
  return server_rand_key_.GetNoArena();
}
void GetPlayerTokenRsp::set_server_rand_key(const ::std::string& value) {
  
  server_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.server_rand_key)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_server_rand_key(::std::string&& value) {
  
  server_rand_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.server_rand_key)
}
#endif
void GetPlayerTokenRsp::set_server_rand_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.server_rand_key)
}
void GetPlayerTokenRsp::set_server_rand_key(const char* value, size_t size) {
  
  server_rand_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.server_rand_key)
}
::std::string* GetPlayerTokenRsp::mutable_server_rand_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.server_rand_key)
  return server_rand_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_server_rand_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.server_rand_key)
  
  return server_rand_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_server_rand_key(::std::string* server_rand_key) {
  if (server_rand_key != NULL) {
    
  } else {
    
  }
  server_rand_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_rand_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.server_rand_key)
}

// bytes extra_bin_data = 3;
void GetPlayerTokenRsp::clear_extra_bin_data() {
  extra_bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::extra_bin_data() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.extra_bin_data)
  return extra_bin_data_.GetNoArena();
}
void GetPlayerTokenRsp::set_extra_bin_data(const ::std::string& value) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.extra_bin_data)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_extra_bin_data(::std::string&& value) {
  
  extra_bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.extra_bin_data)
}
#endif
void GetPlayerTokenRsp::set_extra_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.extra_bin_data)
}
void GetPlayerTokenRsp::set_extra_bin_data(const void* value, size_t size) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.extra_bin_data)
}
::std::string* GetPlayerTokenRsp::mutable_extra_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.extra_bin_data)
  return extra_bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_extra_bin_data() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.extra_bin_data)
  
  return extra_bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_extra_bin_data(::std::string* extra_bin_data) {
  if (extra_bin_data != NULL) {
    
  } else {
    
  }
  extra_bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.extra_bin_data)
}

// string client_ip_str = 860;
void GetPlayerTokenRsp::clear_client_ip_str() {
  client_ip_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPlayerTokenRsp::client_ip_str() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.client_ip_str)
  return client_ip_str_.GetNoArena();
}
void GetPlayerTokenRsp::set_client_ip_str(const ::std::string& value) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.client_ip_str)
}
#if LANG_CXX11
void GetPlayerTokenRsp::set_client_ip_str(::std::string&& value) {
  
  client_ip_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.client_ip_str)
}
#endif
void GetPlayerTokenRsp::set_client_ip_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.client_ip_str)
}
void GetPlayerTokenRsp::set_client_ip_str(const char* value, size_t size) {
  
  client_ip_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.client_ip_str)
}
::std::string* GetPlayerTokenRsp::mutable_client_ip_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.client_ip_str)
  return client_ip_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPlayerTokenRsp::release_client_ip_str() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.client_ip_str)
  
  return client_ip_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPlayerTokenRsp::set_allocated_client_ip_str(::std::string* client_ip_str) {
  if (client_ip_str != NULL) {
    
  } else {
    
  }
  client_ip_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_ip_str);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.client_ip_str)
}

// uint32 gm_uid = 10;
void GetPlayerTokenRsp::clear_gm_uid() {
  gm_uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.gm_uid)
  return gm_uid_;
}
void GetPlayerTokenRsp::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.gm_uid)
}

// uint32 key_id = 1172;
void GetPlayerTokenRsp::clear_key_id() {
  key_id_ = 0u;
}
::google::protobuf::uint32 GetPlayerTokenRsp::key_id() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.key_id)
  return key_id_;
}
void GetPlayerTokenRsp::set_key_id(::google::protobuf::uint32 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.key_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackingIOInfo::kRydevicetypeFieldNumber;
const int TrackingIOInfo::kMacFieldNumber;
const int TrackingIOInfo::kDeviceidFieldNumber;
const int TrackingIOInfo::kClientTzFieldNumber;
const int TrackingIOInfo::kCurrentCaidFieldNumber;
const int TrackingIOInfo::kCachedCaidFieldNumber;
const int TrackingIOInfo::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackingIOInfo::TrackingIOInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TrackingIOInfo)
}
TrackingIOInfo::TrackingIOInfo(const TrackingIOInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appid().size() > 0) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  client_tz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_tz().size() > 0) {
    client_tz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_tz_);
  }
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  current_caid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_caid().size() > 0) {
    current_caid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_caid_);
  }
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  rydevicetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rydevicetype().size() > 0) {
    rydevicetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rydevicetype_);
  }
  cached_caid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cached_caid().size() > 0) {
    cached_caid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cached_caid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.TrackingIOInfo)
}

void TrackingIOInfo::SharedCtor() {
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_tz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_caid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rydevicetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cached_caid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TrackingIOInfo::~TrackingIOInfo() {
  // @@protoc_insertion_point(destructor:proto.TrackingIOInfo)
  SharedDtor();
}

void TrackingIOInfo::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_tz_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_caid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rydevicetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cached_caid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrackingIOInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackingIOInfo::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackingIOInfo& TrackingIOInfo::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrackingIOInfo* TrackingIOInfo::New(::google::protobuf::Arena* arena) const {
  TrackingIOInfo* n = new TrackingIOInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackingIOInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TrackingIOInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_tz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_caid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rydevicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cached_caid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TrackingIOInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TrackingIOInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appid().data(), static_cast<int>(this->appid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TrackingIOInfo.appid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_tz = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_tz()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_tz().data(), static_cast<int>(this->client_tz().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TrackingIOInfo.client_tz"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mac = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TrackingIOInfo.mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_caid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_caid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_caid().data(), static_cast<int>(this->current_caid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TrackingIOInfo.current_caid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TrackingIOInfo.deviceid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rydevicetype = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rydevicetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rydevicetype().data(), static_cast<int>(this->rydevicetype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TrackingIOInfo.rydevicetype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cached_caid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cached_caid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cached_caid().data(), static_cast<int>(this->cached_caid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TrackingIOInfo.cached_caid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TrackingIOInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TrackingIOInfo)
  return false;
#undef DO_
}

void TrackingIOInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TrackingIOInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appid = 1;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), static_cast<int>(this->appid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.appid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // string client_tz = 5;
  if (this->client_tz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_tz().data(), static_cast<int>(this->client_tz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.client_tz");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_tz(), output);
  }

  // string mac = 6;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mac(), output);
  }

  // string current_caid = 7;
  if (this->current_caid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_caid().data(), static_cast<int>(this->current_caid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.current_caid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->current_caid(), output);
  }

  // string deviceid = 9;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.deviceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->deviceid(), output);
  }

  // string rydevicetype = 11;
  if (this->rydevicetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rydevicetype().data(), static_cast<int>(this->rydevicetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.rydevicetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->rydevicetype(), output);
  }

  // string cached_caid = 15;
  if (this->cached_caid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cached_caid().data(), static_cast<int>(this->cached_caid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.cached_caid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->cached_caid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TrackingIOInfo)
}

::google::protobuf::uint8* TrackingIOInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TrackingIOInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appid = 1;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), static_cast<int>(this->appid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.appid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // string client_tz = 5;
  if (this->client_tz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_tz().data(), static_cast<int>(this->client_tz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.client_tz");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_tz(), target);
  }

  // string mac = 6;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mac(), target);
  }

  // string current_caid = 7;
  if (this->current_caid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_caid().data(), static_cast<int>(this->current_caid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.current_caid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->current_caid(), target);
  }

  // string deviceid = 9;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.deviceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->deviceid(), target);
  }

  // string rydevicetype = 11;
  if (this->rydevicetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rydevicetype().data(), static_cast<int>(this->rydevicetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.rydevicetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->rydevicetype(), target);
  }

  // string cached_caid = 15;
  if (this->cached_caid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cached_caid().data(), static_cast<int>(this->cached_caid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TrackingIOInfo.cached_caid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->cached_caid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TrackingIOInfo)
  return target;
}

size_t TrackingIOInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TrackingIOInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appid = 1;
  if (this->appid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  // string client_tz = 5;
  if (this->client_tz().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_tz());
  }

  // string mac = 6;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // string current_caid = 7;
  if (this->current_caid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_caid());
  }

  // string deviceid = 9;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string rydevicetype = 11;
  if (this->rydevicetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rydevicetype());
  }

  // string cached_caid = 15;
  if (this->cached_caid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cached_caid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackingIOInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TrackingIOInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackingIOInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackingIOInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TrackingIOInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TrackingIOInfo)
    MergeFrom(*source);
  }
}

void TrackingIOInfo::MergeFrom(const TrackingIOInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TrackingIOInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appid().size() > 0) {

    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.client_tz().size() > 0) {

    client_tz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_tz_);
  }
  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.current_caid().size() > 0) {

    current_caid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_caid_);
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.rydevicetype().size() > 0) {

    rydevicetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rydevicetype_);
  }
  if (from.cached_caid().size() > 0) {

    cached_caid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cached_caid_);
  }
}

void TrackingIOInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TrackingIOInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackingIOInfo::CopyFrom(const TrackingIOInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TrackingIOInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackingIOInfo::IsInitialized() const {
  return true;
}

void TrackingIOInfo::Swap(TrackingIOInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackingIOInfo::InternalSwap(TrackingIOInfo* other) {
  using std::swap;
  appid_.Swap(&other->appid_);
  client_tz_.Swap(&other->client_tz_);
  mac_.Swap(&other->mac_);
  current_caid_.Swap(&other->current_caid_);
  deviceid_.Swap(&other->deviceid_);
  rydevicetype_.Swap(&other->rydevicetype_);
  cached_caid_.Swap(&other->cached_caid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackingIOInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackingIOInfo

// string rydevicetype = 11;
void TrackingIOInfo::clear_rydevicetype() {
  rydevicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIOInfo::rydevicetype() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.rydevicetype)
  return rydevicetype_.GetNoArena();
}
void TrackingIOInfo::set_rydevicetype(const ::std::string& value) {
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.rydevicetype)
}
#if LANG_CXX11
void TrackingIOInfo::set_rydevicetype(::std::string&& value) {
  
  rydevicetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.rydevicetype)
}
#endif
void TrackingIOInfo::set_rydevicetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.rydevicetype)
}
void TrackingIOInfo::set_rydevicetype(const char* value, size_t size) {
  
  rydevicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.rydevicetype)
}
::std::string* TrackingIOInfo::mutable_rydevicetype() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.rydevicetype)
  return rydevicetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIOInfo::release_rydevicetype() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.rydevicetype)
  
  return rydevicetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIOInfo::set_allocated_rydevicetype(::std::string* rydevicetype) {
  if (rydevicetype != NULL) {
    
  } else {
    
  }
  rydevicetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rydevicetype);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.rydevicetype)
}

// string mac = 6;
void TrackingIOInfo::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIOInfo::mac() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.mac)
  return mac_.GetNoArena();
}
void TrackingIOInfo::set_mac(const ::std::string& value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.mac)
}
#if LANG_CXX11
void TrackingIOInfo::set_mac(::std::string&& value) {
  
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.mac)
}
#endif
void TrackingIOInfo::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.mac)
}
void TrackingIOInfo::set_mac(const char* value, size_t size) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.mac)
}
::std::string* TrackingIOInfo::mutable_mac() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIOInfo::release_mac() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.mac)
  
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIOInfo::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    
  } else {
    
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.mac)
}

// string deviceid = 9;
void TrackingIOInfo::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIOInfo::deviceid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.deviceid)
  return deviceid_.GetNoArena();
}
void TrackingIOInfo::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.deviceid)
}
#if LANG_CXX11
void TrackingIOInfo::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.deviceid)
}
#endif
void TrackingIOInfo::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.deviceid)
}
void TrackingIOInfo::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.deviceid)
}
::std::string* TrackingIOInfo::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIOInfo::release_deviceid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.deviceid)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIOInfo::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.deviceid)
}

// string client_tz = 5;
void TrackingIOInfo::clear_client_tz() {
  client_tz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIOInfo::client_tz() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.client_tz)
  return client_tz_.GetNoArena();
}
void TrackingIOInfo::set_client_tz(const ::std::string& value) {
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.client_tz)
}
#if LANG_CXX11
void TrackingIOInfo::set_client_tz(::std::string&& value) {
  
  client_tz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.client_tz)
}
#endif
void TrackingIOInfo::set_client_tz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.client_tz)
}
void TrackingIOInfo::set_client_tz(const char* value, size_t size) {
  
  client_tz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.client_tz)
}
::std::string* TrackingIOInfo::mutable_client_tz() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.client_tz)
  return client_tz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIOInfo::release_client_tz() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.client_tz)
  
  return client_tz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIOInfo::set_allocated_client_tz(::std::string* client_tz) {
  if (client_tz != NULL) {
    
  } else {
    
  }
  client_tz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_tz);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.client_tz)
}

// string current_caid = 7;
void TrackingIOInfo::clear_current_caid() {
  current_caid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIOInfo::current_caid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.current_caid)
  return current_caid_.GetNoArena();
}
void TrackingIOInfo::set_current_caid(const ::std::string& value) {
  
  current_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.current_caid)
}
#if LANG_CXX11
void TrackingIOInfo::set_current_caid(::std::string&& value) {
  
  current_caid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.current_caid)
}
#endif
void TrackingIOInfo::set_current_caid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  current_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.current_caid)
}
void TrackingIOInfo::set_current_caid(const char* value, size_t size) {
  
  current_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.current_caid)
}
::std::string* TrackingIOInfo::mutable_current_caid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.current_caid)
  return current_caid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIOInfo::release_current_caid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.current_caid)
  
  return current_caid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIOInfo::set_allocated_current_caid(::std::string* current_caid) {
  if (current_caid != NULL) {
    
  } else {
    
  }
  current_caid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), current_caid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.current_caid)
}

// string cached_caid = 15;
void TrackingIOInfo::clear_cached_caid() {
  cached_caid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIOInfo::cached_caid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.cached_caid)
  return cached_caid_.GetNoArena();
}
void TrackingIOInfo::set_cached_caid(const ::std::string& value) {
  
  cached_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.cached_caid)
}
#if LANG_CXX11
void TrackingIOInfo::set_cached_caid(::std::string&& value) {
  
  cached_caid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.cached_caid)
}
#endif
void TrackingIOInfo::set_cached_caid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cached_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.cached_caid)
}
void TrackingIOInfo::set_cached_caid(const char* value, size_t size) {
  
  cached_caid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.cached_caid)
}
::std::string* TrackingIOInfo::mutable_cached_caid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.cached_caid)
  return cached_caid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIOInfo::release_cached_caid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.cached_caid)
  
  return cached_caid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIOInfo::set_allocated_cached_caid(::std::string* cached_caid) {
  if (cached_caid != NULL) {
    
  } else {
    
  }
  cached_caid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cached_caid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.cached_caid)
}

// string appid = 1;
void TrackingIOInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIOInfo::appid() const {
  // @@protoc_insertion_point(field_get:proto.TrackingIOInfo.appid)
  return appid_.GetNoArena();
}
void TrackingIOInfo::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TrackingIOInfo.appid)
}
#if LANG_CXX11
void TrackingIOInfo::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TrackingIOInfo.appid)
}
#endif
void TrackingIOInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TrackingIOInfo.appid)
}
void TrackingIOInfo::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TrackingIOInfo.appid)
}
::std::string* TrackingIOInfo::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:proto.TrackingIOInfo.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIOInfo::release_appid() {
  // @@protoc_insertion_point(field_release:proto.TrackingIOInfo.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIOInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:proto.TrackingIOInfo.appid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdjustTrackingInfo::kEventTokenFieldNumber;
const int AdjustTrackingInfo::kAdidFieldNumber;
const int AdjustTrackingInfo::kIdfaFieldNumber;
const int AdjustTrackingInfo::kAppTokenFieldNumber;
const int AdjustTrackingInfo::kGpsAdidFieldNumber;
const int AdjustTrackingInfo::kFireAdidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdjustTrackingInfo::AdjustTrackingInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AdjustTrackingInfo)
}
AdjustTrackingInfo::AdjustTrackingInfo(const AdjustTrackingInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.idfa().size() > 0) {
    idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
  }
  gps_adid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gps_adid().size() > 0) {
    gps_adid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_adid_);
  }
  adid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.adid().size() > 0) {
    adid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adid_);
  }
  event_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_token().size() > 0) {
    event_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_token_);
  }
  fire_adid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fire_adid().size() > 0) {
    fire_adid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fire_adid_);
  }
  app_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_token().size() > 0) {
    app_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_token_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.AdjustTrackingInfo)
}

void AdjustTrackingInfo::SharedCtor() {
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_adid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fire_adid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AdjustTrackingInfo::~AdjustTrackingInfo() {
  // @@protoc_insertion_point(destructor:proto.AdjustTrackingInfo)
  SharedDtor();
}

void AdjustTrackingInfo::SharedDtor() {
  idfa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_adid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fire_adid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdjustTrackingInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdjustTrackingInfo::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdjustTrackingInfo& AdjustTrackingInfo::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdjustTrackingInfo* AdjustTrackingInfo::New(::google::protobuf::Arena* arena) const {
  AdjustTrackingInfo* n = new AdjustTrackingInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdjustTrackingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AdjustTrackingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fire_adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AdjustTrackingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AdjustTrackingInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string idfa = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idfa()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->idfa().data(), static_cast<int>(this->idfa().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AdjustTrackingInfo.idfa"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gps_adid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gps_adid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gps_adid().data(), static_cast<int>(this->gps_adid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AdjustTrackingInfo.gps_adid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string adid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->adid().data(), static_cast<int>(this->adid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AdjustTrackingInfo.adid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string event_token = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_token().data(), static_cast<int>(this->event_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AdjustTrackingInfo.event_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fire_adid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fire_adid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fire_adid().data(), static_cast<int>(this->fire_adid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AdjustTrackingInfo.fire_adid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_token = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_token().data(), static_cast<int>(this->app_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AdjustTrackingInfo.app_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AdjustTrackingInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AdjustTrackingInfo)
  return false;
#undef DO_
}

void AdjustTrackingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AdjustTrackingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string idfa = 2;
  if (this->idfa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idfa().data(), static_cast<int>(this->idfa().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.idfa");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->idfa(), output);
  }

  // string gps_adid = 3;
  if (this->gps_adid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gps_adid().data(), static_cast<int>(this->gps_adid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.gps_adid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gps_adid(), output);
  }

  // string adid = 4;
  if (this->adid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->adid().data(), static_cast<int>(this->adid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.adid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->adid(), output);
  }

  // string event_token = 9;
  if (this->event_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_token().data(), static_cast<int>(this->event_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.event_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->event_token(), output);
  }

  // string fire_adid = 13;
  if (this->fire_adid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fire_adid().data(), static_cast<int>(this->fire_adid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.fire_adid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->fire_adid(), output);
  }

  // string app_token = 14;
  if (this->app_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_token().data(), static_cast<int>(this->app_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.app_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->app_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AdjustTrackingInfo)
}

::google::protobuf::uint8* AdjustTrackingInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AdjustTrackingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string idfa = 2;
  if (this->idfa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idfa().data(), static_cast<int>(this->idfa().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.idfa");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->idfa(), target);
  }

  // string gps_adid = 3;
  if (this->gps_adid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gps_adid().data(), static_cast<int>(this->gps_adid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.gps_adid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gps_adid(), target);
  }

  // string adid = 4;
  if (this->adid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->adid().data(), static_cast<int>(this->adid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.adid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->adid(), target);
  }

  // string event_token = 9;
  if (this->event_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_token().data(), static_cast<int>(this->event_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.event_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->event_token(), target);
  }

  // string fire_adid = 13;
  if (this->fire_adid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fire_adid().data(), static_cast<int>(this->fire_adid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.fire_adid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->fire_adid(), target);
  }

  // string app_token = 14;
  if (this->app_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_token().data(), static_cast<int>(this->app_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AdjustTrackingInfo.app_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->app_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AdjustTrackingInfo)
  return target;
}

size_t AdjustTrackingInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AdjustTrackingInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string idfa = 2;
  if (this->idfa().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->idfa());
  }

  // string gps_adid = 3;
  if (this->gps_adid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gps_adid());
  }

  // string adid = 4;
  if (this->adid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->adid());
  }

  // string event_token = 9;
  if (this->event_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_token());
  }

  // string fire_adid = 13;
  if (this->fire_adid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fire_adid());
  }

  // string app_token = 14;
  if (this->app_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdjustTrackingInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AdjustTrackingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AdjustTrackingInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdjustTrackingInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AdjustTrackingInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AdjustTrackingInfo)
    MergeFrom(*source);
  }
}

void AdjustTrackingInfo::MergeFrom(const AdjustTrackingInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AdjustTrackingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.idfa().size() > 0) {

    idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
  }
  if (from.gps_adid().size() > 0) {

    gps_adid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_adid_);
  }
  if (from.adid().size() > 0) {

    adid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.adid_);
  }
  if (from.event_token().size() > 0) {

    event_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_token_);
  }
  if (from.fire_adid().size() > 0) {

    fire_adid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fire_adid_);
  }
  if (from.app_token().size() > 0) {

    app_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_token_);
  }
}

void AdjustTrackingInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AdjustTrackingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdjustTrackingInfo::CopyFrom(const AdjustTrackingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AdjustTrackingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdjustTrackingInfo::IsInitialized() const {
  return true;
}

void AdjustTrackingInfo::Swap(AdjustTrackingInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdjustTrackingInfo::InternalSwap(AdjustTrackingInfo* other) {
  using std::swap;
  idfa_.Swap(&other->idfa_);
  gps_adid_.Swap(&other->gps_adid_);
  adid_.Swap(&other->adid_);
  event_token_.Swap(&other->event_token_);
  fire_adid_.Swap(&other->fire_adid_);
  app_token_.Swap(&other->app_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdjustTrackingInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdjustTrackingInfo

// string event_token = 9;
void AdjustTrackingInfo::clear_event_token() {
  event_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdjustTrackingInfo::event_token() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.event_token)
  return event_token_.GetNoArena();
}
void AdjustTrackingInfo::set_event_token(const ::std::string& value) {
  
  event_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.event_token)
}
#if LANG_CXX11
void AdjustTrackingInfo::set_event_token(::std::string&& value) {
  
  event_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.event_token)
}
#endif
void AdjustTrackingInfo::set_event_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.event_token)
}
void AdjustTrackingInfo::set_event_token(const char* value, size_t size) {
  
  event_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.event_token)
}
::std::string* AdjustTrackingInfo::mutable_event_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.event_token)
  return event_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdjustTrackingInfo::release_event_token() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.event_token)
  
  return event_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdjustTrackingInfo::set_allocated_event_token(::std::string* event_token) {
  if (event_token != NULL) {
    
  } else {
    
  }
  event_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_token);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.event_token)
}

// string adid = 4;
void AdjustTrackingInfo::clear_adid() {
  adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdjustTrackingInfo::adid() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.adid)
  return adid_.GetNoArena();
}
void AdjustTrackingInfo::set_adid(const ::std::string& value) {
  
  adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.adid)
}
#if LANG_CXX11
void AdjustTrackingInfo::set_adid(::std::string&& value) {
  
  adid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.adid)
}
#endif
void AdjustTrackingInfo::set_adid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.adid)
}
void AdjustTrackingInfo::set_adid(const char* value, size_t size) {
  
  adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.adid)
}
::std::string* AdjustTrackingInfo::mutable_adid() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.adid)
  return adid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdjustTrackingInfo::release_adid() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.adid)
  
  return adid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdjustTrackingInfo::set_allocated_adid(::std::string* adid) {
  if (adid != NULL) {
    
  } else {
    
  }
  adid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adid);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.adid)
}

// string idfa = 2;
void AdjustTrackingInfo::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdjustTrackingInfo::idfa() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.idfa)
  return idfa_.GetNoArena();
}
void AdjustTrackingInfo::set_idfa(const ::std::string& value) {
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.idfa)
}
#if LANG_CXX11
void AdjustTrackingInfo::set_idfa(::std::string&& value) {
  
  idfa_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.idfa)
}
#endif
void AdjustTrackingInfo::set_idfa(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.idfa)
}
void AdjustTrackingInfo::set_idfa(const char* value, size_t size) {
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.idfa)
}
::std::string* AdjustTrackingInfo::mutable_idfa() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdjustTrackingInfo::release_idfa() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.idfa)
  
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdjustTrackingInfo::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    
  } else {
    
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.idfa)
}

// string app_token = 14;
void AdjustTrackingInfo::clear_app_token() {
  app_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdjustTrackingInfo::app_token() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.app_token)
  return app_token_.GetNoArena();
}
void AdjustTrackingInfo::set_app_token(const ::std::string& value) {
  
  app_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.app_token)
}
#if LANG_CXX11
void AdjustTrackingInfo::set_app_token(::std::string&& value) {
  
  app_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.app_token)
}
#endif
void AdjustTrackingInfo::set_app_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.app_token)
}
void AdjustTrackingInfo::set_app_token(const char* value, size_t size) {
  
  app_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.app_token)
}
::std::string* AdjustTrackingInfo::mutable_app_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.app_token)
  return app_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdjustTrackingInfo::release_app_token() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.app_token)
  
  return app_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdjustTrackingInfo::set_allocated_app_token(::std::string* app_token) {
  if (app_token != NULL) {
    
  } else {
    
  }
  app_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_token);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.app_token)
}

// string gps_adid = 3;
void AdjustTrackingInfo::clear_gps_adid() {
  gps_adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdjustTrackingInfo::gps_adid() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.gps_adid)
  return gps_adid_.GetNoArena();
}
void AdjustTrackingInfo::set_gps_adid(const ::std::string& value) {
  
  gps_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.gps_adid)
}
#if LANG_CXX11
void AdjustTrackingInfo::set_gps_adid(::std::string&& value) {
  
  gps_adid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.gps_adid)
}
#endif
void AdjustTrackingInfo::set_gps_adid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gps_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.gps_adid)
}
void AdjustTrackingInfo::set_gps_adid(const char* value, size_t size) {
  
  gps_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.gps_adid)
}
::std::string* AdjustTrackingInfo::mutable_gps_adid() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.gps_adid)
  return gps_adid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdjustTrackingInfo::release_gps_adid() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.gps_adid)
  
  return gps_adid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdjustTrackingInfo::set_allocated_gps_adid(::std::string* gps_adid) {
  if (gps_adid != NULL) {
    
  } else {
    
  }
  gps_adid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gps_adid);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.gps_adid)
}

// string fire_adid = 13;
void AdjustTrackingInfo::clear_fire_adid() {
  fire_adid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdjustTrackingInfo::fire_adid() const {
  // @@protoc_insertion_point(field_get:proto.AdjustTrackingInfo.fire_adid)
  return fire_adid_.GetNoArena();
}
void AdjustTrackingInfo::set_fire_adid(const ::std::string& value) {
  
  fire_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AdjustTrackingInfo.fire_adid)
}
#if LANG_CXX11
void AdjustTrackingInfo::set_fire_adid(::std::string&& value) {
  
  fire_adid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AdjustTrackingInfo.fire_adid)
}
#endif
void AdjustTrackingInfo::set_fire_adid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fire_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AdjustTrackingInfo.fire_adid)
}
void AdjustTrackingInfo::set_fire_adid(const char* value, size_t size) {
  
  fire_adid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AdjustTrackingInfo.fire_adid)
}
::std::string* AdjustTrackingInfo::mutable_fire_adid() {
  
  // @@protoc_insertion_point(field_mutable:proto.AdjustTrackingInfo.fire_adid)
  return fire_adid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdjustTrackingInfo::release_fire_adid() {
  // @@protoc_insertion_point(field_release:proto.AdjustTrackingInfo.fire_adid)
  
  return fire_adid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdjustTrackingInfo::set_allocated_fire_adid(::std::string* fire_adid) {
  if (fire_adid != NULL) {
    
  } else {
    
  }
  fire_adid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fire_adid);
  // @@protoc_insertion_point(field_set_allocated:proto.AdjustTrackingInfo.fire_adid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginReq::kLanguageTypeFieldNumber;
const int PlayerLoginReq::kRegPlatformFieldNumber;
const int PlayerLoginReq::kTrackingIoInfoFieldNumber;
const int PlayerLoginReq::kAccountTypeFieldNumber;
const int PlayerLoginReq::kTokenFieldNumber;
const int PlayerLoginReq::kExtraBinDataFieldNumber;
const int PlayerLoginReq::kChannelIdFieldNumber;
const int PlayerLoginReq::kClientDataVersionFieldNumber;
const int PlayerLoginReq::kAccountUidFieldNumber;
const int PlayerLoginReq::kClientVersionFieldNumber;
const int PlayerLoginReq::kSecurityLibraryMd5FieldNumber;
const int PlayerLoginReq::kCountryCodeFieldNumber;
const int PlayerLoginReq::kPsnIdFieldNumber;
const int PlayerLoginReq::kClientPortFieldNumber;
const int PlayerLoginReq::kDeviceNameFieldNumber;
const int PlayerLoginReq::kCpsFieldNumber;
const int PlayerLoginReq::kLoginRandFieldNumber;
const int PlayerLoginReq::kTargetHomeParamFieldNumber;
const int PlayerLoginReq::kAdjustTrackingInfoFieldNumber;
const int PlayerLoginReq::kIsTransferFieldNumber;
const int PlayerLoginReq::kTagFieldNumber;
const int PlayerLoginReq::kIsGuestFieldNumber;
const int PlayerLoginReq::kEnvironmentErrorCodeFieldNumber;
const int PlayerLoginReq::kOnlineIdFieldNumber;
const int PlayerLoginReq::kIsEditorFieldNumber;
const int PlayerLoginReq::kChecksumClientVersionFieldNumber;
const int PlayerLoginReq::kSecurityCmdReplyFieldNumber;
const int PlayerLoginReq::kSecurityLibraryVersionFieldNumber;
const int PlayerLoginReq::kBirthdayFieldNumber;
const int PlayerLoginReq::kDeviceUuidFieldNumber;
const int PlayerLoginReq::kClientTokenFieldNumber;
const int PlayerLoginReq::kSubChannelIdFieldNumber;
const int PlayerLoginReq::kTargetUidFieldNumber;
const int PlayerLoginReq::kDeviceInfoFieldNumber;
const int PlayerLoginReq::kClientVerisonHashFieldNumber;
const int PlayerLoginReq::kChecksumFieldNumber;
const int PlayerLoginReq::kPlatformTypeFieldNumber;
const int PlayerLoginReq::kTargetHomeOwnerUidFieldNumber;
const int PlayerLoginReq::kCloudClientIpFieldNumber;
const int PlayerLoginReq::kGmUidFieldNumber;
const int PlayerLoginReq::kSystemVersionFieldNumber;
const int PlayerLoginReq::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginReq::PlayerLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLoginReq)
}
PlayerLoginReq::PlayerLoginReq(const PlayerLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_info().size() > 0) {
    device_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_info_);
  }
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_uid().size() > 0) {
    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  device_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_uuid().size() > 0) {
    device_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_uuid_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_name().size() > 0) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version().size() > 0) {
    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_version().size() > 0) {
    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  security_library_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_library_md5().size() > 0) {
    security_library_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_library_md5_);
  }
  checksum_client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum_client_version().size() > 0) {
    checksum_client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_client_version_);
  }
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  cps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cps().size() > 0) {
    cps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cps_);
  }
  security_library_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_library_version().size() > 0) {
    security_library_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_library_version_);
  }
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.psn_id().size() > 0) {
    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  extra_bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra_bin_data().size() > 0) {
    extra_bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_bin_data_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthday().size() > 0) {
    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  client_verison_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_verison_hash().size() > 0) {
    client_verison_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_verison_hash_);
  }
  security_cmd_reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_cmd_reply().size() > 0) {
    security_cmd_reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_cmd_reply_);
  }
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country_code().size() > 0) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  environment_error_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.environment_error_code().size() > 0) {
    environment_error_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.environment_error_code_);
  }
  if (from.has_tracking_io_info()) {
    tracking_io_info_ = new ::proto::TrackingIOInfo(*from.tracking_io_info_);
  } else {
    tracking_io_info_ = NULL;
  }
  if (from.has_adjust_tracking_info()) {
    adjust_tracking_info_ = new ::proto::AdjustTrackingInfo(*from.adjust_tracking_info_);
  } else {
    adjust_tracking_info_ = NULL;
  }
  ::memcpy(&login_rand_, &from.login_rand_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_home_owner_uid_) -
    reinterpret_cast<char*>(&login_rand_)) + sizeof(target_home_owner_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLoginReq)
}

void PlayerLoginReq::SharedCtor() {
  device_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_library_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_library_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_verison_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_cmd_reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  environment_error_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tracking_io_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_home_owner_uid_) -
      reinterpret_cast<char*>(&tracking_io_info_)) + sizeof(target_home_owner_uid_));
  _cached_size_ = 0;
}

PlayerLoginReq::~PlayerLoginReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerLoginReq)
  SharedDtor();
}

void PlayerLoginReq::SharedDtor() {
  device_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_library_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cps_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_library_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_bin_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_verison_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_cmd_reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  environment_error_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tracking_io_info_;
  if (this != internal_default_instance()) delete adjust_tracking_info_;
}

void PlayerLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginReq& PlayerLoginReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLoginReq* PlayerLoginReq::New(::google::protobuf::Arena* arena) const {
  PlayerLoginReq* n = new PlayerLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_library_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_library_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_verison_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_cmd_reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  environment_error_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && tracking_io_info_ != NULL) {
    delete tracking_io_info_;
  }
  tracking_io_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && adjust_tracking_info_ != NULL) {
    delete adjust_tracking_info_;
  }
  adjust_tracking_info_ = NULL;
  ::memset(&login_rand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_home_owner_uid_) -
      reinterpret_cast<char*>(&login_rand_)) + sizeof(target_home_owner_uid_));
  _internal_metadata_.Clear();
}

bool PlayerLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string device_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_info().data(), static_cast<int>(this->device_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.device_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_uid().data(), static_cast<int>(this->account_uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.account_uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 login_rand = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &login_rand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_uuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.device_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_guest = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 language_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_editor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_editor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string system_version = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system_version().data(), static_cast<int>(this->system_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.system_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_version = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version().data(), static_cast<int>(this->client_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.client_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 account_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sub_channel_id = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_port = 431;
      case 431: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 3448 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gm_uid = 612;
      case 612: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 4896 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reg_platform = 615;
      case 615: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 4920 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reg_platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_data_version = 688;
      case 688: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 5504 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string security_library_md5 = 772;
      case 772: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 6178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_security_library_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->security_library_md5().data(), static_cast<int>(this->security_library_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.security_library_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checksum_client_version = 861;
      case 861: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 6890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checksum_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checksum_client_version().data(), static_cast<int>(this->checksum_client_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.checksum_client_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 903;
      case 903: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 7226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_transfer = 908;
      case 908: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 7264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_home_param = 984;
      case 984: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 7872 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_home_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cps = 1163;
      case 1163: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 9306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cps().data(), static_cast<int>(this->cps().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.cps"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string security_library_version = 1213;
      case 1213: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 9706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_security_library_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->security_library_version().data(), static_cast<int>(this->security_library_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.security_library_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string psn_id = 1268;
      case 1268: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 10146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psn_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id().data(), static_cast<int>(this->psn_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.psn_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel_id = 1314;
      case 1314: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 10512 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cloud_client_ip = 1335;
      case 1335: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 10680 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cloud_client_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes extra_bin_data = 1458;
      case 1458: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 11666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra_bin_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checksum = 1532;
      case 1532: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 12258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checksum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checksum().data(), static_cast<int>(this->checksum().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.checksum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_token = 1546;
      case 1546: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 12368 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthday = 1652;
      case 1652: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 13218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), static_cast<int>(this->birthday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.birthday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TrackingIOInfo tracking_io_info = 1660;
      case 1660: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 13282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tracking_io_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_verison_hash = 1707;
      case 1707: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 13658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_verison_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_verison_hash().data(), static_cast<int>(this->client_verison_hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.client_verison_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tag = 1787;
      case 1787: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 14296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AdjustTrackingInfo adjust_tracking_info = 1816;
      case 1816: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 14530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adjust_tracking_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_home_owner_uid = 1864;
      case 1864: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 14912 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_home_owner_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes security_cmd_reply = 1995;
      case 1995: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 15962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_security_cmd_reply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country_code = 2000;
      case 2000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 16002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginReq.country_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes environment_error_code = 2026;
      case 2026: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 16210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_environment_error_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLoginReq)
  return false;
#undef DO_
}

void PlayerLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_info = 1;
  if (this->device_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_info().data(), static_cast<int>(this->device_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_info(), output);
  }

  // string account_uid = 2;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.account_uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_uid(), output);
  }

  // uint64 login_rand = 3;
  if (this->login_rand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->login_rand(), output);
  }

  // string device_uuid = 4;
  if (this->device_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_uuid(), output);
  }

  // bool is_guest = 5;
  if (this->is_guest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_guest(), output);
  }

  // uint32 language_type = 6;
  if (this->language_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->language_type(), output);
  }

  // string platform = 7;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->platform(), output);
  }

  // bool is_editor = 8;
  if (this->is_editor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_editor(), output);
  }

  // string device_name = 9;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->device_name(), output);
  }

  // string system_version = 10;
  if (this->system_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version().data(), static_cast<int>(this->system_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.system_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->system_version(), output);
  }

  // uint32 target_uid = 11;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->target_uid(), output);
  }

  // string client_version = 12;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), static_cast<int>(this->client_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->client_version(), output);
  }

  // uint32 account_type = 13;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->account_type(), output);
  }

  // uint32 platform_type = 14;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->platform_type(), output);
  }

  // string token = 15;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->token(), output);
  }

  // uint32 sub_channel_id = 23;
  if (this->sub_channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->sub_channel_id(), output);
  }

  // uint32 client_port = 431;
  if (this->client_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(431, this->client_port(), output);
  }

  // uint32 gm_uid = 612;
  if (this->gm_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(612, this->gm_uid(), output);
  }

  // uint32 reg_platform = 615;
  if (this->reg_platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(615, this->reg_platform(), output);
  }

  // uint32 client_data_version = 688;
  if (this->client_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(688, this->client_data_version(), output);
  }

  // string security_library_md5 = 772;
  if (this->security_library_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->security_library_md5().data(), static_cast<int>(this->security_library_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.security_library_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      772, this->security_library_md5(), output);
  }

  // string checksum_client_version = 861;
  if (this->checksum_client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum_client_version().data(), static_cast<int>(this->checksum_client_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.checksum_client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      861, this->checksum_client_version(), output);
  }

  // string online_id = 903;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      903, this->online_id(), output);
  }

  // bool is_transfer = 908;
  if (this->is_transfer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(908, this->is_transfer(), output);
  }

  // uint32 target_home_param = 984;
  if (this->target_home_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(984, this->target_home_param(), output);
  }

  // string cps = 1163;
  if (this->cps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cps().data(), static_cast<int>(this->cps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.cps");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1163, this->cps(), output);
  }

  // string security_library_version = 1213;
  if (this->security_library_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->security_library_version().data(), static_cast<int>(this->security_library_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.security_library_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1213, this->security_library_version(), output);
  }

  // string psn_id = 1268;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.psn_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1268, this->psn_id(), output);
  }

  // uint32 channel_id = 1314;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1314, this->channel_id(), output);
  }

  // uint32 cloud_client_ip = 1335;
  if (this->cloud_client_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1335, this->cloud_client_ip(), output);
  }

  // bytes extra_bin_data = 1458;
  if (this->extra_bin_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1458, this->extra_bin_data(), output);
  }

  // string checksum = 1532;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.checksum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1532, this->checksum(), output);
  }

  // uint32 client_token = 1546;
  if (this->client_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1546, this->client_token(), output);
  }

  // string birthday = 1652;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1652, this->birthday(), output);
  }

  // .proto.TrackingIOInfo tracking_io_info = 1660;
  if (this->has_tracking_io_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1660, *this->tracking_io_info_, output);
  }

  // string client_verison_hash = 1707;
  if (this->client_verison_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_verison_hash().data(), static_cast<int>(this->client_verison_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.client_verison_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1707, this->client_verison_hash(), output);
  }

  // uint32 tag = 1787;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1787, this->tag(), output);
  }

  // .proto.AdjustTrackingInfo adjust_tracking_info = 1816;
  if (this->has_adjust_tracking_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1816, *this->adjust_tracking_info_, output);
  }

  // uint32 target_home_owner_uid = 1864;
  if (this->target_home_owner_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1864, this->target_home_owner_uid(), output);
  }

  // bytes security_cmd_reply = 1995;
  if (this->security_cmd_reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1995, this->security_cmd_reply(), output);
  }

  // string country_code = 2000;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2000, this->country_code(), output);
  }

  // bytes environment_error_code = 2026;
  if (this->environment_error_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2026, this->environment_error_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLoginReq)
}

::google::protobuf::uint8* PlayerLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_info = 1;
  if (this->device_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_info().data(), static_cast<int>(this->device_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_info(), target);
  }

  // string account_uid = 2;
  if (this->account_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_uid().data(), static_cast<int>(this->account_uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.account_uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_uid(), target);
  }

  // uint64 login_rand = 3;
  if (this->login_rand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->login_rand(), target);
  }

  // string device_uuid = 4;
  if (this->device_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_uuid().data(), static_cast<int>(this->device_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_uuid(), target);
  }

  // bool is_guest = 5;
  if (this->is_guest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_guest(), target);
  }

  // uint32 language_type = 6;
  if (this->language_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->language_type(), target);
  }

  // string platform = 7;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->platform(), target);
  }

  // bool is_editor = 8;
  if (this->is_editor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_editor(), target);
  }

  // string device_name = 9;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->device_name(), target);
  }

  // string system_version = 10;
  if (this->system_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version().data(), static_cast<int>(this->system_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.system_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->system_version(), target);
  }

  // uint32 target_uid = 11;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->target_uid(), target);
  }

  // string client_version = 12;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), static_cast<int>(this->client_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->client_version(), target);
  }

  // uint32 account_type = 13;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->account_type(), target);
  }

  // uint32 platform_type = 14;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->platform_type(), target);
  }

  // string token = 15;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->token(), target);
  }

  // uint32 sub_channel_id = 23;
  if (this->sub_channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->sub_channel_id(), target);
  }

  // uint32 client_port = 431;
  if (this->client_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(431, this->client_port(), target);
  }

  // uint32 gm_uid = 612;
  if (this->gm_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(612, this->gm_uid(), target);
  }

  // uint32 reg_platform = 615;
  if (this->reg_platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(615, this->reg_platform(), target);
  }

  // uint32 client_data_version = 688;
  if (this->client_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(688, this->client_data_version(), target);
  }

  // string security_library_md5 = 772;
  if (this->security_library_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->security_library_md5().data(), static_cast<int>(this->security_library_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.security_library_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        772, this->security_library_md5(), target);
  }

  // string checksum_client_version = 861;
  if (this->checksum_client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum_client_version().data(), static_cast<int>(this->checksum_client_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.checksum_client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        861, this->checksum_client_version(), target);
  }

  // string online_id = 903;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        903, this->online_id(), target);
  }

  // bool is_transfer = 908;
  if (this->is_transfer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(908, this->is_transfer(), target);
  }

  // uint32 target_home_param = 984;
  if (this->target_home_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(984, this->target_home_param(), target);
  }

  // string cps = 1163;
  if (this->cps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cps().data(), static_cast<int>(this->cps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.cps");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1163, this->cps(), target);
  }

  // string security_library_version = 1213;
  if (this->security_library_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->security_library_version().data(), static_cast<int>(this->security_library_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.security_library_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1213, this->security_library_version(), target);
  }

  // string psn_id = 1268;
  if (this->psn_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id().data(), static_cast<int>(this->psn_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.psn_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1268, this->psn_id(), target);
  }

  // uint32 channel_id = 1314;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1314, this->channel_id(), target);
  }

  // uint32 cloud_client_ip = 1335;
  if (this->cloud_client_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1335, this->cloud_client_ip(), target);
  }

  // bytes extra_bin_data = 1458;
  if (this->extra_bin_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1458, this->extra_bin_data(), target);
  }

  // string checksum = 1532;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.checksum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1532, this->checksum(), target);
  }

  // uint32 client_token = 1546;
  if (this->client_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1546, this->client_token(), target);
  }

  // string birthday = 1652;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1652, this->birthday(), target);
  }

  // .proto.TrackingIOInfo tracking_io_info = 1660;
  if (this->has_tracking_io_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1660, *this->tracking_io_info_, deterministic, target);
  }

  // string client_verison_hash = 1707;
  if (this->client_verison_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_verison_hash().data(), static_cast<int>(this->client_verison_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.client_verison_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1707, this->client_verison_hash(), target);
  }

  // uint32 tag = 1787;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1787, this->tag(), target);
  }

  // .proto.AdjustTrackingInfo adjust_tracking_info = 1816;
  if (this->has_adjust_tracking_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1816, *this->adjust_tracking_info_, deterministic, target);
  }

  // uint32 target_home_owner_uid = 1864;
  if (this->target_home_owner_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1864, this->target_home_owner_uid(), target);
  }

  // bytes security_cmd_reply = 1995;
  if (this->security_cmd_reply().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1995, this->security_cmd_reply(), target);
  }

  // string country_code = 2000;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginReq.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2000, this->country_code(), target);
  }

  // bytes environment_error_code = 2026;
  if (this->environment_error_code().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2026, this->environment_error_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLoginReq)
  return target;
}

size_t PlayerLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string device_info = 1;
  if (this->device_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_info());
  }

  // string account_uid = 2;
  if (this->account_uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_uid());
  }

  // string device_uuid = 4;
  if (this->device_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_uuid());
  }

  // string platform = 7;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // string device_name = 9;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // string system_version = 10;
  if (this->system_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system_version());
  }

  // string client_version = 12;
  if (this->client_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  // string token = 15;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string security_library_md5 = 772;
  if (this->security_library_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->security_library_md5());
  }

  // string checksum_client_version = 861;
  if (this->checksum_client_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checksum_client_version());
  }

  // string online_id = 903;
  if (this->online_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // string cps = 1163;
  if (this->cps().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cps());
  }

  // string security_library_version = 1213;
  if (this->security_library_version().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->security_library_version());
  }

  // string psn_id = 1268;
  if (this->psn_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->psn_id());
  }

  // bytes extra_bin_data = 1458;
  if (this->extra_bin_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra_bin_data());
  }

  // string checksum = 1532;
  if (this->checksum().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checksum());
  }

  // string birthday = 1652;
  if (this->birthday().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // string client_verison_hash = 1707;
  if (this->client_verison_hash().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_verison_hash());
  }

  // bytes security_cmd_reply = 1995;
  if (this->security_cmd_reply().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->security_cmd_reply());
  }

  // string country_code = 2000;
  if (this->country_code().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country_code());
  }

  // bytes environment_error_code = 2026;
  if (this->environment_error_code().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->environment_error_code());
  }

  // .proto.TrackingIOInfo tracking_io_info = 1660;
  if (this->has_tracking_io_info()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tracking_io_info_);
  }

  // .proto.AdjustTrackingInfo adjust_tracking_info = 1816;
  if (this->has_adjust_tracking_info()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->adjust_tracking_info_);
  }

  // uint64 login_rand = 3;
  if (this->login_rand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->login_rand());
  }

  // uint32 language_type = 6;
  if (this->language_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->language_type());
  }

  // uint32 target_uid = 11;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 account_type = 13;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // uint32 platform_type = 14;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform_type());
  }

  // uint32 sub_channel_id = 23;
  if (this->sub_channel_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sub_channel_id());
  }

  // bool is_transfer = 908;
  if (this->is_transfer() != 0) {
    total_size += 2 + 1;
  }

  // bool is_guest = 5;
  if (this->is_guest() != 0) {
    total_size += 1 + 1;
  }

  // bool is_editor = 8;
  if (this->is_editor() != 0) {
    total_size += 1 + 1;
  }

  // uint32 client_port = 431;
  if (this->client_port() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_port());
  }

  // uint32 gm_uid = 612;
  if (this->gm_uid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm_uid());
  }

  // uint32 reg_platform = 615;
  if (this->reg_platform() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reg_platform());
  }

  // uint32 client_data_version = 688;
  if (this->client_data_version() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_data_version());
  }

  // uint32 target_home_param = 984;
  if (this->target_home_param() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_home_param());
  }

  // uint32 channel_id = 1314;
  if (this->channel_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  // uint32 cloud_client_ip = 1335;
  if (this->cloud_client_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cloud_client_ip());
  }

  // uint32 client_token = 1546;
  if (this->client_token() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_token());
  }

  // uint32 tag = 1787;
  if (this->tag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tag());
  }

  // uint32 target_home_owner_uid = 1864;
  if (this->target_home_owner_uid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_home_owner_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLoginReq)
    MergeFrom(*source);
  }
}

void PlayerLoginReq::MergeFrom(const PlayerLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_info().size() > 0) {

    device_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_info_);
  }
  if (from.account_uid().size() > 0) {

    account_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_uid_);
  }
  if (from.device_uuid().size() > 0) {

    device_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_uuid_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.system_version().size() > 0) {

    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  if (from.client_version().size() > 0) {

    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.security_library_md5().size() > 0) {

    security_library_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_library_md5_);
  }
  if (from.checksum_client_version().size() > 0) {

    checksum_client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_client_version_);
  }
  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.cps().size() > 0) {

    cps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cps_);
  }
  if (from.security_library_version().size() > 0) {

    security_library_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_library_version_);
  }
  if (from.psn_id().size() > 0) {

    psn_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psn_id_);
  }
  if (from.extra_bin_data().size() > 0) {

    extra_bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_bin_data_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.client_verison_hash().size() > 0) {

    client_verison_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_verison_hash_);
  }
  if (from.security_cmd_reply().size() > 0) {

    security_cmd_reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_cmd_reply_);
  }
  if (from.country_code().size() > 0) {

    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  if (from.environment_error_code().size() > 0) {

    environment_error_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.environment_error_code_);
  }
  if (from.has_tracking_io_info()) {
    mutable_tracking_io_info()->::proto::TrackingIOInfo::MergeFrom(from.tracking_io_info());
  }
  if (from.has_adjust_tracking_info()) {
    mutable_adjust_tracking_info()->::proto::AdjustTrackingInfo::MergeFrom(from.adjust_tracking_info());
  }
  if (from.login_rand() != 0) {
    set_login_rand(from.login_rand());
  }
  if (from.language_type() != 0) {
    set_language_type(from.language_type());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
  if (from.sub_channel_id() != 0) {
    set_sub_channel_id(from.sub_channel_id());
  }
  if (from.is_transfer() != 0) {
    set_is_transfer(from.is_transfer());
  }
  if (from.is_guest() != 0) {
    set_is_guest(from.is_guest());
  }
  if (from.is_editor() != 0) {
    set_is_editor(from.is_editor());
  }
  if (from.client_port() != 0) {
    set_client_port(from.client_port());
  }
  if (from.gm_uid() != 0) {
    set_gm_uid(from.gm_uid());
  }
  if (from.reg_platform() != 0) {
    set_reg_platform(from.reg_platform());
  }
  if (from.client_data_version() != 0) {
    set_client_data_version(from.client_data_version());
  }
  if (from.target_home_param() != 0) {
    set_target_home_param(from.target_home_param());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.cloud_client_ip() != 0) {
    set_cloud_client_ip(from.cloud_client_ip());
  }
  if (from.client_token() != 0) {
    set_client_token(from.client_token());
  }
  if (from.tag() != 0) {
    set_tag(from.tag());
  }
  if (from.target_home_owner_uid() != 0) {
    set_target_home_owner_uid(from.target_home_owner_uid());
  }
}

void PlayerLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginReq::CopyFrom(const PlayerLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginReq::IsInitialized() const {
  return true;
}

void PlayerLoginReq::Swap(PlayerLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginReq::InternalSwap(PlayerLoginReq* other) {
  using std::swap;
  device_info_.Swap(&other->device_info_);
  account_uid_.Swap(&other->account_uid_);
  device_uuid_.Swap(&other->device_uuid_);
  platform_.Swap(&other->platform_);
  device_name_.Swap(&other->device_name_);
  system_version_.Swap(&other->system_version_);
  client_version_.Swap(&other->client_version_);
  token_.Swap(&other->token_);
  security_library_md5_.Swap(&other->security_library_md5_);
  checksum_client_version_.Swap(&other->checksum_client_version_);
  online_id_.Swap(&other->online_id_);
  cps_.Swap(&other->cps_);
  security_library_version_.Swap(&other->security_library_version_);
  psn_id_.Swap(&other->psn_id_);
  extra_bin_data_.Swap(&other->extra_bin_data_);
  checksum_.Swap(&other->checksum_);
  birthday_.Swap(&other->birthday_);
  client_verison_hash_.Swap(&other->client_verison_hash_);
  security_cmd_reply_.Swap(&other->security_cmd_reply_);
  country_code_.Swap(&other->country_code_);
  environment_error_code_.Swap(&other->environment_error_code_);
  swap(tracking_io_info_, other->tracking_io_info_);
  swap(adjust_tracking_info_, other->adjust_tracking_info_);
  swap(login_rand_, other->login_rand_);
  swap(language_type_, other->language_type_);
  swap(target_uid_, other->target_uid_);
  swap(account_type_, other->account_type_);
  swap(platform_type_, other->platform_type_);
  swap(sub_channel_id_, other->sub_channel_id_);
  swap(is_transfer_, other->is_transfer_);
  swap(is_guest_, other->is_guest_);
  swap(is_editor_, other->is_editor_);
  swap(client_port_, other->client_port_);
  swap(gm_uid_, other->gm_uid_);
  swap(reg_platform_, other->reg_platform_);
  swap(client_data_version_, other->client_data_version_);
  swap(target_home_param_, other->target_home_param_);
  swap(channel_id_, other->channel_id_);
  swap(cloud_client_ip_, other->cloud_client_ip_);
  swap(client_token_, other->client_token_);
  swap(tag_, other->tag_);
  swap(target_home_owner_uid_, other->target_home_owner_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginReq

// uint32 language_type = 6;
void PlayerLoginReq::clear_language_type() {
  language_type_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.language_type)
  return language_type_;
}
void PlayerLoginReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.language_type)
}

// uint32 reg_platform = 615;
void PlayerLoginReq::clear_reg_platform() {
  reg_platform_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::reg_platform() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.reg_platform)
  return reg_platform_;
}
void PlayerLoginReq::set_reg_platform(::google::protobuf::uint32 value) {
  
  reg_platform_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.reg_platform)
}

// .proto.TrackingIOInfo tracking_io_info = 1660;
bool PlayerLoginReq::has_tracking_io_info() const {
  return this != internal_default_instance() && tracking_io_info_ != NULL;
}
void PlayerLoginReq::clear_tracking_io_info() {
  if (GetArenaNoVirtual() == NULL && tracking_io_info_ != NULL) delete tracking_io_info_;
  tracking_io_info_ = NULL;
}
const ::proto::TrackingIOInfo& PlayerLoginReq::tracking_io_info() const {
  const ::proto::TrackingIOInfo* p = tracking_io_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.tracking_io_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrackingIOInfo*>(
      &::proto::_TrackingIOInfo_default_instance_);
}
::proto::TrackingIOInfo* PlayerLoginReq::mutable_tracking_io_info() {
  
  if (tracking_io_info_ == NULL) {
    tracking_io_info_ = new ::proto::TrackingIOInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.tracking_io_info)
  return tracking_io_info_;
}
::proto::TrackingIOInfo* PlayerLoginReq::release_tracking_io_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.tracking_io_info)
  
  ::proto::TrackingIOInfo* temp = tracking_io_info_;
  tracking_io_info_ = NULL;
  return temp;
}
void PlayerLoginReq::set_allocated_tracking_io_info(::proto::TrackingIOInfo* tracking_io_info) {
  delete tracking_io_info_;
  tracking_io_info_ = tracking_io_info;
  if (tracking_io_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.tracking_io_info)
}

// uint32 account_type = 13;
void PlayerLoginReq::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_type)
  return account_type_;
}
void PlayerLoginReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_type)
}

// string token = 15;
void PlayerLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.token)
  return token_.GetNoArena();
}
void PlayerLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.token)
}
#if LANG_CXX11
void PlayerLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.token)
}
#endif
void PlayerLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.token)
}
void PlayerLoginReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.token)
}
::std::string* PlayerLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.token)
}

// bytes extra_bin_data = 1458;
void PlayerLoginReq::clear_extra_bin_data() {
  extra_bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::extra_bin_data() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.extra_bin_data)
  return extra_bin_data_.GetNoArena();
}
void PlayerLoginReq::set_extra_bin_data(const ::std::string& value) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.extra_bin_data)
}
#if LANG_CXX11
void PlayerLoginReq::set_extra_bin_data(::std::string&& value) {
  
  extra_bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.extra_bin_data)
}
#endif
void PlayerLoginReq::set_extra_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.extra_bin_data)
}
void PlayerLoginReq::set_extra_bin_data(const void* value, size_t size) {
  
  extra_bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.extra_bin_data)
}
::std::string* PlayerLoginReq::mutable_extra_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.extra_bin_data)
  return extra_bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_extra_bin_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.extra_bin_data)
  
  return extra_bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_extra_bin_data(::std::string* extra_bin_data) {
  if (extra_bin_data != NULL) {
    
  } else {
    
  }
  extra_bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.extra_bin_data)
}

// uint32 channel_id = 1314;
void PlayerLoginReq::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.channel_id)
  return channel_id_;
}
void PlayerLoginReq::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.channel_id)
}

// uint32 client_data_version = 688;
void PlayerLoginReq::clear_client_data_version() {
  client_data_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_data_version)
  return client_data_version_;
}
void PlayerLoginReq::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_data_version)
}

// string account_uid = 2;
void PlayerLoginReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_uid)
  return account_uid_.GetNoArena();
}
void PlayerLoginReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_uid)
}
#if LANG_CXX11
void PlayerLoginReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.account_uid)
}
#endif
void PlayerLoginReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.account_uid)
}
void PlayerLoginReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.account_uid)
}
::std::string* PlayerLoginReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.account_uid)
}

// string client_version = 12;
void PlayerLoginReq::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::client_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_version)
  return client_version_.GetNoArena();
}
void PlayerLoginReq::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_version)
}
#if LANG_CXX11
void PlayerLoginReq::set_client_version(::std::string&& value) {
  
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.client_version)
}
#endif
void PlayerLoginReq::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.client_version)
}
void PlayerLoginReq::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.client_version)
}
::std::string* PlayerLoginReq::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_client_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.client_version)
}

// string security_library_md5 = 772;
void PlayerLoginReq::clear_security_library_md5() {
  security_library_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::security_library_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.security_library_md5)
  return security_library_md5_.GetNoArena();
}
void PlayerLoginReq::set_security_library_md5(const ::std::string& value) {
  
  security_library_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.security_library_md5)
}
#if LANG_CXX11
void PlayerLoginReq::set_security_library_md5(::std::string&& value) {
  
  security_library_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.security_library_md5)
}
#endif
void PlayerLoginReq::set_security_library_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_library_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.security_library_md5)
}
void PlayerLoginReq::set_security_library_md5(const char* value, size_t size) {
  
  security_library_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.security_library_md5)
}
::std::string* PlayerLoginReq::mutable_security_library_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.security_library_md5)
  return security_library_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_security_library_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.security_library_md5)
  
  return security_library_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_security_library_md5(::std::string* security_library_md5) {
  if (security_library_md5 != NULL) {
    
  } else {
    
  }
  security_library_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_library_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.security_library_md5)
}

// string country_code = 2000;
void PlayerLoginReq::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::country_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.country_code)
  return country_code_.GetNoArena();
}
void PlayerLoginReq::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.country_code)
}
#if LANG_CXX11
void PlayerLoginReq::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.country_code)
}
#endif
void PlayerLoginReq::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.country_code)
}
void PlayerLoginReq::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.country_code)
}
::std::string* PlayerLoginReq::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.country_code)
}

// string psn_id = 1268;
void PlayerLoginReq::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.psn_id)
  return psn_id_.GetNoArena();
}
void PlayerLoginReq::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.psn_id)
}
#if LANG_CXX11
void PlayerLoginReq::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.psn_id)
}
#endif
void PlayerLoginReq::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.psn_id)
}
void PlayerLoginReq::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.psn_id)
}
::std::string* PlayerLoginReq::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.psn_id)
}

// uint32 client_port = 431;
void PlayerLoginReq::clear_client_port() {
  client_port_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::client_port() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_port)
  return client_port_;
}
void PlayerLoginReq::set_client_port(::google::protobuf::uint32 value) {
  
  client_port_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_port)
}

// string device_name = 9;
void PlayerLoginReq::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::device_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_name)
  return device_name_.GetNoArena();
}
void PlayerLoginReq::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_name)
}
#if LANG_CXX11
void PlayerLoginReq::set_device_name(::std::string&& value) {
  
  device_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_name)
}
#endif
void PlayerLoginReq::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_name)
}
void PlayerLoginReq::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_name)
}
::std::string* PlayerLoginReq::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_device_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_name)
}

// string cps = 1163;
void PlayerLoginReq::clear_cps() {
  cps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::cps() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.cps)
  return cps_.GetNoArena();
}
void PlayerLoginReq::set_cps(const ::std::string& value) {
  
  cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.cps)
}
#if LANG_CXX11
void PlayerLoginReq::set_cps(::std::string&& value) {
  
  cps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.cps)
}
#endif
void PlayerLoginReq::set_cps(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.cps)
}
void PlayerLoginReq::set_cps(const char* value, size_t size) {
  
  cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.cps)
}
::std::string* PlayerLoginReq::mutable_cps() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.cps)
  return cps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_cps() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.cps)
  
  return cps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_cps(::std::string* cps) {
  if (cps != NULL) {
    
  } else {
    
  }
  cps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cps);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.cps)
}

// uint64 login_rand = 3;
void PlayerLoginReq::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerLoginReq::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.login_rand)
  return login_rand_;
}
void PlayerLoginReq::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.login_rand)
}

// uint32 target_home_param = 984;
void PlayerLoginReq::clear_target_home_param() {
  target_home_param_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::target_home_param() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_home_param)
  return target_home_param_;
}
void PlayerLoginReq::set_target_home_param(::google::protobuf::uint32 value) {
  
  target_home_param_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_home_param)
}

// .proto.AdjustTrackingInfo adjust_tracking_info = 1816;
bool PlayerLoginReq::has_adjust_tracking_info() const {
  return this != internal_default_instance() && adjust_tracking_info_ != NULL;
}
void PlayerLoginReq::clear_adjust_tracking_info() {
  if (GetArenaNoVirtual() == NULL && adjust_tracking_info_ != NULL) delete adjust_tracking_info_;
  adjust_tracking_info_ = NULL;
}
const ::proto::AdjustTrackingInfo& PlayerLoginReq::adjust_tracking_info() const {
  const ::proto::AdjustTrackingInfo* p = adjust_tracking_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.adjust_tracking_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AdjustTrackingInfo*>(
      &::proto::_AdjustTrackingInfo_default_instance_);
}
::proto::AdjustTrackingInfo* PlayerLoginReq::mutable_adjust_tracking_info() {
  
  if (adjust_tracking_info_ == NULL) {
    adjust_tracking_info_ = new ::proto::AdjustTrackingInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.adjust_tracking_info)
  return adjust_tracking_info_;
}
::proto::AdjustTrackingInfo* PlayerLoginReq::release_adjust_tracking_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.adjust_tracking_info)
  
  ::proto::AdjustTrackingInfo* temp = adjust_tracking_info_;
  adjust_tracking_info_ = NULL;
  return temp;
}
void PlayerLoginReq::set_allocated_adjust_tracking_info(::proto::AdjustTrackingInfo* adjust_tracking_info) {
  delete adjust_tracking_info_;
  adjust_tracking_info_ = adjust_tracking_info;
  if (adjust_tracking_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.adjust_tracking_info)
}

// bool is_transfer = 908;
void PlayerLoginReq::clear_is_transfer() {
  is_transfer_ = false;
}
bool PlayerLoginReq::is_transfer() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_transfer)
  return is_transfer_;
}
void PlayerLoginReq::set_is_transfer(bool value) {
  
  is_transfer_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_transfer)
}

// uint32 tag = 1787;
void PlayerLoginReq::clear_tag() {
  tag_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::tag() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.tag)
  return tag_;
}
void PlayerLoginReq::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.tag)
}

// bool is_guest = 5;
void PlayerLoginReq::clear_is_guest() {
  is_guest_ = false;
}
bool PlayerLoginReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_guest)
  return is_guest_;
}
void PlayerLoginReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_guest)
}

// bytes environment_error_code = 2026;
void PlayerLoginReq::clear_environment_error_code() {
  environment_error_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::environment_error_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.environment_error_code)
  return environment_error_code_.GetNoArena();
}
void PlayerLoginReq::set_environment_error_code(const ::std::string& value) {
  
  environment_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.environment_error_code)
}
#if LANG_CXX11
void PlayerLoginReq::set_environment_error_code(::std::string&& value) {
  
  environment_error_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.environment_error_code)
}
#endif
void PlayerLoginReq::set_environment_error_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  environment_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.environment_error_code)
}
void PlayerLoginReq::set_environment_error_code(const void* value, size_t size) {
  
  environment_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.environment_error_code)
}
::std::string* PlayerLoginReq::mutable_environment_error_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.environment_error_code)
  return environment_error_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_environment_error_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.environment_error_code)
  
  return environment_error_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_environment_error_code(::std::string* environment_error_code) {
  if (environment_error_code != NULL) {
    
  } else {
    
  }
  environment_error_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), environment_error_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.environment_error_code)
}

// string online_id = 903;
void PlayerLoginReq::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::online_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.online_id)
  return online_id_.GetNoArena();
}
void PlayerLoginReq::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.online_id)
}
#if LANG_CXX11
void PlayerLoginReq::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.online_id)
}
#endif
void PlayerLoginReq::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.online_id)
}
void PlayerLoginReq::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.online_id)
}
::std::string* PlayerLoginReq::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.online_id)
}

// bool is_editor = 8;
void PlayerLoginReq::clear_is_editor() {
  is_editor_ = false;
}
bool PlayerLoginReq::is_editor() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_editor)
  return is_editor_;
}
void PlayerLoginReq::set_is_editor(bool value) {
  
  is_editor_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_editor)
}

// string checksum_client_version = 861;
void PlayerLoginReq::clear_checksum_client_version() {
  checksum_client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::checksum_client_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.checksum_client_version)
  return checksum_client_version_.GetNoArena();
}
void PlayerLoginReq::set_checksum_client_version(const ::std::string& value) {
  
  checksum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.checksum_client_version)
}
#if LANG_CXX11
void PlayerLoginReq::set_checksum_client_version(::std::string&& value) {
  
  checksum_client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.checksum_client_version)
}
#endif
void PlayerLoginReq::set_checksum_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  checksum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.checksum_client_version)
}
void PlayerLoginReq::set_checksum_client_version(const char* value, size_t size) {
  
  checksum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.checksum_client_version)
}
::std::string* PlayerLoginReq::mutable_checksum_client_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.checksum_client_version)
  return checksum_client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_checksum_client_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.checksum_client_version)
  
  return checksum_client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_checksum_client_version(::std::string* checksum_client_version) {
  if (checksum_client_version != NULL) {
    
  } else {
    
  }
  checksum_client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum_client_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.checksum_client_version)
}

// bytes security_cmd_reply = 1995;
void PlayerLoginReq::clear_security_cmd_reply() {
  security_cmd_reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::security_cmd_reply() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.security_cmd_reply)
  return security_cmd_reply_.GetNoArena();
}
void PlayerLoginReq::set_security_cmd_reply(const ::std::string& value) {
  
  security_cmd_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.security_cmd_reply)
}
#if LANG_CXX11
void PlayerLoginReq::set_security_cmd_reply(::std::string&& value) {
  
  security_cmd_reply_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.security_cmd_reply)
}
#endif
void PlayerLoginReq::set_security_cmd_reply(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_cmd_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.security_cmd_reply)
}
void PlayerLoginReq::set_security_cmd_reply(const void* value, size_t size) {
  
  security_cmd_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.security_cmd_reply)
}
::std::string* PlayerLoginReq::mutable_security_cmd_reply() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.security_cmd_reply)
  return security_cmd_reply_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_security_cmd_reply() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.security_cmd_reply)
  
  return security_cmd_reply_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_security_cmd_reply(::std::string* security_cmd_reply) {
  if (security_cmd_reply != NULL) {
    
  } else {
    
  }
  security_cmd_reply_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_cmd_reply);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.security_cmd_reply)
}

// string security_library_version = 1213;
void PlayerLoginReq::clear_security_library_version() {
  security_library_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::security_library_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.security_library_version)
  return security_library_version_.GetNoArena();
}
void PlayerLoginReq::set_security_library_version(const ::std::string& value) {
  
  security_library_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.security_library_version)
}
#if LANG_CXX11
void PlayerLoginReq::set_security_library_version(::std::string&& value) {
  
  security_library_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.security_library_version)
}
#endif
void PlayerLoginReq::set_security_library_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_library_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.security_library_version)
}
void PlayerLoginReq::set_security_library_version(const char* value, size_t size) {
  
  security_library_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.security_library_version)
}
::std::string* PlayerLoginReq::mutable_security_library_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.security_library_version)
  return security_library_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_security_library_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.security_library_version)
  
  return security_library_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_security_library_version(::std::string* security_library_version) {
  if (security_library_version != NULL) {
    
  } else {
    
  }
  security_library_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_library_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.security_library_version)
}

// string birthday = 1652;
void PlayerLoginReq::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::birthday() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.birthday)
  return birthday_.GetNoArena();
}
void PlayerLoginReq::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.birthday)
}
#if LANG_CXX11
void PlayerLoginReq::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.birthday)
}
#endif
void PlayerLoginReq::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.birthday)
}
void PlayerLoginReq::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.birthday)
}
::std::string* PlayerLoginReq::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.birthday)
}

// string device_uuid = 4;
void PlayerLoginReq::clear_device_uuid() {
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::device_uuid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.GetNoArena();
}
void PlayerLoginReq::set_device_uuid(const ::std::string& value) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_uuid)
}
#if LANG_CXX11
void PlayerLoginReq::set_device_uuid(::std::string&& value) {
  
  device_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_uuid)
}
#endif
void PlayerLoginReq::set_device_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_uuid)
}
void PlayerLoginReq::set_device_uuid(const char* value, size_t size) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_uuid)
}
::std::string* PlayerLoginReq::mutable_device_uuid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_device_uuid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_uuid)
  
  return device_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_device_uuid(::std::string* device_uuid) {
  if (device_uuid != NULL) {
    
  } else {
    
  }
  device_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_uuid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_uuid)
}

// uint32 client_token = 1546;
void PlayerLoginReq::clear_client_token() {
  client_token_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::client_token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_token)
  return client_token_;
}
void PlayerLoginReq::set_client_token(::google::protobuf::uint32 value) {
  
  client_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_token)
}

// uint32 sub_channel_id = 23;
void PlayerLoginReq::clear_sub_channel_id() {
  sub_channel_id_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::sub_channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.sub_channel_id)
  return sub_channel_id_;
}
void PlayerLoginReq::set_sub_channel_id(::google::protobuf::uint32 value) {
  
  sub_channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.sub_channel_id)
}

// uint32 target_uid = 11;
void PlayerLoginReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_uid)
  return target_uid_;
}
void PlayerLoginReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_uid)
}

// string device_info = 1;
void PlayerLoginReq::clear_device_info() {
  device_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::device_info() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_info)
  return device_info_.GetNoArena();
}
void PlayerLoginReq::set_device_info(const ::std::string& value) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_info)
}
#if LANG_CXX11
void PlayerLoginReq::set_device_info(::std::string&& value) {
  
  device_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_info)
}
#endif
void PlayerLoginReq::set_device_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_info)
}
void PlayerLoginReq::set_device_info(const char* value, size_t size) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_info)
}
::std::string* PlayerLoginReq::mutable_device_info() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_info)
  return device_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_device_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_info)
  
  return device_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_device_info(::std::string* device_info) {
  if (device_info != NULL) {
    
  } else {
    
  }
  device_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_info);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_info)
}

// string client_verison_hash = 1707;
void PlayerLoginReq::clear_client_verison_hash() {
  client_verison_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::client_verison_hash() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_verison_hash)
  return client_verison_hash_.GetNoArena();
}
void PlayerLoginReq::set_client_verison_hash(const ::std::string& value) {
  
  client_verison_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_verison_hash)
}
#if LANG_CXX11
void PlayerLoginReq::set_client_verison_hash(::std::string&& value) {
  
  client_verison_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.client_verison_hash)
}
#endif
void PlayerLoginReq::set_client_verison_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_verison_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.client_verison_hash)
}
void PlayerLoginReq::set_client_verison_hash(const char* value, size_t size) {
  
  client_verison_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.client_verison_hash)
}
::std::string* PlayerLoginReq::mutable_client_verison_hash() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.client_verison_hash)
  return client_verison_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_client_verison_hash() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.client_verison_hash)
  
  return client_verison_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_client_verison_hash(::std::string* client_verison_hash) {
  if (client_verison_hash != NULL) {
    
  } else {
    
  }
  client_verison_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_verison_hash);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.client_verison_hash)
}

// string checksum = 1532;
void PlayerLoginReq::clear_checksum() {
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::checksum() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.checksum)
  return checksum_.GetNoArena();
}
void PlayerLoginReq::set_checksum(const ::std::string& value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.checksum)
}
#if LANG_CXX11
void PlayerLoginReq::set_checksum(::std::string&& value) {
  
  checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.checksum)
}
#endif
void PlayerLoginReq::set_checksum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.checksum)
}
void PlayerLoginReq::set_checksum(const char* value, size_t size) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.checksum)
}
::std::string* PlayerLoginReq::mutable_checksum() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.checksum)
  return checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_checksum() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.checksum)
  
  return checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_checksum(::std::string* checksum) {
  if (checksum != NULL) {
    
  } else {
    
  }
  checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.checksum)
}

// uint32 platform_type = 14;
void PlayerLoginReq::clear_platform_type() {
  platform_type_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform_type)
  return platform_type_;
}
void PlayerLoginReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform_type)
}

// uint32 target_home_owner_uid = 1864;
void PlayerLoginReq::clear_target_home_owner_uid() {
  target_home_owner_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::target_home_owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_home_owner_uid)
  return target_home_owner_uid_;
}
void PlayerLoginReq::set_target_home_owner_uid(::google::protobuf::uint32 value) {
  
  target_home_owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_home_owner_uid)
}

// uint32 cloud_client_ip = 1335;
void PlayerLoginReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.cloud_client_ip)
  return cloud_client_ip_;
}
void PlayerLoginReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.cloud_client_ip)
}

// uint32 gm_uid = 612;
void PlayerLoginReq::clear_gm_uid() {
  gm_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginReq::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.gm_uid)
  return gm_uid_;
}
void PlayerLoginReq::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.gm_uid)
}

// string system_version = 10;
void PlayerLoginReq::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::system_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.system_version)
  return system_version_.GetNoArena();
}
void PlayerLoginReq::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.system_version)
}
#if LANG_CXX11
void PlayerLoginReq::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.system_version)
}
#endif
void PlayerLoginReq::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.system_version)
}
void PlayerLoginReq::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.system_version)
}
::std::string* PlayerLoginReq::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_system_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.system_version)
}

// string platform = 7;
void PlayerLoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginReq::platform() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform)
  return platform_.GetNoArena();
}
void PlayerLoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform)
}
#if LANG_CXX11
void PlayerLoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.platform)
}
#endif
void PlayerLoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.platform)
}
void PlayerLoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.platform)
}
::std::string* PlayerLoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.platform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShortAbilityHashPair::kAbilityConfigHashFieldNumber;
const int ShortAbilityHashPair::kAbilityNameHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShortAbilityHashPair::ShortAbilityHashPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ShortAbilityHashPair)
}
ShortAbilityHashPair::ShortAbilityHashPair(const ShortAbilityHashPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ability_name_hash_, &from.ability_name_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&ability_config_hash_) -
    reinterpret_cast<char*>(&ability_name_hash_)) + sizeof(ability_config_hash_));
  // @@protoc_insertion_point(copy_constructor:proto.ShortAbilityHashPair)
}

void ShortAbilityHashPair::SharedCtor() {
  ::memset(&ability_name_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ability_config_hash_) -
      reinterpret_cast<char*>(&ability_name_hash_)) + sizeof(ability_config_hash_));
  _cached_size_ = 0;
}

ShortAbilityHashPair::~ShortAbilityHashPair() {
  // @@protoc_insertion_point(destructor:proto.ShortAbilityHashPair)
  SharedDtor();
}

void ShortAbilityHashPair::SharedDtor() {
}

void ShortAbilityHashPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShortAbilityHashPair::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShortAbilityHashPair& ShortAbilityHashPair::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShortAbilityHashPair* ShortAbilityHashPair::New(::google::protobuf::Arena* arena) const {
  ShortAbilityHashPair* n = new ShortAbilityHashPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShortAbilityHashPair::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShortAbilityHashPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ability_name_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ability_config_hash_) -
      reinterpret_cast<char*>(&ability_name_hash_)) + sizeof(ability_config_hash_));
  _internal_metadata_.Clear();
}

bool ShortAbilityHashPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ShortAbilityHashPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 ability_name_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &ability_name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 ability_config_hash = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &ability_config_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ShortAbilityHashPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ShortAbilityHashPair)
  return false;
#undef DO_
}

void ShortAbilityHashPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ShortAbilityHashPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 ability_name_hash = 1;
  if (this->ability_name_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->ability_name_hash(), output);
  }

  // sfixed32 ability_config_hash = 15;
  if (this->ability_config_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(15, this->ability_config_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ShortAbilityHashPair)
}

::google::protobuf::uint8* ShortAbilityHashPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShortAbilityHashPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 ability_name_hash = 1;
  if (this->ability_name_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->ability_name_hash(), target);
  }

  // sfixed32 ability_config_hash = 15;
  if (this->ability_config_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(15, this->ability_config_hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShortAbilityHashPair)
  return target;
}

size_t ShortAbilityHashPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShortAbilityHashPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sfixed32 ability_name_hash = 1;
  if (this->ability_name_hash() != 0) {
    total_size += 1 + 4;
  }

  // sfixed32 ability_config_hash = 15;
  if (this->ability_config_hash() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShortAbilityHashPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShortAbilityHashPair)
  GOOGLE_DCHECK_NE(&from, this);
  const ShortAbilityHashPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShortAbilityHashPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShortAbilityHashPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShortAbilityHashPair)
    MergeFrom(*source);
  }
}

void ShortAbilityHashPair::MergeFrom(const ShortAbilityHashPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShortAbilityHashPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ability_name_hash() != 0) {
    set_ability_name_hash(from.ability_name_hash());
  }
  if (from.ability_config_hash() != 0) {
    set_ability_config_hash(from.ability_config_hash());
  }
}

void ShortAbilityHashPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShortAbilityHashPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShortAbilityHashPair::CopyFrom(const ShortAbilityHashPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShortAbilityHashPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShortAbilityHashPair::IsInitialized() const {
  return true;
}

void ShortAbilityHashPair::Swap(ShortAbilityHashPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShortAbilityHashPair::InternalSwap(ShortAbilityHashPair* other) {
  using std::swap;
  swap(ability_name_hash_, other->ability_name_hash_);
  swap(ability_config_hash_, other->ability_config_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShortAbilityHashPair::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShortAbilityHashPair

// sfixed32 ability_config_hash = 15;
void ShortAbilityHashPair::clear_ability_config_hash() {
  ability_config_hash_ = 0;
}
::google::protobuf::int32 ShortAbilityHashPair::ability_config_hash() const {
  // @@protoc_insertion_point(field_get:proto.ShortAbilityHashPair.ability_config_hash)
  return ability_config_hash_;
}
void ShortAbilityHashPair::set_ability_config_hash(::google::protobuf::int32 value) {
  
  ability_config_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.ShortAbilityHashPair.ability_config_hash)
}

// sfixed32 ability_name_hash = 1;
void ShortAbilityHashPair::clear_ability_name_hash() {
  ability_name_hash_ = 0;
}
::google::protobuf::int32 ShortAbilityHashPair::ability_name_hash() const {
  // @@protoc_insertion_point(field_get:proto.ShortAbilityHashPair.ability_name_hash)
  return ability_name_hash_;
}
void ShortAbilityHashPair::set_ability_name_hash(::google::protobuf::int32 value) {
  
  ability_name_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.ShortAbilityHashPair.ability_name_hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::PlayerLoginRsp_BlockInfoMapEntry() {}
PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::PlayerLoginRsp_BlockInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[6];
}
void PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerLoginRsp::PlayerLoginRsp_BlockInfoMapEntry::MergeFrom(const PlayerLoginRsp_BlockInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::PlayerLoginRsp_AbilityHashMapEntry() {}
PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::PlayerLoginRsp_AbilityHashMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[7];
}
void PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerLoginRsp::PlayerLoginRsp_AbilityHashMapEntry::MergeFrom(const PlayerLoginRsp_AbilityHashMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginRsp::kClientDataVersionFieldNumber;
const int PlayerLoginRsp::kIsScOpenFieldNumber;
const int PlayerLoginRsp::kRetcodeFieldNumber;
const int PlayerLoginRsp::kBlockInfoMapFieldNumber;
const int PlayerLoginRsp::kIsAuditFieldNumber;
const int PlayerLoginRsp::kIsTransferFieldNumber;
const int PlayerLoginRsp::kClientSilenceMd5FieldNumber;
const int PlayerLoginRsp::kNextResVersionConfigFieldNumber;
const int PlayerLoginRsp::kClientSilenceDataVersionFieldNumber;
const int PlayerLoginRsp::kLoginRandFieldNumber;
const int PlayerLoginRsp::kIsNewPlayerFieldNumber;
const int PlayerLoginRsp::kClientVersionSuffixFieldNumber;
const int PlayerLoginRsp::kGameBizFieldNumber;
const int PlayerLoginRsp::kNextResourceUrlFieldNumber;
const int PlayerLoginRsp::kIsReloginFieldNumber;
const int PlayerLoginRsp::kTotalTickTimeFieldNumber;
const int PlayerLoginRsp::kIsEnableClientHashDebugFieldNumber;
const int PlayerLoginRsp::kScInfoFieldNumber;
const int PlayerLoginRsp::kAbilityHashCodeFieldNumber;
const int PlayerLoginRsp::kRegisterCpsFieldNumber;
const int PlayerLoginRsp::kIsLoginRspSplitFieldNumber;
const int PlayerLoginRsp::kIsUseAbilityHashFieldNumber;
const int PlayerLoginRsp::kAbilityHashMapFieldNumber;
const int PlayerLoginRsp::kShortAbilityHashMapFieldNumber;
const int PlayerLoginRsp::kClientMd5FieldNumber;
const int PlayerLoginRsp::kCountryCodeFieldNumber;
const int PlayerLoginRsp::kIsDataNeedReloginFieldNumber;
const int PlayerLoginRsp::kResVersionConfigFieldNumber;
const int PlayerLoginRsp::kFeatureBlockInfoListFieldNumber;
const int PlayerLoginRsp::kBirthdayFieldNumber;
const int PlayerLoginRsp::kTargetUidFieldNumber;
const int PlayerLoginRsp::kPlayerDataFieldNumber;
const int PlayerLoginRsp::kClientSilenceVersionSuffixFieldNumber;
const int PlayerLoginRsp::kTargetHomeOwnerUidFieldNumber;
const int PlayerLoginRsp::kPlayerDataVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginRsp::PlayerLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLoginRsp)
}
PlayerLoginRsp::PlayerLoginRsp(const PlayerLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      short_ability_hash_map_(from.short_ability_hash_map_),
      feature_block_info_list_(from.feature_block_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ability_hash_map_.MergeFrom(from.ability_hash_map_);
  block_info_map_.MergeFrom(from.block_info_map_);
  game_biz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_biz().size() > 0) {
    game_biz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_biz_);
  }
  player_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.player_data().size() > 0) {
    player_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_data_);
  }
  next_resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_resource_url().size() > 0) {
    next_resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_resource_url_);
  }
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthday().size() > 0) {
    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  client_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_version_suffix().size() > 0) {
    client_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_suffix_);
  }
  client_silence_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_silence_version_suffix().size() > 0) {
    client_silence_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_version_suffix_);
  }
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_silence_md5().size() > 0) {
    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_md5().size() > 0) {
    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country_code().size() > 0) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  sc_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sc_info().size() > 0) {
    sc_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sc_info_);
  }
  register_cps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.register_cps().size() > 0) {
    register_cps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.register_cps_);
  }
  if (from.has_next_res_version_config()) {
    next_res_version_config_ = new ::proto::ResVersionConfig(*from.next_res_version_config_);
  } else {
    next_res_version_config_ = NULL;
  }
  if (from.has_res_version_config()) {
    res_version_config_ = new ::proto::ResVersionConfig(*from.res_version_config_);
  } else {
    res_version_config_ = NULL;
  }
  ::memcpy(&client_data_version_, &from.client_data_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_new_player_) -
    reinterpret_cast<char*>(&client_data_version_)) + sizeof(is_new_player_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLoginRsp)
}

void PlayerLoginRsp::SharedCtor() {
  game_biz_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sc_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  register_cps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&next_res_version_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_new_player_) -
      reinterpret_cast<char*>(&next_res_version_config_)) + sizeof(is_new_player_));
  _cached_size_ = 0;
}

PlayerLoginRsp::~PlayerLoginRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerLoginRsp)
  SharedDtor();
}

void PlayerLoginRsp::SharedDtor() {
  game_biz_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_resource_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_version_suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sc_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  register_cps_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete next_res_version_config_;
  if (this != internal_default_instance()) delete res_version_config_;
}

void PlayerLoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginRsp& PlayerLoginRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLoginRsp* PlayerLoginRsp::New(::google::protobuf::Arena* arena) const {
  PlayerLoginRsp* n = new PlayerLoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ability_hash_map_.Clear();
  short_ability_hash_map_.Clear();
  block_info_map_.Clear();
  feature_block_info_list_.Clear();
  game_biz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sc_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  register_cps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && next_res_version_config_ != NULL) {
    delete next_res_version_config_;
  }
  next_res_version_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) {
    delete res_version_config_;
  }
  res_version_config_ = NULL;
  ::memset(&client_data_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_new_player_) -
      reinterpret_cast<char*>(&client_data_version_)) + sizeof(is_new_player_));
  _internal_metadata_.Clear();
}

bool PlayerLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 client_data_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_use_ability_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_use_ability_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 login_rand = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &login_rand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_biz = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_biz()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_biz().data(), static_cast<int>(this->game_biz().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.game_biz"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_silence_data_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_silence_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_data_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_new_player = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_new_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_relogin = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_relogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int32> ability_hash_map = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          PlayerLoginRsp_AbilityHashMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerLoginRsp_AbilityHashMapEntry,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&ability_hash_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.AbilityHashMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ability_hash_code = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_hash_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes player_data = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_player_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double total_tick_time = 125;
      case 125: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 1001 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_tick_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ShortAbilityHashPair short_ability_hash_map = 250;
      case 250: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 2002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_short_ability_hash_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_home_owner_uid = 553;
      case 553: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 4424 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_home_owner_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.BlockInfo> block_info_map = 571;
      case 571: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 4570 & 0xFF */)) {
          PlayerLoginRsp_BlockInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerLoginRsp_BlockInfoMapEntry,
              ::google::protobuf::uint32, ::proto::BlockInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo > > parser(&block_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_resource_url = 621;
      case 621: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 4970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_resource_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_resource_url().data(), static_cast<int>(this->next_resource_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.next_resource_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthday = 624;
      case 624: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 4994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), static_cast<int>(this->birthday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.birthday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_enable_client_hash_debug = 932;
      case 932: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 7456 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_enable_client_hash_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_data_need_relogin = 951;
      case 951: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 7608 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_data_need_relogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_version_suffix = 1047;
      case 1047: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 8378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version_suffix().data(), static_cast<int>(this->client_version_suffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.client_version_suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_silence_version_suffix = 1299;
      case 1299: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 10394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_silence_version_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_silence_version_suffix().data(), static_cast<int>(this->client_silence_version_suffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.client_silence_version_suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FeatureBlockInfo feature_block_info_list = 1352;
      case 1352: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 10818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_feature_block_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_sc_open = 1429;
      case 1429: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 11432 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_sc_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResVersionConfig next_res_version_config = 1573;
      case 1573: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 12586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_next_res_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_login_rsp_split = 1649;
      case 1649: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 13192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_login_rsp_split_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_audit = 1685;
      case 1685: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 13480 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_audit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_silence_md5 = 1746;
      case 1746: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 13970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_silence_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.client_silence_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_md5 = 1830;
      case 1830: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 14642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_md5().data(), static_cast<int>(this->client_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.client_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country_code = 1900;
      case 1900: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 15202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.country_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResVersionConfig res_version_config = 1969;
      case 1969: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 15754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_transfer = 2018;
      case 2018: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sc_info = 2024;
      case 2024: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 16194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sc_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string register_cps = 2040;
      case 2040: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 16322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_register_cps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->register_cps().data(), static_cast<int>(this->register_cps().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerLoginRsp.register_cps"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLoginRsp)
  return false;
#undef DO_
}

void PlayerLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client_data_version = 1;
  if (this->client_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_data_version(), output);
  }

  // bool is_use_ability_hash = 2;
  if (this->is_use_ability_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_use_ability_hash(), output);
  }

  // uint64 login_rand = 4;
  if (this->login_rand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->login_rand(), output);
  }

  // string game_biz = 5;
  if (this->game_biz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_biz().data(), static_cast<int>(this->game_biz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.game_biz");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->game_biz(), output);
  }

  // uint32 client_silence_data_version = 6;
  if (this->client_silence_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->client_silence_data_version(), output);
  }

  // uint32 player_data_version = 7;
  if (this->player_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->player_data_version(), output);
  }

  // bool is_new_player = 8;
  if (this->is_new_player() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_new_player(), output);
  }

  // bool is_relogin = 10;
  if (this->is_relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_relogin(), output);
  }

  // map<string, int32> ability_hash_map = 11;
  if (!this->ability_hash_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.PlayerLoginRsp.AbilityHashMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ability_hash_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ability_hash_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int32 ability_hash_code = 12;
  if (this->ability_hash_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->ability_hash_code(), output);
  }

  // bytes player_data = 13;
  if (this->player_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->player_data(), output);
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->target_uid(), output);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  // double total_tick_time = 125;
  if (this->total_tick_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(125, this->total_tick_time(), output);
  }

  // repeated .proto.ShortAbilityHashPair short_ability_hash_map = 250;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->short_ability_hash_map_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      250, this->short_ability_hash_map(static_cast<int>(i)), output);
  }

  // uint32 target_home_owner_uid = 553;
  if (this->target_home_owner_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(553, this->target_home_owner_uid(), output);
  }

  // map<uint32, .proto.BlockInfo> block_info_map = 571;
  if (!this->block_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->block_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->block_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(block_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            571, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it) {
        entry.reset(block_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            571, *entry, output);
      }
    }
  }

  // string next_resource_url = 621;
  if (this->next_resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_resource_url().data(), static_cast<int>(this->next_resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.next_resource_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      621, this->next_resource_url(), output);
  }

  // string birthday = 624;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      624, this->birthday(), output);
  }

  // bool is_enable_client_hash_debug = 932;
  if (this->is_enable_client_hash_debug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(932, this->is_enable_client_hash_debug(), output);
  }

  // bool is_data_need_relogin = 951;
  if (this->is_data_need_relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(951, this->is_data_need_relogin(), output);
  }

  // string client_version_suffix = 1047;
  if (this->client_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_suffix().data(), static_cast<int>(this->client_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_version_suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1047, this->client_version_suffix(), output);
  }

  // string client_silence_version_suffix = 1299;
  if (this->client_silence_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_version_suffix().data(), static_cast<int>(this->client_silence_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_silence_version_suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1299, this->client_silence_version_suffix(), output);
  }

  // repeated .proto.FeatureBlockInfo feature_block_info_list = 1352;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_block_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1352, this->feature_block_info_list(static_cast<int>(i)), output);
  }

  // bool is_sc_open = 1429;
  if (this->is_sc_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1429, this->is_sc_open(), output);
  }

  // .proto.ResVersionConfig next_res_version_config = 1573;
  if (this->has_next_res_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1573, *this->next_res_version_config_, output);
  }

  // bool is_login_rsp_split = 1649;
  if (this->is_login_rsp_split() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1649, this->is_login_rsp_split(), output);
  }

  // bool is_audit = 1685;
  if (this->is_audit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1685, this->is_audit(), output);
  }

  // string client_silence_md5 = 1746;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_silence_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1746, this->client_silence_md5(), output);
  }

  // string client_md5 = 1830;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1830, this->client_md5(), output);
  }

  // string country_code = 1900;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1900, this->country_code(), output);
  }

  // .proto.ResVersionConfig res_version_config = 1969;
  if (this->has_res_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1969, *this->res_version_config_, output);
  }

  // bool is_transfer = 2018;
  if (this->is_transfer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2018, this->is_transfer(), output);
  }

  // bytes sc_info = 2024;
  if (this->sc_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2024, this->sc_info(), output);
  }

  // string register_cps = 2040;
  if (this->register_cps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->register_cps().data(), static_cast<int>(this->register_cps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.register_cps");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2040, this->register_cps(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLoginRsp)
}

::google::protobuf::uint8* PlayerLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client_data_version = 1;
  if (this->client_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_data_version(), target);
  }

  // bool is_use_ability_hash = 2;
  if (this->is_use_ability_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_use_ability_hash(), target);
  }

  // uint64 login_rand = 4;
  if (this->login_rand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->login_rand(), target);
  }

  // string game_biz = 5;
  if (this->game_biz().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_biz().data(), static_cast<int>(this->game_biz().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.game_biz");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->game_biz(), target);
  }

  // uint32 client_silence_data_version = 6;
  if (this->client_silence_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->client_silence_data_version(), target);
  }

  // uint32 player_data_version = 7;
  if (this->player_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->player_data_version(), target);
  }

  // bool is_new_player = 8;
  if (this->is_new_player() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_new_player(), target);
  }

  // bool is_relogin = 10;
  if (this->is_relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_relogin(), target);
  }

  // map<string, int32> ability_hash_map = 11;
  if (!this->ability_hash_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.PlayerLoginRsp.AbilityHashMapEntry.key");
      }
    };

    if (deterministic &&
        this->ability_hash_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ability_hash_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->ability_hash_map().begin();
          it != this->ability_hash_map().end(); ++it) {
        entry.reset(ability_hash_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // int32 ability_hash_code = 12;
  if (this->ability_hash_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->ability_hash_code(), target);
  }

  // bytes player_data = 13;
  if (this->player_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->player_data(), target);
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->target_uid(), target);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  // double total_tick_time = 125;
  if (this->total_tick_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(125, this->total_tick_time(), target);
  }

  // repeated .proto.ShortAbilityHashPair short_ability_hash_map = 250;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->short_ability_hash_map_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        250, this->short_ability_hash_map(static_cast<int>(i)), deterministic, target);
  }

  // uint32 target_home_owner_uid = 553;
  if (this->target_home_owner_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(553, this->target_home_owner_uid(), target);
  }

  // map<uint32, .proto.BlockInfo> block_info_map = 571;
  if (!this->block_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->block_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->block_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(block_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       571, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
          it = this->block_info_map().begin();
          it != this->block_info_map().end(); ++it) {
        entry.reset(block_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       571, *entry, deterministic, target);
;
      }
    }
  }

  // string next_resource_url = 621;
  if (this->next_resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_resource_url().data(), static_cast<int>(this->next_resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.next_resource_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        621, this->next_resource_url(), target);
  }

  // string birthday = 624;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        624, this->birthday(), target);
  }

  // bool is_enable_client_hash_debug = 932;
  if (this->is_enable_client_hash_debug() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(932, this->is_enable_client_hash_debug(), target);
  }

  // bool is_data_need_relogin = 951;
  if (this->is_data_need_relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(951, this->is_data_need_relogin(), target);
  }

  // string client_version_suffix = 1047;
  if (this->client_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_suffix().data(), static_cast<int>(this->client_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_version_suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1047, this->client_version_suffix(), target);
  }

  // string client_silence_version_suffix = 1299;
  if (this->client_silence_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_version_suffix().data(), static_cast<int>(this->client_silence_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_silence_version_suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1299, this->client_silence_version_suffix(), target);
  }

  // repeated .proto.FeatureBlockInfo feature_block_info_list = 1352;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_block_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1352, this->feature_block_info_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_sc_open = 1429;
  if (this->is_sc_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1429, this->is_sc_open(), target);
  }

  // .proto.ResVersionConfig next_res_version_config = 1573;
  if (this->has_next_res_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1573, *this->next_res_version_config_, deterministic, target);
  }

  // bool is_login_rsp_split = 1649;
  if (this->is_login_rsp_split() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1649, this->is_login_rsp_split(), target);
  }

  // bool is_audit = 1685;
  if (this->is_audit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1685, this->is_audit(), target);
  }

  // string client_silence_md5 = 1746;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_silence_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1746, this->client_silence_md5(), target);
  }

  // string client_md5 = 1830;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.client_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1830, this->client_md5(), target);
  }

  // string country_code = 1900;
  if (this->country_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1900, this->country_code(), target);
  }

  // .proto.ResVersionConfig res_version_config = 1969;
  if (this->has_res_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1969, *this->res_version_config_, deterministic, target);
  }

  // bool is_transfer = 2018;
  if (this->is_transfer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2018, this->is_transfer(), target);
  }

  // bytes sc_info = 2024;
  if (this->sc_info().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2024, this->sc_info(), target);
  }

  // string register_cps = 2040;
  if (this->register_cps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->register_cps().data(), static_cast<int>(this->register_cps().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerLoginRsp.register_cps");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2040, this->register_cps(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLoginRsp)
  return target;
}

size_t PlayerLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLoginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, int32> ability_hash_map = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ability_hash_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerLoginRsp_AbilityHashMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->ability_hash_map().begin();
        it != this->ability_hash_map().end(); ++it) {
      entry.reset(ability_hash_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .proto.ShortAbilityHashPair short_ability_hash_map = 250;
  {
    unsigned int count = static_cast<unsigned int>(this->short_ability_hash_map_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->short_ability_hash_map(static_cast<int>(i)));
    }
  }

  // map<uint32, .proto.BlockInfo> block_info_map = 571;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->block_info_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerLoginRsp_BlockInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >::const_iterator
        it = this->block_info_map().begin();
        it != this->block_info_map().end(); ++it) {
      entry.reset(block_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .proto.FeatureBlockInfo feature_block_info_list = 1352;
  {
    unsigned int count = static_cast<unsigned int>(this->feature_block_info_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->feature_block_info_list(static_cast<int>(i)));
    }
  }

  // string game_biz = 5;
  if (this->game_biz().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_biz());
  }

  // bytes player_data = 13;
  if (this->player_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->player_data());
  }

  // string next_resource_url = 621;
  if (this->next_resource_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_resource_url());
  }

  // string birthday = 624;
  if (this->birthday().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // string client_version_suffix = 1047;
  if (this->client_version_suffix().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version_suffix());
  }

  // string client_silence_version_suffix = 1299;
  if (this->client_silence_version_suffix().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_silence_version_suffix());
  }

  // string client_silence_md5 = 1746;
  if (this->client_silence_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_silence_md5());
  }

  // string client_md5 = 1830;
  if (this->client_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_md5());
  }

  // string country_code = 1900;
  if (this->country_code().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country_code());
  }

  // bytes sc_info = 2024;
  if (this->sc_info().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sc_info());
  }

  // string register_cps = 2040;
  if (this->register_cps().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->register_cps());
  }

  // .proto.ResVersionConfig next_res_version_config = 1573;
  if (this->has_next_res_version_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->next_res_version_config_);
  }

  // .proto.ResVersionConfig res_version_config = 1969;
  if (this->has_res_version_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_version_config_);
  }

  // uint32 client_data_version = 1;
  if (this->client_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_data_version());
  }

  // uint32 client_silence_data_version = 6;
  if (this->client_silence_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_silence_data_version());
  }

  // uint64 login_rand = 4;
  if (this->login_rand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->login_rand());
  }

  // uint32 player_data_version = 7;
  if (this->player_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_data_version());
  }

  // int32 ability_hash_code = 12;
  if (this->ability_hash_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ability_hash_code());
  }

  // uint32 target_uid = 14;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // double total_tick_time = 125;
  if (this->total_tick_time() != 0) {
    total_size += 2 + 8;
  }

  // uint32 target_home_owner_uid = 553;
  if (this->target_home_owner_uid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_home_owner_uid());
  }

  // bool is_relogin = 10;
  if (this->is_relogin() != 0) {
    total_size += 1 + 1;
  }

  // bool is_enable_client_hash_debug = 932;
  if (this->is_enable_client_hash_debug() != 0) {
    total_size += 2 + 1;
  }

  // bool is_login_rsp_split = 1649;
  if (this->is_login_rsp_split() != 0) {
    total_size += 2 + 1;
  }

  // bool is_use_ability_hash = 2;
  if (this->is_use_ability_hash() != 0) {
    total_size += 1 + 1;
  }

  // bool is_data_need_relogin = 951;
  if (this->is_data_need_relogin() != 0) {
    total_size += 2 + 1;
  }

  // bool is_sc_open = 1429;
  if (this->is_sc_open() != 0) {
    total_size += 2 + 1;
  }

  // bool is_audit = 1685;
  if (this->is_audit() != 0) {
    total_size += 2 + 1;
  }

  // bool is_transfer = 2018;
  if (this->is_transfer() != 0) {
    total_size += 2 + 1;
  }

  // bool is_new_player = 8;
  if (this->is_new_player() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLoginRsp)
    MergeFrom(*source);
  }
}

void PlayerLoginRsp::MergeFrom(const PlayerLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ability_hash_map_.MergeFrom(from.ability_hash_map_);
  short_ability_hash_map_.MergeFrom(from.short_ability_hash_map_);
  block_info_map_.MergeFrom(from.block_info_map_);
  feature_block_info_list_.MergeFrom(from.feature_block_info_list_);
  if (from.game_biz().size() > 0) {

    game_biz_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_biz_);
  }
  if (from.player_data().size() > 0) {

    player_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_data_);
  }
  if (from.next_resource_url().size() > 0) {

    next_resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_resource_url_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.client_version_suffix().size() > 0) {

    client_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_suffix_);
  }
  if (from.client_silence_version_suffix().size() > 0) {

    client_silence_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_version_suffix_);
  }
  if (from.client_silence_md5().size() > 0) {

    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  if (from.client_md5().size() > 0) {

    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  if (from.country_code().size() > 0) {

    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  if (from.sc_info().size() > 0) {

    sc_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sc_info_);
  }
  if (from.register_cps().size() > 0) {

    register_cps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.register_cps_);
  }
  if (from.has_next_res_version_config()) {
    mutable_next_res_version_config()->::proto::ResVersionConfig::MergeFrom(from.next_res_version_config());
  }
  if (from.has_res_version_config()) {
    mutable_res_version_config()->::proto::ResVersionConfig::MergeFrom(from.res_version_config());
  }
  if (from.client_data_version() != 0) {
    set_client_data_version(from.client_data_version());
  }
  if (from.client_silence_data_version() != 0) {
    set_client_silence_data_version(from.client_silence_data_version());
  }
  if (from.login_rand() != 0) {
    set_login_rand(from.login_rand());
  }
  if (from.player_data_version() != 0) {
    set_player_data_version(from.player_data_version());
  }
  if (from.ability_hash_code() != 0) {
    set_ability_hash_code(from.ability_hash_code());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.total_tick_time() != 0) {
    set_total_tick_time(from.total_tick_time());
  }
  if (from.target_home_owner_uid() != 0) {
    set_target_home_owner_uid(from.target_home_owner_uid());
  }
  if (from.is_relogin() != 0) {
    set_is_relogin(from.is_relogin());
  }
  if (from.is_enable_client_hash_debug() != 0) {
    set_is_enable_client_hash_debug(from.is_enable_client_hash_debug());
  }
  if (from.is_login_rsp_split() != 0) {
    set_is_login_rsp_split(from.is_login_rsp_split());
  }
  if (from.is_use_ability_hash() != 0) {
    set_is_use_ability_hash(from.is_use_ability_hash());
  }
  if (from.is_data_need_relogin() != 0) {
    set_is_data_need_relogin(from.is_data_need_relogin());
  }
  if (from.is_sc_open() != 0) {
    set_is_sc_open(from.is_sc_open());
  }
  if (from.is_audit() != 0) {
    set_is_audit(from.is_audit());
  }
  if (from.is_transfer() != 0) {
    set_is_transfer(from.is_transfer());
  }
  if (from.is_new_player() != 0) {
    set_is_new_player(from.is_new_player());
  }
}

void PlayerLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginRsp::CopyFrom(const PlayerLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginRsp::IsInitialized() const {
  return true;
}

void PlayerLoginRsp::Swap(PlayerLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginRsp::InternalSwap(PlayerLoginRsp* other) {
  using std::swap;
  ability_hash_map_.Swap(&other->ability_hash_map_);
  short_ability_hash_map_.InternalSwap(&other->short_ability_hash_map_);
  block_info_map_.Swap(&other->block_info_map_);
  feature_block_info_list_.InternalSwap(&other->feature_block_info_list_);
  game_biz_.Swap(&other->game_biz_);
  player_data_.Swap(&other->player_data_);
  next_resource_url_.Swap(&other->next_resource_url_);
  birthday_.Swap(&other->birthday_);
  client_version_suffix_.Swap(&other->client_version_suffix_);
  client_silence_version_suffix_.Swap(&other->client_silence_version_suffix_);
  client_silence_md5_.Swap(&other->client_silence_md5_);
  client_md5_.Swap(&other->client_md5_);
  country_code_.Swap(&other->country_code_);
  sc_info_.Swap(&other->sc_info_);
  register_cps_.Swap(&other->register_cps_);
  swap(next_res_version_config_, other->next_res_version_config_);
  swap(res_version_config_, other->res_version_config_);
  swap(client_data_version_, other->client_data_version_);
  swap(client_silence_data_version_, other->client_silence_data_version_);
  swap(login_rand_, other->login_rand_);
  swap(player_data_version_, other->player_data_version_);
  swap(ability_hash_code_, other->ability_hash_code_);
  swap(target_uid_, other->target_uid_);
  swap(retcode_, other->retcode_);
  swap(total_tick_time_, other->total_tick_time_);
  swap(target_home_owner_uid_, other->target_home_owner_uid_);
  swap(is_relogin_, other->is_relogin_);
  swap(is_enable_client_hash_debug_, other->is_enable_client_hash_debug_);
  swap(is_login_rsp_split_, other->is_login_rsp_split_);
  swap(is_use_ability_hash_, other->is_use_ability_hash_);
  swap(is_data_need_relogin_, other->is_data_need_relogin_);
  swap(is_sc_open_, other->is_sc_open_);
  swap(is_audit_, other->is_audit_);
  swap(is_transfer_, other->is_transfer_);
  swap(is_new_player_, other->is_new_player_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginRsp

// uint32 client_data_version = 1;
void PlayerLoginRsp::clear_client_data_version() {
  client_data_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_data_version)
  return client_data_version_;
}
void PlayerLoginRsp::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_data_version)
}

// bool is_sc_open = 1429;
void PlayerLoginRsp::clear_is_sc_open() {
  is_sc_open_ = false;
}
bool PlayerLoginRsp::is_sc_open() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_sc_open)
  return is_sc_open_;
}
void PlayerLoginRsp::set_is_sc_open(bool value) {
  
  is_sc_open_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_sc_open)
}

// int32 retcode = 15;
void PlayerLoginRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerLoginRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.retcode)
  return retcode_;
}
void PlayerLoginRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.retcode)
}

// map<uint32, .proto.BlockInfo> block_info_map = 571;
int PlayerLoginRsp::block_info_map_size() const {
  return block_info_map_.size();
}
void PlayerLoginRsp::clear_block_info_map() {
  block_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >&
PlayerLoginRsp::block_info_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >*
PlayerLoginRsp::mutable_block_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.MutableMap();
}

// bool is_audit = 1685;
void PlayerLoginRsp::clear_is_audit() {
  is_audit_ = false;
}
bool PlayerLoginRsp::is_audit() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_audit)
  return is_audit_;
}
void PlayerLoginRsp::set_is_audit(bool value) {
  
  is_audit_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_audit)
}

// bool is_transfer = 2018;
void PlayerLoginRsp::clear_is_transfer() {
  is_transfer_ = false;
}
bool PlayerLoginRsp::is_transfer() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_transfer)
  return is_transfer_;
}
void PlayerLoginRsp::set_is_transfer(bool value) {
  
  is_transfer_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_transfer)
}

// string client_silence_md5 = 1746;
void PlayerLoginRsp::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
void PlayerLoginRsp::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_md5)
}
#if LANG_CXX11
void PlayerLoginRsp::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_silence_md5)
}
#endif
void PlayerLoginRsp::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_silence_md5)
}
void PlayerLoginRsp::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_silence_md5)
}
::std::string* PlayerLoginRsp::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_silence_md5)
}

// .proto.ResVersionConfig next_res_version_config = 1573;
bool PlayerLoginRsp::has_next_res_version_config() const {
  return this != internal_default_instance() && next_res_version_config_ != NULL;
}
void PlayerLoginRsp::clear_next_res_version_config() {
  if (GetArenaNoVirtual() == NULL && next_res_version_config_ != NULL) delete next_res_version_config_;
  next_res_version_config_ = NULL;
}
const ::proto::ResVersionConfig& PlayerLoginRsp::next_res_version_config() const {
  const ::proto::ResVersionConfig* p = next_res_version_config_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.next_res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
::proto::ResVersionConfig* PlayerLoginRsp::mutable_next_res_version_config() {
  
  if (next_res_version_config_ == NULL) {
    next_res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.next_res_version_config)
  return next_res_version_config_;
}
::proto::ResVersionConfig* PlayerLoginRsp::release_next_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.next_res_version_config)
  
  ::proto::ResVersionConfig* temp = next_res_version_config_;
  next_res_version_config_ = NULL;
  return temp;
}
void PlayerLoginRsp::set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config) {
  delete next_res_version_config_;
  next_res_version_config_ = next_res_version_config;
  if (next_res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.next_res_version_config)
}

// uint32 client_silence_data_version = 6;
void PlayerLoginRsp::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_data_version)
  return client_silence_data_version_;
}
void PlayerLoginRsp::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_data_version)
}

// uint64 login_rand = 4;
void PlayerLoginRsp::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerLoginRsp::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.login_rand)
  return login_rand_;
}
void PlayerLoginRsp::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.login_rand)
}

// bool is_new_player = 8;
void PlayerLoginRsp::clear_is_new_player() {
  is_new_player_ = false;
}
bool PlayerLoginRsp::is_new_player() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_new_player)
  return is_new_player_;
}
void PlayerLoginRsp::set_is_new_player(bool value) {
  
  is_new_player_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_new_player)
}

// string client_version_suffix = 1047;
void PlayerLoginRsp::clear_client_version_suffix() {
  client_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::client_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_version_suffix)
  return client_version_suffix_.GetNoArena();
}
void PlayerLoginRsp::set_client_version_suffix(const ::std::string& value) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_version_suffix)
}
#if LANG_CXX11
void PlayerLoginRsp::set_client_version_suffix(::std::string&& value) {
  
  client_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_version_suffix)
}
#endif
void PlayerLoginRsp::set_client_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_version_suffix)
}
void PlayerLoginRsp::set_client_version_suffix(const char* value, size_t size) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_version_suffix)
}
::std::string* PlayerLoginRsp::mutable_client_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_version_suffix)
  return client_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_client_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_version_suffix)
  
  return client_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_client_version_suffix(::std::string* client_version_suffix) {
  if (client_version_suffix != NULL) {
    
  } else {
    
  }
  client_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_version_suffix)
}

// string game_biz = 5;
void PlayerLoginRsp::clear_game_biz() {
  game_biz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::game_biz() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.game_biz)
  return game_biz_.GetNoArena();
}
void PlayerLoginRsp::set_game_biz(const ::std::string& value) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.game_biz)
}
#if LANG_CXX11
void PlayerLoginRsp::set_game_biz(::std::string&& value) {
  
  game_biz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.game_biz)
}
#endif
void PlayerLoginRsp::set_game_biz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.game_biz)
}
void PlayerLoginRsp::set_game_biz(const char* value, size_t size) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.game_biz)
}
::std::string* PlayerLoginRsp::mutable_game_biz() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.game_biz)
  return game_biz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_game_biz() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.game_biz)
  
  return game_biz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_game_biz(::std::string* game_biz) {
  if (game_biz != NULL) {
    
  } else {
    
  }
  game_biz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_biz);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.game_biz)
}

// string next_resource_url = 621;
void PlayerLoginRsp::clear_next_resource_url() {
  next_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::next_resource_url() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.next_resource_url)
  return next_resource_url_.GetNoArena();
}
void PlayerLoginRsp::set_next_resource_url(const ::std::string& value) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.next_resource_url)
}
#if LANG_CXX11
void PlayerLoginRsp::set_next_resource_url(::std::string&& value) {
  
  next_resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.next_resource_url)
}
#endif
void PlayerLoginRsp::set_next_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.next_resource_url)
}
void PlayerLoginRsp::set_next_resource_url(const char* value, size_t size) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.next_resource_url)
}
::std::string* PlayerLoginRsp::mutable_next_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.next_resource_url)
  return next_resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_next_resource_url() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.next_resource_url)
  
  return next_resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_next_resource_url(::std::string* next_resource_url) {
  if (next_resource_url != NULL) {
    
  } else {
    
  }
  next_resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.next_resource_url)
}

// bool is_relogin = 10;
void PlayerLoginRsp::clear_is_relogin() {
  is_relogin_ = false;
}
bool PlayerLoginRsp::is_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_relogin)
  return is_relogin_;
}
void PlayerLoginRsp::set_is_relogin(bool value) {
  
  is_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_relogin)
}

// double total_tick_time = 125;
void PlayerLoginRsp::clear_total_tick_time() {
  total_tick_time_ = 0;
}
double PlayerLoginRsp::total_tick_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.total_tick_time)
  return total_tick_time_;
}
void PlayerLoginRsp::set_total_tick_time(double value) {
  
  total_tick_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.total_tick_time)
}

// bool is_enable_client_hash_debug = 932;
void PlayerLoginRsp::clear_is_enable_client_hash_debug() {
  is_enable_client_hash_debug_ = false;
}
bool PlayerLoginRsp::is_enable_client_hash_debug() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_enable_client_hash_debug)
  return is_enable_client_hash_debug_;
}
void PlayerLoginRsp::set_is_enable_client_hash_debug(bool value) {
  
  is_enable_client_hash_debug_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_enable_client_hash_debug)
}

// bytes sc_info = 2024;
void PlayerLoginRsp::clear_sc_info() {
  sc_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::sc_info() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.sc_info)
  return sc_info_.GetNoArena();
}
void PlayerLoginRsp::set_sc_info(const ::std::string& value) {
  
  sc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.sc_info)
}
#if LANG_CXX11
void PlayerLoginRsp::set_sc_info(::std::string&& value) {
  
  sc_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.sc_info)
}
#endif
void PlayerLoginRsp::set_sc_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.sc_info)
}
void PlayerLoginRsp::set_sc_info(const void* value, size_t size) {
  
  sc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.sc_info)
}
::std::string* PlayerLoginRsp::mutable_sc_info() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.sc_info)
  return sc_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_sc_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.sc_info)
  
  return sc_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_sc_info(::std::string* sc_info) {
  if (sc_info != NULL) {
    
  } else {
    
  }
  sc_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sc_info);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.sc_info)
}

// int32 ability_hash_code = 12;
void PlayerLoginRsp::clear_ability_hash_code() {
  ability_hash_code_ = 0;
}
::google::protobuf::int32 PlayerLoginRsp::ability_hash_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.ability_hash_code)
  return ability_hash_code_;
}
void PlayerLoginRsp::set_ability_hash_code(::google::protobuf::int32 value) {
  
  ability_hash_code_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.ability_hash_code)
}

// string register_cps = 2040;
void PlayerLoginRsp::clear_register_cps() {
  register_cps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::register_cps() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.register_cps)
  return register_cps_.GetNoArena();
}
void PlayerLoginRsp::set_register_cps(const ::std::string& value) {
  
  register_cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.register_cps)
}
#if LANG_CXX11
void PlayerLoginRsp::set_register_cps(::std::string&& value) {
  
  register_cps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.register_cps)
}
#endif
void PlayerLoginRsp::set_register_cps(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  register_cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.register_cps)
}
void PlayerLoginRsp::set_register_cps(const char* value, size_t size) {
  
  register_cps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.register_cps)
}
::std::string* PlayerLoginRsp::mutable_register_cps() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.register_cps)
  return register_cps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_register_cps() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.register_cps)
  
  return register_cps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_register_cps(::std::string* register_cps) {
  if (register_cps != NULL) {
    
  } else {
    
  }
  register_cps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), register_cps);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.register_cps)
}

// bool is_login_rsp_split = 1649;
void PlayerLoginRsp::clear_is_login_rsp_split() {
  is_login_rsp_split_ = false;
}
bool PlayerLoginRsp::is_login_rsp_split() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_login_rsp_split)
  return is_login_rsp_split_;
}
void PlayerLoginRsp::set_is_login_rsp_split(bool value) {
  
  is_login_rsp_split_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_login_rsp_split)
}

// bool is_use_ability_hash = 2;
void PlayerLoginRsp::clear_is_use_ability_hash() {
  is_use_ability_hash_ = false;
}
bool PlayerLoginRsp::is_use_ability_hash() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_use_ability_hash)
  return is_use_ability_hash_;
}
void PlayerLoginRsp::set_is_use_ability_hash(bool value) {
  
  is_use_ability_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_use_ability_hash)
}

// map<string, int32> ability_hash_map = 11;
int PlayerLoginRsp::ability_hash_map_size() const {
  return ability_hash_map_.size();
}
void PlayerLoginRsp::clear_ability_hash_map() {
  ability_hash_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
PlayerLoginRsp::ability_hash_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
PlayerLoginRsp::mutable_ability_hash_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.MutableMap();
}

// repeated .proto.ShortAbilityHashPair short_ability_hash_map = 250;
int PlayerLoginRsp::short_ability_hash_map_size() const {
  return short_ability_hash_map_.size();
}
void PlayerLoginRsp::clear_short_ability_hash_map() {
  short_ability_hash_map_.Clear();
}
const ::proto::ShortAbilityHashPair& PlayerLoginRsp::short_ability_hash_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_.Get(index);
}
::proto::ShortAbilityHashPair* PlayerLoginRsp::mutable_short_ability_hash_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_.Mutable(index);
}
::proto::ShortAbilityHashPair* PlayerLoginRsp::add_short_ability_hash_map() {
  // @@protoc_insertion_point(field_add:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ShortAbilityHashPair >*
PlayerLoginRsp::mutable_short_ability_hash_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLoginRsp.short_ability_hash_map)
  return &short_ability_hash_map_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ShortAbilityHashPair >&
PlayerLoginRsp::short_ability_hash_map() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLoginRsp.short_ability_hash_map)
  return short_ability_hash_map_;
}

// string client_md5 = 1830;
void PlayerLoginRsp::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_md5)
  return client_md5_.GetNoArena();
}
void PlayerLoginRsp::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_md5)
}
#if LANG_CXX11
void PlayerLoginRsp::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_md5)
}
#endif
void PlayerLoginRsp::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_md5)
}
void PlayerLoginRsp::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_md5)
}
::std::string* PlayerLoginRsp::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_md5)
}

// string country_code = 1900;
void PlayerLoginRsp::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::country_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.country_code)
  return country_code_.GetNoArena();
}
void PlayerLoginRsp::set_country_code(const ::std::string& value) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.country_code)
}
#if LANG_CXX11
void PlayerLoginRsp::set_country_code(::std::string&& value) {
  
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.country_code)
}
#endif
void PlayerLoginRsp::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.country_code)
}
void PlayerLoginRsp::set_country_code(const char* value, size_t size) {
  
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.country_code)
}
::std::string* PlayerLoginRsp::mutable_country_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.country_code)
  
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    
  } else {
    
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.country_code)
}

// bool is_data_need_relogin = 951;
void PlayerLoginRsp::clear_is_data_need_relogin() {
  is_data_need_relogin_ = false;
}
bool PlayerLoginRsp::is_data_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_data_need_relogin)
  return is_data_need_relogin_;
}
void PlayerLoginRsp::set_is_data_need_relogin(bool value) {
  
  is_data_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_data_need_relogin)
}

// .proto.ResVersionConfig res_version_config = 1969;
bool PlayerLoginRsp::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
void PlayerLoginRsp::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
const ::proto::ResVersionConfig& PlayerLoginRsp::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
::proto::ResVersionConfig* PlayerLoginRsp::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.res_version_config)
  return res_version_config_;
}
::proto::ResVersionConfig* PlayerLoginRsp::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
void PlayerLoginRsp::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.res_version_config)
}

// repeated .proto.FeatureBlockInfo feature_block_info_list = 1352;
int PlayerLoginRsp::feature_block_info_list_size() const {
  return feature_block_info_list_.size();
}
void PlayerLoginRsp::clear_feature_block_info_list() {
  feature_block_info_list_.Clear();
}
const ::proto::FeatureBlockInfo& PlayerLoginRsp::feature_block_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_.Get(index);
}
::proto::FeatureBlockInfo* PlayerLoginRsp::mutable_feature_block_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_.Mutable(index);
}
::proto::FeatureBlockInfo* PlayerLoginRsp::add_feature_block_info_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FeatureBlockInfo >*
PlayerLoginRsp::mutable_feature_block_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLoginRsp.feature_block_info_list)
  return &feature_block_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FeatureBlockInfo >&
PlayerLoginRsp::feature_block_info_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLoginRsp.feature_block_info_list)
  return feature_block_info_list_;
}

// string birthday = 624;
void PlayerLoginRsp::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::birthday() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.birthday)
  return birthday_.GetNoArena();
}
void PlayerLoginRsp::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.birthday)
}
#if LANG_CXX11
void PlayerLoginRsp::set_birthday(::std::string&& value) {
  
  birthday_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.birthday)
}
#endif
void PlayerLoginRsp::set_birthday(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.birthday)
}
void PlayerLoginRsp::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.birthday)
}
::std::string* PlayerLoginRsp::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.birthday)
}

// uint32 target_uid = 14;
void PlayerLoginRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.target_uid)
  return target_uid_;
}
void PlayerLoginRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.target_uid)
}

// bytes player_data = 13;
void PlayerLoginRsp::clear_player_data() {
  player_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::player_data() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data)
  return player_data_.GetNoArena();
}
void PlayerLoginRsp::set_player_data(const ::std::string& value) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data)
}
#if LANG_CXX11
void PlayerLoginRsp::set_player_data(::std::string&& value) {
  
  player_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.player_data)
}
#endif
void PlayerLoginRsp::set_player_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.player_data)
}
void PlayerLoginRsp::set_player_data(const void* value, size_t size) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.player_data)
}
::std::string* PlayerLoginRsp::mutable_player_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.player_data)
  return player_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_player_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.player_data)
  
  return player_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_player_data(::std::string* player_data) {
  if (player_data != NULL) {
    
  } else {
    
  }
  player_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_data);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.player_data)
}

// string client_silence_version_suffix = 1299;
void PlayerLoginRsp::clear_client_silence_version_suffix() {
  client_silence_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLoginRsp::client_silence_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_version_suffix)
  return client_silence_version_suffix_.GetNoArena();
}
void PlayerLoginRsp::set_client_silence_version_suffix(const ::std::string& value) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_version_suffix)
}
#if LANG_CXX11
void PlayerLoginRsp::set_client_silence_version_suffix(::std::string&& value) {
  
  client_silence_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_silence_version_suffix)
}
#endif
void PlayerLoginRsp::set_client_silence_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_silence_version_suffix)
}
void PlayerLoginRsp::set_client_silence_version_suffix(const char* value, size_t size) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_silence_version_suffix)
}
::std::string* PlayerLoginRsp::mutable_client_silence_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_silence_version_suffix)
  return client_silence_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLoginRsp::release_client_silence_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_silence_version_suffix)
  
  return client_silence_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLoginRsp::set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix) {
  if (client_silence_version_suffix != NULL) {
    
  } else {
    
  }
  client_silence_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_silence_version_suffix)
}

// uint32 target_home_owner_uid = 553;
void PlayerLoginRsp::clear_target_home_owner_uid() {
  target_home_owner_uid_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::target_home_owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.target_home_owner_uid)
  return target_home_owner_uid_;
}
void PlayerLoginRsp::set_target_home_owner_uid(::google::protobuf::uint32 value) {
  
  target_home_owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.target_home_owner_uid)
}

// uint32 player_data_version = 7;
void PlayerLoginRsp::clear_player_data_version() {
  player_data_version_ = 0u;
}
::google::protobuf::uint32 PlayerLoginRsp::player_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data_version)
  return player_data_version_;
}
void PlayerLoginRsp::set_player_data_version(::google::protobuf::uint32 value) {
  
  player_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogoutReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutReq::PlayerLogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLogoutReq)
}
PlayerLogoutReq::PlayerLogoutReq(const PlayerLogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLogoutReq)
}

void PlayerLogoutReq::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

PlayerLogoutReq::~PlayerLogoutReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerLogoutReq)
  SharedDtor();
}

void PlayerLogoutReq::SharedDtor() {
}

void PlayerLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLogoutReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLogoutReq& PlayerLogoutReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogoutReq* PlayerLogoutReq::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutReq* n = new PlayerLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerLogoutReq.Reason reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::PlayerLogoutReq_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLogoutReq)
  return false;
#undef DO_
}

void PlayerLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerLogoutReq.Reason reason = 6;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLogoutReq)
}

::google::protobuf::uint8* PlayerLogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerLogoutReq.Reason reason = 6;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLogoutReq)
  return target;
}

size_t PlayerLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLogoutReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlayerLogoutReq.Reason reason = 6;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLogoutReq)
    MergeFrom(*source);
  }
}

void PlayerLogoutReq::MergeFrom(const PlayerLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PlayerLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLogoutReq::CopyFrom(const PlayerLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutReq::IsInitialized() const {
  return true;
}

void PlayerLogoutReq::Swap(PlayerLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutReq::InternalSwap(PlayerLogoutReq* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLogoutReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutReq

// .proto.PlayerLogoutReq.Reason reason = 6;
void PlayerLogoutReq::clear_reason() {
  reason_ = 0;
}
::proto::PlayerLogoutReq_Reason PlayerLogoutReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutReq.reason)
  return static_cast< ::proto::PlayerLogoutReq_Reason >(reason_);
}
void PlayerLogoutReq::set_reason(::proto::PlayerLogoutReq_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutReq.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogoutRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutRsp::PlayerLogoutRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLogoutRsp)
}
PlayerLogoutRsp::PlayerLogoutRsp(const PlayerLogoutRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLogoutRsp)
}

void PlayerLogoutRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerLogoutRsp::~PlayerLogoutRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerLogoutRsp)
  SharedDtor();
}

void PlayerLogoutRsp::SharedDtor() {
}

void PlayerLogoutRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLogoutRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLogoutRsp& PlayerLogoutRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogoutRsp* PlayerLogoutRsp::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutRsp* n = new PlayerLogoutRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerLogoutRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLogoutRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLogoutRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLogoutRsp)
  return false;
#undef DO_
}

void PlayerLogoutRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLogoutRsp)
}

::google::protobuf::uint8* PlayerLogoutRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLogoutRsp)
  return target;
}

size_t PlayerLogoutRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLogoutRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLogoutRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLogoutRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLogoutRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLogoutRsp)
    MergeFrom(*source);
  }
}

void PlayerLogoutRsp::MergeFrom(const PlayerLogoutRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerLogoutRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLogoutRsp::CopyFrom(const PlayerLogoutRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutRsp::IsInitialized() const {
  return true;
}

void PlayerLogoutRsp::Swap(PlayerLogoutRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutRsp::InternalSwap(PlayerLogoutRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLogoutRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutRsp

// int32 retcode = 12;
void PlayerLogoutRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerLogoutRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutRsp.retcode)
  return retcode_;
}
void PlayerLogoutRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogoutNotify::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutNotify::PlayerLogoutNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLogoutNotify)
}
PlayerLogoutNotify::PlayerLogoutNotify(const PlayerLogoutNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLogoutNotify)
}

void PlayerLogoutNotify::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerLogoutNotify::~PlayerLogoutNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerLogoutNotify)
  SharedDtor();
}

void PlayerLogoutNotify::SharedDtor() {
}

void PlayerLogoutNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLogoutNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLogoutNotify& PlayerLogoutNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogoutNotify* PlayerLogoutNotify::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutNotify* n = new PlayerLogoutNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLogoutNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerLogoutNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLogoutNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLogoutNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLogoutNotify)
  return false;
#undef DO_
}

void PlayerLogoutNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLogoutNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLogoutNotify)
}

::google::protobuf::uint8* PlayerLogoutNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLogoutNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLogoutNotify)
  return target;
}

size_t PlayerLogoutNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLogoutNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLogoutNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLogoutNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLogoutNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLogoutNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLogoutNotify)
    MergeFrom(*source);
  }
}

void PlayerLogoutNotify::MergeFrom(const PlayerLogoutNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLogoutNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerLogoutNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLogoutNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLogoutNotify::CopyFrom(const PlayerLogoutNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLogoutNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutNotify::IsInitialized() const {
  return true;
}

void PlayerLogoutNotify::Swap(PlayerLogoutNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutNotify::InternalSwap(PlayerLogoutNotify* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLogoutNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutNotify

// int32 retcode = 13;
void PlayerLogoutNotify::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerLogoutNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutNotify.retcode)
  return retcode_;
}
void PlayerLogoutNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutNotify.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerDataNotify::PlayerDataNotify_PropMapEntry::PlayerDataNotify_PropMapEntry() {}
PlayerDataNotify::PlayerDataNotify_PropMapEntry::PlayerDataNotify_PropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerDataNotify::PlayerDataNotify_PropMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[12];
}
void PlayerDataNotify::PlayerDataNotify_PropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerDataNotify::PlayerDataNotify_PropMapEntry::MergeFrom(const PlayerDataNotify_PropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerDataNotify::kServerTimeFieldNumber;
const int PlayerDataNotify::kNickNameFieldNumber;
const int PlayerDataNotify::kIsFirstLoginTodayFieldNumber;
const int PlayerDataNotify::kRegionIdFieldNumber;
const int PlayerDataNotify::kPropMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerDataNotify::PlayerDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerDataNotify)
}
PlayerDataNotify::PlayerDataNotify(const PlayerDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prop_map_.MergeFrom(from.prop_map_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  ::memcpy(&server_time_, &from.server_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_first_login_today_) -
    reinterpret_cast<char*>(&server_time_)) + sizeof(is_first_login_today_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerDataNotify)
}

void PlayerDataNotify::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_first_login_today_) -
      reinterpret_cast<char*>(&server_time_)) + sizeof(is_first_login_today_));
  _cached_size_ = 0;
}

PlayerDataNotify::~PlayerDataNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerDataNotify)
  SharedDtor();
}

void PlayerDataNotify::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerDataNotify& PlayerDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerDataNotify* PlayerDataNotify::New(::google::protobuf::Arena* arena) const {
  PlayerDataNotify* n = new PlayerDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_map_.Clear();
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_first_login_today_) -
      reinterpret_cast<char*>(&server_time_)) + sizeof(is_first_login_today_));
  _internal_metadata_.Clear();
}

bool PlayerDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 region_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 server_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerDataNotify.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_first_login_today = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_first_login_today_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.PropValue> prop_map = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          PlayerDataNotify_PropMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerDataNotify_PropMapEntry,
              ::google::protobuf::uint32, ::proto::PropValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue > > parser(&prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerDataNotify)
  return false;
#undef DO_
}

void PlayerDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 region_id = 6;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->region_id(), output);
  }

  // uint64 server_time = 7;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->server_time(), output);
  }

  // string nick_name = 8;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerDataNotify.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nick_name(), output);
  }

  // bool is_first_login_today = 12;
  if (this->is_first_login_today() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_first_login_today(), output);
  }

  // map<uint32, .proto.PropValue> prop_map = 15;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerDataNotify)
}

::google::protobuf::uint8* PlayerDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 region_id = 6;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->region_id(), target);
  }

  // uint64 server_time = 7;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->server_time(), target);
  }

  // string nick_name = 8;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerDataNotify.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nick_name(), target);
  }

  // bool is_first_login_today = 12;
  if (this->is_first_login_today() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_first_login_today(), target);
  }

  // map<uint32, .proto.PropValue> prop_map = 15;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerDataNotify)
  return target;
}

size_t PlayerDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.PropValue> prop_map = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prop_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerDataNotify_PropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
        it = this->prop_map().begin();
        it != this->prop_map().end(); ++it) {
      entry.reset(prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string nick_name = 8;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // uint64 server_time = 7;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  // uint32 region_id = 6;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->region_id());
  }

  // bool is_first_login_today = 12;
  if (this->is_first_login_today() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerDataNotify)
    MergeFrom(*source);
  }
}

void PlayerDataNotify::MergeFrom(const PlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_map_.MergeFrom(from.prop_map_);
  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.is_first_login_today() != 0) {
    set_is_first_login_today(from.is_first_login_today());
  }
}

void PlayerDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerDataNotify::CopyFrom(const PlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerDataNotify::IsInitialized() const {
  return true;
}

void PlayerDataNotify::Swap(PlayerDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerDataNotify::InternalSwap(PlayerDataNotify* other) {
  using std::swap;
  prop_map_.Swap(&other->prop_map_);
  nick_name_.Swap(&other->nick_name_);
  swap(server_time_, other->server_time_);
  swap(region_id_, other->region_id_);
  swap(is_first_login_today_, other->is_first_login_today_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerDataNotify

// uint64 server_time = 7;
void PlayerDataNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerDataNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.server_time)
  return server_time_;
}
void PlayerDataNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.server_time)
}

// string nick_name = 8;
void PlayerDataNotify::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerDataNotify::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.nick_name)
  return nick_name_.GetNoArena();
}
void PlayerDataNotify::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.nick_name)
}
#if LANG_CXX11
void PlayerDataNotify::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerDataNotify.nick_name)
}
#endif
void PlayerDataNotify::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerDataNotify.nick_name)
}
void PlayerDataNotify::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerDataNotify.nick_name)
}
::std::string* PlayerDataNotify::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerDataNotify.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerDataNotify::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerDataNotify.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerDataNotify::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerDataNotify.nick_name)
}

// bool is_first_login_today = 12;
void PlayerDataNotify::clear_is_first_login_today() {
  is_first_login_today_ = false;
}
bool PlayerDataNotify::is_first_login_today() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.is_first_login_today)
  return is_first_login_today_;
}
void PlayerDataNotify::set_is_first_login_today(bool value) {
  
  is_first_login_today_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.is_first_login_today)
}

// uint32 region_id = 6;
void PlayerDataNotify::clear_region_id() {
  region_id_ = 0u;
}
::google::protobuf::uint32 PlayerDataNotify::region_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.region_id)
  return region_id_;
}
void PlayerDataNotify::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.region_id)
}

// map<uint32, .proto.PropValue> prop_map = 15;
int PlayerDataNotify::prop_map_size() const {
  return prop_map_.size();
}
void PlayerDataNotify::clear_prop_map() {
  prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerDataNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerDataNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeGameTimeReq::kGameTimeFieldNumber;
const int ChangeGameTimeReq::kIsForceSetFieldNumber;
const int ChangeGameTimeReq::kExtraDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeGameTimeReq::ChangeGameTimeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeGameTimeReq)
}
ChangeGameTimeReq::ChangeGameTimeReq(const ChangeGameTimeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&extra_days_, &from.extra_days_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_force_set_) -
    reinterpret_cast<char*>(&extra_days_)) + sizeof(is_force_set_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeGameTimeReq)
}

void ChangeGameTimeReq::SharedCtor() {
  ::memset(&extra_days_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_force_set_) -
      reinterpret_cast<char*>(&extra_days_)) + sizeof(is_force_set_));
  _cached_size_ = 0;
}

ChangeGameTimeReq::~ChangeGameTimeReq() {
  // @@protoc_insertion_point(destructor:proto.ChangeGameTimeReq)
  SharedDtor();
}

void ChangeGameTimeReq::SharedDtor() {
}

void ChangeGameTimeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeGameTimeReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeGameTimeReq& ChangeGameTimeReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeGameTimeReq* ChangeGameTimeReq::New(::google::protobuf::Arena* arena) const {
  ChangeGameTimeReq* n = new ChangeGameTimeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeGameTimeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeGameTimeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&extra_days_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_force_set_) -
      reinterpret_cast<char*>(&extra_days_)) + sizeof(is_force_set_));
  _internal_metadata_.Clear();
}

bool ChangeGameTimeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeGameTimeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 game_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_force_set = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_force_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 extra_days = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeGameTimeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeGameTimeReq)
  return false;
#undef DO_
}

void ChangeGameTimeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeGameTimeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 6;
  if (this->game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->game_time(), output);
  }

  // bool is_force_set = 11;
  if (this->is_force_set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_force_set(), output);
  }

  // uint32 extra_days = 12;
  if (this->extra_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->extra_days(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeGameTimeReq)
}

::google::protobuf::uint8* ChangeGameTimeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeGameTimeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 6;
  if (this->game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->game_time(), target);
  }

  // bool is_force_set = 11;
  if (this->is_force_set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_force_set(), target);
  }

  // uint32 extra_days = 12;
  if (this->extra_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->extra_days(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeGameTimeReq)
  return target;
}

size_t ChangeGameTimeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeGameTimeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 extra_days = 12;
  if (this->extra_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extra_days());
  }

  // uint32 game_time = 6;
  if (this->game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_time());
  }

  // bool is_force_set = 11;
  if (this->is_force_set() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeGameTimeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeGameTimeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeGameTimeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeGameTimeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeGameTimeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeGameTimeReq)
    MergeFrom(*source);
  }
}

void ChangeGameTimeReq::MergeFrom(const ChangeGameTimeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeGameTimeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.extra_days() != 0) {
    set_extra_days(from.extra_days());
  }
  if (from.game_time() != 0) {
    set_game_time(from.game_time());
  }
  if (from.is_force_set() != 0) {
    set_is_force_set(from.is_force_set());
  }
}

void ChangeGameTimeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeGameTimeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeGameTimeReq::CopyFrom(const ChangeGameTimeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeGameTimeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeGameTimeReq::IsInitialized() const {
  return true;
}

void ChangeGameTimeReq::Swap(ChangeGameTimeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeGameTimeReq::InternalSwap(ChangeGameTimeReq* other) {
  using std::swap;
  swap(extra_days_, other->extra_days_);
  swap(game_time_, other->game_time_);
  swap(is_force_set_, other->is_force_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeGameTimeReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeGameTimeReq

// uint32 game_time = 6;
void ChangeGameTimeReq::clear_game_time() {
  game_time_ = 0u;
}
::google::protobuf::uint32 ChangeGameTimeReq::game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.game_time)
  return game_time_;
}
void ChangeGameTimeReq::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.game_time)
}

// bool is_force_set = 11;
void ChangeGameTimeReq::clear_is_force_set() {
  is_force_set_ = false;
}
bool ChangeGameTimeReq::is_force_set() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.is_force_set)
  return is_force_set_;
}
void ChangeGameTimeReq::set_is_force_set(bool value) {
  
  is_force_set_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.is_force_set)
}

// uint32 extra_days = 12;
void ChangeGameTimeReq::clear_extra_days() {
  extra_days_ = 0u;
}
::google::protobuf::uint32 ChangeGameTimeReq::extra_days() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.extra_days)
  return extra_days_;
}
void ChangeGameTimeReq::set_extra_days(::google::protobuf::uint32 value) {
  
  extra_days_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.extra_days)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeGameTimeRsp::kRetcodeFieldNumber;
const int ChangeGameTimeRsp::kExtraDaysFieldNumber;
const int ChangeGameTimeRsp::kCurGameTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeGameTimeRsp::ChangeGameTimeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeGameTimeRsp)
}
ChangeGameTimeRsp::ChangeGameTimeRsp(const ChangeGameTimeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cur_game_time_, &from.cur_game_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&cur_game_time_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeGameTimeRsp)
}

void ChangeGameTimeRsp::SharedCtor() {
  ::memset(&cur_game_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_game_time_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ChangeGameTimeRsp::~ChangeGameTimeRsp() {
  // @@protoc_insertion_point(destructor:proto.ChangeGameTimeRsp)
  SharedDtor();
}

void ChangeGameTimeRsp::SharedDtor() {
}

void ChangeGameTimeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeGameTimeRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeGameTimeRsp& ChangeGameTimeRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeGameTimeRsp* ChangeGameTimeRsp::New(::google::protobuf::Arena* arena) const {
  ChangeGameTimeRsp* n = new ChangeGameTimeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeGameTimeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeGameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cur_game_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_game_time_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ChangeGameTimeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeGameTimeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 extra_days = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_game_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeGameTimeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeGameTimeRsp)
  return false;
#undef DO_
}

void ChangeGameTimeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeGameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 extra_days = 5;
  if (this->extra_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->extra_days(), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint32 cur_game_time = 14;
  if (this->cur_game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->cur_game_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeGameTimeRsp)
}

::google::protobuf::uint8* ChangeGameTimeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeGameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 extra_days = 5;
  if (this->extra_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->extra_days(), target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint32 cur_game_time = 14;
  if (this->cur_game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->cur_game_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeGameTimeRsp)
  return target;
}

size_t ChangeGameTimeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeGameTimeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cur_game_time = 14;
  if (this->cur_game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_game_time());
  }

  // uint32 extra_days = 5;
  if (this->extra_days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extra_days());
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeGameTimeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeGameTimeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeGameTimeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeGameTimeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeGameTimeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeGameTimeRsp)
    MergeFrom(*source);
  }
}

void ChangeGameTimeRsp::MergeFrom(const ChangeGameTimeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeGameTimeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cur_game_time() != 0) {
    set_cur_game_time(from.cur_game_time());
  }
  if (from.extra_days() != 0) {
    set_extra_days(from.extra_days());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ChangeGameTimeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeGameTimeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeGameTimeRsp::CopyFrom(const ChangeGameTimeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeGameTimeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeGameTimeRsp::IsInitialized() const {
  return true;
}

void ChangeGameTimeRsp::Swap(ChangeGameTimeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeGameTimeRsp::InternalSwap(ChangeGameTimeRsp* other) {
  using std::swap;
  swap(cur_game_time_, other->cur_game_time_);
  swap(extra_days_, other->extra_days_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeGameTimeRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeGameTimeRsp

// int32 retcode = 8;
void ChangeGameTimeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ChangeGameTimeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.retcode)
  return retcode_;
}
void ChangeGameTimeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.retcode)
}

// uint32 extra_days = 5;
void ChangeGameTimeRsp::clear_extra_days() {
  extra_days_ = 0u;
}
::google::protobuf::uint32 ChangeGameTimeRsp::extra_days() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.extra_days)
  return extra_days_;
}
void ChangeGameTimeRsp::set_extra_days(::google::protobuf::uint32 value) {
  
  extra_days_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.extra_days)
}

// uint32 cur_game_time = 14;
void ChangeGameTimeRsp::clear_cur_game_time() {
  cur_game_time_ = 0u;
}
::google::protobuf::uint32 ChangeGameTimeRsp::cur_game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.cur_game_time)
  return cur_game_time_;
}
void ChangeGameTimeRsp::set_cur_game_time(::google::protobuf::uint32 value) {
  
  cur_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.cur_game_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerGameTimeNotify::kUidFieldNumber;
const int PlayerGameTimeNotify::kGameTimeFieldNumber;
const int PlayerGameTimeNotify::kIsHomeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerGameTimeNotify::PlayerGameTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerGameTimeNotify)
}
PlayerGameTimeNotify::PlayerGameTimeNotify(const PlayerGameTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_home_, &from.is_home_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&is_home_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerGameTimeNotify)
}

void PlayerGameTimeNotify::SharedCtor() {
  ::memset(&is_home_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&is_home_)) + sizeof(uid_));
  _cached_size_ = 0;
}

PlayerGameTimeNotify::~PlayerGameTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerGameTimeNotify)
  SharedDtor();
}

void PlayerGameTimeNotify::SharedDtor() {
}

void PlayerGameTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerGameTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerGameTimeNotify& PlayerGameTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerGameTimeNotify* PlayerGameTimeNotify::New(::google::protobuf::Arena* arena) const {
  PlayerGameTimeNotify* n = new PlayerGameTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerGameTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_home_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&is_home_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool PlayerGameTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerGameTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 game_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_home = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_home_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerGameTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerGameTimeNotify)
  return false;
#undef DO_
}

void PlayerGameTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 3;
  if (this->game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_time(), output);
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uid(), output);
  }

  // bool is_home = 13;
  if (this->is_home() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_home(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerGameTimeNotify)
}

::google::protobuf::uint8* PlayerGameTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 game_time = 3;
  if (this->game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_time(), target);
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uid(), target);
  }

  // bool is_home = 13;
  if (this->is_home() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_home(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerGameTimeNotify)
  return target;
}

size_t PlayerGameTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerGameTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_home = 13;
  if (this->is_home() != 0) {
    total_size += 1 + 1;
  }

  // uint32 game_time = 3;
  if (this->game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_time());
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerGameTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerGameTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerGameTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerGameTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerGameTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerGameTimeNotify)
    MergeFrom(*source);
  }
}

void PlayerGameTimeNotify::MergeFrom(const PlayerGameTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerGameTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_home() != 0) {
    set_is_home(from.is_home());
  }
  if (from.game_time() != 0) {
    set_game_time(from.game_time());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void PlayerGameTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerGameTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerGameTimeNotify::CopyFrom(const PlayerGameTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerGameTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerGameTimeNotify::IsInitialized() const {
  return true;
}

void PlayerGameTimeNotify::Swap(PlayerGameTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerGameTimeNotify::InternalSwap(PlayerGameTimeNotify* other) {
  using std::swap;
  swap(is_home_, other->is_home_);
  swap(game_time_, other->game_time_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerGameTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerGameTimeNotify

// uint32 uid = 7;
void PlayerGameTimeNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerGameTimeNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.uid)
  return uid_;
}
void PlayerGameTimeNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.uid)
}

// uint32 game_time = 3;
void PlayerGameTimeNotify::clear_game_time() {
  game_time_ = 0u;
}
::google::protobuf::uint32 PlayerGameTimeNotify::game_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.game_time)
  return game_time_;
}
void PlayerGameTimeNotify::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.game_time)
}

// bool is_home = 13;
void PlayerGameTimeNotify::clear_is_home() {
  is_home_ = false;
}
bool PlayerGameTimeNotify::is_home() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.is_home)
  return is_home_;
}
void PlayerGameTimeNotify::set_is_home(bool value) {
  
  is_home_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.is_home)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerPropNotify::PlayerPropNotify_PropMapEntry::PlayerPropNotify_PropMapEntry() {}
PlayerPropNotify::PlayerPropNotify_PropMapEntry::PlayerPropNotify_PropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerPropNotify::PlayerPropNotify_PropMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[17];
}
void PlayerPropNotify::PlayerPropNotify_PropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerPropNotify::PlayerPropNotify_PropMapEntry::MergeFrom(const PlayerPropNotify_PropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropNotify::kPropMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropNotify::PlayerPropNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerPropNotify)
}
PlayerPropNotify::PlayerPropNotify(const PlayerPropNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prop_map_.MergeFrom(from.prop_map_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerPropNotify)
}

void PlayerPropNotify::SharedCtor() {
  _cached_size_ = 0;
}

PlayerPropNotify::~PlayerPropNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerPropNotify)
  SharedDtor();
}

void PlayerPropNotify::SharedDtor() {
}

void PlayerPropNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPropNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropNotify& PlayerPropNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerPropNotify* PlayerPropNotify::New(::google::protobuf::Arena* arena) const {
  PlayerPropNotify* n = new PlayerPropNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPropNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerPropNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_map_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerPropNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerPropNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.PropValue> prop_map = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          PlayerPropNotify_PropMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerPropNotify_PropMapEntry,
              ::google::protobuf::uint32, ::proto::PropValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue > > parser(&prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerPropNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerPropNotify)
  return false;
#undef DO_
}

void PlayerPropNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerPropNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.PropValue> prop_map = 13;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerPropNotify)
}

::google::protobuf::uint8* PlayerPropNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerPropNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.PropValue> prop_map = 13;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerPropNotify)
  return target;
}

size_t PlayerPropNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerPropNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.PropValue> prop_map = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prop_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerPropNotify_PropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
        it = this->prop_map().begin();
        it != this->prop_map().end(); ++it) {
      entry.reset(prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPropNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerPropNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerPropNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerPropNotify)
    MergeFrom(*source);
  }
}

void PlayerPropNotify::MergeFrom(const PlayerPropNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerPropNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_map_.MergeFrom(from.prop_map_);
}

void PlayerPropNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerPropNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropNotify::CopyFrom(const PlayerPropNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerPropNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropNotify::IsInitialized() const {
  return true;
}

void PlayerPropNotify::Swap(PlayerPropNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropNotify::InternalSwap(PlayerPropNotify* other) {
  using std::swap;
  prop_map_.Swap(&other->prop_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPropNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPropNotify

// map<uint32, .proto.PropValue> prop_map = 13;
int PlayerPropNotify::prop_map_size() const {
  return prop_map_.size();
}
void PlayerPropNotify::clear_prop_map() {
  prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerPropNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerPropNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientTriggerEventNotify::kForceIdFieldNumber;
const int ClientTriggerEventNotify::kEventTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientTriggerEventNotify::ClientTriggerEventNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientTriggerEventNotify)
}
ClientTriggerEventNotify::ClientTriggerEventNotify(const ClientTriggerEventNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_type_, &from.event_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&force_id_) -
    reinterpret_cast<char*>(&event_type_)) + sizeof(force_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientTriggerEventNotify)
}

void ClientTriggerEventNotify::SharedCtor() {
  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_id_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(force_id_));
  _cached_size_ = 0;
}

ClientTriggerEventNotify::~ClientTriggerEventNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientTriggerEventNotify)
  SharedDtor();
}

void ClientTriggerEventNotify::SharedDtor() {
}

void ClientTriggerEventNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientTriggerEventNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientTriggerEventNotify& ClientTriggerEventNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientTriggerEventNotify* ClientTriggerEventNotify::New(::google::protobuf::Arena* arena) const {
  ClientTriggerEventNotify* n = new ClientTriggerEventNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientTriggerEventNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientTriggerEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_id_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(force_id_));
  _internal_metadata_.Clear();
}

bool ClientTriggerEventNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientTriggerEventNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.EventTriggerType event_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event_type(static_cast< ::proto::EventTriggerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 force_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &force_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientTriggerEventNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientTriggerEventNotify)
  return false;
#undef DO_
}

void ClientTriggerEventNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientTriggerEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.EventTriggerType event_type = 2;
  if (this->event_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->event_type(), output);
  }

  // uint32 force_id = 3;
  if (this->force_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->force_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientTriggerEventNotify)
}

::google::protobuf::uint8* ClientTriggerEventNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientTriggerEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.EventTriggerType event_type = 2;
  if (this->event_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->event_type(), target);
  }

  // uint32 force_id = 3;
  if (this->force_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->force_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientTriggerEventNotify)
  return target;
}

size_t ClientTriggerEventNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientTriggerEventNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EventTriggerType event_type = 2;
  if (this->event_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
  }

  // uint32 force_id = 3;
  if (this->force_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->force_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientTriggerEventNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientTriggerEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientTriggerEventNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientTriggerEventNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientTriggerEventNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientTriggerEventNotify)
    MergeFrom(*source);
  }
}

void ClientTriggerEventNotify::MergeFrom(const ClientTriggerEventNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientTriggerEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_type() != 0) {
    set_event_type(from.event_type());
  }
  if (from.force_id() != 0) {
    set_force_id(from.force_id());
  }
}

void ClientTriggerEventNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientTriggerEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientTriggerEventNotify::CopyFrom(const ClientTriggerEventNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientTriggerEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientTriggerEventNotify::IsInitialized() const {
  return true;
}

void ClientTriggerEventNotify::Swap(ClientTriggerEventNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientTriggerEventNotify::InternalSwap(ClientTriggerEventNotify* other) {
  using std::swap;
  swap(event_type_, other->event_type_);
  swap(force_id_, other->force_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientTriggerEventNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientTriggerEventNotify

// uint32 force_id = 3;
void ClientTriggerEventNotify::clear_force_id() {
  force_id_ = 0u;
}
::google::protobuf::uint32 ClientTriggerEventNotify::force_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.force_id)
  return force_id_;
}
void ClientTriggerEventNotify::set_force_id(::google::protobuf::uint32 value) {
  
  force_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.force_id)
}

// .proto.EventTriggerType event_type = 2;
void ClientTriggerEventNotify::clear_event_type() {
  event_type_ = 0;
}
::proto::EventTriggerType ClientTriggerEventNotify::event_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.event_type)
  return static_cast< ::proto::EventTriggerType >(event_type_);
}
void ClientTriggerEventNotify::set_event_type(::proto::EventTriggerType value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.event_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerPropReq::kPropListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerPropReq::SetPlayerPropReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerPropReq)
}
SetPlayerPropReq::SetPlayerPropReq(const SetPlayerPropReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prop_list_(from.prop_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerPropReq)
}

void SetPlayerPropReq::SharedCtor() {
  _cached_size_ = 0;
}

SetPlayerPropReq::~SetPlayerPropReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerPropReq)
  SharedDtor();
}

void SetPlayerPropReq::SharedDtor() {
}

void SetPlayerPropReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerPropReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerPropReq& SetPlayerPropReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerPropReq* SetPlayerPropReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerPropReq* n = new SetPlayerPropReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerPropReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerPropReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_list_.Clear();
  _internal_metadata_.Clear();
}

bool SetPlayerPropReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerPropReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.PropValue prop_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prop_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerPropReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerPropReq)
  return false;
#undef DO_
}

void SetPlayerPropReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerPropReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PropValue prop_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prop_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->prop_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerPropReq)
}

::google::protobuf::uint8* SetPlayerPropReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerPropReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PropValue prop_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prop_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->prop_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerPropReq)
  return target;
}

size_t SetPlayerPropReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerPropReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PropValue prop_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->prop_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerPropReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerPropReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerPropReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerPropReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerPropReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerPropReq)
    MergeFrom(*source);
  }
}

void SetPlayerPropReq::MergeFrom(const SetPlayerPropReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerPropReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_list_.MergeFrom(from.prop_list_);
}

void SetPlayerPropReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerPropReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerPropReq::CopyFrom(const SetPlayerPropReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerPropReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerPropReq::IsInitialized() const {
  return true;
}

void SetPlayerPropReq::Swap(SetPlayerPropReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerPropReq::InternalSwap(SetPlayerPropReq* other) {
  using std::swap;
  prop_list_.InternalSwap(&other->prop_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerPropReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerPropReq

// repeated .proto.PropValue prop_list = 7;
int SetPlayerPropReq::prop_list_size() const {
  return prop_list_.size();
}
void SetPlayerPropReq::clear_prop_list() {
  prop_list_.Clear();
}
const ::proto::PropValue& SetPlayerPropReq::prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Get(index);
}
::proto::PropValue* SetPlayerPropReq::mutable_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Mutable(index);
}
::proto::PropValue* SetPlayerPropReq::add_prop_list() {
  // @@protoc_insertion_point(field_add:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PropValue >*
SetPlayerPropReq::mutable_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetPlayerPropReq.prop_list)
  return &prop_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PropValue >&
SetPlayerPropReq::prop_list() const {
  // @@protoc_insertion_point(field_list:proto.SetPlayerPropReq.prop_list)
  return prop_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerPropRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerPropRsp::SetPlayerPropRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerPropRsp)
}
SetPlayerPropRsp::SetPlayerPropRsp(const SetPlayerPropRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerPropRsp)
}

void SetPlayerPropRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerPropRsp::~SetPlayerPropRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerPropRsp)
  SharedDtor();
}

void SetPlayerPropRsp::SharedDtor() {
}

void SetPlayerPropRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerPropRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerPropRsp& SetPlayerPropRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerPropRsp* SetPlayerPropRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerPropRsp* n = new SetPlayerPropRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerPropRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerPropRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerPropRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerPropRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerPropRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerPropRsp)
  return false;
#undef DO_
}

void SetPlayerPropRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerPropRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerPropRsp)
}

::google::protobuf::uint8* SetPlayerPropRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerPropRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerPropRsp)
  return target;
}

size_t SetPlayerPropRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerPropRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerPropRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerPropRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerPropRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerPropRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerPropRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerPropRsp)
    MergeFrom(*source);
  }
}

void SetPlayerPropRsp::MergeFrom(const SetPlayerPropRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerPropRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerPropRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerPropRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerPropRsp::CopyFrom(const SetPlayerPropRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerPropRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerPropRsp::IsInitialized() const {
  return true;
}

void SetPlayerPropRsp::Swap(SetPlayerPropRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerPropRsp::InternalSwap(SetPlayerPropRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerPropRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerPropRsp

// int32 retcode = 11;
void SetPlayerPropRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerPropRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropRsp.retcode)
  return retcode_;
}
void SetPlayerPropRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerPropRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBornDataReq::kAvatarIdFieldNumber;
const int SetPlayerBornDataReq::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBornDataReq::SetPlayerBornDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBornDataReq)
}
SetPlayerBornDataReq::SetPlayerBornDataReq(const SetPlayerBornDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  avatar_id_ = from.avatar_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBornDataReq)
}

void SetPlayerBornDataReq::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_id_ = 0u;
  _cached_size_ = 0;
}

SetPlayerBornDataReq::~SetPlayerBornDataReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBornDataReq)
  SharedDtor();
}

void SetPlayerBornDataReq::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerBornDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBornDataReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBornDataReq& SetPlayerBornDataReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBornDataReq* SetPlayerBornDataReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerBornDataReq* n = new SetPlayerBornDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBornDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBornDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetPlayerBornDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBornDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerBornDataReq.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBornDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBornDataReq)
  return false;
#undef DO_
}

void SetPlayerBornDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBornDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 2;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->avatar_id(), output);
  }

  // string nick_name = 13;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerBornDataReq.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->nick_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBornDataReq)
}

::google::protobuf::uint8* SetPlayerBornDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBornDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 2;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->avatar_id(), target);
  }

  // string nick_name = 13;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerBornDataReq.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->nick_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBornDataReq)
  return target;
}

size_t SetPlayerBornDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBornDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nick_name = 13;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // uint32 avatar_id = 2;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBornDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBornDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBornDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBornDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBornDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBornDataReq)
    MergeFrom(*source);
  }
}

void SetPlayerBornDataReq::MergeFrom(const SetPlayerBornDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBornDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
}

void SetPlayerBornDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBornDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBornDataReq::CopyFrom(const SetPlayerBornDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBornDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBornDataReq::IsInitialized() const {
  return true;
}

void SetPlayerBornDataReq::Swap(SetPlayerBornDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBornDataReq::InternalSwap(SetPlayerBornDataReq* other) {
  using std::swap;
  nick_name_.Swap(&other->nick_name_);
  swap(avatar_id_, other->avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBornDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBornDataReq

// uint32 avatar_id = 2;
void SetPlayerBornDataReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SetPlayerBornDataReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.avatar_id)
  return avatar_id_;
}
void SetPlayerBornDataReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.avatar_id)
}

// string nick_name = 13;
void SetPlayerBornDataReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerBornDataReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.GetNoArena();
}
void SetPlayerBornDataReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.nick_name)
}
#if LANG_CXX11
void SetPlayerBornDataReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerBornDataReq.nick_name)
}
#endif
void SetPlayerBornDataReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerBornDataReq.nick_name)
}
void SetPlayerBornDataReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerBornDataReq.nick_name)
}
::std::string* SetPlayerBornDataReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerBornDataReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBornDataReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerBornDataReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBornDataReq.nick_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBornDataRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBornDataRsp::SetPlayerBornDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBornDataRsp)
}
SetPlayerBornDataRsp::SetPlayerBornDataRsp(const SetPlayerBornDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBornDataRsp)
}

void SetPlayerBornDataRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerBornDataRsp::~SetPlayerBornDataRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBornDataRsp)
  SharedDtor();
}

void SetPlayerBornDataRsp::SharedDtor() {
}

void SetPlayerBornDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBornDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBornDataRsp& SetPlayerBornDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBornDataRsp* SetPlayerBornDataRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerBornDataRsp* n = new SetPlayerBornDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBornDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBornDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerBornDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBornDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBornDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBornDataRsp)
  return false;
#undef DO_
}

void SetPlayerBornDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBornDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBornDataRsp)
}

::google::protobuf::uint8* SetPlayerBornDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBornDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBornDataRsp)
  return target;
}

size_t SetPlayerBornDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBornDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 10;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBornDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBornDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBornDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBornDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBornDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBornDataRsp)
    MergeFrom(*source);
  }
}

void SetPlayerBornDataRsp::MergeFrom(const SetPlayerBornDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBornDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerBornDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBornDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBornDataRsp::CopyFrom(const SetPlayerBornDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBornDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBornDataRsp::IsInitialized() const {
  return true;
}

void SetPlayerBornDataRsp::Swap(SetPlayerBornDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBornDataRsp::InternalSwap(SetPlayerBornDataRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBornDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBornDataRsp

// int32 retcode = 10;
void SetPlayerBornDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerBornDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataRsp.retcode)
  return retcode_;
}
void SetPlayerBornDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoSetPlayerBornDataNotify::DoSetPlayerBornDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DoSetPlayerBornDataNotify)
}
DoSetPlayerBornDataNotify::DoSetPlayerBornDataNotify(const DoSetPlayerBornDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DoSetPlayerBornDataNotify)
}

void DoSetPlayerBornDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

DoSetPlayerBornDataNotify::~DoSetPlayerBornDataNotify() {
  // @@protoc_insertion_point(destructor:proto.DoSetPlayerBornDataNotify)
  SharedDtor();
}

void DoSetPlayerBornDataNotify::SharedDtor() {
}

void DoSetPlayerBornDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoSetPlayerBornDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoSetPlayerBornDataNotify& DoSetPlayerBornDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DoSetPlayerBornDataNotify* DoSetPlayerBornDataNotify::New(::google::protobuf::Arena* arena) const {
  DoSetPlayerBornDataNotify* n = new DoSetPlayerBornDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoSetPlayerBornDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DoSetPlayerBornDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DoSetPlayerBornDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DoSetPlayerBornDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DoSetPlayerBornDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DoSetPlayerBornDataNotify)
  return false;
#undef DO_
}

void DoSetPlayerBornDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DoSetPlayerBornDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DoSetPlayerBornDataNotify)
}

::google::protobuf::uint8* DoSetPlayerBornDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DoSetPlayerBornDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DoSetPlayerBornDataNotify)
  return target;
}

size_t DoSetPlayerBornDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DoSetPlayerBornDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoSetPlayerBornDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DoSetPlayerBornDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DoSetPlayerBornDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoSetPlayerBornDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DoSetPlayerBornDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DoSetPlayerBornDataNotify)
    MergeFrom(*source);
  }
}

void DoSetPlayerBornDataNotify::MergeFrom(const DoSetPlayerBornDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DoSetPlayerBornDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DoSetPlayerBornDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DoSetPlayerBornDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoSetPlayerBornDataNotify::CopyFrom(const DoSetPlayerBornDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DoSetPlayerBornDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoSetPlayerBornDataNotify::IsInitialized() const {
  return true;
}

void DoSetPlayerBornDataNotify::Swap(DoSetPlayerBornDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoSetPlayerBornDataNotify::InternalSwap(DoSetPlayerBornDataNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoSetPlayerBornDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DoSetPlayerBornDataNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropChangeNotify::kPropDeltaFieldNumber;
const int PlayerPropChangeNotify::kPropTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropChangeNotify::PlayerPropChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerPropChangeNotify)
}
PlayerPropChangeNotify::PlayerPropChangeNotify(const PlayerPropChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&prop_type_, &from.prop_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&prop_delta_) -
    reinterpret_cast<char*>(&prop_type_)) + sizeof(prop_delta_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerPropChangeNotify)
}

void PlayerPropChangeNotify::SharedCtor() {
  ::memset(&prop_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_delta_) -
      reinterpret_cast<char*>(&prop_type_)) + sizeof(prop_delta_));
  _cached_size_ = 0;
}

PlayerPropChangeNotify::~PlayerPropChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerPropChangeNotify)
  SharedDtor();
}

void PlayerPropChangeNotify::SharedDtor() {
}

void PlayerPropChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPropChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropChangeNotify& PlayerPropChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerPropChangeNotify* PlayerPropChangeNotify::New(::google::protobuf::Arena* arena) const {
  PlayerPropChangeNotify* n = new PlayerPropChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPropChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerPropChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&prop_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prop_delta_) -
      reinterpret_cast<char*>(&prop_type_)) + sizeof(prop_delta_));
  _internal_metadata_.Clear();
}

bool PlayerPropChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerPropChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 prop_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prop_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 prop_delta = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prop_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerPropChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerPropChangeNotify)
  return false;
#undef DO_
}

void PlayerPropChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerPropChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 prop_type = 12;
  if (this->prop_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->prop_type(), output);
  }

  // uint32 prop_delta = 13;
  if (this->prop_delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->prop_delta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerPropChangeNotify)
}

::google::protobuf::uint8* PlayerPropChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerPropChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 prop_type = 12;
  if (this->prop_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->prop_type(), target);
  }

  // uint32 prop_delta = 13;
  if (this->prop_delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->prop_delta(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerPropChangeNotify)
  return target;
}

size_t PlayerPropChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerPropChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 prop_type = 12;
  if (this->prop_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prop_type());
  }

  // uint32 prop_delta = 13;
  if (this->prop_delta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prop_delta());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPropChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerPropChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerPropChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerPropChangeNotify)
    MergeFrom(*source);
  }
}

void PlayerPropChangeNotify::MergeFrom(const PlayerPropChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerPropChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prop_type() != 0) {
    set_prop_type(from.prop_type());
  }
  if (from.prop_delta() != 0) {
    set_prop_delta(from.prop_delta());
  }
}

void PlayerPropChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerPropChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropChangeNotify::CopyFrom(const PlayerPropChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerPropChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropChangeNotify::IsInitialized() const {
  return true;
}

void PlayerPropChangeNotify::Swap(PlayerPropChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropChangeNotify::InternalSwap(PlayerPropChangeNotify* other) {
  using std::swap;
  swap(prop_type_, other->prop_type_);
  swap(prop_delta_, other->prop_delta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPropChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPropChangeNotify

// uint32 prop_delta = 13;
void PlayerPropChangeNotify::clear_prop_delta() {
  prop_delta_ = 0u;
}
::google::protobuf::uint32 PlayerPropChangeNotify::prop_delta() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_delta)
  return prop_delta_;
}
void PlayerPropChangeNotify::set_prop_delta(::google::protobuf::uint32 value) {
  
  prop_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_delta)
}

// uint32 prop_type = 12;
void PlayerPropChangeNotify::clear_prop_type() {
  prop_type_ = 0u;
}
::google::protobuf::uint32 PlayerPropChangeNotify::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_type)
  return prop_type_;
}
void PlayerPropChangeNotify::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerNameReq::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerNameReq::SetPlayerNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerNameReq)
}
SetPlayerNameReq::SetPlayerNameReq(const SetPlayerNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerNameReq)
}

void SetPlayerNameReq::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetPlayerNameReq::~SetPlayerNameReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerNameReq)
  SharedDtor();
}

void SetPlayerNameReq::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerNameReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerNameReq& SetPlayerNameReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerNameReq* SetPlayerNameReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerNameReq* n = new SetPlayerNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetPlayerNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nick_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerNameReq.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerNameReq)
  return false;
#undef DO_
}

void SetPlayerNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameReq.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nick_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerNameReq)
}

::google::protobuf::uint8* SetPlayerNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameReq.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nick_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerNameReq)
  return target;
}

size_t SetPlayerNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerNameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nick_name = 1;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerNameReq)
    MergeFrom(*source);
  }
}

void SetPlayerNameReq::MergeFrom(const SetPlayerNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
}

void SetPlayerNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerNameReq::CopyFrom(const SetPlayerNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerNameReq::IsInitialized() const {
  return true;
}

void SetPlayerNameReq::Swap(SetPlayerNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerNameReq::InternalSwap(SetPlayerNameReq* other) {
  using std::swap;
  nick_name_.Swap(&other->nick_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerNameReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerNameReq

// string nick_name = 1;
void SetPlayerNameReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerNameReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameReq.nick_name)
  return nick_name_.GetNoArena();
}
void SetPlayerNameReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameReq.nick_name)
}
#if LANG_CXX11
void SetPlayerNameReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameReq.nick_name)
}
#endif
void SetPlayerNameReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameReq.nick_name)
}
void SetPlayerNameReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameReq.nick_name)
}
::std::string* SetPlayerNameReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerNameReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerNameReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameReq.nick_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerNameRsp::kRetcodeFieldNumber;
const int SetPlayerNameRsp::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerNameRsp::SetPlayerNameRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerNameRsp)
}
SetPlayerNameRsp::SetPlayerNameRsp(const SetPlayerNameRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_name().size() > 0) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerNameRsp)
}

void SetPlayerNameRsp::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerNameRsp::~SetPlayerNameRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerNameRsp)
  SharedDtor();
}

void SetPlayerNameRsp::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerNameRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerNameRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerNameRsp& SetPlayerNameRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerNameRsp* SetPlayerNameRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerNameRsp* n = new SetPlayerNameRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerNameRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerNameRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerNameRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), static_cast<int>(this->nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerNameRsp.nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerNameRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerNameRsp)
  return false;
#undef DO_
}

void SetPlayerNameRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  // string nick_name = 14;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameRsp.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->nick_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerNameRsp)
}

::google::protobuf::uint8* SetPlayerNameRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerNameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  // string nick_name = 14;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), static_cast<int>(this->nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerNameRsp.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->nick_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerNameRsp)
  return target;
}

size_t SetPlayerNameRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerNameRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nick_name = 14;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerNameRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerNameRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerNameRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerNameRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerNameRsp)
    MergeFrom(*source);
  }
}

void SetPlayerNameRsp::MergeFrom(const SetPlayerNameRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerNameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerNameRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerNameRsp::CopyFrom(const SetPlayerNameRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerNameRsp::IsInitialized() const {
  return true;
}

void SetPlayerNameRsp::Swap(SetPlayerNameRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerNameRsp::InternalSwap(SetPlayerNameRsp* other) {
  using std::swap;
  nick_name_.Swap(&other->nick_name_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerNameRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerNameRsp

// int32 retcode = 9;
void SetPlayerNameRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.retcode)
  return retcode_;
}
void SetPlayerNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.retcode)
}

// string nick_name = 14;
void SetPlayerNameRsp::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerNameRsp::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.GetNoArena();
}
void SetPlayerNameRsp::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.nick_name)
}
#if LANG_CXX11
void SetPlayerNameRsp::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameRsp.nick_name)
}
#endif
void SetPlayerNameRsp::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameRsp.nick_name)
}
void SetPlayerNameRsp::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameRsp.nick_name)
}
::std::string* SetPlayerNameRsp::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerNameRsp::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameRsp.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerNameRsp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameRsp.nick_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOpenStateReq::kKeyFieldNumber;
const int SetOpenStateReq::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOpenStateReq::SetOpenStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetOpenStateReq)
}
SetOpenStateReq::SetOpenStateReq(const SetOpenStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_) -
    reinterpret_cast<char*>(&value_)) + sizeof(key_));
  // @@protoc_insertion_point(copy_constructor:proto.SetOpenStateReq)
}

void SetOpenStateReq::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&value_)) + sizeof(key_));
  _cached_size_ = 0;
}

SetOpenStateReq::~SetOpenStateReq() {
  // @@protoc_insertion_point(destructor:proto.SetOpenStateReq)
  SharedDtor();
}

void SetOpenStateReq::SharedDtor() {
}

void SetOpenStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOpenStateReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOpenStateReq& SetOpenStateReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetOpenStateReq* SetOpenStateReq::New(::google::protobuf::Arena* arena) const {
  SetOpenStateReq* n = new SetOpenStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetOpenStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetOpenStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&value_)) + sizeof(key_));
  _internal_metadata_.Clear();
}

bool SetOpenStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetOpenStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 key = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetOpenStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetOpenStateReq)
  return false;
#undef DO_
}

void SetOpenStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetOpenStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 5;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->value(), output);
  }

  // uint32 key = 12;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetOpenStateReq)
}

::google::protobuf::uint8* SetOpenStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetOpenStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 5;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->value(), target);
  }

  // uint32 key = 12;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetOpenStateReq)
  return target;
}

size_t SetOpenStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetOpenStateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value = 5;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  // uint32 key = 12;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOpenStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetOpenStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOpenStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOpenStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetOpenStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetOpenStateReq)
    MergeFrom(*source);
  }
}

void SetOpenStateReq::MergeFrom(const SetOpenStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetOpenStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void SetOpenStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetOpenStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOpenStateReq::CopyFrom(const SetOpenStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetOpenStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOpenStateReq::IsInitialized() const {
  return true;
}

void SetOpenStateReq::Swap(SetOpenStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOpenStateReq::InternalSwap(SetOpenStateReq* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOpenStateReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetOpenStateReq

// uint32 key = 12;
void SetOpenStateReq::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 SetOpenStateReq::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.key)
  return key_;
}
void SetOpenStateReq::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.key)
}

// uint32 value = 5;
void SetOpenStateReq::clear_value() {
  value_ = 0u;
}
::google::protobuf::uint32 SetOpenStateReq::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.value)
  return value_;
}
void SetOpenStateReq::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOpenStateRsp::kKeyFieldNumber;
const int SetOpenStateRsp::kRetcodeFieldNumber;
const int SetOpenStateRsp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOpenStateRsp::SetOpenStateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetOpenStateRsp)
}
SetOpenStateRsp::SetOpenStateRsp(const SetOpenStateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&value_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.SetOpenStateRsp)
}

void SetOpenStateRsp::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&value_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SetOpenStateRsp::~SetOpenStateRsp() {
  // @@protoc_insertion_point(destructor:proto.SetOpenStateRsp)
  SharedDtor();
}

void SetOpenStateRsp::SharedDtor() {
}

void SetOpenStateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOpenStateRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOpenStateRsp& SetOpenStateRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetOpenStateRsp* SetOpenStateRsp::New(::google::protobuf::Arena* arena) const {
  SetOpenStateRsp* n = new SetOpenStateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetOpenStateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetOpenStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&value_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool SetOpenStateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetOpenStateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetOpenStateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetOpenStateRsp)
  return false;
#undef DO_
}

void SetOpenStateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetOpenStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 9;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->key(), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  // uint32 value = 15;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetOpenStateRsp)
}

::google::protobuf::uint8* SetOpenStateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetOpenStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 9;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->key(), target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  // uint32 value = 15;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetOpenStateRsp)
  return target;
}

size_t SetOpenStateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetOpenStateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value = 15;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  // uint32 key = 9;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOpenStateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetOpenStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOpenStateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOpenStateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetOpenStateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetOpenStateRsp)
    MergeFrom(*source);
  }
}

void SetOpenStateRsp::MergeFrom(const SetOpenStateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetOpenStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetOpenStateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetOpenStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOpenStateRsp::CopyFrom(const SetOpenStateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetOpenStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOpenStateRsp::IsInitialized() const {
  return true;
}

void SetOpenStateRsp::Swap(SetOpenStateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOpenStateRsp::InternalSwap(SetOpenStateRsp* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(key_, other->key_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOpenStateRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetOpenStateRsp

// uint32 key = 9;
void SetOpenStateRsp::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 SetOpenStateRsp::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.key)
  return key_;
}
void SetOpenStateRsp::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.key)
}

// int32 retcode = 14;
void SetOpenStateRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetOpenStateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.retcode)
  return retcode_;
}
void SetOpenStateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.retcode)
}

// uint32 value = 15;
void SetOpenStateRsp::clear_value() {
  value_ = 0u;
}
::google::protobuf::uint32 SetOpenStateRsp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.value)
  return value_;
}
void SetOpenStateRsp::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::OpenStateUpdateNotify_OpenStateMapEntry() {}
OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::OpenStateUpdateNotify_OpenStateMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[30];
}
void OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void OpenStateUpdateNotify::OpenStateUpdateNotify_OpenStateMapEntry::MergeFrom(const OpenStateUpdateNotify_OpenStateMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenStateUpdateNotify::kOpenStateMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenStateUpdateNotify::OpenStateUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OpenStateUpdateNotify)
}
OpenStateUpdateNotify::OpenStateUpdateNotify(const OpenStateUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  open_state_map_.MergeFrom(from.open_state_map_);
  // @@protoc_insertion_point(copy_constructor:proto.OpenStateUpdateNotify)
}

void OpenStateUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

OpenStateUpdateNotify::~OpenStateUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.OpenStateUpdateNotify)
  SharedDtor();
}

void OpenStateUpdateNotify::SharedDtor() {
}

void OpenStateUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenStateUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenStateUpdateNotify& OpenStateUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenStateUpdateNotify* OpenStateUpdateNotify::New(::google::protobuf::Arena* arena) const {
  OpenStateUpdateNotify* n = new OpenStateUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenStateUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OpenStateUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_state_map_.Clear();
  _internal_metadata_.Clear();
}

bool OpenStateUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OpenStateUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> open_state_map = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          OpenStateUpdateNotify_OpenStateMapEntry::Parser< ::google::protobuf::internal::MapField<
              OpenStateUpdateNotify_OpenStateMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&open_state_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OpenStateUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OpenStateUpdateNotify)
  return false;
#undef DO_
}

void OpenStateUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OpenStateUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 6;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OpenStateUpdateNotify)
}

::google::protobuf::uint8* OpenStateUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OpenStateUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 6;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OpenStateUpdateNotify)
  return target;
}

size_t OpenStateUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OpenStateUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> open_state_map = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->open_state_map_size());
  {
    ::google::protobuf::scoped_ptr<OpenStateUpdateNotify_OpenStateMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->open_state_map().begin();
        it != this->open_state_map().end(); ++it) {
      entry.reset(open_state_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenStateUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OpenStateUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenStateUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenStateUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OpenStateUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OpenStateUpdateNotify)
    MergeFrom(*source);
  }
}

void OpenStateUpdateNotify::MergeFrom(const OpenStateUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OpenStateUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_state_map_.MergeFrom(from.open_state_map_);
}

void OpenStateUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OpenStateUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenStateUpdateNotify::CopyFrom(const OpenStateUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OpenStateUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenStateUpdateNotify::IsInitialized() const {
  return true;
}

void OpenStateUpdateNotify::Swap(OpenStateUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenStateUpdateNotify::InternalSwap(OpenStateUpdateNotify* other) {
  using std::swap;
  open_state_map_.Swap(&other->open_state_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenStateUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenStateUpdateNotify

// map<uint32, uint32> open_state_map = 6;
int OpenStateUpdateNotify::open_state_map_size() const {
  return open_state_map_.size();
}
void OpenStateUpdateNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateUpdateNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateUpdateNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::OpenStateChangeNotify_OpenStateMapEntry() {}
OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::OpenStateChangeNotify_OpenStateMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[32];
}
void OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void OpenStateChangeNotify::OpenStateChangeNotify_OpenStateMapEntry::MergeFrom(const OpenStateChangeNotify_OpenStateMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenStateChangeNotify::kOpenStateMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenStateChangeNotify::OpenStateChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OpenStateChangeNotify)
}
OpenStateChangeNotify::OpenStateChangeNotify(const OpenStateChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  open_state_map_.MergeFrom(from.open_state_map_);
  // @@protoc_insertion_point(copy_constructor:proto.OpenStateChangeNotify)
}

void OpenStateChangeNotify::SharedCtor() {
  _cached_size_ = 0;
}

OpenStateChangeNotify::~OpenStateChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.OpenStateChangeNotify)
  SharedDtor();
}

void OpenStateChangeNotify::SharedDtor() {
}

void OpenStateChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenStateChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenStateChangeNotify& OpenStateChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenStateChangeNotify* OpenStateChangeNotify::New(::google::protobuf::Arena* arena) const {
  OpenStateChangeNotify* n = new OpenStateChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenStateChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OpenStateChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_state_map_.Clear();
  _internal_metadata_.Clear();
}

bool OpenStateChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OpenStateChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> open_state_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          OpenStateChangeNotify_OpenStateMapEntry::Parser< ::google::protobuf::internal::MapField<
              OpenStateChangeNotify_OpenStateMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&open_state_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OpenStateChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OpenStateChangeNotify)
  return false;
#undef DO_
}

void OpenStateChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OpenStateChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 4;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OpenStateChangeNotify)
}

::google::protobuf::uint8* OpenStateChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OpenStateChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> open_state_map = 4;
  if (!this->open_state_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->open_state_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->open_state_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(open_state_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->open_state_map().begin();
          it != this->open_state_map().end(); ++it) {
        entry.reset(open_state_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OpenStateChangeNotify)
  return target;
}

size_t OpenStateChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OpenStateChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> open_state_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->open_state_map_size());
  {
    ::google::protobuf::scoped_ptr<OpenStateChangeNotify_OpenStateMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->open_state_map().begin();
        it != this->open_state_map().end(); ++it) {
      entry.reset(open_state_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenStateChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OpenStateChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenStateChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenStateChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OpenStateChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OpenStateChangeNotify)
    MergeFrom(*source);
  }
}

void OpenStateChangeNotify::MergeFrom(const OpenStateChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OpenStateChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_state_map_.MergeFrom(from.open_state_map_);
}

void OpenStateChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OpenStateChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenStateChangeNotify::CopyFrom(const OpenStateChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OpenStateChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenStateChangeNotify::IsInitialized() const {
  return true;
}

void OpenStateChangeNotify::Swap(OpenStateChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenStateChangeNotify::InternalSwap(OpenStateChangeNotify* other) {
  using std::swap;
  open_state_map_.Swap(&other->open_state_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenStateChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenStateChangeNotify

// map<uint32, uint32> open_state_map = 4;
int OpenStateChangeNotify::open_state_map_size() const {
  return open_state_map_.size();
}
void OpenStateChangeNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateChangeNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateChangeNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookReq::kCookCountFieldNumber;
const int PlayerCookReq::kQteQualityFieldNumber;
const int PlayerCookReq::kRecipeIdFieldNumber;
const int PlayerCookReq::kAssistAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookReq::PlayerCookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookReq)
}
PlayerCookReq::PlayerCookReq(const PlayerCookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cook_count_, &from.cook_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&assist_avatar_) -
    reinterpret_cast<char*>(&cook_count_)) + sizeof(assist_avatar_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookReq)
}

void PlayerCookReq::SharedCtor() {
  ::memset(&cook_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_avatar_) -
      reinterpret_cast<char*>(&cook_count_)) + sizeof(assist_avatar_));
  _cached_size_ = 0;
}

PlayerCookReq::~PlayerCookReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookReq)
  SharedDtor();
}

void PlayerCookReq::SharedDtor() {
}

void PlayerCookReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookReq& PlayerCookReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookReq* PlayerCookReq::New(::google::protobuf::Arena* arena) const {
  PlayerCookReq* n = new PlayerCookReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cook_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assist_avatar_) -
      reinterpret_cast<char*>(&cook_count_)) + sizeof(assist_avatar_));
  _internal_metadata_.Clear();
}

bool PlayerCookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cook_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cook_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 recipe_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qte_quality = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qte_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 assist_avatar = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assist_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookReq)
  return false;
#undef DO_
}

void PlayerCookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cook_count = 1;
  if (this->cook_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cook_count(), output);
  }

  // uint32 recipe_id = 8;
  if (this->recipe_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->recipe_id(), output);
  }

  // uint32 qte_quality = 12;
  if (this->qte_quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->qte_quality(), output);
  }

  // uint32 assist_avatar = 14;
  if (this->assist_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->assist_avatar(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookReq)
}

::google::protobuf::uint8* PlayerCookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cook_count = 1;
  if (this->cook_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cook_count(), target);
  }

  // uint32 recipe_id = 8;
  if (this->recipe_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->recipe_id(), target);
  }

  // uint32 qte_quality = 12;
  if (this->qte_quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->qte_quality(), target);
  }

  // uint32 assist_avatar = 14;
  if (this->assist_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->assist_avatar(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookReq)
  return target;
}

size_t PlayerCookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cook_count = 1;
  if (this->cook_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cook_count());
  }

  // uint32 recipe_id = 8;
  if (this->recipe_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_id());
  }

  // uint32 qte_quality = 12;
  if (this->qte_quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qte_quality());
  }

  // uint32 assist_avatar = 14;
  if (this->assist_avatar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->assist_avatar());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookReq)
    MergeFrom(*source);
  }
}

void PlayerCookReq::MergeFrom(const PlayerCookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cook_count() != 0) {
    set_cook_count(from.cook_count());
  }
  if (from.recipe_id() != 0) {
    set_recipe_id(from.recipe_id());
  }
  if (from.qte_quality() != 0) {
    set_qte_quality(from.qte_quality());
  }
  if (from.assist_avatar() != 0) {
    set_assist_avatar(from.assist_avatar());
  }
}

void PlayerCookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookReq::CopyFrom(const PlayerCookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookReq::IsInitialized() const {
  return true;
}

void PlayerCookReq::Swap(PlayerCookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookReq::InternalSwap(PlayerCookReq* other) {
  using std::swap;
  swap(cook_count_, other->cook_count_);
  swap(recipe_id_, other->recipe_id_);
  swap(qte_quality_, other->qte_quality_);
  swap(assist_avatar_, other->assist_avatar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookReq

// uint32 cook_count = 1;
void PlayerCookReq::clear_cook_count() {
  cook_count_ = 0u;
}
::google::protobuf::uint32 PlayerCookReq::cook_count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.cook_count)
  return cook_count_;
}
void PlayerCookReq::set_cook_count(::google::protobuf::uint32 value) {
  
  cook_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.cook_count)
}

// uint32 qte_quality = 12;
void PlayerCookReq::clear_qte_quality() {
  qte_quality_ = 0u;
}
::google::protobuf::uint32 PlayerCookReq::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.qte_quality)
  return qte_quality_;
}
void PlayerCookReq::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.qte_quality)
}

// uint32 recipe_id = 8;
void PlayerCookReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
::google::protobuf::uint32 PlayerCookReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.recipe_id)
  return recipe_id_;
}
void PlayerCookReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.recipe_id)
}

// uint32 assist_avatar = 14;
void PlayerCookReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
::google::protobuf::uint32 PlayerCookReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.assist_avatar)
  return assist_avatar_;
}
void PlayerCookReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.assist_avatar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookRsp::kExtralItemListFieldNumber;
const int PlayerCookRsp::kCookCountFieldNumber;
const int PlayerCookRsp::kItemListFieldNumber;
const int PlayerCookRsp::kRetcodeFieldNumber;
const int PlayerCookRsp::kQteQualityFieldNumber;
const int PlayerCookRsp::kRecipeDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookRsp::PlayerCookRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookRsp)
}
PlayerCookRsp::PlayerCookRsp(const PlayerCookRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      extral_item_list_(from.extral_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_recipe_data()) {
    recipe_data_ = new ::proto::CookRecipeData(*from.recipe_data_);
  } else {
    recipe_data_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&cook_count_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(cook_count_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookRsp)
}

void PlayerCookRsp::SharedCtor() {
  ::memset(&recipe_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cook_count_) -
      reinterpret_cast<char*>(&recipe_data_)) + sizeof(cook_count_));
  _cached_size_ = 0;
}

PlayerCookRsp::~PlayerCookRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookRsp)
  SharedDtor();
}

void PlayerCookRsp::SharedDtor() {
  if (this != internal_default_instance()) delete recipe_data_;
}

void PlayerCookRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookRsp& PlayerCookRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookRsp* PlayerCookRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCookRsp* n = new PlayerCookRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  extral_item_list_.Clear();
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) {
    delete recipe_data_;
  }
  recipe_data_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cook_count_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cook_count_));
  _internal_metadata_.Clear();
}

bool PlayerCookRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qte_quality = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qte_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CookRecipeData recipe_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recipe_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cook_count = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cook_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam extral_item_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extral_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookRsp)
  return false;
#undef DO_
}

void PlayerCookRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // uint32 qte_quality = 5;
  if (this->qte_quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->qte_quality(), output);
  }

  // .proto.CookRecipeData recipe_data = 7;
  if (this->has_recipe_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->recipe_data_, output);
  }

  // repeated .proto.ItemParam item_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->item_list(static_cast<int>(i)), output);
  }

  // uint32 cook_count = 12;
  if (this->cook_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->cook_count(), output);
  }

  // repeated .proto.ItemParam extral_item_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extral_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->extral_item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookRsp)
}

::google::protobuf::uint8* PlayerCookRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // uint32 qte_quality = 5;
  if (this->qte_quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->qte_quality(), target);
  }

  // .proto.CookRecipeData recipe_data = 7;
  if (this->has_recipe_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->recipe_data_, deterministic, target);
  }

  // repeated .proto.ItemParam item_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 cook_count = 12;
  if (this->cook_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->cook_count(), target);
  }

  // repeated .proto.ItemParam extral_item_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extral_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->extral_item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookRsp)
  return target;
}

size_t PlayerCookRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.ItemParam extral_item_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->extral_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extral_item_list(static_cast<int>(i)));
    }
  }

  // .proto.CookRecipeData recipe_data = 7;
  if (this->has_recipe_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->recipe_data_);
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 qte_quality = 5;
  if (this->qte_quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qte_quality());
  }

  // uint32 cook_count = 12;
  if (this->cook_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cook_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookRsp)
    MergeFrom(*source);
  }
}

void PlayerCookRsp::MergeFrom(const PlayerCookRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  extral_item_list_.MergeFrom(from.extral_item_list_);
  if (from.has_recipe_data()) {
    mutable_recipe_data()->::proto::CookRecipeData::MergeFrom(from.recipe_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.qte_quality() != 0) {
    set_qte_quality(from.qte_quality());
  }
  if (from.cook_count() != 0) {
    set_cook_count(from.cook_count());
  }
}

void PlayerCookRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookRsp::CopyFrom(const PlayerCookRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookRsp::IsInitialized() const {
  return true;
}

void PlayerCookRsp::Swap(PlayerCookRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookRsp::InternalSwap(PlayerCookRsp* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  extral_item_list_.InternalSwap(&other->extral_item_list_);
  swap(recipe_data_, other->recipe_data_);
  swap(retcode_, other->retcode_);
  swap(qte_quality_, other->qte_quality_);
  swap(cook_count_, other->cook_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookRsp

// repeated .proto.ItemParam extral_item_list = 15;
int PlayerCookRsp::extral_item_list_size() const {
  return extral_item_list_.size();
}
void PlayerCookRsp::clear_extral_item_list() {
  extral_item_list_.Clear();
}
const ::proto::ItemParam& PlayerCookRsp::extral_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_.Get(index);
}
::proto::ItemParam* PlayerCookRsp::mutable_extral_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_.Mutable(index);
}
::proto::ItemParam* PlayerCookRsp::add_extral_item_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerCookRsp::mutable_extral_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCookRsp.extral_item_list)
  return &extral_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerCookRsp::extral_item_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCookRsp.extral_item_list)
  return extral_item_list_;
}

// uint32 cook_count = 12;
void PlayerCookRsp::clear_cook_count() {
  cook_count_ = 0u;
}
::google::protobuf::uint32 PlayerCookRsp::cook_count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.cook_count)
  return cook_count_;
}
void PlayerCookRsp::set_cook_count(::google::protobuf::uint32 value) {
  
  cook_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.cook_count)
}

// repeated .proto.ItemParam item_list = 11;
int PlayerCookRsp::item_list_size() const {
  return item_list_.size();
}
void PlayerCookRsp::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& PlayerCookRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* PlayerCookRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* PlayerCookRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCookRsp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerCookRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCookRsp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerCookRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCookRsp.item_list)
  return item_list_;
}

// int32 retcode = 3;
void PlayerCookRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.retcode)
  return retcode_;
}
void PlayerCookRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.retcode)
}

// uint32 qte_quality = 5;
void PlayerCookRsp::clear_qte_quality() {
  qte_quality_ = 0u;
}
::google::protobuf::uint32 PlayerCookRsp::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.qte_quality)
  return qte_quality_;
}
void PlayerCookRsp::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.qte_quality)
}

// .proto.CookRecipeData recipe_data = 7;
bool PlayerCookRsp::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
void PlayerCookRsp::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
const ::proto::CookRecipeData& PlayerCookRsp::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
::proto::CookRecipeData* PlayerCookRsp::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.recipe_data)
  return recipe_data_;
}
::proto::CookRecipeData* PlayerCookRsp::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCookRsp.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
void PlayerCookRsp::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCookRsp.recipe_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRandomCookReq::kMaterialListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRandomCookReq::PlayerRandomCookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerRandomCookReq)
}
PlayerRandomCookReq::PlayerRandomCookReq(const PlayerRandomCookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      material_list_(from.material_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerRandomCookReq)
}

void PlayerRandomCookReq::SharedCtor() {
  _cached_size_ = 0;
}

PlayerRandomCookReq::~PlayerRandomCookReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerRandomCookReq)
  SharedDtor();
}

void PlayerRandomCookReq::SharedDtor() {
}

void PlayerRandomCookReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRandomCookReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRandomCookReq& PlayerRandomCookReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerRandomCookReq* PlayerRandomCookReq::New(::google::protobuf::Arena* arena) const {
  PlayerRandomCookReq* n = new PlayerRandomCookReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRandomCookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerRandomCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  material_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerRandomCookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerRandomCookReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ItemParam material_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_material_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerRandomCookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerRandomCookReq)
  return false;
#undef DO_
}

void PlayerRandomCookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerRandomCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam material_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->material_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->material_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerRandomCookReq)
}

::google::protobuf::uint8* PlayerRandomCookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerRandomCookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ItemParam material_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->material_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->material_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerRandomCookReq)
  return target;
}

size_t PlayerRandomCookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerRandomCookReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam material_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->material_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->material_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRandomCookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerRandomCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRandomCookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRandomCookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerRandomCookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerRandomCookReq)
    MergeFrom(*source);
  }
}

void PlayerRandomCookReq::MergeFrom(const PlayerRandomCookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerRandomCookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  material_list_.MergeFrom(from.material_list_);
}

void PlayerRandomCookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerRandomCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRandomCookReq::CopyFrom(const PlayerRandomCookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerRandomCookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRandomCookReq::IsInitialized() const {
  return true;
}

void PlayerRandomCookReq::Swap(PlayerRandomCookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRandomCookReq::InternalSwap(PlayerRandomCookReq* other) {
  using std::swap;
  material_list_.InternalSwap(&other->material_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRandomCookReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRandomCookReq

// repeated .proto.ItemParam material_list = 13;
int PlayerRandomCookReq::material_list_size() const {
  return material_list_.size();
}
void PlayerRandomCookReq::clear_material_list() {
  material_list_.Clear();
}
const ::proto::ItemParam& PlayerRandomCookReq::material_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookReq.material_list)
  return material_list_.Get(index);
}
::proto::ItemParam* PlayerRandomCookReq::mutable_material_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerRandomCookReq.material_list)
  return material_list_.Mutable(index);
}
::proto::ItemParam* PlayerRandomCookReq::add_material_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerRandomCookReq.material_list)
  return material_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerRandomCookReq::mutable_material_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerRandomCookReq.material_list)
  return &material_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerRandomCookReq::material_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerRandomCookReq.material_list)
  return material_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRandomCookRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRandomCookRsp::PlayerRandomCookRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerRandomCookRsp)
}
PlayerRandomCookRsp::PlayerRandomCookRsp(const PlayerRandomCookRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerRandomCookRsp)
}

void PlayerRandomCookRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerRandomCookRsp::~PlayerRandomCookRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerRandomCookRsp)
  SharedDtor();
}

void PlayerRandomCookRsp::SharedDtor() {
}

void PlayerRandomCookRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRandomCookRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRandomCookRsp& PlayerRandomCookRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerRandomCookRsp* PlayerRandomCookRsp::New(::google::protobuf::Arena* arena) const {
  PlayerRandomCookRsp* n = new PlayerRandomCookRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRandomCookRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerRandomCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerRandomCookRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerRandomCookRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerRandomCookRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerRandomCookRsp)
  return false;
#undef DO_
}

void PlayerRandomCookRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerRandomCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerRandomCookRsp)
}

::google::protobuf::uint8* PlayerRandomCookRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerRandomCookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerRandomCookRsp)
  return target;
}

size_t PlayerRandomCookRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerRandomCookRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRandomCookRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerRandomCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRandomCookRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRandomCookRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerRandomCookRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerRandomCookRsp)
    MergeFrom(*source);
  }
}

void PlayerRandomCookRsp::MergeFrom(const PlayerRandomCookRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerRandomCookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerRandomCookRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerRandomCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRandomCookRsp::CopyFrom(const PlayerRandomCookRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerRandomCookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRandomCookRsp::IsInitialized() const {
  return true;
}

void PlayerRandomCookRsp::Swap(PlayerRandomCookRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRandomCookRsp::InternalSwap(PlayerRandomCookRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRandomCookRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRandomCookRsp

// int32 retcode = 4;
void PlayerRandomCookRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerRandomCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookRsp.retcode)
  return retcode_;
}
void PlayerRandomCookRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRandomCookRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookRecipeData::kProficiencyFieldNumber;
const int CookRecipeData::kRecipeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookRecipeData::CookRecipeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookRecipeData)
}
CookRecipeData::CookRecipeData(const CookRecipeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&recipe_id_, &from.recipe_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&proficiency_) -
    reinterpret_cast<char*>(&recipe_id_)) + sizeof(proficiency_));
  // @@protoc_insertion_point(copy_constructor:proto.CookRecipeData)
}

void CookRecipeData::SharedCtor() {
  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proficiency_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(proficiency_));
  _cached_size_ = 0;
}

CookRecipeData::~CookRecipeData() {
  // @@protoc_insertion_point(destructor:proto.CookRecipeData)
  SharedDtor();
}

void CookRecipeData::SharedDtor() {
}

void CookRecipeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookRecipeData::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookRecipeData& CookRecipeData::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookRecipeData* CookRecipeData::New(::google::protobuf::Arena* arena) const {
  CookRecipeData* n = new CookRecipeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookRecipeData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookRecipeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proficiency_) -
      reinterpret_cast<char*>(&recipe_id_)) + sizeof(proficiency_));
  _internal_metadata_.Clear();
}

bool CookRecipeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookRecipeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 recipe_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 proficiency = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proficiency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookRecipeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookRecipeData)
  return false;
#undef DO_
}

void CookRecipeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookRecipeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 9;
  if (this->recipe_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->recipe_id(), output);
  }

  // uint32 proficiency = 13;
  if (this->proficiency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->proficiency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookRecipeData)
}

::google::protobuf::uint8* CookRecipeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookRecipeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 recipe_id = 9;
  if (this->recipe_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->recipe_id(), target);
  }

  // uint32 proficiency = 13;
  if (this->proficiency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->proficiency(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookRecipeData)
  return target;
}

size_t CookRecipeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookRecipeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 recipe_id = 9;
  if (this->recipe_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_id());
  }

  // uint32 proficiency = 13;
  if (this->proficiency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->proficiency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookRecipeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookRecipeData)
  GOOGLE_DCHECK_NE(&from, this);
  const CookRecipeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookRecipeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookRecipeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookRecipeData)
    MergeFrom(*source);
  }
}

void CookRecipeData::MergeFrom(const CookRecipeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookRecipeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recipe_id() != 0) {
    set_recipe_id(from.recipe_id());
  }
  if (from.proficiency() != 0) {
    set_proficiency(from.proficiency());
  }
}

void CookRecipeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookRecipeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookRecipeData::CopyFrom(const CookRecipeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookRecipeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookRecipeData::IsInitialized() const {
  return true;
}

void CookRecipeData::Swap(CookRecipeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookRecipeData::InternalSwap(CookRecipeData* other) {
  using std::swap;
  swap(recipe_id_, other->recipe_id_);
  swap(proficiency_, other->proficiency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookRecipeData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookRecipeData

// uint32 proficiency = 13;
void CookRecipeData::clear_proficiency() {
  proficiency_ = 0u;
}
::google::protobuf::uint32 CookRecipeData::proficiency() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.proficiency)
  return proficiency_;
}
void CookRecipeData::set_proficiency(::google::protobuf::uint32 value) {
  
  proficiency_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.proficiency)
}

// uint32 recipe_id = 9;
void CookRecipeData::clear_recipe_id() {
  recipe_id_ = 0u;
}
::google::protobuf::uint32 CookRecipeData::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.recipe_id)
  return recipe_id_;
}
void CookRecipeData::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.recipe_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookDataNotify::kRecipeDataListFieldNumber;
const int CookDataNotify::kGradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookDataNotify::CookDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookDataNotify)
}
CookDataNotify::CookDataNotify(const CookDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recipe_data_list_(from.recipe_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grade_ = from.grade_;
  // @@protoc_insertion_point(copy_constructor:proto.CookDataNotify)
}

void CookDataNotify::SharedCtor() {
  grade_ = 0u;
  _cached_size_ = 0;
}

CookDataNotify::~CookDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CookDataNotify)
  SharedDtor();
}

void CookDataNotify::SharedDtor() {
}

void CookDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookDataNotify& CookDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookDataNotify* CookDataNotify::New(::google::protobuf::Arena* arena) const {
  CookDataNotify* n = new CookDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipe_data_list_.Clear();
  grade_ = 0u;
  _internal_metadata_.Clear();
}

bool CookDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.CookRecipeData recipe_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recipe_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grade = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookDataNotify)
  return false;
#undef DO_
}

void CookDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CookRecipeData recipe_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recipe_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->recipe_data_list(static_cast<int>(i)), output);
  }

  // uint32 grade = 11;
  if (this->grade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->grade(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookDataNotify)
}

::google::protobuf::uint8* CookDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CookRecipeData recipe_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recipe_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->recipe_data_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 grade = 11;
  if (this->grade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->grade(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookDataNotify)
  return target;
}

size_t CookDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CookRecipeData recipe_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->recipe_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recipe_data_list(static_cast<int>(i)));
    }
  }

  // uint32 grade = 11;
  if (this->grade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grade());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CookDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookDataNotify)
    MergeFrom(*source);
  }
}

void CookDataNotify::MergeFrom(const CookDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recipe_data_list_.MergeFrom(from.recipe_data_list_);
  if (from.grade() != 0) {
    set_grade(from.grade());
  }
}

void CookDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookDataNotify::CopyFrom(const CookDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookDataNotify::IsInitialized() const {
  return true;
}

void CookDataNotify::Swap(CookDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookDataNotify::InternalSwap(CookDataNotify* other) {
  using std::swap;
  recipe_data_list_.InternalSwap(&other->recipe_data_list_);
  swap(grade_, other->grade_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookDataNotify

// repeated .proto.CookRecipeData recipe_data_list = 2;
int CookDataNotify::recipe_data_list_size() const {
  return recipe_data_list_.size();
}
void CookDataNotify::clear_recipe_data_list() {
  recipe_data_list_.Clear();
}
const ::proto::CookRecipeData& CookDataNotify::recipe_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Get(index);
}
::proto::CookRecipeData* CookDataNotify::mutable_recipe_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Mutable(index);
}
::proto::CookRecipeData* CookDataNotify::add_recipe_data_list() {
  // @@protoc_insertion_point(field_add:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >*
CookDataNotify::mutable_recipe_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CookDataNotify.recipe_data_list)
  return &recipe_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >&
CookDataNotify::recipe_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_;
}

// uint32 grade = 11;
void CookDataNotify::clear_grade() {
  grade_ = 0u;
}
::google::protobuf::uint32 CookDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.grade)
  return grade_;
}
void CookDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookDataNotify.grade)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookRecipeDataNotify::kRecipeDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookRecipeDataNotify::CookRecipeDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookRecipeDataNotify)
}
CookRecipeDataNotify::CookRecipeDataNotify(const CookRecipeDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_recipe_data()) {
    recipe_data_ = new ::proto::CookRecipeData(*from.recipe_data_);
  } else {
    recipe_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.CookRecipeDataNotify)
}

void CookRecipeDataNotify::SharedCtor() {
  recipe_data_ = NULL;
  _cached_size_ = 0;
}

CookRecipeDataNotify::~CookRecipeDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CookRecipeDataNotify)
  SharedDtor();
}

void CookRecipeDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete recipe_data_;
}

void CookRecipeDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookRecipeDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookRecipeDataNotify& CookRecipeDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookRecipeDataNotify* CookRecipeDataNotify::New(::google::protobuf::Arena* arena) const {
  CookRecipeDataNotify* n = new CookRecipeDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookRecipeDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookRecipeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) {
    delete recipe_data_;
  }
  recipe_data_ = NULL;
  _internal_metadata_.Clear();
}

bool CookRecipeDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookRecipeDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.CookRecipeData recipe_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recipe_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookRecipeDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookRecipeDataNotify)
  return false;
#undef DO_
}

void CookRecipeDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookRecipeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CookRecipeData recipe_data = 4;
  if (this->has_recipe_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->recipe_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookRecipeDataNotify)
}

::google::protobuf::uint8* CookRecipeDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookRecipeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CookRecipeData recipe_data = 4;
  if (this->has_recipe_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->recipe_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookRecipeDataNotify)
  return target;
}

size_t CookRecipeDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookRecipeDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CookRecipeData recipe_data = 4;
  if (this->has_recipe_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->recipe_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookRecipeDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookRecipeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CookRecipeDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookRecipeDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookRecipeDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookRecipeDataNotify)
    MergeFrom(*source);
  }
}

void CookRecipeDataNotify::MergeFrom(const CookRecipeDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookRecipeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recipe_data()) {
    mutable_recipe_data()->::proto::CookRecipeData::MergeFrom(from.recipe_data());
  }
}

void CookRecipeDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookRecipeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookRecipeDataNotify::CopyFrom(const CookRecipeDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookRecipeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookRecipeDataNotify::IsInitialized() const {
  return true;
}

void CookRecipeDataNotify::Swap(CookRecipeDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookRecipeDataNotify::InternalSwap(CookRecipeDataNotify* other) {
  using std::swap;
  swap(recipe_data_, other->recipe_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookRecipeDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookRecipeDataNotify

// .proto.CookRecipeData recipe_data = 4;
bool CookRecipeDataNotify::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
void CookRecipeDataNotify::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
const ::proto::CookRecipeData& CookRecipeDataNotify::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.CookRecipeDataNotify.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
::proto::CookRecipeData* CookRecipeDataNotify::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CookRecipeDataNotify.recipe_data)
  return recipe_data_;
}
::proto::CookRecipeData* CookRecipeDataNotify::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.CookRecipeDataNotify.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
void CookRecipeDataNotify::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CookRecipeDataNotify.recipe_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookGradeDataNotify::kGradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookGradeDataNotify::CookGradeDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CookGradeDataNotify)
}
CookGradeDataNotify::CookGradeDataNotify(const CookGradeDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grade_ = from.grade_;
  // @@protoc_insertion_point(copy_constructor:proto.CookGradeDataNotify)
}

void CookGradeDataNotify::SharedCtor() {
  grade_ = 0u;
  _cached_size_ = 0;
}

CookGradeDataNotify::~CookGradeDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CookGradeDataNotify)
  SharedDtor();
}

void CookGradeDataNotify::SharedDtor() {
}

void CookGradeDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookGradeDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookGradeDataNotify& CookGradeDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CookGradeDataNotify* CookGradeDataNotify::New(::google::protobuf::Arena* arena) const {
  CookGradeDataNotify* n = new CookGradeDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookGradeDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CookGradeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grade_ = 0u;
  _internal_metadata_.Clear();
}

bool CookGradeDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CookGradeDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 grade = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CookGradeDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CookGradeDataNotify)
  return false;
#undef DO_
}

void CookGradeDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CookGradeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grade = 12;
  if (this->grade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->grade(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CookGradeDataNotify)
}

::google::protobuf::uint8* CookGradeDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CookGradeDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grade = 12;
  if (this->grade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->grade(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CookGradeDataNotify)
  return target;
}

size_t CookGradeDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CookGradeDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 grade = 12;
  if (this->grade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grade());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookGradeDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CookGradeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CookGradeDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookGradeDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CookGradeDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CookGradeDataNotify)
    MergeFrom(*source);
  }
}

void CookGradeDataNotify::MergeFrom(const CookGradeDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CookGradeDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grade() != 0) {
    set_grade(from.grade());
  }
}

void CookGradeDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CookGradeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookGradeDataNotify::CopyFrom(const CookGradeDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CookGradeDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookGradeDataNotify::IsInitialized() const {
  return true;
}

void CookGradeDataNotify::Swap(CookGradeDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookGradeDataNotify::InternalSwap(CookGradeDataNotify* other) {
  using std::swap;
  swap(grade_, other->grade_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookGradeDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CookGradeDataNotify

// uint32 grade = 12;
void CookGradeDataNotify::clear_grade() {
  grade_ = 0u;
}
::google::protobuf::uint32 CookGradeDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookGradeDataNotify.grade)
  return grade_;
}
void CookGradeDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookGradeDataNotify.grade)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCompoundMaterialReq::kCountFieldNumber;
const int PlayerCompoundMaterialReq::kCompoundIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCompoundMaterialReq::PlayerCompoundMaterialReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCompoundMaterialReq)
}
PlayerCompoundMaterialReq::PlayerCompoundMaterialReq(const PlayerCompoundMaterialReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&compound_id_, &from.compound_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&compound_id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCompoundMaterialReq)
}

void PlayerCompoundMaterialReq::SharedCtor() {
  ::memset(&compound_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&compound_id_)) + sizeof(count_));
  _cached_size_ = 0;
}

PlayerCompoundMaterialReq::~PlayerCompoundMaterialReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCompoundMaterialReq)
  SharedDtor();
}

void PlayerCompoundMaterialReq::SharedDtor() {
}

void PlayerCompoundMaterialReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCompoundMaterialReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCompoundMaterialReq& PlayerCompoundMaterialReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCompoundMaterialReq* PlayerCompoundMaterialReq::New(::google::protobuf::Arena* arena) const {
  PlayerCompoundMaterialReq* n = new PlayerCompoundMaterialReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCompoundMaterialReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCompoundMaterialReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&compound_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&compound_id_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool PlayerCompoundMaterialReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCompoundMaterialReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compound_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCompoundMaterialReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCompoundMaterialReq)
  return false;
#undef DO_
}

void PlayerCompoundMaterialReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCompoundMaterialReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 3;
  if (this->compound_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->compound_id(), output);
  }

  // uint32 count = 11;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCompoundMaterialReq)
}

::google::protobuf::uint8* PlayerCompoundMaterialReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCompoundMaterialReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 3;
  if (this->compound_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->compound_id(), target);
  }

  // uint32 count = 11;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCompoundMaterialReq)
  return target;
}

size_t PlayerCompoundMaterialReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCompoundMaterialReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 compound_id = 3;
  if (this->compound_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_id());
  }

  // uint32 count = 11;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCompoundMaterialReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCompoundMaterialReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCompoundMaterialReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCompoundMaterialReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCompoundMaterialReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCompoundMaterialReq)
    MergeFrom(*source);
  }
}

void PlayerCompoundMaterialReq::MergeFrom(const PlayerCompoundMaterialReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCompoundMaterialReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compound_id() != 0) {
    set_compound_id(from.compound_id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void PlayerCompoundMaterialReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCompoundMaterialReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCompoundMaterialReq::CopyFrom(const PlayerCompoundMaterialReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCompoundMaterialReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCompoundMaterialReq::IsInitialized() const {
  return true;
}

void PlayerCompoundMaterialReq::Swap(PlayerCompoundMaterialReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCompoundMaterialReq::InternalSwap(PlayerCompoundMaterialReq* other) {
  using std::swap;
  swap(compound_id_, other->compound_id_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCompoundMaterialReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCompoundMaterialReq

// uint32 count = 11;
void PlayerCompoundMaterialReq::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialReq::count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.count)
  return count_;
}
void PlayerCompoundMaterialReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.count)
}

// uint32 compound_id = 3;
void PlayerCompoundMaterialReq::clear_compound_id() {
  compound_id_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.compound_id)
  return compound_id_;
}
void PlayerCompoundMaterialReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.compound_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompoundQueueData::kOutputCountFieldNumber;
const int CompoundQueueData::kCompoundIdFieldNumber;
const int CompoundQueueData::kOutputTimeFieldNumber;
const int CompoundQueueData::kWaitCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompoundQueueData::CompoundQueueData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CompoundQueueData)
}
CompoundQueueData::CompoundQueueData(const CompoundQueueData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&output_count_, &from.output_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_time_) -
    reinterpret_cast<char*>(&output_count_)) + sizeof(output_time_));
  // @@protoc_insertion_point(copy_constructor:proto.CompoundQueueData)
}

void CompoundQueueData::SharedCtor() {
  ::memset(&output_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_time_) -
      reinterpret_cast<char*>(&output_count_)) + sizeof(output_time_));
  _cached_size_ = 0;
}

CompoundQueueData::~CompoundQueueData() {
  // @@protoc_insertion_point(destructor:proto.CompoundQueueData)
  SharedDtor();
}

void CompoundQueueData::SharedDtor() {
}

void CompoundQueueData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompoundQueueData::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompoundQueueData& CompoundQueueData::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompoundQueueData* CompoundQueueData::New(::google::protobuf::Arena* arena) const {
  CompoundQueueData* n = new CompoundQueueData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompoundQueueData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CompoundQueueData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&output_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_time_) -
      reinterpret_cast<char*>(&output_count_)) + sizeof(output_time_));
  _internal_metadata_.Clear();
}

bool CompoundQueueData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CompoundQueueData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 output_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &output_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 compound_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wait_count = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wait_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 output_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &output_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CompoundQueueData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CompoundQueueData)
  return false;
#undef DO_
}

void CompoundQueueData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CompoundQueueData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 output_count = 1;
  if (this->output_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->output_count(), output);
  }

  // uint32 compound_id = 4;
  if (this->compound_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->compound_id(), output);
  }

  // uint32 wait_count = 8;
  if (this->wait_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->wait_count(), output);
  }

  // uint32 output_time = 14;
  if (this->output_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->output_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CompoundQueueData)
}

::google::protobuf::uint8* CompoundQueueData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CompoundQueueData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 output_count = 1;
  if (this->output_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->output_count(), target);
  }

  // uint32 compound_id = 4;
  if (this->compound_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->compound_id(), target);
  }

  // uint32 wait_count = 8;
  if (this->wait_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->wait_count(), target);
  }

  // uint32 output_time = 14;
  if (this->output_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->output_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CompoundQueueData)
  return target;
}

size_t CompoundQueueData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CompoundQueueData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 output_count = 1;
  if (this->output_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->output_count());
  }

  // uint32 compound_id = 4;
  if (this->compound_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_id());
  }

  // uint32 wait_count = 8;
  if (this->wait_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wait_count());
  }

  // uint32 output_time = 14;
  if (this->output_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->output_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompoundQueueData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CompoundQueueData)
  GOOGLE_DCHECK_NE(&from, this);
  const CompoundQueueData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompoundQueueData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CompoundQueueData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CompoundQueueData)
    MergeFrom(*source);
  }
}

void CompoundQueueData::MergeFrom(const CompoundQueueData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CompoundQueueData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_count() != 0) {
    set_output_count(from.output_count());
  }
  if (from.compound_id() != 0) {
    set_compound_id(from.compound_id());
  }
  if (from.wait_count() != 0) {
    set_wait_count(from.wait_count());
  }
  if (from.output_time() != 0) {
    set_output_time(from.output_time());
  }
}

void CompoundQueueData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CompoundQueueData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompoundQueueData::CopyFrom(const CompoundQueueData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CompoundQueueData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompoundQueueData::IsInitialized() const {
  return true;
}

void CompoundQueueData::Swap(CompoundQueueData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompoundQueueData::InternalSwap(CompoundQueueData* other) {
  using std::swap;
  swap(output_count_, other->output_count_);
  swap(compound_id_, other->compound_id_);
  swap(wait_count_, other->wait_count_);
  swap(output_time_, other->output_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompoundQueueData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompoundQueueData

// uint32 output_count = 1;
void CompoundQueueData::clear_output_count() {
  output_count_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::output_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_count)
  return output_count_;
}
void CompoundQueueData::set_output_count(::google::protobuf::uint32 value) {
  
  output_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_count)
}

// uint32 compound_id = 4;
void CompoundQueueData::clear_compound_id() {
  compound_id_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.compound_id)
  return compound_id_;
}
void CompoundQueueData::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.compound_id)
}

// uint32 output_time = 14;
void CompoundQueueData::clear_output_time() {
  output_time_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::output_time() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_time)
  return output_time_;
}
void CompoundQueueData::set_output_time(::google::protobuf::uint32 value) {
  
  output_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_time)
}

// uint32 wait_count = 8;
void CompoundQueueData::clear_wait_count() {
  wait_count_ = 0u;
}
::google::protobuf::uint32 CompoundQueueData::wait_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.wait_count)
  return wait_count_;
}
void CompoundQueueData::set_wait_count(::google::protobuf::uint32 value) {
  
  wait_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.wait_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCompoundMaterialRsp::kCompoundQueDataFieldNumber;
const int PlayerCompoundMaterialRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCompoundMaterialRsp::PlayerCompoundMaterialRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCompoundMaterialRsp)
}
PlayerCompoundMaterialRsp::PlayerCompoundMaterialRsp(const PlayerCompoundMaterialRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_compound_que_data()) {
    compound_que_data_ = new ::proto::CompoundQueueData(*from.compound_que_data_);
  } else {
    compound_que_data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCompoundMaterialRsp)
}

void PlayerCompoundMaterialRsp::SharedCtor() {
  ::memset(&compound_que_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&compound_que_data_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

PlayerCompoundMaterialRsp::~PlayerCompoundMaterialRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCompoundMaterialRsp)
  SharedDtor();
}

void PlayerCompoundMaterialRsp::SharedDtor() {
  if (this != internal_default_instance()) delete compound_que_data_;
}

void PlayerCompoundMaterialRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCompoundMaterialRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCompoundMaterialRsp& PlayerCompoundMaterialRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCompoundMaterialRsp* PlayerCompoundMaterialRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCompoundMaterialRsp* n = new PlayerCompoundMaterialRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCompoundMaterialRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCompoundMaterialRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && compound_que_data_ != NULL) {
    delete compound_que_data_;
  }
  compound_que_data_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerCompoundMaterialRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCompoundMaterialRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.CompoundQueueData compound_que_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compound_que_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCompoundMaterialRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCompoundMaterialRsp)
  return false;
#undef DO_
}

void PlayerCompoundMaterialRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCompoundMaterialRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CompoundQueueData compound_que_data = 5;
  if (this->has_compound_que_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->compound_que_data_, output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCompoundMaterialRsp)
}

::google::protobuf::uint8* PlayerCompoundMaterialRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCompoundMaterialRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CompoundQueueData compound_que_data = 5;
  if (this->has_compound_que_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->compound_que_data_, deterministic, target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCompoundMaterialRsp)
  return target;
}

size_t PlayerCompoundMaterialRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCompoundMaterialRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CompoundQueueData compound_que_data = 5;
  if (this->has_compound_que_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->compound_que_data_);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCompoundMaterialRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCompoundMaterialRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCompoundMaterialRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCompoundMaterialRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCompoundMaterialRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCompoundMaterialRsp)
    MergeFrom(*source);
  }
}

void PlayerCompoundMaterialRsp::MergeFrom(const PlayerCompoundMaterialRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCompoundMaterialRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_compound_que_data()) {
    mutable_compound_que_data()->::proto::CompoundQueueData::MergeFrom(from.compound_que_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerCompoundMaterialRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCompoundMaterialRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCompoundMaterialRsp::CopyFrom(const PlayerCompoundMaterialRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCompoundMaterialRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCompoundMaterialRsp::IsInitialized() const {
  return true;
}

void PlayerCompoundMaterialRsp::Swap(PlayerCompoundMaterialRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCompoundMaterialRsp::InternalSwap(PlayerCompoundMaterialRsp* other) {
  using std::swap;
  swap(compound_que_data_, other->compound_que_data_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCompoundMaterialRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCompoundMaterialRsp

// .proto.CompoundQueueData compound_que_data = 5;
bool PlayerCompoundMaterialRsp::has_compound_que_data() const {
  return this != internal_default_instance() && compound_que_data_ != NULL;
}
void PlayerCompoundMaterialRsp::clear_compound_que_data() {
  if (GetArenaNoVirtual() == NULL && compound_que_data_ != NULL) delete compound_que_data_;
  compound_que_data_ = NULL;
}
const ::proto::CompoundQueueData& PlayerCompoundMaterialRsp::compound_que_data() const {
  const ::proto::CompoundQueueData* p = compound_que_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CompoundQueueData*>(
      &::proto::_CompoundQueueData_default_instance_);
}
::proto::CompoundQueueData* PlayerCompoundMaterialRsp::mutable_compound_que_data() {
  
  if (compound_que_data_ == NULL) {
    compound_que_data_ = new ::proto::CompoundQueueData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return compound_que_data_;
}
::proto::CompoundQueueData* PlayerCompoundMaterialRsp::release_compound_que_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCompoundMaterialRsp.compound_que_data)
  
  ::proto::CompoundQueueData* temp = compound_que_data_;
  compound_que_data_ = NULL;
  return temp;
}
void PlayerCompoundMaterialRsp::set_allocated_compound_que_data(::proto::CompoundQueueData* compound_que_data) {
  delete compound_que_data_;
  compound_que_data_ = compound_que_data;
  if (compound_que_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCompoundMaterialRsp.compound_que_data)
}

// int32 retcode = 12;
void PlayerCompoundMaterialRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerCompoundMaterialRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.retcode)
  return retcode_;
}
void PlayerCompoundMaterialRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeCompoundOutputReq::kCompoundGroupIdFieldNumber;
const int TakeCompoundOutputReq::kCompoundIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeCompoundOutputReq::TakeCompoundOutputReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeCompoundOutputReq)
}
TakeCompoundOutputReq::TakeCompoundOutputReq(const TakeCompoundOutputReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&compound_group_id_, &from.compound_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&compound_id_) -
    reinterpret_cast<char*>(&compound_group_id_)) + sizeof(compound_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeCompoundOutputReq)
}

void TakeCompoundOutputReq::SharedCtor() {
  ::memset(&compound_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compound_id_) -
      reinterpret_cast<char*>(&compound_group_id_)) + sizeof(compound_id_));
  _cached_size_ = 0;
}

TakeCompoundOutputReq::~TakeCompoundOutputReq() {
  // @@protoc_insertion_point(destructor:proto.TakeCompoundOutputReq)
  SharedDtor();
}

void TakeCompoundOutputReq::SharedDtor() {
}

void TakeCompoundOutputReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeCompoundOutputReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeCompoundOutputReq& TakeCompoundOutputReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeCompoundOutputReq* TakeCompoundOutputReq::New(::google::protobuf::Arena* arena) const {
  TakeCompoundOutputReq* n = new TakeCompoundOutputReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeCompoundOutputReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeCompoundOutputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&compound_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compound_id_) -
      reinterpret_cast<char*>(&compound_group_id_)) + sizeof(compound_id_));
  _internal_metadata_.Clear();
}

bool TakeCompoundOutputReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeCompoundOutputReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compound_group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 compound_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeCompoundOutputReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeCompoundOutputReq)
  return false;
#undef DO_
}

void TakeCompoundOutputReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeCompoundOutputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_group_id = 3;
  if (this->compound_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->compound_group_id(), output);
  }

  // uint32 compound_id = 10;
  if (this->compound_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->compound_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeCompoundOutputReq)
}

::google::protobuf::uint8* TakeCompoundOutputReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeCompoundOutputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_group_id = 3;
  if (this->compound_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->compound_group_id(), target);
  }

  // uint32 compound_id = 10;
  if (this->compound_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->compound_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeCompoundOutputReq)
  return target;
}

size_t TakeCompoundOutputReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeCompoundOutputReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 compound_group_id = 3;
  if (this->compound_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_group_id());
  }

  // uint32 compound_id = 10;
  if (this->compound_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeCompoundOutputReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeCompoundOutputReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeCompoundOutputReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeCompoundOutputReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeCompoundOutputReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeCompoundOutputReq)
    MergeFrom(*source);
  }
}

void TakeCompoundOutputReq::MergeFrom(const TakeCompoundOutputReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeCompoundOutputReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compound_group_id() != 0) {
    set_compound_group_id(from.compound_group_id());
  }
  if (from.compound_id() != 0) {
    set_compound_id(from.compound_id());
  }
}

void TakeCompoundOutputReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeCompoundOutputReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeCompoundOutputReq::CopyFrom(const TakeCompoundOutputReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeCompoundOutputReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeCompoundOutputReq::IsInitialized() const {
  return true;
}

void TakeCompoundOutputReq::Swap(TakeCompoundOutputReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeCompoundOutputReq::InternalSwap(TakeCompoundOutputReq* other) {
  using std::swap;
  swap(compound_group_id_, other->compound_group_id_);
  swap(compound_id_, other->compound_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeCompoundOutputReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeCompoundOutputReq

// uint32 compound_group_id = 3;
void TakeCompoundOutputReq::clear_compound_group_id() {
  compound_group_id_ = 0u;
}
::google::protobuf::uint32 TakeCompoundOutputReq::compound_group_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputReq.compound_group_id)
  return compound_group_id_;
}
void TakeCompoundOutputReq::set_compound_group_id(::google::protobuf::uint32 value) {
  
  compound_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputReq.compound_group_id)
}

// uint32 compound_id = 10;
void TakeCompoundOutputReq::clear_compound_id() {
  compound_id_ = 0u;
}
::google::protobuf::uint32 TakeCompoundOutputReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputReq.compound_id)
  return compound_id_;
}
void TakeCompoundOutputReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputReq.compound_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeCompoundOutputRsp::kItemListFieldNumber;
const int TakeCompoundOutputRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeCompoundOutputRsp::TakeCompoundOutputRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeCompoundOutputRsp)
}
TakeCompoundOutputRsp::TakeCompoundOutputRsp(const TakeCompoundOutputRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeCompoundOutputRsp)
}

void TakeCompoundOutputRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TakeCompoundOutputRsp::~TakeCompoundOutputRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeCompoundOutputRsp)
  SharedDtor();
}

void TakeCompoundOutputRsp::SharedDtor() {
}

void TakeCompoundOutputRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeCompoundOutputRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeCompoundOutputRsp& TakeCompoundOutputRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeCompoundOutputRsp* TakeCompoundOutputRsp::New(::google::protobuf::Arena* arena) const {
  TakeCompoundOutputRsp* n = new TakeCompoundOutputRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeCompoundOutputRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeCompoundOutputRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool TakeCompoundOutputRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeCompoundOutputRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeCompoundOutputRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeCompoundOutputRsp)
  return false;
#undef DO_
}

void TakeCompoundOutputRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeCompoundOutputRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // repeated .proto.ItemParam item_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeCompoundOutputRsp)
}

::google::protobuf::uint8* TakeCompoundOutputRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeCompoundOutputRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // repeated .proto.ItemParam item_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeCompoundOutputRsp)
  return target;
}

size_t TakeCompoundOutputRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeCompoundOutputRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeCompoundOutputRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeCompoundOutputRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeCompoundOutputRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeCompoundOutputRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeCompoundOutputRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeCompoundOutputRsp)
    MergeFrom(*source);
  }
}

void TakeCompoundOutputRsp::MergeFrom(const TakeCompoundOutputRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeCompoundOutputRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TakeCompoundOutputRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeCompoundOutputRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeCompoundOutputRsp::CopyFrom(const TakeCompoundOutputRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeCompoundOutputRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeCompoundOutputRsp::IsInitialized() const {
  return true;
}

void TakeCompoundOutputRsp::Swap(TakeCompoundOutputRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeCompoundOutputRsp::InternalSwap(TakeCompoundOutputRsp* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeCompoundOutputRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeCompoundOutputRsp

// repeated .proto.ItemParam item_list = 6;
int TakeCompoundOutputRsp::item_list_size() const {
  return item_list_.size();
}
void TakeCompoundOutputRsp::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& TakeCompoundOutputRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* TakeCompoundOutputRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* TakeCompoundOutputRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TakeCompoundOutputRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeCompoundOutputRsp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TakeCompoundOutputRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeCompoundOutputRsp.item_list)
  return item_list_;
}

// int32 retcode = 2;
void TakeCompoundOutputRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeCompoundOutputRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.retcode)
  return retcode_;
}
void TakeCompoundOutputRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompoundDataNotify::kUnlockCompoundListFieldNumber;
const int CompoundDataNotify::kCompoundQueDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompoundDataNotify::CompoundDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CompoundDataNotify)
}
CompoundDataNotify::CompoundDataNotify(const CompoundDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlock_compound_list_(from.unlock_compound_list_),
      compound_que_data_list_(from.compound_que_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CompoundDataNotify)
}

void CompoundDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

CompoundDataNotify::~CompoundDataNotify() {
  // @@protoc_insertion_point(destructor:proto.CompoundDataNotify)
  SharedDtor();
}

void CompoundDataNotify::SharedDtor() {
}

void CompoundDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompoundDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompoundDataNotify& CompoundDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompoundDataNotify* CompoundDataNotify::New(::google::protobuf::Arena* arena) const {
  CompoundDataNotify* n = new CompoundDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompoundDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CompoundDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlock_compound_list_.Clear();
  compound_que_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool CompoundDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CompoundDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 unlock_compound_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlock_compound_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_unlock_compound_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CompoundQueueData compound_que_data_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_compound_que_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CompoundDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CompoundDataNotify)
  return false;
#undef DO_
}

void CompoundDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CompoundDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlock_compound_list = 1;
  if (this->unlock_compound_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlock_compound_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlock_compound_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlock_compound_list(i), output);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->compound_que_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CompoundDataNotify)
}

::google::protobuf::uint8* CompoundDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CompoundDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlock_compound_list = 1;
  if (this->unlock_compound_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlock_compound_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlock_compound_list_, target);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->compound_que_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CompoundDataNotify)
  return target;
}

size_t CompoundDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CompoundDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlock_compound_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlock_compound_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlock_compound_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->compound_que_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compound_que_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompoundDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CompoundDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CompoundDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompoundDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CompoundDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CompoundDataNotify)
    MergeFrom(*source);
  }
}

void CompoundDataNotify::MergeFrom(const CompoundDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CompoundDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlock_compound_list_.MergeFrom(from.unlock_compound_list_);
  compound_que_data_list_.MergeFrom(from.compound_que_data_list_);
}

void CompoundDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CompoundDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompoundDataNotify::CopyFrom(const CompoundDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CompoundDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompoundDataNotify::IsInitialized() const {
  return true;
}

void CompoundDataNotify::Swap(CompoundDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompoundDataNotify::InternalSwap(CompoundDataNotify* other) {
  using std::swap;
  unlock_compound_list_.InternalSwap(&other->unlock_compound_list_);
  compound_que_data_list_.InternalSwap(&other->compound_que_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompoundDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompoundDataNotify

// repeated uint32 unlock_compound_list = 1;
int CompoundDataNotify::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
void CompoundDataNotify::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
::google::protobuf::uint32 CompoundDataNotify::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
void CompoundDataNotify::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CompoundDataNotify.unlock_compound_list)
}
void CompoundDataNotify::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.unlock_compound_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CompoundDataNotify::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CompoundDataNotify::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 9;
int CompoundDataNotify::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
void CompoundDataNotify::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
const ::proto::CompoundQueueData& CompoundDataNotify::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
::proto::CompoundQueueData* CompoundDataNotify::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
::proto::CompoundQueueData* CompoundDataNotify::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
CompoundDataNotify::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.compound_que_data_list)
  return &compound_que_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
CompoundDataNotify::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCompoundDataReq::GetCompoundDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetCompoundDataReq)
}
GetCompoundDataReq::GetCompoundDataReq(const GetCompoundDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetCompoundDataReq)
}

void GetCompoundDataReq::SharedCtor() {
  _cached_size_ = 0;
}

GetCompoundDataReq::~GetCompoundDataReq() {
  // @@protoc_insertion_point(destructor:proto.GetCompoundDataReq)
  SharedDtor();
}

void GetCompoundDataReq::SharedDtor() {
}

void GetCompoundDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCompoundDataReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCompoundDataReq& GetCompoundDataReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetCompoundDataReq* GetCompoundDataReq::New(::google::protobuf::Arena* arena) const {
  GetCompoundDataReq* n = new GetCompoundDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCompoundDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetCompoundDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetCompoundDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetCompoundDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetCompoundDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetCompoundDataReq)
  return false;
#undef DO_
}

void GetCompoundDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetCompoundDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetCompoundDataReq)
}

::google::protobuf::uint8* GetCompoundDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetCompoundDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetCompoundDataReq)
  return target;
}

size_t GetCompoundDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetCompoundDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCompoundDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetCompoundDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCompoundDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCompoundDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetCompoundDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetCompoundDataReq)
    MergeFrom(*source);
  }
}

void GetCompoundDataReq::MergeFrom(const GetCompoundDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetCompoundDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetCompoundDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetCompoundDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCompoundDataReq::CopyFrom(const GetCompoundDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetCompoundDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCompoundDataReq::IsInitialized() const {
  return true;
}

void GetCompoundDataReq::Swap(GetCompoundDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCompoundDataReq::InternalSwap(GetCompoundDataReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCompoundDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCompoundDataReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCompoundDataRsp::kRetcodeFieldNumber;
const int GetCompoundDataRsp::kUnlockCompoundListFieldNumber;
const int GetCompoundDataRsp::kCompoundQueDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCompoundDataRsp::GetCompoundDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetCompoundDataRsp)
}
GetCompoundDataRsp::GetCompoundDataRsp(const GetCompoundDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      compound_que_data_list_(from.compound_que_data_list_),
      unlock_compound_list_(from.unlock_compound_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetCompoundDataRsp)
}

void GetCompoundDataRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetCompoundDataRsp::~GetCompoundDataRsp() {
  // @@protoc_insertion_point(destructor:proto.GetCompoundDataRsp)
  SharedDtor();
}

void GetCompoundDataRsp::SharedDtor() {
}

void GetCompoundDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCompoundDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCompoundDataRsp& GetCompoundDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetCompoundDataRsp* GetCompoundDataRsp::New(::google::protobuf::Arena* arena) const {
  GetCompoundDataRsp* n = new GetCompoundDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCompoundDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetCompoundDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compound_que_data_list_.Clear();
  unlock_compound_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetCompoundDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetCompoundDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CompoundQueueData compound_que_data_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_compound_que_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlock_compound_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlock_compound_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_unlock_compound_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetCompoundDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetCompoundDataRsp)
  return false;
#undef DO_
}

void GetCompoundDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetCompoundDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->compound_que_data_list(static_cast<int>(i)), output);
  }

  // repeated uint32 unlock_compound_list = 11;
  if (this->unlock_compound_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlock_compound_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlock_compound_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlock_compound_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetCompoundDataRsp)
}

::google::protobuf::uint8* GetCompoundDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetCompoundDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // repeated .proto.CompoundQueueData compound_que_data_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->compound_que_data_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 unlock_compound_list = 11;
  if (this->unlock_compound_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlock_compound_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlock_compound_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetCompoundDataRsp)
  return target;
}

size_t GetCompoundDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetCompoundDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CompoundQueueData compound_que_data_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->compound_que_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compound_que_data_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 unlock_compound_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlock_compound_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlock_compound_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCompoundDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetCompoundDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCompoundDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCompoundDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetCompoundDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetCompoundDataRsp)
    MergeFrom(*source);
  }
}

void GetCompoundDataRsp::MergeFrom(const GetCompoundDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetCompoundDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  compound_que_data_list_.MergeFrom(from.compound_que_data_list_);
  unlock_compound_list_.MergeFrom(from.unlock_compound_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetCompoundDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetCompoundDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCompoundDataRsp::CopyFrom(const GetCompoundDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetCompoundDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCompoundDataRsp::IsInitialized() const {
  return true;
}

void GetCompoundDataRsp::Swap(GetCompoundDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCompoundDataRsp::InternalSwap(GetCompoundDataRsp* other) {
  using std::swap;
  compound_que_data_list_.InternalSwap(&other->compound_que_data_list_);
  unlock_compound_list_.InternalSwap(&other->unlock_compound_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCompoundDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCompoundDataRsp

// int32 retcode = 3;
void GetCompoundDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetCompoundDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.retcode)
  return retcode_;
}
void GetCompoundDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.retcode)
}

// repeated uint32 unlock_compound_list = 11;
int GetCompoundDataRsp::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
void GetCompoundDataRsp::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
::google::protobuf::uint32 GetCompoundDataRsp::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
void GetCompoundDataRsp::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.unlock_compound_list)
}
void GetCompoundDataRsp::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.unlock_compound_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetCompoundDataRsp::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetCompoundDataRsp::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 7;
int GetCompoundDataRsp::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
void GetCompoundDataRsp::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
const ::proto::CompoundQueueData& GetCompoundDataRsp::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
::proto::CompoundQueueData* GetCompoundDataRsp::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
::proto::CompoundQueueData* GetCompoundDataRsp::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
GetCompoundDataRsp::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return &compound_que_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
GetCompoundDataRsp::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerTimeNotify::kServerTimeFieldNumber;
const int PlayerTimeNotify::kPlayerTimeFieldNumber;
const int PlayerTimeNotify::kIsPausedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerTimeNotify::PlayerTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerTimeNotify)
}
PlayerTimeNotify::PlayerTimeNotify(const PlayerTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_paused_, &from.is_paused_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_time_) -
    reinterpret_cast<char*>(&is_paused_)) + sizeof(player_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerTimeNotify)
}

void PlayerTimeNotify::SharedCtor() {
  ::memset(&is_paused_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_time_) -
      reinterpret_cast<char*>(&is_paused_)) + sizeof(player_time_));
  _cached_size_ = 0;
}

PlayerTimeNotify::~PlayerTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerTimeNotify)
  SharedDtor();
}

void PlayerTimeNotify::SharedDtor() {
}

void PlayerTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerTimeNotify& PlayerTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerTimeNotify* PlayerTimeNotify::New(::google::protobuf::Arena* arena) const {
  PlayerTimeNotify* n = new PlayerTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_paused_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_time_) -
      reinterpret_cast<char*>(&is_paused_)) + sizeof(player_time_));
  _internal_metadata_.Clear();
}

bool PlayerTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 server_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_paused = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerTimeNotify)
  return false;
#undef DO_
}

void PlayerTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 5;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->server_time(), output);
  }

  // uint64 player_time = 11;
  if (this->player_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->player_time(), output);
  }

  // bool is_paused = 14;
  if (this->is_paused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_paused(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerTimeNotify)
}

::google::protobuf::uint8* PlayerTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 5;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->server_time(), target);
  }

  // uint64 player_time = 11;
  if (this->player_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->player_time(), target);
  }

  // bool is_paused = 14;
  if (this->is_paused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_paused(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerTimeNotify)
  return target;
}

size_t PlayerTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_paused = 14;
  if (this->is_paused() != 0) {
    total_size += 1 + 1;
  }

  // uint64 server_time = 5;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  // uint64 player_time = 11;
  if (this->player_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerTimeNotify)
    MergeFrom(*source);
  }
}

void PlayerTimeNotify::MergeFrom(const PlayerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_paused() != 0) {
    set_is_paused(from.is_paused());
  }
  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
  if (from.player_time() != 0) {
    set_player_time(from.player_time());
  }
}

void PlayerTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerTimeNotify::CopyFrom(const PlayerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerTimeNotify::IsInitialized() const {
  return true;
}

void PlayerTimeNotify::Swap(PlayerTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerTimeNotify::InternalSwap(PlayerTimeNotify* other) {
  using std::swap;
  swap(is_paused_, other->is_paused_);
  swap(server_time_, other->server_time_);
  swap(player_time_, other->player_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerTimeNotify

// uint64 server_time = 5;
void PlayerTimeNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerTimeNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.server_time)
  return server_time_;
}
void PlayerTimeNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.server_time)
}

// uint64 player_time = 11;
void PlayerTimeNotify::clear_player_time() {
  player_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerTimeNotify::player_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.player_time)
  return player_time_;
}
void PlayerTimeNotify::set_player_time(::google::protobuf::uint64 value) {
  
  player_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.player_time)
}

// bool is_paused = 14;
void PlayerTimeNotify::clear_is_paused() {
  is_paused_ = false;
}
bool PlayerTimeNotify::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.is_paused)
  return is_paused_;
}
void PlayerTimeNotify::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.is_paused)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetPauseReq::kIsPausedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetPauseReq::PlayerSetPauseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetPauseReq)
}
PlayerSetPauseReq::PlayerSetPauseReq(const PlayerSetPauseReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_paused_ = from.is_paused_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetPauseReq)
}

void PlayerSetPauseReq::SharedCtor() {
  is_paused_ = false;
  _cached_size_ = 0;
}

PlayerSetPauseReq::~PlayerSetPauseReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetPauseReq)
  SharedDtor();
}

void PlayerSetPauseReq::SharedDtor() {
}

void PlayerSetPauseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetPauseReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetPauseReq& PlayerSetPauseReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetPauseReq* PlayerSetPauseReq::New(::google::protobuf::Arena* arena) const {
  PlayerSetPauseReq* n = new PlayerSetPauseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetPauseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetPauseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_paused_ = false;
  _internal_metadata_.Clear();
}

bool PlayerSetPauseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetPauseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_paused = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetPauseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetPauseReq)
  return false;
#undef DO_
}

void PlayerSetPauseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetPauseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_paused(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetPauseReq)
}

::google::protobuf::uint8* PlayerSetPauseReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetPauseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_paused(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetPauseReq)
  return target;
}

size_t PlayerSetPauseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetPauseReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_paused = 1;
  if (this->is_paused() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetPauseReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetPauseReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetPauseReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetPauseReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetPauseReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetPauseReq)
    MergeFrom(*source);
  }
}

void PlayerSetPauseReq::MergeFrom(const PlayerSetPauseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetPauseReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_paused() != 0) {
    set_is_paused(from.is_paused());
  }
}

void PlayerSetPauseReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetPauseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetPauseReq::CopyFrom(const PlayerSetPauseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetPauseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetPauseReq::IsInitialized() const {
  return true;
}

void PlayerSetPauseReq::Swap(PlayerSetPauseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetPauseReq::InternalSwap(PlayerSetPauseReq* other) {
  using std::swap;
  swap(is_paused_, other->is_paused_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetPauseReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetPauseReq

// bool is_paused = 1;
void PlayerSetPauseReq::clear_is_paused() {
  is_paused_ = false;
}
bool PlayerSetPauseReq::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseReq.is_paused)
  return is_paused_;
}
void PlayerSetPauseReq::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseReq.is_paused)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetPauseRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetPauseRsp::PlayerSetPauseRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetPauseRsp)
}
PlayerSetPauseRsp::PlayerSetPauseRsp(const PlayerSetPauseRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetPauseRsp)
}

void PlayerSetPauseRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerSetPauseRsp::~PlayerSetPauseRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetPauseRsp)
  SharedDtor();
}

void PlayerSetPauseRsp::SharedDtor() {
}

void PlayerSetPauseRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetPauseRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetPauseRsp& PlayerSetPauseRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetPauseRsp* PlayerSetPauseRsp::New(::google::protobuf::Arena* arena) const {
  PlayerSetPauseRsp* n = new PlayerSetPauseRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetPauseRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetPauseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerSetPauseRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetPauseRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetPauseRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetPauseRsp)
  return false;
#undef DO_
}

void PlayerSetPauseRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetPauseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetPauseRsp)
}

::google::protobuf::uint8* PlayerSetPauseRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetPauseRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetPauseRsp)
  return target;
}

size_t PlayerSetPauseRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetPauseRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetPauseRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetPauseRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetPauseRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetPauseRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetPauseRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetPauseRsp)
    MergeFrom(*source);
  }
}

void PlayerSetPauseRsp::MergeFrom(const PlayerSetPauseRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetPauseRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerSetPauseRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetPauseRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetPauseRsp::CopyFrom(const PlayerSetPauseRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetPauseRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetPauseRsp::IsInitialized() const {
  return true;
}

void PlayerSetPauseRsp::Swap(PlayerSetPauseRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetPauseRsp::InternalSwap(PlayerSetPauseRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetPauseRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetPauseRsp

// int32 retcode = 15;
void PlayerSetPauseRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerSetPauseRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseRsp.retcode)
  return retcode_;
}
void PlayerSetPauseRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetLanguageReq::kLanguageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetLanguageReq::PlayerSetLanguageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetLanguageReq)
}
PlayerSetLanguageReq::PlayerSetLanguageReq(const PlayerSetLanguageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_type_ = from.language_type_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetLanguageReq)
}

void PlayerSetLanguageReq::SharedCtor() {
  language_type_ = 0u;
  _cached_size_ = 0;
}

PlayerSetLanguageReq::~PlayerSetLanguageReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetLanguageReq)
  SharedDtor();
}

void PlayerSetLanguageReq::SharedDtor() {
}

void PlayerSetLanguageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetLanguageReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetLanguageReq& PlayerSetLanguageReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetLanguageReq* PlayerSetLanguageReq::New(::google::protobuf::Arena* arena) const {
  PlayerSetLanguageReq* n = new PlayerSetLanguageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetLanguageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetLanguageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_type_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerSetLanguageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetLanguageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 language_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetLanguageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetLanguageReq)
  return false;
#undef DO_
}

void PlayerSetLanguageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetLanguageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 language_type = 5;
  if (this->language_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->language_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetLanguageReq)
}

::google::protobuf::uint8* PlayerSetLanguageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetLanguageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 language_type = 5;
  if (this->language_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->language_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetLanguageReq)
  return target;
}

size_t PlayerSetLanguageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetLanguageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 language_type = 5;
  if (this->language_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->language_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetLanguageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetLanguageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetLanguageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetLanguageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetLanguageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetLanguageReq)
    MergeFrom(*source);
  }
}

void PlayerSetLanguageReq::MergeFrom(const PlayerSetLanguageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetLanguageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_type() != 0) {
    set_language_type(from.language_type());
  }
}

void PlayerSetLanguageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetLanguageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetLanguageReq::CopyFrom(const PlayerSetLanguageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetLanguageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetLanguageReq::IsInitialized() const {
  return true;
}

void PlayerSetLanguageReq::Swap(PlayerSetLanguageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetLanguageReq::InternalSwap(PlayerSetLanguageReq* other) {
  using std::swap;
  swap(language_type_, other->language_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetLanguageReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetLanguageReq

// uint32 language_type = 5;
void PlayerSetLanguageReq::clear_language_type() {
  language_type_ = 0u;
}
::google::protobuf::uint32 PlayerSetLanguageReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageReq.language_type)
  return language_type_;
}
void PlayerSetLanguageReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageReq.language_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSetLanguageRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSetLanguageRsp::PlayerSetLanguageRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerSetLanguageRsp)
}
PlayerSetLanguageRsp::PlayerSetLanguageRsp(const PlayerSetLanguageRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerSetLanguageRsp)
}

void PlayerSetLanguageRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerSetLanguageRsp::~PlayerSetLanguageRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerSetLanguageRsp)
  SharedDtor();
}

void PlayerSetLanguageRsp::SharedDtor() {
}

void PlayerSetLanguageRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerSetLanguageRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSetLanguageRsp& PlayerSetLanguageRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerSetLanguageRsp* PlayerSetLanguageRsp::New(::google::protobuf::Arena* arena) const {
  PlayerSetLanguageRsp* n = new PlayerSetLanguageRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerSetLanguageRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerSetLanguageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerSetLanguageRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerSetLanguageRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerSetLanguageRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerSetLanguageRsp)
  return false;
#undef DO_
}

void PlayerSetLanguageRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerSetLanguageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerSetLanguageRsp)
}

::google::protobuf::uint8* PlayerSetLanguageRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerSetLanguageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerSetLanguageRsp)
  return target;
}

size_t PlayerSetLanguageRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerSetLanguageRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerSetLanguageRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerSetLanguageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSetLanguageRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSetLanguageRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerSetLanguageRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerSetLanguageRsp)
    MergeFrom(*source);
  }
}

void PlayerSetLanguageRsp::MergeFrom(const PlayerSetLanguageRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerSetLanguageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerSetLanguageRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerSetLanguageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSetLanguageRsp::CopyFrom(const PlayerSetLanguageRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerSetLanguageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSetLanguageRsp::IsInitialized() const {
  return true;
}

void PlayerSetLanguageRsp::Swap(PlayerSetLanguageRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSetLanguageRsp::InternalSwap(PlayerSetLanguageRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerSetLanguageRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerSetLanguageRsp

// int32 retcode = 11;
void PlayerSetLanguageRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerSetLanguageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageRsp.retcode)
  return retcode_;
}
void PlayerSetLanguageRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataResVersionNotify::kClientSilenceMd5FieldNumber;
const int DataResVersionNotify::kClientSilenceVersionSuffixFieldNumber;
const int DataResVersionNotify::kResVersionConfigFieldNumber;
const int DataResVersionNotify::kIsDataNeedReloginFieldNumber;
const int DataResVersionNotify::kOpTypeFieldNumber;
const int DataResVersionNotify::kClientDataVersionFieldNumber;
const int DataResVersionNotify::kClientVersionSuffixFieldNumber;
const int DataResVersionNotify::kClientSilenceDataVersionFieldNumber;
const int DataResVersionNotify::kClientMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataResVersionNotify::DataResVersionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DataResVersionNotify)
}
DataResVersionNotify::DataResVersionNotify(const DataResVersionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_version_suffix().size() > 0) {
    client_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_suffix_);
  }
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_silence_md5().size() > 0) {
    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_md5().size() > 0) {
    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  client_silence_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_silence_version_suffix().size() > 0) {
    client_silence_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_version_suffix_);
  }
  if (from.has_res_version_config()) {
    res_version_config_ = new ::proto::ResVersionConfig(*from.res_version_config_);
  } else {
    res_version_config_ = NULL;
  }
  ::memcpy(&client_silence_data_version_, &from.client_silence_data_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&client_silence_data_version_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.DataResVersionNotify)
}

void DataResVersionNotify::SharedCtor() {
  client_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_version_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&res_version_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&res_version_config_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

DataResVersionNotify::~DataResVersionNotify() {
  // @@protoc_insertion_point(destructor:proto.DataResVersionNotify)
  SharedDtor();
}

void DataResVersionNotify::SharedDtor() {
  client_version_suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_version_suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete res_version_config_;
}

void DataResVersionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataResVersionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataResVersionNotify& DataResVersionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataResVersionNotify* DataResVersionNotify::New(::google::protobuf::Arena* arena) const {
  DataResVersionNotify* n = new DataResVersionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataResVersionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DataResVersionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) {
    delete res_version_config_;
  }
  res_version_config_ = NULL;
  ::memset(&client_silence_data_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&client_silence_data_version_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool DataResVersionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DataResVersionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 client_silence_data_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_silence_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_data_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_version_suffix = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version_suffix().data(), static_cast<int>(this->client_version_suffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DataResVersionNotify.client_version_suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_data_need_relogin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_data_need_relogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResVersionConfig res_version_config = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_silence_md5 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_silence_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DataResVersionNotify.client_silence_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DataResVersionNotify.DataResVersionOpType op_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::DataResVersionNotify_DataResVersionOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_md5 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_md5().data(), static_cast<int>(this->client_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DataResVersionNotify.client_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_silence_version_suffix = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_silence_version_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_silence_version_suffix().data(), static_cast<int>(this->client_silence_version_suffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DataResVersionNotify.client_silence_version_suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DataResVersionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DataResVersionNotify)
  return false;
#undef DO_
}

void DataResVersionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DataResVersionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client_silence_data_version = 1;
  if (this->client_silence_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_silence_data_version(), output);
  }

  // uint32 client_data_version = 2;
  if (this->client_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_data_version(), output);
  }

  // string client_version_suffix = 5;
  if (this->client_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_suffix().data(), static_cast<int>(this->client_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_version_suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_version_suffix(), output);
  }

  // bool is_data_need_relogin = 7;
  if (this->is_data_need_relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_data_need_relogin(), output);
  }

  // .proto.ResVersionConfig res_version_config = 9;
  if (this->has_res_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->res_version_config_, output);
  }

  // string client_silence_md5 = 10;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_silence_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->client_silence_md5(), output);
  }

  // .proto.DataResVersionNotify.DataResVersionOpType op_type = 12;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->op_type(), output);
  }

  // string client_md5 = 14;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->client_md5(), output);
  }

  // string client_silence_version_suffix = 15;
  if (this->client_silence_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_version_suffix().data(), static_cast<int>(this->client_silence_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_silence_version_suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->client_silence_version_suffix(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DataResVersionNotify)
}

::google::protobuf::uint8* DataResVersionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DataResVersionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client_silence_data_version = 1;
  if (this->client_silence_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_silence_data_version(), target);
  }

  // uint32 client_data_version = 2;
  if (this->client_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_data_version(), target);
  }

  // string client_version_suffix = 5;
  if (this->client_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_suffix().data(), static_cast<int>(this->client_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_version_suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_version_suffix(), target);
  }

  // bool is_data_need_relogin = 7;
  if (this->is_data_need_relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_data_need_relogin(), target);
  }

  // .proto.ResVersionConfig res_version_config = 9;
  if (this->has_res_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->res_version_config_, deterministic, target);
  }

  // string client_silence_md5 = 10;
  if (this->client_silence_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_md5().data(), static_cast<int>(this->client_silence_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_silence_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->client_silence_md5(), target);
  }

  // .proto.DataResVersionNotify.DataResVersionOpType op_type = 12;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->op_type(), target);
  }

  // string client_md5 = 14;
  if (this->client_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_md5().data(), static_cast<int>(this->client_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->client_md5(), target);
  }

  // string client_silence_version_suffix = 15;
  if (this->client_silence_version_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_version_suffix().data(), static_cast<int>(this->client_silence_version_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DataResVersionNotify.client_silence_version_suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->client_silence_version_suffix(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DataResVersionNotify)
  return target;
}

size_t DataResVersionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DataResVersionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string client_version_suffix = 5;
  if (this->client_version_suffix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version_suffix());
  }

  // string client_silence_md5 = 10;
  if (this->client_silence_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_silence_md5());
  }

  // string client_md5 = 14;
  if (this->client_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_md5());
  }

  // string client_silence_version_suffix = 15;
  if (this->client_silence_version_suffix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_silence_version_suffix());
  }

  // .proto.ResVersionConfig res_version_config = 9;
  if (this->has_res_version_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_version_config_);
  }

  // uint32 client_silence_data_version = 1;
  if (this->client_silence_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_silence_data_version());
  }

  // uint32 client_data_version = 2;
  if (this->client_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_data_version());
  }

  // bool is_data_need_relogin = 7;
  if (this->is_data_need_relogin() != 0) {
    total_size += 1 + 1;
  }

  // .proto.DataResVersionNotify.DataResVersionOpType op_type = 12;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataResVersionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DataResVersionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DataResVersionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataResVersionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DataResVersionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DataResVersionNotify)
    MergeFrom(*source);
  }
}

void DataResVersionNotify::MergeFrom(const DataResVersionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DataResVersionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_version_suffix().size() > 0) {

    client_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_suffix_);
  }
  if (from.client_silence_md5().size() > 0) {

    client_silence_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_md5_);
  }
  if (from.client_md5().size() > 0) {

    client_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_md5_);
  }
  if (from.client_silence_version_suffix().size() > 0) {

    client_silence_version_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_version_suffix_);
  }
  if (from.has_res_version_config()) {
    mutable_res_version_config()->::proto::ResVersionConfig::MergeFrom(from.res_version_config());
  }
  if (from.client_silence_data_version() != 0) {
    set_client_silence_data_version(from.client_silence_data_version());
  }
  if (from.client_data_version() != 0) {
    set_client_data_version(from.client_data_version());
  }
  if (from.is_data_need_relogin() != 0) {
    set_is_data_need_relogin(from.is_data_need_relogin());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void DataResVersionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DataResVersionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataResVersionNotify::CopyFrom(const DataResVersionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DataResVersionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataResVersionNotify::IsInitialized() const {
  return true;
}

void DataResVersionNotify::Swap(DataResVersionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataResVersionNotify::InternalSwap(DataResVersionNotify* other) {
  using std::swap;
  client_version_suffix_.Swap(&other->client_version_suffix_);
  client_silence_md5_.Swap(&other->client_silence_md5_);
  client_md5_.Swap(&other->client_md5_);
  client_silence_version_suffix_.Swap(&other->client_silence_version_suffix_);
  swap(res_version_config_, other->res_version_config_);
  swap(client_silence_data_version_, other->client_silence_data_version_);
  swap(client_data_version_, other->client_data_version_);
  swap(is_data_need_relogin_, other->is_data_need_relogin_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataResVersionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataResVersionNotify

// string client_silence_md5 = 10;
void DataResVersionNotify::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataResVersionNotify::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
void DataResVersionNotify::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_md5)
}
#if LANG_CXX11
void DataResVersionNotify::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_silence_md5)
}
#endif
void DataResVersionNotify::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_silence_md5)
}
void DataResVersionNotify::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_silence_md5)
}
::std::string* DataResVersionNotify::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataResVersionNotify::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataResVersionNotify::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_silence_md5)
}

// string client_silence_version_suffix = 15;
void DataResVersionNotify::clear_client_silence_version_suffix() {
  client_silence_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataResVersionNotify::client_silence_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_version_suffix)
  return client_silence_version_suffix_.GetNoArena();
}
void DataResVersionNotify::set_client_silence_version_suffix(const ::std::string& value) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_version_suffix)
}
#if LANG_CXX11
void DataResVersionNotify::set_client_silence_version_suffix(::std::string&& value) {
  
  client_silence_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_silence_version_suffix)
}
#endif
void DataResVersionNotify::set_client_silence_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_silence_version_suffix)
}
void DataResVersionNotify::set_client_silence_version_suffix(const char* value, size_t size) {
  
  client_silence_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_silence_version_suffix)
}
::std::string* DataResVersionNotify::mutable_client_silence_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_silence_version_suffix)
  return client_silence_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataResVersionNotify::release_client_silence_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_silence_version_suffix)
  
  return client_silence_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataResVersionNotify::set_allocated_client_silence_version_suffix(::std::string* client_silence_version_suffix) {
  if (client_silence_version_suffix != NULL) {
    
  } else {
    
  }
  client_silence_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_silence_version_suffix)
}

// .proto.ResVersionConfig res_version_config = 9;
bool DataResVersionNotify::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
void DataResVersionNotify::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
const ::proto::ResVersionConfig& DataResVersionNotify::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
::proto::ResVersionConfig* DataResVersionNotify::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.res_version_config)
  return res_version_config_;
}
::proto::ResVersionConfig* DataResVersionNotify::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
void DataResVersionNotify::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.res_version_config)
}

// bool is_data_need_relogin = 7;
void DataResVersionNotify::clear_is_data_need_relogin() {
  is_data_need_relogin_ = false;
}
bool DataResVersionNotify::is_data_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.is_data_need_relogin)
  return is_data_need_relogin_;
}
void DataResVersionNotify::set_is_data_need_relogin(bool value) {
  
  is_data_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.is_data_need_relogin)
}

// .proto.DataResVersionNotify.DataResVersionOpType op_type = 12;
void DataResVersionNotify::clear_op_type() {
  op_type_ = 0;
}
::proto::DataResVersionNotify_DataResVersionOpType DataResVersionNotify::op_type() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.op_type)
  return static_cast< ::proto::DataResVersionNotify_DataResVersionOpType >(op_type_);
}
void DataResVersionNotify::set_op_type(::proto::DataResVersionNotify_DataResVersionOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.op_type)
}

// uint32 client_data_version = 2;
void DataResVersionNotify::clear_client_data_version() {
  client_data_version_ = 0u;
}
::google::protobuf::uint32 DataResVersionNotify::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_data_version)
  return client_data_version_;
}
void DataResVersionNotify::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_data_version)
}

// string client_version_suffix = 5;
void DataResVersionNotify::clear_client_version_suffix() {
  client_version_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataResVersionNotify::client_version_suffix() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_version_suffix)
  return client_version_suffix_.GetNoArena();
}
void DataResVersionNotify::set_client_version_suffix(const ::std::string& value) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_version_suffix)
}
#if LANG_CXX11
void DataResVersionNotify::set_client_version_suffix(::std::string&& value) {
  
  client_version_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_version_suffix)
}
#endif
void DataResVersionNotify::set_client_version_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_version_suffix)
}
void DataResVersionNotify::set_client_version_suffix(const char* value, size_t size) {
  
  client_version_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_version_suffix)
}
::std::string* DataResVersionNotify::mutable_client_version_suffix() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_version_suffix)
  return client_version_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataResVersionNotify::release_client_version_suffix() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_version_suffix)
  
  return client_version_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataResVersionNotify::set_allocated_client_version_suffix(::std::string* client_version_suffix) {
  if (client_version_suffix != NULL) {
    
  } else {
    
  }
  client_version_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_suffix);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_version_suffix)
}

// uint32 client_silence_data_version = 1;
void DataResVersionNotify::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
::google::protobuf::uint32 DataResVersionNotify::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_data_version)
  return client_silence_data_version_;
}
void DataResVersionNotify::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_data_version)
}

// string client_md5 = 14;
void DataResVersionNotify::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataResVersionNotify::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_md5)
  return client_md5_.GetNoArena();
}
void DataResVersionNotify::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_md5)
}
#if LANG_CXX11
void DataResVersionNotify::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_md5)
}
#endif
void DataResVersionNotify::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_md5)
}
void DataResVersionNotify::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_md5)
}
::std::string* DataResVersionNotify::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataResVersionNotify::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataResVersionNotify::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_md5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskInfo::kRewardIdFieldNumber;
const int DailyTaskInfo::kProgressFieldNumber;
const int DailyTaskInfo::kFinishProgressFieldNumber;
const int DailyTaskInfo::kDailyTaskIdFieldNumber;
const int DailyTaskInfo::kIsFinishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskInfo::DailyTaskInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskInfo)
}
DailyTaskInfo::DailyTaskInfo(const DailyTaskInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reward_id_, &from.reward_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&reward_id_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskInfo)
}

void DailyTaskInfo::SharedCtor() {
  ::memset(&reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&reward_id_)) + sizeof(progress_));
  _cached_size_ = 0;
}

DailyTaskInfo::~DailyTaskInfo() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskInfo)
  SharedDtor();
}

void DailyTaskInfo::SharedDtor() {
}

void DailyTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskInfo::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskInfo& DailyTaskInfo::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskInfo* DailyTaskInfo::New(::google::protobuf::Arena* arena) const {
  DailyTaskInfo* n = new DailyTaskInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&reward_id_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool DailyTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reward_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 daily_task_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finish_progress = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finish_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskInfo)
  return false;
#undef DO_
}

void DailyTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 3;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->reward_id(), output);
  }

  // uint32 daily_task_id = 4;
  if (this->daily_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->daily_task_id(), output);
  }

  // uint32 finish_progress = 10;
  if (this->finish_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->finish_progress(), output);
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->progress(), output);
  }

  // bool is_finished = 14;
  if (this->is_finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_finished(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskInfo)
}

::google::protobuf::uint8* DailyTaskInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 3;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->reward_id(), target);
  }

  // uint32 daily_task_id = 4;
  if (this->daily_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->daily_task_id(), target);
  }

  // uint32 finish_progress = 10;
  if (this->finish_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->finish_progress(), target);
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->progress(), target);
  }

  // bool is_finished = 14;
  if (this->is_finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_finished(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskInfo)
  return target;
}

size_t DailyTaskInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 reward_id = 3;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  // uint32 daily_task_id = 4;
  if (this->daily_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_task_id());
  }

  // bool is_finished = 14;
  if (this->is_finished() != 0) {
    total_size += 1 + 1;
  }

  // uint32 finish_progress = 10;
  if (this->finish_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finish_progress());
  }

  // uint32 progress = 13;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskInfo)
    MergeFrom(*source);
  }
}

void DailyTaskInfo::MergeFrom(const DailyTaskInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
  if (from.daily_task_id() != 0) {
    set_daily_task_id(from.daily_task_id());
  }
  if (from.is_finished() != 0) {
    set_is_finished(from.is_finished());
  }
  if (from.finish_progress() != 0) {
    set_finish_progress(from.finish_progress());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void DailyTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskInfo::CopyFrom(const DailyTaskInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskInfo::IsInitialized() const {
  return true;
}

void DailyTaskInfo::Swap(DailyTaskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskInfo::InternalSwap(DailyTaskInfo* other) {
  using std::swap;
  swap(reward_id_, other->reward_id_);
  swap(daily_task_id_, other->daily_task_id_);
  swap(is_finished_, other->is_finished_);
  swap(finish_progress_, other->finish_progress_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskInfo

// uint32 reward_id = 3;
void DailyTaskInfo::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.reward_id)
  return reward_id_;
}
void DailyTaskInfo::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.reward_id)
}

// uint32 progress = 13;
void DailyTaskInfo::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.progress)
  return progress_;
}
void DailyTaskInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.progress)
}

// uint32 finish_progress = 10;
void DailyTaskInfo::clear_finish_progress() {
  finish_progress_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::finish_progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.finish_progress)
  return finish_progress_;
}
void DailyTaskInfo::set_finish_progress(::google::protobuf::uint32 value) {
  
  finish_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.finish_progress)
}

// uint32 daily_task_id = 4;
void DailyTaskInfo::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskInfo::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.daily_task_id)
  return daily_task_id_;
}
void DailyTaskInfo::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.daily_task_id)
}

// bool is_finished = 14;
void DailyTaskInfo::clear_is_finished() {
  is_finished_ = false;
}
bool DailyTaskInfo::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.is_finished)
  return is_finished_;
}
void DailyTaskInfo::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.is_finished)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskDataNotify::kScoreRewardIdFieldNumber;
const int DailyTaskDataNotify::kFinishedNumFieldNumber;
const int DailyTaskDataNotify::kIsTakenScoreRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskDataNotify::DailyTaskDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskDataNotify)
}
DailyTaskDataNotify::DailyTaskDataNotify(const DailyTaskDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&score_reward_id_, &from.score_reward_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_taken_score_reward_) -
    reinterpret_cast<char*>(&score_reward_id_)) + sizeof(is_taken_score_reward_));
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskDataNotify)
}

void DailyTaskDataNotify::SharedCtor() {
  ::memset(&score_reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_taken_score_reward_) -
      reinterpret_cast<char*>(&score_reward_id_)) + sizeof(is_taken_score_reward_));
  _cached_size_ = 0;
}

DailyTaskDataNotify::~DailyTaskDataNotify() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskDataNotify)
  SharedDtor();
}

void DailyTaskDataNotify::SharedDtor() {
}

void DailyTaskDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskDataNotify& DailyTaskDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskDataNotify* DailyTaskDataNotify::New(::google::protobuf::Arena* arena) const {
  DailyTaskDataNotify* n = new DailyTaskDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&score_reward_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_taken_score_reward_) -
      reinterpret_cast<char*>(&score_reward_id_)) + sizeof(is_taken_score_reward_));
  _internal_metadata_.Clear();
}

bool DailyTaskDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 finished_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finished_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_taken_score_reward = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_taken_score_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 score_reward_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskDataNotify)
  return false;
#undef DO_
}

void DailyTaskDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 finished_num = 4;
  if (this->finished_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->finished_num(), output);
  }

  // bool is_taken_score_reward = 9;
  if (this->is_taken_score_reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_taken_score_reward(), output);
  }

  // uint32 score_reward_id = 11;
  if (this->score_reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->score_reward_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskDataNotify)
}

::google::protobuf::uint8* DailyTaskDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 finished_num = 4;
  if (this->finished_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->finished_num(), target);
  }

  // bool is_taken_score_reward = 9;
  if (this->is_taken_score_reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_taken_score_reward(), target);
  }

  // uint32 score_reward_id = 11;
  if (this->score_reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->score_reward_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskDataNotify)
  return target;
}

size_t DailyTaskDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 score_reward_id = 11;
  if (this->score_reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score_reward_id());
  }

  // uint32 finished_num = 4;
  if (this->finished_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finished_num());
  }

  // bool is_taken_score_reward = 9;
  if (this->is_taken_score_reward() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskDataNotify)
    MergeFrom(*source);
  }
}

void DailyTaskDataNotify::MergeFrom(const DailyTaskDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score_reward_id() != 0) {
    set_score_reward_id(from.score_reward_id());
  }
  if (from.finished_num() != 0) {
    set_finished_num(from.finished_num());
  }
  if (from.is_taken_score_reward() != 0) {
    set_is_taken_score_reward(from.is_taken_score_reward());
  }
}

void DailyTaskDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskDataNotify::CopyFrom(const DailyTaskDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskDataNotify::IsInitialized() const {
  return true;
}

void DailyTaskDataNotify::Swap(DailyTaskDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskDataNotify::InternalSwap(DailyTaskDataNotify* other) {
  using std::swap;
  swap(score_reward_id_, other->score_reward_id_);
  swap(finished_num_, other->finished_num_);
  swap(is_taken_score_reward_, other->is_taken_score_reward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskDataNotify

// uint32 score_reward_id = 11;
void DailyTaskDataNotify::clear_score_reward_id() {
  score_reward_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskDataNotify::score_reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.score_reward_id)
  return score_reward_id_;
}
void DailyTaskDataNotify::set_score_reward_id(::google::protobuf::uint32 value) {
  
  score_reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.score_reward_id)
}

// uint32 finished_num = 4;
void DailyTaskDataNotify::clear_finished_num() {
  finished_num_ = 0u;
}
::google::protobuf::uint32 DailyTaskDataNotify::finished_num() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.finished_num)
  return finished_num_;
}
void DailyTaskDataNotify::set_finished_num(::google::protobuf::uint32 value) {
  
  finished_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.finished_num)
}

// bool is_taken_score_reward = 9;
void DailyTaskDataNotify::clear_is_taken_score_reward() {
  is_taken_score_reward_ = false;
}
bool DailyTaskDataNotify::is_taken_score_reward() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.is_taken_score_reward)
  return is_taken_score_reward_;
}
void DailyTaskDataNotify::set_is_taken_score_reward(bool value) {
  
  is_taken_score_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.is_taken_score_reward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskProgressNotify::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskProgressNotify::DailyTaskProgressNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskProgressNotify)
}
DailyTaskProgressNotify::DailyTaskProgressNotify(const DailyTaskProgressNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::proto::DailyTaskInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskProgressNotify)
}

void DailyTaskProgressNotify::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

DailyTaskProgressNotify::~DailyTaskProgressNotify() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskProgressNotify)
  SharedDtor();
}

void DailyTaskProgressNotify::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void DailyTaskProgressNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskProgressNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskProgressNotify& DailyTaskProgressNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskProgressNotify* DailyTaskProgressNotify::New(::google::protobuf::Arena* arena) const {
  DailyTaskProgressNotify* n = new DailyTaskProgressNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskProgressNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool DailyTaskProgressNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskProgressNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DailyTaskInfo info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskProgressNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskProgressNotify)
  return false;
#undef DO_
}

void DailyTaskProgressNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DailyTaskInfo info = 12;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskProgressNotify)
}

::google::protobuf::uint8* DailyTaskProgressNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DailyTaskInfo info = 12;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskProgressNotify)
  return target;
}

size_t DailyTaskProgressNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskProgressNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.DailyTaskInfo info = 12;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskProgressNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskProgressNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskProgressNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskProgressNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskProgressNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskProgressNotify)
    MergeFrom(*source);
  }
}

void DailyTaskProgressNotify::MergeFrom(const DailyTaskProgressNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskProgressNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::proto::DailyTaskInfo::MergeFrom(from.info());
  }
}

void DailyTaskProgressNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskProgressNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskProgressNotify::CopyFrom(const DailyTaskProgressNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskProgressNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskProgressNotify::IsInitialized() const {
  return true;
}

void DailyTaskProgressNotify::Swap(DailyTaskProgressNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskProgressNotify::InternalSwap(DailyTaskProgressNotify* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskProgressNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskProgressNotify

// .proto.DailyTaskInfo info = 12;
bool DailyTaskProgressNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void DailyTaskProgressNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::proto::DailyTaskInfo& DailyTaskProgressNotify::info() const {
  const ::proto::DailyTaskInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.DailyTaskProgressNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DailyTaskInfo*>(
      &::proto::_DailyTaskInfo_default_instance_);
}
::proto::DailyTaskInfo* DailyTaskProgressNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::DailyTaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.DailyTaskProgressNotify.info)
  return info_;
}
::proto::DailyTaskInfo* DailyTaskProgressNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.DailyTaskProgressNotify.info)
  
  ::proto::DailyTaskInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void DailyTaskProgressNotify::set_allocated_info(::proto::DailyTaskInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DailyTaskProgressNotify.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskScoreRewardNotify::kRewardIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskScoreRewardNotify::DailyTaskScoreRewardNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskScoreRewardNotify)
}
DailyTaskScoreRewardNotify::DailyTaskScoreRewardNotify(const DailyTaskScoreRewardNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_id_ = from.reward_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskScoreRewardNotify)
}

void DailyTaskScoreRewardNotify::SharedCtor() {
  reward_id_ = 0u;
  _cached_size_ = 0;
}

DailyTaskScoreRewardNotify::~DailyTaskScoreRewardNotify() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskScoreRewardNotify)
  SharedDtor();
}

void DailyTaskScoreRewardNotify::SharedDtor() {
}

void DailyTaskScoreRewardNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskScoreRewardNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskScoreRewardNotify& DailyTaskScoreRewardNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskScoreRewardNotify* DailyTaskScoreRewardNotify::New(::google::protobuf::Arena* arena) const {
  DailyTaskScoreRewardNotify* n = new DailyTaskScoreRewardNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskScoreRewardNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskScoreRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DailyTaskScoreRewardNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskScoreRewardNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reward_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskScoreRewardNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskScoreRewardNotify)
  return false;
#undef DO_
}

void DailyTaskScoreRewardNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskScoreRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 14;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->reward_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskScoreRewardNotify)
}

::google::protobuf::uint8* DailyTaskScoreRewardNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskScoreRewardNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 14;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->reward_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskScoreRewardNotify)
  return target;
}

size_t DailyTaskScoreRewardNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskScoreRewardNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 reward_id = 14;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskScoreRewardNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskScoreRewardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskScoreRewardNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskScoreRewardNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskScoreRewardNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskScoreRewardNotify)
    MergeFrom(*source);
  }
}

void DailyTaskScoreRewardNotify::MergeFrom(const DailyTaskScoreRewardNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskScoreRewardNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
}

void DailyTaskScoreRewardNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskScoreRewardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskScoreRewardNotify::CopyFrom(const DailyTaskScoreRewardNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskScoreRewardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskScoreRewardNotify::IsInitialized() const {
  return true;
}

void DailyTaskScoreRewardNotify::Swap(DailyTaskScoreRewardNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskScoreRewardNotify::InternalSwap(DailyTaskScoreRewardNotify* other) {
  using std::swap;
  swap(reward_id_, other->reward_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskScoreRewardNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskScoreRewardNotify

// uint32 reward_id = 14;
void DailyTaskScoreRewardNotify::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskScoreRewardNotify::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskScoreRewardNotify.reward_id)
  return reward_id_;
}
void DailyTaskScoreRewardNotify::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskScoreRewardNotify.reward_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldOwnerDailyTaskNotify::kTaskListFieldNumber;
const int WorldOwnerDailyTaskNotify::kFinishedDailyTaskNumFieldNumber;
const int WorldOwnerDailyTaskNotify::kFilterCityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldOwnerDailyTaskNotify::WorldOwnerDailyTaskNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldOwnerDailyTaskNotify)
}
WorldOwnerDailyTaskNotify::WorldOwnerDailyTaskNotify(const WorldOwnerDailyTaskNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      task_list_(from.task_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&filter_city_id_, &from.filter_city_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&finished_daily_task_num_) -
    reinterpret_cast<char*>(&filter_city_id_)) + sizeof(finished_daily_task_num_));
  // @@protoc_insertion_point(copy_constructor:proto.WorldOwnerDailyTaskNotify)
}

void WorldOwnerDailyTaskNotify::SharedCtor() {
  ::memset(&filter_city_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_daily_task_num_) -
      reinterpret_cast<char*>(&filter_city_id_)) + sizeof(finished_daily_task_num_));
  _cached_size_ = 0;
}

WorldOwnerDailyTaskNotify::~WorldOwnerDailyTaskNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldOwnerDailyTaskNotify)
  SharedDtor();
}

void WorldOwnerDailyTaskNotify::SharedDtor() {
}

void WorldOwnerDailyTaskNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldOwnerDailyTaskNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldOwnerDailyTaskNotify& WorldOwnerDailyTaskNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldOwnerDailyTaskNotify* WorldOwnerDailyTaskNotify::New(::google::protobuf::Arena* arena) const {
  WorldOwnerDailyTaskNotify* n = new WorldOwnerDailyTaskNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldOwnerDailyTaskNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldOwnerDailyTaskNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_list_.Clear();
  ::memset(&filter_city_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_daily_task_num_) -
      reinterpret_cast<char*>(&filter_city_id_)) + sizeof(finished_daily_task_num_));
  _internal_metadata_.Clear();
}

bool WorldOwnerDailyTaskNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldOwnerDailyTaskNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.DailyTaskInfo task_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filter_city_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filter_city_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finished_daily_task_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finished_daily_task_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldOwnerDailyTaskNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldOwnerDailyTaskNotify)
  return false;
#undef DO_
}

void WorldOwnerDailyTaskNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldOwnerDailyTaskNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DailyTaskInfo task_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->task_list(static_cast<int>(i)), output);
  }

  // uint32 filter_city_id = 2;
  if (this->filter_city_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->filter_city_id(), output);
  }

  // uint32 finished_daily_task_num = 5;
  if (this->finished_daily_task_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->finished_daily_task_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldOwnerDailyTaskNotify)
}

::google::protobuf::uint8* WorldOwnerDailyTaskNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldOwnerDailyTaskNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DailyTaskInfo task_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->task_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 filter_city_id = 2;
  if (this->filter_city_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->filter_city_id(), target);
  }

  // uint32 finished_daily_task_num = 5;
  if (this->finished_daily_task_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->finished_daily_task_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldOwnerDailyTaskNotify)
  return target;
}

size_t WorldOwnerDailyTaskNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldOwnerDailyTaskNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.DailyTaskInfo task_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->task_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->task_list(static_cast<int>(i)));
    }
  }

  // uint32 filter_city_id = 2;
  if (this->filter_city_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filter_city_id());
  }

  // uint32 finished_daily_task_num = 5;
  if (this->finished_daily_task_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finished_daily_task_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldOwnerDailyTaskNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldOwnerDailyTaskNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldOwnerDailyTaskNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldOwnerDailyTaskNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldOwnerDailyTaskNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldOwnerDailyTaskNotify)
    MergeFrom(*source);
  }
}

void WorldOwnerDailyTaskNotify::MergeFrom(const WorldOwnerDailyTaskNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldOwnerDailyTaskNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_list_.MergeFrom(from.task_list_);
  if (from.filter_city_id() != 0) {
    set_filter_city_id(from.filter_city_id());
  }
  if (from.finished_daily_task_num() != 0) {
    set_finished_daily_task_num(from.finished_daily_task_num());
  }
}

void WorldOwnerDailyTaskNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldOwnerDailyTaskNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldOwnerDailyTaskNotify::CopyFrom(const WorldOwnerDailyTaskNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldOwnerDailyTaskNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldOwnerDailyTaskNotify::IsInitialized() const {
  return true;
}

void WorldOwnerDailyTaskNotify::Swap(WorldOwnerDailyTaskNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldOwnerDailyTaskNotify::InternalSwap(WorldOwnerDailyTaskNotify* other) {
  using std::swap;
  task_list_.InternalSwap(&other->task_list_);
  swap(filter_city_id_, other->filter_city_id_);
  swap(finished_daily_task_num_, other->finished_daily_task_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldOwnerDailyTaskNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldOwnerDailyTaskNotify

// repeated .proto.DailyTaskInfo task_list = 1;
int WorldOwnerDailyTaskNotify::task_list_size() const {
  return task_list_.size();
}
void WorldOwnerDailyTaskNotify::clear_task_list() {
  task_list_.Clear();
}
const ::proto::DailyTaskInfo& WorldOwnerDailyTaskNotify::task_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Get(index);
}
::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::mutable_task_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Mutable(index);
}
::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::add_task_list() {
  // @@protoc_insertion_point(field_add:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >*
WorldOwnerDailyTaskNotify::mutable_task_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return &task_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >&
WorldOwnerDailyTaskNotify::task_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_;
}

// uint32 finished_daily_task_num = 5;
void WorldOwnerDailyTaskNotify::clear_finished_daily_task_num() {
  finished_daily_task_num_ = 0u;
}
::google::protobuf::uint32 WorldOwnerDailyTaskNotify::finished_daily_task_num() const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.finished_daily_task_num)
  return finished_daily_task_num_;
}
void WorldOwnerDailyTaskNotify::set_finished_daily_task_num(::google::protobuf::uint32 value) {
  
  finished_daily_task_num_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldOwnerDailyTaskNotify.finished_daily_task_num)
}

// uint32 filter_city_id = 2;
void WorldOwnerDailyTaskNotify::clear_filter_city_id() {
  filter_city_id_ = 0u;
}
::google::protobuf::uint32 WorldOwnerDailyTaskNotify::filter_city_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.filter_city_id)
  return filter_city_id_;
}
void WorldOwnerDailyTaskNotify::set_filter_city_id(::google::protobuf::uint32 value) {
  
  filter_city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldOwnerDailyTaskNotify.filter_city_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRandTaskInfoNotify::kRandTaskIdFieldNumber;
const int AddRandTaskInfoNotify::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRandTaskInfoNotify::AddRandTaskInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddRandTaskInfoNotify)
}
AddRandTaskInfoNotify::AddRandTaskInfoNotify(const AddRandTaskInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  rand_task_id_ = from.rand_task_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AddRandTaskInfoNotify)
}

void AddRandTaskInfoNotify::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rand_task_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(rand_task_id_));
  _cached_size_ = 0;
}

AddRandTaskInfoNotify::~AddRandTaskInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.AddRandTaskInfoNotify)
  SharedDtor();
}

void AddRandTaskInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void AddRandTaskInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRandTaskInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRandTaskInfoNotify& AddRandTaskInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddRandTaskInfoNotify* AddRandTaskInfoNotify::New(::google::protobuf::Arena* arena) const {
  AddRandTaskInfoNotify* n = new AddRandTaskInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRandTaskInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  rand_task_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddRandTaskInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddRandTaskInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rand_task_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rand_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddRandTaskInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddRandTaskInfoNotify)
  return false;
#undef DO_
}

void AddRandTaskInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rand_task_id = 5;
  if (this->rand_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rand_task_id(), output);
  }

  // .proto.Vector pos = 13;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddRandTaskInfoNotify)
}

::google::protobuf::uint8* AddRandTaskInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rand_task_id = 5;
  if (this->rand_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->rand_task_id(), target);
  }

  // .proto.Vector pos = 13;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddRandTaskInfoNotify)
  return target;
}

size_t AddRandTaskInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddRandTaskInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 13;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 rand_task_id = 5;
  if (this->rand_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rand_task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRandTaskInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRandTaskInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRandTaskInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddRandTaskInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddRandTaskInfoNotify)
    MergeFrom(*source);
  }
}

void AddRandTaskInfoNotify::MergeFrom(const AddRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.rand_task_id() != 0) {
    set_rand_task_id(from.rand_task_id());
  }
}

void AddRandTaskInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRandTaskInfoNotify::CopyFrom(const AddRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRandTaskInfoNotify::IsInitialized() const {
  return true;
}

void AddRandTaskInfoNotify::Swap(AddRandTaskInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRandTaskInfoNotify::InternalSwap(AddRandTaskInfoNotify* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rand_task_id_, other->rand_task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRandTaskInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRandTaskInfoNotify

// uint32 rand_task_id = 5;
void AddRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
::google::protobuf::uint32 AddRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
void AddRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRandTaskInfoNotify.rand_task_id)
}

// .proto.Vector pos = 13;
bool AddRandTaskInfoNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void AddRandTaskInfoNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& AddRandTaskInfoNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* AddRandTaskInfoNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddRandTaskInfoNotify.pos)
  return pos_;
}
::proto::Vector* AddRandTaskInfoNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AddRandTaskInfoNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void AddRandTaskInfoNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddRandTaskInfoNotify.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveRandTaskInfoNotify::kIsSuccFieldNumber;
const int RemoveRandTaskInfoNotify::kReasonFieldNumber;
const int RemoveRandTaskInfoNotify::kRandTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveRandTaskInfoNotify::RemoveRandTaskInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveRandTaskInfoNotify)
}
RemoveRandTaskInfoNotify::RemoveRandTaskInfoNotify(const RemoveRandTaskInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rand_task_id_, &from.rand_task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&rand_task_id_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.RemoveRandTaskInfoNotify)
}

void RemoveRandTaskInfoNotify::SharedCtor() {
  ::memset(&rand_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&rand_task_id_)) + sizeof(reason_));
  _cached_size_ = 0;
}

RemoveRandTaskInfoNotify::~RemoveRandTaskInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.RemoveRandTaskInfoNotify)
  SharedDtor();
}

void RemoveRandTaskInfoNotify::SharedDtor() {
}

void RemoveRandTaskInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveRandTaskInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveRandTaskInfoNotify& RemoveRandTaskInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveRandTaskInfoNotify* RemoveRandTaskInfoNotify::New(::google::protobuf::Arena* arena) const {
  RemoveRandTaskInfoNotify* n = new RemoveRandTaskInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveRandTaskInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rand_task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&rand_task_id_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool RemoveRandTaskInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveRandTaskInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_succ = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::RemoveRandTaskInfoNotify_FinishReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rand_task_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rand_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveRandTaskInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveRandTaskInfoNotify)
  return false;
#undef DO_
}

void RemoveRandTaskInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_succ = 9;
  if (this->is_succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_succ(), output);
  }

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 10;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->reason(), output);
  }

  // uint32 rand_task_id = 13;
  if (this->rand_task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->rand_task_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveRandTaskInfoNotify)
}

::google::protobuf::uint8* RemoveRandTaskInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveRandTaskInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_succ = 9;
  if (this->is_succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_succ(), target);
  }

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 10;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->reason(), target);
  }

  // uint32 rand_task_id = 13;
  if (this->rand_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->rand_task_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveRandTaskInfoNotify)
  return target;
}

size_t RemoveRandTaskInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveRandTaskInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rand_task_id = 13;
  if (this->rand_task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rand_task_id());
  }

  // bool is_succ = 9;
  if (this->is_succ() != 0) {
    total_size += 1 + 1;
  }

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 10;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveRandTaskInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRandTaskInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveRandTaskInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveRandTaskInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveRandTaskInfoNotify)
    MergeFrom(*source);
  }
}

void RemoveRandTaskInfoNotify::MergeFrom(const RemoveRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveRandTaskInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rand_task_id() != 0) {
    set_rand_task_id(from.rand_task_id());
  }
  if (from.is_succ() != 0) {
    set_is_succ(from.is_succ());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void RemoveRandTaskInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRandTaskInfoNotify::CopyFrom(const RemoveRandTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveRandTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRandTaskInfoNotify::IsInitialized() const {
  return true;
}

void RemoveRandTaskInfoNotify::Swap(RemoveRandTaskInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveRandTaskInfoNotify::InternalSwap(RemoveRandTaskInfoNotify* other) {
  using std::swap;
  swap(rand_task_id_, other->rand_task_id_);
  swap(is_succ_, other->is_succ_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveRandTaskInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveRandTaskInfoNotify

// bool is_succ = 9;
void RemoveRandTaskInfoNotify::clear_is_succ() {
  is_succ_ = false;
}
bool RemoveRandTaskInfoNotify::is_succ() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.is_succ)
  return is_succ_;
}
void RemoveRandTaskInfoNotify::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.is_succ)
}

// .proto.RemoveRandTaskInfoNotify.FinishReason reason = 10;
void RemoveRandTaskInfoNotify::clear_reason() {
  reason_ = 0;
}
::proto::RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.reason)
  return static_cast< ::proto::RemoveRandTaskInfoNotify_FinishReason >(reason_);
}
void RemoveRandTaskInfoNotify::set_reason(::proto::RemoveRandTaskInfoNotify_FinishReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.reason)
}

// uint32 rand_task_id = 13;
void RemoveRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
::google::protobuf::uint32 RemoveRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
void RemoveRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.rand_task_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakePlayerLevelRewardReq::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakePlayerLevelRewardReq::TakePlayerLevelRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakePlayerLevelRewardReq)
}
TakePlayerLevelRewardReq::TakePlayerLevelRewardReq(const TakePlayerLevelRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:proto.TakePlayerLevelRewardReq)
}

void TakePlayerLevelRewardReq::SharedCtor() {
  level_ = 0u;
  _cached_size_ = 0;
}

TakePlayerLevelRewardReq::~TakePlayerLevelRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakePlayerLevelRewardReq)
  SharedDtor();
}

void TakePlayerLevelRewardReq::SharedDtor() {
}

void TakePlayerLevelRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakePlayerLevelRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakePlayerLevelRewardReq& TakePlayerLevelRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakePlayerLevelRewardReq* TakePlayerLevelRewardReq::New(::google::protobuf::Arena* arena) const {
  TakePlayerLevelRewardReq* n = new TakePlayerLevelRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakePlayerLevelRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakePlayerLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_ = 0u;
  _internal_metadata_.Clear();
}

bool TakePlayerLevelRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakePlayerLevelRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakePlayerLevelRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakePlayerLevelRewardReq)
  return false;
#undef DO_
}

void TakePlayerLevelRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakePlayerLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakePlayerLevelRewardReq)
}

::google::protobuf::uint8* TakePlayerLevelRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakePlayerLevelRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakePlayerLevelRewardReq)
  return target;
}

size_t TakePlayerLevelRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakePlayerLevelRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakePlayerLevelRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakePlayerLevelRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakePlayerLevelRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakePlayerLevelRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakePlayerLevelRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakePlayerLevelRewardReq)
    MergeFrom(*source);
  }
}

void TakePlayerLevelRewardReq::MergeFrom(const TakePlayerLevelRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakePlayerLevelRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    set_level(from.level());
  }
}

void TakePlayerLevelRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakePlayerLevelRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakePlayerLevelRewardReq::CopyFrom(const TakePlayerLevelRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakePlayerLevelRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakePlayerLevelRewardReq::IsInitialized() const {
  return true;
}

void TakePlayerLevelRewardReq::Swap(TakePlayerLevelRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakePlayerLevelRewardReq::InternalSwap(TakePlayerLevelRewardReq* other) {
  using std::swap;
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakePlayerLevelRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakePlayerLevelRewardReq

// uint32 level = 3;
void TakePlayerLevelRewardReq::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 TakePlayerLevelRewardReq::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardReq.level)
  return level_;
}
void TakePlayerLevelRewardReq::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardReq.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakePlayerLevelRewardRsp::kRewardIdFieldNumber;
const int TakePlayerLevelRewardRsp::kRetcodeFieldNumber;
const int TakePlayerLevelRewardRsp::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakePlayerLevelRewardRsp::TakePlayerLevelRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakePlayerLevelRewardRsp)
}
TakePlayerLevelRewardRsp::TakePlayerLevelRewardRsp(const TakePlayerLevelRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(reward_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakePlayerLevelRewardRsp)
}

void TakePlayerLevelRewardRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reward_id_));
  _cached_size_ = 0;
}

TakePlayerLevelRewardRsp::~TakePlayerLevelRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakePlayerLevelRewardRsp)
  SharedDtor();
}

void TakePlayerLevelRewardRsp::SharedDtor() {
}

void TakePlayerLevelRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakePlayerLevelRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakePlayerLevelRewardRsp& TakePlayerLevelRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakePlayerLevelRewardRsp* TakePlayerLevelRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakePlayerLevelRewardRsp* n = new TakePlayerLevelRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakePlayerLevelRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakePlayerLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reward_id_));
  _internal_metadata_.Clear();
}

bool TakePlayerLevelRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakePlayerLevelRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reward_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakePlayerLevelRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakePlayerLevelRewardRsp)
  return false;
#undef DO_
}

void TakePlayerLevelRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakePlayerLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 6;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  // uint32 reward_id = 9;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->reward_id(), output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakePlayerLevelRewardRsp)
}

::google::protobuf::uint8* TakePlayerLevelRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakePlayerLevelRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 6;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  // uint32 reward_id = 9;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->reward_id(), target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakePlayerLevelRewardRsp)
  return target;
}

size_t TakePlayerLevelRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakePlayerLevelRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 level = 6;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 reward_id = 9;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakePlayerLevelRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakePlayerLevelRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakePlayerLevelRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakePlayerLevelRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakePlayerLevelRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakePlayerLevelRewardRsp)
    MergeFrom(*source);
  }
}

void TakePlayerLevelRewardRsp::MergeFrom(const TakePlayerLevelRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakePlayerLevelRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
}

void TakePlayerLevelRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakePlayerLevelRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakePlayerLevelRewardRsp::CopyFrom(const TakePlayerLevelRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakePlayerLevelRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakePlayerLevelRewardRsp::IsInitialized() const {
  return true;
}

void TakePlayerLevelRewardRsp::Swap(TakePlayerLevelRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakePlayerLevelRewardRsp::InternalSwap(TakePlayerLevelRewardRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(level_, other->level_);
  swap(reward_id_, other->reward_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakePlayerLevelRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakePlayerLevelRewardRsp

// uint32 reward_id = 9;
void TakePlayerLevelRewardRsp::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 TakePlayerLevelRewardRsp::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.reward_id)
  return reward_id_;
}
void TakePlayerLevelRewardRsp::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.reward_id)
}

// int32 retcode = 13;
void TakePlayerLevelRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakePlayerLevelRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.retcode)
  return retcode_;
}
void TakePlayerLevelRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.retcode)
}

// uint32 level = 6;
void TakePlayerLevelRewardRsp::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 TakePlayerLevelRewardRsp::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.level)
  return level_;
}
void TakePlayerLevelRewardRsp::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLevelRewardUpdateNotify::kLevelListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLevelRewardUpdateNotify::PlayerLevelRewardUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLevelRewardUpdateNotify)
}
PlayerLevelRewardUpdateNotify::PlayerLevelRewardUpdateNotify(const PlayerLevelRewardUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      level_list_(from.level_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLevelRewardUpdateNotify)
}

void PlayerLevelRewardUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

PlayerLevelRewardUpdateNotify::~PlayerLevelRewardUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerLevelRewardUpdateNotify)
  SharedDtor();
}

void PlayerLevelRewardUpdateNotify::SharedDtor() {
}

void PlayerLevelRewardUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLevelRewardUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLevelRewardUpdateNotify& PlayerLevelRewardUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLevelRewardUpdateNotify* PlayerLevelRewardUpdateNotify::New(::google::protobuf::Arena* arena) const {
  PlayerLevelRewardUpdateNotify* n = new PlayerLevelRewardUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLevelRewardUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLevelRewardUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerLevelRewardUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLevelRewardUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 level_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_level_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_level_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLevelRewardUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLevelRewardUpdateNotify)
  return false;
#undef DO_
}

void PlayerLevelRewardUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLevelRewardUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 level_list = 9;
  if (this->level_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _level_list_cached_byte_size_));
  }
  for (int i = 0, n = this->level_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->level_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLevelRewardUpdateNotify)
}

::google::protobuf::uint8* PlayerLevelRewardUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLevelRewardUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 level_list = 9;
  if (this->level_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _level_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->level_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLevelRewardUpdateNotify)
  return target;
}

size_t PlayerLevelRewardUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLevelRewardUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 level_list = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->level_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _level_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLevelRewardUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLevelRewardUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLevelRewardUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLevelRewardUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLevelRewardUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLevelRewardUpdateNotify)
    MergeFrom(*source);
  }
}

void PlayerLevelRewardUpdateNotify::MergeFrom(const PlayerLevelRewardUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLevelRewardUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  level_list_.MergeFrom(from.level_list_);
}

void PlayerLevelRewardUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLevelRewardUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLevelRewardUpdateNotify::CopyFrom(const PlayerLevelRewardUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLevelRewardUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLevelRewardUpdateNotify::IsInitialized() const {
  return true;
}

void PlayerLevelRewardUpdateNotify::Swap(PlayerLevelRewardUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLevelRewardUpdateNotify::InternalSwap(PlayerLevelRewardUpdateNotify* other) {
  using std::swap;
  level_list_.InternalSwap(&other->level_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLevelRewardUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLevelRewardUpdateNotify

// repeated uint32 level_list = 9;
int PlayerLevelRewardUpdateNotify::level_list_size() const {
  return level_list_.size();
}
void PlayerLevelRewardUpdateNotify::clear_level_list() {
  level_list_.Clear();
}
::google::protobuf::uint32 PlayerLevelRewardUpdateNotify::level_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_.Get(index);
}
void PlayerLevelRewardUpdateNotify::set_level_list(int index, ::google::protobuf::uint32 value) {
  level_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerLevelRewardUpdateNotify.level_list)
}
void PlayerLevelRewardUpdateNotify::add_level_list(::google::protobuf::uint32 value) {
  level_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerLevelRewardUpdateNotify.level_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerLevelRewardUpdateNotify::level_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerLevelRewardUpdateNotify::mutable_level_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return &level_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GivingRecord::GivingRecord_MaterialCntMapEntry::GivingRecord_MaterialCntMapEntry() {}
GivingRecord::GivingRecord_MaterialCntMapEntry::GivingRecord_MaterialCntMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GivingRecord::GivingRecord_MaterialCntMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[66];
}
void GivingRecord::GivingRecord_MaterialCntMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GivingRecord::GivingRecord_MaterialCntMapEntry::MergeFrom(const GivingRecord_MaterialCntMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GivingRecord::kIsFinishedFieldNumber;
const int GivingRecord::kGroupIdFieldNumber;
const int GivingRecord::kIsGadgetGivingFieldNumber;
const int GivingRecord::kGivingIdFieldNumber;
const int GivingRecord::kLastGroupIdFieldNumber;
const int GivingRecord::kConfigIdFieldNumber;
const int GivingRecord::kMaterialCntMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GivingRecord::GivingRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GivingRecord)
}
GivingRecord::GivingRecord(const GivingRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  material_cnt_map_.MergeFrom(from.material_cnt_map_);
  ::memcpy(&config_id_, &from.config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_gadget_giving_) -
    reinterpret_cast<char*>(&config_id_)) + sizeof(is_gadget_giving_));
  // @@protoc_insertion_point(copy_constructor:proto.GivingRecord)
}

void GivingRecord::SharedCtor() {
  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_gadget_giving_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(is_gadget_giving_));
  _cached_size_ = 0;
}

GivingRecord::~GivingRecord() {
  // @@protoc_insertion_point(destructor:proto.GivingRecord)
  SharedDtor();
}

void GivingRecord::SharedDtor() {
}

void GivingRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GivingRecord::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GivingRecord& GivingRecord::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GivingRecord* GivingRecord::New(::google::protobuf::Arena* arena) const {
  GivingRecord* n = new GivingRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GivingRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GivingRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  material_cnt_map_.Clear();
  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_gadget_giving_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(is_gadget_giving_));
  _internal_metadata_.Clear();
}

bool GivingRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GivingRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 giving_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_group_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_gadget_giving = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_gadget_giving_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> material_cnt_map = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          GivingRecord_MaterialCntMapEntry::Parser< ::google::protobuf::internal::MapField<
              GivingRecord_MaterialCntMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&material_cnt_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GivingRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GivingRecord)
  return false;
#undef DO_
}

void GivingRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GivingRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // uint32 giving_id = 3;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->giving_id(), output);
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->group_id(), output);
  }

  // uint32 last_group_id = 6;
  if (this->last_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->last_group_id(), output);
  }

  // bool is_gadget_giving = 8;
  if (this->is_gadget_giving() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_gadget_giving(), output);
  }

  // bool is_finished = 9;
  if (this->is_finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_finished(), output);
  }

  // map<uint32, uint32> material_cnt_map = 15;
  if (!this->material_cnt_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->material_cnt_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->material_cnt_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->material_cnt_map().begin();
          it != this->material_cnt_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GivingRecord_MaterialCntMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(material_cnt_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GivingRecord_MaterialCntMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->material_cnt_map().begin();
          it != this->material_cnt_map().end(); ++it) {
        entry.reset(material_cnt_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GivingRecord)
}

::google::protobuf::uint8* GivingRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GivingRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // uint32 giving_id = 3;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->giving_id(), target);
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->group_id(), target);
  }

  // uint32 last_group_id = 6;
  if (this->last_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->last_group_id(), target);
  }

  // bool is_gadget_giving = 8;
  if (this->is_gadget_giving() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_gadget_giving(), target);
  }

  // bool is_finished = 9;
  if (this->is_finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_finished(), target);
  }

  // map<uint32, uint32> material_cnt_map = 15;
  if (!this->material_cnt_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->material_cnt_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->material_cnt_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->material_cnt_map().begin();
          it != this->material_cnt_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GivingRecord_MaterialCntMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(material_cnt_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GivingRecord_MaterialCntMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->material_cnt_map().begin();
          it != this->material_cnt_map().end(); ++it) {
        entry.reset(material_cnt_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GivingRecord)
  return target;
}

size_t GivingRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GivingRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> material_cnt_map = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->material_cnt_map_size());
  {
    ::google::protobuf::scoped_ptr<GivingRecord_MaterialCntMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->material_cnt_map().begin();
        it != this->material_cnt_map().end(); ++it) {
      entry.reset(material_cnt_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 giving_id = 3;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 last_group_id = 6;
  if (this->last_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_group_id());
  }

  // bool is_finished = 9;
  if (this->is_finished() != 0) {
    total_size += 1 + 1;
  }

  // bool is_gadget_giving = 8;
  if (this->is_gadget_giving() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GivingRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GivingRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const GivingRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GivingRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GivingRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GivingRecord)
    MergeFrom(*source);
  }
}

void GivingRecord::MergeFrom(const GivingRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GivingRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  material_cnt_map_.MergeFrom(from.material_cnt_map_);
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.last_group_id() != 0) {
    set_last_group_id(from.last_group_id());
  }
  if (from.is_finished() != 0) {
    set_is_finished(from.is_finished());
  }
  if (from.is_gadget_giving() != 0) {
    set_is_gadget_giving(from.is_gadget_giving());
  }
}

void GivingRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GivingRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GivingRecord::CopyFrom(const GivingRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GivingRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GivingRecord::IsInitialized() const {
  return true;
}

void GivingRecord::Swap(GivingRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GivingRecord::InternalSwap(GivingRecord* other) {
  using std::swap;
  material_cnt_map_.Swap(&other->material_cnt_map_);
  swap(config_id_, other->config_id_);
  swap(giving_id_, other->giving_id_);
  swap(group_id_, other->group_id_);
  swap(last_group_id_, other->last_group_id_);
  swap(is_finished_, other->is_finished_);
  swap(is_gadget_giving_, other->is_gadget_giving_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GivingRecord::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GivingRecord

// bool is_finished = 9;
void GivingRecord::clear_is_finished() {
  is_finished_ = false;
}
bool GivingRecord::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.is_finished)
  return is_finished_;
}
void GivingRecord::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.is_finished)
}

// uint32 group_id = 5;
void GivingRecord::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 GivingRecord::group_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.group_id)
  return group_id_;
}
void GivingRecord::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.group_id)
}

// bool is_gadget_giving = 8;
void GivingRecord::clear_is_gadget_giving() {
  is_gadget_giving_ = false;
}
bool GivingRecord::is_gadget_giving() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.is_gadget_giving)
  return is_gadget_giving_;
}
void GivingRecord::set_is_gadget_giving(bool value) {
  
  is_gadget_giving_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.is_gadget_giving)
}

// uint32 giving_id = 3;
void GivingRecord::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 GivingRecord::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.giving_id)
  return giving_id_;
}
void GivingRecord::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.giving_id)
}

// uint32 last_group_id = 6;
void GivingRecord::clear_last_group_id() {
  last_group_id_ = 0u;
}
::google::protobuf::uint32 GivingRecord::last_group_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.last_group_id)
  return last_group_id_;
}
void GivingRecord::set_last_group_id(::google::protobuf::uint32 value) {
  
  last_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.last_group_id)
}

// uint32 config_id = 2;
void GivingRecord::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 GivingRecord::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.config_id)
  return config_id_;
}
void GivingRecord::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.config_id)
}

// map<uint32, uint32> material_cnt_map = 15;
int GivingRecord::material_cnt_map_size() const {
  return material_cnt_map_.size();
}
void GivingRecord::clear_material_cnt_map() {
  material_cnt_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GivingRecord::material_cnt_map() const {
  // @@protoc_insertion_point(field_map:proto.GivingRecord.material_cnt_map)
  return material_cnt_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GivingRecord::mutable_material_cnt_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GivingRecord.material_cnt_map)
  return material_cnt_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GivingRecordNotify::kGivingRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GivingRecordNotify::GivingRecordNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GivingRecordNotify)
}
GivingRecordNotify::GivingRecordNotify(const GivingRecordNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      giving_record_list_(from.giving_record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GivingRecordNotify)
}

void GivingRecordNotify::SharedCtor() {
  _cached_size_ = 0;
}

GivingRecordNotify::~GivingRecordNotify() {
  // @@protoc_insertion_point(destructor:proto.GivingRecordNotify)
  SharedDtor();
}

void GivingRecordNotify::SharedDtor() {
}

void GivingRecordNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GivingRecordNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GivingRecordNotify& GivingRecordNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GivingRecordNotify* GivingRecordNotify::New(::google::protobuf::Arena* arena) const {
  GivingRecordNotify* n = new GivingRecordNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GivingRecordNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GivingRecordNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  giving_record_list_.Clear();
  _internal_metadata_.Clear();
}

bool GivingRecordNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GivingRecordNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.GivingRecord giving_record_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_giving_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GivingRecordNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GivingRecordNotify)
  return false;
#undef DO_
}

void GivingRecordNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GivingRecordNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GivingRecord giving_record_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->giving_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->giving_record_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GivingRecordNotify)
}

::google::protobuf::uint8* GivingRecordNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GivingRecordNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GivingRecord giving_record_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->giving_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->giving_record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GivingRecordNotify)
  return target;
}

size_t GivingRecordNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GivingRecordNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.GivingRecord giving_record_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->giving_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->giving_record_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GivingRecordNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GivingRecordNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GivingRecordNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GivingRecordNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GivingRecordNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GivingRecordNotify)
    MergeFrom(*source);
  }
}

void GivingRecordNotify::MergeFrom(const GivingRecordNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GivingRecordNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  giving_record_list_.MergeFrom(from.giving_record_list_);
}

void GivingRecordNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GivingRecordNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GivingRecordNotify::CopyFrom(const GivingRecordNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GivingRecordNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GivingRecordNotify::IsInitialized() const {
  return true;
}

void GivingRecordNotify::Swap(GivingRecordNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GivingRecordNotify::InternalSwap(GivingRecordNotify* other) {
  using std::swap;
  giving_record_list_.InternalSwap(&other->giving_record_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GivingRecordNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GivingRecordNotify

// repeated .proto.GivingRecord giving_record_list = 14;
int GivingRecordNotify::giving_record_list_size() const {
  return giving_record_list_.size();
}
void GivingRecordNotify::clear_giving_record_list() {
  giving_record_list_.Clear();
}
const ::proto::GivingRecord& GivingRecordNotify::giving_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Get(index);
}
::proto::GivingRecord* GivingRecordNotify::mutable_giving_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Mutable(index);
}
::proto::GivingRecord* GivingRecordNotify::add_giving_record_list() {
  // @@protoc_insertion_point(field_add:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >*
GivingRecordNotify::mutable_giving_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GivingRecordNotify.giving_record_list)
  return &giving_record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >&
GivingRecordNotify::giving_record_list() const {
  // @@protoc_insertion_point(field_list:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GivingRecordChangeNotify::kIsDeactiveFieldNumber;
const int GivingRecordChangeNotify::kGivingRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GivingRecordChangeNotify::GivingRecordChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GivingRecordChangeNotify)
}
GivingRecordChangeNotify::GivingRecordChangeNotify(const GivingRecordChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_giving_record()) {
    giving_record_ = new ::proto::GivingRecord(*from.giving_record_);
  } else {
    giving_record_ = NULL;
  }
  is_deactive_ = from.is_deactive_;
  // @@protoc_insertion_point(copy_constructor:proto.GivingRecordChangeNotify)
}

void GivingRecordChangeNotify::SharedCtor() {
  ::memset(&giving_record_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_deactive_) -
      reinterpret_cast<char*>(&giving_record_)) + sizeof(is_deactive_));
  _cached_size_ = 0;
}

GivingRecordChangeNotify::~GivingRecordChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.GivingRecordChangeNotify)
  SharedDtor();
}

void GivingRecordChangeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete giving_record_;
}

void GivingRecordChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GivingRecordChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GivingRecordChangeNotify& GivingRecordChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GivingRecordChangeNotify* GivingRecordChangeNotify::New(::google::protobuf::Arena* arena) const {
  GivingRecordChangeNotify* n = new GivingRecordChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GivingRecordChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GivingRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && giving_record_ != NULL) {
    delete giving_record_;
  }
  giving_record_ = NULL;
  is_deactive_ = false;
  _internal_metadata_.Clear();
}

bool GivingRecordChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GivingRecordChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_deactive = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_deactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GivingRecord giving_record = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_giving_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GivingRecordChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GivingRecordChangeNotify)
  return false;
#undef DO_
}

void GivingRecordChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GivingRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_deactive = 11;
  if (this->is_deactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_deactive(), output);
  }

  // .proto.GivingRecord giving_record = 15;
  if (this->has_giving_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->giving_record_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GivingRecordChangeNotify)
}

::google::protobuf::uint8* GivingRecordChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GivingRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_deactive = 11;
  if (this->is_deactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_deactive(), target);
  }

  // .proto.GivingRecord giving_record = 15;
  if (this->has_giving_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->giving_record_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GivingRecordChangeNotify)
  return target;
}

size_t GivingRecordChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GivingRecordChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.GivingRecord giving_record = 15;
  if (this->has_giving_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->giving_record_);
  }

  // bool is_deactive = 11;
  if (this->is_deactive() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GivingRecordChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GivingRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GivingRecordChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GivingRecordChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GivingRecordChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GivingRecordChangeNotify)
    MergeFrom(*source);
  }
}

void GivingRecordChangeNotify::MergeFrom(const GivingRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GivingRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_giving_record()) {
    mutable_giving_record()->::proto::GivingRecord::MergeFrom(from.giving_record());
  }
  if (from.is_deactive() != 0) {
    set_is_deactive(from.is_deactive());
  }
}

void GivingRecordChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GivingRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GivingRecordChangeNotify::CopyFrom(const GivingRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GivingRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GivingRecordChangeNotify::IsInitialized() const {
  return true;
}

void GivingRecordChangeNotify::Swap(GivingRecordChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GivingRecordChangeNotify::InternalSwap(GivingRecordChangeNotify* other) {
  using std::swap;
  swap(giving_record_, other->giving_record_);
  swap(is_deactive_, other->is_deactive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GivingRecordChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GivingRecordChangeNotify

// bool is_deactive = 11;
void GivingRecordChangeNotify::clear_is_deactive() {
  is_deactive_ = false;
}
bool GivingRecordChangeNotify::is_deactive() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecordChangeNotify.is_deactive)
  return is_deactive_;
}
void GivingRecordChangeNotify::set_is_deactive(bool value) {
  
  is_deactive_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecordChangeNotify.is_deactive)
}

// .proto.GivingRecord giving_record = 15;
bool GivingRecordChangeNotify::has_giving_record() const {
  return this != internal_default_instance() && giving_record_ != NULL;
}
void GivingRecordChangeNotify::clear_giving_record() {
  if (GetArenaNoVirtual() == NULL && giving_record_ != NULL) delete giving_record_;
  giving_record_ = NULL;
}
const ::proto::GivingRecord& GivingRecordChangeNotify::giving_record() const {
  const ::proto::GivingRecord* p = giving_record_;
  // @@protoc_insertion_point(field_get:proto.GivingRecordChangeNotify.giving_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GivingRecord*>(
      &::proto::_GivingRecord_default_instance_);
}
::proto::GivingRecord* GivingRecordChangeNotify::mutable_giving_record() {
  
  if (giving_record_ == NULL) {
    giving_record_ = new ::proto::GivingRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordChangeNotify.giving_record)
  return giving_record_;
}
::proto::GivingRecord* GivingRecordChangeNotify::release_giving_record() {
  // @@protoc_insertion_point(field_release:proto.GivingRecordChangeNotify.giving_record)
  
  ::proto::GivingRecord* temp = giving_record_;
  giving_record_ = NULL;
  return temp;
}
void GivingRecordChangeNotify::set_allocated_giving_record(::proto::GivingRecord* giving_record) {
  delete giving_record_;
  giving_record_ = giving_record;
  if (giving_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GivingRecordChangeNotify.giving_record)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::ItemGivingReq_ItemGuidCountMapEntry() {}
ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::ItemGivingReq_ItemGuidCountMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[70];
}
void ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ItemGivingReq::ItemGivingReq_ItemGuidCountMapEntry::MergeFrom(const ItemGivingReq_ItemGuidCountMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemGivingReq::kItemGuidCountMapFieldNumber;
const int ItemGivingReq::kGivingIdFieldNumber;
const int ItemGivingReq::kItemParamListFieldNumber;
const int ItemGivingReq::kItemGivingTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemGivingReq::ItemGivingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemGivingReq)
}
ItemGivingReq::ItemGivingReq(const ItemGivingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_param_list_(from.item_param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_guid_count_map_.MergeFrom(from.item_guid_count_map_);
  ::memcpy(&item_giving_type_, &from.item_giving_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&giving_id_) -
    reinterpret_cast<char*>(&item_giving_type_)) + sizeof(giving_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ItemGivingReq)
}

void ItemGivingReq::SharedCtor() {
  ::memset(&item_giving_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&item_giving_type_)) + sizeof(giving_id_));
  _cached_size_ = 0;
}

ItemGivingReq::~ItemGivingReq() {
  // @@protoc_insertion_point(destructor:proto.ItemGivingReq)
  SharedDtor();
}

void ItemGivingReq::SharedDtor() {
}

void ItemGivingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemGivingReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemGivingReq& ItemGivingReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemGivingReq* ItemGivingReq::New(::google::protobuf::Arena* arena) const {
  ItemGivingReq* n = new ItemGivingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemGivingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemGivingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_param_list_.Clear();
  item_guid_count_map_.Clear();
  ::memset(&item_giving_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&item_giving_type_)) + sizeof(giving_id_));
  _internal_metadata_.Clear();
}

bool ItemGivingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemGivingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ItemGivingReq.ItemGivingType item_giving_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_item_giving_type(static_cast< ::proto::ItemGivingReq_ItemGivingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_param_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_param_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 giving_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, uint32> item_guid_count_map = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          ItemGivingReq_ItemGuidCountMapEntry::Parser< ::google::protobuf::internal::MapField<
              ItemGivingReq_ItemGuidCountMapEntry,
              ::google::protobuf::uint64, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 > > parser(&item_guid_count_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemGivingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemGivingReq)
  return false;
#undef DO_
}

void ItemGivingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemGivingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ItemGivingReq.ItemGivingType item_giving_type = 2;
  if (this->item_giving_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->item_giving_type(), output);
  }

  // repeated .proto.ItemParam item_param_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item_param_list(static_cast<int>(i)), output);
  }

  // uint32 giving_id = 13;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->giving_id(), output);
  }

  // map<uint64, uint32> item_guid_count_map = 15;
  if (!this->item_guid_count_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->item_guid_count_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->item_guid_count_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemGivingReq)
}

::google::protobuf::uint8* ItemGivingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemGivingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ItemGivingReq.ItemGivingType item_giving_type = 2;
  if (this->item_giving_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->item_giving_type(), target);
  }

  // repeated .proto.ItemParam item_param_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_param_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->item_param_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 giving_id = 13;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->giving_id(), target);
  }

  // map<uint64, uint32> item_guid_count_map = 15;
  if (!this->item_guid_count_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->item_guid_count_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->item_guid_count_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->item_guid_count_map().begin();
          it != this->item_guid_count_map().end(); ++it) {
        entry.reset(item_guid_count_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemGivingReq)
  return target;
}

size_t ItemGivingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemGivingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_param_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->item_param_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_param_list(static_cast<int>(i)));
    }
  }

  // map<uint64, uint32> item_guid_count_map = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->item_guid_count_map_size());
  {
    ::google::protobuf::scoped_ptr<ItemGivingReq_ItemGuidCountMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
        it = this->item_guid_count_map().begin();
        it != this->item_guid_count_map().end(); ++it) {
      entry.reset(item_guid_count_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.ItemGivingReq.ItemGivingType item_giving_type = 2;
  if (this->item_giving_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_giving_type());
  }

  // uint32 giving_id = 13;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemGivingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemGivingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemGivingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemGivingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemGivingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemGivingReq)
    MergeFrom(*source);
  }
}

void ItemGivingReq::MergeFrom(const ItemGivingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemGivingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_param_list_.MergeFrom(from.item_param_list_);
  item_guid_count_map_.MergeFrom(from.item_guid_count_map_);
  if (from.item_giving_type() != 0) {
    set_item_giving_type(from.item_giving_type());
  }
  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
}

void ItemGivingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemGivingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemGivingReq::CopyFrom(const ItemGivingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemGivingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemGivingReq::IsInitialized() const {
  return true;
}

void ItemGivingReq::Swap(ItemGivingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemGivingReq::InternalSwap(ItemGivingReq* other) {
  using std::swap;
  item_param_list_.InternalSwap(&other->item_param_list_);
  item_guid_count_map_.Swap(&other->item_guid_count_map_);
  swap(item_giving_type_, other->item_giving_type_);
  swap(giving_id_, other->giving_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemGivingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemGivingReq

// map<uint64, uint32> item_guid_count_map = 15;
int ItemGivingReq::item_guid_count_map_size() const {
  return item_guid_count_map_.size();
}
void ItemGivingReq::clear_item_guid_count_map() {
  item_guid_count_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
ItemGivingReq::item_guid_count_map() const {
  // @@protoc_insertion_point(field_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
ItemGivingReq::mutable_item_guid_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.MutableMap();
}

// uint32 giving_id = 13;
void ItemGivingReq::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 ItemGivingReq::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.giving_id)
  return giving_id_;
}
void ItemGivingReq::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingReq.giving_id)
}

// repeated .proto.ItemParam item_param_list = 4;
int ItemGivingReq::item_param_list_size() const {
  return item_param_list_.size();
}
void ItemGivingReq::clear_item_param_list() {
  item_param_list_.Clear();
}
const ::proto::ItemParam& ItemGivingReq::item_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Get(index);
}
::proto::ItemParam* ItemGivingReq::mutable_item_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Mutable(index);
}
::proto::ItemParam* ItemGivingReq::add_item_param_list() {
  // @@protoc_insertion_point(field_add:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ItemGivingReq::mutable_item_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ItemGivingReq.item_param_list)
  return &item_param_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ItemGivingReq::item_param_list() const {
  // @@protoc_insertion_point(field_list:proto.ItemGivingReq.item_param_list)
  return item_param_list_;
}

// .proto.ItemGivingReq.ItemGivingType item_giving_type = 2;
void ItemGivingReq::clear_item_giving_type() {
  item_giving_type_ = 0;
}
::proto::ItemGivingReq_ItemGivingType ItemGivingReq::item_giving_type() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.item_giving_type)
  return static_cast< ::proto::ItemGivingReq_ItemGivingType >(item_giving_type_);
}
void ItemGivingReq::set_item_giving_type(::proto::ItemGivingReq_ItemGivingType value) {
  
  item_giving_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingReq.item_giving_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemGivingRsp::kGivingGroupIdFieldNumber;
const int ItemGivingRsp::kGivingIdFieldNumber;
const int ItemGivingRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemGivingRsp::ItemGivingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemGivingRsp)
}
ItemGivingRsp::ItemGivingRsp(const ItemGivingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&giving_group_id_, &from.giving_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&giving_id_) -
    reinterpret_cast<char*>(&giving_group_id_)) + sizeof(giving_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ItemGivingRsp)
}

void ItemGivingRsp::SharedCtor() {
  ::memset(&giving_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&giving_group_id_)) + sizeof(giving_id_));
  _cached_size_ = 0;
}

ItemGivingRsp::~ItemGivingRsp() {
  // @@protoc_insertion_point(destructor:proto.ItemGivingRsp)
  SharedDtor();
}

void ItemGivingRsp::SharedDtor() {
}

void ItemGivingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemGivingRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemGivingRsp& ItemGivingRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemGivingRsp* ItemGivingRsp::New(::google::protobuf::Arena* arena) const {
  ItemGivingRsp* n = new ItemGivingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemGivingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemGivingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&giving_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&giving_group_id_)) + sizeof(giving_id_));
  _internal_metadata_.Clear();
}

bool ItemGivingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemGivingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 giving_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 giving_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemGivingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemGivingRsp)
  return false;
#undef DO_
}

void ItemGivingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemGivingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_group_id = 1;
  if (this->giving_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->giving_group_id(), output);
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // uint32 giving_id = 13;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->giving_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemGivingRsp)
}

::google::protobuf::uint8* ItemGivingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemGivingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_group_id = 1;
  if (this->giving_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->giving_group_id(), target);
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // uint32 giving_id = 13;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->giving_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemGivingRsp)
  return target;
}

size_t ItemGivingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemGivingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 giving_group_id = 1;
  if (this->giving_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_group_id());
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 giving_id = 13;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemGivingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemGivingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemGivingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemGivingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemGivingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemGivingRsp)
    MergeFrom(*source);
  }
}

void ItemGivingRsp::MergeFrom(const ItemGivingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemGivingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.giving_group_id() != 0) {
    set_giving_group_id(from.giving_group_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
}

void ItemGivingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemGivingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemGivingRsp::CopyFrom(const ItemGivingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemGivingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemGivingRsp::IsInitialized() const {
  return true;
}

void ItemGivingRsp::Swap(ItemGivingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemGivingRsp::InternalSwap(ItemGivingRsp* other) {
  using std::swap;
  swap(giving_group_id_, other->giving_group_id_);
  swap(retcode_, other->retcode_);
  swap(giving_id_, other->giving_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemGivingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemGivingRsp

// uint32 giving_group_id = 1;
void ItemGivingRsp::clear_giving_group_id() {
  giving_group_id_ = 0u;
}
::google::protobuf::uint32 ItemGivingRsp::giving_group_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.giving_group_id)
  return giving_group_id_;
}
void ItemGivingRsp::set_giving_group_id(::google::protobuf::uint32 value) {
  
  giving_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.giving_group_id)
}

// uint32 giving_id = 13;
void ItemGivingRsp::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 ItemGivingRsp::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.giving_id)
  return giving_id_;
}
void ItemGivingRsp::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.giving_id)
}

// int32 retcode = 3;
void ItemGivingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ItemGivingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.retcode)
  return retcode_;
}
void ItemGivingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookArgsReq::kAssistAvatarFieldNumber;
const int PlayerCookArgsReq::kRecipeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookArgsReq::PlayerCookArgsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookArgsReq)
}
PlayerCookArgsReq::PlayerCookArgsReq(const PlayerCookArgsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&assist_avatar_, &from.assist_avatar_,
    static_cast<size_t>(reinterpret_cast<char*>(&recipe_id_) -
    reinterpret_cast<char*>(&assist_avatar_)) + sizeof(recipe_id_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookArgsReq)
}

void PlayerCookArgsReq::SharedCtor() {
  ::memset(&assist_avatar_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recipe_id_) -
      reinterpret_cast<char*>(&assist_avatar_)) + sizeof(recipe_id_));
  _cached_size_ = 0;
}

PlayerCookArgsReq::~PlayerCookArgsReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookArgsReq)
  SharedDtor();
}

void PlayerCookArgsReq::SharedDtor() {
}

void PlayerCookArgsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookArgsReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookArgsReq& PlayerCookArgsReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookArgsReq* PlayerCookArgsReq::New(::google::protobuf::Arena* arena) const {
  PlayerCookArgsReq* n = new PlayerCookArgsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookArgsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookArgsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&assist_avatar_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recipe_id_) -
      reinterpret_cast<char*>(&assist_avatar_)) + sizeof(recipe_id_));
  _internal_metadata_.Clear();
}

bool PlayerCookArgsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookArgsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 assist_avatar = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assist_avatar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 recipe_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookArgsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookArgsReq)
  return false;
#undef DO_
}

void PlayerCookArgsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookArgsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 assist_avatar = 10;
  if (this->assist_avatar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->assist_avatar(), output);
  }

  // uint32 recipe_id = 11;
  if (this->recipe_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->recipe_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookArgsReq)
}

::google::protobuf::uint8* PlayerCookArgsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookArgsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 assist_avatar = 10;
  if (this->assist_avatar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->assist_avatar(), target);
  }

  // uint32 recipe_id = 11;
  if (this->recipe_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->recipe_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookArgsReq)
  return target;
}

size_t PlayerCookArgsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookArgsReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 assist_avatar = 10;
  if (this->assist_avatar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->assist_avatar());
  }

  // uint32 recipe_id = 11;
  if (this->recipe_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookArgsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookArgsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookArgsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookArgsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookArgsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookArgsReq)
    MergeFrom(*source);
  }
}

void PlayerCookArgsReq::MergeFrom(const PlayerCookArgsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookArgsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.assist_avatar() != 0) {
    set_assist_avatar(from.assist_avatar());
  }
  if (from.recipe_id() != 0) {
    set_recipe_id(from.recipe_id());
  }
}

void PlayerCookArgsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookArgsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookArgsReq::CopyFrom(const PlayerCookArgsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookArgsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookArgsReq::IsInitialized() const {
  return true;
}

void PlayerCookArgsReq::Swap(PlayerCookArgsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookArgsReq::InternalSwap(PlayerCookArgsReq* other) {
  using std::swap;
  swap(assist_avatar_, other->assist_avatar_);
  swap(recipe_id_, other->recipe_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookArgsReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookArgsReq

// uint32 assist_avatar = 10;
void PlayerCookArgsReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
::google::protobuf::uint32 PlayerCookArgsReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.assist_avatar)
  return assist_avatar_;
}
void PlayerCookArgsReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.assist_avatar)
}

// uint32 recipe_id = 11;
void PlayerCookArgsReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
::google::protobuf::uint32 PlayerCookArgsReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.recipe_id)
  return recipe_id_;
}
void PlayerCookArgsReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.recipe_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCookArgsRsp::kRetcodeFieldNumber;
const int PlayerCookArgsRsp::kQteRangeRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCookArgsRsp::PlayerCookArgsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCookArgsRsp)
}
PlayerCookArgsRsp::PlayerCookArgsRsp(const PlayerCookArgsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&qte_range_ratio_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(qte_range_ratio_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCookArgsRsp)
}

void PlayerCookArgsRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qte_range_ratio_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(qte_range_ratio_));
  _cached_size_ = 0;
}

PlayerCookArgsRsp::~PlayerCookArgsRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCookArgsRsp)
  SharedDtor();
}

void PlayerCookArgsRsp::SharedDtor() {
}

void PlayerCookArgsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCookArgsRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCookArgsRsp& PlayerCookArgsRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCookArgsRsp* PlayerCookArgsRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCookArgsRsp* n = new PlayerCookArgsRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCookArgsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCookArgsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qte_range_ratio_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(qte_range_ratio_));
  _internal_metadata_.Clear();
}

bool PlayerCookArgsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCookArgsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float qte_range_ratio = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qte_range_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCookArgsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCookArgsRsp)
  return false;
#undef DO_
}

void PlayerCookArgsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCookArgsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // float qte_range_ratio = 12;
  if (this->qte_range_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->qte_range_ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCookArgsRsp)
}

::google::protobuf::uint8* PlayerCookArgsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCookArgsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // float qte_range_ratio = 12;
  if (this->qte_range_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->qte_range_ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCookArgsRsp)
  return target;
}

size_t PlayerCookArgsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCookArgsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // float qte_range_ratio = 12;
  if (this->qte_range_ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCookArgsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCookArgsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCookArgsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCookArgsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCookArgsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCookArgsRsp)
    MergeFrom(*source);
  }
}

void PlayerCookArgsRsp::MergeFrom(const PlayerCookArgsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCookArgsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.qte_range_ratio() != 0) {
    set_qte_range_ratio(from.qte_range_ratio());
  }
}

void PlayerCookArgsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCookArgsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCookArgsRsp::CopyFrom(const PlayerCookArgsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCookArgsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCookArgsRsp::IsInitialized() const {
  return true;
}

void PlayerCookArgsRsp::Swap(PlayerCookArgsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCookArgsRsp::InternalSwap(PlayerCookArgsRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(qte_range_ratio_, other->qte_range_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCookArgsRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCookArgsRsp

// int32 retcode = 4;
void PlayerCookArgsRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerCookArgsRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.retcode)
  return retcode_;
}
void PlayerCookArgsRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.retcode)
}

// float qte_range_ratio = 12;
void PlayerCookArgsRsp::clear_qte_range_ratio() {
  qte_range_ratio_ = 0;
}
float PlayerCookArgsRsp::qte_range_ratio() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.qte_range_ratio)
  return qte_range_ratio_;
}
void PlayerCookArgsRsp::set_qte_range_ratio(float value) {
  
  qte_range_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.qte_range_ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLuaShellNotify::kShellTypeFieldNumber;
const int PlayerLuaShellNotify::kIdFieldNumber;
const int PlayerLuaShellNotify::kLuaShellFieldNumber;
const int PlayerLuaShellNotify::kUseTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLuaShellNotify::PlayerLuaShellNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLuaShellNotify)
}
PlayerLuaShellNotify::PlayerLuaShellNotify(const PlayerLuaShellNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lua_shell_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lua_shell().size() > 0) {
    lua_shell_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lua_shell_);
  }
  ::memcpy(&use_type_, &from.use_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&shell_type_) -
    reinterpret_cast<char*>(&use_type_)) + sizeof(shell_type_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLuaShellNotify)
}

void PlayerLuaShellNotify::SharedCtor() {
  lua_shell_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shell_type_) -
      reinterpret_cast<char*>(&use_type_)) + sizeof(shell_type_));
  _cached_size_ = 0;
}

PlayerLuaShellNotify::~PlayerLuaShellNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerLuaShellNotify)
  SharedDtor();
}

void PlayerLuaShellNotify::SharedDtor() {
  lua_shell_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerLuaShellNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLuaShellNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLuaShellNotify& PlayerLuaShellNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLuaShellNotify* PlayerLuaShellNotify::New(::google::protobuf::Arena* arena) const {
  PlayerLuaShellNotify* n = new PlayerLuaShellNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLuaShellNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLuaShellNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lua_shell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shell_type_) -
      reinterpret_cast<char*>(&use_type_)) + sizeof(shell_type_));
  _internal_metadata_.Clear();
}

bool PlayerLuaShellNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLuaShellNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.LuaShellType shell_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_shell_type(static_cast< ::proto::LuaShellType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 use_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &use_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes lua_shell = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_lua_shell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLuaShellNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLuaShellNotify)
  return false;
#undef DO_
}

void PlayerLuaShellNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLuaShellNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->id(), output);
  }

  // .proto.LuaShellType shell_type = 7;
  if (this->shell_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->shell_type(), output);
  }

  // uint32 use_type = 10;
  if (this->use_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->use_type(), output);
  }

  // bytes lua_shell = 12;
  if (this->lua_shell().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->lua_shell(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLuaShellNotify)
}

::google::protobuf::uint8* PlayerLuaShellNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLuaShellNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->id(), target);
  }

  // .proto.LuaShellType shell_type = 7;
  if (this->shell_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->shell_type(), target);
  }

  // uint32 use_type = 10;
  if (this->use_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->use_type(), target);
  }

  // bytes lua_shell = 12;
  if (this->lua_shell().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->lua_shell(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLuaShellNotify)
  return target;
}

size_t PlayerLuaShellNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLuaShellNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes lua_shell = 12;
  if (this->lua_shell().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->lua_shell());
  }

  // uint32 use_type = 10;
  if (this->use_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->use_type());
  }

  // uint32 id = 5;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .proto.LuaShellType shell_type = 7;
  if (this->shell_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->shell_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLuaShellNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLuaShellNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLuaShellNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLuaShellNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLuaShellNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLuaShellNotify)
    MergeFrom(*source);
  }
}

void PlayerLuaShellNotify::MergeFrom(const PlayerLuaShellNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLuaShellNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lua_shell().size() > 0) {

    lua_shell_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lua_shell_);
  }
  if (from.use_type() != 0) {
    set_use_type(from.use_type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.shell_type() != 0) {
    set_shell_type(from.shell_type());
  }
}

void PlayerLuaShellNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLuaShellNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLuaShellNotify::CopyFrom(const PlayerLuaShellNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLuaShellNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLuaShellNotify::IsInitialized() const {
  return true;
}

void PlayerLuaShellNotify::Swap(PlayerLuaShellNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLuaShellNotify::InternalSwap(PlayerLuaShellNotify* other) {
  using std::swap;
  lua_shell_.Swap(&other->lua_shell_);
  swap(use_type_, other->use_type_);
  swap(id_, other->id_);
  swap(shell_type_, other->shell_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLuaShellNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLuaShellNotify

// .proto.LuaShellType shell_type = 7;
void PlayerLuaShellNotify::clear_shell_type() {
  shell_type_ = 0;
}
::proto::LuaShellType PlayerLuaShellNotify::shell_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.shell_type)
  return static_cast< ::proto::LuaShellType >(shell_type_);
}
void PlayerLuaShellNotify::set_shell_type(::proto::LuaShellType value) {
  
  shell_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.shell_type)
}

// uint32 id = 5;
void PlayerLuaShellNotify::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 PlayerLuaShellNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.id)
  return id_;
}
void PlayerLuaShellNotify::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.id)
}

// bytes lua_shell = 12;
void PlayerLuaShellNotify::clear_lua_shell() {
  lua_shell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLuaShellNotify::lua_shell() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.GetNoArena();
}
void PlayerLuaShellNotify::set_lua_shell(const ::std::string& value) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.lua_shell)
}
#if LANG_CXX11
void PlayerLuaShellNotify::set_lua_shell(::std::string&& value) {
  
  lua_shell_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLuaShellNotify.lua_shell)
}
#endif
void PlayerLuaShellNotify::set_lua_shell(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLuaShellNotify.lua_shell)
}
void PlayerLuaShellNotify::set_lua_shell(const void* value, size_t size) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLuaShellNotify.lua_shell)
}
::std::string* PlayerLuaShellNotify::mutable_lua_shell() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLuaShellNotify::release_lua_shell() {
  // @@protoc_insertion_point(field_release:proto.PlayerLuaShellNotify.lua_shell)
  
  return lua_shell_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLuaShellNotify::set_allocated_lua_shell(::std::string* lua_shell) {
  if (lua_shell != NULL) {
    
  } else {
    
  }
  lua_shell_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lua_shell);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLuaShellNotify.lua_shell)
}

// uint32 use_type = 10;
void PlayerLuaShellNotify::clear_use_type() {
  use_type_ = 0u;
}
::google::protobuf::uint32 PlayerLuaShellNotify::use_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.use_type)
  return use_type_;
}
void PlayerLuaShellNotify::set_use_type(::google::protobuf::uint32 value) {
  
  use_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.use_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDisconnectClientNotify::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDisconnectClientNotify::ServerDisconnectClientNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDisconnectClientNotify)
}
ServerDisconnectClientNotify::ServerDisconnectClientNotify(const ServerDisconnectClientNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerDisconnectClientNotify)
}

void ServerDisconnectClientNotify::SharedCtor() {
  data_ = 0u;
  _cached_size_ = 0;
}

ServerDisconnectClientNotify::~ServerDisconnectClientNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerDisconnectClientNotify)
  SharedDtor();
}

void ServerDisconnectClientNotify::SharedDtor() {
}

void ServerDisconnectClientNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDisconnectClientNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDisconnectClientNotify& ServerDisconnectClientNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDisconnectClientNotify* ServerDisconnectClientNotify::New(::google::protobuf::Arena* arena) const {
  ServerDisconnectClientNotify* n = new ServerDisconnectClientNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDisconnectClientNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDisconnectClientNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerDisconnectClientNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDisconnectClientNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDisconnectClientNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDisconnectClientNotify)
  return false;
#undef DO_
}

void ServerDisconnectClientNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDisconnectClientNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 10;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDisconnectClientNotify)
}

::google::protobuf::uint8* ServerDisconnectClientNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDisconnectClientNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 10;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDisconnectClientNotify)
  return target;
}

size_t ServerDisconnectClientNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDisconnectClientNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 data = 10;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDisconnectClientNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDisconnectClientNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDisconnectClientNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDisconnectClientNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDisconnectClientNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDisconnectClientNotify)
    MergeFrom(*source);
  }
}

void ServerDisconnectClientNotify::MergeFrom(const ServerDisconnectClientNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDisconnectClientNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    set_data(from.data());
  }
}

void ServerDisconnectClientNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDisconnectClientNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDisconnectClientNotify::CopyFrom(const ServerDisconnectClientNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDisconnectClientNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDisconnectClientNotify::IsInitialized() const {
  return true;
}

void ServerDisconnectClientNotify::Swap(ServerDisconnectClientNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDisconnectClientNotify::InternalSwap(ServerDisconnectClientNotify* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDisconnectClientNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDisconnectClientNotify

// uint32 data = 10;
void ServerDisconnectClientNotify::clear_data() {
  data_ = 0u;
}
::google::protobuf::uint32 ServerDisconnectClientNotify::data() const {
  // @@protoc_insertion_point(field_get:proto.ServerDisconnectClientNotify.data)
  return data_;
}
void ServerDisconnectClientNotify::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDisconnectClientNotify.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AntiAddictNotify::kMsgTypeFieldNumber;
const int AntiAddictNotify::kMsgFieldNumber;
const int AntiAddictNotify::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AntiAddictNotify::AntiAddictNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AntiAddictNotify)
}
AntiAddictNotify::AntiAddictNotify(const AntiAddictNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.level().size() > 0) {
    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:proto.AntiAddictNotify)
}

void AntiAddictNotify::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
  _cached_size_ = 0;
}

AntiAddictNotify::~AntiAddictNotify() {
  // @@protoc_insertion_point(destructor:proto.AntiAddictNotify)
  SharedDtor();
}

void AntiAddictNotify::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AntiAddictNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AntiAddictNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AntiAddictNotify& AntiAddictNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AntiAddictNotify* AntiAddictNotify::New(::google::protobuf::Arena* arena) const {
  AntiAddictNotify* n = new AntiAddictNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AntiAddictNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AntiAddictNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
  _internal_metadata_.Clear();
}

bool AntiAddictNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AntiAddictNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AntiAddictNotify.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_level()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->level().data(), static_cast<int>(this->level().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AntiAddictNotify.level"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msg_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AntiAddictNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AntiAddictNotify)
  return false;
#undef DO_
}

void AntiAddictNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AntiAddictNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AntiAddictNotify.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // string level = 5;
  if (this->level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AntiAddictNotify.level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->level(), output);
  }

  // int32 msg_type = 6;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->msg_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AntiAddictNotify)
}

::google::protobuf::uint8* AntiAddictNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AntiAddictNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AntiAddictNotify.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // string level = 5;
  if (this->level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AntiAddictNotify.level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->level(), target);
  }

  // int32 msg_type = 6;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->msg_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AntiAddictNotify)
  return target;
}

size_t AntiAddictNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AntiAddictNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string level = 5;
  if (this->level().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->level());
  }

  // int32 msg_type = 6;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AntiAddictNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AntiAddictNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AntiAddictNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AntiAddictNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AntiAddictNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AntiAddictNotify)
    MergeFrom(*source);
  }
}

void AntiAddictNotify::MergeFrom(const AntiAddictNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AntiAddictNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.level().size() > 0) {

    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
}

void AntiAddictNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AntiAddictNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AntiAddictNotify::CopyFrom(const AntiAddictNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AntiAddictNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AntiAddictNotify::IsInitialized() const {
  return true;
}

void AntiAddictNotify::Swap(AntiAddictNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AntiAddictNotify::InternalSwap(AntiAddictNotify* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  level_.Swap(&other->level_);
  swap(msg_type_, other->msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AntiAddictNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AntiAddictNotify

// int32 msg_type = 6;
void AntiAddictNotify::clear_msg_type() {
  msg_type_ = 0;
}
::google::protobuf::int32 AntiAddictNotify::msg_type() const {
  // @@protoc_insertion_point(field_get:proto.AntiAddictNotify.msg_type)
  return msg_type_;
}
void AntiAddictNotify::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AntiAddictNotify.msg_type)
}

// string msg = 3;
void AntiAddictNotify::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AntiAddictNotify::msg() const {
  // @@protoc_insertion_point(field_get:proto.AntiAddictNotify.msg)
  return msg_.GetNoArena();
}
void AntiAddictNotify::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AntiAddictNotify.msg)
}
#if LANG_CXX11
void AntiAddictNotify::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AntiAddictNotify.msg)
}
#endif
void AntiAddictNotify::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AntiAddictNotify.msg)
}
void AntiAddictNotify::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AntiAddictNotify.msg)
}
::std::string* AntiAddictNotify::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.AntiAddictNotify.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AntiAddictNotify::release_msg() {
  // @@protoc_insertion_point(field_release:proto.AntiAddictNotify.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AntiAddictNotify::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.AntiAddictNotify.msg)
}

// string level = 5;
void AntiAddictNotify::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AntiAddictNotify::level() const {
  // @@protoc_insertion_point(field_get:proto.AntiAddictNotify.level)
  return level_.GetNoArena();
}
void AntiAddictNotify::set_level(const ::std::string& value) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AntiAddictNotify.level)
}
#if LANG_CXX11
void AntiAddictNotify::set_level(::std::string&& value) {
  
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AntiAddictNotify.level)
}
#endif
void AntiAddictNotify::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AntiAddictNotify.level)
}
void AntiAddictNotify::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AntiAddictNotify.level)
}
::std::string* AntiAddictNotify::mutable_level() {
  
  // @@protoc_insertion_point(field_mutable:proto.AntiAddictNotify.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AntiAddictNotify::release_level() {
  // @@protoc_insertion_point(field_release:proto.AntiAddictNotify.level)
  
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AntiAddictNotify::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:proto.AntiAddictNotify.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerForceExitReq::PlayerForceExitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerForceExitReq)
}
PlayerForceExitReq::PlayerForceExitReq(const PlayerForceExitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerForceExitReq)
}

void PlayerForceExitReq::SharedCtor() {
  _cached_size_ = 0;
}

PlayerForceExitReq::~PlayerForceExitReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerForceExitReq)
  SharedDtor();
}

void PlayerForceExitReq::SharedDtor() {
}

void PlayerForceExitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerForceExitReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerForceExitReq& PlayerForceExitReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerForceExitReq* PlayerForceExitReq::New(::google::protobuf::Arena* arena) const {
  PlayerForceExitReq* n = new PlayerForceExitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerForceExitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerForceExitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PlayerForceExitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerForceExitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerForceExitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerForceExitReq)
  return false;
#undef DO_
}

void PlayerForceExitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerForceExitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerForceExitReq)
}

::google::protobuf::uint8* PlayerForceExitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerForceExitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerForceExitReq)
  return target;
}

size_t PlayerForceExitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerForceExitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerForceExitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerForceExitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerForceExitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerForceExitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerForceExitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerForceExitReq)
    MergeFrom(*source);
  }
}

void PlayerForceExitReq::MergeFrom(const PlayerForceExitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerForceExitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayerForceExitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerForceExitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerForceExitReq::CopyFrom(const PlayerForceExitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerForceExitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerForceExitReq::IsInitialized() const {
  return true;
}

void PlayerForceExitReq::Swap(PlayerForceExitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerForceExitReq::InternalSwap(PlayerForceExitReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerForceExitReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerForceExitReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerForceExitRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerForceExitRsp::PlayerForceExitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerForceExitRsp)
}
PlayerForceExitRsp::PlayerForceExitRsp(const PlayerForceExitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerForceExitRsp)
}

void PlayerForceExitRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerForceExitRsp::~PlayerForceExitRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerForceExitRsp)
  SharedDtor();
}

void PlayerForceExitRsp::SharedDtor() {
}

void PlayerForceExitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerForceExitRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerForceExitRsp& PlayerForceExitRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerForceExitRsp* PlayerForceExitRsp::New(::google::protobuf::Arena* arena) const {
  PlayerForceExitRsp* n = new PlayerForceExitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerForceExitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerForceExitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerForceExitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerForceExitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerForceExitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerForceExitRsp)
  return false;
#undef DO_
}

void PlayerForceExitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerForceExitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerForceExitRsp)
}

::google::protobuf::uint8* PlayerForceExitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerForceExitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerForceExitRsp)
  return target;
}

size_t PlayerForceExitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerForceExitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerForceExitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerForceExitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerForceExitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerForceExitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerForceExitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerForceExitRsp)
    MergeFrom(*source);
  }
}

void PlayerForceExitRsp::MergeFrom(const PlayerForceExitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerForceExitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerForceExitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerForceExitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerForceExitRsp::CopyFrom(const PlayerForceExitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerForceExitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerForceExitRsp::IsInitialized() const {
  return true;
}

void PlayerForceExitRsp::Swap(PlayerForceExitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerForceExitRsp::InternalSwap(PlayerForceExitRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerForceExitRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerForceExitRsp

// int32 retcode = 15;
void PlayerForceExitRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerForceExitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerForceExitRsp.retcode)
  return retcode_;
}
void PlayerForceExitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerForceExitRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInjectFixNotify::kIdFieldNumber;
const int PlayerInjectFixNotify::kInjectFixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInjectFixNotify::PlayerInjectFixNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerInjectFixNotify)
}
PlayerInjectFixNotify::PlayerInjectFixNotify(const PlayerInjectFixNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inject_fix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inject_fix().size() > 0) {
    inject_fix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inject_fix_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerInjectFixNotify)
}

void PlayerInjectFixNotify::SharedCtor() {
  inject_fix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _cached_size_ = 0;
}

PlayerInjectFixNotify::~PlayerInjectFixNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerInjectFixNotify)
  SharedDtor();
}

void PlayerInjectFixNotify::SharedDtor() {
  inject_fix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerInjectFixNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInjectFixNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerInjectFixNotify& PlayerInjectFixNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerInjectFixNotify* PlayerInjectFixNotify::New(::google::protobuf::Arena* arena) const {
  PlayerInjectFixNotify* n = new PlayerInjectFixNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerInjectFixNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerInjectFixNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inject_fix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerInjectFixNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerInjectFixNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes inject_fix = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inject_fix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerInjectFixNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerInjectFixNotify)
  return false;
#undef DO_
}

void PlayerInjectFixNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerInjectFixNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes inject_fix = 10;
  if (this->inject_fix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->inject_fix(), output);
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerInjectFixNotify)
}

::google::protobuf::uint8* PlayerInjectFixNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerInjectFixNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes inject_fix = 10;
  if (this->inject_fix().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->inject_fix(), target);
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerInjectFixNotify)
  return target;
}

size_t PlayerInjectFixNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerInjectFixNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes inject_fix = 10;
  if (this->inject_fix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->inject_fix());
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInjectFixNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerInjectFixNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInjectFixNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerInjectFixNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerInjectFixNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerInjectFixNotify)
    MergeFrom(*source);
  }
}

void PlayerInjectFixNotify::MergeFrom(const PlayerInjectFixNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerInjectFixNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.inject_fix().size() > 0) {

    inject_fix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inject_fix_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void PlayerInjectFixNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerInjectFixNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInjectFixNotify::CopyFrom(const PlayerInjectFixNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerInjectFixNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInjectFixNotify::IsInitialized() const {
  return true;
}

void PlayerInjectFixNotify::Swap(PlayerInjectFixNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInjectFixNotify::InternalSwap(PlayerInjectFixNotify* other) {
  using std::swap;
  inject_fix_.Swap(&other->inject_fix_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerInjectFixNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerInjectFixNotify

// uint32 id = 13;
void PlayerInjectFixNotify::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 PlayerInjectFixNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerInjectFixNotify.id)
  return id_;
}
void PlayerInjectFixNotify::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerInjectFixNotify.id)
}

// bytes inject_fix = 10;
void PlayerInjectFixNotify::clear_inject_fix() {
  inject_fix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerInjectFixNotify::inject_fix() const {
  // @@protoc_insertion_point(field_get:proto.PlayerInjectFixNotify.inject_fix)
  return inject_fix_.GetNoArena();
}
void PlayerInjectFixNotify::set_inject_fix(const ::std::string& value) {
  
  inject_fix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerInjectFixNotify.inject_fix)
}
#if LANG_CXX11
void PlayerInjectFixNotify::set_inject_fix(::std::string&& value) {
  
  inject_fix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerInjectFixNotify.inject_fix)
}
#endif
void PlayerInjectFixNotify::set_inject_fix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inject_fix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerInjectFixNotify.inject_fix)
}
void PlayerInjectFixNotify::set_inject_fix(const void* value, size_t size) {
  
  inject_fix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerInjectFixNotify.inject_fix)
}
::std::string* PlayerInjectFixNotify::mutable_inject_fix() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerInjectFixNotify.inject_fix)
  return inject_fix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerInjectFixNotify::release_inject_fix() {
  // @@protoc_insertion_point(field_release:proto.PlayerInjectFixNotify.inject_fix)
  
  return inject_fix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerInjectFixNotify::set_allocated_inject_fix(::std::string* inject_fix) {
  if (inject_fix != NULL) {
    
  } else {
    
  }
  inject_fix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inject_fix);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerInjectFixNotify.inject_fix)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskVar::kKeyFieldNumber;
const int TaskVar::kValueListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskVar::TaskVar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TaskVar)
}
TaskVar::TaskVar(const TaskVar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_list_(from.value_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:proto.TaskVar)
}

void TaskVar::SharedCtor() {
  key_ = 0u;
  _cached_size_ = 0;
}

TaskVar::~TaskVar() {
  // @@protoc_insertion_point(destructor:proto.TaskVar)
  SharedDtor();
}

void TaskVar::SharedDtor() {
}

void TaskVar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskVar::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskVar& TaskVar::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TaskVar* TaskVar::New(::google::protobuf::Arena* arena) const {
  TaskVar* n = new TaskVar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskVar::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TaskVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_list_.Clear();
  key_ = 0u;
  _internal_metadata_.Clear();
}

bool TaskVar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TaskVar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 value_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_value_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 key = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TaskVar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TaskVar)
  return false;
#undef DO_
}

void TaskVar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TaskVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 value_list = 6;
  if (this->value_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_list_cached_byte_size_));
  }
  for (int i = 0, n = this->value_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value_list(i), output);
  }

  // uint32 key = 8;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TaskVar)
}

::google::protobuf::uint8* TaskVar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TaskVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 value_list = 6;
  if (this->value_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _value_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value_list_, target);
  }

  // uint32 key = 8;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TaskVar)
  return target;
}

size_t TaskVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TaskVar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 value_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 key = 8;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskVar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TaskVar)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskVar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskVar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TaskVar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TaskVar)
    MergeFrom(*source);
  }
}

void TaskVar::MergeFrom(const TaskVar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TaskVar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_list_.MergeFrom(from.value_list_);
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void TaskVar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TaskVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskVar::CopyFrom(const TaskVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TaskVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskVar::IsInitialized() const {
  return true;
}

void TaskVar::Swap(TaskVar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskVar::InternalSwap(TaskVar* other) {
  using std::swap;
  value_list_.InternalSwap(&other->value_list_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskVar::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskVar

// uint32 key = 8;
void TaskVar::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 TaskVar::key() const {
  // @@protoc_insertion_point(field_get:proto.TaskVar.key)
  return key_;
}
void TaskVar::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.TaskVar.key)
}

// repeated int32 value_list = 6;
int TaskVar::value_list_size() const {
  return value_list_.size();
}
void TaskVar::clear_value_list() {
  value_list_.Clear();
}
::google::protobuf::int32 TaskVar::value_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TaskVar.value_list)
  return value_list_.Get(index);
}
void TaskVar::set_value_list(int index, ::google::protobuf::int32 value) {
  value_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TaskVar.value_list)
}
void TaskVar::add_value_list(::google::protobuf::int32 value) {
  value_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TaskVar.value_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TaskVar::value_list() const {
  // @@protoc_insertion_point(field_list:proto.TaskVar.value_list)
  return value_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TaskVar::mutable_value_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TaskVar.value_list)
  return &value_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskVarNotify::kTaskVarListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskVarNotify::TaskVarNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TaskVarNotify)
}
TaskVarNotify::TaskVarNotify(const TaskVarNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      task_var_list_(from.task_var_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.TaskVarNotify)
}

void TaskVarNotify::SharedCtor() {
  _cached_size_ = 0;
}

TaskVarNotify::~TaskVarNotify() {
  // @@protoc_insertion_point(destructor:proto.TaskVarNotify)
  SharedDtor();
}

void TaskVarNotify::SharedDtor() {
}

void TaskVarNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskVarNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskVarNotify& TaskVarNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TaskVarNotify* TaskVarNotify::New(::google::protobuf::Arena* arena) const {
  TaskVarNotify* n = new TaskVarNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskVarNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TaskVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_var_list_.Clear();
  _internal_metadata_.Clear();
}

bool TaskVarNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TaskVarNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.TaskVar task_var_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_var_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TaskVarNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TaskVarNotify)
  return false;
#undef DO_
}

void TaskVarNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TaskVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TaskVar task_var_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_var_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->task_var_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TaskVarNotify)
}

::google::protobuf::uint8* TaskVarNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TaskVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TaskVar task_var_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_var_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->task_var_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TaskVarNotify)
  return target;
}

size_t TaskVarNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TaskVarNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TaskVar task_var_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->task_var_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->task_var_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskVarNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TaskVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskVarNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskVarNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TaskVarNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TaskVarNotify)
    MergeFrom(*source);
  }
}

void TaskVarNotify::MergeFrom(const TaskVarNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TaskVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_var_list_.MergeFrom(from.task_var_list_);
}

void TaskVarNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TaskVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskVarNotify::CopyFrom(const TaskVarNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TaskVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskVarNotify::IsInitialized() const {
  return true;
}

void TaskVarNotify::Swap(TaskVarNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskVarNotify::InternalSwap(TaskVarNotify* other) {
  using std::swap;
  task_var_list_.InternalSwap(&other->task_var_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskVarNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskVarNotify

// repeated .proto.TaskVar task_var_list = 7;
int TaskVarNotify::task_var_list_size() const {
  return task_var_list_.size();
}
void TaskVarNotify::clear_task_var_list() {
  task_var_list_.Clear();
}
const ::proto::TaskVar& TaskVarNotify::task_var_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TaskVarNotify.task_var_list)
  return task_var_list_.Get(index);
}
::proto::TaskVar* TaskVarNotify::mutable_task_var_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TaskVarNotify.task_var_list)
  return task_var_list_.Mutable(index);
}
::proto::TaskVar* TaskVarNotify::add_task_var_list() {
  // @@protoc_insertion_point(field_add:proto.TaskVarNotify.task_var_list)
  return task_var_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TaskVar >*
TaskVarNotify::mutable_task_var_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TaskVarNotify.task_var_list)
  return &task_var_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TaskVar >&
TaskVarNotify::task_var_list() const {
  // @@protoc_insertion_point(field_list:proto.TaskVarNotify.task_var_list)
  return task_var_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLockGameTimeNotify::kIsLockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLockGameTimeNotify::ClientLockGameTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientLockGameTimeNotify)
}
ClientLockGameTimeNotify::ClientLockGameTimeNotify(const ClientLockGameTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_lock_ = from.is_lock_;
  // @@protoc_insertion_point(copy_constructor:proto.ClientLockGameTimeNotify)
}

void ClientLockGameTimeNotify::SharedCtor() {
  is_lock_ = false;
  _cached_size_ = 0;
}

ClientLockGameTimeNotify::~ClientLockGameTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientLockGameTimeNotify)
  SharedDtor();
}

void ClientLockGameTimeNotify::SharedDtor() {
}

void ClientLockGameTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientLockGameTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientLockGameTimeNotify& ClientLockGameTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientLockGameTimeNotify* ClientLockGameTimeNotify::New(::google::protobuf::Arena* arena) const {
  ClientLockGameTimeNotify* n = new ClientLockGameTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientLockGameTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientLockGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_lock_ = false;
  _internal_metadata_.Clear();
}

bool ClientLockGameTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientLockGameTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_lock = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_lock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientLockGameTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientLockGameTimeNotify)
  return false;
#undef DO_
}

void ClientLockGameTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientLockGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_lock = 5;
  if (this->is_lock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_lock(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientLockGameTimeNotify)
}

::google::protobuf::uint8* ClientLockGameTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientLockGameTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_lock = 5;
  if (this->is_lock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_lock(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientLockGameTimeNotify)
  return target;
}

size_t ClientLockGameTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientLockGameTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_lock = 5;
  if (this->is_lock() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientLockGameTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientLockGameTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLockGameTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientLockGameTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientLockGameTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientLockGameTimeNotify)
    MergeFrom(*source);
  }
}

void ClientLockGameTimeNotify::MergeFrom(const ClientLockGameTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientLockGameTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_lock() != 0) {
    set_is_lock(from.is_lock());
  }
}

void ClientLockGameTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientLockGameTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLockGameTimeNotify::CopyFrom(const ClientLockGameTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientLockGameTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLockGameTimeNotify::IsInitialized() const {
  return true;
}

void ClientLockGameTimeNotify::Swap(ClientLockGameTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLockGameTimeNotify::InternalSwap(ClientLockGameTimeNotify* other) {
  using std::swap;
  swap(is_lock_, other->is_lock_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientLockGameTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientLockGameTimeNotify

// bool is_lock = 5;
void ClientLockGameTimeNotify::clear_is_lock() {
  is_lock_ = false;
}
bool ClientLockGameTimeNotify::is_lock() const {
  // @@protoc_insertion_point(field_get:proto.ClientLockGameTimeNotify.is_lock)
  return is_lock_;
}
void ClientLockGameTimeNotify::set_is_lock(bool value) {
  
  is_lock_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientLockGameTimeNotify.is_lock)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextResourceInfoReq::GetNextResourceInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetNextResourceInfoReq)
}
GetNextResourceInfoReq::GetNextResourceInfoReq(const GetNextResourceInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetNextResourceInfoReq)
}

void GetNextResourceInfoReq::SharedCtor() {
  _cached_size_ = 0;
}

GetNextResourceInfoReq::~GetNextResourceInfoReq() {
  // @@protoc_insertion_point(destructor:proto.GetNextResourceInfoReq)
  SharedDtor();
}

void GetNextResourceInfoReq::SharedDtor() {
}

void GetNextResourceInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextResourceInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNextResourceInfoReq& GetNextResourceInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetNextResourceInfoReq* GetNextResourceInfoReq::New(::google::protobuf::Arena* arena) const {
  GetNextResourceInfoReq* n = new GetNextResourceInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextResourceInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetNextResourceInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetNextResourceInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetNextResourceInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetNextResourceInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetNextResourceInfoReq)
  return false;
#undef DO_
}

void GetNextResourceInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetNextResourceInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetNextResourceInfoReq)
}

::google::protobuf::uint8* GetNextResourceInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetNextResourceInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetNextResourceInfoReq)
  return target;
}

size_t GetNextResourceInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetNextResourceInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextResourceInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetNextResourceInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNextResourceInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextResourceInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetNextResourceInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetNextResourceInfoReq)
    MergeFrom(*source);
  }
}

void GetNextResourceInfoReq::MergeFrom(const GetNextResourceInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetNextResourceInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetNextResourceInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetNextResourceInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextResourceInfoReq::CopyFrom(const GetNextResourceInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetNextResourceInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextResourceInfoReq::IsInitialized() const {
  return true;
}

void GetNextResourceInfoReq::Swap(GetNextResourceInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextResourceInfoReq::InternalSwap(GetNextResourceInfoReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextResourceInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextResourceInfoReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNextResourceInfoRsp::kNextResourceUrlFieldNumber;
const int GetNextResourceInfoRsp::kNextResVersionConfigFieldNumber;
const int GetNextResourceInfoRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextResourceInfoRsp::GetNextResourceInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetNextResourceInfoRsp)
}
GetNextResourceInfoRsp::GetNextResourceInfoRsp(const GetNextResourceInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_resource_url().size() > 0) {
    next_resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_resource_url_);
  }
  if (from.has_next_res_version_config()) {
    next_res_version_config_ = new ::proto::ResVersionConfig(*from.next_res_version_config_);
  } else {
    next_res_version_config_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetNextResourceInfoRsp)
}

void GetNextResourceInfoRsp::SharedCtor() {
  next_resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&next_res_version_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&next_res_version_config_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetNextResourceInfoRsp::~GetNextResourceInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.GetNextResourceInfoRsp)
  SharedDtor();
}

void GetNextResourceInfoRsp::SharedDtor() {
  next_resource_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete next_res_version_config_;
}

void GetNextResourceInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextResourceInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNextResourceInfoRsp& GetNextResourceInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetNextResourceInfoRsp* GetNextResourceInfoRsp::New(::google::protobuf::Arena* arena) const {
  GetNextResourceInfoRsp* n = new GetNextResourceInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextResourceInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetNextResourceInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  next_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && next_res_version_config_ != NULL) {
    delete next_res_version_config_;
  }
  next_res_version_config_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetNextResourceInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetNextResourceInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ResVersionConfig next_res_version_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_next_res_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_resource_url = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_resource_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_resource_url().data(), static_cast<int>(this->next_resource_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetNextResourceInfoRsp.next_resource_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetNextResourceInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetNextResourceInfoRsp)
  return false;
#undef DO_
}

void GetNextResourceInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetNextResourceInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResVersionConfig next_res_version_config = 2;
  if (this->has_next_res_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->next_res_version_config_, output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  // string next_resource_url = 14;
  if (this->next_resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_resource_url().data(), static_cast<int>(this->next_resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetNextResourceInfoRsp.next_resource_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->next_resource_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetNextResourceInfoRsp)
}

::google::protobuf::uint8* GetNextResourceInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetNextResourceInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResVersionConfig next_res_version_config = 2;
  if (this->has_next_res_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->next_res_version_config_, deterministic, target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  // string next_resource_url = 14;
  if (this->next_resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_resource_url().data(), static_cast<int>(this->next_resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetNextResourceInfoRsp.next_resource_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->next_resource_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetNextResourceInfoRsp)
  return target;
}

size_t GetNextResourceInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetNextResourceInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string next_resource_url = 14;
  if (this->next_resource_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_resource_url());
  }

  // .proto.ResVersionConfig next_res_version_config = 2;
  if (this->has_next_res_version_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->next_res_version_config_);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextResourceInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetNextResourceInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNextResourceInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextResourceInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetNextResourceInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetNextResourceInfoRsp)
    MergeFrom(*source);
  }
}

void GetNextResourceInfoRsp::MergeFrom(const GetNextResourceInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetNextResourceInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.next_resource_url().size() > 0) {

    next_resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_resource_url_);
  }
  if (from.has_next_res_version_config()) {
    mutable_next_res_version_config()->::proto::ResVersionConfig::MergeFrom(from.next_res_version_config());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetNextResourceInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetNextResourceInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextResourceInfoRsp::CopyFrom(const GetNextResourceInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetNextResourceInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextResourceInfoRsp::IsInitialized() const {
  return true;
}

void GetNextResourceInfoRsp::Swap(GetNextResourceInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextResourceInfoRsp::InternalSwap(GetNextResourceInfoRsp* other) {
  using std::swap;
  next_resource_url_.Swap(&other->next_resource_url_);
  swap(next_res_version_config_, other->next_res_version_config_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextResourceInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextResourceInfoRsp

// string next_resource_url = 14;
void GetNextResourceInfoRsp::clear_next_resource_url() {
  next_resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetNextResourceInfoRsp::next_resource_url() const {
  // @@protoc_insertion_point(field_get:proto.GetNextResourceInfoRsp.next_resource_url)
  return next_resource_url_.GetNoArena();
}
void GetNextResourceInfoRsp::set_next_resource_url(const ::std::string& value) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetNextResourceInfoRsp.next_resource_url)
}
#if LANG_CXX11
void GetNextResourceInfoRsp::set_next_resource_url(::std::string&& value) {
  
  next_resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetNextResourceInfoRsp.next_resource_url)
}
#endif
void GetNextResourceInfoRsp::set_next_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetNextResourceInfoRsp.next_resource_url)
}
void GetNextResourceInfoRsp::set_next_resource_url(const char* value, size_t size) {
  
  next_resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetNextResourceInfoRsp.next_resource_url)
}
::std::string* GetNextResourceInfoRsp::mutable_next_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetNextResourceInfoRsp.next_resource_url)
  return next_resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetNextResourceInfoRsp::release_next_resource_url() {
  // @@protoc_insertion_point(field_release:proto.GetNextResourceInfoRsp.next_resource_url)
  
  return next_resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetNextResourceInfoRsp::set_allocated_next_resource_url(::std::string* next_resource_url) {
  if (next_resource_url != NULL) {
    
  } else {
    
  }
  next_resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.GetNextResourceInfoRsp.next_resource_url)
}

// .proto.ResVersionConfig next_res_version_config = 2;
bool GetNextResourceInfoRsp::has_next_res_version_config() const {
  return this != internal_default_instance() && next_res_version_config_ != NULL;
}
void GetNextResourceInfoRsp::clear_next_res_version_config() {
  if (GetArenaNoVirtual() == NULL && next_res_version_config_ != NULL) delete next_res_version_config_;
  next_res_version_config_ = NULL;
}
const ::proto::ResVersionConfig& GetNextResourceInfoRsp::next_res_version_config() const {
  const ::proto::ResVersionConfig* p = next_res_version_config_;
  // @@protoc_insertion_point(field_get:proto.GetNextResourceInfoRsp.next_res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
::proto::ResVersionConfig* GetNextResourceInfoRsp::mutable_next_res_version_config() {
  
  if (next_res_version_config_ == NULL) {
    next_res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetNextResourceInfoRsp.next_res_version_config)
  return next_res_version_config_;
}
::proto::ResVersionConfig* GetNextResourceInfoRsp::release_next_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.GetNextResourceInfoRsp.next_res_version_config)
  
  ::proto::ResVersionConfig* temp = next_res_version_config_;
  next_res_version_config_ = NULL;
  return temp;
}
void GetNextResourceInfoRsp::set_allocated_next_res_version_config(::proto::ResVersionConfig* next_res_version_config) {
  delete next_res_version_config_;
  next_res_version_config_ = next_res_version_config;
  if (next_res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetNextResourceInfoRsp.next_res_version_config)
}

// int32 retcode = 12;
void GetNextResourceInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetNextResourceInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetNextResourceInfoRsp.retcode)
  return retcode_;
}
void GetNextResourceInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetNextResourceInfoRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdjustWorldLevelReq::kExpectWorldLevelFieldNumber;
const int AdjustWorldLevelReq::kCurWorldLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdjustWorldLevelReq::AdjustWorldLevelReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AdjustWorldLevelReq)
}
AdjustWorldLevelReq::AdjustWorldLevelReq(const AdjustWorldLevelReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&expect_world_level_, &from.expect_world_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_world_level_) -
    reinterpret_cast<char*>(&expect_world_level_)) + sizeof(cur_world_level_));
  // @@protoc_insertion_point(copy_constructor:proto.AdjustWorldLevelReq)
}

void AdjustWorldLevelReq::SharedCtor() {
  ::memset(&expect_world_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_world_level_) -
      reinterpret_cast<char*>(&expect_world_level_)) + sizeof(cur_world_level_));
  _cached_size_ = 0;
}

AdjustWorldLevelReq::~AdjustWorldLevelReq() {
  // @@protoc_insertion_point(destructor:proto.AdjustWorldLevelReq)
  SharedDtor();
}

void AdjustWorldLevelReq::SharedDtor() {
}

void AdjustWorldLevelReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdjustWorldLevelReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdjustWorldLevelReq& AdjustWorldLevelReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdjustWorldLevelReq* AdjustWorldLevelReq::New(::google::protobuf::Arena* arena) const {
  AdjustWorldLevelReq* n = new AdjustWorldLevelReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdjustWorldLevelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AdjustWorldLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&expect_world_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_world_level_) -
      reinterpret_cast<char*>(&expect_world_level_)) + sizeof(cur_world_level_));
  _internal_metadata_.Clear();
}

bool AdjustWorldLevelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AdjustWorldLevelReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 expect_world_level = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expect_world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_world_level = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AdjustWorldLevelReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AdjustWorldLevelReq)
  return false;
#undef DO_
}

void AdjustWorldLevelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AdjustWorldLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expect_world_level = 8;
  if (this->expect_world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->expect_world_level(), output);
  }

  // uint32 cur_world_level = 9;
  if (this->cur_world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->cur_world_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AdjustWorldLevelReq)
}

::google::protobuf::uint8* AdjustWorldLevelReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AdjustWorldLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expect_world_level = 8;
  if (this->expect_world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->expect_world_level(), target);
  }

  // uint32 cur_world_level = 9;
  if (this->cur_world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->cur_world_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AdjustWorldLevelReq)
  return target;
}

size_t AdjustWorldLevelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AdjustWorldLevelReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 expect_world_level = 8;
  if (this->expect_world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expect_world_level());
  }

  // uint32 cur_world_level = 9;
  if (this->cur_world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_world_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdjustWorldLevelReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AdjustWorldLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AdjustWorldLevelReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdjustWorldLevelReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AdjustWorldLevelReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AdjustWorldLevelReq)
    MergeFrom(*source);
  }
}

void AdjustWorldLevelReq::MergeFrom(const AdjustWorldLevelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AdjustWorldLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expect_world_level() != 0) {
    set_expect_world_level(from.expect_world_level());
  }
  if (from.cur_world_level() != 0) {
    set_cur_world_level(from.cur_world_level());
  }
}

void AdjustWorldLevelReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AdjustWorldLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdjustWorldLevelReq::CopyFrom(const AdjustWorldLevelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AdjustWorldLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdjustWorldLevelReq::IsInitialized() const {
  return true;
}

void AdjustWorldLevelReq::Swap(AdjustWorldLevelReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdjustWorldLevelReq::InternalSwap(AdjustWorldLevelReq* other) {
  using std::swap;
  swap(expect_world_level_, other->expect_world_level_);
  swap(cur_world_level_, other->cur_world_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdjustWorldLevelReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdjustWorldLevelReq

// uint32 expect_world_level = 8;
void AdjustWorldLevelReq::clear_expect_world_level() {
  expect_world_level_ = 0u;
}
::google::protobuf::uint32 AdjustWorldLevelReq::expect_world_level() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelReq.expect_world_level)
  return expect_world_level_;
}
void AdjustWorldLevelReq::set_expect_world_level(::google::protobuf::uint32 value) {
  
  expect_world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelReq.expect_world_level)
}

// uint32 cur_world_level = 9;
void AdjustWorldLevelReq::clear_cur_world_level() {
  cur_world_level_ = 0u;
}
::google::protobuf::uint32 AdjustWorldLevelReq::cur_world_level() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelReq.cur_world_level)
  return cur_world_level_;
}
void AdjustWorldLevelReq::set_cur_world_level(::google::protobuf::uint32 value) {
  
  cur_world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelReq.cur_world_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdjustWorldLevelRsp::kRetcodeFieldNumber;
const int AdjustWorldLevelRsp::kCdOverTimeFieldNumber;
const int AdjustWorldLevelRsp::kAfterWorldLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdjustWorldLevelRsp::AdjustWorldLevelRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AdjustWorldLevelRsp)
}
AdjustWorldLevelRsp::AdjustWorldLevelRsp(const AdjustWorldLevelRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cd_over_time_, &from.cd_over_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&after_world_level_) -
    reinterpret_cast<char*>(&cd_over_time_)) + sizeof(after_world_level_));
  // @@protoc_insertion_point(copy_constructor:proto.AdjustWorldLevelRsp)
}

void AdjustWorldLevelRsp::SharedCtor() {
  ::memset(&cd_over_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&after_world_level_) -
      reinterpret_cast<char*>(&cd_over_time_)) + sizeof(after_world_level_));
  _cached_size_ = 0;
}

AdjustWorldLevelRsp::~AdjustWorldLevelRsp() {
  // @@protoc_insertion_point(destructor:proto.AdjustWorldLevelRsp)
  SharedDtor();
}

void AdjustWorldLevelRsp::SharedDtor() {
}

void AdjustWorldLevelRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdjustWorldLevelRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdjustWorldLevelRsp& AdjustWorldLevelRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdjustWorldLevelRsp* AdjustWorldLevelRsp::New(::google::protobuf::Arena* arena) const {
  AdjustWorldLevelRsp* n = new AdjustWorldLevelRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdjustWorldLevelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AdjustWorldLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cd_over_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&after_world_level_) -
      reinterpret_cast<char*>(&cd_over_time_)) + sizeof(after_world_level_));
  _internal_metadata_.Clear();
}

bool AdjustWorldLevelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AdjustWorldLevelRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 after_world_level = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &after_world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cd_over_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_over_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AdjustWorldLevelRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AdjustWorldLevelRsp)
  return false;
#undef DO_
}

void AdjustWorldLevelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AdjustWorldLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  // uint32 after_world_level = 14;
  if (this->after_world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->after_world_level(), output);
  }

  // uint32 cd_over_time = 15;
  if (this->cd_over_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->cd_over_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AdjustWorldLevelRsp)
}

::google::protobuf::uint8* AdjustWorldLevelRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AdjustWorldLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  // uint32 after_world_level = 14;
  if (this->after_world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->after_world_level(), target);
  }

  // uint32 cd_over_time = 15;
  if (this->cd_over_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->cd_over_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AdjustWorldLevelRsp)
  return target;
}

size_t AdjustWorldLevelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AdjustWorldLevelRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cd_over_time = 15;
  if (this->cd_over_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd_over_time());
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 after_world_level = 14;
  if (this->after_world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->after_world_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdjustWorldLevelRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AdjustWorldLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AdjustWorldLevelRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdjustWorldLevelRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AdjustWorldLevelRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AdjustWorldLevelRsp)
    MergeFrom(*source);
  }
}

void AdjustWorldLevelRsp::MergeFrom(const AdjustWorldLevelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AdjustWorldLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cd_over_time() != 0) {
    set_cd_over_time(from.cd_over_time());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.after_world_level() != 0) {
    set_after_world_level(from.after_world_level());
  }
}

void AdjustWorldLevelRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AdjustWorldLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdjustWorldLevelRsp::CopyFrom(const AdjustWorldLevelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AdjustWorldLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdjustWorldLevelRsp::IsInitialized() const {
  return true;
}

void AdjustWorldLevelRsp::Swap(AdjustWorldLevelRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdjustWorldLevelRsp::InternalSwap(AdjustWorldLevelRsp* other) {
  using std::swap;
  swap(cd_over_time_, other->cd_over_time_);
  swap(retcode_, other->retcode_);
  swap(after_world_level_, other->after_world_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdjustWorldLevelRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdjustWorldLevelRsp

// int32 retcode = 13;
void AdjustWorldLevelRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AdjustWorldLevelRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelRsp.retcode)
  return retcode_;
}
void AdjustWorldLevelRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelRsp.retcode)
}

// uint32 cd_over_time = 15;
void AdjustWorldLevelRsp::clear_cd_over_time() {
  cd_over_time_ = 0u;
}
::google::protobuf::uint32 AdjustWorldLevelRsp::cd_over_time() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelRsp.cd_over_time)
  return cd_over_time_;
}
void AdjustWorldLevelRsp::set_cd_over_time(::google::protobuf::uint32 value) {
  
  cd_over_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelRsp.cd_over_time)
}

// uint32 after_world_level = 14;
void AdjustWorldLevelRsp::clear_after_world_level() {
  after_world_level_ = 0u;
}
::google::protobuf::uint32 AdjustWorldLevelRsp::after_world_level() const {
  // @@protoc_insertion_point(field_get:proto.AdjustWorldLevelRsp.after_world_level)
  return after_world_level_;
}
void AdjustWorldLevelRsp::set_after_world_level(::google::protobuf::uint32 value) {
  
  after_world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AdjustWorldLevelRsp.after_world_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskFilterCityReq::kCityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskFilterCityReq::DailyTaskFilterCityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskFilterCityReq)
}
DailyTaskFilterCityReq::DailyTaskFilterCityReq(const DailyTaskFilterCityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  city_id_ = from.city_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskFilterCityReq)
}

void DailyTaskFilterCityReq::SharedCtor() {
  city_id_ = 0u;
  _cached_size_ = 0;
}

DailyTaskFilterCityReq::~DailyTaskFilterCityReq() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskFilterCityReq)
  SharedDtor();
}

void DailyTaskFilterCityReq::SharedDtor() {
}

void DailyTaskFilterCityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskFilterCityReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskFilterCityReq& DailyTaskFilterCityReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskFilterCityReq* DailyTaskFilterCityReq::New(::google::protobuf::Arena* arena) const {
  DailyTaskFilterCityReq* n = new DailyTaskFilterCityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskFilterCityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskFilterCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  city_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DailyTaskFilterCityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskFilterCityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 city_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &city_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskFilterCityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskFilterCityReq)
  return false;
#undef DO_
}

void DailyTaskFilterCityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskFilterCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 city_id = 8;
  if (this->city_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->city_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskFilterCityReq)
}

::google::protobuf::uint8* DailyTaskFilterCityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskFilterCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 city_id = 8;
  if (this->city_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->city_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskFilterCityReq)
  return target;
}

size_t DailyTaskFilterCityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskFilterCityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 city_id = 8;
  if (this->city_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->city_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskFilterCityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskFilterCityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskFilterCityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskFilterCityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskFilterCityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskFilterCityReq)
    MergeFrom(*source);
  }
}

void DailyTaskFilterCityReq::MergeFrom(const DailyTaskFilterCityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskFilterCityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.city_id() != 0) {
    set_city_id(from.city_id());
  }
}

void DailyTaskFilterCityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskFilterCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskFilterCityReq::CopyFrom(const DailyTaskFilterCityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskFilterCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskFilterCityReq::IsInitialized() const {
  return true;
}

void DailyTaskFilterCityReq::Swap(DailyTaskFilterCityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskFilterCityReq::InternalSwap(DailyTaskFilterCityReq* other) {
  using std::swap;
  swap(city_id_, other->city_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskFilterCityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskFilterCityReq

// uint32 city_id = 8;
void DailyTaskFilterCityReq::clear_city_id() {
  city_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskFilterCityReq::city_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskFilterCityReq.city_id)
  return city_id_;
}
void DailyTaskFilterCityReq::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskFilterCityReq.city_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskFilterCityRsp::kRetcodeFieldNumber;
const int DailyTaskFilterCityRsp::kCityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskFilterCityRsp::DailyTaskFilterCityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskFilterCityRsp)
}
DailyTaskFilterCityRsp::DailyTaskFilterCityRsp(const DailyTaskFilterCityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&city_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(city_id_));
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskFilterCityRsp)
}

void DailyTaskFilterCityRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&city_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(city_id_));
  _cached_size_ = 0;
}

DailyTaskFilterCityRsp::~DailyTaskFilterCityRsp() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskFilterCityRsp)
  SharedDtor();
}

void DailyTaskFilterCityRsp::SharedDtor() {
}

void DailyTaskFilterCityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskFilterCityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskFilterCityRsp& DailyTaskFilterCityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskFilterCityRsp* DailyTaskFilterCityRsp::New(::google::protobuf::Arena* arena) const {
  DailyTaskFilterCityRsp* n = new DailyTaskFilterCityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskFilterCityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskFilterCityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&city_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(city_id_));
  _internal_metadata_.Clear();
}

bool DailyTaskFilterCityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskFilterCityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 city_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &city_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskFilterCityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskFilterCityRsp)
  return false;
#undef DO_
}

void DailyTaskFilterCityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskFilterCityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 city_id = 9;
  if (this->city_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->city_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskFilterCityRsp)
}

::google::protobuf::uint8* DailyTaskFilterCityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskFilterCityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 city_id = 9;
  if (this->city_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->city_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskFilterCityRsp)
  return target;
}

size_t DailyTaskFilterCityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskFilterCityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 city_id = 9;
  if (this->city_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->city_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskFilterCityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskFilterCityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskFilterCityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskFilterCityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskFilterCityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskFilterCityRsp)
    MergeFrom(*source);
  }
}

void DailyTaskFilterCityRsp::MergeFrom(const DailyTaskFilterCityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskFilterCityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.city_id() != 0) {
    set_city_id(from.city_id());
  }
}

void DailyTaskFilterCityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskFilterCityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskFilterCityRsp::CopyFrom(const DailyTaskFilterCityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskFilterCityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskFilterCityRsp::IsInitialized() const {
  return true;
}

void DailyTaskFilterCityRsp::Swap(DailyTaskFilterCityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskFilterCityRsp::InternalSwap(DailyTaskFilterCityRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(city_id_, other->city_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskFilterCityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskFilterCityRsp

// int32 retcode = 5;
void DailyTaskFilterCityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DailyTaskFilterCityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskFilterCityRsp.retcode)
  return retcode_;
}
void DailyTaskFilterCityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskFilterCityRsp.retcode)
}

// uint32 city_id = 9;
void DailyTaskFilterCityRsp::clear_city_id() {
  city_id_ = 0u;
}
::google::protobuf::uint32 DailyTaskFilterCityRsp::city_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskFilterCityRsp.city_id)
  return city_id_;
}
void DailyTaskFilterCityRsp::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskFilterCityRsp.city_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DailyTaskUnlockedCitiesNotify::kUnlockedCityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DailyTaskUnlockedCitiesNotify::DailyTaskUnlockedCitiesNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DailyTaskUnlockedCitiesNotify)
}
DailyTaskUnlockedCitiesNotify::DailyTaskUnlockedCitiesNotify(const DailyTaskUnlockedCitiesNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlocked_city_list_(from.unlocked_city_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DailyTaskUnlockedCitiesNotify)
}

void DailyTaskUnlockedCitiesNotify::SharedCtor() {
  _cached_size_ = 0;
}

DailyTaskUnlockedCitiesNotify::~DailyTaskUnlockedCitiesNotify() {
  // @@protoc_insertion_point(destructor:proto.DailyTaskUnlockedCitiesNotify)
  SharedDtor();
}

void DailyTaskUnlockedCitiesNotify::SharedDtor() {
}

void DailyTaskUnlockedCitiesNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyTaskUnlockedCitiesNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DailyTaskUnlockedCitiesNotify& DailyTaskUnlockedCitiesNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

DailyTaskUnlockedCitiesNotify* DailyTaskUnlockedCitiesNotify::New(::google::protobuf::Arena* arena) const {
  DailyTaskUnlockedCitiesNotify* n = new DailyTaskUnlockedCitiesNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DailyTaskUnlockedCitiesNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyTaskUnlockedCitiesNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlocked_city_list_.Clear();
  _internal_metadata_.Clear();
}

bool DailyTaskUnlockedCitiesNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DailyTaskUnlockedCitiesNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 unlocked_city_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_city_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_unlocked_city_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DailyTaskUnlockedCitiesNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DailyTaskUnlockedCitiesNotify)
  return false;
#undef DO_
}

void DailyTaskUnlockedCitiesNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DailyTaskUnlockedCitiesNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlocked_city_list = 12;
  if (this->unlocked_city_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_city_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_city_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_city_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DailyTaskUnlockedCitiesNotify)
}

::google::protobuf::uint8* DailyTaskUnlockedCitiesNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyTaskUnlockedCitiesNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 unlocked_city_list = 12;
  if (this->unlocked_city_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_city_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_city_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyTaskUnlockedCitiesNotify)
  return target;
}

size_t DailyTaskUnlockedCitiesNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyTaskUnlockedCitiesNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlocked_city_list = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_city_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_city_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyTaskUnlockedCitiesNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DailyTaskUnlockedCitiesNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTaskUnlockedCitiesNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DailyTaskUnlockedCitiesNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DailyTaskUnlockedCitiesNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DailyTaskUnlockedCitiesNotify)
    MergeFrom(*source);
  }
}

void DailyTaskUnlockedCitiesNotify::MergeFrom(const DailyTaskUnlockedCitiesNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyTaskUnlockedCitiesNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlocked_city_list_.MergeFrom(from.unlocked_city_list_);
}

void DailyTaskUnlockedCitiesNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DailyTaskUnlockedCitiesNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTaskUnlockedCitiesNotify::CopyFrom(const DailyTaskUnlockedCitiesNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyTaskUnlockedCitiesNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTaskUnlockedCitiesNotify::IsInitialized() const {
  return true;
}

void DailyTaskUnlockedCitiesNotify::Swap(DailyTaskUnlockedCitiesNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DailyTaskUnlockedCitiesNotify::InternalSwap(DailyTaskUnlockedCitiesNotify* other) {
  using std::swap;
  unlocked_city_list_.InternalSwap(&other->unlocked_city_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DailyTaskUnlockedCitiesNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DailyTaskUnlockedCitiesNotify

// repeated uint32 unlocked_city_list = 12;
int DailyTaskUnlockedCitiesNotify::unlocked_city_list_size() const {
  return unlocked_city_list_.size();
}
void DailyTaskUnlockedCitiesNotify::clear_unlocked_city_list() {
  unlocked_city_list_.Clear();
}
::google::protobuf::uint32 DailyTaskUnlockedCitiesNotify::unlocked_city_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
  return unlocked_city_list_.Get(index);
}
void DailyTaskUnlockedCitiesNotify::set_unlocked_city_list(int index, ::google::protobuf::uint32 value) {
  unlocked_city_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
}
void DailyTaskUnlockedCitiesNotify::add_unlocked_city_list(::google::protobuf::uint32 value) {
  unlocked_city_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DailyTaskUnlockedCitiesNotify::unlocked_city_list() const {
  // @@protoc_insertion_point(field_list:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
  return unlocked_city_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DailyTaskUnlockedCitiesNotify::mutable_unlocked_city_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DailyTaskUnlockedCitiesNotify.unlocked_city_list)
  return &unlocked_city_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExclusiveRuleInfo::kObjectIdListFieldNumber;
const int ExclusiveRuleInfo::kRuleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExclusiveRuleInfo::ExclusiveRuleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExclusiveRuleInfo)
}
ExclusiveRuleInfo::ExclusiveRuleInfo(const ExclusiveRuleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      object_id_list_(from.object_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rule_type_ = from.rule_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ExclusiveRuleInfo)
}

void ExclusiveRuleInfo::SharedCtor() {
  rule_type_ = 0u;
  _cached_size_ = 0;
}

ExclusiveRuleInfo::~ExclusiveRuleInfo() {
  // @@protoc_insertion_point(destructor:proto.ExclusiveRuleInfo)
  SharedDtor();
}

void ExclusiveRuleInfo::SharedDtor() {
}

void ExclusiveRuleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExclusiveRuleInfo::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExclusiveRuleInfo& ExclusiveRuleInfo::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExclusiveRuleInfo* ExclusiveRuleInfo::New(::google::protobuf::Arena* arena) const {
  ExclusiveRuleInfo* n = new ExclusiveRuleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExclusiveRuleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExclusiveRuleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_list_.Clear();
  rule_type_ = 0u;
  _internal_metadata_.Clear();
}

bool ExclusiveRuleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExclusiveRuleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 object_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_object_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_object_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rule_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rule_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExclusiveRuleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExclusiveRuleInfo)
  return false;
#undef DO_
}

void ExclusiveRuleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExclusiveRuleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 object_id_list = 1;
  if (this->object_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _object_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->object_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->object_id_list(i), output);
  }

  // uint32 rule_type = 10;
  if (this->rule_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->rule_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExclusiveRuleInfo)
}

::google::protobuf::uint8* ExclusiveRuleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExclusiveRuleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 object_id_list = 1;
  if (this->object_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _object_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->object_id_list_, target);
  }

  // uint32 rule_type = 10;
  if (this->rule_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->rule_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExclusiveRuleInfo)
  return target;
}

size_t ExclusiveRuleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExclusiveRuleInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 object_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->object_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _object_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 rule_type = 10;
  if (this->rule_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rule_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExclusiveRuleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExclusiveRuleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExclusiveRuleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExclusiveRuleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExclusiveRuleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExclusiveRuleInfo)
    MergeFrom(*source);
  }
}

void ExclusiveRuleInfo::MergeFrom(const ExclusiveRuleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExclusiveRuleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_id_list_.MergeFrom(from.object_id_list_);
  if (from.rule_type() != 0) {
    set_rule_type(from.rule_type());
  }
}

void ExclusiveRuleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExclusiveRuleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExclusiveRuleInfo::CopyFrom(const ExclusiveRuleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExclusiveRuleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExclusiveRuleInfo::IsInitialized() const {
  return true;
}

void ExclusiveRuleInfo::Swap(ExclusiveRuleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExclusiveRuleInfo::InternalSwap(ExclusiveRuleInfo* other) {
  using std::swap;
  object_id_list_.InternalSwap(&other->object_id_list_);
  swap(rule_type_, other->rule_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExclusiveRuleInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExclusiveRuleInfo

// repeated uint32 object_id_list = 1;
int ExclusiveRuleInfo::object_id_list_size() const {
  return object_id_list_.size();
}
void ExclusiveRuleInfo::clear_object_id_list() {
  object_id_list_.Clear();
}
::google::protobuf::uint32 ExclusiveRuleInfo::object_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ExclusiveRuleInfo.object_id_list)
  return object_id_list_.Get(index);
}
void ExclusiveRuleInfo::set_object_id_list(int index, ::google::protobuf::uint32 value) {
  object_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ExclusiveRuleInfo.object_id_list)
}
void ExclusiveRuleInfo::add_object_id_list(::google::protobuf::uint32 value) {
  object_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ExclusiveRuleInfo.object_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ExclusiveRuleInfo::object_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ExclusiveRuleInfo.object_id_list)
  return object_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ExclusiveRuleInfo::mutable_object_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ExclusiveRuleInfo.object_id_list)
  return &object_id_list_;
}

// uint32 rule_type = 10;
void ExclusiveRuleInfo::clear_rule_type() {
  rule_type_ = 0u;
}
::google::protobuf::uint32 ExclusiveRuleInfo::rule_type() const {
  // @@protoc_insertion_point(field_get:proto.ExclusiveRuleInfo.rule_type)
  return rule_type_;
}
void ExclusiveRuleInfo::set_rule_type(::google::protobuf::uint32 value) {
  
  rule_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ExclusiveRuleInfo.rule_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExclusiveRuleNotify::kRuleInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExclusiveRuleNotify::ExclusiveRuleNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExclusiveRuleNotify)
}
ExclusiveRuleNotify::ExclusiveRuleNotify(const ExclusiveRuleNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rule_info_list_(from.rule_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ExclusiveRuleNotify)
}

void ExclusiveRuleNotify::SharedCtor() {
  _cached_size_ = 0;
}

ExclusiveRuleNotify::~ExclusiveRuleNotify() {
  // @@protoc_insertion_point(destructor:proto.ExclusiveRuleNotify)
  SharedDtor();
}

void ExclusiveRuleNotify::SharedDtor() {
}

void ExclusiveRuleNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExclusiveRuleNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExclusiveRuleNotify& ExclusiveRuleNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExclusiveRuleNotify* ExclusiveRuleNotify::New(::google::protobuf::Arena* arena) const {
  ExclusiveRuleNotify* n = new ExclusiveRuleNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExclusiveRuleNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExclusiveRuleNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rule_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool ExclusiveRuleNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExclusiveRuleNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ExclusiveRuleInfo rule_info_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rule_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExclusiveRuleNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExclusiveRuleNotify)
  return false;
#undef DO_
}

void ExclusiveRuleNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExclusiveRuleNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ExclusiveRuleInfo rule_info_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rule_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->rule_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExclusiveRuleNotify)
}

::google::protobuf::uint8* ExclusiveRuleNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExclusiveRuleNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ExclusiveRuleInfo rule_info_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rule_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->rule_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExclusiveRuleNotify)
  return target;
}

size_t ExclusiveRuleNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExclusiveRuleNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ExclusiveRuleInfo rule_info_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->rule_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rule_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExclusiveRuleNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExclusiveRuleNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ExclusiveRuleNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExclusiveRuleNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExclusiveRuleNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExclusiveRuleNotify)
    MergeFrom(*source);
  }
}

void ExclusiveRuleNotify::MergeFrom(const ExclusiveRuleNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExclusiveRuleNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rule_info_list_.MergeFrom(from.rule_info_list_);
}

void ExclusiveRuleNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExclusiveRuleNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExclusiveRuleNotify::CopyFrom(const ExclusiveRuleNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExclusiveRuleNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExclusiveRuleNotify::IsInitialized() const {
  return true;
}

void ExclusiveRuleNotify::Swap(ExclusiveRuleNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExclusiveRuleNotify::InternalSwap(ExclusiveRuleNotify* other) {
  using std::swap;
  rule_info_list_.InternalSwap(&other->rule_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExclusiveRuleNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExclusiveRuleNotify

// repeated .proto.ExclusiveRuleInfo rule_info_list = 5;
int ExclusiveRuleNotify::rule_info_list_size() const {
  return rule_info_list_.size();
}
void ExclusiveRuleNotify::clear_rule_info_list() {
  rule_info_list_.Clear();
}
const ::proto::ExclusiveRuleInfo& ExclusiveRuleNotify::rule_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_.Get(index);
}
::proto::ExclusiveRuleInfo* ExclusiveRuleNotify::mutable_rule_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_.Mutable(index);
}
::proto::ExclusiveRuleInfo* ExclusiveRuleNotify::add_rule_info_list() {
  // @@protoc_insertion_point(field_add:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ExclusiveRuleInfo >*
ExclusiveRuleNotify::mutable_rule_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ExclusiveRuleNotify.rule_info_list)
  return &rule_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ExclusiveRuleInfo >&
ExclusiveRuleNotify::rule_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ExclusiveRuleNotify.rule_info_list)
  return rule_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompoundUnlockNotify::kCompoundIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompoundUnlockNotify::CompoundUnlockNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CompoundUnlockNotify)
}
CompoundUnlockNotify::CompoundUnlockNotify(const CompoundUnlockNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  compound_id_ = from.compound_id_;
  // @@protoc_insertion_point(copy_constructor:proto.CompoundUnlockNotify)
}

void CompoundUnlockNotify::SharedCtor() {
  compound_id_ = 0u;
  _cached_size_ = 0;
}

CompoundUnlockNotify::~CompoundUnlockNotify() {
  // @@protoc_insertion_point(destructor:proto.CompoundUnlockNotify)
  SharedDtor();
}

void CompoundUnlockNotify::SharedDtor() {
}

void CompoundUnlockNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompoundUnlockNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompoundUnlockNotify& CompoundUnlockNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompoundUnlockNotify* CompoundUnlockNotify::New(::google::protobuf::Arena* arena) const {
  CompoundUnlockNotify* n = new CompoundUnlockNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompoundUnlockNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CompoundUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compound_id_ = 0u;
  _internal_metadata_.Clear();
}

bool CompoundUnlockNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CompoundUnlockNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compound_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compound_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CompoundUnlockNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CompoundUnlockNotify)
  return false;
#undef DO_
}

void CompoundUnlockNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CompoundUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 3;
  if (this->compound_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->compound_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CompoundUnlockNotify)
}

::google::protobuf::uint8* CompoundUnlockNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CompoundUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compound_id = 3;
  if (this->compound_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->compound_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CompoundUnlockNotify)
  return target;
}

size_t CompoundUnlockNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CompoundUnlockNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 compound_id = 3;
  if (this->compound_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compound_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompoundUnlockNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CompoundUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CompoundUnlockNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompoundUnlockNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CompoundUnlockNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CompoundUnlockNotify)
    MergeFrom(*source);
  }
}

void CompoundUnlockNotify::MergeFrom(const CompoundUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CompoundUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compound_id() != 0) {
    set_compound_id(from.compound_id());
  }
}

void CompoundUnlockNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CompoundUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompoundUnlockNotify::CopyFrom(const CompoundUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CompoundUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompoundUnlockNotify::IsInitialized() const {
  return true;
}

void CompoundUnlockNotify::Swap(CompoundUnlockNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompoundUnlockNotify::InternalSwap(CompoundUnlockNotify* other) {
  using std::swap;
  swap(compound_id_, other->compound_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompoundUnlockNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompoundUnlockNotify

// uint32 compound_id = 3;
void CompoundUnlockNotify::clear_compound_id() {
  compound_id_ = 0u;
}
::google::protobuf::uint32 CompoundUnlockNotify::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.CompoundUnlockNotify.compound_id)
  return compound_id_;
}
void CompoundUnlockNotify::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundUnlockNotify.compound_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameplayRecommendationSkillRequest::kSkillDepotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameplayRecommendationSkillRequest::GameplayRecommendationSkillRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameplayRecommendationSkillRequest)
}
GameplayRecommendationSkillRequest::GameplayRecommendationSkillRequest(const GameplayRecommendationSkillRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skill_depot_id_ = from.skill_depot_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GameplayRecommendationSkillRequest)
}

void GameplayRecommendationSkillRequest::SharedCtor() {
  skill_depot_id_ = 0u;
  _cached_size_ = 0;
}

GameplayRecommendationSkillRequest::~GameplayRecommendationSkillRequest() {
  // @@protoc_insertion_point(destructor:proto.GameplayRecommendationSkillRequest)
  SharedDtor();
}

void GameplayRecommendationSkillRequest::SharedDtor() {
}

void GameplayRecommendationSkillRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameplayRecommendationSkillRequest::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameplayRecommendationSkillRequest& GameplayRecommendationSkillRequest::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameplayRecommendationSkillRequest* GameplayRecommendationSkillRequest::New(::google::protobuf::Arena* arena) const {
  GameplayRecommendationSkillRequest* n = new GameplayRecommendationSkillRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameplayRecommendationSkillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameplayRecommendationSkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skill_depot_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GameplayRecommendationSkillRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameplayRecommendationSkillRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 skill_depot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameplayRecommendationSkillRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameplayRecommendationSkillRequest)
  return false;
#undef DO_
}

void GameplayRecommendationSkillRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameplayRecommendationSkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_depot_id = 1;
  if (this->skill_depot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skill_depot_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameplayRecommendationSkillRequest)
}

::google::protobuf::uint8* GameplayRecommendationSkillRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameplayRecommendationSkillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 skill_depot_id = 1;
  if (this->skill_depot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skill_depot_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameplayRecommendationSkillRequest)
  return target;
}

size_t GameplayRecommendationSkillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameplayRecommendationSkillRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 skill_depot_id = 1;
  if (this->skill_depot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_depot_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameplayRecommendationSkillRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameplayRecommendationSkillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameplayRecommendationSkillRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameplayRecommendationSkillRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameplayRecommendationSkillRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameplayRecommendationSkillRequest)
    MergeFrom(*source);
  }
}

void GameplayRecommendationSkillRequest::MergeFrom(const GameplayRecommendationSkillRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameplayRecommendationSkillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skill_depot_id() != 0) {
    set_skill_depot_id(from.skill_depot_id());
  }
}

void GameplayRecommendationSkillRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameplayRecommendationSkillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameplayRecommendationSkillRequest::CopyFrom(const GameplayRecommendationSkillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameplayRecommendationSkillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameplayRecommendationSkillRequest::IsInitialized() const {
  return true;
}

void GameplayRecommendationSkillRequest::Swap(GameplayRecommendationSkillRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameplayRecommendationSkillRequest::InternalSwap(GameplayRecommendationSkillRequest* other) {
  using std::swap;
  swap(skill_depot_id_, other->skill_depot_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameplayRecommendationSkillRequest::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameplayRecommendationSkillRequest

// uint32 skill_depot_id = 1;
void GameplayRecommendationSkillRequest::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationSkillRequest::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationSkillRequest.skill_depot_id)
  return skill_depot_id_;
}
void GameplayRecommendationSkillRequest::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationSkillRequest.skill_depot_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameplayRecommendationReliquaryRequest::kEquipTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameplayRecommendationReliquaryRequest::GameplayRecommendationReliquaryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameplayRecommendationReliquaryRequest)
}
GameplayRecommendationReliquaryRequest::GameplayRecommendationReliquaryRequest(const GameplayRecommendationReliquaryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  equip_type_ = from.equip_type_;
  // @@protoc_insertion_point(copy_constructor:proto.GameplayRecommendationReliquaryRequest)
}

void GameplayRecommendationReliquaryRequest::SharedCtor() {
  equip_type_ = 0u;
  _cached_size_ = 0;
}

GameplayRecommendationReliquaryRequest::~GameplayRecommendationReliquaryRequest() {
  // @@protoc_insertion_point(destructor:proto.GameplayRecommendationReliquaryRequest)
  SharedDtor();
}

void GameplayRecommendationReliquaryRequest::SharedDtor() {
}

void GameplayRecommendationReliquaryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameplayRecommendationReliquaryRequest::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameplayRecommendationReliquaryRequest& GameplayRecommendationReliquaryRequest::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameplayRecommendationReliquaryRequest* GameplayRecommendationReliquaryRequest::New(::google::protobuf::Arena* arena) const {
  GameplayRecommendationReliquaryRequest* n = new GameplayRecommendationReliquaryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameplayRecommendationReliquaryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameplayRecommendationReliquaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equip_type_ = 0u;
  _internal_metadata_.Clear();
}

bool GameplayRecommendationReliquaryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameplayRecommendationReliquaryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 equip_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameplayRecommendationReliquaryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameplayRecommendationReliquaryRequest)
  return false;
#undef DO_
}

void GameplayRecommendationReliquaryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameplayRecommendationReliquaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 equip_type = 6;
  if (this->equip_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->equip_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameplayRecommendationReliquaryRequest)
}

::google::protobuf::uint8* GameplayRecommendationReliquaryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameplayRecommendationReliquaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 equip_type = 6;
  if (this->equip_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->equip_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameplayRecommendationReliquaryRequest)
  return target;
}

size_t GameplayRecommendationReliquaryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameplayRecommendationReliquaryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 equip_type = 6;
  if (this->equip_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equip_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameplayRecommendationReliquaryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameplayRecommendationReliquaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameplayRecommendationReliquaryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameplayRecommendationReliquaryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameplayRecommendationReliquaryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameplayRecommendationReliquaryRequest)
    MergeFrom(*source);
  }
}

void GameplayRecommendationReliquaryRequest::MergeFrom(const GameplayRecommendationReliquaryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameplayRecommendationReliquaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.equip_type() != 0) {
    set_equip_type(from.equip_type());
  }
}

void GameplayRecommendationReliquaryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameplayRecommendationReliquaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameplayRecommendationReliquaryRequest::CopyFrom(const GameplayRecommendationReliquaryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameplayRecommendationReliquaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameplayRecommendationReliquaryRequest::IsInitialized() const {
  return true;
}

void GameplayRecommendationReliquaryRequest::Swap(GameplayRecommendationReliquaryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameplayRecommendationReliquaryRequest::InternalSwap(GameplayRecommendationReliquaryRequest* other) {
  using std::swap;
  swap(equip_type_, other->equip_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameplayRecommendationReliquaryRequest::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameplayRecommendationReliquaryRequest

// uint32 equip_type = 6;
void GameplayRecommendationReliquaryRequest::clear_equip_type() {
  equip_type_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationReliquaryRequest::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryRequest.equip_type)
  return equip_type_;
}
void GameplayRecommendationReliquaryRequest::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryRequest.equip_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameplayRecommendationElementReliquaryRequest::kEquipTypeFieldNumber;
const int GameplayRecommendationElementReliquaryRequest::kElementTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameplayRecommendationElementReliquaryRequest::GameplayRecommendationElementReliquaryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameplayRecommendationElementReliquaryRequest)
}
GameplayRecommendationElementReliquaryRequest::GameplayRecommendationElementReliquaryRequest(const GameplayRecommendationElementReliquaryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&equip_type_, &from.equip_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&element_type_) -
    reinterpret_cast<char*>(&equip_type_)) + sizeof(element_type_));
  // @@protoc_insertion_point(copy_constructor:proto.GameplayRecommendationElementReliquaryRequest)
}

void GameplayRecommendationElementReliquaryRequest::SharedCtor() {
  ::memset(&equip_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&element_type_) -
      reinterpret_cast<char*>(&equip_type_)) + sizeof(element_type_));
  _cached_size_ = 0;
}

GameplayRecommendationElementReliquaryRequest::~GameplayRecommendationElementReliquaryRequest() {
  // @@protoc_insertion_point(destructor:proto.GameplayRecommendationElementReliquaryRequest)
  SharedDtor();
}

void GameplayRecommendationElementReliquaryRequest::SharedDtor() {
}

void GameplayRecommendationElementReliquaryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameplayRecommendationElementReliquaryRequest::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameplayRecommendationElementReliquaryRequest& GameplayRecommendationElementReliquaryRequest::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameplayRecommendationElementReliquaryRequest* GameplayRecommendationElementReliquaryRequest::New(::google::protobuf::Arena* arena) const {
  GameplayRecommendationElementReliquaryRequest* n = new GameplayRecommendationElementReliquaryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameplayRecommendationElementReliquaryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameplayRecommendationElementReliquaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&equip_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&element_type_) -
      reinterpret_cast<char*>(&equip_type_)) + sizeof(element_type_));
  _internal_metadata_.Clear();
}

bool GameplayRecommendationElementReliquaryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameplayRecommendationElementReliquaryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 equip_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 element_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &element_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameplayRecommendationElementReliquaryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameplayRecommendationElementReliquaryRequest)
  return false;
#undef DO_
}

void GameplayRecommendationElementReliquaryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameplayRecommendationElementReliquaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 equip_type = 9;
  if (this->equip_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->equip_type(), output);
  }

  // uint32 element_type = 12;
  if (this->element_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->element_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameplayRecommendationElementReliquaryRequest)
}

::google::protobuf::uint8* GameplayRecommendationElementReliquaryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameplayRecommendationElementReliquaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 equip_type = 9;
  if (this->equip_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->equip_type(), target);
  }

  // uint32 element_type = 12;
  if (this->element_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->element_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameplayRecommendationElementReliquaryRequest)
  return target;
}

size_t GameplayRecommendationElementReliquaryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameplayRecommendationElementReliquaryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 equip_type = 9;
  if (this->equip_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equip_type());
  }

  // uint32 element_type = 12;
  if (this->element_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->element_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameplayRecommendationElementReliquaryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameplayRecommendationElementReliquaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameplayRecommendationElementReliquaryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameplayRecommendationElementReliquaryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameplayRecommendationElementReliquaryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameplayRecommendationElementReliquaryRequest)
    MergeFrom(*source);
  }
}

void GameplayRecommendationElementReliquaryRequest::MergeFrom(const GameplayRecommendationElementReliquaryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameplayRecommendationElementReliquaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.equip_type() != 0) {
    set_equip_type(from.equip_type());
  }
  if (from.element_type() != 0) {
    set_element_type(from.element_type());
  }
}

void GameplayRecommendationElementReliquaryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameplayRecommendationElementReliquaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameplayRecommendationElementReliquaryRequest::CopyFrom(const GameplayRecommendationElementReliquaryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameplayRecommendationElementReliquaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameplayRecommendationElementReliquaryRequest::IsInitialized() const {
  return true;
}

void GameplayRecommendationElementReliquaryRequest::Swap(GameplayRecommendationElementReliquaryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameplayRecommendationElementReliquaryRequest::InternalSwap(GameplayRecommendationElementReliquaryRequest* other) {
  using std::swap;
  swap(equip_type_, other->equip_type_);
  swap(element_type_, other->element_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameplayRecommendationElementReliquaryRequest::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameplayRecommendationElementReliquaryRequest

// uint32 equip_type = 9;
void GameplayRecommendationElementReliquaryRequest::clear_equip_type() {
  equip_type_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationElementReliquaryRequest::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryRequest.equip_type)
  return equip_type_;
}
void GameplayRecommendationElementReliquaryRequest::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryRequest.equip_type)
}

// uint32 element_type = 12;
void GameplayRecommendationElementReliquaryRequest::clear_element_type() {
  element_type_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationElementReliquaryRequest::element_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryRequest.element_type)
  return element_type_;
}
void GameplayRecommendationElementReliquaryRequest::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryRequest.element_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGameplayRecommendationReq::kAvatarIdFieldNumber;
const int GetGameplayRecommendationReq::kSkillRequestFieldNumber;
const int GetGameplayRecommendationReq::kReliquaryRequestFieldNumber;
const int GetGameplayRecommendationReq::kElementReliquaryRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGameplayRecommendationReq::GetGameplayRecommendationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetGameplayRecommendationReq)
}
GetGameplayRecommendationReq::GetGameplayRecommendationReq(const GetGameplayRecommendationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_id_ = from.avatar_id_;
  clear_has_detail();
  switch (from.detail_case()) {
    case kSkillRequest: {
      mutable_skill_request()->::proto::GameplayRecommendationSkillRequest::MergeFrom(from.skill_request());
      break;
    }
    case kReliquaryRequest: {
      mutable_reliquary_request()->::proto::GameplayRecommendationReliquaryRequest::MergeFrom(from.reliquary_request());
      break;
    }
    case kElementReliquaryRequest: {
      mutable_element_reliquary_request()->::proto::GameplayRecommendationElementReliquaryRequest::MergeFrom(from.element_reliquary_request());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetGameplayRecommendationReq)
}

void GetGameplayRecommendationReq::SharedCtor() {
  avatar_id_ = 0u;
  clear_has_detail();
  _cached_size_ = 0;
}

GetGameplayRecommendationReq::~GetGameplayRecommendationReq() {
  // @@protoc_insertion_point(destructor:proto.GetGameplayRecommendationReq)
  SharedDtor();
}

void GetGameplayRecommendationReq::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void GetGameplayRecommendationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameplayRecommendationReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGameplayRecommendationReq& GetGameplayRecommendationReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGameplayRecommendationReq* GetGameplayRecommendationReq::New(::google::protobuf::Arena* arena) const {
  GetGameplayRecommendationReq* n = new GetGameplayRecommendationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGameplayRecommendationReq::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.GetGameplayRecommendationReq)
  switch (detail_case()) {
    case kSkillRequest: {
      delete detail_.skill_request_;
      break;
    }
    case kReliquaryRequest: {
      delete detail_.reliquary_request_;
      break;
    }
    case kElementReliquaryRequest: {
      delete detail_.element_reliquary_request_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void GetGameplayRecommendationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetGameplayRecommendationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_id_ = 0u;
  clear_detail();
  _internal_metadata_.Clear();
}

bool GetGameplayRecommendationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetGameplayRecommendationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameplayRecommendationSkillRequest skill_request = 553;
      case 553: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 4426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameplayRecommendationElementReliquaryRequest element_reliquary_request = 1489;
      case 1489: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 11914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_element_reliquary_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameplayRecommendationReliquaryRequest reliquary_request = 1993;
      case 1993: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 15946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reliquary_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetGameplayRecommendationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetGameplayRecommendationReq)
  return false;
#undef DO_
}

void GetGameplayRecommendationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetGameplayRecommendationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 9;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->avatar_id(), output);
  }

  // .proto.GameplayRecommendationSkillRequest skill_request = 553;
  if (has_skill_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      553, *detail_.skill_request_, output);
  }

  // .proto.GameplayRecommendationElementReliquaryRequest element_reliquary_request = 1489;
  if (has_element_reliquary_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1489, *detail_.element_reliquary_request_, output);
  }

  // .proto.GameplayRecommendationReliquaryRequest reliquary_request = 1993;
  if (has_reliquary_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1993, *detail_.reliquary_request_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetGameplayRecommendationReq)
}

::google::protobuf::uint8* GetGameplayRecommendationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetGameplayRecommendationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 9;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->avatar_id(), target);
  }

  // .proto.GameplayRecommendationSkillRequest skill_request = 553;
  if (has_skill_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        553, *detail_.skill_request_, deterministic, target);
  }

  // .proto.GameplayRecommendationElementReliquaryRequest element_reliquary_request = 1489;
  if (has_element_reliquary_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1489, *detail_.element_reliquary_request_, deterministic, target);
  }

  // .proto.GameplayRecommendationReliquaryRequest reliquary_request = 1993;
  if (has_reliquary_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1993, *detail_.reliquary_request_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetGameplayRecommendationReq)
  return target;
}

size_t GetGameplayRecommendationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetGameplayRecommendationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 9;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  switch (detail_case()) {
    // .proto.GameplayRecommendationSkillRequest skill_request = 553;
    case kSkillRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.skill_request_);
      break;
    }
    // .proto.GameplayRecommendationReliquaryRequest reliquary_request = 1993;
    case kReliquaryRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reliquary_request_);
      break;
    }
    // .proto.GameplayRecommendationElementReliquaryRequest element_reliquary_request = 1489;
    case kElementReliquaryRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.element_reliquary_request_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGameplayRecommendationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetGameplayRecommendationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGameplayRecommendationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGameplayRecommendationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetGameplayRecommendationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetGameplayRecommendationReq)
    MergeFrom(*source);
  }
}

void GetGameplayRecommendationReq::MergeFrom(const GetGameplayRecommendationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetGameplayRecommendationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  switch (from.detail_case()) {
    case kSkillRequest: {
      mutable_skill_request()->::proto::GameplayRecommendationSkillRequest::MergeFrom(from.skill_request());
      break;
    }
    case kReliquaryRequest: {
      mutable_reliquary_request()->::proto::GameplayRecommendationReliquaryRequest::MergeFrom(from.reliquary_request());
      break;
    }
    case kElementReliquaryRequest: {
      mutable_element_reliquary_request()->::proto::GameplayRecommendationElementReliquaryRequest::MergeFrom(from.element_reliquary_request());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void GetGameplayRecommendationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetGameplayRecommendationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGameplayRecommendationReq::CopyFrom(const GetGameplayRecommendationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetGameplayRecommendationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGameplayRecommendationReq::IsInitialized() const {
  return true;
}

void GetGameplayRecommendationReq::Swap(GetGameplayRecommendationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGameplayRecommendationReq::InternalSwap(GetGameplayRecommendationReq* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGameplayRecommendationReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGameplayRecommendationReq

// uint32 avatar_id = 9;
void GetGameplayRecommendationReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 GetGameplayRecommendationReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.avatar_id)
  return avatar_id_;
}
void GetGameplayRecommendationReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetGameplayRecommendationReq.avatar_id)
}

// .proto.GameplayRecommendationSkillRequest skill_request = 553;
bool GetGameplayRecommendationReq::has_skill_request() const {
  return detail_case() == kSkillRequest;
}
void GetGameplayRecommendationReq::set_has_skill_request() {
  _oneof_case_[0] = kSkillRequest;
}
void GetGameplayRecommendationReq::clear_skill_request() {
  if (has_skill_request()) {
    delete detail_.skill_request_;
    clear_has_detail();
  }
}
 const ::proto::GameplayRecommendationSkillRequest& GetGameplayRecommendationReq::skill_request() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.skill_request)
  return has_skill_request()
      ? *detail_.skill_request_
      : ::proto::GameplayRecommendationSkillRequest::default_instance();
}
::proto::GameplayRecommendationSkillRequest* GetGameplayRecommendationReq::mutable_skill_request() {
  if (!has_skill_request()) {
    clear_detail();
    set_has_skill_request();
    detail_.skill_request_ = new ::proto::GameplayRecommendationSkillRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationReq.skill_request)
  return detail_.skill_request_;
}
::proto::GameplayRecommendationSkillRequest* GetGameplayRecommendationReq::release_skill_request() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationReq.skill_request)
  if (has_skill_request()) {
    clear_has_detail();
    ::proto::GameplayRecommendationSkillRequest* temp = detail_.skill_request_;
    detail_.skill_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetGameplayRecommendationReq::set_allocated_skill_request(::proto::GameplayRecommendationSkillRequest* skill_request) {
  clear_detail();
  if (skill_request) {
    set_has_skill_request();
    detail_.skill_request_ = skill_request;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationReq.skill_request)
}

// .proto.GameplayRecommendationReliquaryRequest reliquary_request = 1993;
bool GetGameplayRecommendationReq::has_reliquary_request() const {
  return detail_case() == kReliquaryRequest;
}
void GetGameplayRecommendationReq::set_has_reliquary_request() {
  _oneof_case_[0] = kReliquaryRequest;
}
void GetGameplayRecommendationReq::clear_reliquary_request() {
  if (has_reliquary_request()) {
    delete detail_.reliquary_request_;
    clear_has_detail();
  }
}
 const ::proto::GameplayRecommendationReliquaryRequest& GetGameplayRecommendationReq::reliquary_request() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.reliquary_request)
  return has_reliquary_request()
      ? *detail_.reliquary_request_
      : ::proto::GameplayRecommendationReliquaryRequest::default_instance();
}
::proto::GameplayRecommendationReliquaryRequest* GetGameplayRecommendationReq::mutable_reliquary_request() {
  if (!has_reliquary_request()) {
    clear_detail();
    set_has_reliquary_request();
    detail_.reliquary_request_ = new ::proto::GameplayRecommendationReliquaryRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationReq.reliquary_request)
  return detail_.reliquary_request_;
}
::proto::GameplayRecommendationReliquaryRequest* GetGameplayRecommendationReq::release_reliquary_request() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationReq.reliquary_request)
  if (has_reliquary_request()) {
    clear_has_detail();
    ::proto::GameplayRecommendationReliquaryRequest* temp = detail_.reliquary_request_;
    detail_.reliquary_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetGameplayRecommendationReq::set_allocated_reliquary_request(::proto::GameplayRecommendationReliquaryRequest* reliquary_request) {
  clear_detail();
  if (reliquary_request) {
    set_has_reliquary_request();
    detail_.reliquary_request_ = reliquary_request;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationReq.reliquary_request)
}

// .proto.GameplayRecommendationElementReliquaryRequest element_reliquary_request = 1489;
bool GetGameplayRecommendationReq::has_element_reliquary_request() const {
  return detail_case() == kElementReliquaryRequest;
}
void GetGameplayRecommendationReq::set_has_element_reliquary_request() {
  _oneof_case_[0] = kElementReliquaryRequest;
}
void GetGameplayRecommendationReq::clear_element_reliquary_request() {
  if (has_element_reliquary_request()) {
    delete detail_.element_reliquary_request_;
    clear_has_detail();
  }
}
 const ::proto::GameplayRecommendationElementReliquaryRequest& GetGameplayRecommendationReq::element_reliquary_request() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationReq.element_reliquary_request)
  return has_element_reliquary_request()
      ? *detail_.element_reliquary_request_
      : ::proto::GameplayRecommendationElementReliquaryRequest::default_instance();
}
::proto::GameplayRecommendationElementReliquaryRequest* GetGameplayRecommendationReq::mutable_element_reliquary_request() {
  if (!has_element_reliquary_request()) {
    clear_detail();
    set_has_element_reliquary_request();
    detail_.element_reliquary_request_ = new ::proto::GameplayRecommendationElementReliquaryRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationReq.element_reliquary_request)
  return detail_.element_reliquary_request_;
}
::proto::GameplayRecommendationElementReliquaryRequest* GetGameplayRecommendationReq::release_element_reliquary_request() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationReq.element_reliquary_request)
  if (has_element_reliquary_request()) {
    clear_has_detail();
    ::proto::GameplayRecommendationElementReliquaryRequest* temp = detail_.element_reliquary_request_;
    detail_.element_reliquary_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetGameplayRecommendationReq::set_allocated_element_reliquary_request(::proto::GameplayRecommendationElementReliquaryRequest* element_reliquary_request) {
  clear_detail();
  if (element_reliquary_request) {
    set_has_element_reliquary_request();
    detail_.element_reliquary_request_ = element_reliquary_request;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationReq.element_reliquary_request)
}

bool GetGameplayRecommendationReq::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void GetGameplayRecommendationReq::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
GetGameplayRecommendationReq::DetailCase GetGameplayRecommendationReq::detail_case() const {
  return GetGameplayRecommendationReq::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameplayRecommendationSkillResponse::kSkillDepotIdFieldNumber;
const int GameplayRecommendationSkillResponse::kSkillIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameplayRecommendationSkillResponse::GameplayRecommendationSkillResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameplayRecommendationSkillResponse)
}
GameplayRecommendationSkillResponse::GameplayRecommendationSkillResponse(const GameplayRecommendationSkillResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      skill_id_list_(from.skill_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skill_depot_id_ = from.skill_depot_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GameplayRecommendationSkillResponse)
}

void GameplayRecommendationSkillResponse::SharedCtor() {
  skill_depot_id_ = 0u;
  _cached_size_ = 0;
}

GameplayRecommendationSkillResponse::~GameplayRecommendationSkillResponse() {
  // @@protoc_insertion_point(destructor:proto.GameplayRecommendationSkillResponse)
  SharedDtor();
}

void GameplayRecommendationSkillResponse::SharedDtor() {
}

void GameplayRecommendationSkillResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameplayRecommendationSkillResponse::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameplayRecommendationSkillResponse& GameplayRecommendationSkillResponse::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameplayRecommendationSkillResponse* GameplayRecommendationSkillResponse::New(::google::protobuf::Arena* arena) const {
  GameplayRecommendationSkillResponse* n = new GameplayRecommendationSkillResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameplayRecommendationSkillResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameplayRecommendationSkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skill_id_list_.Clear();
  skill_depot_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GameplayRecommendationSkillResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameplayRecommendationSkillResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 skill_id_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_skill_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_skill_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_depot_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameplayRecommendationSkillResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameplayRecommendationSkillResponse)
  return false;
#undef DO_
}

void GameplayRecommendationSkillResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameplayRecommendationSkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 skill_id_list = 9;
  if (this->skill_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _skill_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->skill_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->skill_id_list(i), output);
  }

  // uint32 skill_depot_id = 13;
  if (this->skill_depot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->skill_depot_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameplayRecommendationSkillResponse)
}

::google::protobuf::uint8* GameplayRecommendationSkillResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameplayRecommendationSkillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 skill_id_list = 9;
  if (this->skill_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _skill_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->skill_id_list_, target);
  }

  // uint32 skill_depot_id = 13;
  if (this->skill_depot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->skill_depot_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameplayRecommendationSkillResponse)
  return target;
}

size_t GameplayRecommendationSkillResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameplayRecommendationSkillResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 skill_id_list = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->skill_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _skill_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 skill_depot_id = 13;
  if (this->skill_depot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_depot_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameplayRecommendationSkillResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameplayRecommendationSkillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GameplayRecommendationSkillResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameplayRecommendationSkillResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameplayRecommendationSkillResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameplayRecommendationSkillResponse)
    MergeFrom(*source);
  }
}

void GameplayRecommendationSkillResponse::MergeFrom(const GameplayRecommendationSkillResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameplayRecommendationSkillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skill_id_list_.MergeFrom(from.skill_id_list_);
  if (from.skill_depot_id() != 0) {
    set_skill_depot_id(from.skill_depot_id());
  }
}

void GameplayRecommendationSkillResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameplayRecommendationSkillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameplayRecommendationSkillResponse::CopyFrom(const GameplayRecommendationSkillResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameplayRecommendationSkillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameplayRecommendationSkillResponse::IsInitialized() const {
  return true;
}

void GameplayRecommendationSkillResponse::Swap(GameplayRecommendationSkillResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameplayRecommendationSkillResponse::InternalSwap(GameplayRecommendationSkillResponse* other) {
  using std::swap;
  skill_id_list_.InternalSwap(&other->skill_id_list_);
  swap(skill_depot_id_, other->skill_depot_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameplayRecommendationSkillResponse::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameplayRecommendationSkillResponse

// uint32 skill_depot_id = 13;
void GameplayRecommendationSkillResponse::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationSkillResponse::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationSkillResponse.skill_depot_id)
  return skill_depot_id_;
}
void GameplayRecommendationSkillResponse::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationSkillResponse.skill_depot_id)
}

// repeated uint32 skill_id_list = 9;
int GameplayRecommendationSkillResponse::skill_id_list_size() const {
  return skill_id_list_.size();
}
void GameplayRecommendationSkillResponse::clear_skill_id_list() {
  skill_id_list_.Clear();
}
::google::protobuf::uint32 GameplayRecommendationSkillResponse::skill_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationSkillResponse.skill_id_list)
  return skill_id_list_.Get(index);
}
void GameplayRecommendationSkillResponse::set_skill_id_list(int index, ::google::protobuf::uint32 value) {
  skill_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationSkillResponse.skill_id_list)
}
void GameplayRecommendationSkillResponse::add_skill_id_list(::google::protobuf::uint32 value) {
  skill_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GameplayRecommendationSkillResponse.skill_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameplayRecommendationSkillResponse::skill_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GameplayRecommendationSkillResponse.skill_id_list)
  return skill_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameplayRecommendationSkillResponse::mutable_skill_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameplayRecommendationSkillResponse.skill_id_list)
  return &skill_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameplayRecommendationReliquaryMainPropData::kPermillageFieldNumber;
const int GameplayRecommendationReliquaryMainPropData::kMainPropIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameplayRecommendationReliquaryMainPropData::GameplayRecommendationReliquaryMainPropData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameplayRecommendationReliquaryMainPropData)
}
GameplayRecommendationReliquaryMainPropData::GameplayRecommendationReliquaryMainPropData(const GameplayRecommendationReliquaryMainPropData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&permillage_, &from.permillage_,
    static_cast<size_t>(reinterpret_cast<char*>(&main_prop_id_) -
    reinterpret_cast<char*>(&permillage_)) + sizeof(main_prop_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GameplayRecommendationReliquaryMainPropData)
}

void GameplayRecommendationReliquaryMainPropData::SharedCtor() {
  ::memset(&permillage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&main_prop_id_) -
      reinterpret_cast<char*>(&permillage_)) + sizeof(main_prop_id_));
  _cached_size_ = 0;
}

GameplayRecommendationReliquaryMainPropData::~GameplayRecommendationReliquaryMainPropData() {
  // @@protoc_insertion_point(destructor:proto.GameplayRecommendationReliquaryMainPropData)
  SharedDtor();
}

void GameplayRecommendationReliquaryMainPropData::SharedDtor() {
}

void GameplayRecommendationReliquaryMainPropData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameplayRecommendationReliquaryMainPropData::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameplayRecommendationReliquaryMainPropData& GameplayRecommendationReliquaryMainPropData::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameplayRecommendationReliquaryMainPropData* GameplayRecommendationReliquaryMainPropData::New(::google::protobuf::Arena* arena) const {
  GameplayRecommendationReliquaryMainPropData* n = new GameplayRecommendationReliquaryMainPropData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameplayRecommendationReliquaryMainPropData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameplayRecommendationReliquaryMainPropData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&permillage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&main_prop_id_) -
      reinterpret_cast<char*>(&permillage_)) + sizeof(main_prop_id_));
  _internal_metadata_.Clear();
}

bool GameplayRecommendationReliquaryMainPropData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameplayRecommendationReliquaryMainPropData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 permillage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &permillage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 main_prop_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &main_prop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameplayRecommendationReliquaryMainPropData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameplayRecommendationReliquaryMainPropData)
  return false;
#undef DO_
}

void GameplayRecommendationReliquaryMainPropData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameplayRecommendationReliquaryMainPropData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 permillage = 1;
  if (this->permillage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->permillage(), output);
  }

  // uint32 main_prop_id = 12;
  if (this->main_prop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->main_prop_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameplayRecommendationReliquaryMainPropData)
}

::google::protobuf::uint8* GameplayRecommendationReliquaryMainPropData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameplayRecommendationReliquaryMainPropData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 permillage = 1;
  if (this->permillage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->permillage(), target);
  }

  // uint32 main_prop_id = 12;
  if (this->main_prop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->main_prop_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameplayRecommendationReliquaryMainPropData)
  return target;
}

size_t GameplayRecommendationReliquaryMainPropData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameplayRecommendationReliquaryMainPropData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 permillage = 1;
  if (this->permillage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->permillage());
  }

  // uint32 main_prop_id = 12;
  if (this->main_prop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->main_prop_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameplayRecommendationReliquaryMainPropData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameplayRecommendationReliquaryMainPropData)
  GOOGLE_DCHECK_NE(&from, this);
  const GameplayRecommendationReliquaryMainPropData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameplayRecommendationReliquaryMainPropData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameplayRecommendationReliquaryMainPropData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameplayRecommendationReliquaryMainPropData)
    MergeFrom(*source);
  }
}

void GameplayRecommendationReliquaryMainPropData::MergeFrom(const GameplayRecommendationReliquaryMainPropData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameplayRecommendationReliquaryMainPropData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permillage() != 0) {
    set_permillage(from.permillage());
  }
  if (from.main_prop_id() != 0) {
    set_main_prop_id(from.main_prop_id());
  }
}

void GameplayRecommendationReliquaryMainPropData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameplayRecommendationReliquaryMainPropData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameplayRecommendationReliquaryMainPropData::CopyFrom(const GameplayRecommendationReliquaryMainPropData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameplayRecommendationReliquaryMainPropData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameplayRecommendationReliquaryMainPropData::IsInitialized() const {
  return true;
}

void GameplayRecommendationReliquaryMainPropData::Swap(GameplayRecommendationReliquaryMainPropData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameplayRecommendationReliquaryMainPropData::InternalSwap(GameplayRecommendationReliquaryMainPropData* other) {
  using std::swap;
  swap(permillage_, other->permillage_);
  swap(main_prop_id_, other->main_prop_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameplayRecommendationReliquaryMainPropData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameplayRecommendationReliquaryMainPropData

// uint32 permillage = 1;
void GameplayRecommendationReliquaryMainPropData::clear_permillage() {
  permillage_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationReliquaryMainPropData::permillage() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryMainPropData.permillage)
  return permillage_;
}
void GameplayRecommendationReliquaryMainPropData::set_permillage(::google::protobuf::uint32 value) {
  
  permillage_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryMainPropData.permillage)
}

// uint32 main_prop_id = 12;
void GameplayRecommendationReliquaryMainPropData::clear_main_prop_id() {
  main_prop_id_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationReliquaryMainPropData::main_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryMainPropData.main_prop_id)
  return main_prop_id_;
}
void GameplayRecommendationReliquaryMainPropData::set_main_prop_id(::google::protobuf::uint32 value) {
  
  main_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryMainPropData.main_prop_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameplayRecommendationReliquaryResponse::kMainPropDataListFieldNumber;
const int GameplayRecommendationReliquaryResponse::kEquipTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameplayRecommendationReliquaryResponse::GameplayRecommendationReliquaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameplayRecommendationReliquaryResponse)
}
GameplayRecommendationReliquaryResponse::GameplayRecommendationReliquaryResponse(const GameplayRecommendationReliquaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      main_prop_data_list_(from.main_prop_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  equip_type_ = from.equip_type_;
  // @@protoc_insertion_point(copy_constructor:proto.GameplayRecommendationReliquaryResponse)
}

void GameplayRecommendationReliquaryResponse::SharedCtor() {
  equip_type_ = 0u;
  _cached_size_ = 0;
}

GameplayRecommendationReliquaryResponse::~GameplayRecommendationReliquaryResponse() {
  // @@protoc_insertion_point(destructor:proto.GameplayRecommendationReliquaryResponse)
  SharedDtor();
}

void GameplayRecommendationReliquaryResponse::SharedDtor() {
}

void GameplayRecommendationReliquaryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameplayRecommendationReliquaryResponse::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameplayRecommendationReliquaryResponse& GameplayRecommendationReliquaryResponse::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameplayRecommendationReliquaryResponse* GameplayRecommendationReliquaryResponse::New(::google::protobuf::Arena* arena) const {
  GameplayRecommendationReliquaryResponse* n = new GameplayRecommendationReliquaryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameplayRecommendationReliquaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameplayRecommendationReliquaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  main_prop_data_list_.Clear();
  equip_type_ = 0u;
  _internal_metadata_.Clear();
}

bool GameplayRecommendationReliquaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameplayRecommendationReliquaryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 equip_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_main_prop_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameplayRecommendationReliquaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameplayRecommendationReliquaryResponse)
  return false;
#undef DO_
}

void GameplayRecommendationReliquaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameplayRecommendationReliquaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 equip_type = 3;
  if (this->equip_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->equip_type(), output);
  }

  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->main_prop_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->main_prop_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameplayRecommendationReliquaryResponse)
}

::google::protobuf::uint8* GameplayRecommendationReliquaryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameplayRecommendationReliquaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 equip_type = 3;
  if (this->equip_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->equip_type(), target);
  }

  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->main_prop_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->main_prop_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameplayRecommendationReliquaryResponse)
  return target;
}

size_t GameplayRecommendationReliquaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameplayRecommendationReliquaryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->main_prop_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->main_prop_data_list(static_cast<int>(i)));
    }
  }

  // uint32 equip_type = 3;
  if (this->equip_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equip_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameplayRecommendationReliquaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameplayRecommendationReliquaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GameplayRecommendationReliquaryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameplayRecommendationReliquaryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameplayRecommendationReliquaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameplayRecommendationReliquaryResponse)
    MergeFrom(*source);
  }
}

void GameplayRecommendationReliquaryResponse::MergeFrom(const GameplayRecommendationReliquaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameplayRecommendationReliquaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  main_prop_data_list_.MergeFrom(from.main_prop_data_list_);
  if (from.equip_type() != 0) {
    set_equip_type(from.equip_type());
  }
}

void GameplayRecommendationReliquaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameplayRecommendationReliquaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameplayRecommendationReliquaryResponse::CopyFrom(const GameplayRecommendationReliquaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameplayRecommendationReliquaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameplayRecommendationReliquaryResponse::IsInitialized() const {
  return true;
}

void GameplayRecommendationReliquaryResponse::Swap(GameplayRecommendationReliquaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameplayRecommendationReliquaryResponse::InternalSwap(GameplayRecommendationReliquaryResponse* other) {
  using std::swap;
  main_prop_data_list_.InternalSwap(&other->main_prop_data_list_);
  swap(equip_type_, other->equip_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameplayRecommendationReliquaryResponse::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameplayRecommendationReliquaryResponse

// repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 8;
int GameplayRecommendationReliquaryResponse::main_prop_data_list_size() const {
  return main_prop_data_list_.size();
}
void GameplayRecommendationReliquaryResponse::clear_main_prop_data_list() {
  main_prop_data_list_.Clear();
}
const ::proto::GameplayRecommendationReliquaryMainPropData& GameplayRecommendationReliquaryResponse::main_prop_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Get(index);
}
::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationReliquaryResponse::mutable_main_prop_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Mutable(index);
}
::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationReliquaryResponse::add_main_prop_data_list() {
  // @@protoc_insertion_point(field_add:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >*
GameplayRecommendationReliquaryResponse::mutable_main_prop_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return &main_prop_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >&
GameplayRecommendationReliquaryResponse::main_prop_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GameplayRecommendationReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_;
}

// uint32 equip_type = 3;
void GameplayRecommendationReliquaryResponse::clear_equip_type() {
  equip_type_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationReliquaryResponse::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationReliquaryResponse.equip_type)
  return equip_type_;
}
void GameplayRecommendationReliquaryResponse::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationReliquaryResponse.equip_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameplayRecommendationElementReliquaryResponse::kElementTypeFieldNumber;
const int GameplayRecommendationElementReliquaryResponse::kMainPropDataListFieldNumber;
const int GameplayRecommendationElementReliquaryResponse::kEquipTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameplayRecommendationElementReliquaryResponse::GameplayRecommendationElementReliquaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameplayRecommendationElementReliquaryResponse)
}
GameplayRecommendationElementReliquaryResponse::GameplayRecommendationElementReliquaryResponse(const GameplayRecommendationElementReliquaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      main_prop_data_list_(from.main_prop_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&element_type_, &from.element_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&equip_type_) -
    reinterpret_cast<char*>(&element_type_)) + sizeof(equip_type_));
  // @@protoc_insertion_point(copy_constructor:proto.GameplayRecommendationElementReliquaryResponse)
}

void GameplayRecommendationElementReliquaryResponse::SharedCtor() {
  ::memset(&element_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&equip_type_) -
      reinterpret_cast<char*>(&element_type_)) + sizeof(equip_type_));
  _cached_size_ = 0;
}

GameplayRecommendationElementReliquaryResponse::~GameplayRecommendationElementReliquaryResponse() {
  // @@protoc_insertion_point(destructor:proto.GameplayRecommendationElementReliquaryResponse)
  SharedDtor();
}

void GameplayRecommendationElementReliquaryResponse::SharedDtor() {
}

void GameplayRecommendationElementReliquaryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameplayRecommendationElementReliquaryResponse::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameplayRecommendationElementReliquaryResponse& GameplayRecommendationElementReliquaryResponse::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameplayRecommendationElementReliquaryResponse* GameplayRecommendationElementReliquaryResponse::New(::google::protobuf::Arena* arena) const {
  GameplayRecommendationElementReliquaryResponse* n = new GameplayRecommendationElementReliquaryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameplayRecommendationElementReliquaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameplayRecommendationElementReliquaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  main_prop_data_list_.Clear();
  ::memset(&element_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&equip_type_) -
      reinterpret_cast<char*>(&element_type_)) + sizeof(equip_type_));
  _internal_metadata_.Clear();
}

bool GameplayRecommendationElementReliquaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameplayRecommendationElementReliquaryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_main_prop_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 element_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &element_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 equip_type = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameplayRecommendationElementReliquaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameplayRecommendationElementReliquaryResponse)
  return false;
#undef DO_
}

void GameplayRecommendationElementReliquaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameplayRecommendationElementReliquaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->main_prop_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->main_prop_data_list(static_cast<int>(i)), output);
  }

  // uint32 element_type = 11;
  if (this->element_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->element_type(), output);
  }

  // uint32 equip_type = 15;
  if (this->equip_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->equip_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameplayRecommendationElementReliquaryResponse)
}

::google::protobuf::uint8* GameplayRecommendationElementReliquaryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameplayRecommendationElementReliquaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->main_prop_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->main_prop_data_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 element_type = 11;
  if (this->element_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->element_type(), target);
  }

  // uint32 equip_type = 15;
  if (this->equip_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->equip_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameplayRecommendationElementReliquaryResponse)
  return target;
}

size_t GameplayRecommendationElementReliquaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameplayRecommendationElementReliquaryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->main_prop_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->main_prop_data_list(static_cast<int>(i)));
    }
  }

  // uint32 element_type = 11;
  if (this->element_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->element_type());
  }

  // uint32 equip_type = 15;
  if (this->equip_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equip_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameplayRecommendationElementReliquaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameplayRecommendationElementReliquaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GameplayRecommendationElementReliquaryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameplayRecommendationElementReliquaryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameplayRecommendationElementReliquaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameplayRecommendationElementReliquaryResponse)
    MergeFrom(*source);
  }
}

void GameplayRecommendationElementReliquaryResponse::MergeFrom(const GameplayRecommendationElementReliquaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameplayRecommendationElementReliquaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  main_prop_data_list_.MergeFrom(from.main_prop_data_list_);
  if (from.element_type() != 0) {
    set_element_type(from.element_type());
  }
  if (from.equip_type() != 0) {
    set_equip_type(from.equip_type());
  }
}

void GameplayRecommendationElementReliquaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameplayRecommendationElementReliquaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameplayRecommendationElementReliquaryResponse::CopyFrom(const GameplayRecommendationElementReliquaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameplayRecommendationElementReliquaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameplayRecommendationElementReliquaryResponse::IsInitialized() const {
  return true;
}

void GameplayRecommendationElementReliquaryResponse::Swap(GameplayRecommendationElementReliquaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameplayRecommendationElementReliquaryResponse::InternalSwap(GameplayRecommendationElementReliquaryResponse* other) {
  using std::swap;
  main_prop_data_list_.InternalSwap(&other->main_prop_data_list_);
  swap(element_type_, other->element_type_);
  swap(equip_type_, other->equip_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameplayRecommendationElementReliquaryResponse::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameplayRecommendationElementReliquaryResponse

// uint32 element_type = 11;
void GameplayRecommendationElementReliquaryResponse::clear_element_type() {
  element_type_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationElementReliquaryResponse::element_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryResponse.element_type)
  return element_type_;
}
void GameplayRecommendationElementReliquaryResponse::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryResponse.element_type)
}

// repeated .proto.GameplayRecommendationReliquaryMainPropData main_prop_data_list = 5;
int GameplayRecommendationElementReliquaryResponse::main_prop_data_list_size() const {
  return main_prop_data_list_.size();
}
void GameplayRecommendationElementReliquaryResponse::clear_main_prop_data_list() {
  main_prop_data_list_.Clear();
}
const ::proto::GameplayRecommendationReliquaryMainPropData& GameplayRecommendationElementReliquaryResponse::main_prop_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Get(index);
}
::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationElementReliquaryResponse::mutable_main_prop_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Mutable(index);
}
::proto::GameplayRecommendationReliquaryMainPropData* GameplayRecommendationElementReliquaryResponse::add_main_prop_data_list() {
  // @@protoc_insertion_point(field_add:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >*
GameplayRecommendationElementReliquaryResponse::mutable_main_prop_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return &main_prop_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GameplayRecommendationReliquaryMainPropData >&
GameplayRecommendationElementReliquaryResponse::main_prop_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GameplayRecommendationElementReliquaryResponse.main_prop_data_list)
  return main_prop_data_list_;
}

// uint32 equip_type = 15;
void GameplayRecommendationElementReliquaryResponse::clear_equip_type() {
  equip_type_ = 0u;
}
::google::protobuf::uint32 GameplayRecommendationElementReliquaryResponse::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.GameplayRecommendationElementReliquaryResponse.equip_type)
  return equip_type_;
}
void GameplayRecommendationElementReliquaryResponse::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GameplayRecommendationElementReliquaryResponse.equip_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGameplayRecommendationRsp::kRetcodeFieldNumber;
const int GetGameplayRecommendationRsp::kAvatarIdFieldNumber;
const int GetGameplayRecommendationRsp::kSkillResponseFieldNumber;
const int GetGameplayRecommendationRsp::kReliquaryResponseFieldNumber;
const int GetGameplayRecommendationRsp::kElementReliquaryResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGameplayRecommendationRsp::GetGameplayRecommendationRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetGameplayRecommendationRsp)
}
GetGameplayRecommendationRsp::GetGameplayRecommendationRsp(const GetGameplayRecommendationRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_id_));
  clear_has_detail();
  switch (from.detail_case()) {
    case kSkillResponse: {
      mutable_skill_response()->::proto::GameplayRecommendationSkillResponse::MergeFrom(from.skill_response());
      break;
    }
    case kReliquaryResponse: {
      mutable_reliquary_response()->::proto::GameplayRecommendationReliquaryResponse::MergeFrom(from.reliquary_response());
      break;
    }
    case kElementReliquaryResponse: {
      mutable_element_reliquary_response()->::proto::GameplayRecommendationElementReliquaryResponse::MergeFrom(from.element_reliquary_response());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetGameplayRecommendationRsp)
}

void GetGameplayRecommendationRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_id_));
  clear_has_detail();
  _cached_size_ = 0;
}

GetGameplayRecommendationRsp::~GetGameplayRecommendationRsp() {
  // @@protoc_insertion_point(destructor:proto.GetGameplayRecommendationRsp)
  SharedDtor();
}

void GetGameplayRecommendationRsp::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void GetGameplayRecommendationRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameplayRecommendationRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGameplayRecommendationRsp& GetGameplayRecommendationRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGameplayRecommendationRsp* GetGameplayRecommendationRsp::New(::google::protobuf::Arena* arena) const {
  GetGameplayRecommendationRsp* n = new GetGameplayRecommendationRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGameplayRecommendationRsp::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.GetGameplayRecommendationRsp)
  switch (detail_case()) {
    case kSkillResponse: {
      delete detail_.skill_response_;
      break;
    }
    case kReliquaryResponse: {
      delete detail_.reliquary_response_;
      break;
    }
    case kElementReliquaryResponse: {
      delete detail_.element_reliquary_response_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void GetGameplayRecommendationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetGameplayRecommendationRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(avatar_id_));
  clear_detail();
  _internal_metadata_.Clear();
}

bool GetGameplayRecommendationRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetGameplayRecommendationRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameplayRecommendationElementReliquaryResponse element_reliquary_response = 167;
      case 167: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_element_reliquary_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameplayRecommendationReliquaryResponse reliquary_response = 196;
      case 196: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reliquary_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameplayRecommendationSkillResponse skill_response = 1022;
      case 1022: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 8178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetGameplayRecommendationRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetGameplayRecommendationRsp)
  return false;
#undef DO_
}

void GetGameplayRecommendationRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetGameplayRecommendationRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // uint32 avatar_id = 15;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->avatar_id(), output);
  }

  // .proto.GameplayRecommendationElementReliquaryResponse element_reliquary_response = 167;
  if (has_element_reliquary_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      167, *detail_.element_reliquary_response_, output);
  }

  // .proto.GameplayRecommendationReliquaryResponse reliquary_response = 196;
  if (has_reliquary_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      196, *detail_.reliquary_response_, output);
  }

  // .proto.GameplayRecommendationSkillResponse skill_response = 1022;
  if (has_skill_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1022, *detail_.skill_response_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetGameplayRecommendationRsp)
}

::google::protobuf::uint8* GetGameplayRecommendationRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetGameplayRecommendationRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // uint32 avatar_id = 15;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->avatar_id(), target);
  }

  // .proto.GameplayRecommendationElementReliquaryResponse element_reliquary_response = 167;
  if (has_element_reliquary_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        167, *detail_.element_reliquary_response_, deterministic, target);
  }

  // .proto.GameplayRecommendationReliquaryResponse reliquary_response = 196;
  if (has_reliquary_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        196, *detail_.reliquary_response_, deterministic, target);
  }

  // .proto.GameplayRecommendationSkillResponse skill_response = 1022;
  if (has_skill_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1022, *detail_.skill_response_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetGameplayRecommendationRsp)
  return target;
}

size_t GetGameplayRecommendationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetGameplayRecommendationRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 avatar_id = 15;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  switch (detail_case()) {
    // .proto.GameplayRecommendationSkillResponse skill_response = 1022;
    case kSkillResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.skill_response_);
      break;
    }
    // .proto.GameplayRecommendationReliquaryResponse reliquary_response = 196;
    case kReliquaryResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reliquary_response_);
      break;
    }
    // .proto.GameplayRecommendationElementReliquaryResponse element_reliquary_response = 167;
    case kElementReliquaryResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.element_reliquary_response_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGameplayRecommendationRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetGameplayRecommendationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGameplayRecommendationRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGameplayRecommendationRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetGameplayRecommendationRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetGameplayRecommendationRsp)
    MergeFrom(*source);
  }
}

void GetGameplayRecommendationRsp::MergeFrom(const GetGameplayRecommendationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetGameplayRecommendationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  switch (from.detail_case()) {
    case kSkillResponse: {
      mutable_skill_response()->::proto::GameplayRecommendationSkillResponse::MergeFrom(from.skill_response());
      break;
    }
    case kReliquaryResponse: {
      mutable_reliquary_response()->::proto::GameplayRecommendationReliquaryResponse::MergeFrom(from.reliquary_response());
      break;
    }
    case kElementReliquaryResponse: {
      mutable_element_reliquary_response()->::proto::GameplayRecommendationElementReliquaryResponse::MergeFrom(from.element_reliquary_response());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void GetGameplayRecommendationRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetGameplayRecommendationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGameplayRecommendationRsp::CopyFrom(const GetGameplayRecommendationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetGameplayRecommendationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGameplayRecommendationRsp::IsInitialized() const {
  return true;
}

void GetGameplayRecommendationRsp::Swap(GetGameplayRecommendationRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGameplayRecommendationRsp::InternalSwap(GetGameplayRecommendationRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(avatar_id_, other->avatar_id_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGameplayRecommendationRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGameplayRecommendationRsp

// int32 retcode = 6;
void GetGameplayRecommendationRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetGameplayRecommendationRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.retcode)
  return retcode_;
}
void GetGameplayRecommendationRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetGameplayRecommendationRsp.retcode)
}

// uint32 avatar_id = 15;
void GetGameplayRecommendationRsp::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 GetGameplayRecommendationRsp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.avatar_id)
  return avatar_id_;
}
void GetGameplayRecommendationRsp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetGameplayRecommendationRsp.avatar_id)
}

// .proto.GameplayRecommendationSkillResponse skill_response = 1022;
bool GetGameplayRecommendationRsp::has_skill_response() const {
  return detail_case() == kSkillResponse;
}
void GetGameplayRecommendationRsp::set_has_skill_response() {
  _oneof_case_[0] = kSkillResponse;
}
void GetGameplayRecommendationRsp::clear_skill_response() {
  if (has_skill_response()) {
    delete detail_.skill_response_;
    clear_has_detail();
  }
}
 const ::proto::GameplayRecommendationSkillResponse& GetGameplayRecommendationRsp::skill_response() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.skill_response)
  return has_skill_response()
      ? *detail_.skill_response_
      : ::proto::GameplayRecommendationSkillResponse::default_instance();
}
::proto::GameplayRecommendationSkillResponse* GetGameplayRecommendationRsp::mutable_skill_response() {
  if (!has_skill_response()) {
    clear_detail();
    set_has_skill_response();
    detail_.skill_response_ = new ::proto::GameplayRecommendationSkillResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationRsp.skill_response)
  return detail_.skill_response_;
}
::proto::GameplayRecommendationSkillResponse* GetGameplayRecommendationRsp::release_skill_response() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationRsp.skill_response)
  if (has_skill_response()) {
    clear_has_detail();
    ::proto::GameplayRecommendationSkillResponse* temp = detail_.skill_response_;
    detail_.skill_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetGameplayRecommendationRsp::set_allocated_skill_response(::proto::GameplayRecommendationSkillResponse* skill_response) {
  clear_detail();
  if (skill_response) {
    set_has_skill_response();
    detail_.skill_response_ = skill_response;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationRsp.skill_response)
}

// .proto.GameplayRecommendationReliquaryResponse reliquary_response = 196;
bool GetGameplayRecommendationRsp::has_reliquary_response() const {
  return detail_case() == kReliquaryResponse;
}
void GetGameplayRecommendationRsp::set_has_reliquary_response() {
  _oneof_case_[0] = kReliquaryResponse;
}
void GetGameplayRecommendationRsp::clear_reliquary_response() {
  if (has_reliquary_response()) {
    delete detail_.reliquary_response_;
    clear_has_detail();
  }
}
 const ::proto::GameplayRecommendationReliquaryResponse& GetGameplayRecommendationRsp::reliquary_response() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.reliquary_response)
  return has_reliquary_response()
      ? *detail_.reliquary_response_
      : ::proto::GameplayRecommendationReliquaryResponse::default_instance();
}
::proto::GameplayRecommendationReliquaryResponse* GetGameplayRecommendationRsp::mutable_reliquary_response() {
  if (!has_reliquary_response()) {
    clear_detail();
    set_has_reliquary_response();
    detail_.reliquary_response_ = new ::proto::GameplayRecommendationReliquaryResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationRsp.reliquary_response)
  return detail_.reliquary_response_;
}
::proto::GameplayRecommendationReliquaryResponse* GetGameplayRecommendationRsp::release_reliquary_response() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationRsp.reliquary_response)
  if (has_reliquary_response()) {
    clear_has_detail();
    ::proto::GameplayRecommendationReliquaryResponse* temp = detail_.reliquary_response_;
    detail_.reliquary_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetGameplayRecommendationRsp::set_allocated_reliquary_response(::proto::GameplayRecommendationReliquaryResponse* reliquary_response) {
  clear_detail();
  if (reliquary_response) {
    set_has_reliquary_response();
    detail_.reliquary_response_ = reliquary_response;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationRsp.reliquary_response)
}

// .proto.GameplayRecommendationElementReliquaryResponse element_reliquary_response = 167;
bool GetGameplayRecommendationRsp::has_element_reliquary_response() const {
  return detail_case() == kElementReliquaryResponse;
}
void GetGameplayRecommendationRsp::set_has_element_reliquary_response() {
  _oneof_case_[0] = kElementReliquaryResponse;
}
void GetGameplayRecommendationRsp::clear_element_reliquary_response() {
  if (has_element_reliquary_response()) {
    delete detail_.element_reliquary_response_;
    clear_has_detail();
  }
}
 const ::proto::GameplayRecommendationElementReliquaryResponse& GetGameplayRecommendationRsp::element_reliquary_response() const {
  // @@protoc_insertion_point(field_get:proto.GetGameplayRecommendationRsp.element_reliquary_response)
  return has_element_reliquary_response()
      ? *detail_.element_reliquary_response_
      : ::proto::GameplayRecommendationElementReliquaryResponse::default_instance();
}
::proto::GameplayRecommendationElementReliquaryResponse* GetGameplayRecommendationRsp::mutable_element_reliquary_response() {
  if (!has_element_reliquary_response()) {
    clear_detail();
    set_has_element_reliquary_response();
    detail_.element_reliquary_response_ = new ::proto::GameplayRecommendationElementReliquaryResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetGameplayRecommendationRsp.element_reliquary_response)
  return detail_.element_reliquary_response_;
}
::proto::GameplayRecommendationElementReliquaryResponse* GetGameplayRecommendationRsp::release_element_reliquary_response() {
  // @@protoc_insertion_point(field_release:proto.GetGameplayRecommendationRsp.element_reliquary_response)
  if (has_element_reliquary_response()) {
    clear_has_detail();
    ::proto::GameplayRecommendationElementReliquaryResponse* temp = detail_.element_reliquary_response_;
    detail_.element_reliquary_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetGameplayRecommendationRsp::set_allocated_element_reliquary_response(::proto::GameplayRecommendationElementReliquaryResponse* element_reliquary_response) {
  clear_detail();
  if (element_reliquary_response) {
    set_has_element_reliquary_response();
    detail_.element_reliquary_response_ = element_reliquary_response;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetGameplayRecommendationRsp.element_reliquary_response)
}

bool GetGameplayRecommendationRsp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void GetGameplayRecommendationRsp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
GetGameplayRecommendationRsp::DetailCase GetGameplayRecommendationRsp::detail_case() const {
  return GetGameplayRecommendationRsp::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeBackGivingItemReq::kGivingIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeBackGivingItemReq::TakeBackGivingItemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeBackGivingItemReq)
}
TakeBackGivingItemReq::TakeBackGivingItemReq(const TakeBackGivingItemReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  giving_id_ = from.giving_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TakeBackGivingItemReq)
}

void TakeBackGivingItemReq::SharedCtor() {
  giving_id_ = 0u;
  _cached_size_ = 0;
}

TakeBackGivingItemReq::~TakeBackGivingItemReq() {
  // @@protoc_insertion_point(destructor:proto.TakeBackGivingItemReq)
  SharedDtor();
}

void TakeBackGivingItemReq::SharedDtor() {
}

void TakeBackGivingItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeBackGivingItemReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeBackGivingItemReq& TakeBackGivingItemReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeBackGivingItemReq* TakeBackGivingItemReq::New(::google::protobuf::Arena* arena) const {
  TakeBackGivingItemReq* n = new TakeBackGivingItemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeBackGivingItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeBackGivingItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  giving_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TakeBackGivingItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeBackGivingItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 giving_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeBackGivingItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeBackGivingItemReq)
  return false;
#undef DO_
}

void TakeBackGivingItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeBackGivingItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_id = 4;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->giving_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeBackGivingItemReq)
}

::google::protobuf::uint8* TakeBackGivingItemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeBackGivingItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 giving_id = 4;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->giving_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeBackGivingItemReq)
  return target;
}

size_t TakeBackGivingItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeBackGivingItemReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 giving_id = 4;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeBackGivingItemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeBackGivingItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeBackGivingItemReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeBackGivingItemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeBackGivingItemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeBackGivingItemReq)
    MergeFrom(*source);
  }
}

void TakeBackGivingItemReq::MergeFrom(const TakeBackGivingItemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeBackGivingItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
}

void TakeBackGivingItemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeBackGivingItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeBackGivingItemReq::CopyFrom(const TakeBackGivingItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeBackGivingItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeBackGivingItemReq::IsInitialized() const {
  return true;
}

void TakeBackGivingItemReq::Swap(TakeBackGivingItemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeBackGivingItemReq::InternalSwap(TakeBackGivingItemReq* other) {
  using std::swap;
  swap(giving_id_, other->giving_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeBackGivingItemReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeBackGivingItemReq

// uint32 giving_id = 4;
void TakeBackGivingItemReq::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 TakeBackGivingItemReq::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeBackGivingItemReq.giving_id)
  return giving_id_;
}
void TakeBackGivingItemReq::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeBackGivingItemReq.giving_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeBackGivingItemRsp::kGivingIdFieldNumber;
const int TakeBackGivingItemRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeBackGivingItemRsp::TakeBackGivingItemRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeBackGivingItemRsp)
}
TakeBackGivingItemRsp::TakeBackGivingItemRsp(const TakeBackGivingItemRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&giving_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(giving_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeBackGivingItemRsp)
}

void TakeBackGivingItemRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(giving_id_));
  _cached_size_ = 0;
}

TakeBackGivingItemRsp::~TakeBackGivingItemRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeBackGivingItemRsp)
  SharedDtor();
}

void TakeBackGivingItemRsp::SharedDtor() {
}

void TakeBackGivingItemRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeBackGivingItemRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeBackGivingItemRsp& TakeBackGivingItemRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeBackGivingItemRsp* TakeBackGivingItemRsp::New(::google::protobuf::Arena* arena) const {
  TakeBackGivingItemRsp* n = new TakeBackGivingItemRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeBackGivingItemRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeBackGivingItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&giving_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(giving_id_));
  _internal_metadata_.Clear();
}

bool TakeBackGivingItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeBackGivingItemRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 giving_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giving_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeBackGivingItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeBackGivingItemRsp)
  return false;
#undef DO_
}

void TakeBackGivingItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeBackGivingItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // uint32 giving_id = 10;
  if (this->giving_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->giving_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeBackGivingItemRsp)
}

::google::protobuf::uint8* TakeBackGivingItemRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeBackGivingItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // uint32 giving_id = 10;
  if (this->giving_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->giving_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeBackGivingItemRsp)
  return target;
}

size_t TakeBackGivingItemRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeBackGivingItemRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 giving_id = 10;
  if (this->giving_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->giving_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeBackGivingItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeBackGivingItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeBackGivingItemRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeBackGivingItemRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeBackGivingItemRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeBackGivingItemRsp)
    MergeFrom(*source);
  }
}

void TakeBackGivingItemRsp::MergeFrom(const TakeBackGivingItemRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeBackGivingItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.giving_id() != 0) {
    set_giving_id(from.giving_id());
  }
}

void TakeBackGivingItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeBackGivingItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeBackGivingItemRsp::CopyFrom(const TakeBackGivingItemRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeBackGivingItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeBackGivingItemRsp::IsInitialized() const {
  return true;
}

void TakeBackGivingItemRsp::Swap(TakeBackGivingItemRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeBackGivingItemRsp::InternalSwap(TakeBackGivingItemRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(giving_id_, other->giving_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeBackGivingItemRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeBackGivingItemRsp

// uint32 giving_id = 10;
void TakeBackGivingItemRsp::clear_giving_id() {
  giving_id_ = 0u;
}
::google::protobuf::uint32 TakeBackGivingItemRsp::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeBackGivingItemRsp.giving_id)
  return giving_id_;
}
void TakeBackGivingItemRsp::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeBackGivingItemRsp.giving_id)
}

// int32 retcode = 6;
void TakeBackGivingItemRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeBackGivingItemRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeBackGivingItemRsp.retcode)
  return retcode_;
}
void TakeBackGivingItemRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeBackGivingItemRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerNicknameAuditDataNotify::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerNicknameAuditDataNotify::PlayerNicknameAuditDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerNicknameAuditDataNotify)
}
PlayerNicknameAuditDataNotify::PlayerNicknameAuditDataNotify(const PlayerNicknameAuditDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::proto::ContentAuditInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PlayerNicknameAuditDataNotify)
}

void PlayerNicknameAuditDataNotify::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

PlayerNicknameAuditDataNotify::~PlayerNicknameAuditDataNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerNicknameAuditDataNotify)
  SharedDtor();
}

void PlayerNicknameAuditDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void PlayerNicknameAuditDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerNicknameAuditDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerNicknameAuditDataNotify& PlayerNicknameAuditDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerNicknameAuditDataNotify* PlayerNicknameAuditDataNotify::New(::google::protobuf::Arena* arena) const {
  PlayerNicknameAuditDataNotify* n = new PlayerNicknameAuditDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerNicknameAuditDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerNicknameAuditDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool PlayerNicknameAuditDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerNicknameAuditDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ContentAuditInfo info = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerNicknameAuditDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerNicknameAuditDataNotify)
  return false;
#undef DO_
}

void PlayerNicknameAuditDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerNicknameAuditDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ContentAuditInfo info = 13;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerNicknameAuditDataNotify)
}

::google::protobuf::uint8* PlayerNicknameAuditDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerNicknameAuditDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ContentAuditInfo info = 13;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerNicknameAuditDataNotify)
  return target;
}

size_t PlayerNicknameAuditDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerNicknameAuditDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ContentAuditInfo info = 13;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerNicknameAuditDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerNicknameAuditDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerNicknameAuditDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerNicknameAuditDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerNicknameAuditDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerNicknameAuditDataNotify)
    MergeFrom(*source);
  }
}

void PlayerNicknameAuditDataNotify::MergeFrom(const PlayerNicknameAuditDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerNicknameAuditDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::proto::ContentAuditInfo::MergeFrom(from.info());
  }
}

void PlayerNicknameAuditDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerNicknameAuditDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerNicknameAuditDataNotify::CopyFrom(const PlayerNicknameAuditDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerNicknameAuditDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerNicknameAuditDataNotify::IsInitialized() const {
  return true;
}

void PlayerNicknameAuditDataNotify::Swap(PlayerNicknameAuditDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerNicknameAuditDataNotify::InternalSwap(PlayerNicknameAuditDataNotify* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerNicknameAuditDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerNicknameAuditDataNotify

// .proto.ContentAuditInfo info = 13;
bool PlayerNicknameAuditDataNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void PlayerNicknameAuditDataNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::proto::ContentAuditInfo& PlayerNicknameAuditDataNotify::info() const {
  const ::proto::ContentAuditInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.PlayerNicknameAuditDataNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ContentAuditInfo*>(
      &::proto::_ContentAuditInfo_default_instance_);
}
::proto::ContentAuditInfo* PlayerNicknameAuditDataNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::ContentAuditInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerNicknameAuditDataNotify.info)
  return info_;
}
::proto::ContentAuditInfo* PlayerNicknameAuditDataNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerNicknameAuditDataNotify.info)
  
  ::proto::ContentAuditInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void PlayerNicknameAuditDataNotify::set_allocated_info(::proto::ContentAuditInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerNicknameAuditDataNotify.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerNicknameNotify::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerNicknameNotify::PlayerNicknameNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerNicknameNotify)
}
PlayerNicknameNotify::PlayerNicknameNotify(const PlayerNicknameNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.PlayerNicknameNotify)
}

void PlayerNicknameNotify::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PlayerNicknameNotify::~PlayerNicknameNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerNicknameNotify)
  SharedDtor();
}

void PlayerNicknameNotify::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerNicknameNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerNicknameNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerNicknameNotify& PlayerNicknameNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerNicknameNotify* PlayerNicknameNotify::New(::google::protobuf::Arena* arena) const {
  PlayerNicknameNotify* n = new PlayerNicknameNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerNicknameNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerNicknameNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerNicknameNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerNicknameNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nickname = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerNicknameNotify.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerNicknameNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerNicknameNotify)
  return false;
#undef DO_
}

void PlayerNicknameNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerNicknameNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 7;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerNicknameNotify.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->nickname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerNicknameNotify)
}

::google::protobuf::uint8* PlayerNicknameNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerNicknameNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 7;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerNicknameNotify.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->nickname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerNicknameNotify)
  return target;
}

size_t PlayerNicknameNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerNicknameNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 7;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerNicknameNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerNicknameNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerNicknameNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerNicknameNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerNicknameNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerNicknameNotify)
    MergeFrom(*source);
  }
}

void PlayerNicknameNotify::MergeFrom(const PlayerNicknameNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerNicknameNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void PlayerNicknameNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerNicknameNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerNicknameNotify::CopyFrom(const PlayerNicknameNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerNicknameNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerNicknameNotify::IsInitialized() const {
  return true;
}

void PlayerNicknameNotify::Swap(PlayerNicknameNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerNicknameNotify::InternalSwap(PlayerNicknameNotify* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerNicknameNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerNicknameNotify

// string nickname = 7;
void PlayerNicknameNotify::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerNicknameNotify::nickname() const {
  // @@protoc_insertion_point(field_get:proto.PlayerNicknameNotify.nickname)
  return nickname_.GetNoArena();
}
void PlayerNicknameNotify::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerNicknameNotify.nickname)
}
#if LANG_CXX11
void PlayerNicknameNotify::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerNicknameNotify.nickname)
}
#endif
void PlayerNicknameNotify::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerNicknameNotify.nickname)
}
void PlayerNicknameNotify::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerNicknameNotify.nickname)
}
::std::string* PlayerNicknameNotify::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerNicknameNotify.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerNicknameNotify::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.PlayerNicknameNotify.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerNicknameNotify::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerNicknameNotify.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NicknameAuditConfigNotify::kIsOpenFieldNumber;
const int NicknameAuditConfigNotify::kSubmitLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NicknameAuditConfigNotify::NicknameAuditConfigNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NicknameAuditConfigNotify)
}
NicknameAuditConfigNotify::NicknameAuditConfigNotify(const NicknameAuditConfigNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_open_, &from.is_open_,
    static_cast<size_t>(reinterpret_cast<char*>(&submit_limit_) -
    reinterpret_cast<char*>(&is_open_)) + sizeof(submit_limit_));
  // @@protoc_insertion_point(copy_constructor:proto.NicknameAuditConfigNotify)
}

void NicknameAuditConfigNotify::SharedCtor() {
  ::memset(&is_open_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&submit_limit_) -
      reinterpret_cast<char*>(&is_open_)) + sizeof(submit_limit_));
  _cached_size_ = 0;
}

NicknameAuditConfigNotify::~NicknameAuditConfigNotify() {
  // @@protoc_insertion_point(destructor:proto.NicknameAuditConfigNotify)
  SharedDtor();
}

void NicknameAuditConfigNotify::SharedDtor() {
}

void NicknameAuditConfigNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NicknameAuditConfigNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NicknameAuditConfigNotify& NicknameAuditConfigNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

NicknameAuditConfigNotify* NicknameAuditConfigNotify::New(::google::protobuf::Arena* arena) const {
  NicknameAuditConfigNotify* n = new NicknameAuditConfigNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NicknameAuditConfigNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NicknameAuditConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_open_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&submit_limit_) -
      reinterpret_cast<char*>(&is_open_)) + sizeof(submit_limit_));
  _internal_metadata_.Clear();
}

bool NicknameAuditConfigNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NicknameAuditConfigNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_open = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 submit_limit = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &submit_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NicknameAuditConfigNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NicknameAuditConfigNotify)
  return false;
#undef DO_
}

void NicknameAuditConfigNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NicknameAuditConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 8;
  if (this->is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_open(), output);
  }

  // uint32 submit_limit = 12;
  if (this->submit_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->submit_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NicknameAuditConfigNotify)
}

::google::protobuf::uint8* NicknameAuditConfigNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NicknameAuditConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 8;
  if (this->is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_open(), target);
  }

  // uint32 submit_limit = 12;
  if (this->submit_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->submit_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NicknameAuditConfigNotify)
  return target;
}

size_t NicknameAuditConfigNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NicknameAuditConfigNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_open = 8;
  if (this->is_open() != 0) {
    total_size += 1 + 1;
  }

  // uint32 submit_limit = 12;
  if (this->submit_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->submit_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NicknameAuditConfigNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NicknameAuditConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const NicknameAuditConfigNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NicknameAuditConfigNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NicknameAuditConfigNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NicknameAuditConfigNotify)
    MergeFrom(*source);
  }
}

void NicknameAuditConfigNotify::MergeFrom(const NicknameAuditConfigNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NicknameAuditConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_open() != 0) {
    set_is_open(from.is_open());
  }
  if (from.submit_limit() != 0) {
    set_submit_limit(from.submit_limit());
  }
}

void NicknameAuditConfigNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NicknameAuditConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NicknameAuditConfigNotify::CopyFrom(const NicknameAuditConfigNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NicknameAuditConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NicknameAuditConfigNotify::IsInitialized() const {
  return true;
}

void NicknameAuditConfigNotify::Swap(NicknameAuditConfigNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NicknameAuditConfigNotify::InternalSwap(NicknameAuditConfigNotify* other) {
  using std::swap;
  swap(is_open_, other->is_open_);
  swap(submit_limit_, other->submit_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NicknameAuditConfigNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NicknameAuditConfigNotify

// bool is_open = 8;
void NicknameAuditConfigNotify::clear_is_open() {
  is_open_ = false;
}
bool NicknameAuditConfigNotify::is_open() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditConfigNotify.is_open)
  return is_open_;
}
void NicknameAuditConfigNotify::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.NicknameAuditConfigNotify.is_open)
}

// uint32 submit_limit = 12;
void NicknameAuditConfigNotify::clear_submit_limit() {
  submit_limit_ = 0u;
}
::google::protobuf::uint32 NicknameAuditConfigNotify::submit_limit() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditConfigNotify.submit_limit)
  return submit_limit_;
}
void NicknameAuditConfigNotify::set_submit_limit(::google::protobuf::uint32 value) {
  
  submit_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.NicknameAuditConfigNotify.submit_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadNicknameAuditReq::ReadNicknameAuditReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReadNicknameAuditReq)
}
ReadNicknameAuditReq::ReadNicknameAuditReq(const ReadNicknameAuditReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ReadNicknameAuditReq)
}

void ReadNicknameAuditReq::SharedCtor() {
  _cached_size_ = 0;
}

ReadNicknameAuditReq::~ReadNicknameAuditReq() {
  // @@protoc_insertion_point(destructor:proto.ReadNicknameAuditReq)
  SharedDtor();
}

void ReadNicknameAuditReq::SharedDtor() {
}

void ReadNicknameAuditReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadNicknameAuditReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadNicknameAuditReq& ReadNicknameAuditReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadNicknameAuditReq* ReadNicknameAuditReq::New(::google::protobuf::Arena* arena) const {
  ReadNicknameAuditReq* n = new ReadNicknameAuditReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadNicknameAuditReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReadNicknameAuditReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReadNicknameAuditReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReadNicknameAuditReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReadNicknameAuditReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReadNicknameAuditReq)
  return false;
#undef DO_
}

void ReadNicknameAuditReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReadNicknameAuditReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReadNicknameAuditReq)
}

::google::protobuf::uint8* ReadNicknameAuditReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReadNicknameAuditReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReadNicknameAuditReq)
  return target;
}

size_t ReadNicknameAuditReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReadNicknameAuditReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadNicknameAuditReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReadNicknameAuditReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadNicknameAuditReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadNicknameAuditReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReadNicknameAuditReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReadNicknameAuditReq)
    MergeFrom(*source);
  }
}

void ReadNicknameAuditReq::MergeFrom(const ReadNicknameAuditReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReadNicknameAuditReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReadNicknameAuditReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReadNicknameAuditReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadNicknameAuditReq::CopyFrom(const ReadNicknameAuditReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReadNicknameAuditReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadNicknameAuditReq::IsInitialized() const {
  return true;
}

void ReadNicknameAuditReq::Swap(ReadNicknameAuditReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadNicknameAuditReq::InternalSwap(ReadNicknameAuditReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadNicknameAuditReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadNicknameAuditReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadNicknameAuditRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadNicknameAuditRsp::ReadNicknameAuditRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReadNicknameAuditRsp)
}
ReadNicknameAuditRsp::ReadNicknameAuditRsp(const ReadNicknameAuditRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ReadNicknameAuditRsp)
}

void ReadNicknameAuditRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ReadNicknameAuditRsp::~ReadNicknameAuditRsp() {
  // @@protoc_insertion_point(destructor:proto.ReadNicknameAuditRsp)
  SharedDtor();
}

void ReadNicknameAuditRsp::SharedDtor() {
}

void ReadNicknameAuditRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadNicknameAuditRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadNicknameAuditRsp& ReadNicknameAuditRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadNicknameAuditRsp* ReadNicknameAuditRsp::New(::google::protobuf::Arena* arena) const {
  ReadNicknameAuditRsp* n = new ReadNicknameAuditRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadNicknameAuditRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReadNicknameAuditRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ReadNicknameAuditRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReadNicknameAuditRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReadNicknameAuditRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReadNicknameAuditRsp)
  return false;
#undef DO_
}

void ReadNicknameAuditRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReadNicknameAuditRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReadNicknameAuditRsp)
}

::google::protobuf::uint8* ReadNicknameAuditRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReadNicknameAuditRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReadNicknameAuditRsp)
  return target;
}

size_t ReadNicknameAuditRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReadNicknameAuditRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadNicknameAuditRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReadNicknameAuditRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadNicknameAuditRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadNicknameAuditRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReadNicknameAuditRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReadNicknameAuditRsp)
    MergeFrom(*source);
  }
}

void ReadNicknameAuditRsp::MergeFrom(const ReadNicknameAuditRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReadNicknameAuditRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ReadNicknameAuditRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReadNicknameAuditRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadNicknameAuditRsp::CopyFrom(const ReadNicknameAuditRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReadNicknameAuditRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadNicknameAuditRsp::IsInitialized() const {
  return true;
}

void ReadNicknameAuditRsp::Swap(ReadNicknameAuditRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadNicknameAuditRsp::InternalSwap(ReadNicknameAuditRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadNicknameAuditRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadNicknameAuditRsp

// int32 retcode = 12;
void ReadNicknameAuditRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ReadNicknameAuditRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ReadNicknameAuditRsp.retcode)
  return retcode_;
}
void ReadNicknameAuditRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadNicknameAuditRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCompoundMaterialBoostReq::kIsBoostAllFieldNumber;
const int PlayerCompoundMaterialBoostReq::kTargetCompoundGroupIdFieldNumber;
const int PlayerCompoundMaterialBoostReq::kConsumeMaterialIdFieldNumber;
const int PlayerCompoundMaterialBoostReq::kConsumeMaterialCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCompoundMaterialBoostReq::PlayerCompoundMaterialBoostReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCompoundMaterialBoostReq)
}
PlayerCompoundMaterialBoostReq::PlayerCompoundMaterialBoostReq(const PlayerCompoundMaterialBoostReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&consume_material_count_, &from.consume_material_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_compound_group_id_) -
    reinterpret_cast<char*>(&consume_material_count_)) + sizeof(target_compound_group_id_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCompoundMaterialBoostReq)
}

void PlayerCompoundMaterialBoostReq::SharedCtor() {
  ::memset(&consume_material_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_compound_group_id_) -
      reinterpret_cast<char*>(&consume_material_count_)) + sizeof(target_compound_group_id_));
  _cached_size_ = 0;
}

PlayerCompoundMaterialBoostReq::~PlayerCompoundMaterialBoostReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCompoundMaterialBoostReq)
  SharedDtor();
}

void PlayerCompoundMaterialBoostReq::SharedDtor() {
}

void PlayerCompoundMaterialBoostReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCompoundMaterialBoostReq::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCompoundMaterialBoostReq& PlayerCompoundMaterialBoostReq::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCompoundMaterialBoostReq* PlayerCompoundMaterialBoostReq::New(::google::protobuf::Arena* arena) const {
  PlayerCompoundMaterialBoostReq* n = new PlayerCompoundMaterialBoostReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCompoundMaterialBoostReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCompoundMaterialBoostReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&consume_material_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_compound_group_id_) -
      reinterpret_cast<char*>(&consume_material_count_)) + sizeof(target_compound_group_id_));
  _internal_metadata_.Clear();
}

bool PlayerCompoundMaterialBoostReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCompoundMaterialBoostReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 consume_material_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_material_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_boost_all = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_boost_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 consume_material_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_compound_group_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_compound_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCompoundMaterialBoostReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCompoundMaterialBoostReq)
  return false;
#undef DO_
}

void PlayerCompoundMaterialBoostReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCompoundMaterialBoostReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 consume_material_count = 1;
  if (this->consume_material_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->consume_material_count(), output);
  }

  // bool is_boost_all = 8;
  if (this->is_boost_all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_boost_all(), output);
  }

  // uint32 consume_material_id = 9;
  if (this->consume_material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->consume_material_id(), output);
  }

  // uint32 target_compound_group_id = 14;
  if (this->target_compound_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->target_compound_group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCompoundMaterialBoostReq)
}

::google::protobuf::uint8* PlayerCompoundMaterialBoostReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCompoundMaterialBoostReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 consume_material_count = 1;
  if (this->consume_material_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->consume_material_count(), target);
  }

  // bool is_boost_all = 8;
  if (this->is_boost_all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_boost_all(), target);
  }

  // uint32 consume_material_id = 9;
  if (this->consume_material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->consume_material_id(), target);
  }

  // uint32 target_compound_group_id = 14;
  if (this->target_compound_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->target_compound_group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCompoundMaterialBoostReq)
  return target;
}

size_t PlayerCompoundMaterialBoostReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCompoundMaterialBoostReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 consume_material_count = 1;
  if (this->consume_material_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->consume_material_count());
  }

  // bool is_boost_all = 8;
  if (this->is_boost_all() != 0) {
    total_size += 1 + 1;
  }

  // uint32 consume_material_id = 9;
  if (this->consume_material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->consume_material_id());
  }

  // uint32 target_compound_group_id = 14;
  if (this->target_compound_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_compound_group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCompoundMaterialBoostReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCompoundMaterialBoostReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCompoundMaterialBoostReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCompoundMaterialBoostReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCompoundMaterialBoostReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCompoundMaterialBoostReq)
    MergeFrom(*source);
  }
}

void PlayerCompoundMaterialBoostReq::MergeFrom(const PlayerCompoundMaterialBoostReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCompoundMaterialBoostReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.consume_material_count() != 0) {
    set_consume_material_count(from.consume_material_count());
  }
  if (from.is_boost_all() != 0) {
    set_is_boost_all(from.is_boost_all());
  }
  if (from.consume_material_id() != 0) {
    set_consume_material_id(from.consume_material_id());
  }
  if (from.target_compound_group_id() != 0) {
    set_target_compound_group_id(from.target_compound_group_id());
  }
}

void PlayerCompoundMaterialBoostReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCompoundMaterialBoostReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCompoundMaterialBoostReq::CopyFrom(const PlayerCompoundMaterialBoostReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCompoundMaterialBoostReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCompoundMaterialBoostReq::IsInitialized() const {
  return true;
}

void PlayerCompoundMaterialBoostReq::Swap(PlayerCompoundMaterialBoostReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCompoundMaterialBoostReq::InternalSwap(PlayerCompoundMaterialBoostReq* other) {
  using std::swap;
  swap(consume_material_count_, other->consume_material_count_);
  swap(is_boost_all_, other->is_boost_all_);
  swap(consume_material_id_, other->consume_material_id_);
  swap(target_compound_group_id_, other->target_compound_group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCompoundMaterialBoostReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCompoundMaterialBoostReq

// bool is_boost_all = 8;
void PlayerCompoundMaterialBoostReq::clear_is_boost_all() {
  is_boost_all_ = false;
}
bool PlayerCompoundMaterialBoostReq::is_boost_all() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.is_boost_all)
  return is_boost_all_;
}
void PlayerCompoundMaterialBoostReq::set_is_boost_all(bool value) {
  
  is_boost_all_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.is_boost_all)
}

// uint32 target_compound_group_id = 14;
void PlayerCompoundMaterialBoostReq::clear_target_compound_group_id() {
  target_compound_group_id_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialBoostReq::target_compound_group_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.target_compound_group_id)
  return target_compound_group_id_;
}
void PlayerCompoundMaterialBoostReq::set_target_compound_group_id(::google::protobuf::uint32 value) {
  
  target_compound_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.target_compound_group_id)
}

// uint32 consume_material_id = 9;
void PlayerCompoundMaterialBoostReq::clear_consume_material_id() {
  consume_material_id_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialBoostReq::consume_material_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.consume_material_id)
  return consume_material_id_;
}
void PlayerCompoundMaterialBoostReq::set_consume_material_id(::google::protobuf::uint32 value) {
  
  consume_material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.consume_material_id)
}

// uint32 consume_material_count = 1;
void PlayerCompoundMaterialBoostReq::clear_consume_material_count() {
  consume_material_count_ = 0u;
}
::google::protobuf::uint32 PlayerCompoundMaterialBoostReq::consume_material_count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostReq.consume_material_count)
  return consume_material_count_;
}
void PlayerCompoundMaterialBoostReq::set_consume_material_count(::google::protobuf::uint32 value) {
  
  consume_material_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostReq.consume_material_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCompoundMaterialBoostRsp::kTakeItemListFieldNumber;
const int PlayerCompoundMaterialBoostRsp::kTakeStatusFieldNumber;
const int PlayerCompoundMaterialBoostRsp::kRetcodeFieldNumber;
const int PlayerCompoundMaterialBoostRsp::kCompoundQueDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCompoundMaterialBoostRsp::PlayerCompoundMaterialBoostRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCompoundMaterialBoostRsp)
}
PlayerCompoundMaterialBoostRsp::PlayerCompoundMaterialBoostRsp(const PlayerCompoundMaterialBoostRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      compound_que_data_list_(from.compound_que_data_list_),
      take_item_list_(from.take_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&take_status_, &from.take_status_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&take_status_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCompoundMaterialBoostRsp)
}

void PlayerCompoundMaterialBoostRsp::SharedCtor() {
  ::memset(&take_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&take_status_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

PlayerCompoundMaterialBoostRsp::~PlayerCompoundMaterialBoostRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCompoundMaterialBoostRsp)
  SharedDtor();
}

void PlayerCompoundMaterialBoostRsp::SharedDtor() {
}

void PlayerCompoundMaterialBoostRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCompoundMaterialBoostRsp::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCompoundMaterialBoostRsp& PlayerCompoundMaterialBoostRsp::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCompoundMaterialBoostRsp* PlayerCompoundMaterialBoostRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCompoundMaterialBoostRsp* n = new PlayerCompoundMaterialBoostRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCompoundMaterialBoostRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCompoundMaterialBoostRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compound_que_data_list_.Clear();
  take_item_list_.Clear();
  ::memset(&take_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&take_status_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool PlayerCompoundMaterialBoostRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCompoundMaterialBoostRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.CompoundQueueData compound_que_data_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_compound_que_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam take_item_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_take_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CompoundBoostTakeStatusType take_status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_take_status(static_cast< ::proto::CompoundBoostTakeStatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCompoundMaterialBoostRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCompoundMaterialBoostRsp)
  return false;
#undef DO_
}

void PlayerCompoundMaterialBoostRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCompoundMaterialBoostRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CompoundQueueData compound_que_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->compound_que_data_list(static_cast<int>(i)), output);
  }

  // repeated .proto.ItemParam take_item_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->take_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->take_item_list(static_cast<int>(i)), output);
  }

  // .proto.CompoundBoostTakeStatusType take_status = 6;
  if (this->take_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->take_status(), output);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCompoundMaterialBoostRsp)
}

::google::protobuf::uint8* PlayerCompoundMaterialBoostRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCompoundMaterialBoostRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CompoundQueueData compound_que_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compound_que_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->compound_que_data_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ItemParam take_item_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->take_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->take_item_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.CompoundBoostTakeStatusType take_status = 6;
  if (this->take_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->take_status(), target);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCompoundMaterialBoostRsp)
  return target;
}

size_t PlayerCompoundMaterialBoostRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCompoundMaterialBoostRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CompoundQueueData compound_que_data_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->compound_que_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compound_que_data_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.ItemParam take_item_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->take_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->take_item_list(static_cast<int>(i)));
    }
  }

  // .proto.CompoundBoostTakeStatusType take_status = 6;
  if (this->take_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->take_status());
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCompoundMaterialBoostRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCompoundMaterialBoostRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCompoundMaterialBoostRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCompoundMaterialBoostRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCompoundMaterialBoostRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCompoundMaterialBoostRsp)
    MergeFrom(*source);
  }
}

void PlayerCompoundMaterialBoostRsp::MergeFrom(const PlayerCompoundMaterialBoostRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCompoundMaterialBoostRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  compound_que_data_list_.MergeFrom(from.compound_que_data_list_);
  take_item_list_.MergeFrom(from.take_item_list_);
  if (from.take_status() != 0) {
    set_take_status(from.take_status());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerCompoundMaterialBoostRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCompoundMaterialBoostRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCompoundMaterialBoostRsp::CopyFrom(const PlayerCompoundMaterialBoostRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCompoundMaterialBoostRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCompoundMaterialBoostRsp::IsInitialized() const {
  return true;
}

void PlayerCompoundMaterialBoostRsp::Swap(PlayerCompoundMaterialBoostRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCompoundMaterialBoostRsp::InternalSwap(PlayerCompoundMaterialBoostRsp* other) {
  using std::swap;
  compound_que_data_list_.InternalSwap(&other->compound_que_data_list_);
  take_item_list_.InternalSwap(&other->take_item_list_);
  swap(take_status_, other->take_status_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCompoundMaterialBoostRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCompoundMaterialBoostRsp

// repeated .proto.ItemParam take_item_list = 2;
int PlayerCompoundMaterialBoostRsp::take_item_list_size() const {
  return take_item_list_.size();
}
void PlayerCompoundMaterialBoostRsp::clear_take_item_list() {
  take_item_list_.Clear();
}
const ::proto::ItemParam& PlayerCompoundMaterialBoostRsp::take_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_.Get(index);
}
::proto::ItemParam* PlayerCompoundMaterialBoostRsp::mutable_take_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_.Mutable(index);
}
::proto::ItemParam* PlayerCompoundMaterialBoostRsp::add_take_item_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerCompoundMaterialBoostRsp::mutable_take_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return &take_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerCompoundMaterialBoostRsp::take_item_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCompoundMaterialBoostRsp.take_item_list)
  return take_item_list_;
}

// .proto.CompoundBoostTakeStatusType take_status = 6;
void PlayerCompoundMaterialBoostRsp::clear_take_status() {
  take_status_ = 0;
}
::proto::CompoundBoostTakeStatusType PlayerCompoundMaterialBoostRsp::take_status() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.take_status)
  return static_cast< ::proto::CompoundBoostTakeStatusType >(take_status_);
}
void PlayerCompoundMaterialBoostRsp::set_take_status(::proto::CompoundBoostTakeStatusType value) {
  
  take_status_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostRsp.take_status)
}

// int32 retcode = 7;
void PlayerCompoundMaterialBoostRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerCompoundMaterialBoostRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.retcode)
  return retcode_;
}
void PlayerCompoundMaterialBoostRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialBoostRsp.retcode)
}

// repeated .proto.CompoundQueueData compound_que_data_list = 1;
int PlayerCompoundMaterialBoostRsp::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
void PlayerCompoundMaterialBoostRsp::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
const ::proto::CompoundQueueData& PlayerCompoundMaterialBoostRsp::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
::proto::CompoundQueueData* PlayerCompoundMaterialBoostRsp::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
::proto::CompoundQueueData* PlayerCompoundMaterialBoostRsp::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
PlayerCompoundMaterialBoostRsp::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return &compound_que_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
PlayerCompoundMaterialBoostRsp::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerCompoundMaterialBoostRsp.compound_que_data_list)
  return compound_que_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerGameTimeByLuaNotify::kUidFieldNumber;
const int PlayerGameTimeByLuaNotify::kSimSpeedFieldNumber;
const int PlayerGameTimeByLuaNotify::kGameTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerGameTimeByLuaNotify::PlayerGameTimeByLuaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerGameTimeByLuaNotify)
}
PlayerGameTimeByLuaNotify::PlayerGameTimeByLuaNotify(const PlayerGameTimeByLuaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_time_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(game_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerGameTimeByLuaNotify)
}

void PlayerGameTimeByLuaNotify::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_time_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(game_time_));
  _cached_size_ = 0;
}

PlayerGameTimeByLuaNotify::~PlayerGameTimeByLuaNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerGameTimeByLuaNotify)
  SharedDtor();
}

void PlayerGameTimeByLuaNotify::SharedDtor() {
}

void PlayerGameTimeByLuaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerGameTimeByLuaNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerGameTimeByLuaNotify& PlayerGameTimeByLuaNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerGameTimeByLuaNotify* PlayerGameTimeByLuaNotify::New(::google::protobuf::Arena* arena) const {
  PlayerGameTimeByLuaNotify* n = new PlayerGameTimeByLuaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerGameTimeByLuaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerGameTimeByLuaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_time_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(game_time_));
  _internal_metadata_.Clear();
}

bool PlayerGameTimeByLuaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerGameTimeByLuaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sim_speed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sim_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 game_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerGameTimeByLuaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerGameTimeByLuaNotify)
  return false;
#undef DO_
}

void PlayerGameTimeByLuaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerGameTimeByLuaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sim_speed = 9;
  if (this->sim_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->sim_speed(), output);
  }

  // uint32 game_time = 10;
  if (this->game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->game_time(), output);
  }

  // uint32 uid = 13;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerGameTimeByLuaNotify)
}

::google::protobuf::uint8* PlayerGameTimeByLuaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerGameTimeByLuaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sim_speed = 9;
  if (this->sim_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->sim_speed(), target);
  }

  // uint32 game_time = 10;
  if (this->game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->game_time(), target);
  }

  // uint32 uid = 13;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerGameTimeByLuaNotify)
  return target;
}

size_t PlayerGameTimeByLuaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerGameTimeByLuaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 13;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 sim_speed = 9;
  if (this->sim_speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sim_speed());
  }

  // uint32 game_time = 10;
  if (this->game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerGameTimeByLuaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerGameTimeByLuaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerGameTimeByLuaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerGameTimeByLuaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerGameTimeByLuaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerGameTimeByLuaNotify)
    MergeFrom(*source);
  }
}

void PlayerGameTimeByLuaNotify::MergeFrom(const PlayerGameTimeByLuaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerGameTimeByLuaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.sim_speed() != 0) {
    set_sim_speed(from.sim_speed());
  }
  if (from.game_time() != 0) {
    set_game_time(from.game_time());
  }
}

void PlayerGameTimeByLuaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerGameTimeByLuaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerGameTimeByLuaNotify::CopyFrom(const PlayerGameTimeByLuaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerGameTimeByLuaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerGameTimeByLuaNotify::IsInitialized() const {
  return true;
}

void PlayerGameTimeByLuaNotify::Swap(PlayerGameTimeByLuaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerGameTimeByLuaNotify::InternalSwap(PlayerGameTimeByLuaNotify* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(sim_speed_, other->sim_speed_);
  swap(game_time_, other->game_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerGameTimeByLuaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerGameTimeByLuaNotify

// uint32 uid = 13;
void PlayerGameTimeByLuaNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerGameTimeByLuaNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeByLuaNotify.uid)
  return uid_;
}
void PlayerGameTimeByLuaNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeByLuaNotify.uid)
}

// uint32 sim_speed = 9;
void PlayerGameTimeByLuaNotify::clear_sim_speed() {
  sim_speed_ = 0u;
}
::google::protobuf::uint32 PlayerGameTimeByLuaNotify::sim_speed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeByLuaNotify.sim_speed)
  return sim_speed_;
}
void PlayerGameTimeByLuaNotify::set_sim_speed(::google::protobuf::uint32 value) {
  
  sim_speed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeByLuaNotify.sim_speed)
}

// uint32 game_time = 10;
void PlayerGameTimeByLuaNotify::clear_game_time() {
  game_time_ = 0u;
}
::google::protobuf::uint32 PlayerGameTimeByLuaNotify::game_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeByLuaNotify.game_time)
  return game_time_;
}
void PlayerGameTimeByLuaNotify::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeByLuaNotify.game_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerIpRegionNotify::kIpCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerIpRegionNotify::PlayerIpRegionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerIpRegionNotify)
}
PlayerIpRegionNotify::PlayerIpRegionNotify(const PlayerIpRegionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_code().size() > 0) {
    ip_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_code_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.PlayerIpRegionNotify)
}

void PlayerIpRegionNotify::SharedCtor() {
  ip_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PlayerIpRegionNotify::~PlayerIpRegionNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerIpRegionNotify)
  SharedDtor();
}

void PlayerIpRegionNotify::SharedDtor() {
  ip_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerIpRegionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerIpRegionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerIpRegionNotify& PlayerIpRegionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerIpRegionNotify* PlayerIpRegionNotify::New(::google::protobuf::Arena* arena) const {
  PlayerIpRegionNotify* n = new PlayerIpRegionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerIpRegionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerIpRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerIpRegionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerIpRegionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_code = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_code().data(), static_cast<int>(this->ip_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerIpRegionNotify.ip_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerIpRegionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerIpRegionNotify)
  return false;
#undef DO_
}

void PlayerIpRegionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerIpRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_code = 9;
  if (this->ip_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_code().data(), static_cast<int>(this->ip_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerIpRegionNotify.ip_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ip_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerIpRegionNotify)
}

::google::protobuf::uint8* PlayerIpRegionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerIpRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_code = 9;
  if (this->ip_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_code().data(), static_cast<int>(this->ip_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerIpRegionNotify.ip_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ip_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerIpRegionNotify)
  return target;
}

size_t PlayerIpRegionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerIpRegionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_code = 9;
  if (this->ip_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerIpRegionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerIpRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerIpRegionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerIpRegionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerIpRegionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerIpRegionNotify)
    MergeFrom(*source);
  }
}

void PlayerIpRegionNotify::MergeFrom(const PlayerIpRegionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerIpRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_code().size() > 0) {

    ip_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_code_);
  }
}

void PlayerIpRegionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerIpRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerIpRegionNotify::CopyFrom(const PlayerIpRegionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerIpRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerIpRegionNotify::IsInitialized() const {
  return true;
}

void PlayerIpRegionNotify::Swap(PlayerIpRegionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerIpRegionNotify::InternalSwap(PlayerIpRegionNotify* other) {
  using std::swap;
  ip_code_.Swap(&other->ip_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerIpRegionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerIpRegionNotify

// string ip_code = 9;
void PlayerIpRegionNotify::clear_ip_code() {
  ip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerIpRegionNotify::ip_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerIpRegionNotify.ip_code)
  return ip_code_.GetNoArena();
}
void PlayerIpRegionNotify::set_ip_code(const ::std::string& value) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerIpRegionNotify.ip_code)
}
#if LANG_CXX11
void PlayerIpRegionNotify::set_ip_code(::std::string&& value) {
  
  ip_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerIpRegionNotify.ip_code)
}
#endif
void PlayerIpRegionNotify::set_ip_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerIpRegionNotify.ip_code)
}
void PlayerIpRegionNotify::set_ip_code(const char* value, size_t size) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerIpRegionNotify.ip_code)
}
::std::string* PlayerIpRegionNotify::mutable_ip_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerIpRegionNotify.ip_code)
  return ip_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerIpRegionNotify::release_ip_code() {
  // @@protoc_insertion_point(field_release:proto.PlayerIpRegionNotify.ip_code)
  
  return ip_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerIpRegionNotify::set_allocated_ip_code(::std::string* ip_code) {
  if (ip_code != NULL) {
    
  } else {
    
  }
  ip_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_code);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerIpRegionNotify.ip_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
