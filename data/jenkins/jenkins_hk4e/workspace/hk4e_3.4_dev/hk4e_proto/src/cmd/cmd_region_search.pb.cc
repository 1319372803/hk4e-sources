// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_region_search.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_region_search.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class RegionSearchDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegionSearch>
     _instance;
} _RegionSearch_default_instance_;
class RegionSearchInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegionSearchInfo>
     _instance;
} _RegionSearchInfo_default_instance_;
class RegionSearchNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegionSearchNotify>
     _instance;
} _RegionSearchNotify_default_instance_;
class RegionSearchChangeRegionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegionSearchChangeRegionNotify>
     _instance;
} _RegionSearchChangeRegionNotify_default_instance_;
class TakeRegionSearchRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeRegionSearchRewardReq>
     _instance;
} _TakeRegionSearchRewardReq_default_instance_;
class TakeRegionSearchRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TakeRegionSearchRewardRsp>
     _instance;
} _TakeRegionSearchRewardRsp_default_instance_;
class GetRegionSearchReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRegionSearchReq>
     _instance;
} _GetRegionSearchReq_default_instance_;

namespace protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearch, is_entered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearch, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearch, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearch, region_search_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchInfo, region_search_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchInfo, is_entered_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchNotify, region_search_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchNotify, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchChangeRegionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchChangeRegionNotify, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSearchChangeRegionNotify, region_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeRegionSearchRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeRegionSearchRewardReq, search_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeRegionSearchRewardReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeRegionSearchRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeRegionSearchRewardRsp, search_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeRegionSearchRewardRsp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TakeRegionSearchRewardRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionSearchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RegionSearch)},
  { 9, -1, sizeof(RegionSearchInfo)},
  { 17, -1, sizeof(RegionSearchNotify)},
  { 24, -1, sizeof(RegionSearchChangeRegionNotify)},
  { 31, -1, sizeof(TakeRegionSearchRewardReq)},
  { 38, -1, sizeof(TakeRegionSearchRewardRsp)},
  { 46, -1, sizeof(GetRegionSearchReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionSearch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionSearchInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionSearchNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionSearchChangeRegionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeRegionSearchRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TakeRegionSearchRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRegionSearchReq_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_region_search.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _RegionSearch_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegionSearch_default_instance_);_RegionSearchInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegionSearchInfo_default_instance_);_RegionSearchNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegionSearchNotify_default_instance_);_RegionSearchChangeRegionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegionSearchChangeRegionNotify_default_instance_);_TakeRegionSearchRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeRegionSearchRewardReq_default_instance_);_TakeRegionSearchRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TakeRegionSearchRewardRsp_default_instance_);_GetRegionSearchReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRegionSearchReq_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033cmd/cmd_region_search.proto\022\005proto\032\014de"
      "fine.proto\"w\n\014RegionSearch\022\022\n\nis_entered"
      "\030\r \001(\010\022\020\n\010progress\030\005 \001(\r\022\'\n\005state\030\002 \001(\0162"
      "\030.proto.RegionSearchState\022\030\n\020region_sear"
      "ch_id\030\010 \001(\r\"c\n\020RegionSearchInfo\022\n\n\002id\030\005 "
      "\001(\r\022/\n\022region_search_list\030\001 \003(\0132\023.proto."
      "RegionSearch\022\022\n\nis_entered\030\007 \001(\010\"V\n\022Regi"
      "onSearchNotify\0223\n\022region_search_list\030\001 \003"
      "(\0132\027.proto.RegionSearchInfo\022\013\n\003uid\030\010 \001(\r"
      "\"\313\001\n\036RegionSearchChangeRegionNotify\022@\n\005e"
      "vent\030\001 \001(\01621.proto.RegionSearchChangeReg"
      "ionNotify.RegionEvent\022\021\n\tregion_id\030\n \001(\r"
      "\"T\n\013RegionEvent\022\025\n\021REGION_EVENT_NONE\020\000\022\026"
      "\n\022REGION_EVENT_ENTER\020\001\022\026\n\022REGION_EVENT_L"
      "EAVE\020\002\":\n\031TakeRegionSearchRewardReq\022\021\n\ts"
      "earch_id\030\003 \001(\r\022\n\n\002id\030\017 \001(\r\"K\n\031TakeRegion"
      "SearchRewardRsp\022\021\n\tsearch_id\030\016 \001(\r\022\n\n\002id"
      "\030\001 \001(\r\022\017\n\007retcode\030\005 \001(\005\"\024\n\022GetRegionSear"
      "chReqB(Z&github.com/teyvat-helper/hk4e-p"
      "roto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 775);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_region_search.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto

const ::google::protobuf::EnumDescriptor* RegionSearchChangeRegionNotify_RegionEvent_descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_enum_descriptors[0];
}
bool RegionSearchChangeRegionNotify_RegionEvent_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify::REGION_EVENT_NONE;
const RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify::REGION_EVENT_ENTER;
const RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify::REGION_EVENT_LEAVE;
const RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify::RegionEvent_MIN;
const RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify::RegionEvent_MAX;
const int RegionSearchChangeRegionNotify::RegionEvent_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSearch::kIsEnteredFieldNumber;
const int RegionSearch::kProgressFieldNumber;
const int RegionSearch::kStateFieldNumber;
const int RegionSearch::kRegionSearchIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSearch::RegionSearch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegionSearch)
}
RegionSearch::RegionSearch(const RegionSearch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_entered_) -
    reinterpret_cast<char*>(&state_)) + sizeof(is_entered_));
  // @@protoc_insertion_point(copy_constructor:proto.RegionSearch)
}

void RegionSearch::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_entered_) -
      reinterpret_cast<char*>(&state_)) + sizeof(is_entered_));
  _cached_size_ = 0;
}

RegionSearch::~RegionSearch() {
  // @@protoc_insertion_point(destructor:proto.RegionSearch)
  SharedDtor();
}

void RegionSearch::SharedDtor() {
}

void RegionSearch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSearch::descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSearch& RegionSearch::default_instance() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionSearch* RegionSearch::New(::google::protobuf::Arena* arena) const {
  RegionSearch* n = new RegionSearch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSearch::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegionSearch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_entered_) -
      reinterpret_cast<char*>(&state_)) + sizeof(is_entered_));
  _internal_metadata_.Clear();
}

bool RegionSearch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegionSearch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.RegionSearchState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::proto::RegionSearchState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 region_search_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_search_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_entered = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_entered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegionSearch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegionSearch)
  return false;
#undef DO_
}

void RegionSearch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegionSearch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RegionSearchState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // uint32 progress = 5;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->progress(), output);
  }

  // uint32 region_search_id = 8;
  if (this->region_search_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->region_search_id(), output);
  }

  // bool is_entered = 13;
  if (this->is_entered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_entered(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegionSearch)
}

::google::protobuf::uint8* RegionSearch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegionSearch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RegionSearchState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // uint32 progress = 5;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->progress(), target);
  }

  // uint32 region_search_id = 8;
  if (this->region_search_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->region_search_id(), target);
  }

  // bool is_entered = 13;
  if (this->is_entered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_entered(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegionSearch)
  return target;
}

size_t RegionSearch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegionSearch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.RegionSearchState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // uint32 progress = 5;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  // uint32 region_search_id = 8;
  if (this->region_search_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->region_search_id());
  }

  // bool is_entered = 13;
  if (this->is_entered() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSearch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegionSearch)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSearch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSearch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegionSearch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegionSearch)
    MergeFrom(*source);
  }
}

void RegionSearch::MergeFrom(const RegionSearch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegionSearch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
  if (from.region_search_id() != 0) {
    set_region_search_id(from.region_search_id());
  }
  if (from.is_entered() != 0) {
    set_is_entered(from.is_entered());
  }
}

void RegionSearch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegionSearch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSearch::CopyFrom(const RegionSearch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegionSearch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSearch::IsInitialized() const {
  return true;
}

void RegionSearch::Swap(RegionSearch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSearch::InternalSwap(RegionSearch* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(progress_, other->progress_);
  swap(region_search_id_, other->region_search_id_);
  swap(is_entered_, other->is_entered_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSearch::GetMetadata() const {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionSearch

// bool is_entered = 13;
void RegionSearch::clear_is_entered() {
  is_entered_ = false;
}
bool RegionSearch::is_entered() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.is_entered)
  return is_entered_;
}
void RegionSearch::set_is_entered(bool value) {
  
  is_entered_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.is_entered)
}

// uint32 progress = 5;
void RegionSearch::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 RegionSearch::progress() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.progress)
  return progress_;
}
void RegionSearch::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.progress)
}

// .proto.RegionSearchState state = 2;
void RegionSearch::clear_state() {
  state_ = 0;
}
::proto::RegionSearchState RegionSearch::state() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.state)
  return static_cast< ::proto::RegionSearchState >(state_);
}
void RegionSearch::set_state(::proto::RegionSearchState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.state)
}

// uint32 region_search_id = 8;
void RegionSearch::clear_region_search_id() {
  region_search_id_ = 0u;
}
::google::protobuf::uint32 RegionSearch::region_search_id() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearch.region_search_id)
  return region_search_id_;
}
void RegionSearch::set_region_search_id(::google::protobuf::uint32 value) {
  
  region_search_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearch.region_search_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSearchInfo::kIdFieldNumber;
const int RegionSearchInfo::kRegionSearchListFieldNumber;
const int RegionSearchInfo::kIsEnteredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSearchInfo::RegionSearchInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegionSearchInfo)
}
RegionSearchInfo::RegionSearchInfo(const RegionSearchInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      region_search_list_(from.region_search_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_entered_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_entered_));
  // @@protoc_insertion_point(copy_constructor:proto.RegionSearchInfo)
}

void RegionSearchInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_entered_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_entered_));
  _cached_size_ = 0;
}

RegionSearchInfo::~RegionSearchInfo() {
  // @@protoc_insertion_point(destructor:proto.RegionSearchInfo)
  SharedDtor();
}

void RegionSearchInfo::SharedDtor() {
}

void RegionSearchInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSearchInfo::descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSearchInfo& RegionSearchInfo::default_instance() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionSearchInfo* RegionSearchInfo::New(::google::protobuf::Arena* arena) const {
  RegionSearchInfo* n = new RegionSearchInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSearchInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegionSearchInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_search_list_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_entered_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_entered_));
  _internal_metadata_.Clear();
}

bool RegionSearchInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegionSearchInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.RegionSearch region_search_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_region_search_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_entered = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_entered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegionSearchInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegionSearchInfo)
  return false;
#undef DO_
}

void RegionSearchInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegionSearchInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RegionSearch region_search_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_search_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->region_search_list(static_cast<int>(i)), output);
  }

  // uint32 id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->id(), output);
  }

  // bool is_entered = 7;
  if (this->is_entered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_entered(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegionSearchInfo)
}

::google::protobuf::uint8* RegionSearchInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegionSearchInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RegionSearch region_search_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_search_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->region_search_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->id(), target);
  }

  // bool is_entered = 7;
  if (this->is_entered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_entered(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegionSearchInfo)
  return target;
}

size_t RegionSearchInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegionSearchInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.RegionSearch region_search_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->region_search_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->region_search_list(static_cast<int>(i)));
    }
  }

  // uint32 id = 5;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // bool is_entered = 7;
  if (this->is_entered() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSearchInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegionSearchInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSearchInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSearchInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegionSearchInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegionSearchInfo)
    MergeFrom(*source);
  }
}

void RegionSearchInfo::MergeFrom(const RegionSearchInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegionSearchInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  region_search_list_.MergeFrom(from.region_search_list_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.is_entered() != 0) {
    set_is_entered(from.is_entered());
  }
}

void RegionSearchInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegionSearchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSearchInfo::CopyFrom(const RegionSearchInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegionSearchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSearchInfo::IsInitialized() const {
  return true;
}

void RegionSearchInfo::Swap(RegionSearchInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSearchInfo::InternalSwap(RegionSearchInfo* other) {
  using std::swap;
  region_search_list_.InternalSwap(&other->region_search_list_);
  swap(id_, other->id_);
  swap(is_entered_, other->is_entered_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSearchInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionSearchInfo

// uint32 id = 5;
void RegionSearchInfo::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 RegionSearchInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchInfo.id)
  return id_;
}
void RegionSearchInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchInfo.id)
}

// repeated .proto.RegionSearch region_search_list = 1;
int RegionSearchInfo::region_search_list_size() const {
  return region_search_list_.size();
}
void RegionSearchInfo::clear_region_search_list() {
  region_search_list_.Clear();
}
const ::proto::RegionSearch& RegionSearchInfo::region_search_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchInfo.region_search_list)
  return region_search_list_.Get(index);
}
::proto::RegionSearch* RegionSearchInfo::mutable_region_search_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RegionSearchInfo.region_search_list)
  return region_search_list_.Mutable(index);
}
::proto::RegionSearch* RegionSearchInfo::add_region_search_list() {
  // @@protoc_insertion_point(field_add:proto.RegionSearchInfo.region_search_list)
  return region_search_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::RegionSearch >*
RegionSearchInfo::mutable_region_search_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RegionSearchInfo.region_search_list)
  return &region_search_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::RegionSearch >&
RegionSearchInfo::region_search_list() const {
  // @@protoc_insertion_point(field_list:proto.RegionSearchInfo.region_search_list)
  return region_search_list_;
}

// bool is_entered = 7;
void RegionSearchInfo::clear_is_entered() {
  is_entered_ = false;
}
bool RegionSearchInfo::is_entered() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchInfo.is_entered)
  return is_entered_;
}
void RegionSearchInfo::set_is_entered(bool value) {
  
  is_entered_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchInfo.is_entered)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSearchNotify::kRegionSearchListFieldNumber;
const int RegionSearchNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSearchNotify::RegionSearchNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegionSearchNotify)
}
RegionSearchNotify::RegionSearchNotify(const RegionSearchNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      region_search_list_(from.region_search_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.RegionSearchNotify)
}

void RegionSearchNotify::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

RegionSearchNotify::~RegionSearchNotify() {
  // @@protoc_insertion_point(destructor:proto.RegionSearchNotify)
  SharedDtor();
}

void RegionSearchNotify::SharedDtor() {
}

void RegionSearchNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSearchNotify::descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSearchNotify& RegionSearchNotify::default_instance() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionSearchNotify* RegionSearchNotify::New(::google::protobuf::Arena* arena) const {
  RegionSearchNotify* n = new RegionSearchNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSearchNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegionSearchNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_search_list_.Clear();
  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool RegionSearchNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegionSearchNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.RegionSearchInfo region_search_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_region_search_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegionSearchNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegionSearchNotify)
  return false;
#undef DO_
}

void RegionSearchNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegionSearchNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RegionSearchInfo region_search_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_search_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->region_search_list(static_cast<int>(i)), output);
  }

  // uint32 uid = 8;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegionSearchNotify)
}

::google::protobuf::uint8* RegionSearchNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegionSearchNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RegionSearchInfo region_search_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_search_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->region_search_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 uid = 8;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegionSearchNotify)
  return target;
}

size_t RegionSearchNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegionSearchNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.RegionSearchInfo region_search_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->region_search_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->region_search_list(static_cast<int>(i)));
    }
  }

  // uint32 uid = 8;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSearchNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegionSearchNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSearchNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSearchNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegionSearchNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegionSearchNotify)
    MergeFrom(*source);
  }
}

void RegionSearchNotify::MergeFrom(const RegionSearchNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegionSearchNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  region_search_list_.MergeFrom(from.region_search_list_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void RegionSearchNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegionSearchNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSearchNotify::CopyFrom(const RegionSearchNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegionSearchNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSearchNotify::IsInitialized() const {
  return true;
}

void RegionSearchNotify::Swap(RegionSearchNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSearchNotify::InternalSwap(RegionSearchNotify* other) {
  using std::swap;
  region_search_list_.InternalSwap(&other->region_search_list_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSearchNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionSearchNotify

// repeated .proto.RegionSearchInfo region_search_list = 1;
int RegionSearchNotify::region_search_list_size() const {
  return region_search_list_.size();
}
void RegionSearchNotify::clear_region_search_list() {
  region_search_list_.Clear();
}
const ::proto::RegionSearchInfo& RegionSearchNotify::region_search_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchNotify.region_search_list)
  return region_search_list_.Get(index);
}
::proto::RegionSearchInfo* RegionSearchNotify::mutable_region_search_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RegionSearchNotify.region_search_list)
  return region_search_list_.Mutable(index);
}
::proto::RegionSearchInfo* RegionSearchNotify::add_region_search_list() {
  // @@protoc_insertion_point(field_add:proto.RegionSearchNotify.region_search_list)
  return region_search_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::RegionSearchInfo >*
RegionSearchNotify::mutable_region_search_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RegionSearchNotify.region_search_list)
  return &region_search_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::RegionSearchInfo >&
RegionSearchNotify::region_search_list() const {
  // @@protoc_insertion_point(field_list:proto.RegionSearchNotify.region_search_list)
  return region_search_list_;
}

// uint32 uid = 8;
void RegionSearchNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 RegionSearchNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchNotify.uid)
  return uid_;
}
void RegionSearchNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchNotify.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSearchChangeRegionNotify::kEventFieldNumber;
const int RegionSearchChangeRegionNotify::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSearchChangeRegionNotify::RegionSearchChangeRegionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegionSearchChangeRegionNotify)
}
RegionSearchChangeRegionNotify::RegionSearchChangeRegionNotify(const RegionSearchChangeRegionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_, &from.event_,
    static_cast<size_t>(reinterpret_cast<char*>(&region_id_) -
    reinterpret_cast<char*>(&event_)) + sizeof(region_id_));
  // @@protoc_insertion_point(copy_constructor:proto.RegionSearchChangeRegionNotify)
}

void RegionSearchChangeRegionNotify::SharedCtor() {
  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&event_)) + sizeof(region_id_));
  _cached_size_ = 0;
}

RegionSearchChangeRegionNotify::~RegionSearchChangeRegionNotify() {
  // @@protoc_insertion_point(destructor:proto.RegionSearchChangeRegionNotify)
  SharedDtor();
}

void RegionSearchChangeRegionNotify::SharedDtor() {
}

void RegionSearchChangeRegionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSearchChangeRegionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSearchChangeRegionNotify& RegionSearchChangeRegionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionSearchChangeRegionNotify* RegionSearchChangeRegionNotify::New(::google::protobuf::Arena* arena) const {
  RegionSearchChangeRegionNotify* n = new RegionSearchChangeRegionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSearchChangeRegionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegionSearchChangeRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&event_)) + sizeof(region_id_));
  _internal_metadata_.Clear();
}

bool RegionSearchChangeRegionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegionSearchChangeRegionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.RegionSearchChangeRegionNotify.RegionEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event(static_cast< ::proto::RegionSearchChangeRegionNotify_RegionEvent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 region_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegionSearchChangeRegionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegionSearchChangeRegionNotify)
  return false;
#undef DO_
}

void RegionSearchChangeRegionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegionSearchChangeRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RegionSearchChangeRegionNotify.RegionEvent event = 1;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event(), output);
  }

  // uint32 region_id = 10;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->region_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegionSearchChangeRegionNotify)
}

::google::protobuf::uint8* RegionSearchChangeRegionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegionSearchChangeRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RegionSearchChangeRegionNotify.RegionEvent event = 1;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event(), target);
  }

  // uint32 region_id = 10;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->region_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegionSearchChangeRegionNotify)
  return target;
}

size_t RegionSearchChangeRegionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegionSearchChangeRegionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.RegionSearchChangeRegionNotify.RegionEvent event = 1;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }

  // uint32 region_id = 10;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSearchChangeRegionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegionSearchChangeRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSearchChangeRegionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSearchChangeRegionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegionSearchChangeRegionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegionSearchChangeRegionNotify)
    MergeFrom(*source);
  }
}

void RegionSearchChangeRegionNotify::MergeFrom(const RegionSearchChangeRegionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegionSearchChangeRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event() != 0) {
    set_event(from.event());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RegionSearchChangeRegionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegionSearchChangeRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSearchChangeRegionNotify::CopyFrom(const RegionSearchChangeRegionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegionSearchChangeRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSearchChangeRegionNotify::IsInitialized() const {
  return true;
}

void RegionSearchChangeRegionNotify::Swap(RegionSearchChangeRegionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSearchChangeRegionNotify::InternalSwap(RegionSearchChangeRegionNotify* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSearchChangeRegionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionSearchChangeRegionNotify

// .proto.RegionSearchChangeRegionNotify.RegionEvent event = 1;
void RegionSearchChangeRegionNotify::clear_event() {
  event_ = 0;
}
::proto::RegionSearchChangeRegionNotify_RegionEvent RegionSearchChangeRegionNotify::event() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchChangeRegionNotify.event)
  return static_cast< ::proto::RegionSearchChangeRegionNotify_RegionEvent >(event_);
}
void RegionSearchChangeRegionNotify::set_event(::proto::RegionSearchChangeRegionNotify_RegionEvent value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchChangeRegionNotify.event)
}

// uint32 region_id = 10;
void RegionSearchChangeRegionNotify::clear_region_id() {
  region_id_ = 0u;
}
::google::protobuf::uint32 RegionSearchChangeRegionNotify::region_id() const {
  // @@protoc_insertion_point(field_get:proto.RegionSearchChangeRegionNotify.region_id)
  return region_id_;
}
void RegionSearchChangeRegionNotify::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionSearchChangeRegionNotify.region_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeRegionSearchRewardReq::kSearchIdFieldNumber;
const int TakeRegionSearchRewardReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeRegionSearchRewardReq::TakeRegionSearchRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeRegionSearchRewardReq)
}
TakeRegionSearchRewardReq::TakeRegionSearchRewardReq(const TakeRegionSearchRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&search_id_, &from.search_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&search_id_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeRegionSearchRewardReq)
}

void TakeRegionSearchRewardReq::SharedCtor() {
  ::memset(&search_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&search_id_)) + sizeof(id_));
  _cached_size_ = 0;
}

TakeRegionSearchRewardReq::~TakeRegionSearchRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TakeRegionSearchRewardReq)
  SharedDtor();
}

void TakeRegionSearchRewardReq::SharedDtor() {
}

void TakeRegionSearchRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeRegionSearchRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeRegionSearchRewardReq& TakeRegionSearchRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeRegionSearchRewardReq* TakeRegionSearchRewardReq::New(::google::protobuf::Arena* arena) const {
  TakeRegionSearchRewardReq* n = new TakeRegionSearchRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeRegionSearchRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeRegionSearchRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&search_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&search_id_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool TakeRegionSearchRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeRegionSearchRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 search_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &search_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeRegionSearchRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeRegionSearchRewardReq)
  return false;
#undef DO_
}

void TakeRegionSearchRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeRegionSearchRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 search_id = 3;
  if (this->search_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->search_id(), output);
  }

  // uint32 id = 15;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeRegionSearchRewardReq)
}

::google::protobuf::uint8* TakeRegionSearchRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeRegionSearchRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 search_id = 3;
  if (this->search_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->search_id(), target);
  }

  // uint32 id = 15;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeRegionSearchRewardReq)
  return target;
}

size_t TakeRegionSearchRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeRegionSearchRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 search_id = 3;
  if (this->search_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->search_id());
  }

  // uint32 id = 15;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeRegionSearchRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeRegionSearchRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeRegionSearchRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeRegionSearchRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeRegionSearchRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeRegionSearchRewardReq)
    MergeFrom(*source);
  }
}

void TakeRegionSearchRewardReq::MergeFrom(const TakeRegionSearchRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeRegionSearchRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.search_id() != 0) {
    set_search_id(from.search_id());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void TakeRegionSearchRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeRegionSearchRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeRegionSearchRewardReq::CopyFrom(const TakeRegionSearchRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeRegionSearchRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeRegionSearchRewardReq::IsInitialized() const {
  return true;
}

void TakeRegionSearchRewardReq::Swap(TakeRegionSearchRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeRegionSearchRewardReq::InternalSwap(TakeRegionSearchRewardReq* other) {
  using std::swap;
  swap(search_id_, other->search_id_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeRegionSearchRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeRegionSearchRewardReq

// uint32 search_id = 3;
void TakeRegionSearchRewardReq::clear_search_id() {
  search_id_ = 0u;
}
::google::protobuf::uint32 TakeRegionSearchRewardReq::search_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardReq.search_id)
  return search_id_;
}
void TakeRegionSearchRewardReq::set_search_id(::google::protobuf::uint32 value) {
  
  search_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardReq.search_id)
}

// uint32 id = 15;
void TakeRegionSearchRewardReq::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 TakeRegionSearchRewardReq::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardReq.id)
  return id_;
}
void TakeRegionSearchRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeRegionSearchRewardRsp::kSearchIdFieldNumber;
const int TakeRegionSearchRewardRsp::kIdFieldNumber;
const int TakeRegionSearchRewardRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeRegionSearchRewardRsp::TakeRegionSearchRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TakeRegionSearchRewardRsp)
}
TakeRegionSearchRewardRsp::TakeRegionSearchRewardRsp(const TakeRegionSearchRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&search_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(search_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TakeRegionSearchRewardRsp)
}

void TakeRegionSearchRewardRsp::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&search_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(search_id_));
  _cached_size_ = 0;
}

TakeRegionSearchRewardRsp::~TakeRegionSearchRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TakeRegionSearchRewardRsp)
  SharedDtor();
}

void TakeRegionSearchRewardRsp::SharedDtor() {
}

void TakeRegionSearchRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TakeRegionSearchRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeRegionSearchRewardRsp& TakeRegionSearchRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  return *internal_default_instance();
}

TakeRegionSearchRewardRsp* TakeRegionSearchRewardRsp::New(::google::protobuf::Arena* arena) const {
  TakeRegionSearchRewardRsp* n = new TakeRegionSearchRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TakeRegionSearchRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TakeRegionSearchRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&search_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(search_id_));
  _internal_metadata_.Clear();
}

bool TakeRegionSearchRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TakeRegionSearchRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 search_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &search_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TakeRegionSearchRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TakeRegionSearchRewardRsp)
  return false;
#undef DO_
}

void TakeRegionSearchRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TakeRegionSearchRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 search_id = 14;
  if (this->search_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->search_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TakeRegionSearchRewardRsp)
}

::google::protobuf::uint8* TakeRegionSearchRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TakeRegionSearchRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 search_id = 14;
  if (this->search_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->search_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TakeRegionSearchRewardRsp)
  return target;
}

size_t TakeRegionSearchRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TakeRegionSearchRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 search_id = 14;
  if (this->search_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->search_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TakeRegionSearchRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TakeRegionSearchRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeRegionSearchRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeRegionSearchRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TakeRegionSearchRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TakeRegionSearchRewardRsp)
    MergeFrom(*source);
  }
}

void TakeRegionSearchRewardRsp::MergeFrom(const TakeRegionSearchRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TakeRegionSearchRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.search_id() != 0) {
    set_search_id(from.search_id());
  }
}

void TakeRegionSearchRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TakeRegionSearchRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeRegionSearchRewardRsp::CopyFrom(const TakeRegionSearchRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TakeRegionSearchRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeRegionSearchRewardRsp::IsInitialized() const {
  return true;
}

void TakeRegionSearchRewardRsp::Swap(TakeRegionSearchRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeRegionSearchRewardRsp::InternalSwap(TakeRegionSearchRewardRsp* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(retcode_, other->retcode_);
  swap(search_id_, other->search_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TakeRegionSearchRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TakeRegionSearchRewardRsp

// uint32 search_id = 14;
void TakeRegionSearchRewardRsp::clear_search_id() {
  search_id_ = 0u;
}
::google::protobuf::uint32 TakeRegionSearchRewardRsp::search_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardRsp.search_id)
  return search_id_;
}
void TakeRegionSearchRewardRsp::set_search_id(::google::protobuf::uint32 value) {
  
  search_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardRsp.search_id)
}

// uint32 id = 1;
void TakeRegionSearchRewardRsp::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 TakeRegionSearchRewardRsp::id() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardRsp.id)
  return id_;
}
void TakeRegionSearchRewardRsp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardRsp.id)
}

// int32 retcode = 5;
void TakeRegionSearchRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TakeRegionSearchRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeRegionSearchRewardRsp.retcode)
  return retcode_;
}
void TakeRegionSearchRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeRegionSearchRewardRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionSearchReq::GetRegionSearchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetRegionSearchReq)
}
GetRegionSearchReq::GetRegionSearchReq(const GetRegionSearchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetRegionSearchReq)
}

void GetRegionSearchReq::SharedCtor() {
  _cached_size_ = 0;
}

GetRegionSearchReq::~GetRegionSearchReq() {
  // @@protoc_insertion_point(destructor:proto.GetRegionSearchReq)
  SharedDtor();
}

void GetRegionSearchReq::SharedDtor() {
}

void GetRegionSearchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRegionSearchReq::descriptor() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRegionSearchReq& GetRegionSearchReq::default_instance() {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRegionSearchReq* GetRegionSearchReq::New(::google::protobuf::Arena* arena) const {
  GetRegionSearchReq* n = new GetRegionSearchReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRegionSearchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetRegionSearchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetRegionSearchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetRegionSearchReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetRegionSearchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetRegionSearchReq)
  return false;
#undef DO_
}

void GetRegionSearchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetRegionSearchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetRegionSearchReq)
}

::google::protobuf::uint8* GetRegionSearchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetRegionSearchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetRegionSearchReq)
  return target;
}

size_t GetRegionSearchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetRegionSearchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRegionSearchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetRegionSearchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRegionSearchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionSearchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetRegionSearchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetRegionSearchReq)
    MergeFrom(*source);
  }
}

void GetRegionSearchReq::MergeFrom(const GetRegionSearchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetRegionSearchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetRegionSearchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetRegionSearchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionSearchReq::CopyFrom(const GetRegionSearchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetRegionSearchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRegionSearchReq::IsInitialized() const {
  return true;
}

void GetRegionSearchReq::Swap(GetRegionSearchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionSearchReq::InternalSwap(GetRegionSearchReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRegionSearchReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fregion_5fsearch_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRegionSearchReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
