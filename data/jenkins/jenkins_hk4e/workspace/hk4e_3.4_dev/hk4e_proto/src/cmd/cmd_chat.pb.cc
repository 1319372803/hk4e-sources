// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_chat.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_chat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class PrivateChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PrivateChatReq>
     _instance;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 icon_;
} _PrivateChatReq_default_instance_;
class PrivateChatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PrivateChatRsp>
     _instance;
} _PrivateChatRsp_default_instance_;
class PrivateChatNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PrivateChatNotify>
     _instance;
} _PrivateChatNotify_default_instance_;
class PullPrivateChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PullPrivateChatReq>
     _instance;
} _PullPrivateChatReq_default_instance_;
class PullPrivateChatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PullPrivateChatRsp>
     _instance;
} _PullPrivateChatRsp_default_instance_;
class PullRecentChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PullRecentChatReq>
     _instance;
} _PullRecentChatReq_default_instance_;
class PullRecentChatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PullRecentChatRsp>
     _instance;
} _PullRecentChatRsp_default_instance_;
class ReadPrivateChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReadPrivateChatReq>
     _instance;
} _ReadPrivateChatReq_default_instance_;
class ReadPrivateChatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReadPrivateChatRsp>
     _instance;
} _ReadPrivateChatRsp_default_instance_;
class ChatChannelUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatChannelUpdateNotify>
     _instance;
} _ChatChannelUpdateNotify_default_instance_;
class ChatChannelInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatChannelInfo>
     _instance;
} _ChatChannelInfo_default_instance_;
class ChatChannelDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatChannelDataNotify>
     _instance;
} _ChatChannelDataNotify_default_instance_;
class ChatChannelShieldNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatChannelShieldNotify>
     _instance;
} _ChatChannelShieldNotify_default_instance_;
class ChatChannelInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatChannelInfoNotify>
     _instance;
} _ChatChannelInfoNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fchat_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatReq, target_uid_),
  offsetof(PrivateChatReqDefaultTypeInternal, text_),
  offsetof(PrivateChatReqDefaultTypeInternal, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatReq, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatRsp, chat_forbidden_endtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateChatNotify, chat_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullPrivateChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullPrivateChatReq, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullPrivateChatReq, pull_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullPrivateChatReq, from_sequence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullPrivateChatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullPrivateChatRsp, chat_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullPrivateChatRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRecentChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRecentChatReq, pull_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRecentChatReq, begin_sequence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRecentChatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRecentChatRsp, chat_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullRecentChatRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadPrivateChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadPrivateChatReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadPrivateChatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadPrivateChatRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelUpdateNotify, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelUpdateNotify, is_create_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelUpdateNotify, channel_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelInfo, is_shield_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelInfo, channel_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelDataNotify, channel_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelDataNotify, channel_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelShieldNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelShieldNotify, is_shield_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelShieldNotify, channel_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatChannelInfoNotify, channel_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PrivateChatReq)},
  { 9, -1, sizeof(PrivateChatRsp)},
  { 16, -1, sizeof(PrivateChatNotify)},
  { 22, -1, sizeof(PullPrivateChatReq)},
  { 30, -1, sizeof(PullPrivateChatRsp)},
  { 37, -1, sizeof(PullRecentChatReq)},
  { 44, -1, sizeof(PullRecentChatRsp)},
  { 51, -1, sizeof(ReadPrivateChatReq)},
  { 57, -1, sizeof(ReadPrivateChatRsp)},
  { 63, -1, sizeof(ChatChannelUpdateNotify)},
  { 71, -1, sizeof(ChatChannelInfo)},
  { 78, -1, sizeof(ChatChannelDataNotify)},
  { 85, -1, sizeof(ChatChannelShieldNotify)},
  { 92, -1, sizeof(ChatChannelInfoNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PrivateChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PrivateChatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PrivateChatNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PullPrivateChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PullPrivateChatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PullRecentChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PullRecentChatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadPrivateChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadPrivateChatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatChannelUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatChannelInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatChannelDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatChannelShieldNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatChannelInfoNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_chat.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  ::proto::protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  _PrivateChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PrivateChatReq_default_instance_);_PrivateChatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PrivateChatRsp_default_instance_);_PrivateChatNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PrivateChatNotify_default_instance_);_PullPrivateChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PullPrivateChatReq_default_instance_);_PullPrivateChatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PullPrivateChatRsp_default_instance_);_PullRecentChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PullRecentChatReq_default_instance_);_PullRecentChatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PullRecentChatRsp_default_instance_);_ReadPrivateChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReadPrivateChatReq_default_instance_);_ReadPrivateChatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReadPrivateChatRsp_default_instance_);_ChatChannelUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatChannelUpdateNotify_default_instance_);_ChatChannelInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatChannelInfo_default_instance_);_ChatChannelDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatChannelDataNotify_default_instance_);_ChatChannelShieldNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatChannelShieldNotify_default_instance_);_ChatChannelInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatChannelInfoNotify_default_instance_);_PrivateChatReq_default_instance_.text_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _PrivateChatReq_default_instance_.icon_ = 0u;
  _PrivateChatNotify_default_instance_._instance.get_mutable()->chat_info_ = const_cast< ::proto::ChatInfo*>(
      ::proto::ChatInfo::internal_default_instance());
  _ChatChannelUpdateNotify_default_instance_._instance.get_mutable()->channel_info_ = const_cast< ::proto::ChatChannelInfo*>(
      ::proto::ChatChannelInfo::internal_default_instance());
  _ChatChannelInfoNotify_default_instance_._instance.get_mutable()->channel_info_ = const_cast< ::proto::ChatChannelInfo*>(
      ::proto::ChatChannelInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022cmd/cmd_chat.proto\022\005proto\032\014define.prot"
      "o\032\023cmd/cmd_scene.proto\"O\n\016PrivateChatReq"
      "\022\022\n\ntarget_uid\030\007 \001(\r\022\016\n\004text\030\003 \001(\tH\000\022\016\n\004"
      "icon\030\004 \001(\rH\000B\t\n\007content\"A\n\016PrivateChatRs"
      "p\022\036\n\026chat_forbidden_endtime\030\014 \001(\r\022\017\n\007ret"
      "code\030\016 \001(\005\"7\n\021PrivateChatNotify\022\"\n\tchat_"
      "info\030\007 \001(\0132\017.proto.ChatInfo\"Q\n\022PullPriva"
      "teChatReq\022\022\n\ntarget_uid\030\005 \001(\r\022\020\n\010pull_nu"
      "m\030\007 \001(\r\022\025\n\rfrom_sequence\030\014 \001(\r\"I\n\022PullPr"
      "ivateChatRsp\022\"\n\tchat_info\030\017 \003(\0132\017.proto."
      "ChatInfo\022\017\n\007retcode\030\013 \001(\005\"=\n\021PullRecentC"
      "hatReq\022\020\n\010pull_num\030\006 \001(\r\022\026\n\016begin_sequen"
      "ce\030\017 \001(\r\"H\n\021PullRecentChatRsp\022\"\n\tchat_in"
      "fo\030\017 \003(\0132\017.proto.ChatInfo\022\017\n\007retcode\030\003 \001"
      "(\005\"(\n\022ReadPrivateChatReq\022\022\n\ntarget_uid\030\001"
      " \001(\r\"%\n\022ReadPrivateChatRsp\022\017\n\007retcode\030\001 "
      "\001(\005\"n\n\027ChatChannelUpdateNotify\022\022\n\nchanne"
      "l_id\030\003 \001(\r\022\021\n\tis_create\030\017 \001(\010\022,\n\014channel"
      "_info\030\016 \001(\0132\026.proto.ChatChannelInfo\"8\n\017C"
      "hatChannelInfo\022\021\n\tis_shield\030\017 \001(\010\022\022\n\ncha"
      "nnel_id\030\010 \001(\r\"`\n\025ChatChannelDataNotify\022\024"
      "\n\014channel_list\030\003 \003(\r\0221\n\021channel_info_lis"
      "t\030\007 \003(\0132\026.proto.ChatChannelInfo\"@\n\027ChatC"
      "hannelShieldNotify\022\021\n\tis_shield\030\005 \001(\010\022\022\n"
      "\nchannel_id\030\016 \001(\r\"E\n\025ChatChannelInfoNoti"
      "fy\022,\n\014channel_info\030\002 \001(\0132\026.proto.ChatCha"
      "nnelInfoB(Z&github.com/teyvat-helper/hk4"
      "e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1098);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_chat.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
  ::proto::protobuf_cmd_2fcmd_5fscene_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fchat_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateChatReq::kTargetUidFieldNumber;
const int PrivateChatReq::kTextFieldNumber;
const int PrivateChatReq::kIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateChatReq::PrivateChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PrivateChatReq)
}
PrivateChatReq::PrivateChatReq(const PrivateChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  clear_has_content();
  switch (from.content_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kIcon: {
      set_icon(from.icon());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.PrivateChatReq)
}

void PrivateChatReq::SharedCtor() {
  target_uid_ = 0u;
  clear_has_content();
  _cached_size_ = 0;
}

PrivateChatReq::~PrivateChatReq() {
  // @@protoc_insertion_point(destructor:proto.PrivateChatReq)
  SharedDtor();
}

void PrivateChatReq::SharedDtor() {
  if (has_content()) {
    clear_content();
  }
}

void PrivateChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrivateChatReq::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrivateChatReq& PrivateChatReq::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrivateChatReq* PrivateChatReq::New(::google::protobuf::Arena* arena) const {
  PrivateChatReq* n = new PrivateChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrivateChatReq::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:proto.PrivateChatReq)
  switch (content_case()) {
    case kText: {
      content_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIcon: {
      // No need to clear
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void PrivateChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  clear_content();
  _internal_metadata_.Clear();
}

bool PrivateChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PrivateChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PrivateChatReq.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_.icon_)));
          set_has_icon();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PrivateChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PrivateChatReq)
  return false;
#undef DO_
}

void PrivateChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PrivateChatReq.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // uint32 icon = 4;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->icon(), output);
  }

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PrivateChatReq)
}

::google::protobuf::uint8* PrivateChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PrivateChatReq.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // uint32 icon = 4;
  if (has_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->icon(), target);
  }

  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PrivateChatReq)
  return target;
}

size_t PrivateChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PrivateChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 7;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  switch (content_case()) {
    // string text = 3;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
      break;
    }
    // uint32 icon = 4;
    case kIcon: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->icon());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrivateChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrivateChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PrivateChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PrivateChatReq)
    MergeFrom(*source);
  }
}

void PrivateChatReq::MergeFrom(const PrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  switch (from.content_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kIcon: {
      set_icon(from.icon());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void PrivateChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateChatReq::CopyFrom(const PrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateChatReq::IsInitialized() const {
  return true;
}

void PrivateChatReq::Swap(PrivateChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateChatReq::InternalSwap(PrivateChatReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrivateChatReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrivateChatReq

// uint32 target_uid = 7;
void PrivateChatReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PrivateChatReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatReq.target_uid)
  return target_uid_;
}
void PrivateChatReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.target_uid)
}

// string text = 3;
bool PrivateChatReq::has_text() const {
  return content_case() == kText;
}
void PrivateChatReq::set_has_text() {
  _oneof_case_[0] = kText;
}
void PrivateChatReq::clear_text() {
  if (has_text()) {
    content_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
const ::std::string& PrivateChatReq::text() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatReq.text)
  if (has_text()) {
    return content_.text_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void PrivateChatReq::set_text(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.text)
}
#if LANG_CXX11
void PrivateChatReq::set_text(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PrivateChatReq.text)
}
#endif
void PrivateChatReq::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PrivateChatReq.text)
}
void PrivateChatReq::set_text(const char* value, size_t size) {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PrivateChatReq.text)
}
::std::string* PrivateChatReq::mutable_text() {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.PrivateChatReq.text)
  return content_.text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateChatReq::release_text() {
  // @@protoc_insertion_point(field_release:proto.PrivateChatReq.text)
  if (has_text()) {
    clear_has_content();
    return content_.text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void PrivateChatReq::set_allocated_text(::std::string* text) {
  if (!has_text()) {
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (text != NULL) {
    set_has_text();
    content_.text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        text);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PrivateChatReq.text)
}

// uint32 icon = 4;
bool PrivateChatReq::has_icon() const {
  return content_case() == kIcon;
}
void PrivateChatReq::set_has_icon() {
  _oneof_case_[0] = kIcon;
}
void PrivateChatReq::clear_icon() {
  if (has_icon()) {
    content_.icon_ = 0u;
    clear_has_content();
  }
}
::google::protobuf::uint32 PrivateChatReq::icon() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatReq.icon)
  if (has_icon()) {
    return content_.icon_;
  }
  return 0u;
}
void PrivateChatReq::set_icon(::google::protobuf::uint32 value) {
  if (!has_icon()) {
    clear_content();
    set_has_icon();
  }
  content_.icon_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatReq.icon)
}

bool PrivateChatReq::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
void PrivateChatReq::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
PrivateChatReq::ContentCase PrivateChatReq::content_case() const {
  return PrivateChatReq::ContentCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateChatRsp::kChatForbiddenEndtimeFieldNumber;
const int PrivateChatRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateChatRsp::PrivateChatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PrivateChatRsp)
}
PrivateChatRsp::PrivateChatRsp(const PrivateChatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chat_forbidden_endtime_, &from.chat_forbidden_endtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&chat_forbidden_endtime_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.PrivateChatRsp)
}

void PrivateChatRsp::SharedCtor() {
  ::memset(&chat_forbidden_endtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&chat_forbidden_endtime_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

PrivateChatRsp::~PrivateChatRsp() {
  // @@protoc_insertion_point(destructor:proto.PrivateChatRsp)
  SharedDtor();
}

void PrivateChatRsp::SharedDtor() {
}

void PrivateChatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrivateChatRsp::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrivateChatRsp& PrivateChatRsp::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrivateChatRsp* PrivateChatRsp::New(::google::protobuf::Arena* arena) const {
  PrivateChatRsp* n = new PrivateChatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrivateChatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&chat_forbidden_endtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&chat_forbidden_endtime_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool PrivateChatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PrivateChatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 chat_forbidden_endtime = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chat_forbidden_endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PrivateChatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PrivateChatRsp)
  return false;
#undef DO_
}

void PrivateChatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chat_forbidden_endtime = 12;
  if (this->chat_forbidden_endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->chat_forbidden_endtime(), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PrivateChatRsp)
}

::google::protobuf::uint8* PrivateChatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chat_forbidden_endtime = 12;
  if (this->chat_forbidden_endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->chat_forbidden_endtime(), target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PrivateChatRsp)
  return target;
}

size_t PrivateChatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PrivateChatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 chat_forbidden_endtime = 12;
  if (this->chat_forbidden_endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chat_forbidden_endtime());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrivateChatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateChatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrivateChatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PrivateChatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PrivateChatRsp)
    MergeFrom(*source);
  }
}

void PrivateChatRsp::MergeFrom(const PrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chat_forbidden_endtime() != 0) {
    set_chat_forbidden_endtime(from.chat_forbidden_endtime());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PrivateChatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateChatRsp::CopyFrom(const PrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateChatRsp::IsInitialized() const {
  return true;
}

void PrivateChatRsp::Swap(PrivateChatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateChatRsp::InternalSwap(PrivateChatRsp* other) {
  using std::swap;
  swap(chat_forbidden_endtime_, other->chat_forbidden_endtime_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrivateChatRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrivateChatRsp

// uint32 chat_forbidden_endtime = 12;
void PrivateChatRsp::clear_chat_forbidden_endtime() {
  chat_forbidden_endtime_ = 0u;
}
::google::protobuf::uint32 PrivateChatRsp::chat_forbidden_endtime() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatRsp.chat_forbidden_endtime)
  return chat_forbidden_endtime_;
}
void PrivateChatRsp::set_chat_forbidden_endtime(::google::protobuf::uint32 value) {
  
  chat_forbidden_endtime_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatRsp.chat_forbidden_endtime)
}

// int32 retcode = 14;
void PrivateChatRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PrivateChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PrivateChatRsp.retcode)
  return retcode_;
}
void PrivateChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PrivateChatRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateChatNotify::kChatInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateChatNotify::PrivateChatNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PrivateChatNotify)
}
PrivateChatNotify::PrivateChatNotify(const PrivateChatNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chat_info()) {
    chat_info_ = new ::proto::ChatInfo(*from.chat_info_);
  } else {
    chat_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PrivateChatNotify)
}

void PrivateChatNotify::SharedCtor() {
  chat_info_ = NULL;
  _cached_size_ = 0;
}

PrivateChatNotify::~PrivateChatNotify() {
  // @@protoc_insertion_point(destructor:proto.PrivateChatNotify)
  SharedDtor();
}

void PrivateChatNotify::SharedDtor() {
  if (this != internal_default_instance()) delete chat_info_;
}

void PrivateChatNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrivateChatNotify::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrivateChatNotify& PrivateChatNotify::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrivateChatNotify* PrivateChatNotify::New(::google::protobuf::Arena* arena) const {
  PrivateChatNotify* n = new PrivateChatNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrivateChatNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PrivateChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) {
    delete chat_info_;
  }
  chat_info_ = NULL;
  _internal_metadata_.Clear();
}

bool PrivateChatNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PrivateChatNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ChatInfo chat_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chat_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PrivateChatNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PrivateChatNotify)
  return false;
#undef DO_
}

void PrivateChatNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PrivateChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatInfo chat_info = 7;
  if (this->has_chat_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->chat_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PrivateChatNotify)
}

::google::protobuf::uint8* PrivateChatNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PrivateChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatInfo chat_info = 7;
  if (this->has_chat_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->chat_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PrivateChatNotify)
  return target;
}

size_t PrivateChatNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PrivateChatNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatInfo chat_info = 7;
  if (this->has_chat_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chat_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrivateChatNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PrivateChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateChatNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrivateChatNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PrivateChatNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PrivateChatNotify)
    MergeFrom(*source);
  }
}

void PrivateChatNotify::MergeFrom(const PrivateChatNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PrivateChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_info()) {
    mutable_chat_info()->::proto::ChatInfo::MergeFrom(from.chat_info());
  }
}

void PrivateChatNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PrivateChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateChatNotify::CopyFrom(const PrivateChatNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PrivateChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateChatNotify::IsInitialized() const {
  return true;
}

void PrivateChatNotify::Swap(PrivateChatNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateChatNotify::InternalSwap(PrivateChatNotify* other) {
  using std::swap;
  swap(chat_info_, other->chat_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrivateChatNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrivateChatNotify

// .proto.ChatInfo chat_info = 7;
bool PrivateChatNotify::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
void PrivateChatNotify::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
const ::proto::ChatInfo& PrivateChatNotify::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PrivateChatNotify.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
::proto::ChatInfo* PrivateChatNotify::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PrivateChatNotify.chat_info)
  return chat_info_;
}
::proto::ChatInfo* PrivateChatNotify::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PrivateChatNotify.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
void PrivateChatNotify::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PrivateChatNotify.chat_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullPrivateChatReq::kTargetUidFieldNumber;
const int PullPrivateChatReq::kPullNumFieldNumber;
const int PullPrivateChatReq::kFromSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullPrivateChatReq::PullPrivateChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PullPrivateChatReq)
}
PullPrivateChatReq::PullPrivateChatReq(const PullPrivateChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_sequence_, &from.from_sequence_,
    static_cast<size_t>(reinterpret_cast<char*>(&pull_num_) -
    reinterpret_cast<char*>(&from_sequence_)) + sizeof(pull_num_));
  // @@protoc_insertion_point(copy_constructor:proto.PullPrivateChatReq)
}

void PullPrivateChatReq::SharedCtor() {
  ::memset(&from_sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pull_num_) -
      reinterpret_cast<char*>(&from_sequence_)) + sizeof(pull_num_));
  _cached_size_ = 0;
}

PullPrivateChatReq::~PullPrivateChatReq() {
  // @@protoc_insertion_point(destructor:proto.PullPrivateChatReq)
  SharedDtor();
}

void PullPrivateChatReq::SharedDtor() {
}

void PullPrivateChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullPrivateChatReq::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullPrivateChatReq& PullPrivateChatReq::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

PullPrivateChatReq* PullPrivateChatReq::New(::google::protobuf::Arena* arena) const {
  PullPrivateChatReq* n = new PullPrivateChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullPrivateChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PullPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&from_sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pull_num_) -
      reinterpret_cast<char*>(&from_sequence_)) + sizeof(pull_num_));
  _internal_metadata_.Clear();
}

bool PullPrivateChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PullPrivateChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pull_num = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pull_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_sequence = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PullPrivateChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PullPrivateChatReq)
  return false;
#undef DO_
}

void PullPrivateChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PullPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 5;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_uid(), output);
  }

  // uint32 pull_num = 7;
  if (this->pull_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pull_num(), output);
  }

  // uint32 from_sequence = 12;
  if (this->from_sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->from_sequence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PullPrivateChatReq)
}

::google::protobuf::uint8* PullPrivateChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PullPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 5;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_uid(), target);
  }

  // uint32 pull_num = 7;
  if (this->pull_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pull_num(), target);
  }

  // uint32 from_sequence = 12;
  if (this->from_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->from_sequence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PullPrivateChatReq)
  return target;
}

size_t PullPrivateChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PullPrivateChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 from_sequence = 12;
  if (this->from_sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_sequence());
  }

  // uint32 target_uid = 5;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 pull_num = 7;
  if (this->pull_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pull_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullPrivateChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PullPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PullPrivateChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullPrivateChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PullPrivateChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PullPrivateChatReq)
    MergeFrom(*source);
  }
}

void PullPrivateChatReq::MergeFrom(const PullPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PullPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_sequence() != 0) {
    set_from_sequence(from.from_sequence());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.pull_num() != 0) {
    set_pull_num(from.pull_num());
  }
}

void PullPrivateChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PullPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullPrivateChatReq::CopyFrom(const PullPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PullPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullPrivateChatReq::IsInitialized() const {
  return true;
}

void PullPrivateChatReq::Swap(PullPrivateChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullPrivateChatReq::InternalSwap(PullPrivateChatReq* other) {
  using std::swap;
  swap(from_sequence_, other->from_sequence_);
  swap(target_uid_, other->target_uid_);
  swap(pull_num_, other->pull_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullPrivateChatReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PullPrivateChatReq

// uint32 target_uid = 5;
void PullPrivateChatReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PullPrivateChatReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatReq.target_uid)
  return target_uid_;
}
void PullPrivateChatReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatReq.target_uid)
}

// uint32 pull_num = 7;
void PullPrivateChatReq::clear_pull_num() {
  pull_num_ = 0u;
}
::google::protobuf::uint32 PullPrivateChatReq::pull_num() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatReq.pull_num)
  return pull_num_;
}
void PullPrivateChatReq::set_pull_num(::google::protobuf::uint32 value) {
  
  pull_num_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatReq.pull_num)
}

// uint32 from_sequence = 12;
void PullPrivateChatReq::clear_from_sequence() {
  from_sequence_ = 0u;
}
::google::protobuf::uint32 PullPrivateChatReq::from_sequence() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatReq.from_sequence)
  return from_sequence_;
}
void PullPrivateChatReq::set_from_sequence(::google::protobuf::uint32 value) {
  
  from_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatReq.from_sequence)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullPrivateChatRsp::kChatInfoFieldNumber;
const int PullPrivateChatRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullPrivateChatRsp::PullPrivateChatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PullPrivateChatRsp)
}
PullPrivateChatRsp::PullPrivateChatRsp(const PullPrivateChatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chat_info_(from.chat_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PullPrivateChatRsp)
}

void PullPrivateChatRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PullPrivateChatRsp::~PullPrivateChatRsp() {
  // @@protoc_insertion_point(destructor:proto.PullPrivateChatRsp)
  SharedDtor();
}

void PullPrivateChatRsp::SharedDtor() {
}

void PullPrivateChatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullPrivateChatRsp::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullPrivateChatRsp& PullPrivateChatRsp::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

PullPrivateChatRsp* PullPrivateChatRsp::New(::google::protobuf::Arena* arena) const {
  PullPrivateChatRsp* n = new PullPrivateChatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullPrivateChatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PullPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chat_info_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PullPrivateChatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PullPrivateChatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ChatInfo chat_info = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chat_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PullPrivateChatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PullPrivateChatRsp)
  return false;
#undef DO_
}

void PullPrivateChatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PullPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  // repeated .proto.ChatInfo chat_info = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chat_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->chat_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PullPrivateChatRsp)
}

::google::protobuf::uint8* PullPrivateChatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PullPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  // repeated .proto.ChatInfo chat_info = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chat_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->chat_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PullPrivateChatRsp)
  return target;
}

size_t PullPrivateChatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PullPrivateChatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ChatInfo chat_info = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->chat_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chat_info(static_cast<int>(i)));
    }
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullPrivateChatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PullPrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PullPrivateChatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullPrivateChatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PullPrivateChatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PullPrivateChatRsp)
    MergeFrom(*source);
  }
}

void PullPrivateChatRsp::MergeFrom(const PullPrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PullPrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chat_info_.MergeFrom(from.chat_info_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PullPrivateChatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PullPrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullPrivateChatRsp::CopyFrom(const PullPrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PullPrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullPrivateChatRsp::IsInitialized() const {
  return true;
}

void PullPrivateChatRsp::Swap(PullPrivateChatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullPrivateChatRsp::InternalSwap(PullPrivateChatRsp* other) {
  using std::swap;
  chat_info_.InternalSwap(&other->chat_info_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullPrivateChatRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PullPrivateChatRsp

// repeated .proto.ChatInfo chat_info = 15;
int PullPrivateChatRsp::chat_info_size() const {
  return chat_info_.size();
}
void PullPrivateChatRsp::clear_chat_info() {
  chat_info_.Clear();
}
const ::proto::ChatInfo& PullPrivateChatRsp::chat_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatRsp.chat_info)
  return chat_info_.Get(index);
}
::proto::ChatInfo* PullPrivateChatRsp::mutable_chat_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PullPrivateChatRsp.chat_info)
  return chat_info_.Mutable(index);
}
::proto::ChatInfo* PullPrivateChatRsp::add_chat_info() {
  // @@protoc_insertion_point(field_add:proto.PullPrivateChatRsp.chat_info)
  return chat_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
PullPrivateChatRsp::mutable_chat_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.PullPrivateChatRsp.chat_info)
  return &chat_info_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
PullPrivateChatRsp::chat_info() const {
  // @@protoc_insertion_point(field_list:proto.PullPrivateChatRsp.chat_info)
  return chat_info_;
}

// int32 retcode = 11;
void PullPrivateChatRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PullPrivateChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PullPrivateChatRsp.retcode)
  return retcode_;
}
void PullPrivateChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PullPrivateChatRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullRecentChatReq::kPullNumFieldNumber;
const int PullRecentChatReq::kBeginSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullRecentChatReq::PullRecentChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PullRecentChatReq)
}
PullRecentChatReq::PullRecentChatReq(const PullRecentChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pull_num_, &from.pull_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&begin_sequence_) -
    reinterpret_cast<char*>(&pull_num_)) + sizeof(begin_sequence_));
  // @@protoc_insertion_point(copy_constructor:proto.PullRecentChatReq)
}

void PullRecentChatReq::SharedCtor() {
  ::memset(&pull_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&begin_sequence_) -
      reinterpret_cast<char*>(&pull_num_)) + sizeof(begin_sequence_));
  _cached_size_ = 0;
}

PullRecentChatReq::~PullRecentChatReq() {
  // @@protoc_insertion_point(destructor:proto.PullRecentChatReq)
  SharedDtor();
}

void PullRecentChatReq::SharedDtor() {
}

void PullRecentChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullRecentChatReq::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullRecentChatReq& PullRecentChatReq::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

PullRecentChatReq* PullRecentChatReq::New(::google::protobuf::Arena* arena) const {
  PullRecentChatReq* n = new PullRecentChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullRecentChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PullRecentChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pull_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&begin_sequence_) -
      reinterpret_cast<char*>(&pull_num_)) + sizeof(begin_sequence_));
  _internal_metadata_.Clear();
}

bool PullRecentChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PullRecentChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pull_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pull_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 begin_sequence = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PullRecentChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PullRecentChatReq)
  return false;
#undef DO_
}

void PullRecentChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PullRecentChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pull_num = 6;
  if (this->pull_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pull_num(), output);
  }

  // uint32 begin_sequence = 15;
  if (this->begin_sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->begin_sequence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PullRecentChatReq)
}

::google::protobuf::uint8* PullRecentChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PullRecentChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pull_num = 6;
  if (this->pull_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pull_num(), target);
  }

  // uint32 begin_sequence = 15;
  if (this->begin_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->begin_sequence(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PullRecentChatReq)
  return target;
}

size_t PullRecentChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PullRecentChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 pull_num = 6;
  if (this->pull_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pull_num());
  }

  // uint32 begin_sequence = 15;
  if (this->begin_sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_sequence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullRecentChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PullRecentChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PullRecentChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullRecentChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PullRecentChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PullRecentChatReq)
    MergeFrom(*source);
  }
}

void PullRecentChatReq::MergeFrom(const PullRecentChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PullRecentChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pull_num() != 0) {
    set_pull_num(from.pull_num());
  }
  if (from.begin_sequence() != 0) {
    set_begin_sequence(from.begin_sequence());
  }
}

void PullRecentChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PullRecentChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullRecentChatReq::CopyFrom(const PullRecentChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PullRecentChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullRecentChatReq::IsInitialized() const {
  return true;
}

void PullRecentChatReq::Swap(PullRecentChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullRecentChatReq::InternalSwap(PullRecentChatReq* other) {
  using std::swap;
  swap(pull_num_, other->pull_num_);
  swap(begin_sequence_, other->begin_sequence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullRecentChatReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PullRecentChatReq

// uint32 pull_num = 6;
void PullRecentChatReq::clear_pull_num() {
  pull_num_ = 0u;
}
::google::protobuf::uint32 PullRecentChatReq::pull_num() const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatReq.pull_num)
  return pull_num_;
}
void PullRecentChatReq::set_pull_num(::google::protobuf::uint32 value) {
  
  pull_num_ = value;
  // @@protoc_insertion_point(field_set:proto.PullRecentChatReq.pull_num)
}

// uint32 begin_sequence = 15;
void PullRecentChatReq::clear_begin_sequence() {
  begin_sequence_ = 0u;
}
::google::protobuf::uint32 PullRecentChatReq::begin_sequence() const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatReq.begin_sequence)
  return begin_sequence_;
}
void PullRecentChatReq::set_begin_sequence(::google::protobuf::uint32 value) {
  
  begin_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.PullRecentChatReq.begin_sequence)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullRecentChatRsp::kChatInfoFieldNumber;
const int PullRecentChatRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullRecentChatRsp::PullRecentChatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PullRecentChatRsp)
}
PullRecentChatRsp::PullRecentChatRsp(const PullRecentChatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chat_info_(from.chat_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PullRecentChatRsp)
}

void PullRecentChatRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PullRecentChatRsp::~PullRecentChatRsp() {
  // @@protoc_insertion_point(destructor:proto.PullRecentChatRsp)
  SharedDtor();
}

void PullRecentChatRsp::SharedDtor() {
}

void PullRecentChatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullRecentChatRsp::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullRecentChatRsp& PullRecentChatRsp::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

PullRecentChatRsp* PullRecentChatRsp::New(::google::protobuf::Arena* arena) const {
  PullRecentChatRsp* n = new PullRecentChatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullRecentChatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PullRecentChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chat_info_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PullRecentChatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PullRecentChatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ChatInfo chat_info = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chat_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PullRecentChatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PullRecentChatRsp)
  return false;
#undef DO_
}

void PullRecentChatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PullRecentChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // repeated .proto.ChatInfo chat_info = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chat_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->chat_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PullRecentChatRsp)
}

::google::protobuf::uint8* PullRecentChatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PullRecentChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // repeated .proto.ChatInfo chat_info = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chat_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->chat_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PullRecentChatRsp)
  return target;
}

size_t PullRecentChatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PullRecentChatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ChatInfo chat_info = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->chat_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chat_info(static_cast<int>(i)));
    }
  }

  // int32 retcode = 3;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullRecentChatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PullRecentChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PullRecentChatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullRecentChatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PullRecentChatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PullRecentChatRsp)
    MergeFrom(*source);
  }
}

void PullRecentChatRsp::MergeFrom(const PullRecentChatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PullRecentChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chat_info_.MergeFrom(from.chat_info_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PullRecentChatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PullRecentChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullRecentChatRsp::CopyFrom(const PullRecentChatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PullRecentChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullRecentChatRsp::IsInitialized() const {
  return true;
}

void PullRecentChatRsp::Swap(PullRecentChatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullRecentChatRsp::InternalSwap(PullRecentChatRsp* other) {
  using std::swap;
  chat_info_.InternalSwap(&other->chat_info_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullRecentChatRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PullRecentChatRsp

// repeated .proto.ChatInfo chat_info = 15;
int PullRecentChatRsp::chat_info_size() const {
  return chat_info_.size();
}
void PullRecentChatRsp::clear_chat_info() {
  chat_info_.Clear();
}
const ::proto::ChatInfo& PullRecentChatRsp::chat_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatRsp.chat_info)
  return chat_info_.Get(index);
}
::proto::ChatInfo* PullRecentChatRsp::mutable_chat_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PullRecentChatRsp.chat_info)
  return chat_info_.Mutable(index);
}
::proto::ChatInfo* PullRecentChatRsp::add_chat_info() {
  // @@protoc_insertion_point(field_add:proto.PullRecentChatRsp.chat_info)
  return chat_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
PullRecentChatRsp::mutable_chat_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.PullRecentChatRsp.chat_info)
  return &chat_info_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
PullRecentChatRsp::chat_info() const {
  // @@protoc_insertion_point(field_list:proto.PullRecentChatRsp.chat_info)
  return chat_info_;
}

// int32 retcode = 3;
void PullRecentChatRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PullRecentChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PullRecentChatRsp.retcode)
  return retcode_;
}
void PullRecentChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PullRecentChatRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadPrivateChatReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadPrivateChatReq::ReadPrivateChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReadPrivateChatReq)
}
ReadPrivateChatReq::ReadPrivateChatReq(const ReadPrivateChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ReadPrivateChatReq)
}

void ReadPrivateChatReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ReadPrivateChatReq::~ReadPrivateChatReq() {
  // @@protoc_insertion_point(destructor:proto.ReadPrivateChatReq)
  SharedDtor();
}

void ReadPrivateChatReq::SharedDtor() {
}

void ReadPrivateChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadPrivateChatReq::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadPrivateChatReq& ReadPrivateChatReq::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadPrivateChatReq* ReadPrivateChatReq::New(::google::protobuf::Arena* arena) const {
  ReadPrivateChatReq* n = new ReadPrivateChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadPrivateChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReadPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ReadPrivateChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReadPrivateChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReadPrivateChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReadPrivateChatReq)
  return false;
#undef DO_
}

void ReadPrivateChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReadPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReadPrivateChatReq)
}

::google::protobuf::uint8* ReadPrivateChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReadPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReadPrivateChatReq)
  return target;
}

size_t ReadPrivateChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReadPrivateChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadPrivateChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReadPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadPrivateChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadPrivateChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReadPrivateChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReadPrivateChatReq)
    MergeFrom(*source);
  }
}

void ReadPrivateChatReq::MergeFrom(const ReadPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReadPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ReadPrivateChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReadPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadPrivateChatReq::CopyFrom(const ReadPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReadPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadPrivateChatReq::IsInitialized() const {
  return true;
}

void ReadPrivateChatReq::Swap(ReadPrivateChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadPrivateChatReq::InternalSwap(ReadPrivateChatReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadPrivateChatReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadPrivateChatReq

// uint32 target_uid = 1;
void ReadPrivateChatReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ReadPrivateChatReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ReadPrivateChatReq.target_uid)
  return target_uid_;
}
void ReadPrivateChatReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadPrivateChatReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadPrivateChatRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadPrivateChatRsp::ReadPrivateChatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReadPrivateChatRsp)
}
ReadPrivateChatRsp::ReadPrivateChatRsp(const ReadPrivateChatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ReadPrivateChatRsp)
}

void ReadPrivateChatRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ReadPrivateChatRsp::~ReadPrivateChatRsp() {
  // @@protoc_insertion_point(destructor:proto.ReadPrivateChatRsp)
  SharedDtor();
}

void ReadPrivateChatRsp::SharedDtor() {
}

void ReadPrivateChatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadPrivateChatRsp::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadPrivateChatRsp& ReadPrivateChatRsp::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadPrivateChatRsp* ReadPrivateChatRsp::New(::google::protobuf::Arena* arena) const {
  ReadPrivateChatRsp* n = new ReadPrivateChatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadPrivateChatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReadPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ReadPrivateChatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReadPrivateChatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReadPrivateChatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReadPrivateChatRsp)
  return false;
#undef DO_
}

void ReadPrivateChatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReadPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReadPrivateChatRsp)
}

::google::protobuf::uint8* ReadPrivateChatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReadPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReadPrivateChatRsp)
  return target;
}

size_t ReadPrivateChatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReadPrivateChatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadPrivateChatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReadPrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadPrivateChatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadPrivateChatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReadPrivateChatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReadPrivateChatRsp)
    MergeFrom(*source);
  }
}

void ReadPrivateChatRsp::MergeFrom(const ReadPrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReadPrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ReadPrivateChatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReadPrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadPrivateChatRsp::CopyFrom(const ReadPrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReadPrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadPrivateChatRsp::IsInitialized() const {
  return true;
}

void ReadPrivateChatRsp::Swap(ReadPrivateChatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadPrivateChatRsp::InternalSwap(ReadPrivateChatRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadPrivateChatRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadPrivateChatRsp

// int32 retcode = 1;
void ReadPrivateChatRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ReadPrivateChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ReadPrivateChatRsp.retcode)
  return retcode_;
}
void ReadPrivateChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadPrivateChatRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatChannelUpdateNotify::kChannelIdFieldNumber;
const int ChatChannelUpdateNotify::kIsCreateFieldNumber;
const int ChatChannelUpdateNotify::kChannelInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatChannelUpdateNotify::ChatChannelUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatChannelUpdateNotify)
}
ChatChannelUpdateNotify::ChatChannelUpdateNotify(const ChatChannelUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel_info()) {
    channel_info_ = new ::proto::ChatChannelInfo(*from.channel_info_);
  } else {
    channel_info_ = NULL;
  }
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_create_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(is_create_));
  // @@protoc_insertion_point(copy_constructor:proto.ChatChannelUpdateNotify)
}

void ChatChannelUpdateNotify::SharedCtor() {
  ::memset(&channel_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_create_) -
      reinterpret_cast<char*>(&channel_info_)) + sizeof(is_create_));
  _cached_size_ = 0;
}

ChatChannelUpdateNotify::~ChatChannelUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.ChatChannelUpdateNotify)
  SharedDtor();
}

void ChatChannelUpdateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete channel_info_;
}

void ChatChannelUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatChannelUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatChannelUpdateNotify& ChatChannelUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatChannelUpdateNotify* ChatChannelUpdateNotify::New(::google::protobuf::Arena* arena) const {
  ChatChannelUpdateNotify* n = new ChatChannelUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatChannelUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatChannelUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && channel_info_ != NULL) {
    delete channel_info_;
  }
  channel_info_ = NULL;
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_create_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(is_create_));
  _internal_metadata_.Clear();
}

bool ChatChannelUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatChannelUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChatChannelInfo channel_info = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_channel_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_create = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_create_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatChannelUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatChannelUpdateNotify)
  return false;
#undef DO_
}

void ChatChannelUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatChannelUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 3;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->channel_id(), output);
  }

  // .proto.ChatChannelInfo channel_info = 14;
  if (this->has_channel_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->channel_info_, output);
  }

  // bool is_create = 15;
  if (this->is_create() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_create(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatChannelUpdateNotify)
}

::google::protobuf::uint8* ChatChannelUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatChannelUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 3;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->channel_id(), target);
  }

  // .proto.ChatChannelInfo channel_info = 14;
  if (this->has_channel_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->channel_info_, deterministic, target);
  }

  // bool is_create = 15;
  if (this->is_create() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_create(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatChannelUpdateNotify)
  return target;
}

size_t ChatChannelUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatChannelUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatChannelInfo channel_info = 14;
  if (this->has_channel_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->channel_info_);
  }

  // uint32 channel_id = 3;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  // bool is_create = 15;
  if (this->is_create() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatChannelUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatChannelUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatChannelUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatChannelUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatChannelUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatChannelUpdateNotify)
    MergeFrom(*source);
  }
}

void ChatChannelUpdateNotify::MergeFrom(const ChatChannelUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatChannelUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_channel_info()) {
    mutable_channel_info()->::proto::ChatChannelInfo::MergeFrom(from.channel_info());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.is_create() != 0) {
    set_is_create(from.is_create());
  }
}

void ChatChannelUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatChannelUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatChannelUpdateNotify::CopyFrom(const ChatChannelUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatChannelUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatChannelUpdateNotify::IsInitialized() const {
  return true;
}

void ChatChannelUpdateNotify::Swap(ChatChannelUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatChannelUpdateNotify::InternalSwap(ChatChannelUpdateNotify* other) {
  using std::swap;
  swap(channel_info_, other->channel_info_);
  swap(channel_id_, other->channel_id_);
  swap(is_create_, other->is_create_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatChannelUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatChannelUpdateNotify

// uint32 channel_id = 3;
void ChatChannelUpdateNotify::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 ChatChannelUpdateNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelUpdateNotify.channel_id)
  return channel_id_;
}
void ChatChannelUpdateNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelUpdateNotify.channel_id)
}

// bool is_create = 15;
void ChatChannelUpdateNotify::clear_is_create() {
  is_create_ = false;
}
bool ChatChannelUpdateNotify::is_create() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelUpdateNotify.is_create)
  return is_create_;
}
void ChatChannelUpdateNotify::set_is_create(bool value) {
  
  is_create_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelUpdateNotify.is_create)
}

// .proto.ChatChannelInfo channel_info = 14;
bool ChatChannelUpdateNotify::has_channel_info() const {
  return this != internal_default_instance() && channel_info_ != NULL;
}
void ChatChannelUpdateNotify::clear_channel_info() {
  if (GetArenaNoVirtual() == NULL && channel_info_ != NULL) delete channel_info_;
  channel_info_ = NULL;
}
const ::proto::ChatChannelInfo& ChatChannelUpdateNotify::channel_info() const {
  const ::proto::ChatChannelInfo* p = channel_info_;
  // @@protoc_insertion_point(field_get:proto.ChatChannelUpdateNotify.channel_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatChannelInfo*>(
      &::proto::_ChatChannelInfo_default_instance_);
}
::proto::ChatChannelInfo* ChatChannelUpdateNotify::mutable_channel_info() {
  
  if (channel_info_ == NULL) {
    channel_info_ = new ::proto::ChatChannelInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatChannelUpdateNotify.channel_info)
  return channel_info_;
}
::proto::ChatChannelInfo* ChatChannelUpdateNotify::release_channel_info() {
  // @@protoc_insertion_point(field_release:proto.ChatChannelUpdateNotify.channel_info)
  
  ::proto::ChatChannelInfo* temp = channel_info_;
  channel_info_ = NULL;
  return temp;
}
void ChatChannelUpdateNotify::set_allocated_channel_info(::proto::ChatChannelInfo* channel_info) {
  delete channel_info_;
  channel_info_ = channel_info;
  if (channel_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatChannelUpdateNotify.channel_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatChannelInfo::kIsShieldFieldNumber;
const int ChatChannelInfo::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatChannelInfo::ChatChannelInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatChannelInfo)
}
ChatChannelInfo::ChatChannelInfo(const ChatChannelInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_shield_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(is_shield_));
  // @@protoc_insertion_point(copy_constructor:proto.ChatChannelInfo)
}

void ChatChannelInfo::SharedCtor() {
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_shield_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(is_shield_));
  _cached_size_ = 0;
}

ChatChannelInfo::~ChatChannelInfo() {
  // @@protoc_insertion_point(destructor:proto.ChatChannelInfo)
  SharedDtor();
}

void ChatChannelInfo::SharedDtor() {
}

void ChatChannelInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatChannelInfo::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatChannelInfo& ChatChannelInfo::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatChannelInfo* ChatChannelInfo::New(::google::protobuf::Arena* arena) const {
  ChatChannelInfo* n = new ChatChannelInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatChannelInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatChannelInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_shield_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(is_shield_));
  _internal_metadata_.Clear();
}

bool ChatChannelInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatChannelInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_shield = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_shield_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatChannelInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatChannelInfo)
  return false;
#undef DO_
}

void ChatChannelInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatChannelInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 8;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->channel_id(), output);
  }

  // bool is_shield = 15;
  if (this->is_shield() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_shield(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatChannelInfo)
}

::google::protobuf::uint8* ChatChannelInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatChannelInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 8;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->channel_id(), target);
  }

  // bool is_shield = 15;
  if (this->is_shield() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_shield(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatChannelInfo)
  return target;
}

size_t ChatChannelInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatChannelInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 channel_id = 8;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  // bool is_shield = 15;
  if (this->is_shield() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatChannelInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatChannelInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatChannelInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatChannelInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatChannelInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatChannelInfo)
    MergeFrom(*source);
  }
}

void ChatChannelInfo::MergeFrom(const ChatChannelInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatChannelInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.is_shield() != 0) {
    set_is_shield(from.is_shield());
  }
}

void ChatChannelInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatChannelInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatChannelInfo::CopyFrom(const ChatChannelInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatChannelInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatChannelInfo::IsInitialized() const {
  return true;
}

void ChatChannelInfo::Swap(ChatChannelInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatChannelInfo::InternalSwap(ChatChannelInfo* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  swap(is_shield_, other->is_shield_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatChannelInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatChannelInfo

// bool is_shield = 15;
void ChatChannelInfo::clear_is_shield() {
  is_shield_ = false;
}
bool ChatChannelInfo::is_shield() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelInfo.is_shield)
  return is_shield_;
}
void ChatChannelInfo::set_is_shield(bool value) {
  
  is_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelInfo.is_shield)
}

// uint32 channel_id = 8;
void ChatChannelInfo::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 ChatChannelInfo::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelInfo.channel_id)
  return channel_id_;
}
void ChatChannelInfo::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelInfo.channel_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatChannelDataNotify::kChannelListFieldNumber;
const int ChatChannelDataNotify::kChannelInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatChannelDataNotify::ChatChannelDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatChannelDataNotify)
}
ChatChannelDataNotify::ChatChannelDataNotify(const ChatChannelDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_list_(from.channel_list_),
      channel_info_list_(from.channel_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ChatChannelDataNotify)
}

void ChatChannelDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

ChatChannelDataNotify::~ChatChannelDataNotify() {
  // @@protoc_insertion_point(destructor:proto.ChatChannelDataNotify)
  SharedDtor();
}

void ChatChannelDataNotify::SharedDtor() {
}

void ChatChannelDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatChannelDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatChannelDataNotify& ChatChannelDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatChannelDataNotify* ChatChannelDataNotify::New(::google::protobuf::Arena* arena) const {
  ChatChannelDataNotify* n = new ChatChannelDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatChannelDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatChannelDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_list_.Clear();
  channel_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool ChatChannelDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatChannelDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 channel_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_channel_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_channel_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ChatChannelInfo channel_info_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_channel_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatChannelDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatChannelDataNotify)
  return false;
#undef DO_
}

void ChatChannelDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatChannelDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 channel_list = 3;
  if (this->channel_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _channel_list_cached_byte_size_));
  }
  for (int i = 0, n = this->channel_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->channel_list(i), output);
  }

  // repeated .proto.ChatChannelInfo channel_info_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->channel_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatChannelDataNotify)
}

::google::protobuf::uint8* ChatChannelDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatChannelDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 channel_list = 3;
  if (this->channel_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _channel_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->channel_list_, target);
  }

  // repeated .proto.ChatChannelInfo channel_info_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->channel_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatChannelDataNotify)
  return target;
}

size_t ChatChannelDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatChannelDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 channel_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->channel_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _channel_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.ChatChannelInfo channel_info_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->channel_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatChannelDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatChannelDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatChannelDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatChannelDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatChannelDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatChannelDataNotify)
    MergeFrom(*source);
  }
}

void ChatChannelDataNotify::MergeFrom(const ChatChannelDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatChannelDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_list_.MergeFrom(from.channel_list_);
  channel_info_list_.MergeFrom(from.channel_info_list_);
}

void ChatChannelDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatChannelDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatChannelDataNotify::CopyFrom(const ChatChannelDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatChannelDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatChannelDataNotify::IsInitialized() const {
  return true;
}

void ChatChannelDataNotify::Swap(ChatChannelDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatChannelDataNotify::InternalSwap(ChatChannelDataNotify* other) {
  using std::swap;
  channel_list_.InternalSwap(&other->channel_list_);
  channel_info_list_.InternalSwap(&other->channel_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatChannelDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatChannelDataNotify

// repeated uint32 channel_list = 3;
int ChatChannelDataNotify::channel_list_size() const {
  return channel_list_.size();
}
void ChatChannelDataNotify::clear_channel_list() {
  channel_list_.Clear();
}
::google::protobuf::uint32 ChatChannelDataNotify::channel_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelDataNotify.channel_list)
  return channel_list_.Get(index);
}
void ChatChannelDataNotify::set_channel_list(int index, ::google::protobuf::uint32 value) {
  channel_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChatChannelDataNotify.channel_list)
}
void ChatChannelDataNotify::add_channel_list(::google::protobuf::uint32 value) {
  channel_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChatChannelDataNotify.channel_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChatChannelDataNotify::channel_list() const {
  // @@protoc_insertion_point(field_list:proto.ChatChannelDataNotify.channel_list)
  return channel_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChatChannelDataNotify::mutable_channel_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatChannelDataNotify.channel_list)
  return &channel_list_;
}

// repeated .proto.ChatChannelInfo channel_info_list = 7;
int ChatChannelDataNotify::channel_info_list_size() const {
  return channel_info_list_.size();
}
void ChatChannelDataNotify::clear_channel_info_list() {
  channel_info_list_.Clear();
}
const ::proto::ChatChannelInfo& ChatChannelDataNotify::channel_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_.Get(index);
}
::proto::ChatChannelInfo* ChatChannelDataNotify::mutable_channel_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_.Mutable(index);
}
::proto::ChatChannelInfo* ChatChannelDataNotify::add_channel_info_list() {
  // @@protoc_insertion_point(field_add:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ChatChannelInfo >*
ChatChannelDataNotify::mutable_channel_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatChannelDataNotify.channel_info_list)
  return &channel_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ChatChannelInfo >&
ChatChannelDataNotify::channel_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ChatChannelDataNotify.channel_info_list)
  return channel_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatChannelShieldNotify::kIsShieldFieldNumber;
const int ChatChannelShieldNotify::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatChannelShieldNotify::ChatChannelShieldNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatChannelShieldNotify)
}
ChatChannelShieldNotify::ChatChannelShieldNotify(const ChatChannelShieldNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_shield_, &from.is_shield_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_id_) -
    reinterpret_cast<char*>(&is_shield_)) + sizeof(channel_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ChatChannelShieldNotify)
}

void ChatChannelShieldNotify::SharedCtor() {
  ::memset(&is_shield_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&is_shield_)) + sizeof(channel_id_));
  _cached_size_ = 0;
}

ChatChannelShieldNotify::~ChatChannelShieldNotify() {
  // @@protoc_insertion_point(destructor:proto.ChatChannelShieldNotify)
  SharedDtor();
}

void ChatChannelShieldNotify::SharedDtor() {
}

void ChatChannelShieldNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatChannelShieldNotify::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatChannelShieldNotify& ChatChannelShieldNotify::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatChannelShieldNotify* ChatChannelShieldNotify::New(::google::protobuf::Arena* arena) const {
  ChatChannelShieldNotify* n = new ChatChannelShieldNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatChannelShieldNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatChannelShieldNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_shield_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&is_shield_)) + sizeof(channel_id_));
  _internal_metadata_.Clear();
}

bool ChatChannelShieldNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatChannelShieldNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_shield = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_shield_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatChannelShieldNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatChannelShieldNotify)
  return false;
#undef DO_
}

void ChatChannelShieldNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatChannelShieldNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_shield = 5;
  if (this->is_shield() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_shield(), output);
  }

  // uint32 channel_id = 14;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->channel_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatChannelShieldNotify)
}

::google::protobuf::uint8* ChatChannelShieldNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatChannelShieldNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_shield = 5;
  if (this->is_shield() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_shield(), target);
  }

  // uint32 channel_id = 14;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->channel_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatChannelShieldNotify)
  return target;
}

size_t ChatChannelShieldNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatChannelShieldNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_shield = 5;
  if (this->is_shield() != 0) {
    total_size += 1 + 1;
  }

  // uint32 channel_id = 14;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatChannelShieldNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatChannelShieldNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatChannelShieldNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatChannelShieldNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatChannelShieldNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatChannelShieldNotify)
    MergeFrom(*source);
  }
}

void ChatChannelShieldNotify::MergeFrom(const ChatChannelShieldNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatChannelShieldNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_shield() != 0) {
    set_is_shield(from.is_shield());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void ChatChannelShieldNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatChannelShieldNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatChannelShieldNotify::CopyFrom(const ChatChannelShieldNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatChannelShieldNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatChannelShieldNotify::IsInitialized() const {
  return true;
}

void ChatChannelShieldNotify::Swap(ChatChannelShieldNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatChannelShieldNotify::InternalSwap(ChatChannelShieldNotify* other) {
  using std::swap;
  swap(is_shield_, other->is_shield_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatChannelShieldNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatChannelShieldNotify

// bool is_shield = 5;
void ChatChannelShieldNotify::clear_is_shield() {
  is_shield_ = false;
}
bool ChatChannelShieldNotify::is_shield() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelShieldNotify.is_shield)
  return is_shield_;
}
void ChatChannelShieldNotify::set_is_shield(bool value) {
  
  is_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelShieldNotify.is_shield)
}

// uint32 channel_id = 14;
void ChatChannelShieldNotify::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 ChatChannelShieldNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatChannelShieldNotify.channel_id)
  return channel_id_;
}
void ChatChannelShieldNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatChannelShieldNotify.channel_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatChannelInfoNotify::kChannelInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatChannelInfoNotify::ChatChannelInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatChannelInfoNotify)
}
ChatChannelInfoNotify::ChatChannelInfoNotify(const ChatChannelInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel_info()) {
    channel_info_ = new ::proto::ChatChannelInfo(*from.channel_info_);
  } else {
    channel_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ChatChannelInfoNotify)
}

void ChatChannelInfoNotify::SharedCtor() {
  channel_info_ = NULL;
  _cached_size_ = 0;
}

ChatChannelInfoNotify::~ChatChannelInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.ChatChannelInfoNotify)
  SharedDtor();
}

void ChatChannelInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete channel_info_;
}

void ChatChannelInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatChannelInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatChannelInfoNotify& ChatChannelInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatChannelInfoNotify* ChatChannelInfoNotify::New(::google::protobuf::Arena* arena) const {
  ChatChannelInfoNotify* n = new ChatChannelInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatChannelInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatChannelInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && channel_info_ != NULL) {
    delete channel_info_;
  }
  channel_info_ = NULL;
  _internal_metadata_.Clear();
}

bool ChatChannelInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatChannelInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ChatChannelInfo channel_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_channel_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatChannelInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatChannelInfoNotify)
  return false;
#undef DO_
}

void ChatChannelInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatChannelInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatChannelInfo channel_info = 2;
  if (this->has_channel_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->channel_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatChannelInfoNotify)
}

::google::protobuf::uint8* ChatChannelInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatChannelInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatChannelInfo channel_info = 2;
  if (this->has_channel_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->channel_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatChannelInfoNotify)
  return target;
}

size_t ChatChannelInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatChannelInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatChannelInfo channel_info = 2;
  if (this->has_channel_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->channel_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatChannelInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatChannelInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatChannelInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatChannelInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatChannelInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatChannelInfoNotify)
    MergeFrom(*source);
  }
}

void ChatChannelInfoNotify::MergeFrom(const ChatChannelInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatChannelInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_channel_info()) {
    mutable_channel_info()->::proto::ChatChannelInfo::MergeFrom(from.channel_info());
  }
}

void ChatChannelInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatChannelInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatChannelInfoNotify::CopyFrom(const ChatChannelInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatChannelInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatChannelInfoNotify::IsInitialized() const {
  return true;
}

void ChatChannelInfoNotify::Swap(ChatChannelInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatChannelInfoNotify::InternalSwap(ChatChannelInfoNotify* other) {
  using std::swap;
  swap(channel_info_, other->channel_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatChannelInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fchat_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatChannelInfoNotify

// .proto.ChatChannelInfo channel_info = 2;
bool ChatChannelInfoNotify::has_channel_info() const {
  return this != internal_default_instance() && channel_info_ != NULL;
}
void ChatChannelInfoNotify::clear_channel_info() {
  if (GetArenaNoVirtual() == NULL && channel_info_ != NULL) delete channel_info_;
  channel_info_ = NULL;
}
const ::proto::ChatChannelInfo& ChatChannelInfoNotify::channel_info() const {
  const ::proto::ChatChannelInfo* p = channel_info_;
  // @@protoc_insertion_point(field_get:proto.ChatChannelInfoNotify.channel_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatChannelInfo*>(
      &::proto::_ChatChannelInfo_default_instance_);
}
::proto::ChatChannelInfo* ChatChannelInfoNotify::mutable_channel_info() {
  
  if (channel_info_ == NULL) {
    channel_info_ = new ::proto::ChatChannelInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatChannelInfoNotify.channel_info)
  return channel_info_;
}
::proto::ChatChannelInfo* ChatChannelInfoNotify::release_channel_info() {
  // @@protoc_insertion_point(field_release:proto.ChatChannelInfoNotify.channel_info)
  
  ::proto::ChatChannelInfo* temp = channel_info_;
  channel_info_ = NULL;
  return temp;
}
void ChatChannelInfoNotify::set_allocated_channel_info(::proto::ChatChannelInfo* channel_info) {
  delete channel_info_;
  channel_info_ = channel_info;
  if (channel_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatChannelInfoNotify.channel_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
