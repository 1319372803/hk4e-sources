// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_gadget.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_gadget.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class GadgetInteractReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetInteractReq>
     _instance;
} _GadgetInteractReq_default_instance_;
class GadgetInteractRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetInteractRsp>
     _instance;
} _GadgetInteractRsp_default_instance_;
class GadgetStateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetStateNotify>
     _instance;
} _GadgetStateNotify_default_instance_;
class WorktopOptionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorktopOptionNotify>
     _instance;
} _WorktopOptionNotify_default_instance_;
class SelectWorktopOptionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectWorktopOptionReq>
     _instance;
} _SelectWorktopOptionReq_default_instance_;
class SelectWorktopOptionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectWorktopOptionRsp>
     _instance;
} _SelectWorktopOptionRsp_default_instance_;
class BossChestActivateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BossChestActivateNotify>
     _instance;
} _BossChestActivateNotify_default_instance_;
class BlossomChestInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomChestInfoNotify>
     _instance;
} _BlossomChestInfoNotify_default_instance_;
class GadgetPlayStartNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetPlayStartNotify>
     _instance;
} _GadgetPlayStartNotify_default_instance_;
class GadgetPlayUidInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetPlayUidInfo>
     _instance;
} _GadgetPlayUidInfo_default_instance_;
class GadgetPlayStopNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetPlayStopNotify>
     _instance;
} _GadgetPlayStopNotify_default_instance_;
class GadgetPlayDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetPlayDataNotify>
     _instance;
} _GadgetPlayDataNotify_default_instance_;
class GadgetPlayUidOpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetPlayUidOpNotify>
     _instance;
} _GadgetPlayUidOpNotify_default_instance_;
class GadgetGeneralRewardInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetGeneralRewardInfoNotify>
     _instance;
} _GadgetGeneralRewardInfoNotify_default_instance_;
class GadgetAutoPickDropInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetAutoPickDropInfoNotify>
     _instance;
} _GadgetAutoPickDropInfoNotify_default_instance_;
class UpdateAbilityCreatedMovingPlatformNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateAbilityCreatedMovingPlatformNotify>
     _instance;
} _UpdateAbilityCreatedMovingPlatformNotify_default_instance_;
class FoundationReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FoundationReq>
     _instance;
} _FoundationReq_default_instance_;
class FoundationRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FoundationRsp>
     _instance;
} _FoundationRsp_default_instance_;
class FoundationNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FoundationNotify>
     _instance;
} _FoundationNotify_default_instance_;
class GadgetTalkChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetTalkChangeNotify>
     _instance;
} _GadgetTalkChangeNotify_default_instance_;
class GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry>
     _instance;
} _GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_;
class GadgetChainLevelUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetChainLevelUpdateNotify>
     _instance;
} _GadgetChainLevelUpdateNotify_default_instance_;
class GadgetChainLevelChangeNotify_GadgetChainLevelMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry>
     _instance;
} _GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_;
class GadgetChainLevelChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetChainLevelChangeNotify>
     _instance;
} _GadgetChainLevelChangeNotify_default_instance_;
class VehicleInteractReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VehicleInteractReq>
     _instance;
} _VehicleInteractReq_default_instance_;
class VehicleInteractRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VehicleInteractRsp>
     _instance;
} _VehicleInteractRsp_default_instance_;
class CreateVehicleReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateVehicleReq>
     _instance;
} _CreateVehicleReq_default_instance_;
class CreateVehicleRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateVehicleRsp>
     _instance;
} _CreateVehicleRsp_default_instance_;
class RequestLiveInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RequestLiveInfoReq>
     _instance;
} _RequestLiveInfoReq_default_instance_;
class RequestLiveInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RequestLiveInfoRsp>
     _instance;
} _RequestLiveInfoRsp_default_instance_;
class LiveStartNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LiveStartNotify>
     _instance;
} _LiveStartNotify_default_instance_;
class ProjectorOptionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProjectorOptionReq>
     _instance;
} _ProjectorOptionReq_default_instance_;
class ProjectorOptionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ProjectorOptionRsp>
     _instance;
} _ProjectorOptionRsp_default_instance_;
class LiveEndNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LiveEndNotify>
     _instance;
} _LiveEndNotify_default_instance_;
class VehicleStaminaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<VehicleStaminaNotify>
     _instance;
} _VehicleStaminaNotify_default_instance_;
class GadgetCustomTreeInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetCustomTreeInfoNotify>
     _instance;
} _GadgetCustomTreeInfoNotify_default_instance_;
class GadgetChangeLevelTagReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetChangeLevelTagReq>
     _instance;
} _GadgetChangeLevelTagReq_default_instance_;
class GadgetChangeLevelTagRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetChangeLevelTagRsp>
     _instance;
} _GadgetChangeLevelTagRsp_default_instance_;
class NightCrowGadgetObservationMatchReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NightCrowGadgetObservationMatchReq>
     _instance;
} _NightCrowGadgetObservationMatchReq_default_instance_;
class NightCrowGadgetObservationMatchRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NightCrowGadgetObservationMatchRsp>
     _instance;
} _NightCrowGadgetObservationMatchRsp_default_instance_;
class DeshretObeliskChestInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeshretObeliskChestInfo>
     _instance;
} _DeshretObeliskChestInfo_default_instance_;
class DeshretObeliskChestInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeshretObeliskChestInfoNotify>
     _instance;
} _DeshretObeliskChestInfoNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fgadget_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[42];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, is_use_condense_resin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, resin_cost_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, ui_interact_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, interact_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, gadget_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, gadget_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, is_enable_interact_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopOptionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopOptionNotify, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopOptionNotify, option_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionReq, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionReq, option_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, option_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestActivateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestActivateNotify, qualify_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestActivateNotify, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfoNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfoNotify, blossom_chest_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStartNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStartNotify, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStartNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStartNotify, play_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, profile_picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, battle_watcher_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidInfo, online_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStopNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStopNotify, is_win_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStopNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStopNotify, play_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStopNotify, uid_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStopNotify, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayStopNotify, cost_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayDataNotify, play_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayDataNotify, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayDataNotify, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidOpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidOpNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidOpNotify, uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidOpNotify, play_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidOpNotify, param_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidOpNotify, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlayUidOpNotify, param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardInfoNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardInfoNotify, general_reward_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetAutoPickDropInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetAutoPickDropInfoNotify, item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAbilityCreatedMovingPlatformNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAbilityCreatedMovingPlatformNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAbilityCreatedMovingPlatformNotify, op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationReq, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationReq, point_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationReq, building_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationReq, op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationRsp, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationRsp, building_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationRsp, point_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationNotify, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FoundationNotify, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetTalkChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetTalkChangeNotify, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetTalkChangeNotify, cur_gadget_talk_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChainLevelUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChainLevelUpdateNotify, gadget_chain_level_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChainLevelChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChainLevelChangeNotify, gadget_chain_level_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractReq, interact_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractReq, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractReq, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractRsp, interact_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractRsp, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInteractRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleReq, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleReq, vehicle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleReq, scene_point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleReq, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleRsp, vehicle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateVehicleRsp, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLiveInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLiveInfoReq, live_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLiveInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLiveInfoRsp, spare_live_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLiveInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLiveInfoRsp, live_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLiveInfoRsp, live_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveStartNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveStartNotify, live_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectorOptionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectorOptionReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectorOptionReq, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectorOptionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectorOptionRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectorOptionRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectorOptionRsp, op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveEndNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveEndNotify, live_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleStaminaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleStaminaNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleStaminaNotify, cur_stamina_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetCustomTreeInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetCustomTreeInfoNotify, custom_gadget_tree_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetCustomTreeInfoNotify, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChangeLevelTagReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChangeLevelTagReq, level_tag_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChangeLevelTagReq, combination_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChangeLevelTagReq, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChangeLevelTagRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetChangeLevelTagRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NightCrowGadgetObservationMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NightCrowGadgetObservationMatchReq, target_gadget_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NightCrowGadgetObservationMatchReq, gadget_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NightCrowGadgetObservationMatchRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NightCrowGadgetObservationMatchRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeshretObeliskChestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeshretObeliskChestInfo, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeshretObeliskChestInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeshretObeliskChestInfo, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeshretObeliskChestInfo, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeshretObeliskChestInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeshretObeliskChestInfoNotify, chest_info_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GadgetInteractReq)},
  { 11, -1, sizeof(GadgetInteractRsp)},
  { 21, -1, sizeof(GadgetStateNotify)},
  { 29, -1, sizeof(WorktopOptionNotify)},
  { 36, -1, sizeof(SelectWorktopOptionReq)},
  { 43, -1, sizeof(SelectWorktopOptionRsp)},
  { 51, -1, sizeof(BossChestActivateNotify)},
  { 58, -1, sizeof(BlossomChestInfoNotify)},
  { 65, -1, sizeof(GadgetPlayStartNotify)},
  { 73, -1, sizeof(GadgetPlayUidInfo)},
  { 85, -1, sizeof(GadgetPlayStopNotify)},
  { 96, -1, sizeof(GadgetPlayDataNotify)},
  { 104, -1, sizeof(GadgetPlayUidOpNotify)},
  { 115, -1, sizeof(GadgetGeneralRewardInfoNotify)},
  { 122, -1, sizeof(GadgetAutoPickDropInfoNotify)},
  { 128, -1, sizeof(UpdateAbilityCreatedMovingPlatformNotify)},
  { 135, -1, sizeof(FoundationReq)},
  { 144, -1, sizeof(FoundationRsp)},
  { 154, -1, sizeof(FoundationNotify)},
  { 161, -1, sizeof(GadgetTalkChangeNotify)},
  { 168, -1, sizeof(GadgetChainLevelUpdateNotify)},
  { 174, -1, sizeof(GadgetChainLevelChangeNotify)},
  { 180, -1, sizeof(VehicleInteractReq)},
  { 188, -1, sizeof(VehicleInteractRsp)},
  { 197, -1, sizeof(CreateVehicleReq)},
  { 206, -1, sizeof(CreateVehicleRsp)},
  { 214, -1, sizeof(RequestLiveInfoReq)},
  { 220, -1, sizeof(RequestLiveInfoRsp)},
  { 229, -1, sizeof(LiveStartNotify)},
  { 235, -1, sizeof(ProjectorOptionReq)},
  { 242, -1, sizeof(ProjectorOptionRsp)},
  { 250, -1, sizeof(LiveEndNotify)},
  { 256, -1, sizeof(VehicleStaminaNotify)},
  { 263, -1, sizeof(GadgetCustomTreeInfoNotify)},
  { 270, -1, sizeof(GadgetChangeLevelTagReq)},
  { 278, -1, sizeof(GadgetChangeLevelTagRsp)},
  { 284, -1, sizeof(NightCrowGadgetObservationMatchReq)},
  { 291, -1, sizeof(NightCrowGadgetObservationMatchRsp)},
  { 297, -1, sizeof(DeshretObeliskChestInfo)},
  { 306, -1, sizeof(DeshretObeliskChestInfoNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetInteractReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetInteractRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorktopOptionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectWorktopOptionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectWorktopOptionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BossChestActivateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomChestInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetPlayStartNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetPlayUidInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetPlayStopNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetPlayDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetPlayUidOpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetGeneralRewardInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetAutoPickDropInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateAbilityCreatedMovingPlatformNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FoundationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FoundationRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FoundationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetTalkChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetChainLevelUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetChainLevelChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VehicleInteractReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VehicleInteractRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateVehicleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateVehicleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RequestLiveInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RequestLiveInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LiveStartNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProjectorOptionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProjectorOptionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LiveEndNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VehicleStaminaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetCustomTreeInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetChangeLevelTagReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetChangeLevelTagRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NightCrowGadgetObservationMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NightCrowGadgetObservationMatchRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeshretObeliskChestInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeshretObeliskChestInfoNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_gadget.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[20].reflection = GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry::CreateReflection(file_level_metadata[20].descriptor, _GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[22].reflection = GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry::CreateReflection(file_level_metadata[22].descriptor, _GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 42);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _GadgetInteractReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetInteractReq_default_instance_);_GadgetInteractRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetInteractRsp_default_instance_);_GadgetStateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetStateNotify_default_instance_);_WorktopOptionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorktopOptionNotify_default_instance_);_SelectWorktopOptionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectWorktopOptionReq_default_instance_);_SelectWorktopOptionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectWorktopOptionRsp_default_instance_);_BossChestActivateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BossChestActivateNotify_default_instance_);_BlossomChestInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomChestInfoNotify_default_instance_);_GadgetPlayStartNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetPlayStartNotify_default_instance_);_GadgetPlayUidInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetPlayUidInfo_default_instance_);_GadgetPlayStopNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetPlayStopNotify_default_instance_);_GadgetPlayDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetPlayDataNotify_default_instance_);_GadgetPlayUidOpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetPlayUidOpNotify_default_instance_);_GadgetGeneralRewardInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetGeneralRewardInfoNotify_default_instance_);_GadgetAutoPickDropInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetAutoPickDropInfoNotify_default_instance_);_UpdateAbilityCreatedMovingPlatformNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateAbilityCreatedMovingPlatformNotify_default_instance_);_FoundationReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FoundationReq_default_instance_);_FoundationRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FoundationRsp_default_instance_);_FoundationNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FoundationNotify_default_instance_);_GadgetTalkChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetTalkChangeNotify_default_instance_);_GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_);_GadgetChainLevelUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetChainLevelUpdateNotify_default_instance_);_GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_);_GadgetChainLevelChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetChainLevelChangeNotify_default_instance_);_VehicleInteractReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VehicleInteractReq_default_instance_);_VehicleInteractRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VehicleInteractRsp_default_instance_);_CreateVehicleReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateVehicleReq_default_instance_);_CreateVehicleRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateVehicleRsp_default_instance_);_RequestLiveInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RequestLiveInfoReq_default_instance_);_RequestLiveInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RequestLiveInfoRsp_default_instance_);_LiveStartNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LiveStartNotify_default_instance_);_ProjectorOptionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProjectorOptionReq_default_instance_);_ProjectorOptionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProjectorOptionRsp_default_instance_);_LiveEndNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LiveEndNotify_default_instance_);_VehicleStaminaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VehicleStaminaNotify_default_instance_);_GadgetCustomTreeInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetCustomTreeInfoNotify_default_instance_);_GadgetChangeLevelTagReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetChangeLevelTagReq_default_instance_);_GadgetChangeLevelTagRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetChangeLevelTagRsp_default_instance_);_NightCrowGadgetObservationMatchReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NightCrowGadgetObservationMatchReq_default_instance_);_NightCrowGadgetObservationMatchRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NightCrowGadgetObservationMatchRsp_default_instance_);_DeshretObeliskChestInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeshretObeliskChestInfo_default_instance_);_DeshretObeliskChestInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeshretObeliskChestInfoNotify_default_instance_);_BlossomChestInfoNotify_default_instance_._instance.get_mutable()->blossom_chest_info_ = const_cast< ::proto::BlossomChestInfo*>(
      ::proto::BlossomChestInfo::internal_default_instance());
  _GadgetPlayUidInfo_default_instance_._instance.get_mutable()->profile_picture_ = const_cast< ::proto::ProfilePicture*>(
      ::proto::ProfilePicture::internal_default_instance());
  _GadgetGeneralRewardInfoNotify_default_instance_._instance.get_mutable()->general_reward_info_ = const_cast< ::proto::GadgetGeneralRewardInfo*>(
      ::proto::GadgetGeneralRewardInfo::internal_default_instance());
  _FoundationNotify_default_instance_._instance.get_mutable()->info_ = const_cast< ::proto::FoundationInfo*>(
      ::proto::FoundationInfo::internal_default_instance());
  _GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable());
  _GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable());
  _GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _VehicleInteractRsp_default_instance_._instance.get_mutable()->member_ = const_cast< ::proto::VehicleMember*>(
      ::proto::VehicleMember::internal_default_instance());
  _CreateVehicleReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _CreateVehicleReq_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _GadgetCustomTreeInfoNotify_default_instance_._instance.get_mutable()->custom_gadget_tree_info_ = const_cast< ::proto::CustomGadgetTreeInfo*>(
      ::proto::CustomGadgetTreeInfo::internal_default_instance());
  _GadgetChangeLevelTagReq_default_instance_._instance.get_mutable()->combination_info_ = const_cast< ::proto::CustomGadgetTreeInfo*>(
      ::proto::CustomGadgetTreeInfo::internal_default_instance());
  _DeshretObeliskChestInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_gadget.proto\022\005proto\032\014define.pr"
      "oto\"\313\001\n\021GadgetInteractReq\022\021\n\tgadget_id\030\010"
      " \001(\r\022\035\n\025is_use_condense_resin\030\017 \001(\010\022#\n\007o"
      "p_type\030\005 \001(\0162\022.proto.InterOpType\022-\n\017resi"
      "n_cost_type\030\001 \001(\0162\024.proto.ResinCostType\022"
      "\026\n\016ui_interact_id\030\002 \001(\r\022\030\n\020gadget_entity"
      "_id\030\004 \001(\r\"\242\001\n\021GadgetInteractRsp\022\030\n\020gadge"
      "t_entity_id\030\n \001(\r\022*\n\rinteract_type\030\002 \001(\016"
      "2\023.proto.InteractType\022#\n\007op_type\030\003 \001(\0162\022"
      ".proto.InterOpType\022\017\n\007retcode\030\007 \001(\005\022\021\n\tg"
      "adget_id\030\017 \001(\r\"_\n\021GadgetStateNotify\022\030\n\020g"
      "adget_entity_id\030\005 \001(\r\022\024\n\014gadget_state\030\003 "
      "\001(\r\022\032\n\022is_enable_interact\030\013 \001(\010\"D\n\023Workt"
      "opOptionNotify\022\030\n\020gadget_entity_id\030\013 \001(\r"
      "\022\023\n\013option_list\030\010 \003(\r\"E\n\026SelectWorktopOp"
      "tionReq\022\030\n\020gadget_entity_id\030\014 \001(\r\022\021\n\topt"
      "ion_id\030\013 \001(\r\"V\n\026SelectWorktopOptionRsp\022\030"
      "\n\020gadget_entity_id\030\r \001(\r\022\021\n\toption_id\030\007 "
      "\001(\r\022\017\n\007retcode\030\004 \001(\005\"F\n\027BossChestActivat"
      "eNotify\022\030\n\020qualify_uid_list\030\001 \003(\r\022\021\n\tent"
      "ity_id\030\014 \001(\r\"`\n\026BlossomChestInfoNotify\022\021"
      "\n\tentity_id\030\t \001(\r\0223\n\022blossom_chest_info\030"
      "\003 \001(\0132\027.proto.BlossomChestInfo\"Q\n\025Gadget"
      "PlayStartNotify\022\022\n\nstart_time\030\016 \001(\r\022\021\n\te"
      "ntity_id\030\017 \001(\r\022\021\n\tplay_type\030\010 \001(\r\"\255\001\n\021Ga"
      "dgetPlayUidInfo\022.\n\017profile_picture\030\002 \001(\013"
      "2\025.proto.ProfilePicture\022\031\n\021battle_watche"
      "r_id\030\006 \001(\r\022\013\n\003uid\030\007 \001(\r\022\014\n\004icon\030\016 \001(\r\022\r\n"
      "\005score\030\004 \001(\r\022\020\n\010nickname\030\003 \001(\t\022\021\n\tonline"
      "_id\030\010 \001(\t\"\237\001\n\024GadgetPlayStopNotify\022\016\n\006is"
      "_win\030\016 \001(\010\022\021\n\tentity_id\030\007 \001(\r\022\021\n\tplay_ty"
      "pe\030\004 \001(\r\022/\n\ruid_info_list\030\010 \003(\0132\030.proto."
      "GadgetPlayUidInfo\022\r\n\005score\030\005 \001(\r\022\021\n\tcost"
      "_time\030\006 \001(\r\"N\n\024GadgetPlayDataNotify\022\021\n\tp"
      "lay_type\030\014 \001(\r\022\020\n\010progress\030\t \001(\r\022\021\n\tenti"
      "ty_id\030\006 \001(\r\"\202\001\n\025GadgetPlayUidOpNotify\022\021\n"
      "\tentity_id\030\013 \001(\r\022\020\n\010uid_list\030\002 \003(\r\022\021\n\tpl"
      "ay_type\030\006 \001(\r\022\021\n\tparam_str\030\001 \001(\t\022\n\n\002op\030\007"
      " \001(\r\022\022\n\nparam_list\030\004 \003(\r\"o\n\035GadgetGenera"
      "lRewardInfoNotify\022\021\n\tentity_id\030\r \001(\r\022;\n\023"
      "general_reward_info\030\t \001(\0132\036.proto.Gadget"
      "GeneralRewardInfo\">\n\034GadgetAutoPickDropI"
      "nfoNotify\022\036\n\titem_list\030\013 \003(\0132\013.proto.Ite"
      "m\"\301\001\n(UpdateAbilityCreatedMovingPlatform"
      "Notify\022\021\n\tentity_id\030\004 \001(\r\022G\n\007op_type\030\003 \001"
      "(\01626.proto.UpdateAbilityCreatedMovingPla"
      "tformNotify.OpType\"9\n\006OpType\022\013\n\007OP_NONE\020"
      "\000\022\017\n\013OP_ACTIVATE\020\001\022\021\n\rOP_DEACTIVATE\020\002\"\201\001"
      "\n\rFoundationReq\022\030\n\020gadget_entity_id\030\016 \001("
      "\r\022\027\n\017point_config_id\030\014 \001(\r\022\023\n\013building_i"
      "d\030\r \001(\r\022(\n\007op_type\030\n \001(\0162\027.proto.Foundat"
      "ionOpType\"\222\001\n\rFoundationRsp\022(\n\007op_type\030\r"
      " \001(\0162\027.proto.FoundationOpType\022\030\n\020gadget_"
      "entity_id\030\n \001(\r\022\023\n\013building_id\030\013 \001(\r\022\027\n\017"
      "point_config_id\030\014 \001(\r\022\017\n\007retcode\030\007 \001(\005\"Q"
      "\n\020FoundationNotify\022#\n\004info\030\007 \001(\0132\025.proto"
      ".FoundationInfo\022\030\n\020gadget_entity_id\030\t \001("
      "\r\"Q\n\026GadgetTalkChangeNotify\022\030\n\020gadget_en"
      "tity_id\030\005 \001(\r\022\035\n\025cur_gadget_talk_state\030\017"
      " \001(\r\"\270\001\n\034GadgetChainLevelUpdateNotify\022\\\n"
      "\026gadget_chain_level_map\030\014 \003(\0132<.proto.Ga"
      "dgetChainLevelUpdateNotify.GadgetChainLe"
      "velMapEntry\032:\n\030GadgetChainLevelMapEntry\022"
      "\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\270\001\n\034Gadg"
      "etChainLevelChangeNotify\022\\\n\026gadget_chain"
      "_level_map\030\002 \003(\0132<.proto.GadgetChainLeve"
      "lChangeNotify.GadgetChainLevelMapEntry\032:"
      "\n\030GadgetChainLevelMapEntry\022\013\n\003key\030\001 \001(\r\022"
      "\r\n\005value\030\002 \001(\r:\0028\001\"g\n\022VehicleInteractReq"
      "\0221\n\rinteract_type\030\010 \001(\0162\032.proto.VehicleI"
      "nteractType\022\013\n\003pos\030\014 \001(\r\022\021\n\tentity_id\030\017 "
      "\001(\r\"\221\001\n\022VehicleInteractRsp\0221\n\rinteract_t"
      "ype\030\017 \001(\0162\032.proto.VehicleInteractType\022$\n"
      "\006member\030\003 \001(\0132\024.proto.VehicleMember\022\021\n\te"
      "ntity_id\030\002 \001(\r\022\017\n\007retcode\030\001 \001(\005\"v\n\020Creat"
      "eVehicleReq\022\032\n\003pos\030\013 \001(\0132\r.proto.Vector\022"
      "\022\n\nvehicle_id\030\002 \001(\r\022\026\n\016scene_point_id\030\007 "
      "\001(\r\022\032\n\003rot\030\005 \001(\0132\r.proto.Vector\"J\n\020Creat"
      "eVehicleRsp\022\017\n\007retcode\030\n \001(\005\022\022\n\nvehicle_"
      "id\030\t \001(\r\022\021\n\tentity_id\030\013 \001(\r\"%\n\022RequestLi"
      "veInfoReq\022\017\n\007live_id\030\006 \001(\r\"`\n\022RequestLiv"
      "eInfoRsp\022\026\n\016spare_live_url\030\016 \001(\t\022\017\n\007retc"
      "ode\030\t \001(\005\022\020\n\010live_url\030\014 \001(\t\022\017\n\007live_id\030\002"
      " \001(\r\"\"\n\017LiveStartNotify\022\017\n\007live_id\030\002 \001(\r"
      "\"\225\001\n\022ProjectorOptionReq\022\017\n\007op_type\030\007 \001(\r"
      "\022\021\n\tentity_id\030\n \001(\r\"[\n\017ProjectorOpType\022\025"
      "\n\021PROJECTOR_OP_NONE\020\000\022\027\n\023PROJECTOR_OP_CR"
      "EATE\020\001\022\030\n\024PROJECTOR_OP_DESTROY\020\002\"I\n\022Proj"
      "ectorOptionRsp\022\021\n\tentity_id\030\n \001(\r\022\017\n\007ret"
      "code\030\014 \001(\005\022\017\n\007op_type\030\r \001(\r\" \n\rLiveEndNo"
      "tify\022\017\n\007live_id\030\005 \001(\r\">\n\024VehicleStaminaN"
      "otify\022\021\n\tentity_id\030\006 \001(\r\022\023\n\013cur_stamina\030"
      "\016 \001(\002\"t\n\032GadgetCustomTreeInfoNotify\022<\n\027c"
      "ustom_gadget_tree_info\030\005 \001(\0132\033.proto.Cus"
      "tomGadgetTreeInfo\022\030\n\020gadget_entity_id\030\014 "
      "\001(\r\"\200\001\n\027GadgetChangeLevelTagReq\022\024\n\014level"
      "_tag_id\030\016 \001(\r\0225\n\020combination_info\030\013 \001(\0132"
      "\033.proto.CustomGadgetTreeInfo\022\030\n\020gadget_e"
      "ntity_id\030\n \001(\r\"*\n\027GadgetChangeLevelTagRs"
      "p\022\017\n\007retcode\030\014 \001(\005\"[\n\"NightCrowGadgetObs"
      "ervationMatchReq\022\033\n\023target_gadget_state\030"
      "\003 \001(\r\022\030\n\020gadget_entity_id\030\010 \001(\r\"5\n\"Night"
      "CrowGadgetObservationMatchRsp\022\017\n\007retcode"
      "\030\017 \001(\005\"l\n\027DeshretObeliskChestInfo\022\020\n\010sce"
      "ne_id\030\005 \001(\r\022\032\n\003pos\030\t \001(\0132\r.proto.Vector\022"
      "\020\n\010group_id\030\007 \001(\r\022\021\n\tconfig_id\030\003 \001(\r\"X\n\035"
      "DeshretObeliskChestInfoNotify\0227\n\017chest_i"
      "nfo_list\030\016 \003(\0132\036.proto.DeshretObeliskChe"
      "stInfo*\266\003\n\014InteractType\022\021\n\rINTERACT_NONE"
      "\020\000\022\026\n\022INTERACT_PICK_ITEM\020\001\022\023\n\017INTERACT_G"
      "ATHER\020\002\022\027\n\023INTERACT_OPEN_CHEST\020\003\022\030\n\024INTE"
      "RACT_OPEN_STATUE\020\004\022\023\n\017INTERACT_CONSUM\020\005\022"
      "\033\n\027INTERACT_MP_PLAY_REWARD\020\006\022\021\n\rINTERACT"
      "_VIEW\020\007\022\033\n\027INTERACT_GENERAL_REWARD\020\010\022\031\n\025"
      "INTERACT_MIRACLE_RING\020\t\022\027\n\023INTERACT_FOUN"
      "DATION\020\n\022\027\n\023INTERACT_ECHO_SHELL\020\013\022\030\n\024INT"
      "ERACT_HOME_GATHER\020\014\022\027\n\023INTERACT_ENV_ANIM"
      "AL\020\r\022\031\n\025INTERACT_QUEST_GADGET\020\016\022\030\n\024INTER"
      "ACT_UI_INTERACT\020\017\022\034\n\030INTERACT_DESHRET_OB"
      "ELISK\020\020*6\n\013InterOpType\022\023\n\017INTER_OP_FINIS"
      "H\020\000\022\022\n\016INTER_OP_START\020\001*\311\001\n\rResinCostTyp"
      "e\022\030\n\024RESIN_COST_TYPE_NONE\020\000\022\032\n\026RESIN_COS"
      "T_TYPE_NORMAL\020\001\022\034\n\030RESIN_COST_TYPE_CONDE"
      "NSE\020\002\022%\n!RESIN_COST_TYPE_REUNION_PRIVILE"
      "GE\020\003\022\037\n\033RESIN_COST_TYPE_OP_ACTIVITY\020\004\022\034\n"
      "\030RESIN_COST_TYPE_MATERIAL\020\005*\310\001\n\020Foundati"
      "onOpType\022\026\n\022FOUNDATION_OP_NONE\020\000\022\027\n\023FOUN"
      "DATION_OP_BUILD\020\001\022\034\n\030FOUNDATION_OP_DEMOL"
      "ITION\020\002\022\031\n\025FOUNDATION_OP_REBUILD\020\003\022\030\n\024FO"
      "UNDATION_OP_ROTATE\020\004\022\026\n\022FOUNDATION_OP_LO"
      "CK\020\005\022\030\n\024FOUNDATION_OP_UNLOCK\020\006*c\n\023Vehicl"
      "eInteractType\022\031\n\025VEHICLE_INTERACT_NONE\020\000"
      "\022\027\n\023VEHICLE_INTERACT_IN\020\001\022\030\n\024VEHICLE_INT"
      "ERACT_OUT\020\002B(Z&github.com/teyvat-helper/"
      "hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5381);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_gadget.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fgadget_2eproto

const ::google::protobuf::EnumDescriptor* UpdateAbilityCreatedMovingPlatformNotify_OpType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[0];
}
bool UpdateAbilityCreatedMovingPlatformNotify_OpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify::OP_NONE;
const UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify::OP_ACTIVATE;
const UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify::OP_DEACTIVATE;
const UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify::OpType_MIN;
const UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify::OpType_MAX;
const int UpdateAbilityCreatedMovingPlatformNotify::OpType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProjectorOptionReq_ProjectorOpType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[1];
}
bool ProjectorOptionReq_ProjectorOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProjectorOptionReq_ProjectorOpType ProjectorOptionReq::PROJECTOR_OP_NONE;
const ProjectorOptionReq_ProjectorOpType ProjectorOptionReq::PROJECTOR_OP_CREATE;
const ProjectorOptionReq_ProjectorOpType ProjectorOptionReq::PROJECTOR_OP_DESTROY;
const ProjectorOptionReq_ProjectorOpType ProjectorOptionReq::ProjectorOpType_MIN;
const ProjectorOptionReq_ProjectorOpType ProjectorOptionReq::ProjectorOpType_MAX;
const int ProjectorOptionReq::ProjectorOpType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InteractType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[2];
}
bool InteractType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InterOpType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[3];
}
bool InterOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ResinCostType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[4];
}
bool ResinCostType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FoundationOpType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[5];
}
bool FoundationOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VehicleInteractType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[6];
}
bool VehicleInteractType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetInteractReq::kGadgetIdFieldNumber;
const int GadgetInteractReq::kIsUseCondenseResinFieldNumber;
const int GadgetInteractReq::kOpTypeFieldNumber;
const int GadgetInteractReq::kResinCostTypeFieldNumber;
const int GadgetInteractReq::kUiInteractIdFieldNumber;
const int GadgetInteractReq::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetInteractReq::GadgetInteractReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetInteractReq)
}
GadgetInteractReq::GadgetInteractReq(const GadgetInteractReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&resin_cost_type_, &from.resin_cost_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_use_condense_resin_) -
    reinterpret_cast<char*>(&resin_cost_type_)) + sizeof(is_use_condense_resin_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetInteractReq)
}

void GadgetInteractReq::SharedCtor() {
  ::memset(&resin_cost_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_use_condense_resin_) -
      reinterpret_cast<char*>(&resin_cost_type_)) + sizeof(is_use_condense_resin_));
  _cached_size_ = 0;
}

GadgetInteractReq::~GadgetInteractReq() {
  // @@protoc_insertion_point(destructor:proto.GadgetInteractReq)
  SharedDtor();
}

void GadgetInteractReq::SharedDtor() {
}

void GadgetInteractReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetInteractReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetInteractReq& GadgetInteractReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetInteractReq* GadgetInteractReq::New(::google::protobuf::Arena* arena) const {
  GadgetInteractReq* n = new GadgetInteractReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetInteractReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&resin_cost_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_use_condense_resin_) -
      reinterpret_cast<char*>(&resin_cost_type_)) + sizeof(is_use_condense_resin_));
  _internal_metadata_.Clear();
}

bool GadgetInteractReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetInteractReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ResinCostType resin_cost_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resin_cost_type(static_cast< ::proto::ResinCostType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ui_interact_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ui_interact_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InterOpType op_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::InterOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_use_condense_resin = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_use_condense_resin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetInteractReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetInteractReq)
  return false;
#undef DO_
}

void GadgetInteractReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResinCostType resin_cost_type = 1;
  if (this->resin_cost_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->resin_cost_type(), output);
  }

  // uint32 ui_interact_id = 2;
  if (this->ui_interact_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ui_interact_id(), output);
  }

  // uint32 gadget_entity_id = 4;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gadget_entity_id(), output);
  }

  // .proto.InterOpType op_type = 5;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->op_type(), output);
  }

  // uint32 gadget_id = 8;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->gadget_id(), output);
  }

  // bool is_use_condense_resin = 15;
  if (this->is_use_condense_resin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_use_condense_resin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetInteractReq)
}

::google::protobuf::uint8* GadgetInteractReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResinCostType resin_cost_type = 1;
  if (this->resin_cost_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->resin_cost_type(), target);
  }

  // uint32 ui_interact_id = 2;
  if (this->ui_interact_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ui_interact_id(), target);
  }

  // uint32 gadget_entity_id = 4;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gadget_entity_id(), target);
  }

  // .proto.InterOpType op_type = 5;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->op_type(), target);
  }

  // uint32 gadget_id = 8;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->gadget_id(), target);
  }

  // bool is_use_condense_resin = 15;
  if (this->is_use_condense_resin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_use_condense_resin(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetInteractReq)
  return target;
}

size_t GadgetInteractReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetInteractReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ResinCostType resin_cost_type = 1;
  if (this->resin_cost_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resin_cost_type());
  }

  // uint32 ui_interact_id = 2;
  if (this->ui_interact_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ui_interact_id());
  }

  // uint32 gadget_entity_id = 4;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // .proto.InterOpType op_type = 5;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 gadget_id = 8;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  // bool is_use_condense_resin = 15;
  if (this->is_use_condense_resin() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetInteractReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetInteractReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetInteractReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetInteractReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetInteractReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetInteractReq)
    MergeFrom(*source);
  }
}

void GadgetInteractReq::MergeFrom(const GadgetInteractReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetInteractReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resin_cost_type() != 0) {
    set_resin_cost_type(from.resin_cost_type());
  }
  if (from.ui_interact_id() != 0) {
    set_ui_interact_id(from.ui_interact_id());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
  if (from.is_use_condense_resin() != 0) {
    set_is_use_condense_resin(from.is_use_condense_resin());
  }
}

void GadgetInteractReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetInteractReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetInteractReq::CopyFrom(const GadgetInteractReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetInteractReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetInteractReq::IsInitialized() const {
  return true;
}

void GadgetInteractReq::Swap(GadgetInteractReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetInteractReq::InternalSwap(GadgetInteractReq* other) {
  using std::swap;
  swap(resin_cost_type_, other->resin_cost_type_);
  swap(ui_interact_id_, other->ui_interact_id_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(op_type_, other->op_type_);
  swap(gadget_id_, other->gadget_id_);
  swap(is_use_condense_resin_, other->is_use_condense_resin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetInteractReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetInteractReq

// uint32 gadget_id = 8;
void GadgetInteractReq::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractReq::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.gadget_id)
  return gadget_id_;
}
void GadgetInteractReq::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.gadget_id)
}

// bool is_use_condense_resin = 15;
void GadgetInteractReq::clear_is_use_condense_resin() {
  is_use_condense_resin_ = false;
}
bool GadgetInteractReq::is_use_condense_resin() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.is_use_condense_resin)
  return is_use_condense_resin_;
}
void GadgetInteractReq::set_is_use_condense_resin(bool value) {
  
  is_use_condense_resin_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.is_use_condense_resin)
}

// .proto.InterOpType op_type = 5;
void GadgetInteractReq::clear_op_type() {
  op_type_ = 0;
}
::proto::InterOpType GadgetInteractReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
void GadgetInteractReq::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.op_type)
}

// .proto.ResinCostType resin_cost_type = 1;
void GadgetInteractReq::clear_resin_cost_type() {
  resin_cost_type_ = 0;
}
::proto::ResinCostType GadgetInteractReq::resin_cost_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.resin_cost_type)
  return static_cast< ::proto::ResinCostType >(resin_cost_type_);
}
void GadgetInteractReq::set_resin_cost_type(::proto::ResinCostType value) {
  
  resin_cost_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.resin_cost_type)
}

// uint32 ui_interact_id = 2;
void GadgetInteractReq::clear_ui_interact_id() {
  ui_interact_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractReq::ui_interact_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.ui_interact_id)
  return ui_interact_id_;
}
void GadgetInteractReq::set_ui_interact_id(::google::protobuf::uint32 value) {
  
  ui_interact_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.ui_interact_id)
}

// uint32 gadget_entity_id = 4;
void GadgetInteractReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetInteractReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetInteractRsp::kGadgetEntityIdFieldNumber;
const int GadgetInteractRsp::kInteractTypeFieldNumber;
const int GadgetInteractRsp::kOpTypeFieldNumber;
const int GadgetInteractRsp::kRetcodeFieldNumber;
const int GadgetInteractRsp::kGadgetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetInteractRsp::GadgetInteractRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetInteractRsp)
}
GadgetInteractRsp::GadgetInteractRsp(const GadgetInteractRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&interact_type_, &from.interact_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_entity_id_) -
    reinterpret_cast<char*>(&interact_type_)) + sizeof(gadget_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetInteractRsp)
}

void GadgetInteractRsp::SharedCtor() {
  ::memset(&interact_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&interact_type_)) + sizeof(gadget_entity_id_));
  _cached_size_ = 0;
}

GadgetInteractRsp::~GadgetInteractRsp() {
  // @@protoc_insertion_point(destructor:proto.GadgetInteractRsp)
  SharedDtor();
}

void GadgetInteractRsp::SharedDtor() {
}

void GadgetInteractRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetInteractRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetInteractRsp& GadgetInteractRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetInteractRsp* GadgetInteractRsp::New(::google::protobuf::Arena* arena) const {
  GadgetInteractRsp* n = new GadgetInteractRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetInteractRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interact_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&interact_type_)) + sizeof(gadget_entity_id_));
  _internal_metadata_.Clear();
}

bool GadgetInteractRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetInteractRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.InteractType interact_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interact_type(static_cast< ::proto::InteractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InterOpType op_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::InterOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetInteractRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetInteractRsp)
  return false;
#undef DO_
}

void GadgetInteractRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.InteractType interact_type = 2;
  if (this->interact_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->interact_type(), output);
  }

  // .proto.InterOpType op_type = 3;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->op_type(), output);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->gadget_entity_id(), output);
  }

  // uint32 gadget_id = 15;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetInteractRsp)
}

::google::protobuf::uint8* GadgetInteractRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.InteractType interact_type = 2;
  if (this->interact_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->interact_type(), target);
  }

  // .proto.InterOpType op_type = 3;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->op_type(), target);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->gadget_entity_id(), target);
  }

  // uint32 gadget_id = 15;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetInteractRsp)
  return target;
}

size_t GadgetInteractRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetInteractRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.InteractType interact_type = 2;
  if (this->interact_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interact_type());
  }

  // .proto.InterOpType op_type = 3;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 gadget_id = 15;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetInteractRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetInteractRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetInteractRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetInteractRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetInteractRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetInteractRsp)
    MergeFrom(*source);
  }
}

void GadgetInteractRsp::MergeFrom(const GadgetInteractRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetInteractRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interact_type() != 0) {
    set_interact_type(from.interact_type());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void GadgetInteractRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetInteractRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetInteractRsp::CopyFrom(const GadgetInteractRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetInteractRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetInteractRsp::IsInitialized() const {
  return true;
}

void GadgetInteractRsp::Swap(GadgetInteractRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetInteractRsp::InternalSwap(GadgetInteractRsp* other) {
  using std::swap;
  swap(interact_type_, other->interact_type_);
  swap(op_type_, other->op_type_);
  swap(gadget_id_, other->gadget_id_);
  swap(retcode_, other->retcode_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetInteractRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetInteractRsp

// uint32 gadget_entity_id = 10;
void GadgetInteractRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetInteractRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.gadget_entity_id)
}

// .proto.InteractType interact_type = 2;
void GadgetInteractRsp::clear_interact_type() {
  interact_type_ = 0;
}
::proto::InteractType GadgetInteractRsp::interact_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.interact_type)
  return static_cast< ::proto::InteractType >(interact_type_);
}
void GadgetInteractRsp::set_interact_type(::proto::InteractType value) {
  
  interact_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.interact_type)
}

// .proto.InterOpType op_type = 3;
void GadgetInteractRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::InterOpType GadgetInteractRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
void GadgetInteractRsp::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.op_type)
}

// int32 retcode = 7;
void GadgetInteractRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GadgetInteractRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.retcode)
  return retcode_;
}
void GadgetInteractRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.retcode)
}

// uint32 gadget_id = 15;
void GadgetInteractRsp::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractRsp::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.gadget_id)
  return gadget_id_;
}
void GadgetInteractRsp::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.gadget_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetStateNotify::kGadgetEntityIdFieldNumber;
const int GadgetStateNotify::kGadgetStateFieldNumber;
const int GadgetStateNotify::kIsEnableInteractFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetStateNotify::GadgetStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetStateNotify)
}
GadgetStateNotify::GadgetStateNotify(const GadgetStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_state_, &from.gadget_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_enable_interact_) -
    reinterpret_cast<char*>(&gadget_state_)) + sizeof(is_enable_interact_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetStateNotify)
}

void GadgetStateNotify::SharedCtor() {
  ::memset(&gadget_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_enable_interact_) -
      reinterpret_cast<char*>(&gadget_state_)) + sizeof(is_enable_interact_));
  _cached_size_ = 0;
}

GadgetStateNotify::~GadgetStateNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetStateNotify)
  SharedDtor();
}

void GadgetStateNotify::SharedDtor() {
}

void GadgetStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetStateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetStateNotify& GadgetStateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetStateNotify* GadgetStateNotify::New(::google::protobuf::Arena* arena) const {
  GadgetStateNotify* n = new GadgetStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_enable_interact_) -
      reinterpret_cast<char*>(&gadget_state_)) + sizeof(is_enable_interact_));
  _internal_metadata_.Clear();
}

bool GadgetStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_enable_interact = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_enable_interact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetStateNotify)
  return false;
#undef DO_
}

void GadgetStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_state = 3;
  if (this->gadget_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gadget_state(), output);
  }

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gadget_entity_id(), output);
  }

  // bool is_enable_interact = 11;
  if (this->is_enable_interact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_enable_interact(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetStateNotify)
}

::google::protobuf::uint8* GadgetStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_state = 3;
  if (this->gadget_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gadget_state(), target);
  }

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gadget_entity_id(), target);
  }

  // bool is_enable_interact = 11;
  if (this->is_enable_interact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_enable_interact(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetStateNotify)
  return target;
}

size_t GadgetStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetStateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_state = 3;
  if (this->gadget_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_state());
  }

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // bool is_enable_interact = 11;
  if (this->is_enable_interact() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetStateNotify)
    MergeFrom(*source);
  }
}

void GadgetStateNotify::MergeFrom(const GadgetStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_state() != 0) {
    set_gadget_state(from.gadget_state());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.is_enable_interact() != 0) {
    set_is_enable_interact(from.is_enable_interact());
  }
}

void GadgetStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetStateNotify::CopyFrom(const GadgetStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetStateNotify::IsInitialized() const {
  return true;
}

void GadgetStateNotify::Swap(GadgetStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetStateNotify::InternalSwap(GadgetStateNotify* other) {
  using std::swap;
  swap(gadget_state_, other->gadget_state_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(is_enable_interact_, other->is_enable_interact_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetStateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetStateNotify

// uint32 gadget_entity_id = 5;
void GadgetStateNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetStateNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetStateNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.gadget_entity_id)
}

// uint32 gadget_state = 3;
void GadgetStateNotify::clear_gadget_state() {
  gadget_state_ = 0u;
}
::google::protobuf::uint32 GadgetStateNotify::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.gadget_state)
  return gadget_state_;
}
void GadgetStateNotify::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.gadget_state)
}

// bool is_enable_interact = 11;
void GadgetStateNotify::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
bool GadgetStateNotify::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.is_enable_interact)
  return is_enable_interact_;
}
void GadgetStateNotify::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.is_enable_interact)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorktopOptionNotify::kGadgetEntityIdFieldNumber;
const int WorktopOptionNotify::kOptionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorktopOptionNotify::WorktopOptionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorktopOptionNotify)
}
WorktopOptionNotify::WorktopOptionNotify(const WorktopOptionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      option_list_(from.option_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gadget_entity_id_ = from.gadget_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.WorktopOptionNotify)
}

void WorktopOptionNotify::SharedCtor() {
  gadget_entity_id_ = 0u;
  _cached_size_ = 0;
}

WorktopOptionNotify::~WorktopOptionNotify() {
  // @@protoc_insertion_point(destructor:proto.WorktopOptionNotify)
  SharedDtor();
}

void WorktopOptionNotify::SharedDtor() {
}

void WorktopOptionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorktopOptionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorktopOptionNotify& WorktopOptionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorktopOptionNotify* WorktopOptionNotify::New(::google::protobuf::Arena* arena) const {
  WorktopOptionNotify* n = new WorktopOptionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorktopOptionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorktopOptionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  option_list_.Clear();
  gadget_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool WorktopOptionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorktopOptionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 option_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_option_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_option_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorktopOptionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorktopOptionNotify)
  return false;
#undef DO_
}

void WorktopOptionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorktopOptionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 option_list = 8;
  if (this->option_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _option_list_cached_byte_size_));
  }
  for (int i = 0, n = this->option_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->option_list(i), output);
  }

  // uint32 gadget_entity_id = 11;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->gadget_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorktopOptionNotify)
}

::google::protobuf::uint8* WorktopOptionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorktopOptionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 option_list = 8;
  if (this->option_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _option_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->option_list_, target);
  }

  // uint32 gadget_entity_id = 11;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->gadget_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorktopOptionNotify)
  return target;
}

size_t WorktopOptionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorktopOptionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 option_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->option_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _option_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 gadget_entity_id = 11;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorktopOptionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorktopOptionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorktopOptionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorktopOptionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorktopOptionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorktopOptionNotify)
    MergeFrom(*source);
  }
}

void WorktopOptionNotify::MergeFrom(const WorktopOptionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorktopOptionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  option_list_.MergeFrom(from.option_list_);
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void WorktopOptionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorktopOptionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorktopOptionNotify::CopyFrom(const WorktopOptionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorktopOptionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorktopOptionNotify::IsInitialized() const {
  return true;
}

void WorktopOptionNotify::Swap(WorktopOptionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorktopOptionNotify::InternalSwap(WorktopOptionNotify* other) {
  using std::swap;
  option_list_.InternalSwap(&other->option_list_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorktopOptionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorktopOptionNotify

// uint32 gadget_entity_id = 11;
void WorktopOptionNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 WorktopOptionNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WorktopOptionNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void WorktopOptionNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorktopOptionNotify.gadget_entity_id)
}

// repeated uint32 option_list = 8;
int WorktopOptionNotify::option_list_size() const {
  return option_list_.size();
}
void WorktopOptionNotify::clear_option_list() {
  option_list_.Clear();
}
::google::protobuf::uint32 WorktopOptionNotify::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorktopOptionNotify.option_list)
  return option_list_.Get(index);
}
void WorktopOptionNotify::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorktopOptionNotify.option_list)
}
void WorktopOptionNotify::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorktopOptionNotify.option_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorktopOptionNotify::option_list() const {
  // @@protoc_insertion_point(field_list:proto.WorktopOptionNotify.option_list)
  return option_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorktopOptionNotify::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorktopOptionNotify.option_list)
  return &option_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectWorktopOptionReq::kGadgetEntityIdFieldNumber;
const int SelectWorktopOptionReq::kOptionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectWorktopOptionReq::SelectWorktopOptionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SelectWorktopOptionReq)
}
SelectWorktopOptionReq::SelectWorktopOptionReq(const SelectWorktopOptionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&option_id_, &from.option_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_entity_id_) -
    reinterpret_cast<char*>(&option_id_)) + sizeof(gadget_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SelectWorktopOptionReq)
}

void SelectWorktopOptionReq::SharedCtor() {
  ::memset(&option_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&option_id_)) + sizeof(gadget_entity_id_));
  _cached_size_ = 0;
}

SelectWorktopOptionReq::~SelectWorktopOptionReq() {
  // @@protoc_insertion_point(destructor:proto.SelectWorktopOptionReq)
  SharedDtor();
}

void SelectWorktopOptionReq::SharedDtor() {
}

void SelectWorktopOptionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectWorktopOptionReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectWorktopOptionReq& SelectWorktopOptionReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectWorktopOptionReq* SelectWorktopOptionReq::New(::google::protobuf::Arena* arena) const {
  SelectWorktopOptionReq* n = new SelectWorktopOptionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectWorktopOptionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SelectWorktopOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&option_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&option_id_)) + sizeof(gadget_entity_id_));
  _internal_metadata_.Clear();
}

bool SelectWorktopOptionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SelectWorktopOptionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 option_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &option_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SelectWorktopOptionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SelectWorktopOptionReq)
  return false;
#undef DO_
}

void SelectWorktopOptionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SelectWorktopOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 option_id = 11;
  if (this->option_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->option_id(), output);
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->gadget_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SelectWorktopOptionReq)
}

::google::protobuf::uint8* SelectWorktopOptionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SelectWorktopOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 option_id = 11;
  if (this->option_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->option_id(), target);
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->gadget_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SelectWorktopOptionReq)
  return target;
}

size_t SelectWorktopOptionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SelectWorktopOptionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 option_id = 11;
  if (this->option_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->option_id());
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectWorktopOptionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SelectWorktopOptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectWorktopOptionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectWorktopOptionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SelectWorktopOptionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SelectWorktopOptionReq)
    MergeFrom(*source);
  }
}

void SelectWorktopOptionReq::MergeFrom(const SelectWorktopOptionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SelectWorktopOptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.option_id() != 0) {
    set_option_id(from.option_id());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void SelectWorktopOptionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SelectWorktopOptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectWorktopOptionReq::CopyFrom(const SelectWorktopOptionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SelectWorktopOptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectWorktopOptionReq::IsInitialized() const {
  return true;
}

void SelectWorktopOptionReq::Swap(SelectWorktopOptionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectWorktopOptionReq::InternalSwap(SelectWorktopOptionReq* other) {
  using std::swap;
  swap(option_id_, other->option_id_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectWorktopOptionReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectWorktopOptionReq

// uint32 gadget_entity_id = 12;
void SelectWorktopOptionReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionReq.gadget_entity_id)
  return gadget_entity_id_;
}
void SelectWorktopOptionReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionReq.gadget_entity_id)
}

// uint32 option_id = 11;
void SelectWorktopOptionReq::clear_option_id() {
  option_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionReq::option_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionReq.option_id)
  return option_id_;
}
void SelectWorktopOptionReq::set_option_id(::google::protobuf::uint32 value) {
  
  option_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionReq.option_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectWorktopOptionRsp::kGadgetEntityIdFieldNumber;
const int SelectWorktopOptionRsp::kOptionIdFieldNumber;
const int SelectWorktopOptionRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectWorktopOptionRsp::SelectWorktopOptionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SelectWorktopOptionRsp)
}
SelectWorktopOptionRsp::SelectWorktopOptionRsp(const SelectWorktopOptionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_entity_id_, &from.gadget_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&option_id_) -
    reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(option_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SelectWorktopOptionRsp)
}

void SelectWorktopOptionRsp::SharedCtor() {
  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(option_id_));
  _cached_size_ = 0;
}

SelectWorktopOptionRsp::~SelectWorktopOptionRsp() {
  // @@protoc_insertion_point(destructor:proto.SelectWorktopOptionRsp)
  SharedDtor();
}

void SelectWorktopOptionRsp::SharedDtor() {
}

void SelectWorktopOptionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectWorktopOptionRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectWorktopOptionRsp& SelectWorktopOptionRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectWorktopOptionRsp* SelectWorktopOptionRsp::New(::google::protobuf::Arena* arena) const {
  SelectWorktopOptionRsp* n = new SelectWorktopOptionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectWorktopOptionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SelectWorktopOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(option_id_));
  _internal_metadata_.Clear();
}

bool SelectWorktopOptionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SelectWorktopOptionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 option_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &option_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SelectWorktopOptionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SelectWorktopOptionRsp)
  return false;
#undef DO_
}

void SelectWorktopOptionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SelectWorktopOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // uint32 option_id = 7;
  if (this->option_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->option_id(), output);
  }

  // uint32 gadget_entity_id = 13;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->gadget_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SelectWorktopOptionRsp)
}

::google::protobuf::uint8* SelectWorktopOptionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SelectWorktopOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // uint32 option_id = 7;
  if (this->option_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->option_id(), target);
  }

  // uint32 gadget_entity_id = 13;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->gadget_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SelectWorktopOptionRsp)
  return target;
}

size_t SelectWorktopOptionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SelectWorktopOptionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_entity_id = 13;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // int32 retcode = 4;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 option_id = 7;
  if (this->option_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->option_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectWorktopOptionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SelectWorktopOptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectWorktopOptionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectWorktopOptionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SelectWorktopOptionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SelectWorktopOptionRsp)
    MergeFrom(*source);
  }
}

void SelectWorktopOptionRsp::MergeFrom(const SelectWorktopOptionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SelectWorktopOptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.option_id() != 0) {
    set_option_id(from.option_id());
  }
}

void SelectWorktopOptionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SelectWorktopOptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectWorktopOptionRsp::CopyFrom(const SelectWorktopOptionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SelectWorktopOptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectWorktopOptionRsp::IsInitialized() const {
  return true;
}

void SelectWorktopOptionRsp::Swap(SelectWorktopOptionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectWorktopOptionRsp::InternalSwap(SelectWorktopOptionRsp* other) {
  using std::swap;
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(retcode_, other->retcode_);
  swap(option_id_, other->option_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectWorktopOptionRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectWorktopOptionRsp

// uint32 gadget_entity_id = 13;
void SelectWorktopOptionRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.gadget_entity_id)
  return gadget_entity_id_;
}
void SelectWorktopOptionRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.gadget_entity_id)
}

// uint32 option_id = 7;
void SelectWorktopOptionRsp::clear_option_id() {
  option_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionRsp::option_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.option_id)
  return option_id_;
}
void SelectWorktopOptionRsp::set_option_id(::google::protobuf::uint32 value) {
  
  option_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.option_id)
}

// int32 retcode = 4;
void SelectWorktopOptionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SelectWorktopOptionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.retcode)
  return retcode_;
}
void SelectWorktopOptionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BossChestActivateNotify::kQualifyUidListFieldNumber;
const int BossChestActivateNotify::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BossChestActivateNotify::BossChestActivateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BossChestActivateNotify)
}
BossChestActivateNotify::BossChestActivateNotify(const BossChestActivateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      qualify_uid_list_(from.qualify_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.BossChestActivateNotify)
}

void BossChestActivateNotify::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

BossChestActivateNotify::~BossChestActivateNotify() {
  // @@protoc_insertion_point(destructor:proto.BossChestActivateNotify)
  SharedDtor();
}

void BossChestActivateNotify::SharedDtor() {
}

void BossChestActivateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BossChestActivateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BossChestActivateNotify& BossChestActivateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

BossChestActivateNotify* BossChestActivateNotify::New(::google::protobuf::Arena* arena) const {
  BossChestActivateNotify* n = new BossChestActivateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BossChestActivateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BossChestActivateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  qualify_uid_list_.Clear();
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BossChestActivateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BossChestActivateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 qualify_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qualify_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_qualify_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BossChestActivateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BossChestActivateNotify)
  return false;
#undef DO_
}

void BossChestActivateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BossChestActivateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 qualify_uid_list = 1;
  if (this->qualify_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _qualify_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->qualify_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->qualify_uid_list(i), output);
  }

  // uint32 entity_id = 12;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BossChestActivateNotify)
}

::google::protobuf::uint8* BossChestActivateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BossChestActivateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 qualify_uid_list = 1;
  if (this->qualify_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _qualify_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->qualify_uid_list_, target);
  }

  // uint32 entity_id = 12;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BossChestActivateNotify)
  return target;
}

size_t BossChestActivateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BossChestActivateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 qualify_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->qualify_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _qualify_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 entity_id = 12;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BossChestActivateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BossChestActivateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BossChestActivateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BossChestActivateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BossChestActivateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BossChestActivateNotify)
    MergeFrom(*source);
  }
}

void BossChestActivateNotify::MergeFrom(const BossChestActivateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BossChestActivateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  qualify_uid_list_.MergeFrom(from.qualify_uid_list_);
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void BossChestActivateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BossChestActivateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BossChestActivateNotify::CopyFrom(const BossChestActivateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BossChestActivateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BossChestActivateNotify::IsInitialized() const {
  return true;
}

void BossChestActivateNotify::Swap(BossChestActivateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BossChestActivateNotify::InternalSwap(BossChestActivateNotify* other) {
  using std::swap;
  qualify_uid_list_.InternalSwap(&other->qualify_uid_list_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BossChestActivateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BossChestActivateNotify

// repeated uint32 qualify_uid_list = 1;
int BossChestActivateNotify::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
void BossChestActivateNotify::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
::google::protobuf::uint32 BossChestActivateNotify::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestActivateNotify.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
void BossChestActivateNotify::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestActivateNotify.qualify_uid_list)
}
void BossChestActivateNotify::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestActivateNotify.qualify_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestActivateNotify::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestActivateNotify.qualify_uid_list)
  return qualify_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestActivateNotify::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestActivateNotify.qualify_uid_list)
  return &qualify_uid_list_;
}

// uint32 entity_id = 12;
void BossChestActivateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 BossChestActivateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BossChestActivateNotify.entity_id)
  return entity_id_;
}
void BossChestActivateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestActivateNotify.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomChestInfoNotify::kEntityIdFieldNumber;
const int BlossomChestInfoNotify::kBlossomChestInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomChestInfoNotify::BlossomChestInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomChestInfoNotify)
}
BlossomChestInfoNotify::BlossomChestInfoNotify(const BlossomChestInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_blossom_chest_info()) {
    blossom_chest_info_ = new ::proto::BlossomChestInfo(*from.blossom_chest_info_);
  } else {
    blossom_chest_info_ = NULL;
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.BlossomChestInfoNotify)
}

void BlossomChestInfoNotify::SharedCtor() {
  ::memset(&blossom_chest_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&blossom_chest_info_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

BlossomChestInfoNotify::~BlossomChestInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.BlossomChestInfoNotify)
  SharedDtor();
}

void BlossomChestInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete blossom_chest_info_;
}

void BlossomChestInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomChestInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomChestInfoNotify& BlossomChestInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomChestInfoNotify* BlossomChestInfoNotify::New(::google::protobuf::Arena* arena) const {
  BlossomChestInfoNotify* n = new BlossomChestInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomChestInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && blossom_chest_info_ != NULL) {
    delete blossom_chest_info_;
  }
  blossom_chest_info_ = NULL;
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BlossomChestInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomChestInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.BlossomChestInfo blossom_chest_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blossom_chest_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomChestInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomChestInfoNotify)
  return false;
#undef DO_
}

void BlossomChestInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BlossomChestInfo blossom_chest_info = 3;
  if (this->has_blossom_chest_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->blossom_chest_info_, output);
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomChestInfoNotify)
}

::google::protobuf::uint8* BlossomChestInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BlossomChestInfo blossom_chest_info = 3;
  if (this->has_blossom_chest_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->blossom_chest_info_, deterministic, target);
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomChestInfoNotify)
  return target;
}

size_t BlossomChestInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomChestInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.BlossomChestInfo blossom_chest_info = 3;
  if (this->has_blossom_chest_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->blossom_chest_info_);
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomChestInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomChestInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomChestInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomChestInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomChestInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomChestInfoNotify)
    MergeFrom(*source);
  }
}

void BlossomChestInfoNotify::MergeFrom(const BlossomChestInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomChestInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_blossom_chest_info()) {
    mutable_blossom_chest_info()->::proto::BlossomChestInfo::MergeFrom(from.blossom_chest_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void BlossomChestInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomChestInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomChestInfoNotify::CopyFrom(const BlossomChestInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomChestInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomChestInfoNotify::IsInitialized() const {
  return true;
}

void BlossomChestInfoNotify::Swap(BlossomChestInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomChestInfoNotify::InternalSwap(BlossomChestInfoNotify* other) {
  using std::swap;
  swap(blossom_chest_info_, other->blossom_chest_info_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomChestInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomChestInfoNotify

// uint32 entity_id = 9;
void BlossomChestInfoNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 BlossomChestInfoNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfoNotify.entity_id)
  return entity_id_;
}
void BlossomChestInfoNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfoNotify.entity_id)
}

// .proto.BlossomChestInfo blossom_chest_info = 3;
bool BlossomChestInfoNotify::has_blossom_chest_info() const {
  return this != internal_default_instance() && blossom_chest_info_ != NULL;
}
void BlossomChestInfoNotify::clear_blossom_chest_info() {
  if (GetArenaNoVirtual() == NULL && blossom_chest_info_ != NULL) delete blossom_chest_info_;
  blossom_chest_info_ = NULL;
}
const ::proto::BlossomChestInfo& BlossomChestInfoNotify::blossom_chest_info() const {
  const ::proto::BlossomChestInfo* p = blossom_chest_info_;
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfoNotify.blossom_chest_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BlossomChestInfo*>(
      &::proto::_BlossomChestInfo_default_instance_);
}
::proto::BlossomChestInfo* BlossomChestInfoNotify::mutable_blossom_chest_info() {
  
  if (blossom_chest_info_ == NULL) {
    blossom_chest_info_ = new ::proto::BlossomChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.BlossomChestInfoNotify.blossom_chest_info)
  return blossom_chest_info_;
}
::proto::BlossomChestInfo* BlossomChestInfoNotify::release_blossom_chest_info() {
  // @@protoc_insertion_point(field_release:proto.BlossomChestInfoNotify.blossom_chest_info)
  
  ::proto::BlossomChestInfo* temp = blossom_chest_info_;
  blossom_chest_info_ = NULL;
  return temp;
}
void BlossomChestInfoNotify::set_allocated_blossom_chest_info(::proto::BlossomChestInfo* blossom_chest_info) {
  delete blossom_chest_info_;
  blossom_chest_info_ = blossom_chest_info;
  if (blossom_chest_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BlossomChestInfoNotify.blossom_chest_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetPlayStartNotify::kStartTimeFieldNumber;
const int GadgetPlayStartNotify::kEntityIdFieldNumber;
const int GadgetPlayStartNotify::kPlayTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetPlayStartNotify::GadgetPlayStartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetPlayStartNotify)
}
GadgetPlayStartNotify::GadgetPlayStartNotify(const GadgetPlayStartNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(start_time_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetPlayStartNotify)
}

void GadgetPlayStartNotify::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(start_time_));
  _cached_size_ = 0;
}

GadgetPlayStartNotify::~GadgetPlayStartNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetPlayStartNotify)
  SharedDtor();
}

void GadgetPlayStartNotify::SharedDtor() {
}

void GadgetPlayStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetPlayStartNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetPlayStartNotify& GadgetPlayStartNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetPlayStartNotify* GadgetPlayStartNotify::New(::google::protobuf::Arena* arena) const {
  GadgetPlayStartNotify* n = new GadgetPlayStartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetPlayStartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetPlayStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(start_time_));
  _internal_metadata_.Clear();
}

bool GadgetPlayStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetPlayStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 play_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &play_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetPlayStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetPlayStartNotify)
  return false;
#undef DO_
}

void GadgetPlayStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetPlayStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 play_type = 8;
  if (this->play_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->play_type(), output);
  }

  // uint32 start_time = 14;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->start_time(), output);
  }

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetPlayStartNotify)
}

::google::protobuf::uint8* GadgetPlayStartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetPlayStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 play_type = 8;
  if (this->play_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->play_type(), target);
  }

  // uint32 start_time = 14;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->start_time(), target);
  }

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetPlayStartNotify)
  return target;
}

size_t GadgetPlayStartNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetPlayStartNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 play_type = 8;
  if (this->play_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->play_type());
  }

  // uint32 start_time = 14;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetPlayStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetPlayStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetPlayStartNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetPlayStartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetPlayStartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetPlayStartNotify)
    MergeFrom(*source);
  }
}

void GadgetPlayStartNotify::MergeFrom(const GadgetPlayStartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetPlayStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.play_type() != 0) {
    set_play_type(from.play_type());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
}

void GadgetPlayStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetPlayStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetPlayStartNotify::CopyFrom(const GadgetPlayStartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetPlayStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetPlayStartNotify::IsInitialized() const {
  return true;
}

void GadgetPlayStartNotify::Swap(GadgetPlayStartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetPlayStartNotify::InternalSwap(GadgetPlayStartNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(play_type_, other->play_type_);
  swap(start_time_, other->start_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetPlayStartNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetPlayStartNotify

// uint32 start_time = 14;
void GadgetPlayStartNotify::clear_start_time() {
  start_time_ = 0u;
}
::google::protobuf::uint32 GadgetPlayStartNotify::start_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStartNotify.start_time)
  return start_time_;
}
void GadgetPlayStartNotify::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStartNotify.start_time)
}

// uint32 entity_id = 15;
void GadgetPlayStartNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetPlayStartNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStartNotify.entity_id)
  return entity_id_;
}
void GadgetPlayStartNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStartNotify.entity_id)
}

// uint32 play_type = 8;
void GadgetPlayStartNotify::clear_play_type() {
  play_type_ = 0u;
}
::google::protobuf::uint32 GadgetPlayStartNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStartNotify.play_type)
  return play_type_;
}
void GadgetPlayStartNotify::set_play_type(::google::protobuf::uint32 value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStartNotify.play_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetPlayUidInfo::kProfilePictureFieldNumber;
const int GadgetPlayUidInfo::kBattleWatcherIdFieldNumber;
const int GadgetPlayUidInfo::kUidFieldNumber;
const int GadgetPlayUidInfo::kIconFieldNumber;
const int GadgetPlayUidInfo::kScoreFieldNumber;
const int GadgetPlayUidInfo::kNicknameFieldNumber;
const int GadgetPlayUidInfo::kOnlineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetPlayUidInfo::GadgetPlayUidInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetPlayUidInfo)
}
GadgetPlayUidInfo::GadgetPlayUidInfo(const GadgetPlayUidInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_id().size() > 0) {
    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.has_profile_picture()) {
    profile_picture_ = new ::proto::ProfilePicture(*from.profile_picture_);
  } else {
    profile_picture_ = NULL;
  }
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&icon_) -
    reinterpret_cast<char*>(&score_)) + sizeof(icon_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetPlayUidInfo)
}

void GadgetPlayUidInfo::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&profile_picture_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icon_) -
      reinterpret_cast<char*>(&profile_picture_)) + sizeof(icon_));
  _cached_size_ = 0;
}

GadgetPlayUidInfo::~GadgetPlayUidInfo() {
  // @@protoc_insertion_point(destructor:proto.GadgetPlayUidInfo)
  SharedDtor();
}

void GadgetPlayUidInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete profile_picture_;
}

void GadgetPlayUidInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetPlayUidInfo::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetPlayUidInfo& GadgetPlayUidInfo::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetPlayUidInfo* GadgetPlayUidInfo::New(::google::protobuf::Arena* arena) const {
  GadgetPlayUidInfo* n = new GadgetPlayUidInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetPlayUidInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetPlayUidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) {
    delete profile_picture_;
  }
  profile_picture_ = NULL;
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icon_) -
      reinterpret_cast<char*>(&score_)) + sizeof(icon_));
  _internal_metadata_.Clear();
}

bool GadgetPlayUidInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetPlayUidInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ProfilePicture profile_picture = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GadgetPlayUidInfo.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 battle_watcher_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battle_watcher_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string online_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->online_id().data(), static_cast<int>(this->online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GadgetPlayUidInfo.online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 icon = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetPlayUidInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetPlayUidInfo)
  return false;
#undef DO_
}

void GadgetPlayUidInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetPlayUidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ProfilePicture profile_picture = 2;
  if (this->has_profile_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->profile_picture_, output);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GadgetPlayUidInfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // uint32 score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->score(), output);
  }

  // uint32 battle_watcher_id = 6;
  if (this->battle_watcher_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->battle_watcher_id(), output);
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uid(), output);
  }

  // string online_id = 8;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GadgetPlayUidInfo.online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->online_id(), output);
  }

  // uint32 icon = 14;
  if (this->icon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->icon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetPlayUidInfo)
}

::google::protobuf::uint8* GadgetPlayUidInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetPlayUidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ProfilePicture profile_picture = 2;
  if (this->has_profile_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->profile_picture_, deterministic, target);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GadgetPlayUidInfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // uint32 score = 4;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->score(), target);
  }

  // uint32 battle_watcher_id = 6;
  if (this->battle_watcher_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->battle_watcher_id(), target);
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uid(), target);
  }

  // string online_id = 8;
  if (this->online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->online_id().data(), static_cast<int>(this->online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GadgetPlayUidInfo.online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->online_id(), target);
  }

  // uint32 icon = 14;
  if (this->icon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->icon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetPlayUidInfo)
  return target;
}

size_t GadgetPlayUidInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetPlayUidInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 3;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string online_id = 8;
  if (this->online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_id());
  }

  // .proto.ProfilePicture profile_picture = 2;
  if (this->has_profile_picture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_);
  }

  // uint32 score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  // uint32 battle_watcher_id = 6;
  if (this->battle_watcher_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battle_watcher_id());
  }

  // uint32 uid = 7;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 icon = 14;
  if (this->icon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icon());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetPlayUidInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetPlayUidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetPlayUidInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetPlayUidInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetPlayUidInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetPlayUidInfo)
    MergeFrom(*source);
  }
}

void GadgetPlayUidInfo::MergeFrom(const GadgetPlayUidInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetPlayUidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.online_id().size() > 0) {

    online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_id_);
  }
  if (from.has_profile_picture()) {
    mutable_profile_picture()->::proto::ProfilePicture::MergeFrom(from.profile_picture());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.battle_watcher_id() != 0) {
    set_battle_watcher_id(from.battle_watcher_id());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.icon() != 0) {
    set_icon(from.icon());
  }
}

void GadgetPlayUidInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetPlayUidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetPlayUidInfo::CopyFrom(const GadgetPlayUidInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetPlayUidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetPlayUidInfo::IsInitialized() const {
  return true;
}

void GadgetPlayUidInfo::Swap(GadgetPlayUidInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetPlayUidInfo::InternalSwap(GadgetPlayUidInfo* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  online_id_.Swap(&other->online_id_);
  swap(profile_picture_, other->profile_picture_);
  swap(score_, other->score_);
  swap(battle_watcher_id_, other->battle_watcher_id_);
  swap(uid_, other->uid_);
  swap(icon_, other->icon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetPlayUidInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetPlayUidInfo

// .proto.ProfilePicture profile_picture = 2;
bool GadgetPlayUidInfo::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
void GadgetPlayUidInfo::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
const ::proto::ProfilePicture& GadgetPlayUidInfo::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidInfo.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
::proto::ProfilePicture* GadgetPlayUidInfo::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetPlayUidInfo.profile_picture)
  return profile_picture_;
}
::proto::ProfilePicture* GadgetPlayUidInfo::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.GadgetPlayUidInfo.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
void GadgetPlayUidInfo::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetPlayUidInfo.profile_picture)
}

// uint32 battle_watcher_id = 6;
void GadgetPlayUidInfo::clear_battle_watcher_id() {
  battle_watcher_id_ = 0u;
}
::google::protobuf::uint32 GadgetPlayUidInfo::battle_watcher_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidInfo.battle_watcher_id)
  return battle_watcher_id_;
}
void GadgetPlayUidInfo::set_battle_watcher_id(::google::protobuf::uint32 value) {
  
  battle_watcher_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidInfo.battle_watcher_id)
}

// uint32 uid = 7;
void GadgetPlayUidInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GadgetPlayUidInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidInfo.uid)
  return uid_;
}
void GadgetPlayUidInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidInfo.uid)
}

// uint32 icon = 14;
void GadgetPlayUidInfo::clear_icon() {
  icon_ = 0u;
}
::google::protobuf::uint32 GadgetPlayUidInfo::icon() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidInfo.icon)
  return icon_;
}
void GadgetPlayUidInfo::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidInfo.icon)
}

// uint32 score = 4;
void GadgetPlayUidInfo::clear_score() {
  score_ = 0u;
}
::google::protobuf::uint32 GadgetPlayUidInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidInfo.score)
  return score_;
}
void GadgetPlayUidInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidInfo.score)
}

// string nickname = 3;
void GadgetPlayUidInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GadgetPlayUidInfo::nickname() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidInfo.nickname)
  return nickname_.GetNoArena();
}
void GadgetPlayUidInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidInfo.nickname)
}
#if LANG_CXX11
void GadgetPlayUidInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GadgetPlayUidInfo.nickname)
}
#endif
void GadgetPlayUidInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GadgetPlayUidInfo.nickname)
}
void GadgetPlayUidInfo::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GadgetPlayUidInfo.nickname)
}
::std::string* GadgetPlayUidInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.GadgetPlayUidInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GadgetPlayUidInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.GadgetPlayUidInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GadgetPlayUidInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetPlayUidInfo.nickname)
}

// string online_id = 8;
void GadgetPlayUidInfo::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GadgetPlayUidInfo::online_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidInfo.online_id)
  return online_id_.GetNoArena();
}
void GadgetPlayUidInfo::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidInfo.online_id)
}
#if LANG_CXX11
void GadgetPlayUidInfo::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GadgetPlayUidInfo.online_id)
}
#endif
void GadgetPlayUidInfo::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GadgetPlayUidInfo.online_id)
}
void GadgetPlayUidInfo::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GadgetPlayUidInfo.online_id)
}
::std::string* GadgetPlayUidInfo::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.GadgetPlayUidInfo.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GadgetPlayUidInfo::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.GadgetPlayUidInfo.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GadgetPlayUidInfo::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetPlayUidInfo.online_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetPlayStopNotify::kIsWinFieldNumber;
const int GadgetPlayStopNotify::kEntityIdFieldNumber;
const int GadgetPlayStopNotify::kPlayTypeFieldNumber;
const int GadgetPlayStopNotify::kUidInfoListFieldNumber;
const int GadgetPlayStopNotify::kScoreFieldNumber;
const int GadgetPlayStopNotify::kCostTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetPlayStopNotify::GadgetPlayStopNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetPlayStopNotify)
}
GadgetPlayStopNotify::GadgetPlayStopNotify(const GadgetPlayStopNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_info_list_(from.uid_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&play_type_, &from.play_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_win_) -
    reinterpret_cast<char*>(&play_type_)) + sizeof(is_win_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetPlayStopNotify)
}

void GadgetPlayStopNotify::SharedCtor() {
  ::memset(&play_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_win_) -
      reinterpret_cast<char*>(&play_type_)) + sizeof(is_win_));
  _cached_size_ = 0;
}

GadgetPlayStopNotify::~GadgetPlayStopNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetPlayStopNotify)
  SharedDtor();
}

void GadgetPlayStopNotify::SharedDtor() {
}

void GadgetPlayStopNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetPlayStopNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetPlayStopNotify& GadgetPlayStopNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetPlayStopNotify* GadgetPlayStopNotify::New(::google::protobuf::Arena* arena) const {
  GadgetPlayStopNotify* n = new GadgetPlayStopNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetPlayStopNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetPlayStopNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_info_list_.Clear();
  ::memset(&play_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_win_) -
      reinterpret_cast<char*>(&play_type_)) + sizeof(is_win_));
  _internal_metadata_.Clear();
}

bool GadgetPlayStopNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetPlayStopNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 play_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &play_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cost_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cost_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.GadgetPlayUidInfo uid_info_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_uid_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_win = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_win_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetPlayStopNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetPlayStopNotify)
  return false;
#undef DO_
}

void GadgetPlayStopNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetPlayStopNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 play_type = 4;
  if (this->play_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->play_type(), output);
  }

  // uint32 score = 5;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->score(), output);
  }

  // uint32 cost_time = 6;
  if (this->cost_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cost_time(), output);
  }

  // uint32 entity_id = 7;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->entity_id(), output);
  }

  // repeated .proto.GadgetPlayUidInfo uid_info_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uid_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->uid_info_list(static_cast<int>(i)), output);
  }

  // bool is_win = 14;
  if (this->is_win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_win(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetPlayStopNotify)
}

::google::protobuf::uint8* GadgetPlayStopNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetPlayStopNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 play_type = 4;
  if (this->play_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->play_type(), target);
  }

  // uint32 score = 5;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->score(), target);
  }

  // uint32 cost_time = 6;
  if (this->cost_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cost_time(), target);
  }

  // uint32 entity_id = 7;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->entity_id(), target);
  }

  // repeated .proto.GadgetPlayUidInfo uid_info_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uid_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->uid_info_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_win = 14;
  if (this->is_win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_win(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetPlayStopNotify)
  return target;
}

size_t GadgetPlayStopNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetPlayStopNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.GadgetPlayUidInfo uid_info_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->uid_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uid_info_list(static_cast<int>(i)));
    }
  }

  // uint32 play_type = 4;
  if (this->play_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->play_type());
  }

  // uint32 score = 5;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  // uint32 cost_time = 6;
  if (this->cost_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cost_time());
  }

  // uint32 entity_id = 7;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // bool is_win = 14;
  if (this->is_win() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetPlayStopNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetPlayStopNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetPlayStopNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetPlayStopNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetPlayStopNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetPlayStopNotify)
    MergeFrom(*source);
  }
}

void GadgetPlayStopNotify::MergeFrom(const GadgetPlayStopNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetPlayStopNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_info_list_.MergeFrom(from.uid_info_list_);
  if (from.play_type() != 0) {
    set_play_type(from.play_type());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.cost_time() != 0) {
    set_cost_time(from.cost_time());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.is_win() != 0) {
    set_is_win(from.is_win());
  }
}

void GadgetPlayStopNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetPlayStopNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetPlayStopNotify::CopyFrom(const GadgetPlayStopNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetPlayStopNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetPlayStopNotify::IsInitialized() const {
  return true;
}

void GadgetPlayStopNotify::Swap(GadgetPlayStopNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetPlayStopNotify::InternalSwap(GadgetPlayStopNotify* other) {
  using std::swap;
  uid_info_list_.InternalSwap(&other->uid_info_list_);
  swap(play_type_, other->play_type_);
  swap(score_, other->score_);
  swap(cost_time_, other->cost_time_);
  swap(entity_id_, other->entity_id_);
  swap(is_win_, other->is_win_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetPlayStopNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetPlayStopNotify

// bool is_win = 14;
void GadgetPlayStopNotify::clear_is_win() {
  is_win_ = false;
}
bool GadgetPlayStopNotify::is_win() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStopNotify.is_win)
  return is_win_;
}
void GadgetPlayStopNotify::set_is_win(bool value) {
  
  is_win_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStopNotify.is_win)
}

// uint32 entity_id = 7;
void GadgetPlayStopNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetPlayStopNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStopNotify.entity_id)
  return entity_id_;
}
void GadgetPlayStopNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStopNotify.entity_id)
}

// uint32 play_type = 4;
void GadgetPlayStopNotify::clear_play_type() {
  play_type_ = 0u;
}
::google::protobuf::uint32 GadgetPlayStopNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStopNotify.play_type)
  return play_type_;
}
void GadgetPlayStopNotify::set_play_type(::google::protobuf::uint32 value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStopNotify.play_type)
}

// repeated .proto.GadgetPlayUidInfo uid_info_list = 8;
int GadgetPlayStopNotify::uid_info_list_size() const {
  return uid_info_list_.size();
}
void GadgetPlayStopNotify::clear_uid_info_list() {
  uid_info_list_.Clear();
}
const ::proto::GadgetPlayUidInfo& GadgetPlayStopNotify::uid_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStopNotify.uid_info_list)
  return uid_info_list_.Get(index);
}
::proto::GadgetPlayUidInfo* GadgetPlayStopNotify::mutable_uid_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GadgetPlayStopNotify.uid_info_list)
  return uid_info_list_.Mutable(index);
}
::proto::GadgetPlayUidInfo* GadgetPlayStopNotify::add_uid_info_list() {
  // @@protoc_insertion_point(field_add:proto.GadgetPlayStopNotify.uid_info_list)
  return uid_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GadgetPlayUidInfo >*
GadgetPlayStopNotify::mutable_uid_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetPlayStopNotify.uid_info_list)
  return &uid_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GadgetPlayUidInfo >&
GadgetPlayStopNotify::uid_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetPlayStopNotify.uid_info_list)
  return uid_info_list_;
}

// uint32 score = 5;
void GadgetPlayStopNotify::clear_score() {
  score_ = 0u;
}
::google::protobuf::uint32 GadgetPlayStopNotify::score() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStopNotify.score)
  return score_;
}
void GadgetPlayStopNotify::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStopNotify.score)
}

// uint32 cost_time = 6;
void GadgetPlayStopNotify::clear_cost_time() {
  cost_time_ = 0u;
}
::google::protobuf::uint32 GadgetPlayStopNotify::cost_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayStopNotify.cost_time)
  return cost_time_;
}
void GadgetPlayStopNotify::set_cost_time(::google::protobuf::uint32 value) {
  
  cost_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayStopNotify.cost_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetPlayDataNotify::kPlayTypeFieldNumber;
const int GadgetPlayDataNotify::kProgressFieldNumber;
const int GadgetPlayDataNotify::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetPlayDataNotify::GadgetPlayDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetPlayDataNotify)
}
GadgetPlayDataNotify::GadgetPlayDataNotify(const GadgetPlayDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&play_type_, &from.play_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&play_type_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetPlayDataNotify)
}

void GadgetPlayDataNotify::SharedCtor() {
  ::memset(&play_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&play_type_)) + sizeof(progress_));
  _cached_size_ = 0;
}

GadgetPlayDataNotify::~GadgetPlayDataNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetPlayDataNotify)
  SharedDtor();
}

void GadgetPlayDataNotify::SharedDtor() {
}

void GadgetPlayDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetPlayDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetPlayDataNotify& GadgetPlayDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetPlayDataNotify* GadgetPlayDataNotify::New(::google::protobuf::Arena* arena) const {
  GadgetPlayDataNotify* n = new GadgetPlayDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetPlayDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetPlayDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&play_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&play_type_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool GadgetPlayDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetPlayDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 play_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &play_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetPlayDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetPlayDataNotify)
  return false;
#undef DO_
}

void GadgetPlayDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetPlayDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->entity_id(), output);
  }

  // uint32 progress = 9;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->progress(), output);
  }

  // uint32 play_type = 12;
  if (this->play_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->play_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetPlayDataNotify)
}

::google::protobuf::uint8* GadgetPlayDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetPlayDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->entity_id(), target);
  }

  // uint32 progress = 9;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->progress(), target);
  }

  // uint32 play_type = 12;
  if (this->play_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->play_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetPlayDataNotify)
  return target;
}

size_t GadgetPlayDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetPlayDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 play_type = 12;
  if (this->play_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->play_type());
  }

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 progress = 9;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetPlayDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetPlayDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetPlayDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetPlayDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetPlayDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetPlayDataNotify)
    MergeFrom(*source);
  }
}

void GadgetPlayDataNotify::MergeFrom(const GadgetPlayDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetPlayDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.play_type() != 0) {
    set_play_type(from.play_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void GadgetPlayDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetPlayDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetPlayDataNotify::CopyFrom(const GadgetPlayDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetPlayDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetPlayDataNotify::IsInitialized() const {
  return true;
}

void GadgetPlayDataNotify::Swap(GadgetPlayDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetPlayDataNotify::InternalSwap(GadgetPlayDataNotify* other) {
  using std::swap;
  swap(play_type_, other->play_type_);
  swap(entity_id_, other->entity_id_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetPlayDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetPlayDataNotify

// uint32 play_type = 12;
void GadgetPlayDataNotify::clear_play_type() {
  play_type_ = 0u;
}
::google::protobuf::uint32 GadgetPlayDataNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayDataNotify.play_type)
  return play_type_;
}
void GadgetPlayDataNotify::set_play_type(::google::protobuf::uint32 value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayDataNotify.play_type)
}

// uint32 progress = 9;
void GadgetPlayDataNotify::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 GadgetPlayDataNotify::progress() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayDataNotify.progress)
  return progress_;
}
void GadgetPlayDataNotify::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayDataNotify.progress)
}

// uint32 entity_id = 6;
void GadgetPlayDataNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetPlayDataNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayDataNotify.entity_id)
  return entity_id_;
}
void GadgetPlayDataNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayDataNotify.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetPlayUidOpNotify::kEntityIdFieldNumber;
const int GadgetPlayUidOpNotify::kUidListFieldNumber;
const int GadgetPlayUidOpNotify::kPlayTypeFieldNumber;
const int GadgetPlayUidOpNotify::kParamStrFieldNumber;
const int GadgetPlayUidOpNotify::kOpFieldNumber;
const int GadgetPlayUidOpNotify::kParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetPlayUidOpNotify::GadgetPlayUidOpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetPlayUidOpNotify)
}
GadgetPlayUidOpNotify::GadgetPlayUidOpNotify(const GadgetPlayUidOpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_list_(from.uid_list_),
      param_list_(from.param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param_str().size() > 0) {
    param_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_str_);
  }
  ::memcpy(&play_type_, &from.play_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&play_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetPlayUidOpNotify)
}

void GadgetPlayUidOpNotify::SharedCtor() {
  param_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&play_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&play_type_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

GadgetPlayUidOpNotify::~GadgetPlayUidOpNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetPlayUidOpNotify)
  SharedDtor();
}

void GadgetPlayUidOpNotify::SharedDtor() {
  param_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GadgetPlayUidOpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetPlayUidOpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetPlayUidOpNotify& GadgetPlayUidOpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetPlayUidOpNotify* GadgetPlayUidOpNotify::New(::google::protobuf::Arena* arena) const {
  GadgetPlayUidOpNotify* n = new GadgetPlayUidOpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetPlayUidOpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetPlayUidOpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_list_.Clear();
  param_list_.Clear();
  param_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&play_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&play_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool GadgetPlayUidOpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetPlayUidOpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string param_str = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param_str().data(), static_cast<int>(this->param_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GadgetPlayUidOpNotify.param_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 param_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 play_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &play_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 op = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetPlayUidOpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetPlayUidOpNotify)
  return false;
#undef DO_
}

void GadgetPlayUidOpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetPlayUidOpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param_str = 1;
  if (this->param_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param_str().data(), static_cast<int>(this->param_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GadgetPlayUidOpNotify.param_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->param_str(), output);
  }

  // repeated uint32 uid_list = 2;
  if (this->uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uid_list(i), output);
  }

  // repeated uint32 param_list = 4;
  if (this->param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->param_list(i), output);
  }

  // uint32 play_type = 6;
  if (this->play_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->play_type(), output);
  }

  // uint32 op = 7;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->op(), output);
  }

  // uint32 entity_id = 11;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetPlayUidOpNotify)
}

::google::protobuf::uint8* GadgetPlayUidOpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetPlayUidOpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param_str = 1;
  if (this->param_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param_str().data(), static_cast<int>(this->param_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GadgetPlayUidOpNotify.param_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->param_str(), target);
  }

  // repeated uint32 uid_list = 2;
  if (this->uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uid_list_, target);
  }

  // repeated uint32 param_list = 4;
  if (this->param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->param_list_, target);
  }

  // uint32 play_type = 6;
  if (this->play_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->play_type(), target);
  }

  // uint32 op = 7;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->op(), target);
  }

  // uint32 entity_id = 11;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetPlayUidOpNotify)
  return target;
}

size_t GadgetPlayUidOpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetPlayUidOpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 param_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string param_str = 1;
  if (this->param_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param_str());
  }

  // uint32 play_type = 6;
  if (this->play_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->play_type());
  }

  // uint32 op = 7;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op());
  }

  // uint32 entity_id = 11;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetPlayUidOpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetPlayUidOpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetPlayUidOpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetPlayUidOpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetPlayUidOpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetPlayUidOpNotify)
    MergeFrom(*source);
  }
}

void GadgetPlayUidOpNotify::MergeFrom(const GadgetPlayUidOpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetPlayUidOpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_list_.MergeFrom(from.uid_list_);
  param_list_.MergeFrom(from.param_list_);
  if (from.param_str().size() > 0) {

    param_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_str_);
  }
  if (from.play_type() != 0) {
    set_play_type(from.play_type());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void GadgetPlayUidOpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetPlayUidOpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetPlayUidOpNotify::CopyFrom(const GadgetPlayUidOpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetPlayUidOpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetPlayUidOpNotify::IsInitialized() const {
  return true;
}

void GadgetPlayUidOpNotify::Swap(GadgetPlayUidOpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetPlayUidOpNotify::InternalSwap(GadgetPlayUidOpNotify* other) {
  using std::swap;
  uid_list_.InternalSwap(&other->uid_list_);
  param_list_.InternalSwap(&other->param_list_);
  param_str_.Swap(&other->param_str_);
  swap(play_type_, other->play_type_);
  swap(op_, other->op_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetPlayUidOpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetPlayUidOpNotify

// uint32 entity_id = 11;
void GadgetPlayUidOpNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetPlayUidOpNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidOpNotify.entity_id)
  return entity_id_;
}
void GadgetPlayUidOpNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidOpNotify.entity_id)
}

// repeated uint32 uid_list = 2;
int GadgetPlayUidOpNotify::uid_list_size() const {
  return uid_list_.size();
}
void GadgetPlayUidOpNotify::clear_uid_list() {
  uid_list_.Clear();
}
::google::protobuf::uint32 GadgetPlayUidOpNotify::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidOpNotify.uid_list)
  return uid_list_.Get(index);
}
void GadgetPlayUidOpNotify::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidOpNotify.uid_list)
}
void GadgetPlayUidOpNotify::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetPlayUidOpNotify.uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetPlayUidOpNotify::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetPlayUidOpNotify.uid_list)
  return uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetPlayUidOpNotify::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetPlayUidOpNotify.uid_list)
  return &uid_list_;
}

// uint32 play_type = 6;
void GadgetPlayUidOpNotify::clear_play_type() {
  play_type_ = 0u;
}
::google::protobuf::uint32 GadgetPlayUidOpNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidOpNotify.play_type)
  return play_type_;
}
void GadgetPlayUidOpNotify::set_play_type(::google::protobuf::uint32 value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidOpNotify.play_type)
}

// string param_str = 1;
void GadgetPlayUidOpNotify::clear_param_str() {
  param_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GadgetPlayUidOpNotify::param_str() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidOpNotify.param_str)
  return param_str_.GetNoArena();
}
void GadgetPlayUidOpNotify::set_param_str(const ::std::string& value) {
  
  param_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidOpNotify.param_str)
}
#if LANG_CXX11
void GadgetPlayUidOpNotify::set_param_str(::std::string&& value) {
  
  param_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GadgetPlayUidOpNotify.param_str)
}
#endif
void GadgetPlayUidOpNotify::set_param_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  param_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GadgetPlayUidOpNotify.param_str)
}
void GadgetPlayUidOpNotify::set_param_str(const char* value, size_t size) {
  
  param_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GadgetPlayUidOpNotify.param_str)
}
::std::string* GadgetPlayUidOpNotify::mutable_param_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.GadgetPlayUidOpNotify.param_str)
  return param_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GadgetPlayUidOpNotify::release_param_str() {
  // @@protoc_insertion_point(field_release:proto.GadgetPlayUidOpNotify.param_str)
  
  return param_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GadgetPlayUidOpNotify::set_allocated_param_str(::std::string* param_str) {
  if (param_str != NULL) {
    
  } else {
    
  }
  param_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param_str);
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetPlayUidOpNotify.param_str)
}

// uint32 op = 7;
void GadgetPlayUidOpNotify::clear_op() {
  op_ = 0u;
}
::google::protobuf::uint32 GadgetPlayUidOpNotify::op() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidOpNotify.op)
  return op_;
}
void GadgetPlayUidOpNotify::set_op(::google::protobuf::uint32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidOpNotify.op)
}

// repeated uint32 param_list = 4;
int GadgetPlayUidOpNotify::param_list_size() const {
  return param_list_.size();
}
void GadgetPlayUidOpNotify::clear_param_list() {
  param_list_.Clear();
}
::google::protobuf::uint32 GadgetPlayUidOpNotify::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlayUidOpNotify.param_list)
  return param_list_.Get(index);
}
void GadgetPlayUidOpNotify::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetPlayUidOpNotify.param_list)
}
void GadgetPlayUidOpNotify::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetPlayUidOpNotify.param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetPlayUidOpNotify::param_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetPlayUidOpNotify.param_list)
  return param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetPlayUidOpNotify::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetPlayUidOpNotify.param_list)
  return &param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetGeneralRewardInfoNotify::kEntityIdFieldNumber;
const int GadgetGeneralRewardInfoNotify::kGeneralRewardInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetGeneralRewardInfoNotify::GadgetGeneralRewardInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetGeneralRewardInfoNotify)
}
GadgetGeneralRewardInfoNotify::GadgetGeneralRewardInfoNotify(const GadgetGeneralRewardInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_general_reward_info()) {
    general_reward_info_ = new ::proto::GadgetGeneralRewardInfo(*from.general_reward_info_);
  } else {
    general_reward_info_ = NULL;
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GadgetGeneralRewardInfoNotify)
}

void GadgetGeneralRewardInfoNotify::SharedCtor() {
  ::memset(&general_reward_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&general_reward_info_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

GadgetGeneralRewardInfoNotify::~GadgetGeneralRewardInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetGeneralRewardInfoNotify)
  SharedDtor();
}

void GadgetGeneralRewardInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete general_reward_info_;
}

void GadgetGeneralRewardInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetGeneralRewardInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetGeneralRewardInfoNotify& GadgetGeneralRewardInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetGeneralRewardInfoNotify* GadgetGeneralRewardInfoNotify::New(::google::protobuf::Arena* arena) const {
  GadgetGeneralRewardInfoNotify* n = new GadgetGeneralRewardInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetGeneralRewardInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetGeneralRewardInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && general_reward_info_ != NULL) {
    delete general_reward_info_;
  }
  general_reward_info_ = NULL;
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GadgetGeneralRewardInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetGeneralRewardInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.GadgetGeneralRewardInfo general_reward_info = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_general_reward_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetGeneralRewardInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetGeneralRewardInfoNotify)
  return false;
#undef DO_
}

void GadgetGeneralRewardInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetGeneralRewardInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GadgetGeneralRewardInfo general_reward_info = 9;
  if (this->has_general_reward_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->general_reward_info_, output);
  }

  // uint32 entity_id = 13;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetGeneralRewardInfoNotify)
}

::google::protobuf::uint8* GadgetGeneralRewardInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetGeneralRewardInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GadgetGeneralRewardInfo general_reward_info = 9;
  if (this->has_general_reward_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->general_reward_info_, deterministic, target);
  }

  // uint32 entity_id = 13;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetGeneralRewardInfoNotify)
  return target;
}

size_t GadgetGeneralRewardInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetGeneralRewardInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.GadgetGeneralRewardInfo general_reward_info = 9;
  if (this->has_general_reward_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->general_reward_info_);
  }

  // uint32 entity_id = 13;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetGeneralRewardInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetGeneralRewardInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetGeneralRewardInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetGeneralRewardInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetGeneralRewardInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetGeneralRewardInfoNotify)
    MergeFrom(*source);
  }
}

void GadgetGeneralRewardInfoNotify::MergeFrom(const GadgetGeneralRewardInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetGeneralRewardInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_general_reward_info()) {
    mutable_general_reward_info()->::proto::GadgetGeneralRewardInfo::MergeFrom(from.general_reward_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void GadgetGeneralRewardInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetGeneralRewardInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetGeneralRewardInfoNotify::CopyFrom(const GadgetGeneralRewardInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetGeneralRewardInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetGeneralRewardInfoNotify::IsInitialized() const {
  return true;
}

void GadgetGeneralRewardInfoNotify::Swap(GadgetGeneralRewardInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetGeneralRewardInfoNotify::InternalSwap(GadgetGeneralRewardInfoNotify* other) {
  using std::swap;
  swap(general_reward_info_, other->general_reward_info_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetGeneralRewardInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetGeneralRewardInfoNotify

// uint32 entity_id = 13;
void GadgetGeneralRewardInfoNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetGeneralRewardInfoNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardInfoNotify.entity_id)
  return entity_id_;
}
void GadgetGeneralRewardInfoNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardInfoNotify.entity_id)
}

// .proto.GadgetGeneralRewardInfo general_reward_info = 9;
bool GadgetGeneralRewardInfoNotify::has_general_reward_info() const {
  return this != internal_default_instance() && general_reward_info_ != NULL;
}
void GadgetGeneralRewardInfoNotify::clear_general_reward_info() {
  if (GetArenaNoVirtual() == NULL && general_reward_info_ != NULL) delete general_reward_info_;
  general_reward_info_ = NULL;
}
const ::proto::GadgetGeneralRewardInfo& GadgetGeneralRewardInfoNotify::general_reward_info() const {
  const ::proto::GadgetGeneralRewardInfo* p = general_reward_info_;
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardInfoNotify.general_reward_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GadgetGeneralRewardInfo*>(
      &::proto::_GadgetGeneralRewardInfo_default_instance_);
}
::proto::GadgetGeneralRewardInfo* GadgetGeneralRewardInfoNotify::mutable_general_reward_info() {
  
  if (general_reward_info_ == NULL) {
    general_reward_info_ = new ::proto::GadgetGeneralRewardInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetGeneralRewardInfoNotify.general_reward_info)
  return general_reward_info_;
}
::proto::GadgetGeneralRewardInfo* GadgetGeneralRewardInfoNotify::release_general_reward_info() {
  // @@protoc_insertion_point(field_release:proto.GadgetGeneralRewardInfoNotify.general_reward_info)
  
  ::proto::GadgetGeneralRewardInfo* temp = general_reward_info_;
  general_reward_info_ = NULL;
  return temp;
}
void GadgetGeneralRewardInfoNotify::set_allocated_general_reward_info(::proto::GadgetGeneralRewardInfo* general_reward_info) {
  delete general_reward_info_;
  general_reward_info_ = general_reward_info;
  if (general_reward_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetGeneralRewardInfoNotify.general_reward_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetAutoPickDropInfoNotify::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetAutoPickDropInfoNotify::GadgetAutoPickDropInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetAutoPickDropInfoNotify)
}
GadgetAutoPickDropInfoNotify::GadgetAutoPickDropInfoNotify(const GadgetAutoPickDropInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GadgetAutoPickDropInfoNotify)
}

void GadgetAutoPickDropInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

GadgetAutoPickDropInfoNotify::~GadgetAutoPickDropInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetAutoPickDropInfoNotify)
  SharedDtor();
}

void GadgetAutoPickDropInfoNotify::SharedDtor() {
}

void GadgetAutoPickDropInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetAutoPickDropInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetAutoPickDropInfoNotify& GadgetAutoPickDropInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetAutoPickDropInfoNotify* GadgetAutoPickDropInfoNotify::New(::google::protobuf::Arena* arena) const {
  GadgetAutoPickDropInfoNotify* n = new GadgetAutoPickDropInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetAutoPickDropInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetAutoPickDropInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  _internal_metadata_.Clear();
}

bool GadgetAutoPickDropInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetAutoPickDropInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Item item_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetAutoPickDropInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetAutoPickDropInfoNotify)
  return false;
#undef DO_
}

void GadgetAutoPickDropInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetAutoPickDropInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Item item_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetAutoPickDropInfoNotify)
}

::google::protobuf::uint8* GadgetAutoPickDropInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetAutoPickDropInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Item item_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetAutoPickDropInfoNotify)
  return target;
}

size_t GadgetAutoPickDropInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetAutoPickDropInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Item item_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetAutoPickDropInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetAutoPickDropInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetAutoPickDropInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetAutoPickDropInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetAutoPickDropInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetAutoPickDropInfoNotify)
    MergeFrom(*source);
  }
}

void GadgetAutoPickDropInfoNotify::MergeFrom(const GadgetAutoPickDropInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetAutoPickDropInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
}

void GadgetAutoPickDropInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetAutoPickDropInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetAutoPickDropInfoNotify::CopyFrom(const GadgetAutoPickDropInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetAutoPickDropInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetAutoPickDropInfoNotify::IsInitialized() const {
  return true;
}

void GadgetAutoPickDropInfoNotify::Swap(GadgetAutoPickDropInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetAutoPickDropInfoNotify::InternalSwap(GadgetAutoPickDropInfoNotify* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetAutoPickDropInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetAutoPickDropInfoNotify

// repeated .proto.Item item_list = 11;
int GadgetAutoPickDropInfoNotify::item_list_size() const {
  return item_list_.size();
}
void GadgetAutoPickDropInfoNotify::clear_item_list() {
  item_list_.Clear();
}
const ::proto::Item& GadgetAutoPickDropInfoNotify::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetAutoPickDropInfoNotify.item_list)
  return item_list_.Get(index);
}
::proto::Item* GadgetAutoPickDropInfoNotify::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GadgetAutoPickDropInfoNotify.item_list)
  return item_list_.Mutable(index);
}
::proto::Item* GadgetAutoPickDropInfoNotify::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.GadgetAutoPickDropInfoNotify.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Item >*
GadgetAutoPickDropInfoNotify::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetAutoPickDropInfoNotify.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Item >&
GadgetAutoPickDropInfoNotify::item_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetAutoPickDropInfoNotify.item_list)
  return item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateAbilityCreatedMovingPlatformNotify::kEntityIdFieldNumber;
const int UpdateAbilityCreatedMovingPlatformNotify::kOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateAbilityCreatedMovingPlatformNotify::UpdateAbilityCreatedMovingPlatformNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdateAbilityCreatedMovingPlatformNotify)
}
UpdateAbilityCreatedMovingPlatformNotify::UpdateAbilityCreatedMovingPlatformNotify(const UpdateAbilityCreatedMovingPlatformNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.UpdateAbilityCreatedMovingPlatformNotify)
}

void UpdateAbilityCreatedMovingPlatformNotify::SharedCtor() {
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

UpdateAbilityCreatedMovingPlatformNotify::~UpdateAbilityCreatedMovingPlatformNotify() {
  // @@protoc_insertion_point(destructor:proto.UpdateAbilityCreatedMovingPlatformNotify)
  SharedDtor();
}

void UpdateAbilityCreatedMovingPlatformNotify::SharedDtor() {
}

void UpdateAbilityCreatedMovingPlatformNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAbilityCreatedMovingPlatformNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateAbilityCreatedMovingPlatformNotify& UpdateAbilityCreatedMovingPlatformNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateAbilityCreatedMovingPlatformNotify* UpdateAbilityCreatedMovingPlatformNotify::New(::google::protobuf::Arena* arena) const {
  UpdateAbilityCreatedMovingPlatformNotify* n = new UpdateAbilityCreatedMovingPlatformNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateAbilityCreatedMovingPlatformNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool UpdateAbilityCreatedMovingPlatformNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.UpdateAbilityCreatedMovingPlatformNotify.OpType op_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdateAbilityCreatedMovingPlatformNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdateAbilityCreatedMovingPlatformNotify)
  return false;
#undef DO_
}

void UpdateAbilityCreatedMovingPlatformNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UpdateAbilityCreatedMovingPlatformNotify.OpType op_type = 3;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->op_type(), output);
  }

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdateAbilityCreatedMovingPlatformNotify)
}

::google::protobuf::uint8* UpdateAbilityCreatedMovingPlatformNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UpdateAbilityCreatedMovingPlatformNotify.OpType op_type = 3;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->op_type(), target);
  }

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateAbilityCreatedMovingPlatformNotify)
  return target;
}

size_t UpdateAbilityCreatedMovingPlatformNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.UpdateAbilityCreatedMovingPlatformNotify.OpType op_type = 3;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAbilityCreatedMovingPlatformNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAbilityCreatedMovingPlatformNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateAbilityCreatedMovingPlatformNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdateAbilityCreatedMovingPlatformNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdateAbilityCreatedMovingPlatformNotify)
    MergeFrom(*source);
  }
}

void UpdateAbilityCreatedMovingPlatformNotify::MergeFrom(const UpdateAbilityCreatedMovingPlatformNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void UpdateAbilityCreatedMovingPlatformNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAbilityCreatedMovingPlatformNotify::CopyFrom(const UpdateAbilityCreatedMovingPlatformNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateAbilityCreatedMovingPlatformNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAbilityCreatedMovingPlatformNotify::IsInitialized() const {
  return true;
}

void UpdateAbilityCreatedMovingPlatformNotify::Swap(UpdateAbilityCreatedMovingPlatformNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateAbilityCreatedMovingPlatformNotify::InternalSwap(UpdateAbilityCreatedMovingPlatformNotify* other) {
  using std::swap;
  swap(op_type_, other->op_type_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateAbilityCreatedMovingPlatformNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateAbilityCreatedMovingPlatformNotify

// uint32 entity_id = 4;
void UpdateAbilityCreatedMovingPlatformNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 UpdateAbilityCreatedMovingPlatformNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.UpdateAbilityCreatedMovingPlatformNotify.entity_id)
  return entity_id_;
}
void UpdateAbilityCreatedMovingPlatformNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateAbilityCreatedMovingPlatformNotify.entity_id)
}

// .proto.UpdateAbilityCreatedMovingPlatformNotify.OpType op_type = 3;
void UpdateAbilityCreatedMovingPlatformNotify::clear_op_type() {
  op_type_ = 0;
}
::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType UpdateAbilityCreatedMovingPlatformNotify::op_type() const {
  // @@protoc_insertion_point(field_get:proto.UpdateAbilityCreatedMovingPlatformNotify.op_type)
  return static_cast< ::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType >(op_type_);
}
void UpdateAbilityCreatedMovingPlatformNotify::set_op_type(::proto::UpdateAbilityCreatedMovingPlatformNotify_OpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateAbilityCreatedMovingPlatformNotify.op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FoundationReq::kGadgetEntityIdFieldNumber;
const int FoundationReq::kPointConfigIdFieldNumber;
const int FoundationReq::kBuildingIdFieldNumber;
const int FoundationReq::kOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FoundationReq::FoundationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FoundationReq)
}
FoundationReq::FoundationReq(const FoundationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_entity_id_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(gadget_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.FoundationReq)
}

void FoundationReq::SharedCtor() {
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(gadget_entity_id_));
  _cached_size_ = 0;
}

FoundationReq::~FoundationReq() {
  // @@protoc_insertion_point(destructor:proto.FoundationReq)
  SharedDtor();
}

void FoundationReq::SharedDtor() {
}

void FoundationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FoundationReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FoundationReq& FoundationReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FoundationReq* FoundationReq::New(::google::protobuf::Arena* arena) const {
  FoundationReq* n = new FoundationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FoundationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FoundationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(gadget_entity_id_));
  _internal_metadata_.Clear();
}

bool FoundationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FoundationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.FoundationOpType op_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::FoundationOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_config_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 building_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &building_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FoundationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FoundationReq)
  return false;
#undef DO_
}

void FoundationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FoundationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FoundationOpType op_type = 10;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->op_type(), output);
  }

  // uint32 point_config_id = 12;
  if (this->point_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->point_config_id(), output);
  }

  // uint32 building_id = 13;
  if (this->building_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->building_id(), output);
  }

  // uint32 gadget_entity_id = 14;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->gadget_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FoundationReq)
}

::google::protobuf::uint8* FoundationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FoundationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FoundationOpType op_type = 10;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->op_type(), target);
  }

  // uint32 point_config_id = 12;
  if (this->point_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->point_config_id(), target);
  }

  // uint32 building_id = 13;
  if (this->building_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->building_id(), target);
  }

  // uint32 gadget_entity_id = 14;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->gadget_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FoundationReq)
  return target;
}

size_t FoundationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FoundationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FoundationOpType op_type = 10;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 point_config_id = 12;
  if (this->point_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_config_id());
  }

  // uint32 building_id = 13;
  if (this->building_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->building_id());
  }

  // uint32 gadget_entity_id = 14;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FoundationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FoundationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FoundationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FoundationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FoundationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FoundationReq)
    MergeFrom(*source);
  }
}

void FoundationReq::MergeFrom(const FoundationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FoundationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.point_config_id() != 0) {
    set_point_config_id(from.point_config_id());
  }
  if (from.building_id() != 0) {
    set_building_id(from.building_id());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void FoundationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FoundationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FoundationReq::CopyFrom(const FoundationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FoundationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FoundationReq::IsInitialized() const {
  return true;
}

void FoundationReq::Swap(FoundationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FoundationReq::InternalSwap(FoundationReq* other) {
  using std::swap;
  swap(op_type_, other->op_type_);
  swap(point_config_id_, other->point_config_id_);
  swap(building_id_, other->building_id_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FoundationReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FoundationReq

// uint32 gadget_entity_id = 14;
void FoundationReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 FoundationReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationReq.gadget_entity_id)
  return gadget_entity_id_;
}
void FoundationReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationReq.gadget_entity_id)
}

// uint32 point_config_id = 12;
void FoundationReq::clear_point_config_id() {
  point_config_id_ = 0u;
}
::google::protobuf::uint32 FoundationReq::point_config_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationReq.point_config_id)
  return point_config_id_;
}
void FoundationReq::set_point_config_id(::google::protobuf::uint32 value) {
  
  point_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationReq.point_config_id)
}

// uint32 building_id = 13;
void FoundationReq::clear_building_id() {
  building_id_ = 0u;
}
::google::protobuf::uint32 FoundationReq::building_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationReq.building_id)
  return building_id_;
}
void FoundationReq::set_building_id(::google::protobuf::uint32 value) {
  
  building_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationReq.building_id)
}

// .proto.FoundationOpType op_type = 10;
void FoundationReq::clear_op_type() {
  op_type_ = 0;
}
::proto::FoundationOpType FoundationReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.FoundationReq.op_type)
  return static_cast< ::proto::FoundationOpType >(op_type_);
}
void FoundationReq::set_op_type(::proto::FoundationOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationReq.op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FoundationRsp::kOpTypeFieldNumber;
const int FoundationRsp::kGadgetEntityIdFieldNumber;
const int FoundationRsp::kBuildingIdFieldNumber;
const int FoundationRsp::kPointConfigIdFieldNumber;
const int FoundationRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FoundationRsp::FoundationRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FoundationRsp)
}
FoundationRsp::FoundationRsp(const FoundationRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_config_id_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(point_config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.FoundationRsp)
}

void FoundationRsp::SharedCtor() {
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_config_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(point_config_id_));
  _cached_size_ = 0;
}

FoundationRsp::~FoundationRsp() {
  // @@protoc_insertion_point(destructor:proto.FoundationRsp)
  SharedDtor();
}

void FoundationRsp::SharedDtor() {
}

void FoundationRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FoundationRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FoundationRsp& FoundationRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FoundationRsp* FoundationRsp::New(::google::protobuf::Arena* arena) const {
  FoundationRsp* n = new FoundationRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FoundationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FoundationRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_config_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(point_config_id_));
  _internal_metadata_.Clear();
}

bool FoundationRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FoundationRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 building_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &building_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_config_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FoundationOpType op_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::FoundationOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FoundationRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FoundationRsp)
  return false;
#undef DO_
}

void FoundationRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FoundationRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->gadget_entity_id(), output);
  }

  // uint32 building_id = 11;
  if (this->building_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->building_id(), output);
  }

  // uint32 point_config_id = 12;
  if (this->point_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->point_config_id(), output);
  }

  // .proto.FoundationOpType op_type = 13;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FoundationRsp)
}

::google::protobuf::uint8* FoundationRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FoundationRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->gadget_entity_id(), target);
  }

  // uint32 building_id = 11;
  if (this->building_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->building_id(), target);
  }

  // uint32 point_config_id = 12;
  if (this->point_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->point_config_id(), target);
  }

  // .proto.FoundationOpType op_type = 13;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FoundationRsp)
  return target;
}

size_t FoundationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FoundationRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FoundationOpType op_type = 13;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 building_id = 11;
  if (this->building_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->building_id());
  }

  // uint32 point_config_id = 12;
  if (this->point_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FoundationRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FoundationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FoundationRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FoundationRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FoundationRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FoundationRsp)
    MergeFrom(*source);
  }
}

void FoundationRsp::MergeFrom(const FoundationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FoundationRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.building_id() != 0) {
    set_building_id(from.building_id());
  }
  if (from.point_config_id() != 0) {
    set_point_config_id(from.point_config_id());
  }
}

void FoundationRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FoundationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FoundationRsp::CopyFrom(const FoundationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FoundationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FoundationRsp::IsInitialized() const {
  return true;
}

void FoundationRsp::Swap(FoundationRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FoundationRsp::InternalSwap(FoundationRsp* other) {
  using std::swap;
  swap(op_type_, other->op_type_);
  swap(retcode_, other->retcode_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(building_id_, other->building_id_);
  swap(point_config_id_, other->point_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FoundationRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FoundationRsp

// .proto.FoundationOpType op_type = 13;
void FoundationRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::FoundationOpType FoundationRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.FoundationRsp.op_type)
  return static_cast< ::proto::FoundationOpType >(op_type_);
}
void FoundationRsp::set_op_type(::proto::FoundationOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationRsp.op_type)
}

// uint32 gadget_entity_id = 10;
void FoundationRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 FoundationRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationRsp.gadget_entity_id)
  return gadget_entity_id_;
}
void FoundationRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationRsp.gadget_entity_id)
}

// uint32 building_id = 11;
void FoundationRsp::clear_building_id() {
  building_id_ = 0u;
}
::google::protobuf::uint32 FoundationRsp::building_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationRsp.building_id)
  return building_id_;
}
void FoundationRsp::set_building_id(::google::protobuf::uint32 value) {
  
  building_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationRsp.building_id)
}

// uint32 point_config_id = 12;
void FoundationRsp::clear_point_config_id() {
  point_config_id_ = 0u;
}
::google::protobuf::uint32 FoundationRsp::point_config_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationRsp.point_config_id)
  return point_config_id_;
}
void FoundationRsp::set_point_config_id(::google::protobuf::uint32 value) {
  
  point_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationRsp.point_config_id)
}

// int32 retcode = 7;
void FoundationRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 FoundationRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FoundationRsp.retcode)
  return retcode_;
}
void FoundationRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FoundationNotify::kInfoFieldNumber;
const int FoundationNotify::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FoundationNotify::FoundationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FoundationNotify)
}
FoundationNotify::FoundationNotify(const FoundationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::proto::FoundationInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  gadget_entity_id_ = from.gadget_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.FoundationNotify)
}

void FoundationNotify::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&info_)) + sizeof(gadget_entity_id_));
  _cached_size_ = 0;
}

FoundationNotify::~FoundationNotify() {
  // @@protoc_insertion_point(destructor:proto.FoundationNotify)
  SharedDtor();
}

void FoundationNotify::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void FoundationNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FoundationNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FoundationNotify& FoundationNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FoundationNotify* FoundationNotify::New(::google::protobuf::Arena* arena) const {
  FoundationNotify* n = new FoundationNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FoundationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FoundationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  gadget_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FoundationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FoundationNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.FoundationInfo info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FoundationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FoundationNotify)
  return false;
#undef DO_
}

void FoundationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FoundationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FoundationInfo info = 7;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->info_, output);
  }

  // uint32 gadget_entity_id = 9;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->gadget_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FoundationNotify)
}

::google::protobuf::uint8* FoundationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FoundationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FoundationInfo info = 7;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->info_, deterministic, target);
  }

  // uint32 gadget_entity_id = 9;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->gadget_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FoundationNotify)
  return target;
}

size_t FoundationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FoundationNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FoundationInfo info = 7;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // uint32 gadget_entity_id = 9;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FoundationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FoundationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FoundationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FoundationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FoundationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FoundationNotify)
    MergeFrom(*source);
  }
}

void FoundationNotify::MergeFrom(const FoundationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FoundationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::proto::FoundationInfo::MergeFrom(from.info());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void FoundationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FoundationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FoundationNotify::CopyFrom(const FoundationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FoundationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FoundationNotify::IsInitialized() const {
  return true;
}

void FoundationNotify::Swap(FoundationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FoundationNotify::InternalSwap(FoundationNotify* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FoundationNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FoundationNotify

// .proto.FoundationInfo info = 7;
bool FoundationNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void FoundationNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::proto::FoundationInfo& FoundationNotify::info() const {
  const ::proto::FoundationInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.FoundationNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FoundationInfo*>(
      &::proto::_FoundationInfo_default_instance_);
}
::proto::FoundationInfo* FoundationNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::FoundationInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.FoundationNotify.info)
  return info_;
}
::proto::FoundationInfo* FoundationNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.FoundationNotify.info)
  
  ::proto::FoundationInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void FoundationNotify::set_allocated_info(::proto::FoundationInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FoundationNotify.info)
}

// uint32 gadget_entity_id = 9;
void FoundationNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 FoundationNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.FoundationNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void FoundationNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FoundationNotify.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetTalkChangeNotify::kGadgetEntityIdFieldNumber;
const int GadgetTalkChangeNotify::kCurGadgetTalkStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetTalkChangeNotify::GadgetTalkChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetTalkChangeNotify)
}
GadgetTalkChangeNotify::GadgetTalkChangeNotify(const GadgetTalkChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_entity_id_, &from.gadget_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_gadget_talk_state_) -
    reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(cur_gadget_talk_state_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetTalkChangeNotify)
}

void GadgetTalkChangeNotify::SharedCtor() {
  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_gadget_talk_state_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(cur_gadget_talk_state_));
  _cached_size_ = 0;
}

GadgetTalkChangeNotify::~GadgetTalkChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetTalkChangeNotify)
  SharedDtor();
}

void GadgetTalkChangeNotify::SharedDtor() {
}

void GadgetTalkChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetTalkChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetTalkChangeNotify& GadgetTalkChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetTalkChangeNotify* GadgetTalkChangeNotify::New(::google::protobuf::Arena* arena) const {
  GadgetTalkChangeNotify* n = new GadgetTalkChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetTalkChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetTalkChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_gadget_talk_state_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(cur_gadget_talk_state_));
  _internal_metadata_.Clear();
}

bool GadgetTalkChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetTalkChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_entity_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_gadget_talk_state = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_gadget_talk_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetTalkChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetTalkChangeNotify)
  return false;
#undef DO_
}

void GadgetTalkChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetTalkChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gadget_entity_id(), output);
  }

  // uint32 cur_gadget_talk_state = 15;
  if (this->cur_gadget_talk_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->cur_gadget_talk_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetTalkChangeNotify)
}

::google::protobuf::uint8* GadgetTalkChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetTalkChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gadget_entity_id(), target);
  }

  // uint32 cur_gadget_talk_state = 15;
  if (this->cur_gadget_talk_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->cur_gadget_talk_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetTalkChangeNotify)
  return target;
}

size_t GadgetTalkChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetTalkChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_entity_id = 5;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 cur_gadget_talk_state = 15;
  if (this->cur_gadget_talk_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_gadget_talk_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetTalkChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetTalkChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetTalkChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetTalkChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetTalkChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetTalkChangeNotify)
    MergeFrom(*source);
  }
}

void GadgetTalkChangeNotify::MergeFrom(const GadgetTalkChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetTalkChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.cur_gadget_talk_state() != 0) {
    set_cur_gadget_talk_state(from.cur_gadget_talk_state());
  }
}

void GadgetTalkChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetTalkChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetTalkChangeNotify::CopyFrom(const GadgetTalkChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetTalkChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetTalkChangeNotify::IsInitialized() const {
  return true;
}

void GadgetTalkChangeNotify::Swap(GadgetTalkChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetTalkChangeNotify::InternalSwap(GadgetTalkChangeNotify* other) {
  using std::swap;
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(cur_gadget_talk_state_, other->cur_gadget_talk_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetTalkChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetTalkChangeNotify

// uint32 gadget_entity_id = 5;
void GadgetTalkChangeNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetTalkChangeNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetTalkChangeNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetTalkChangeNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetTalkChangeNotify.gadget_entity_id)
}

// uint32 cur_gadget_talk_state = 15;
void GadgetTalkChangeNotify::clear_cur_gadget_talk_state() {
  cur_gadget_talk_state_ = 0u;
}
::google::protobuf::uint32 GadgetTalkChangeNotify::cur_gadget_talk_state() const {
  // @@protoc_insertion_point(field_get:proto.GadgetTalkChangeNotify.cur_gadget_talk_state)
  return cur_gadget_talk_state_;
}
void GadgetTalkChangeNotify::set_cur_gadget_talk_state(::google::protobuf::uint32 value) {
  
  cur_gadget_talk_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetTalkChangeNotify.cur_gadget_talk_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry() {}
GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[20];
}
void GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry::MergeFrom(const GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetChainLevelUpdateNotify::kGadgetChainLevelMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetChainLevelUpdateNotify)
}
GadgetChainLevelUpdateNotify::GadgetChainLevelUpdateNotify(const GadgetChainLevelUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gadget_chain_level_map_.MergeFrom(from.gadget_chain_level_map_);
  // @@protoc_insertion_point(copy_constructor:proto.GadgetChainLevelUpdateNotify)
}

void GadgetChainLevelUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

GadgetChainLevelUpdateNotify::~GadgetChainLevelUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetChainLevelUpdateNotify)
  SharedDtor();
}

void GadgetChainLevelUpdateNotify::SharedDtor() {
}

void GadgetChainLevelUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetChainLevelUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetChainLevelUpdateNotify& GadgetChainLevelUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetChainLevelUpdateNotify* GadgetChainLevelUpdateNotify::New(::google::protobuf::Arena* arena) const {
  GadgetChainLevelUpdateNotify* n = new GadgetChainLevelUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetChainLevelUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetChainLevelUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gadget_chain_level_map_.Clear();
  _internal_metadata_.Clear();
}

bool GadgetChainLevelUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetChainLevelUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> gadget_chain_level_map = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry::Parser< ::google::protobuf::internal::MapField<
              GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&gadget_chain_level_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetChainLevelUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetChainLevelUpdateNotify)
  return false;
#undef DO_
}

void GadgetChainLevelUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetChainLevelUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> gadget_chain_level_map = 12;
  if (!this->gadget_chain_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->gadget_chain_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_chain_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetChainLevelUpdateNotify)
}

::google::protobuf::uint8* GadgetChainLevelUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetChainLevelUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> gadget_chain_level_map = 12;
  if (!this->gadget_chain_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->gadget_chain_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_chain_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetChainLevelUpdateNotify)
  return target;
}

size_t GadgetChainLevelUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetChainLevelUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> gadget_chain_level_map = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gadget_chain_level_map_size());
  {
    ::google::protobuf::scoped_ptr<GadgetChainLevelUpdateNotify_GadgetChainLevelMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->gadget_chain_level_map().begin();
        it != this->gadget_chain_level_map().end(); ++it) {
      entry.reset(gadget_chain_level_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetChainLevelUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetChainLevelUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetChainLevelUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetChainLevelUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetChainLevelUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetChainLevelUpdateNotify)
    MergeFrom(*source);
  }
}

void GadgetChainLevelUpdateNotify::MergeFrom(const GadgetChainLevelUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetChainLevelUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gadget_chain_level_map_.MergeFrom(from.gadget_chain_level_map_);
}

void GadgetChainLevelUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetChainLevelUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetChainLevelUpdateNotify::CopyFrom(const GadgetChainLevelUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetChainLevelUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetChainLevelUpdateNotify::IsInitialized() const {
  return true;
}

void GadgetChainLevelUpdateNotify::Swap(GadgetChainLevelUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetChainLevelUpdateNotify::InternalSwap(GadgetChainLevelUpdateNotify* other) {
  using std::swap;
  gadget_chain_level_map_.Swap(&other->gadget_chain_level_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetChainLevelUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetChainLevelUpdateNotify

// map<uint32, uint32> gadget_chain_level_map = 12;
int GadgetChainLevelUpdateNotify::gadget_chain_level_map_size() const {
  return gadget_chain_level_map_.size();
}
void GadgetChainLevelUpdateNotify::clear_gadget_chain_level_map() {
  gadget_chain_level_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GadgetChainLevelUpdateNotify::gadget_chain_level_map() const {
  // @@protoc_insertion_point(field_map:proto.GadgetChainLevelUpdateNotify.gadget_chain_level_map)
  return gadget_chain_level_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GadgetChainLevelUpdateNotify::mutable_gadget_chain_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GadgetChainLevelUpdateNotify.gadget_chain_level_map)
  return gadget_chain_level_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry() {}
GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[22];
}
void GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry::MergeFrom(const GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetChainLevelChangeNotify::kGadgetChainLevelMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetChainLevelChangeNotify)
}
GadgetChainLevelChangeNotify::GadgetChainLevelChangeNotify(const GadgetChainLevelChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gadget_chain_level_map_.MergeFrom(from.gadget_chain_level_map_);
  // @@protoc_insertion_point(copy_constructor:proto.GadgetChainLevelChangeNotify)
}

void GadgetChainLevelChangeNotify::SharedCtor() {
  _cached_size_ = 0;
}

GadgetChainLevelChangeNotify::~GadgetChainLevelChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetChainLevelChangeNotify)
  SharedDtor();
}

void GadgetChainLevelChangeNotify::SharedDtor() {
}

void GadgetChainLevelChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetChainLevelChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetChainLevelChangeNotify& GadgetChainLevelChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetChainLevelChangeNotify* GadgetChainLevelChangeNotify::New(::google::protobuf::Arena* arena) const {
  GadgetChainLevelChangeNotify* n = new GadgetChainLevelChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetChainLevelChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetChainLevelChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gadget_chain_level_map_.Clear();
  _internal_metadata_.Clear();
}

bool GadgetChainLevelChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetChainLevelChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> gadget_chain_level_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry::Parser< ::google::protobuf::internal::MapField<
              GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&gadget_chain_level_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetChainLevelChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetChainLevelChangeNotify)
  return false;
#undef DO_
}

void GadgetChainLevelChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetChainLevelChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> gadget_chain_level_map = 2;
  if (!this->gadget_chain_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->gadget_chain_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_chain_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetChainLevelChangeNotify)
}

::google::protobuf::uint8* GadgetChainLevelChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetChainLevelChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> gadget_chain_level_map = 2;
  if (!this->gadget_chain_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->gadget_chain_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_chain_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gadget_chain_level_map().begin();
          it != this->gadget_chain_level_map().end(); ++it) {
        entry.reset(gadget_chain_level_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetChainLevelChangeNotify)
  return target;
}

size_t GadgetChainLevelChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetChainLevelChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> gadget_chain_level_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gadget_chain_level_map_size());
  {
    ::google::protobuf::scoped_ptr<GadgetChainLevelChangeNotify_GadgetChainLevelMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->gadget_chain_level_map().begin();
        it != this->gadget_chain_level_map().end(); ++it) {
      entry.reset(gadget_chain_level_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetChainLevelChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetChainLevelChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetChainLevelChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetChainLevelChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetChainLevelChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetChainLevelChangeNotify)
    MergeFrom(*source);
  }
}

void GadgetChainLevelChangeNotify::MergeFrom(const GadgetChainLevelChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetChainLevelChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gadget_chain_level_map_.MergeFrom(from.gadget_chain_level_map_);
}

void GadgetChainLevelChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetChainLevelChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetChainLevelChangeNotify::CopyFrom(const GadgetChainLevelChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetChainLevelChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetChainLevelChangeNotify::IsInitialized() const {
  return true;
}

void GadgetChainLevelChangeNotify::Swap(GadgetChainLevelChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetChainLevelChangeNotify::InternalSwap(GadgetChainLevelChangeNotify* other) {
  using std::swap;
  gadget_chain_level_map_.Swap(&other->gadget_chain_level_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetChainLevelChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetChainLevelChangeNotify

// map<uint32, uint32> gadget_chain_level_map = 2;
int GadgetChainLevelChangeNotify::gadget_chain_level_map_size() const {
  return gadget_chain_level_map_.size();
}
void GadgetChainLevelChangeNotify::clear_gadget_chain_level_map() {
  gadget_chain_level_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GadgetChainLevelChangeNotify::gadget_chain_level_map() const {
  // @@protoc_insertion_point(field_map:proto.GadgetChainLevelChangeNotify.gadget_chain_level_map)
  return gadget_chain_level_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GadgetChainLevelChangeNotify::mutable_gadget_chain_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GadgetChainLevelChangeNotify.gadget_chain_level_map)
  return gadget_chain_level_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleInteractReq::kInteractTypeFieldNumber;
const int VehicleInteractReq::kPosFieldNumber;
const int VehicleInteractReq::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleInteractReq::VehicleInteractReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.VehicleInteractReq)
}
VehicleInteractReq::VehicleInteractReq(const VehicleInteractReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:proto.VehicleInteractReq)
}

void VehicleInteractReq::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(pos_));
  _cached_size_ = 0;
}

VehicleInteractReq::~VehicleInteractReq() {
  // @@protoc_insertion_point(destructor:proto.VehicleInteractReq)
  SharedDtor();
}

void VehicleInteractReq::SharedDtor() {
}

void VehicleInteractReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VehicleInteractReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleInteractReq& VehicleInteractReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleInteractReq* VehicleInteractReq::New(::google::protobuf::Arena* arena) const {
  VehicleInteractReq* n = new VehicleInteractReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleInteractReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.VehicleInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(pos_));
  _internal_metadata_.Clear();
}

bool VehicleInteractReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.VehicleInteractReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.VehicleInteractType interact_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interact_type(static_cast< ::proto::VehicleInteractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pos = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.VehicleInteractReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.VehicleInteractReq)
  return false;
#undef DO_
}

void VehicleInteractReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.VehicleInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VehicleInteractType interact_type = 8;
  if (this->interact_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->interact_type(), output);
  }

  // uint32 pos = 12;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->pos(), output);
  }

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.VehicleInteractReq)
}

::google::protobuf::uint8* VehicleInteractReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.VehicleInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.VehicleInteractType interact_type = 8;
  if (this->interact_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->interact_type(), target);
  }

  // uint32 pos = 12;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->pos(), target);
  }

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.VehicleInteractReq)
  return target;
}

size_t VehicleInteractReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.VehicleInteractReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // .proto.VehicleInteractType interact_type = 8;
  if (this->interact_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interact_type());
  }

  // uint32 pos = 12;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleInteractReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.VehicleInteractReq)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleInteractReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleInteractReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.VehicleInteractReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.VehicleInteractReq)
    MergeFrom(*source);
  }
}

void VehicleInteractReq::MergeFrom(const VehicleInteractReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.VehicleInteractReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.interact_type() != 0) {
    set_interact_type(from.interact_type());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
}

void VehicleInteractReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.VehicleInteractReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleInteractReq::CopyFrom(const VehicleInteractReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.VehicleInteractReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleInteractReq::IsInitialized() const {
  return true;
}

void VehicleInteractReq::Swap(VehicleInteractReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleInteractReq::InternalSwap(VehicleInteractReq* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(interact_type_, other->interact_type_);
  swap(pos_, other->pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VehicleInteractReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleInteractReq

// .proto.VehicleInteractType interact_type = 8;
void VehicleInteractReq::clear_interact_type() {
  interact_type_ = 0;
}
::proto::VehicleInteractType VehicleInteractReq::interact_type() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInteractReq.interact_type)
  return static_cast< ::proto::VehicleInteractType >(interact_type_);
}
void VehicleInteractReq::set_interact_type(::proto::VehicleInteractType value) {
  
  interact_type_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInteractReq.interact_type)
}

// uint32 pos = 12;
void VehicleInteractReq::clear_pos() {
  pos_ = 0u;
}
::google::protobuf::uint32 VehicleInteractReq::pos() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInteractReq.pos)
  return pos_;
}
void VehicleInteractReq::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInteractReq.pos)
}

// uint32 entity_id = 15;
void VehicleInteractReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 VehicleInteractReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInteractReq.entity_id)
  return entity_id_;
}
void VehicleInteractReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInteractReq.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleInteractRsp::kInteractTypeFieldNumber;
const int VehicleInteractRsp::kMemberFieldNumber;
const int VehicleInteractRsp::kEntityIdFieldNumber;
const int VehicleInteractRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleInteractRsp::VehicleInteractRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.VehicleInteractRsp)
}
VehicleInteractRsp::VehicleInteractRsp(const VehicleInteractRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_member()) {
    member_ = new ::proto::VehicleMember(*from.member_);
  } else {
    member_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&interact_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(interact_type_));
  // @@protoc_insertion_point(copy_constructor:proto.VehicleInteractRsp)
}

void VehicleInteractRsp::SharedCtor() {
  ::memset(&member_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interact_type_) -
      reinterpret_cast<char*>(&member_)) + sizeof(interact_type_));
  _cached_size_ = 0;
}

VehicleInteractRsp::~VehicleInteractRsp() {
  // @@protoc_insertion_point(destructor:proto.VehicleInteractRsp)
  SharedDtor();
}

void VehicleInteractRsp::SharedDtor() {
  if (this != internal_default_instance()) delete member_;
}

void VehicleInteractRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VehicleInteractRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleInteractRsp& VehicleInteractRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleInteractRsp* VehicleInteractRsp::New(::google::protobuf::Arena* arena) const {
  VehicleInteractRsp* n = new VehicleInteractRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleInteractRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.VehicleInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interact_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(interact_type_));
  _internal_metadata_.Clear();
}

bool VehicleInteractRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.VehicleInteractRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VehicleMember member = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VehicleInteractType interact_type = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interact_type(static_cast< ::proto::VehicleInteractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.VehicleInteractRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.VehicleInteractRsp)
  return false;
#undef DO_
}

void VehicleInteractRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.VehicleInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.VehicleMember member = 3;
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->member_, output);
  }

  // .proto.VehicleInteractType interact_type = 15;
  if (this->interact_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->interact_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.VehicleInteractRsp)
}

::google::protobuf::uint8* VehicleInteractRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.VehicleInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.VehicleMember member = 3;
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->member_, deterministic, target);
  }

  // .proto.VehicleInteractType interact_type = 15;
  if (this->interact_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->interact_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.VehicleInteractRsp)
  return target;
}

size_t VehicleInteractRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.VehicleInteractRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.VehicleMember member = 3;
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->member_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // .proto.VehicleInteractType interact_type = 15;
  if (this->interact_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interact_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleInteractRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.VehicleInteractRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleInteractRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleInteractRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.VehicleInteractRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.VehicleInteractRsp)
    MergeFrom(*source);
  }
}

void VehicleInteractRsp::MergeFrom(const VehicleInteractRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.VehicleInteractRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_member()) {
    mutable_member()->::proto::VehicleMember::MergeFrom(from.member());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.interact_type() != 0) {
    set_interact_type(from.interact_type());
  }
}

void VehicleInteractRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.VehicleInteractRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleInteractRsp::CopyFrom(const VehicleInteractRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.VehicleInteractRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleInteractRsp::IsInitialized() const {
  return true;
}

void VehicleInteractRsp::Swap(VehicleInteractRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleInteractRsp::InternalSwap(VehicleInteractRsp* other) {
  using std::swap;
  swap(member_, other->member_);
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(interact_type_, other->interact_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VehicleInteractRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleInteractRsp

// .proto.VehicleInteractType interact_type = 15;
void VehicleInteractRsp::clear_interact_type() {
  interact_type_ = 0;
}
::proto::VehicleInteractType VehicleInteractRsp::interact_type() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInteractRsp.interact_type)
  return static_cast< ::proto::VehicleInteractType >(interact_type_);
}
void VehicleInteractRsp::set_interact_type(::proto::VehicleInteractType value) {
  
  interact_type_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInteractRsp.interact_type)
}

// .proto.VehicleMember member = 3;
bool VehicleInteractRsp::has_member() const {
  return this != internal_default_instance() && member_ != NULL;
}
void VehicleInteractRsp::clear_member() {
  if (GetArenaNoVirtual() == NULL && member_ != NULL) delete member_;
  member_ = NULL;
}
const ::proto::VehicleMember& VehicleInteractRsp::member() const {
  const ::proto::VehicleMember* p = member_;
  // @@protoc_insertion_point(field_get:proto.VehicleInteractRsp.member)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VehicleMember*>(
      &::proto::_VehicleMember_default_instance_);
}
::proto::VehicleMember* VehicleInteractRsp::mutable_member() {
  
  if (member_ == NULL) {
    member_ = new ::proto::VehicleMember;
  }
  // @@protoc_insertion_point(field_mutable:proto.VehicleInteractRsp.member)
  return member_;
}
::proto::VehicleMember* VehicleInteractRsp::release_member() {
  // @@protoc_insertion_point(field_release:proto.VehicleInteractRsp.member)
  
  ::proto::VehicleMember* temp = member_;
  member_ = NULL;
  return temp;
}
void VehicleInteractRsp::set_allocated_member(::proto::VehicleMember* member) {
  delete member_;
  member_ = member;
  if (member) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.VehicleInteractRsp.member)
}

// uint32 entity_id = 2;
void VehicleInteractRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 VehicleInteractRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInteractRsp.entity_id)
  return entity_id_;
}
void VehicleInteractRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInteractRsp.entity_id)
}

// int32 retcode = 1;
void VehicleInteractRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 VehicleInteractRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.VehicleInteractRsp.retcode)
  return retcode_;
}
void VehicleInteractRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleInteractRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateVehicleReq::kPosFieldNumber;
const int CreateVehicleReq::kVehicleIdFieldNumber;
const int CreateVehicleReq::kScenePointIdFieldNumber;
const int CreateVehicleReq::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateVehicleReq::CreateVehicleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateVehicleReq)
}
CreateVehicleReq::CreateVehicleReq(const CreateVehicleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&vehicle_id_, &from.vehicle_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_point_id_) -
    reinterpret_cast<char*>(&vehicle_id_)) + sizeof(scene_point_id_));
  // @@protoc_insertion_point(copy_constructor:proto.CreateVehicleReq)
}

void CreateVehicleReq::SharedCtor() {
  ::memset(&rot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_point_id_) -
      reinterpret_cast<char*>(&rot_)) + sizeof(scene_point_id_));
  _cached_size_ = 0;
}

CreateVehicleReq::~CreateVehicleReq() {
  // @@protoc_insertion_point(destructor:proto.CreateVehicleReq)
  SharedDtor();
}

void CreateVehicleReq::SharedDtor() {
  if (this != internal_default_instance()) delete rot_;
  if (this != internal_default_instance()) delete pos_;
}

void CreateVehicleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateVehicleReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateVehicleReq& CreateVehicleReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateVehicleReq* CreateVehicleReq::New(::google::protobuf::Arena* arena) const {
  CreateVehicleReq* n = new CreateVehicleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateVehicleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateVehicleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&vehicle_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_point_id_) -
      reinterpret_cast<char*>(&vehicle_id_)) + sizeof(scene_point_id_));
  _internal_metadata_.Clear();
}

bool CreateVehicleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateVehicleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicle_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicle_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_point_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateVehicleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateVehicleReq)
  return false;
#undef DO_
}

void CreateVehicleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateVehicleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicle_id = 2;
  if (this->vehicle_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vehicle_id(), output);
  }

  // .proto.Vector rot = 5;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rot_, output);
  }

  // uint32 scene_point_id = 7;
  if (this->scene_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->scene_point_id(), output);
  }

  // .proto.Vector pos = 11;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateVehicleReq)
}

::google::protobuf::uint8* CreateVehicleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateVehicleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicle_id = 2;
  if (this->vehicle_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vehicle_id(), target);
  }

  // .proto.Vector rot = 5;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->rot_, deterministic, target);
  }

  // uint32 scene_point_id = 7;
  if (this->scene_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->scene_point_id(), target);
  }

  // .proto.Vector pos = 11;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateVehicleReq)
  return target;
}

size_t CreateVehicleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateVehicleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector rot = 5;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // .proto.Vector pos = 11;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 vehicle_id = 2;
  if (this->vehicle_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicle_id());
  }

  // uint32 scene_point_id = 7;
  if (this->scene_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateVehicleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateVehicleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVehicleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateVehicleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateVehicleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateVehicleReq)
    MergeFrom(*source);
  }
}

void CreateVehicleReq::MergeFrom(const CreateVehicleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateVehicleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.vehicle_id() != 0) {
    set_vehicle_id(from.vehicle_id());
  }
  if (from.scene_point_id() != 0) {
    set_scene_point_id(from.scene_point_id());
  }
}

void CreateVehicleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateVehicleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVehicleReq::CopyFrom(const CreateVehicleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateVehicleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVehicleReq::IsInitialized() const {
  return true;
}

void CreateVehicleReq::Swap(CreateVehicleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateVehicleReq::InternalSwap(CreateVehicleReq* other) {
  using std::swap;
  swap(rot_, other->rot_);
  swap(pos_, other->pos_);
  swap(vehicle_id_, other->vehicle_id_);
  swap(scene_point_id_, other->scene_point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateVehicleReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateVehicleReq

// .proto.Vector pos = 11;
bool CreateVehicleReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void CreateVehicleReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& CreateVehicleReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.CreateVehicleReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* CreateVehicleReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateVehicleReq.pos)
  return pos_;
}
::proto::Vector* CreateVehicleReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.CreateVehicleReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void CreateVehicleReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateVehicleReq.pos)
}

// uint32 vehicle_id = 2;
void CreateVehicleReq::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
::google::protobuf::uint32 CreateVehicleReq::vehicle_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateVehicleReq.vehicle_id)
  return vehicle_id_;
}
void CreateVehicleReq::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateVehicleReq.vehicle_id)
}

// uint32 scene_point_id = 7;
void CreateVehicleReq::clear_scene_point_id() {
  scene_point_id_ = 0u;
}
::google::protobuf::uint32 CreateVehicleReq::scene_point_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateVehicleReq.scene_point_id)
  return scene_point_id_;
}
void CreateVehicleReq::set_scene_point_id(::google::protobuf::uint32 value) {
  
  scene_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateVehicleReq.scene_point_id)
}

// .proto.Vector rot = 5;
bool CreateVehicleReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void CreateVehicleReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& CreateVehicleReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.CreateVehicleReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* CreateVehicleReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateVehicleReq.rot)
  return rot_;
}
::proto::Vector* CreateVehicleReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.CreateVehicleReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void CreateVehicleReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateVehicleReq.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateVehicleRsp::kRetcodeFieldNumber;
const int CreateVehicleRsp::kVehicleIdFieldNumber;
const int CreateVehicleRsp::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateVehicleRsp::CreateVehicleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateVehicleRsp)
}
CreateVehicleRsp::CreateVehicleRsp(const CreateVehicleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.CreateVehicleRsp)
}

void CreateVehicleRsp::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

CreateVehicleRsp::~CreateVehicleRsp() {
  // @@protoc_insertion_point(destructor:proto.CreateVehicleRsp)
  SharedDtor();
}

void CreateVehicleRsp::SharedDtor() {
}

void CreateVehicleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateVehicleRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateVehicleRsp& CreateVehicleRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateVehicleRsp* CreateVehicleRsp::New(::google::protobuf::Arena* arena) const {
  CreateVehicleRsp* n = new CreateVehicleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateVehicleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateVehicleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool CreateVehicleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateVehicleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vehicle_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehicle_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateVehicleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateVehicleRsp)
  return false;
#undef DO_
}

void CreateVehicleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateVehicleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicle_id = 9;
  if (this->vehicle_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->vehicle_id(), output);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->retcode(), output);
  }

  // uint32 entity_id = 11;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateVehicleRsp)
}

::google::protobuf::uint8* CreateVehicleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateVehicleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vehicle_id = 9;
  if (this->vehicle_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->vehicle_id(), target);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->retcode(), target);
  }

  // uint32 entity_id = 11;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateVehicleRsp)
  return target;
}

size_t CreateVehicleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateVehicleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 11;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 vehicle_id = 9;
  if (this->vehicle_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehicle_id());
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateVehicleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateVehicleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVehicleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateVehicleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateVehicleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateVehicleRsp)
    MergeFrom(*source);
  }
}

void CreateVehicleRsp::MergeFrom(const CreateVehicleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateVehicleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.vehicle_id() != 0) {
    set_vehicle_id(from.vehicle_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void CreateVehicleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateVehicleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVehicleRsp::CopyFrom(const CreateVehicleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateVehicleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVehicleRsp::IsInitialized() const {
  return true;
}

void CreateVehicleRsp::Swap(CreateVehicleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateVehicleRsp::InternalSwap(CreateVehicleRsp* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(vehicle_id_, other->vehicle_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateVehicleRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateVehicleRsp

// int32 retcode = 10;
void CreateVehicleRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 CreateVehicleRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CreateVehicleRsp.retcode)
  return retcode_;
}
void CreateVehicleRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateVehicleRsp.retcode)
}

// uint32 vehicle_id = 9;
void CreateVehicleRsp::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
::google::protobuf::uint32 CreateVehicleRsp::vehicle_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateVehicleRsp.vehicle_id)
  return vehicle_id_;
}
void CreateVehicleRsp::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateVehicleRsp.vehicle_id)
}

// uint32 entity_id = 11;
void CreateVehicleRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 CreateVehicleRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateVehicleRsp.entity_id)
  return entity_id_;
}
void CreateVehicleRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateVehicleRsp.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestLiveInfoReq::kLiveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestLiveInfoReq::RequestLiveInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RequestLiveInfoReq)
}
RequestLiveInfoReq::RequestLiveInfoReq(const RequestLiveInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  live_id_ = from.live_id_;
  // @@protoc_insertion_point(copy_constructor:proto.RequestLiveInfoReq)
}

void RequestLiveInfoReq::SharedCtor() {
  live_id_ = 0u;
  _cached_size_ = 0;
}

RequestLiveInfoReq::~RequestLiveInfoReq() {
  // @@protoc_insertion_point(destructor:proto.RequestLiveInfoReq)
  SharedDtor();
}

void RequestLiveInfoReq::SharedDtor() {
}

void RequestLiveInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestLiveInfoReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestLiveInfoReq& RequestLiveInfoReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

RequestLiveInfoReq* RequestLiveInfoReq::New(::google::protobuf::Arena* arena) const {
  RequestLiveInfoReq* n = new RequestLiveInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestLiveInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RequestLiveInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RequestLiveInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RequestLiveInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 live_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &live_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RequestLiveInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RequestLiveInfoReq)
  return false;
#undef DO_
}

void RequestLiveInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RequestLiveInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 6;
  if (this->live_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->live_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RequestLiveInfoReq)
}

::google::protobuf::uint8* RequestLiveInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RequestLiveInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 6;
  if (this->live_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->live_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RequestLiveInfoReq)
  return target;
}

size_t RequestLiveInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RequestLiveInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 live_id = 6;
  if (this->live_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->live_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestLiveInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RequestLiveInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestLiveInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestLiveInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RequestLiveInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RequestLiveInfoReq)
    MergeFrom(*source);
  }
}

void RequestLiveInfoReq::MergeFrom(const RequestLiveInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RequestLiveInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.live_id() != 0) {
    set_live_id(from.live_id());
  }
}

void RequestLiveInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RequestLiveInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestLiveInfoReq::CopyFrom(const RequestLiveInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RequestLiveInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestLiveInfoReq::IsInitialized() const {
  return true;
}

void RequestLiveInfoReq::Swap(RequestLiveInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestLiveInfoReq::InternalSwap(RequestLiveInfoReq* other) {
  using std::swap;
  swap(live_id_, other->live_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestLiveInfoReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestLiveInfoReq

// uint32 live_id = 6;
void RequestLiveInfoReq::clear_live_id() {
  live_id_ = 0u;
}
::google::protobuf::uint32 RequestLiveInfoReq::live_id() const {
  // @@protoc_insertion_point(field_get:proto.RequestLiveInfoReq.live_id)
  return live_id_;
}
void RequestLiveInfoReq::set_live_id(::google::protobuf::uint32 value) {
  
  live_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RequestLiveInfoReq.live_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestLiveInfoRsp::kSpareLiveUrlFieldNumber;
const int RequestLiveInfoRsp::kRetcodeFieldNumber;
const int RequestLiveInfoRsp::kLiveUrlFieldNumber;
const int RequestLiveInfoRsp::kLiveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestLiveInfoRsp::RequestLiveInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RequestLiveInfoRsp)
}
RequestLiveInfoRsp::RequestLiveInfoRsp(const RequestLiveInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  live_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.live_url().size() > 0) {
    live_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_url_);
  }
  spare_live_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spare_live_url().size() > 0) {
    spare_live_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spare_live_url_);
  }
  ::memcpy(&live_id_, &from.live_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&live_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.RequestLiveInfoRsp)
}

void RequestLiveInfoRsp::SharedCtor() {
  live_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spare_live_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&live_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&live_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

RequestLiveInfoRsp::~RequestLiveInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.RequestLiveInfoRsp)
  SharedDtor();
}

void RequestLiveInfoRsp::SharedDtor() {
  live_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spare_live_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestLiveInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestLiveInfoRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestLiveInfoRsp& RequestLiveInfoRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

RequestLiveInfoRsp* RequestLiveInfoRsp::New(::google::protobuf::Arena* arena) const {
  RequestLiveInfoRsp* n = new RequestLiveInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestLiveInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RequestLiveInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spare_live_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&live_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&live_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool RequestLiveInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RequestLiveInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 live_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &live_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string live_url = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_live_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->live_url().data(), static_cast<int>(this->live_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RequestLiveInfoRsp.live_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spare_live_url = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spare_live_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spare_live_url().data(), static_cast<int>(this->spare_live_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RequestLiveInfoRsp.spare_live_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RequestLiveInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RequestLiveInfoRsp)
  return false;
#undef DO_
}

void RequestLiveInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RequestLiveInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 2;
  if (this->live_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->live_id(), output);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  // string live_url = 12;
  if (this->live_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_url().data(), static_cast<int>(this->live_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RequestLiveInfoRsp.live_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->live_url(), output);
  }

  // string spare_live_url = 14;
  if (this->spare_live_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spare_live_url().data(), static_cast<int>(this->spare_live_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RequestLiveInfoRsp.spare_live_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->spare_live_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RequestLiveInfoRsp)
}

::google::protobuf::uint8* RequestLiveInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RequestLiveInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 2;
  if (this->live_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->live_id(), target);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  // string live_url = 12;
  if (this->live_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_url().data(), static_cast<int>(this->live_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RequestLiveInfoRsp.live_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->live_url(), target);
  }

  // string spare_live_url = 14;
  if (this->spare_live_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spare_live_url().data(), static_cast<int>(this->spare_live_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RequestLiveInfoRsp.spare_live_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->spare_live_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RequestLiveInfoRsp)
  return target;
}

size_t RequestLiveInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RequestLiveInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string live_url = 12;
  if (this->live_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->live_url());
  }

  // string spare_live_url = 14;
  if (this->spare_live_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spare_live_url());
  }

  // uint32 live_id = 2;
  if (this->live_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->live_id());
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestLiveInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RequestLiveInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestLiveInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestLiveInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RequestLiveInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RequestLiveInfoRsp)
    MergeFrom(*source);
  }
}

void RequestLiveInfoRsp::MergeFrom(const RequestLiveInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RequestLiveInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.live_url().size() > 0) {

    live_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_url_);
  }
  if (from.spare_live_url().size() > 0) {

    spare_live_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spare_live_url_);
  }
  if (from.live_id() != 0) {
    set_live_id(from.live_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RequestLiveInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RequestLiveInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestLiveInfoRsp::CopyFrom(const RequestLiveInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RequestLiveInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestLiveInfoRsp::IsInitialized() const {
  return true;
}

void RequestLiveInfoRsp::Swap(RequestLiveInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestLiveInfoRsp::InternalSwap(RequestLiveInfoRsp* other) {
  using std::swap;
  live_url_.Swap(&other->live_url_);
  spare_live_url_.Swap(&other->spare_live_url_);
  swap(live_id_, other->live_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestLiveInfoRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestLiveInfoRsp

// string spare_live_url = 14;
void RequestLiveInfoRsp::clear_spare_live_url() {
  spare_live_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLiveInfoRsp::spare_live_url() const {
  // @@protoc_insertion_point(field_get:proto.RequestLiveInfoRsp.spare_live_url)
  return spare_live_url_.GetNoArena();
}
void RequestLiveInfoRsp::set_spare_live_url(const ::std::string& value) {
  
  spare_live_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RequestLiveInfoRsp.spare_live_url)
}
#if LANG_CXX11
void RequestLiveInfoRsp::set_spare_live_url(::std::string&& value) {
  
  spare_live_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RequestLiveInfoRsp.spare_live_url)
}
#endif
void RequestLiveInfoRsp::set_spare_live_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spare_live_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RequestLiveInfoRsp.spare_live_url)
}
void RequestLiveInfoRsp::set_spare_live_url(const char* value, size_t size) {
  
  spare_live_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RequestLiveInfoRsp.spare_live_url)
}
::std::string* RequestLiveInfoRsp::mutable_spare_live_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RequestLiveInfoRsp.spare_live_url)
  return spare_live_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLiveInfoRsp::release_spare_live_url() {
  // @@protoc_insertion_point(field_release:proto.RequestLiveInfoRsp.spare_live_url)
  
  return spare_live_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLiveInfoRsp::set_allocated_spare_live_url(::std::string* spare_live_url) {
  if (spare_live_url != NULL) {
    
  } else {
    
  }
  spare_live_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spare_live_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RequestLiveInfoRsp.spare_live_url)
}

// int32 retcode = 9;
void RequestLiveInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RequestLiveInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RequestLiveInfoRsp.retcode)
  return retcode_;
}
void RequestLiveInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RequestLiveInfoRsp.retcode)
}

// string live_url = 12;
void RequestLiveInfoRsp::clear_live_url() {
  live_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLiveInfoRsp::live_url() const {
  // @@protoc_insertion_point(field_get:proto.RequestLiveInfoRsp.live_url)
  return live_url_.GetNoArena();
}
void RequestLiveInfoRsp::set_live_url(const ::std::string& value) {
  
  live_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RequestLiveInfoRsp.live_url)
}
#if LANG_CXX11
void RequestLiveInfoRsp::set_live_url(::std::string&& value) {
  
  live_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RequestLiveInfoRsp.live_url)
}
#endif
void RequestLiveInfoRsp::set_live_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  live_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RequestLiveInfoRsp.live_url)
}
void RequestLiveInfoRsp::set_live_url(const char* value, size_t size) {
  
  live_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RequestLiveInfoRsp.live_url)
}
::std::string* RequestLiveInfoRsp::mutable_live_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RequestLiveInfoRsp.live_url)
  return live_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLiveInfoRsp::release_live_url() {
  // @@protoc_insertion_point(field_release:proto.RequestLiveInfoRsp.live_url)
  
  return live_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLiveInfoRsp::set_allocated_live_url(::std::string* live_url) {
  if (live_url != NULL) {
    
  } else {
    
  }
  live_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), live_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RequestLiveInfoRsp.live_url)
}

// uint32 live_id = 2;
void RequestLiveInfoRsp::clear_live_id() {
  live_id_ = 0u;
}
::google::protobuf::uint32 RequestLiveInfoRsp::live_id() const {
  // @@protoc_insertion_point(field_get:proto.RequestLiveInfoRsp.live_id)
  return live_id_;
}
void RequestLiveInfoRsp::set_live_id(::google::protobuf::uint32 value) {
  
  live_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RequestLiveInfoRsp.live_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiveStartNotify::kLiveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiveStartNotify::LiveStartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LiveStartNotify)
}
LiveStartNotify::LiveStartNotify(const LiveStartNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  live_id_ = from.live_id_;
  // @@protoc_insertion_point(copy_constructor:proto.LiveStartNotify)
}

void LiveStartNotify::SharedCtor() {
  live_id_ = 0u;
  _cached_size_ = 0;
}

LiveStartNotify::~LiveStartNotify() {
  // @@protoc_insertion_point(destructor:proto.LiveStartNotify)
  SharedDtor();
}

void LiveStartNotify::SharedDtor() {
}

void LiveStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiveStartNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiveStartNotify& LiveStartNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

LiveStartNotify* LiveStartNotify::New(::google::protobuf::Arena* arena) const {
  LiveStartNotify* n = new LiveStartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiveStartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LiveStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_id_ = 0u;
  _internal_metadata_.Clear();
}

bool LiveStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LiveStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 live_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &live_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LiveStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LiveStartNotify)
  return false;
#undef DO_
}

void LiveStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LiveStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 2;
  if (this->live_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->live_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LiveStartNotify)
}

::google::protobuf::uint8* LiveStartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LiveStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 2;
  if (this->live_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->live_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LiveStartNotify)
  return target;
}

size_t LiveStartNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LiveStartNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 live_id = 2;
  if (this->live_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->live_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiveStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LiveStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const LiveStartNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiveStartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LiveStartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LiveStartNotify)
    MergeFrom(*source);
  }
}

void LiveStartNotify::MergeFrom(const LiveStartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LiveStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.live_id() != 0) {
    set_live_id(from.live_id());
  }
}

void LiveStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LiveStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiveStartNotify::CopyFrom(const LiveStartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LiveStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiveStartNotify::IsInitialized() const {
  return true;
}

void LiveStartNotify::Swap(LiveStartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiveStartNotify::InternalSwap(LiveStartNotify* other) {
  using std::swap;
  swap(live_id_, other->live_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiveStartNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LiveStartNotify

// uint32 live_id = 2;
void LiveStartNotify::clear_live_id() {
  live_id_ = 0u;
}
::google::protobuf::uint32 LiveStartNotify::live_id() const {
  // @@protoc_insertion_point(field_get:proto.LiveStartNotify.live_id)
  return live_id_;
}
void LiveStartNotify::set_live_id(::google::protobuf::uint32 value) {
  
  live_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LiveStartNotify.live_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectorOptionReq::kOpTypeFieldNumber;
const int ProjectorOptionReq::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectorOptionReq::ProjectorOptionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ProjectorOptionReq)
}
ProjectorOptionReq::ProjectorOptionReq(const ProjectorOptionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ProjectorOptionReq)
}

void ProjectorOptionReq::SharedCtor() {
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

ProjectorOptionReq::~ProjectorOptionReq() {
  // @@protoc_insertion_point(destructor:proto.ProjectorOptionReq)
  SharedDtor();
}

void ProjectorOptionReq::SharedDtor() {
}

void ProjectorOptionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectorOptionReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectorOptionReq& ProjectorOptionReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProjectorOptionReq* ProjectorOptionReq::New(::google::protobuf::Arena* arena) const {
  ProjectorOptionReq* n = new ProjectorOptionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectorOptionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProjectorOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool ProjectorOptionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ProjectorOptionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 op_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ProjectorOptionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ProjectorOptionReq)
  return false;
#undef DO_
}

void ProjectorOptionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ProjectorOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 op_type = 7;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->op_type(), output);
  }

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ProjectorOptionReq)
}

::google::protobuf::uint8* ProjectorOptionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProjectorOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 op_type = 7;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->op_type(), target);
  }

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProjectorOptionReq)
  return target;
}

size_t ProjectorOptionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProjectorOptionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 op_type = 7;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op_type());
  }

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectorOptionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ProjectorOptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectorOptionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectorOptionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ProjectorOptionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ProjectorOptionReq)
    MergeFrom(*source);
  }
}

void ProjectorOptionReq::MergeFrom(const ProjectorOptionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ProjectorOptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void ProjectorOptionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ProjectorOptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectorOptionReq::CopyFrom(const ProjectorOptionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProjectorOptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectorOptionReq::IsInitialized() const {
  return true;
}

void ProjectorOptionReq::Swap(ProjectorOptionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectorOptionReq::InternalSwap(ProjectorOptionReq* other) {
  using std::swap;
  swap(op_type_, other->op_type_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectorOptionReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectorOptionReq

// uint32 op_type = 7;
void ProjectorOptionReq::clear_op_type() {
  op_type_ = 0u;
}
::google::protobuf::uint32 ProjectorOptionReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.ProjectorOptionReq.op_type)
  return op_type_;
}
void ProjectorOptionReq::set_op_type(::google::protobuf::uint32 value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ProjectorOptionReq.op_type)
}

// uint32 entity_id = 10;
void ProjectorOptionReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 ProjectorOptionReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ProjectorOptionReq.entity_id)
  return entity_id_;
}
void ProjectorOptionReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProjectorOptionReq.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectorOptionRsp::kEntityIdFieldNumber;
const int ProjectorOptionRsp::kRetcodeFieldNumber;
const int ProjectorOptionRsp::kOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectorOptionRsp::ProjectorOptionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ProjectorOptionRsp)
}
ProjectorOptionRsp::ProjectorOptionRsp(const ProjectorOptionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ProjectorOptionRsp)
}

void ProjectorOptionRsp::SharedCtor() {
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ProjectorOptionRsp::~ProjectorOptionRsp() {
  // @@protoc_insertion_point(destructor:proto.ProjectorOptionRsp)
  SharedDtor();
}

void ProjectorOptionRsp::SharedDtor() {
}

void ProjectorOptionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectorOptionRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectorOptionRsp& ProjectorOptionRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProjectorOptionRsp* ProjectorOptionRsp::New(::google::protobuf::Arena* arena) const {
  ProjectorOptionRsp* n = new ProjectorOptionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectorOptionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProjectorOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ProjectorOptionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ProjectorOptionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 op_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ProjectorOptionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ProjectorOptionRsp)
  return false;
#undef DO_
}

void ProjectorOptionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ProjectorOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->entity_id(), output);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  // uint32 op_type = 13;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ProjectorOptionRsp)
}

::google::protobuf::uint8* ProjectorOptionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProjectorOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->entity_id(), target);
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  // uint32 op_type = 13;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProjectorOptionRsp)
  return target;
}

size_t ProjectorOptionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProjectorOptionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 op_type = 13;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op_type());
  }

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectorOptionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ProjectorOptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectorOptionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectorOptionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ProjectorOptionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ProjectorOptionRsp)
    MergeFrom(*source);
  }
}

void ProjectorOptionRsp::MergeFrom(const ProjectorOptionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ProjectorOptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ProjectorOptionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ProjectorOptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectorOptionRsp::CopyFrom(const ProjectorOptionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProjectorOptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectorOptionRsp::IsInitialized() const {
  return true;
}

void ProjectorOptionRsp::Swap(ProjectorOptionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectorOptionRsp::InternalSwap(ProjectorOptionRsp* other) {
  using std::swap;
  swap(op_type_, other->op_type_);
  swap(entity_id_, other->entity_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectorOptionRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectorOptionRsp

// uint32 entity_id = 10;
void ProjectorOptionRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 ProjectorOptionRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ProjectorOptionRsp.entity_id)
  return entity_id_;
}
void ProjectorOptionRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProjectorOptionRsp.entity_id)
}

// int32 retcode = 12;
void ProjectorOptionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ProjectorOptionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ProjectorOptionRsp.retcode)
  return retcode_;
}
void ProjectorOptionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ProjectorOptionRsp.retcode)
}

// uint32 op_type = 13;
void ProjectorOptionRsp::clear_op_type() {
  op_type_ = 0u;
}
::google::protobuf::uint32 ProjectorOptionRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.ProjectorOptionRsp.op_type)
  return op_type_;
}
void ProjectorOptionRsp::set_op_type(::google::protobuf::uint32 value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ProjectorOptionRsp.op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiveEndNotify::kLiveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiveEndNotify::LiveEndNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LiveEndNotify)
}
LiveEndNotify::LiveEndNotify(const LiveEndNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  live_id_ = from.live_id_;
  // @@protoc_insertion_point(copy_constructor:proto.LiveEndNotify)
}

void LiveEndNotify::SharedCtor() {
  live_id_ = 0u;
  _cached_size_ = 0;
}

LiveEndNotify::~LiveEndNotify() {
  // @@protoc_insertion_point(destructor:proto.LiveEndNotify)
  SharedDtor();
}

void LiveEndNotify::SharedDtor() {
}

void LiveEndNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiveEndNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiveEndNotify& LiveEndNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

LiveEndNotify* LiveEndNotify::New(::google::protobuf::Arena* arena) const {
  LiveEndNotify* n = new LiveEndNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiveEndNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LiveEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_id_ = 0u;
  _internal_metadata_.Clear();
}

bool LiveEndNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LiveEndNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 live_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &live_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LiveEndNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LiveEndNotify)
  return false;
#undef DO_
}

void LiveEndNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LiveEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 5;
  if (this->live_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->live_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LiveEndNotify)
}

::google::protobuf::uint8* LiveEndNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LiveEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 live_id = 5;
  if (this->live_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->live_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LiveEndNotify)
  return target;
}

size_t LiveEndNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LiveEndNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 live_id = 5;
  if (this->live_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->live_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiveEndNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LiveEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const LiveEndNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiveEndNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LiveEndNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LiveEndNotify)
    MergeFrom(*source);
  }
}

void LiveEndNotify::MergeFrom(const LiveEndNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LiveEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.live_id() != 0) {
    set_live_id(from.live_id());
  }
}

void LiveEndNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LiveEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiveEndNotify::CopyFrom(const LiveEndNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LiveEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiveEndNotify::IsInitialized() const {
  return true;
}

void LiveEndNotify::Swap(LiveEndNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiveEndNotify::InternalSwap(LiveEndNotify* other) {
  using std::swap;
  swap(live_id_, other->live_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiveEndNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LiveEndNotify

// uint32 live_id = 5;
void LiveEndNotify::clear_live_id() {
  live_id_ = 0u;
}
::google::protobuf::uint32 LiveEndNotify::live_id() const {
  // @@protoc_insertion_point(field_get:proto.LiveEndNotify.live_id)
  return live_id_;
}
void LiveEndNotify::set_live_id(::google::protobuf::uint32 value) {
  
  live_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LiveEndNotify.live_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleStaminaNotify::kEntityIdFieldNumber;
const int VehicleStaminaNotify::kCurStaminaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleStaminaNotify::VehicleStaminaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.VehicleStaminaNotify)
}
VehicleStaminaNotify::VehicleStaminaNotify(const VehicleStaminaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_stamina_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(cur_stamina_));
  // @@protoc_insertion_point(copy_constructor:proto.VehicleStaminaNotify)
}

void VehicleStaminaNotify::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_stamina_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(cur_stamina_));
  _cached_size_ = 0;
}

VehicleStaminaNotify::~VehicleStaminaNotify() {
  // @@protoc_insertion_point(destructor:proto.VehicleStaminaNotify)
  SharedDtor();
}

void VehicleStaminaNotify::SharedDtor() {
}

void VehicleStaminaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VehicleStaminaNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleStaminaNotify& VehicleStaminaNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleStaminaNotify* VehicleStaminaNotify::New(::google::protobuf::Arena* arena) const {
  VehicleStaminaNotify* n = new VehicleStaminaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleStaminaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.VehicleStaminaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_stamina_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(cur_stamina_));
  _internal_metadata_.Clear();
}

bool VehicleStaminaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.VehicleStaminaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cur_stamina = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cur_stamina_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.VehicleStaminaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.VehicleStaminaNotify)
  return false;
#undef DO_
}

void VehicleStaminaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.VehicleStaminaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->entity_id(), output);
  }

  // float cur_stamina = 14;
  if (this->cur_stamina() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->cur_stamina(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.VehicleStaminaNotify)
}

::google::protobuf::uint8* VehicleStaminaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.VehicleStaminaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->entity_id(), target);
  }

  // float cur_stamina = 14;
  if (this->cur_stamina() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->cur_stamina(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.VehicleStaminaNotify)
  return target;
}

size_t VehicleStaminaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.VehicleStaminaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // float cur_stamina = 14;
  if (this->cur_stamina() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleStaminaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.VehicleStaminaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleStaminaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleStaminaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.VehicleStaminaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.VehicleStaminaNotify)
    MergeFrom(*source);
  }
}

void VehicleStaminaNotify::MergeFrom(const VehicleStaminaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.VehicleStaminaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.cur_stamina() != 0) {
    set_cur_stamina(from.cur_stamina());
  }
}

void VehicleStaminaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.VehicleStaminaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleStaminaNotify::CopyFrom(const VehicleStaminaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.VehicleStaminaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleStaminaNotify::IsInitialized() const {
  return true;
}

void VehicleStaminaNotify::Swap(VehicleStaminaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleStaminaNotify::InternalSwap(VehicleStaminaNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(cur_stamina_, other->cur_stamina_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VehicleStaminaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleStaminaNotify

// uint32 entity_id = 6;
void VehicleStaminaNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 VehicleStaminaNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.VehicleStaminaNotify.entity_id)
  return entity_id_;
}
void VehicleStaminaNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleStaminaNotify.entity_id)
}

// float cur_stamina = 14;
void VehicleStaminaNotify::clear_cur_stamina() {
  cur_stamina_ = 0;
}
float VehicleStaminaNotify::cur_stamina() const {
  // @@protoc_insertion_point(field_get:proto.VehicleStaminaNotify.cur_stamina)
  return cur_stamina_;
}
void VehicleStaminaNotify::set_cur_stamina(float value) {
  
  cur_stamina_ = value;
  // @@protoc_insertion_point(field_set:proto.VehicleStaminaNotify.cur_stamina)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetCustomTreeInfoNotify::kCustomGadgetTreeInfoFieldNumber;
const int GadgetCustomTreeInfoNotify::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetCustomTreeInfoNotify::GadgetCustomTreeInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetCustomTreeInfoNotify)
}
GadgetCustomTreeInfoNotify::GadgetCustomTreeInfoNotify(const GadgetCustomTreeInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_custom_gadget_tree_info()) {
    custom_gadget_tree_info_ = new ::proto::CustomGadgetTreeInfo(*from.custom_gadget_tree_info_);
  } else {
    custom_gadget_tree_info_ = NULL;
  }
  gadget_entity_id_ = from.gadget_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GadgetCustomTreeInfoNotify)
}

void GadgetCustomTreeInfoNotify::SharedCtor() {
  ::memset(&custom_gadget_tree_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&custom_gadget_tree_info_)) + sizeof(gadget_entity_id_));
  _cached_size_ = 0;
}

GadgetCustomTreeInfoNotify::~GadgetCustomTreeInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetCustomTreeInfoNotify)
  SharedDtor();
}

void GadgetCustomTreeInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete custom_gadget_tree_info_;
}

void GadgetCustomTreeInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetCustomTreeInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetCustomTreeInfoNotify& GadgetCustomTreeInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetCustomTreeInfoNotify* GadgetCustomTreeInfoNotify::New(::google::protobuf::Arena* arena) const {
  GadgetCustomTreeInfoNotify* n = new GadgetCustomTreeInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetCustomTreeInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetCustomTreeInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && custom_gadget_tree_info_ != NULL) {
    delete custom_gadget_tree_info_;
  }
  custom_gadget_tree_info_ = NULL;
  gadget_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GadgetCustomTreeInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetCustomTreeInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_custom_gadget_tree_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetCustomTreeInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetCustomTreeInfoNotify)
  return false;
#undef DO_
}

void GadgetCustomTreeInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetCustomTreeInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 5;
  if (this->has_custom_gadget_tree_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->custom_gadget_tree_info_, output);
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->gadget_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetCustomTreeInfoNotify)
}

::google::protobuf::uint8* GadgetCustomTreeInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetCustomTreeInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 5;
  if (this->has_custom_gadget_tree_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->custom_gadget_tree_info_, deterministic, target);
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->gadget_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetCustomTreeInfoNotify)
  return target;
}

size_t GadgetCustomTreeInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetCustomTreeInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 5;
  if (this->has_custom_gadget_tree_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->custom_gadget_tree_info_);
  }

  // uint32 gadget_entity_id = 12;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetCustomTreeInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetCustomTreeInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetCustomTreeInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetCustomTreeInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetCustomTreeInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetCustomTreeInfoNotify)
    MergeFrom(*source);
  }
}

void GadgetCustomTreeInfoNotify::MergeFrom(const GadgetCustomTreeInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetCustomTreeInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_custom_gadget_tree_info()) {
    mutable_custom_gadget_tree_info()->::proto::CustomGadgetTreeInfo::MergeFrom(from.custom_gadget_tree_info());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void GadgetCustomTreeInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetCustomTreeInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetCustomTreeInfoNotify::CopyFrom(const GadgetCustomTreeInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetCustomTreeInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetCustomTreeInfoNotify::IsInitialized() const {
  return true;
}

void GadgetCustomTreeInfoNotify::Swap(GadgetCustomTreeInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetCustomTreeInfoNotify::InternalSwap(GadgetCustomTreeInfoNotify* other) {
  using std::swap;
  swap(custom_gadget_tree_info_, other->custom_gadget_tree_info_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetCustomTreeInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetCustomTreeInfoNotify

// .proto.CustomGadgetTreeInfo custom_gadget_tree_info = 5;
bool GadgetCustomTreeInfoNotify::has_custom_gadget_tree_info() const {
  return this != internal_default_instance() && custom_gadget_tree_info_ != NULL;
}
void GadgetCustomTreeInfoNotify::clear_custom_gadget_tree_info() {
  if (GetArenaNoVirtual() == NULL && custom_gadget_tree_info_ != NULL) delete custom_gadget_tree_info_;
  custom_gadget_tree_info_ = NULL;
}
const ::proto::CustomGadgetTreeInfo& GadgetCustomTreeInfoNotify::custom_gadget_tree_info() const {
  const ::proto::CustomGadgetTreeInfo* p = custom_gadget_tree_info_;
  // @@protoc_insertion_point(field_get:proto.GadgetCustomTreeInfoNotify.custom_gadget_tree_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomGadgetTreeInfo*>(
      &::proto::_CustomGadgetTreeInfo_default_instance_);
}
::proto::CustomGadgetTreeInfo* GadgetCustomTreeInfoNotify::mutable_custom_gadget_tree_info() {
  
  if (custom_gadget_tree_info_ == NULL) {
    custom_gadget_tree_info_ = new ::proto::CustomGadgetTreeInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetCustomTreeInfoNotify.custom_gadget_tree_info)
  return custom_gadget_tree_info_;
}
::proto::CustomGadgetTreeInfo* GadgetCustomTreeInfoNotify::release_custom_gadget_tree_info() {
  // @@protoc_insertion_point(field_release:proto.GadgetCustomTreeInfoNotify.custom_gadget_tree_info)
  
  ::proto::CustomGadgetTreeInfo* temp = custom_gadget_tree_info_;
  custom_gadget_tree_info_ = NULL;
  return temp;
}
void GadgetCustomTreeInfoNotify::set_allocated_custom_gadget_tree_info(::proto::CustomGadgetTreeInfo* custom_gadget_tree_info) {
  delete custom_gadget_tree_info_;
  custom_gadget_tree_info_ = custom_gadget_tree_info;
  if (custom_gadget_tree_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetCustomTreeInfoNotify.custom_gadget_tree_info)
}

// uint32 gadget_entity_id = 12;
void GadgetCustomTreeInfoNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetCustomTreeInfoNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetCustomTreeInfoNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetCustomTreeInfoNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetCustomTreeInfoNotify.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetChangeLevelTagReq::kLevelTagIdFieldNumber;
const int GadgetChangeLevelTagReq::kCombinationInfoFieldNumber;
const int GadgetChangeLevelTagReq::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetChangeLevelTagReq::GadgetChangeLevelTagReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetChangeLevelTagReq)
}
GadgetChangeLevelTagReq::GadgetChangeLevelTagReq(const GadgetChangeLevelTagReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_combination_info()) {
    combination_info_ = new ::proto::CustomGadgetTreeInfo(*from.combination_info_);
  } else {
    combination_info_ = NULL;
  }
  ::memcpy(&gadget_entity_id_, &from.gadget_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_tag_id_) -
    reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(level_tag_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetChangeLevelTagReq)
}

void GadgetChangeLevelTagReq::SharedCtor() {
  ::memset(&combination_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_tag_id_) -
      reinterpret_cast<char*>(&combination_info_)) + sizeof(level_tag_id_));
  _cached_size_ = 0;
}

GadgetChangeLevelTagReq::~GadgetChangeLevelTagReq() {
  // @@protoc_insertion_point(destructor:proto.GadgetChangeLevelTagReq)
  SharedDtor();
}

void GadgetChangeLevelTagReq::SharedDtor() {
  if (this != internal_default_instance()) delete combination_info_;
}

void GadgetChangeLevelTagReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetChangeLevelTagReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetChangeLevelTagReq& GadgetChangeLevelTagReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetChangeLevelTagReq* GadgetChangeLevelTagReq::New(::google::protobuf::Arena* arena) const {
  GadgetChangeLevelTagReq* n = new GadgetChangeLevelTagReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetChangeLevelTagReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetChangeLevelTagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && combination_info_ != NULL) {
    delete combination_info_;
  }
  combination_info_ = NULL;
  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_tag_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(level_tag_id_));
  _internal_metadata_.Clear();
}

bool GadgetChangeLevelTagReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetChangeLevelTagReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_entity_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomGadgetTreeInfo combination_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_combination_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level_tag_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_tag_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetChangeLevelTagReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetChangeLevelTagReq)
  return false;
#undef DO_
}

void GadgetChangeLevelTagReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetChangeLevelTagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->gadget_entity_id(), output);
  }

  // .proto.CustomGadgetTreeInfo combination_info = 11;
  if (this->has_combination_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->combination_info_, output);
  }

  // uint32 level_tag_id = 14;
  if (this->level_tag_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->level_tag_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetChangeLevelTagReq)
}

::google::protobuf::uint8* GadgetChangeLevelTagReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetChangeLevelTagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->gadget_entity_id(), target);
  }

  // .proto.CustomGadgetTreeInfo combination_info = 11;
  if (this->has_combination_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->combination_info_, deterministic, target);
  }

  // uint32 level_tag_id = 14;
  if (this->level_tag_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->level_tag_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetChangeLevelTagReq)
  return target;
}

size_t GadgetChangeLevelTagReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetChangeLevelTagReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CustomGadgetTreeInfo combination_info = 11;
  if (this->has_combination_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->combination_info_);
  }

  // uint32 gadget_entity_id = 10;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 level_tag_id = 14;
  if (this->level_tag_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_tag_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetChangeLevelTagReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetChangeLevelTagReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetChangeLevelTagReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetChangeLevelTagReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetChangeLevelTagReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetChangeLevelTagReq)
    MergeFrom(*source);
  }
}

void GadgetChangeLevelTagReq::MergeFrom(const GadgetChangeLevelTagReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetChangeLevelTagReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_combination_info()) {
    mutable_combination_info()->::proto::CustomGadgetTreeInfo::MergeFrom(from.combination_info());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.level_tag_id() != 0) {
    set_level_tag_id(from.level_tag_id());
  }
}

void GadgetChangeLevelTagReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetChangeLevelTagReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetChangeLevelTagReq::CopyFrom(const GadgetChangeLevelTagReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetChangeLevelTagReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetChangeLevelTagReq::IsInitialized() const {
  return true;
}

void GadgetChangeLevelTagReq::Swap(GadgetChangeLevelTagReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetChangeLevelTagReq::InternalSwap(GadgetChangeLevelTagReq* other) {
  using std::swap;
  swap(combination_info_, other->combination_info_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(level_tag_id_, other->level_tag_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetChangeLevelTagReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetChangeLevelTagReq

// uint32 level_tag_id = 14;
void GadgetChangeLevelTagReq::clear_level_tag_id() {
  level_tag_id_ = 0u;
}
::google::protobuf::uint32 GadgetChangeLevelTagReq::level_tag_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetChangeLevelTagReq.level_tag_id)
  return level_tag_id_;
}
void GadgetChangeLevelTagReq::set_level_tag_id(::google::protobuf::uint32 value) {
  
  level_tag_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetChangeLevelTagReq.level_tag_id)
}

// .proto.CustomGadgetTreeInfo combination_info = 11;
bool GadgetChangeLevelTagReq::has_combination_info() const {
  return this != internal_default_instance() && combination_info_ != NULL;
}
void GadgetChangeLevelTagReq::clear_combination_info() {
  if (GetArenaNoVirtual() == NULL && combination_info_ != NULL) delete combination_info_;
  combination_info_ = NULL;
}
const ::proto::CustomGadgetTreeInfo& GadgetChangeLevelTagReq::combination_info() const {
  const ::proto::CustomGadgetTreeInfo* p = combination_info_;
  // @@protoc_insertion_point(field_get:proto.GadgetChangeLevelTagReq.combination_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomGadgetTreeInfo*>(
      &::proto::_CustomGadgetTreeInfo_default_instance_);
}
::proto::CustomGadgetTreeInfo* GadgetChangeLevelTagReq::mutable_combination_info() {
  
  if (combination_info_ == NULL) {
    combination_info_ = new ::proto::CustomGadgetTreeInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetChangeLevelTagReq.combination_info)
  return combination_info_;
}
::proto::CustomGadgetTreeInfo* GadgetChangeLevelTagReq::release_combination_info() {
  // @@protoc_insertion_point(field_release:proto.GadgetChangeLevelTagReq.combination_info)
  
  ::proto::CustomGadgetTreeInfo* temp = combination_info_;
  combination_info_ = NULL;
  return temp;
}
void GadgetChangeLevelTagReq::set_allocated_combination_info(::proto::CustomGadgetTreeInfo* combination_info) {
  delete combination_info_;
  combination_info_ = combination_info;
  if (combination_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetChangeLevelTagReq.combination_info)
}

// uint32 gadget_entity_id = 10;
void GadgetChangeLevelTagReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetChangeLevelTagReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetChangeLevelTagReq.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetChangeLevelTagReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetChangeLevelTagReq.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetChangeLevelTagRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetChangeLevelTagRsp::GadgetChangeLevelTagRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetChangeLevelTagRsp)
}
GadgetChangeLevelTagRsp::GadgetChangeLevelTagRsp(const GadgetChangeLevelTagRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GadgetChangeLevelTagRsp)
}

void GadgetChangeLevelTagRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GadgetChangeLevelTagRsp::~GadgetChangeLevelTagRsp() {
  // @@protoc_insertion_point(destructor:proto.GadgetChangeLevelTagRsp)
  SharedDtor();
}

void GadgetChangeLevelTagRsp::SharedDtor() {
}

void GadgetChangeLevelTagRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetChangeLevelTagRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetChangeLevelTagRsp& GadgetChangeLevelTagRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetChangeLevelTagRsp* GadgetChangeLevelTagRsp::New(::google::protobuf::Arena* arena) const {
  GadgetChangeLevelTagRsp* n = new GadgetChangeLevelTagRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetChangeLevelTagRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetChangeLevelTagRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GadgetChangeLevelTagRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetChangeLevelTagRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetChangeLevelTagRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetChangeLevelTagRsp)
  return false;
#undef DO_
}

void GadgetChangeLevelTagRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetChangeLevelTagRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetChangeLevelTagRsp)
}

::google::protobuf::uint8* GadgetChangeLevelTagRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetChangeLevelTagRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetChangeLevelTagRsp)
  return target;
}

size_t GadgetChangeLevelTagRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetChangeLevelTagRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetChangeLevelTagRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetChangeLevelTagRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetChangeLevelTagRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetChangeLevelTagRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetChangeLevelTagRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetChangeLevelTagRsp)
    MergeFrom(*source);
  }
}

void GadgetChangeLevelTagRsp::MergeFrom(const GadgetChangeLevelTagRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetChangeLevelTagRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GadgetChangeLevelTagRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetChangeLevelTagRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetChangeLevelTagRsp::CopyFrom(const GadgetChangeLevelTagRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetChangeLevelTagRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetChangeLevelTagRsp::IsInitialized() const {
  return true;
}

void GadgetChangeLevelTagRsp::Swap(GadgetChangeLevelTagRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetChangeLevelTagRsp::InternalSwap(GadgetChangeLevelTagRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetChangeLevelTagRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetChangeLevelTagRsp

// int32 retcode = 12;
void GadgetChangeLevelTagRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GadgetChangeLevelTagRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GadgetChangeLevelTagRsp.retcode)
  return retcode_;
}
void GadgetChangeLevelTagRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetChangeLevelTagRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NightCrowGadgetObservationMatchReq::kTargetGadgetStateFieldNumber;
const int NightCrowGadgetObservationMatchReq::kGadgetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NightCrowGadgetObservationMatchReq::NightCrowGadgetObservationMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NightCrowGadgetObservationMatchReq)
}
NightCrowGadgetObservationMatchReq::NightCrowGadgetObservationMatchReq(const NightCrowGadgetObservationMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_gadget_state_, &from.target_gadget_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_entity_id_) -
    reinterpret_cast<char*>(&target_gadget_state_)) + sizeof(gadget_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.NightCrowGadgetObservationMatchReq)
}

void NightCrowGadgetObservationMatchReq::SharedCtor() {
  ::memset(&target_gadget_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&target_gadget_state_)) + sizeof(gadget_entity_id_));
  _cached_size_ = 0;
}

NightCrowGadgetObservationMatchReq::~NightCrowGadgetObservationMatchReq() {
  // @@protoc_insertion_point(destructor:proto.NightCrowGadgetObservationMatchReq)
  SharedDtor();
}

void NightCrowGadgetObservationMatchReq::SharedDtor() {
}

void NightCrowGadgetObservationMatchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NightCrowGadgetObservationMatchReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NightCrowGadgetObservationMatchReq& NightCrowGadgetObservationMatchReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

NightCrowGadgetObservationMatchReq* NightCrowGadgetObservationMatchReq::New(::google::protobuf::Arena* arena) const {
  NightCrowGadgetObservationMatchReq* n = new NightCrowGadgetObservationMatchReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NightCrowGadgetObservationMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NightCrowGadgetObservationMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_gadget_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_entity_id_) -
      reinterpret_cast<char*>(&target_gadget_state_)) + sizeof(gadget_entity_id_));
  _internal_metadata_.Clear();
}

bool NightCrowGadgetObservationMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NightCrowGadgetObservationMatchReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_gadget_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_gadget_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NightCrowGadgetObservationMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NightCrowGadgetObservationMatchReq)
  return false;
#undef DO_
}

void NightCrowGadgetObservationMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NightCrowGadgetObservationMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_gadget_state = 3;
  if (this->target_gadget_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_gadget_state(), output);
  }

  // uint32 gadget_entity_id = 8;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->gadget_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NightCrowGadgetObservationMatchReq)
}

::google::protobuf::uint8* NightCrowGadgetObservationMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NightCrowGadgetObservationMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_gadget_state = 3;
  if (this->target_gadget_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_gadget_state(), target);
  }

  // uint32 gadget_entity_id = 8;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->gadget_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NightCrowGadgetObservationMatchReq)
  return target;
}

size_t NightCrowGadgetObservationMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NightCrowGadgetObservationMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_gadget_state = 3;
  if (this->target_gadget_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_gadget_state());
  }

  // uint32 gadget_entity_id = 8;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NightCrowGadgetObservationMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NightCrowGadgetObservationMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const NightCrowGadgetObservationMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NightCrowGadgetObservationMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NightCrowGadgetObservationMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NightCrowGadgetObservationMatchReq)
    MergeFrom(*source);
  }
}

void NightCrowGadgetObservationMatchReq::MergeFrom(const NightCrowGadgetObservationMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NightCrowGadgetObservationMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_gadget_state() != 0) {
    set_target_gadget_state(from.target_gadget_state());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void NightCrowGadgetObservationMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NightCrowGadgetObservationMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NightCrowGadgetObservationMatchReq::CopyFrom(const NightCrowGadgetObservationMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NightCrowGadgetObservationMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NightCrowGadgetObservationMatchReq::IsInitialized() const {
  return true;
}

void NightCrowGadgetObservationMatchReq::Swap(NightCrowGadgetObservationMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NightCrowGadgetObservationMatchReq::InternalSwap(NightCrowGadgetObservationMatchReq* other) {
  using std::swap;
  swap(target_gadget_state_, other->target_gadget_state_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NightCrowGadgetObservationMatchReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NightCrowGadgetObservationMatchReq

// uint32 target_gadget_state = 3;
void NightCrowGadgetObservationMatchReq::clear_target_gadget_state() {
  target_gadget_state_ = 0u;
}
::google::protobuf::uint32 NightCrowGadgetObservationMatchReq::target_gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.NightCrowGadgetObservationMatchReq.target_gadget_state)
  return target_gadget_state_;
}
void NightCrowGadgetObservationMatchReq::set_target_gadget_state(::google::protobuf::uint32 value) {
  
  target_gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.NightCrowGadgetObservationMatchReq.target_gadget_state)
}

// uint32 gadget_entity_id = 8;
void NightCrowGadgetObservationMatchReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 NightCrowGadgetObservationMatchReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.NightCrowGadgetObservationMatchReq.gadget_entity_id)
  return gadget_entity_id_;
}
void NightCrowGadgetObservationMatchReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.NightCrowGadgetObservationMatchReq.gadget_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NightCrowGadgetObservationMatchRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NightCrowGadgetObservationMatchRsp::NightCrowGadgetObservationMatchRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NightCrowGadgetObservationMatchRsp)
}
NightCrowGadgetObservationMatchRsp::NightCrowGadgetObservationMatchRsp(const NightCrowGadgetObservationMatchRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.NightCrowGadgetObservationMatchRsp)
}

void NightCrowGadgetObservationMatchRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

NightCrowGadgetObservationMatchRsp::~NightCrowGadgetObservationMatchRsp() {
  // @@protoc_insertion_point(destructor:proto.NightCrowGadgetObservationMatchRsp)
  SharedDtor();
}

void NightCrowGadgetObservationMatchRsp::SharedDtor() {
}

void NightCrowGadgetObservationMatchRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NightCrowGadgetObservationMatchRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NightCrowGadgetObservationMatchRsp& NightCrowGadgetObservationMatchRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

NightCrowGadgetObservationMatchRsp* NightCrowGadgetObservationMatchRsp::New(::google::protobuf::Arena* arena) const {
  NightCrowGadgetObservationMatchRsp* n = new NightCrowGadgetObservationMatchRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NightCrowGadgetObservationMatchRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NightCrowGadgetObservationMatchRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool NightCrowGadgetObservationMatchRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NightCrowGadgetObservationMatchRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NightCrowGadgetObservationMatchRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NightCrowGadgetObservationMatchRsp)
  return false;
#undef DO_
}

void NightCrowGadgetObservationMatchRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NightCrowGadgetObservationMatchRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NightCrowGadgetObservationMatchRsp)
}

::google::protobuf::uint8* NightCrowGadgetObservationMatchRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NightCrowGadgetObservationMatchRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NightCrowGadgetObservationMatchRsp)
  return target;
}

size_t NightCrowGadgetObservationMatchRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NightCrowGadgetObservationMatchRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NightCrowGadgetObservationMatchRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NightCrowGadgetObservationMatchRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const NightCrowGadgetObservationMatchRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NightCrowGadgetObservationMatchRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NightCrowGadgetObservationMatchRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NightCrowGadgetObservationMatchRsp)
    MergeFrom(*source);
  }
}

void NightCrowGadgetObservationMatchRsp::MergeFrom(const NightCrowGadgetObservationMatchRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NightCrowGadgetObservationMatchRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void NightCrowGadgetObservationMatchRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NightCrowGadgetObservationMatchRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NightCrowGadgetObservationMatchRsp::CopyFrom(const NightCrowGadgetObservationMatchRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NightCrowGadgetObservationMatchRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NightCrowGadgetObservationMatchRsp::IsInitialized() const {
  return true;
}

void NightCrowGadgetObservationMatchRsp::Swap(NightCrowGadgetObservationMatchRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NightCrowGadgetObservationMatchRsp::InternalSwap(NightCrowGadgetObservationMatchRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NightCrowGadgetObservationMatchRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NightCrowGadgetObservationMatchRsp

// int32 retcode = 15;
void NightCrowGadgetObservationMatchRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 NightCrowGadgetObservationMatchRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.NightCrowGadgetObservationMatchRsp.retcode)
  return retcode_;
}
void NightCrowGadgetObservationMatchRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.NightCrowGadgetObservationMatchRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeshretObeliskChestInfo::kSceneIdFieldNumber;
const int DeshretObeliskChestInfo::kPosFieldNumber;
const int DeshretObeliskChestInfo::kGroupIdFieldNumber;
const int DeshretObeliskChestInfo::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeshretObeliskChestInfo::DeshretObeliskChestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeshretObeliskChestInfo)
}
DeshretObeliskChestInfo::DeshretObeliskChestInfo(const DeshretObeliskChestInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&config_id_, &from.config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&config_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:proto.DeshretObeliskChestInfo)
}

void DeshretObeliskChestInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

DeshretObeliskChestInfo::~DeshretObeliskChestInfo() {
  // @@protoc_insertion_point(destructor:proto.DeshretObeliskChestInfo)
  SharedDtor();
}

void DeshretObeliskChestInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void DeshretObeliskChestInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeshretObeliskChestInfo::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeshretObeliskChestInfo& DeshretObeliskChestInfo::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeshretObeliskChestInfo* DeshretObeliskChestInfo::New(::google::protobuf::Arena* arena) const {
  DeshretObeliskChestInfo* n = new DeshretObeliskChestInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeshretObeliskChestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeshretObeliskChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool DeshretObeliskChestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeshretObeliskChestInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeshretObeliskChestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeshretObeliskChestInfo)
  return false;
#undef DO_
}

void DeshretObeliskChestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeshretObeliskChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->config_id(), output);
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scene_id(), output);
  }

  // uint32 group_id = 7;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->group_id(), output);
  }

  // .proto.Vector pos = 9;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeshretObeliskChestInfo)
}

::google::protobuf::uint8* DeshretObeliskChestInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeshretObeliskChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->config_id(), target);
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scene_id(), target);
  }

  // uint32 group_id = 7;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->group_id(), target);
  }

  // .proto.Vector pos = 9;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeshretObeliskChestInfo)
  return target;
}

size_t DeshretObeliskChestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeshretObeliskChestInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 9;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 group_id = 7;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeshretObeliskChestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeshretObeliskChestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeshretObeliskChestInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeshretObeliskChestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeshretObeliskChestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeshretObeliskChestInfo)
    MergeFrom(*source);
  }
}

void DeshretObeliskChestInfo::MergeFrom(const DeshretObeliskChestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeshretObeliskChestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void DeshretObeliskChestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeshretObeliskChestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeshretObeliskChestInfo::CopyFrom(const DeshretObeliskChestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeshretObeliskChestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeshretObeliskChestInfo::IsInitialized() const {
  return true;
}

void DeshretObeliskChestInfo::Swap(DeshretObeliskChestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeshretObeliskChestInfo::InternalSwap(DeshretObeliskChestInfo* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(config_id_, other->config_id_);
  swap(scene_id_, other->scene_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeshretObeliskChestInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeshretObeliskChestInfo

// uint32 scene_id = 5;
void DeshretObeliskChestInfo::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 DeshretObeliskChestInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DeshretObeliskChestInfo.scene_id)
  return scene_id_;
}
void DeshretObeliskChestInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeshretObeliskChestInfo.scene_id)
}

// .proto.Vector pos = 9;
bool DeshretObeliskChestInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void DeshretObeliskChestInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& DeshretObeliskChestInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.DeshretObeliskChestInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* DeshretObeliskChestInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.DeshretObeliskChestInfo.pos)
  return pos_;
}
::proto::Vector* DeshretObeliskChestInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.DeshretObeliskChestInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void DeshretObeliskChestInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DeshretObeliskChestInfo.pos)
}

// uint32 group_id = 7;
void DeshretObeliskChestInfo::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 DeshretObeliskChestInfo::group_id() const {
  // @@protoc_insertion_point(field_get:proto.DeshretObeliskChestInfo.group_id)
  return group_id_;
}
void DeshretObeliskChestInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeshretObeliskChestInfo.group_id)
}

// uint32 config_id = 3;
void DeshretObeliskChestInfo::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 DeshretObeliskChestInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.DeshretObeliskChestInfo.config_id)
  return config_id_;
}
void DeshretObeliskChestInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeshretObeliskChestInfo.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeshretObeliskChestInfoNotify::kChestInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeshretObeliskChestInfoNotify::DeshretObeliskChestInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeshretObeliskChestInfoNotify)
}
DeshretObeliskChestInfoNotify::DeshretObeliskChestInfoNotify(const DeshretObeliskChestInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chest_info_list_(from.chest_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DeshretObeliskChestInfoNotify)
}

void DeshretObeliskChestInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

DeshretObeliskChestInfoNotify::~DeshretObeliskChestInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.DeshretObeliskChestInfoNotify)
  SharedDtor();
}

void DeshretObeliskChestInfoNotify::SharedDtor() {
}

void DeshretObeliskChestInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeshretObeliskChestInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeshretObeliskChestInfoNotify& DeshretObeliskChestInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeshretObeliskChestInfoNotify* DeshretObeliskChestInfoNotify::New(::google::protobuf::Arena* arena) const {
  DeshretObeliskChestInfoNotify* n = new DeshretObeliskChestInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeshretObeliskChestInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeshretObeliskChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chest_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool DeshretObeliskChestInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeshretObeliskChestInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.DeshretObeliskChestInfo chest_info_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chest_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeshretObeliskChestInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeshretObeliskChestInfoNotify)
  return false;
#undef DO_
}

void DeshretObeliskChestInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeshretObeliskChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DeshretObeliskChestInfo chest_info_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chest_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->chest_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeshretObeliskChestInfoNotify)
}

::google::protobuf::uint8* DeshretObeliskChestInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeshretObeliskChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DeshretObeliskChestInfo chest_info_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chest_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->chest_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeshretObeliskChestInfoNotify)
  return target;
}

size_t DeshretObeliskChestInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeshretObeliskChestInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.DeshretObeliskChestInfo chest_info_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->chest_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chest_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeshretObeliskChestInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeshretObeliskChestInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DeshretObeliskChestInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeshretObeliskChestInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeshretObeliskChestInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeshretObeliskChestInfoNotify)
    MergeFrom(*source);
  }
}

void DeshretObeliskChestInfoNotify::MergeFrom(const DeshretObeliskChestInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeshretObeliskChestInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chest_info_list_.MergeFrom(from.chest_info_list_);
}

void DeshretObeliskChestInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeshretObeliskChestInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeshretObeliskChestInfoNotify::CopyFrom(const DeshretObeliskChestInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeshretObeliskChestInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeshretObeliskChestInfoNotify::IsInitialized() const {
  return true;
}

void DeshretObeliskChestInfoNotify::Swap(DeshretObeliskChestInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeshretObeliskChestInfoNotify::InternalSwap(DeshretObeliskChestInfoNotify* other) {
  using std::swap;
  chest_info_list_.InternalSwap(&other->chest_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeshretObeliskChestInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeshretObeliskChestInfoNotify

// repeated .proto.DeshretObeliskChestInfo chest_info_list = 14;
int DeshretObeliskChestInfoNotify::chest_info_list_size() const {
  return chest_info_list_.size();
}
void DeshretObeliskChestInfoNotify::clear_chest_info_list() {
  chest_info_list_.Clear();
}
const ::proto::DeshretObeliskChestInfo& DeshretObeliskChestInfoNotify::chest_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DeshretObeliskChestInfoNotify.chest_info_list)
  return chest_info_list_.Get(index);
}
::proto::DeshretObeliskChestInfo* DeshretObeliskChestInfoNotify::mutable_chest_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DeshretObeliskChestInfoNotify.chest_info_list)
  return chest_info_list_.Mutable(index);
}
::proto::DeshretObeliskChestInfo* DeshretObeliskChestInfoNotify::add_chest_info_list() {
  // @@protoc_insertion_point(field_add:proto.DeshretObeliskChestInfoNotify.chest_info_list)
  return chest_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::DeshretObeliskChestInfo >*
DeshretObeliskChestInfoNotify::mutable_chest_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DeshretObeliskChestInfoNotify.chest_info_list)
  return &chest_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::DeshretObeliskChestInfo >&
DeshretObeliskChestInfoNotify::chest_info_list() const {
  // @@protoc_insertion_point(field_list:proto.DeshretObeliskChestInfoNotify.chest_info_list)
  return chest_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
