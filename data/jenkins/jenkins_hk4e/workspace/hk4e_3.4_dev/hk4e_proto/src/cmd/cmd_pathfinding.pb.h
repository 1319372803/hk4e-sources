// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_pathfinding.proto

#ifndef PROTOBUF_cmd_2fcmd_5fpathfinding_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fpathfinding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class GMObstacleInfo;
class GMObstacleInfoDefaultTypeInternal;
extern GMObstacleInfoDefaultTypeInternal _GMObstacleInfo_default_instance_;
class GMShowNavMeshReq;
class GMShowNavMeshReqDefaultTypeInternal;
extern GMShowNavMeshReqDefaultTypeInternal _GMShowNavMeshReq_default_instance_;
class GMShowNavMeshRsp;
class GMShowNavMeshRspDefaultTypeInternal;
extern GMShowNavMeshRspDefaultTypeInternal _GMShowNavMeshRsp_default_instance_;
class GMShowObstacleReq;
class GMShowObstacleReqDefaultTypeInternal;
extern GMShowObstacleReqDefaultTypeInternal _GMShowObstacleReq_default_instance_;
class GMShowObstacleRsp;
class GMShowObstacleRspDefaultTypeInternal;
extern GMShowObstacleRspDefaultTypeInternal _GMShowObstacleRsp_default_instance_;
class NavMeshStatsNotify;
class NavMeshStatsNotifyDefaultTypeInternal;
extern NavMeshStatsNotifyDefaultTypeInternal _NavMeshStatsNotify_default_instance_;
class ObstacleInfo;
class ObstacleInfoDefaultTypeInternal;
extern ObstacleInfoDefaultTypeInternal _ObstacleInfo_default_instance_;
class ObstacleModifyNotify;
class ObstacleModifyNotifyDefaultTypeInternal;
extern ObstacleModifyNotifyDefaultTypeInternal _ObstacleModifyNotify_default_instance_;
class PBNavMeshPoly;
class PBNavMeshPolyDefaultTypeInternal;
extern PBNavMeshPolyDefaultTypeInternal _PBNavMeshPoly_default_instance_;
class PBNavMeshTile;
class PBNavMeshTileDefaultTypeInternal;
extern PBNavMeshTileDefaultTypeInternal _PBNavMeshTile_default_instance_;
class PathfindingEnterSceneReq;
class PathfindingEnterSceneReqDefaultTypeInternal;
extern PathfindingEnterSceneReqDefaultTypeInternal _PathfindingEnterSceneReq_default_instance_;
class PathfindingEnterSceneRsp;
class PathfindingEnterSceneRspDefaultTypeInternal;
extern PathfindingEnterSceneRspDefaultTypeInternal _PathfindingEnterSceneRsp_default_instance_;
class PathfindingPingNotify;
class PathfindingPingNotifyDefaultTypeInternal;
extern PathfindingPingNotifyDefaultTypeInternal _PathfindingPingNotify_default_instance_;
class PbNavMeshStatsInfo;
class PbNavMeshStatsInfoDefaultTypeInternal;
extern PbNavMeshStatsInfoDefaultTypeInternal _PbNavMeshStatsInfo_default_instance_;
class QueryFilter;
class QueryFilterDefaultTypeInternal;
extern QueryFilterDefaultTypeInternal _QueryFilter_default_instance_;
class QueryPathReq;
class QueryPathReqDefaultTypeInternal;
extern QueryPathReqDefaultTypeInternal _QueryPathReq_default_instance_;
class QueryPathRsp;
class QueryPathRspDefaultTypeInternal;
extern QueryPathRspDefaultTypeInternal _QueryPathRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fpathfinding_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fpathfinding_2eproto

enum QueryPathReq_OptionType {
  QueryPathReq_OptionType_OPTION_NONE = 0,
  QueryPathReq_OptionType_OPTION_NORMAL = 1,
  QueryPathReq_OptionType_OPTION_FIRST_CAN_GO = 2,
  QueryPathReq_OptionType_QueryPathReq_OptionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QueryPathReq_OptionType_QueryPathReq_OptionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QueryPathReq_OptionType_IsValid(int value);
const QueryPathReq_OptionType QueryPathReq_OptionType_OptionType_MIN = QueryPathReq_OptionType_OPTION_NONE;
const QueryPathReq_OptionType QueryPathReq_OptionType_OptionType_MAX = QueryPathReq_OptionType_OPTION_FIRST_CAN_GO;
const int QueryPathReq_OptionType_OptionType_ARRAYSIZE = QueryPathReq_OptionType_OptionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryPathReq_OptionType_descriptor();
inline const ::std::string& QueryPathReq_OptionType_Name(QueryPathReq_OptionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryPathReq_OptionType_descriptor(), value);
}
inline bool QueryPathReq_OptionType_Parse(
    const ::std::string& name, QueryPathReq_OptionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryPathReq_OptionType>(
    QueryPathReq_OptionType_descriptor(), name, value);
}
enum QueryPathRsp_PathStatusType {
  QueryPathRsp_PathStatusType_STATUS_FAIL = 0,
  QueryPathRsp_PathStatusType_STATUS_SUCC = 1,
  QueryPathRsp_PathStatusType_STATUS_PARTIAL = 2,
  QueryPathRsp_PathStatusType_QueryPathRsp_PathStatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QueryPathRsp_PathStatusType_QueryPathRsp_PathStatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QueryPathRsp_PathStatusType_IsValid(int value);
const QueryPathRsp_PathStatusType QueryPathRsp_PathStatusType_PathStatusType_MIN = QueryPathRsp_PathStatusType_STATUS_FAIL;
const QueryPathRsp_PathStatusType QueryPathRsp_PathStatusType_PathStatusType_MAX = QueryPathRsp_PathStatusType_STATUS_PARTIAL;
const int QueryPathRsp_PathStatusType_PathStatusType_ARRAYSIZE = QueryPathRsp_PathStatusType_PathStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryPathRsp_PathStatusType_descriptor();
inline const ::std::string& QueryPathRsp_PathStatusType_Name(QueryPathRsp_PathStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryPathRsp_PathStatusType_descriptor(), value);
}
inline bool QueryPathRsp_PathStatusType_Parse(
    const ::std::string& name, QueryPathRsp_PathStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryPathRsp_PathStatusType>(
    QueryPathRsp_PathStatusType_descriptor(), name, value);
}
enum ObstacleInfo_ShapeType {
  ObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE = 0,
  ObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX = 1,
  ObstacleInfo_ShapeType_ObstacleInfo_ShapeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ObstacleInfo_ShapeType_ObstacleInfo_ShapeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ObstacleInfo_ShapeType_IsValid(int value);
const ObstacleInfo_ShapeType ObstacleInfo_ShapeType_ShapeType_MIN = ObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE;
const ObstacleInfo_ShapeType ObstacleInfo_ShapeType_ShapeType_MAX = ObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX;
const int ObstacleInfo_ShapeType_ShapeType_ARRAYSIZE = ObstacleInfo_ShapeType_ShapeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObstacleInfo_ShapeType_descriptor();
inline const ::std::string& ObstacleInfo_ShapeType_Name(ObstacleInfo_ShapeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObstacleInfo_ShapeType_descriptor(), value);
}
inline bool ObstacleInfo_ShapeType_Parse(
    const ::std::string& name, ObstacleInfo_ShapeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObstacleInfo_ShapeType>(
    ObstacleInfo_ShapeType_descriptor(), name, value);
}
enum GMObstacleInfo_ShapeType {
  GMObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE = 0,
  GMObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX = 1,
  GMObstacleInfo_ShapeType_GMObstacleInfo_ShapeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GMObstacleInfo_ShapeType_GMObstacleInfo_ShapeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GMObstacleInfo_ShapeType_IsValid(int value);
const GMObstacleInfo_ShapeType GMObstacleInfo_ShapeType_ShapeType_MIN = GMObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE;
const GMObstacleInfo_ShapeType GMObstacleInfo_ShapeType_ShapeType_MAX = GMObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX;
const int GMObstacleInfo_ShapeType_ShapeType_ARRAYSIZE = GMObstacleInfo_ShapeType_ShapeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GMObstacleInfo_ShapeType_descriptor();
inline const ::std::string& GMObstacleInfo_ShapeType_Name(GMObstacleInfo_ShapeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GMObstacleInfo_ShapeType_descriptor(), value);
}
inline bool GMObstacleInfo_ShapeType_Parse(
    const ::std::string& name, GMObstacleInfo_ShapeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GMObstacleInfo_ShapeType>(
    GMObstacleInfo_ShapeType_descriptor(), name, value);
}
enum PBNavMeshPoly_EdgeType {
  PBNavMeshPoly_EdgeType_INNER = 0,
  PBNavMeshPoly_EdgeType_TILE_BOUND = 1,
  PBNavMeshPoly_EdgeType_TILE_BOUND_UNCONNECT = 2,
  PBNavMeshPoly_EdgeType_TILE_BOUND_OVERIDE = 3,
  PBNavMeshPoly_EdgeType_PBNavMeshPoly_EdgeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBNavMeshPoly_EdgeType_PBNavMeshPoly_EdgeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBNavMeshPoly_EdgeType_IsValid(int value);
const PBNavMeshPoly_EdgeType PBNavMeshPoly_EdgeType_EdgeType_MIN = PBNavMeshPoly_EdgeType_INNER;
const PBNavMeshPoly_EdgeType PBNavMeshPoly_EdgeType_EdgeType_MAX = PBNavMeshPoly_EdgeType_TILE_BOUND_OVERIDE;
const int PBNavMeshPoly_EdgeType_EdgeType_ARRAYSIZE = PBNavMeshPoly_EdgeType_EdgeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBNavMeshPoly_EdgeType_descriptor();
inline const ::std::string& PBNavMeshPoly_EdgeType_Name(PBNavMeshPoly_EdgeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBNavMeshPoly_EdgeType_descriptor(), value);
}
inline bool PBNavMeshPoly_EdgeType_Parse(
    const ::std::string& name, PBNavMeshPoly_EdgeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBNavMeshPoly_EdgeType>(
    PBNavMeshPoly_EdgeType_descriptor(), name, value);
}
// ===================================================================

class QueryFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryFilter) */ {
 public:
  QueryFilter();
  virtual ~QueryFilter();

  QueryFilter(const QueryFilter& from);

  inline QueryFilter& operator=(const QueryFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryFilter(QueryFilter&& from) noexcept
    : QueryFilter() {
    *this = ::std::move(from);
  }

  inline QueryFilter& operator=(QueryFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryFilter& default_instance();

  static inline const QueryFilter* internal_default_instance() {
    return reinterpret_cast<const QueryFilter*>(
               &_QueryFilter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(QueryFilter* other);
  friend void swap(QueryFilter& a, QueryFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryFilter* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryFilter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryFilter& from);
  void MergeFrom(const QueryFilter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type_id = 9;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 9;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // int32 area_mask = 13;
  void clear_area_mask();
  static const int kAreaMaskFieldNumber = 13;
  ::google::protobuf::int32 area_mask() const;
  void set_area_mask(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.QueryFilter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::int32 area_mask_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryPathReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryPathReq) */ {
 public:
  QueryPathReq();
  virtual ~QueryPathReq();

  QueryPathReq(const QueryPathReq& from);

  inline QueryPathReq& operator=(const QueryPathReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryPathReq(QueryPathReq&& from) noexcept
    : QueryPathReq() {
    *this = ::std::move(from);
  }

  inline QueryPathReq& operator=(QueryPathReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPathReq& default_instance();

  static inline const QueryPathReq* internal_default_instance() {
    return reinterpret_cast<const QueryPathReq*>(
               &_QueryPathReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(QueryPathReq* other);
  friend void swap(QueryPathReq& a, QueryPathReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryPathReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryPathReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryPathReq& from);
  void MergeFrom(const QueryPathReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryPathReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QueryPathReq_OptionType OptionType;
  static const OptionType OPTION_NONE =
    QueryPathReq_OptionType_OPTION_NONE;
  static const OptionType OPTION_NORMAL =
    QueryPathReq_OptionType_OPTION_NORMAL;
  static const OptionType OPTION_FIRST_CAN_GO =
    QueryPathReq_OptionType_OPTION_FIRST_CAN_GO;
  static inline bool OptionType_IsValid(int value) {
    return QueryPathReq_OptionType_IsValid(value);
  }
  static const OptionType OptionType_MIN =
    QueryPathReq_OptionType_OptionType_MIN;
  static const OptionType OptionType_MAX =
    QueryPathReq_OptionType_OptionType_MAX;
  static const int OptionType_ARRAYSIZE =
    QueryPathReq_OptionType_OptionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OptionType_descriptor() {
    return QueryPathReq_OptionType_descriptor();
  }
  static inline const ::std::string& OptionType_Name(OptionType value) {
    return QueryPathReq_OptionType_Name(value);
  }
  static inline bool OptionType_Parse(const ::std::string& name,
      OptionType* value) {
    return QueryPathReq_OptionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.Vector destination_pos = 10;
  int destination_pos_size() const;
  void clear_destination_pos();
  static const int kDestinationPosFieldNumber = 10;
  const ::proto::Vector& destination_pos(int index) const;
  ::proto::Vector* mutable_destination_pos(int index);
  ::proto::Vector* add_destination_pos();
  ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
      mutable_destination_pos();
  const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
      destination_pos() const;

  // .proto.Vector source_pos = 2;
  bool has_source_pos() const;
  void clear_source_pos();
  static const int kSourcePosFieldNumber = 2;
  const ::proto::Vector& source_pos() const;
  ::proto::Vector* mutable_source_pos();
  ::proto::Vector* release_source_pos();
  void set_allocated_source_pos(::proto::Vector* source_pos);

  // .proto.Vector3Int destination_extend = 4;
  bool has_destination_extend() const;
  void clear_destination_extend();
  static const int kDestinationExtendFieldNumber = 4;
  const ::proto::Vector3Int& destination_extend() const;
  ::proto::Vector3Int* mutable_destination_extend();
  ::proto::Vector3Int* release_destination_extend();
  void set_allocated_destination_extend(::proto::Vector3Int* destination_extend);

  // .proto.Vector3Int source_extend = 6;
  bool has_source_extend() const;
  void clear_source_extend();
  static const int kSourceExtendFieldNumber = 6;
  const ::proto::Vector3Int& source_extend() const;
  ::proto::Vector3Int* mutable_source_extend();
  ::proto::Vector3Int* release_source_extend();
  void set_allocated_source_extend(::proto::Vector3Int* source_extend);

  // .proto.QueryFilter filter = 12;
  bool has_filter() const;
  void clear_filter();
  static const int kFilterFieldNumber = 12;
  const ::proto::QueryFilter& filter() const;
  ::proto::QueryFilter* mutable_filter();
  ::proto::QueryFilter* release_filter();
  void set_allocated_filter(::proto::QueryFilter* filter);

  // int32 query_id = 15;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 15;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // uint32 scene_id = 11;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 11;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // .proto.QueryPathReq.OptionType query_type = 13;
  void clear_query_type();
  static const int kQueryTypeFieldNumber = 13;
  ::proto::QueryPathReq_OptionType query_type() const;
  void set_query_type(::proto::QueryPathReq_OptionType value);

  // @@protoc_insertion_point(class_scope:proto.QueryPathReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Vector > destination_pos_;
  ::proto::Vector* source_pos_;
  ::proto::Vector3Int* destination_extend_;
  ::proto::Vector3Int* source_extend_;
  ::proto::QueryFilter* filter_;
  ::google::protobuf::int32 query_id_;
  ::google::protobuf::uint32 scene_id_;
  int query_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryPathRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryPathRsp) */ {
 public:
  QueryPathRsp();
  virtual ~QueryPathRsp();

  QueryPathRsp(const QueryPathRsp& from);

  inline QueryPathRsp& operator=(const QueryPathRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryPathRsp(QueryPathRsp&& from) noexcept
    : QueryPathRsp() {
    *this = ::std::move(from);
  }

  inline QueryPathRsp& operator=(QueryPathRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPathRsp& default_instance();

  static inline const QueryPathRsp* internal_default_instance() {
    return reinterpret_cast<const QueryPathRsp*>(
               &_QueryPathRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(QueryPathRsp* other);
  friend void swap(QueryPathRsp& a, QueryPathRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryPathRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryPathRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryPathRsp& from);
  void MergeFrom(const QueryPathRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryPathRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef QueryPathRsp_PathStatusType PathStatusType;
  static const PathStatusType STATUS_FAIL =
    QueryPathRsp_PathStatusType_STATUS_FAIL;
  static const PathStatusType STATUS_SUCC =
    QueryPathRsp_PathStatusType_STATUS_SUCC;
  static const PathStatusType STATUS_PARTIAL =
    QueryPathRsp_PathStatusType_STATUS_PARTIAL;
  static inline bool PathStatusType_IsValid(int value) {
    return QueryPathRsp_PathStatusType_IsValid(value);
  }
  static const PathStatusType PathStatusType_MIN =
    QueryPathRsp_PathStatusType_PathStatusType_MIN;
  static const PathStatusType PathStatusType_MAX =
    QueryPathRsp_PathStatusType_PathStatusType_MAX;
  static const int PathStatusType_ARRAYSIZE =
    QueryPathRsp_PathStatusType_PathStatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PathStatusType_descriptor() {
    return QueryPathRsp_PathStatusType_descriptor();
  }
  static inline const ::std::string& PathStatusType_Name(PathStatusType value) {
    return QueryPathRsp_PathStatusType_Name(value);
  }
  static inline bool PathStatusType_Parse(const ::std::string& name,
      PathStatusType* value) {
    return QueryPathRsp_PathStatusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.Vector corners = 6;
  int corners_size() const;
  void clear_corners();
  static const int kCornersFieldNumber = 6;
  const ::proto::Vector& corners(int index) const;
  ::proto::Vector* mutable_corners(int index);
  ::proto::Vector* add_corners();
  ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
      mutable_corners();
  const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
      corners() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.QueryPathRsp.PathStatusType query_status = 8;
  void clear_query_status();
  static const int kQueryStatusFieldNumber = 8;
  ::proto::QueryPathRsp_PathStatusType query_status() const;
  void set_query_status(::proto::QueryPathRsp_PathStatusType value);

  // int32 query_id = 12;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 12;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.QueryPathRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Vector > corners_;
  ::google::protobuf::int32 retcode_;
  int query_status_;
  ::google::protobuf::int32 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ObstacleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ObstacleInfo) */ {
 public:
  ObstacleInfo();
  virtual ~ObstacleInfo();

  ObstacleInfo(const ObstacleInfo& from);

  inline ObstacleInfo& operator=(const ObstacleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObstacleInfo(ObstacleInfo&& from) noexcept
    : ObstacleInfo() {
    *this = ::std::move(from);
  }

  inline ObstacleInfo& operator=(ObstacleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObstacleInfo& default_instance();

  static inline const ObstacleInfo* internal_default_instance() {
    return reinterpret_cast<const ObstacleInfo*>(
               &_ObstacleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ObstacleInfo* other);
  friend void swap(ObstacleInfo& a, ObstacleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObstacleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ObstacleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObstacleInfo& from);
  void MergeFrom(const ObstacleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObstacleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ObstacleInfo_ShapeType ShapeType;
  static const ShapeType OBSTACLE_SHAPE_CAPSULE =
    ObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE;
  static const ShapeType OBSTACLE_SHAPE_BOX =
    ObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX;
  static inline bool ShapeType_IsValid(int value) {
    return ObstacleInfo_ShapeType_IsValid(value);
  }
  static const ShapeType ShapeType_MIN =
    ObstacleInfo_ShapeType_ShapeType_MIN;
  static const ShapeType ShapeType_MAX =
    ObstacleInfo_ShapeType_ShapeType_MAX;
  static const int ShapeType_ARRAYSIZE =
    ObstacleInfo_ShapeType_ShapeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ShapeType_descriptor() {
    return ObstacleInfo_ShapeType_descriptor();
  }
  static inline const ::std::string& ShapeType_Name(ShapeType value) {
    return ObstacleInfo_ShapeType_Name(value);
  }
  static inline bool ShapeType_Parse(const ::std::string& name,
      ShapeType* value) {
    return ObstacleInfo_ShapeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MathQuaternion rotation = 4;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  const ::proto::MathQuaternion& rotation() const;
  ::proto::MathQuaternion* mutable_rotation();
  ::proto::MathQuaternion* release_rotation();
  void set_allocated_rotation(::proto::MathQuaternion* rotation);

  // .proto.Vector3Int extents = 12;
  bool has_extents() const;
  void clear_extents();
  static const int kExtentsFieldNumber = 12;
  const ::proto::Vector3Int& extents() const;
  ::proto::Vector3Int* mutable_extents();
  ::proto::Vector3Int* release_extents();
  void set_allocated_extents(::proto::Vector3Int* extents);

  // .proto.Vector center = 14;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 14;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // int32 obstacle_id = 2;
  void clear_obstacle_id();
  static const int kObstacleIdFieldNumber = 2;
  ::google::protobuf::int32 obstacle_id() const;
  void set_obstacle_id(::google::protobuf::int32 value);

  // .proto.ObstacleInfo.ShapeType shape = 6;
  void clear_shape();
  static const int kShapeFieldNumber = 6;
  ::proto::ObstacleInfo_ShapeType shape() const;
  void set_shape(::proto::ObstacleInfo_ShapeType value);

  // @@protoc_insertion_point(class_scope:proto.ObstacleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MathQuaternion* rotation_;
  ::proto::Vector3Int* extents_;
  ::proto::Vector* center_;
  ::google::protobuf::int32 obstacle_id_;
  int shape_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ObstacleModifyNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ObstacleModifyNotify) */ {
 public:
  ObstacleModifyNotify();
  virtual ~ObstacleModifyNotify();

  ObstacleModifyNotify(const ObstacleModifyNotify& from);

  inline ObstacleModifyNotify& operator=(const ObstacleModifyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObstacleModifyNotify(ObstacleModifyNotify&& from) noexcept
    : ObstacleModifyNotify() {
    *this = ::std::move(from);
  }

  inline ObstacleModifyNotify& operator=(ObstacleModifyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObstacleModifyNotify& default_instance();

  static inline const ObstacleModifyNotify* internal_default_instance() {
    return reinterpret_cast<const ObstacleModifyNotify*>(
               &_ObstacleModifyNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ObstacleModifyNotify* other);
  friend void swap(ObstacleModifyNotify& a, ObstacleModifyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObstacleModifyNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ObstacleModifyNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObstacleModifyNotify& from);
  void MergeFrom(const ObstacleModifyNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObstacleModifyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ObstacleInfo add_obstacles = 6;
  int add_obstacles_size() const;
  void clear_add_obstacles();
  static const int kAddObstaclesFieldNumber = 6;
  const ::proto::ObstacleInfo& add_obstacles(int index) const;
  ::proto::ObstacleInfo* mutable_add_obstacles(int index);
  ::proto::ObstacleInfo* add_add_obstacles();
  ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >*
      mutable_add_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >&
      add_obstacles() const;

  // repeated int32 remove_obstacle_ids = 9;
  int remove_obstacle_ids_size() const;
  void clear_remove_obstacle_ids();
  static const int kRemoveObstacleIdsFieldNumber = 9;
  ::google::protobuf::int32 remove_obstacle_ids(int index) const;
  void set_remove_obstacle_ids(int index, ::google::protobuf::int32 value);
  void add_remove_obstacle_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remove_obstacle_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remove_obstacle_ids();

  // uint32 scene_id = 5;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ObstacleModifyNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo > add_obstacles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remove_obstacle_ids_;
  mutable int _remove_obstacle_ids_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PathfindingPingNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PathfindingPingNotify) */ {
 public:
  PathfindingPingNotify();
  virtual ~PathfindingPingNotify();

  PathfindingPingNotify(const PathfindingPingNotify& from);

  inline PathfindingPingNotify& operator=(const PathfindingPingNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PathfindingPingNotify(PathfindingPingNotify&& from) noexcept
    : PathfindingPingNotify() {
    *this = ::std::move(from);
  }

  inline PathfindingPingNotify& operator=(PathfindingPingNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PathfindingPingNotify& default_instance();

  static inline const PathfindingPingNotify* internal_default_instance() {
    return reinterpret_cast<const PathfindingPingNotify*>(
               &_PathfindingPingNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PathfindingPingNotify* other);
  friend void swap(PathfindingPingNotify& a, PathfindingPingNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PathfindingPingNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PathfindingPingNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PathfindingPingNotify& from);
  void MergeFrom(const PathfindingPingNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PathfindingPingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.PathfindingPingNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PathfindingEnterSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PathfindingEnterSceneReq) */ {
 public:
  PathfindingEnterSceneReq();
  virtual ~PathfindingEnterSceneReq();

  PathfindingEnterSceneReq(const PathfindingEnterSceneReq& from);

  inline PathfindingEnterSceneReq& operator=(const PathfindingEnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PathfindingEnterSceneReq(PathfindingEnterSceneReq&& from) noexcept
    : PathfindingEnterSceneReq() {
    *this = ::std::move(from);
  }

  inline PathfindingEnterSceneReq& operator=(PathfindingEnterSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PathfindingEnterSceneReq& default_instance();

  static inline const PathfindingEnterSceneReq* internal_default_instance() {
    return reinterpret_cast<const PathfindingEnterSceneReq*>(
               &_PathfindingEnterSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PathfindingEnterSceneReq* other);
  friend void swap(PathfindingEnterSceneReq& a, PathfindingEnterSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PathfindingEnterSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PathfindingEnterSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PathfindingEnterSceneReq& from);
  void MergeFrom(const PathfindingEnterSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PathfindingEnterSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ObstacleInfo obstacles = 13;
  int obstacles_size() const;
  void clear_obstacles();
  static const int kObstaclesFieldNumber = 13;
  const ::proto::ObstacleInfo& obstacles(int index) const;
  ::proto::ObstacleInfo* mutable_obstacles(int index);
  ::proto::ObstacleInfo* add_obstacles();
  ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >*
      mutable_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >&
      obstacles() const;

  // repeated uint32 activity_id = 14;
  int activity_id_size() const;
  void clear_activity_id();
  static const int kActivityIdFieldNumber = 14;
  ::google::protobuf::uint32 activity_id(int index) const;
  void set_activity_id(int index, ::google::protobuf::uint32 value);
  void add_activity_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activity_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activity_id();

  // uint32 polygon_id = 4;
  void clear_polygon_id();
  static const int kPolygonIdFieldNumber = 4;
  ::google::protobuf::uint32 polygon_id() const;
  void set_polygon_id(::google::protobuf::uint32 value);

  // uint32 version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 scene_tag_hash = 15;
  void clear_scene_tag_hash();
  static const int kSceneTagHashFieldNumber = 15;
  ::google::protobuf::uint32 scene_tag_hash() const;
  void set_scene_tag_hash(::google::protobuf::uint32 value);

  // bool is_editor = 11;
  void clear_is_editor();
  static const int kIsEditorFieldNumber = 11;
  bool is_editor() const;
  void set_is_editor(bool value);

  // uint32 scene_id = 12;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 12;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PathfindingEnterSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo > obstacles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activity_id_;
  mutable int _activity_id_cached_byte_size_;
  ::google::protobuf::uint32 polygon_id_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 scene_tag_hash_;
  bool is_editor_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PathfindingEnterSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PathfindingEnterSceneRsp) */ {
 public:
  PathfindingEnterSceneRsp();
  virtual ~PathfindingEnterSceneRsp();

  PathfindingEnterSceneRsp(const PathfindingEnterSceneRsp& from);

  inline PathfindingEnterSceneRsp& operator=(const PathfindingEnterSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PathfindingEnterSceneRsp(PathfindingEnterSceneRsp&& from) noexcept
    : PathfindingEnterSceneRsp() {
    *this = ::std::move(from);
  }

  inline PathfindingEnterSceneRsp& operator=(PathfindingEnterSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PathfindingEnterSceneRsp& default_instance();

  static inline const PathfindingEnterSceneRsp* internal_default_instance() {
    return reinterpret_cast<const PathfindingEnterSceneRsp*>(
               &_PathfindingEnterSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PathfindingEnterSceneRsp* other);
  friend void swap(PathfindingEnterSceneRsp& a, PathfindingEnterSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PathfindingEnterSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PathfindingEnterSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PathfindingEnterSceneRsp& from);
  void MergeFrom(const PathfindingEnterSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PathfindingEnterSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PathfindingEnterSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GMShowObstacleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GMShowObstacleReq) */ {
 public:
  GMShowObstacleReq();
  virtual ~GMShowObstacleReq();

  GMShowObstacleReq(const GMShowObstacleReq& from);

  inline GMShowObstacleReq& operator=(const GMShowObstacleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMShowObstacleReq(GMShowObstacleReq&& from) noexcept
    : GMShowObstacleReq() {
    *this = ::std::move(from);
  }

  inline GMShowObstacleReq& operator=(GMShowObstacleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GMShowObstacleReq& default_instance();

  static inline const GMShowObstacleReq* internal_default_instance() {
    return reinterpret_cast<const GMShowObstacleReq*>(
               &_GMShowObstacleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GMShowObstacleReq* other);
  friend void swap(GMShowObstacleReq& a, GMShowObstacleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMShowObstacleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GMShowObstacleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMShowObstacleReq& from);
  void MergeFrom(const GMShowObstacleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMShowObstacleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GMShowObstacleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GMObstacleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GMObstacleInfo) */ {
 public:
  GMObstacleInfo();
  virtual ~GMObstacleInfo();

  GMObstacleInfo(const GMObstacleInfo& from);

  inline GMObstacleInfo& operator=(const GMObstacleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMObstacleInfo(GMObstacleInfo&& from) noexcept
    : GMObstacleInfo() {
    *this = ::std::move(from);
  }

  inline GMObstacleInfo& operator=(GMObstacleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GMObstacleInfo& default_instance();

  static inline const GMObstacleInfo* internal_default_instance() {
    return reinterpret_cast<const GMObstacleInfo*>(
               &_GMObstacleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GMObstacleInfo* other);
  friend void swap(GMObstacleInfo& a, GMObstacleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMObstacleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GMObstacleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMObstacleInfo& from);
  void MergeFrom(const GMObstacleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMObstacleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GMObstacleInfo_ShapeType ShapeType;
  static const ShapeType OBSTACLE_SHAPE_CAPSULE =
    GMObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE;
  static const ShapeType OBSTACLE_SHAPE_BOX =
    GMObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX;
  static inline bool ShapeType_IsValid(int value) {
    return GMObstacleInfo_ShapeType_IsValid(value);
  }
  static const ShapeType ShapeType_MIN =
    GMObstacleInfo_ShapeType_ShapeType_MIN;
  static const ShapeType ShapeType_MAX =
    GMObstacleInfo_ShapeType_ShapeType_MAX;
  static const int ShapeType_ARRAYSIZE =
    GMObstacleInfo_ShapeType_ShapeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ShapeType_descriptor() {
    return GMObstacleInfo_ShapeType_descriptor();
  }
  static inline const ::std::string& ShapeType_Name(ShapeType value) {
    return GMObstacleInfo_ShapeType_Name(value);
  }
  static inline bool ShapeType_Parse(const ::std::string& name,
      ShapeType* value) {
    return GMObstacleInfo_ShapeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MathQuaternion rotation = 3;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 3;
  const ::proto::MathQuaternion& rotation() const;
  ::proto::MathQuaternion* mutable_rotation();
  ::proto::MathQuaternion* release_rotation();
  void set_allocated_rotation(::proto::MathQuaternion* rotation);

  // .proto.Vector center = 8;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 8;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector3Int extents = 15;
  bool has_extents() const;
  void clear_extents();
  static const int kExtentsFieldNumber = 15;
  const ::proto::Vector3Int& extents() const;
  ::proto::Vector3Int* mutable_extents();
  ::proto::Vector3Int* release_extents();
  void set_allocated_extents(::proto::Vector3Int* extents);

  // .proto.GMObstacleInfo.ShapeType shape = 2;
  void clear_shape();
  static const int kShapeFieldNumber = 2;
  ::proto::GMObstacleInfo_ShapeType shape() const;
  void set_shape(::proto::GMObstacleInfo_ShapeType value);

  // int32 obstacle_id = 13;
  void clear_obstacle_id();
  static const int kObstacleIdFieldNumber = 13;
  ::google::protobuf::int32 obstacle_id() const;
  void set_obstacle_id(::google::protobuf::int32 value);

  // int64 timestamp = 14;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 14;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.GMObstacleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MathQuaternion* rotation_;
  ::proto::Vector* center_;
  ::proto::Vector3Int* extents_;
  int shape_;
  ::google::protobuf::int32 obstacle_id_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GMShowObstacleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GMShowObstacleRsp) */ {
 public:
  GMShowObstacleRsp();
  virtual ~GMShowObstacleRsp();

  GMShowObstacleRsp(const GMShowObstacleRsp& from);

  inline GMShowObstacleRsp& operator=(const GMShowObstacleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMShowObstacleRsp(GMShowObstacleRsp&& from) noexcept
    : GMShowObstacleRsp() {
    *this = ::std::move(from);
  }

  inline GMShowObstacleRsp& operator=(GMShowObstacleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GMShowObstacleRsp& default_instance();

  static inline const GMShowObstacleRsp* internal_default_instance() {
    return reinterpret_cast<const GMShowObstacleRsp*>(
               &_GMShowObstacleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GMShowObstacleRsp* other);
  friend void swap(GMShowObstacleRsp& a, GMShowObstacleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMShowObstacleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GMShowObstacleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMShowObstacleRsp& from);
  void MergeFrom(const GMShowObstacleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMShowObstacleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.GMObstacleInfo obstacles = 6;
  int obstacles_size() const;
  void clear_obstacles();
  static const int kObstaclesFieldNumber = 6;
  const ::proto::GMObstacleInfo& obstacles(int index) const;
  ::proto::GMObstacleInfo* mutable_obstacles(int index);
  ::proto::GMObstacleInfo* add_obstacles();
  ::google::protobuf::RepeatedPtrField< ::proto::GMObstacleInfo >*
      mutable_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::proto::GMObstacleInfo >&
      obstacles() const;

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GMShowObstacleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GMObstacleInfo > obstacles_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GMShowNavMeshReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GMShowNavMeshReq) */ {
 public:
  GMShowNavMeshReq();
  virtual ~GMShowNavMeshReq();

  GMShowNavMeshReq(const GMShowNavMeshReq& from);

  inline GMShowNavMeshReq& operator=(const GMShowNavMeshReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMShowNavMeshReq(GMShowNavMeshReq&& from) noexcept
    : GMShowNavMeshReq() {
    *this = ::std::move(from);
  }

  inline GMShowNavMeshReq& operator=(GMShowNavMeshReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GMShowNavMeshReq& default_instance();

  static inline const GMShowNavMeshReq* internal_default_instance() {
    return reinterpret_cast<const GMShowNavMeshReq*>(
               &_GMShowNavMeshReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GMShowNavMeshReq* other);
  friend void swap(GMShowNavMeshReq& a, GMShowNavMeshReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMShowNavMeshReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GMShowNavMeshReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMShowNavMeshReq& from);
  void MergeFrom(const GMShowNavMeshReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMShowNavMeshReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 1;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 1;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector extent = 5;
  bool has_extent() const;
  void clear_extent();
  static const int kExtentFieldNumber = 5;
  const ::proto::Vector& extent() const;
  ::proto::Vector* mutable_extent();
  ::proto::Vector* release_extent();
  void set_allocated_extent(::proto::Vector* extent);

  // @@protoc_insertion_point(class_scope:proto.GMShowNavMeshReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  ::proto::Vector* extent_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBNavMeshPoly : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PBNavMeshPoly) */ {
 public:
  PBNavMeshPoly();
  virtual ~PBNavMeshPoly();

  PBNavMeshPoly(const PBNavMeshPoly& from);

  inline PBNavMeshPoly& operator=(const PBNavMeshPoly& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBNavMeshPoly(PBNavMeshPoly&& from) noexcept
    : PBNavMeshPoly() {
    *this = ::std::move(from);
  }

  inline PBNavMeshPoly& operator=(PBNavMeshPoly&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBNavMeshPoly& default_instance();

  static inline const PBNavMeshPoly* internal_default_instance() {
    return reinterpret_cast<const PBNavMeshPoly*>(
               &_PBNavMeshPoly_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PBNavMeshPoly* other);
  friend void swap(PBNavMeshPoly& a, PBNavMeshPoly& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBNavMeshPoly* New() const PROTOBUF_FINAL { return New(NULL); }

  PBNavMeshPoly* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBNavMeshPoly& from);
  void MergeFrom(const PBNavMeshPoly& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBNavMeshPoly* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PBNavMeshPoly_EdgeType EdgeType;
  static const EdgeType INNER =
    PBNavMeshPoly_EdgeType_INNER;
  static const EdgeType TILE_BOUND =
    PBNavMeshPoly_EdgeType_TILE_BOUND;
  static const EdgeType TILE_BOUND_UNCONNECT =
    PBNavMeshPoly_EdgeType_TILE_BOUND_UNCONNECT;
  static const EdgeType TILE_BOUND_OVERIDE =
    PBNavMeshPoly_EdgeType_TILE_BOUND_OVERIDE;
  static inline bool EdgeType_IsValid(int value) {
    return PBNavMeshPoly_EdgeType_IsValid(value);
  }
  static const EdgeType EdgeType_MIN =
    PBNavMeshPoly_EdgeType_EdgeType_MIN;
  static const EdgeType EdgeType_MAX =
    PBNavMeshPoly_EdgeType_EdgeType_MAX;
  static const int EdgeType_ARRAYSIZE =
    PBNavMeshPoly_EdgeType_EdgeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EdgeType_descriptor() {
    return PBNavMeshPoly_EdgeType_descriptor();
  }
  static inline const ::std::string& EdgeType_Name(EdgeType value) {
    return PBNavMeshPoly_EdgeType_Name(value);
  }
  static inline bool EdgeType_Parse(const ::std::string& name,
      EdgeType* value) {
    return PBNavMeshPoly_EdgeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 vects = 7;
  int vects_size() const;
  void clear_vects();
  static const int kVectsFieldNumber = 7;
  ::google::protobuf::int32 vects(int index) const;
  void set_vects(int index, ::google::protobuf::int32 value);
  void add_vects(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      vects() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_vects();

  // repeated .proto.PBNavMeshPoly.EdgeType edge_types = 10;
  int edge_types_size() const;
  void clear_edge_types();
  static const int kEdgeTypesFieldNumber = 10;
  ::proto::PBNavMeshPoly_EdgeType edge_types(int index) const;
  void set_edge_types(int index, ::proto::PBNavMeshPoly_EdgeType value);
  void add_edge_types(::proto::PBNavMeshPoly_EdgeType value);
  const ::google::protobuf::RepeatedField<int>& edge_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_edge_types();

  // int32 area = 6;
  void clear_area();
  static const int kAreaFieldNumber = 6;
  ::google::protobuf::int32 area() const;
  void set_area(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PBNavMeshPoly)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > vects_;
  mutable int _vects_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> edge_types_;
  mutable int _edge_types_cached_byte_size_;
  ::google::protobuf::int32 area_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBNavMeshTile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PBNavMeshTile) */ {
 public:
  PBNavMeshTile();
  virtual ~PBNavMeshTile();

  PBNavMeshTile(const PBNavMeshTile& from);

  inline PBNavMeshTile& operator=(const PBNavMeshTile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBNavMeshTile(PBNavMeshTile&& from) noexcept
    : PBNavMeshTile() {
    *this = ::std::move(from);
  }

  inline PBNavMeshTile& operator=(PBNavMeshTile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBNavMeshTile& default_instance();

  static inline const PBNavMeshTile* internal_default_instance() {
    return reinterpret_cast<const PBNavMeshTile*>(
               &_PBNavMeshTile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PBNavMeshTile* other);
  friend void swap(PBNavMeshTile& a, PBNavMeshTile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBNavMeshTile* New() const PROTOBUF_FINAL { return New(NULL); }

  PBNavMeshTile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBNavMeshTile& from);
  void MergeFrom(const PBNavMeshTile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBNavMeshTile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Vector vecs = 4;
  int vecs_size() const;
  void clear_vecs();
  static const int kVecsFieldNumber = 4;
  const ::proto::Vector& vecs(int index) const;
  ::proto::Vector* mutable_vecs(int index);
  ::proto::Vector* add_vecs();
  ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
      mutable_vecs();
  const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
      vecs() const;

  // repeated .proto.PBNavMeshPoly polys = 8;
  int polys_size() const;
  void clear_polys();
  static const int kPolysFieldNumber = 8;
  const ::proto::PBNavMeshPoly& polys(int index) const;
  ::proto::PBNavMeshPoly* mutable_polys(int index);
  ::proto::PBNavMeshPoly* add_polys();
  ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshPoly >*
      mutable_polys();
  const ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshPoly >&
      polys() const;

  // @@protoc_insertion_point(class_scope:proto.PBNavMeshTile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Vector > vecs_;
  ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshPoly > polys_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GMShowNavMeshRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GMShowNavMeshRsp) */ {
 public:
  GMShowNavMeshRsp();
  virtual ~GMShowNavMeshRsp();

  GMShowNavMeshRsp(const GMShowNavMeshRsp& from);

  inline GMShowNavMeshRsp& operator=(const GMShowNavMeshRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMShowNavMeshRsp(GMShowNavMeshRsp&& from) noexcept
    : GMShowNavMeshRsp() {
    *this = ::std::move(from);
  }

  inline GMShowNavMeshRsp& operator=(GMShowNavMeshRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GMShowNavMeshRsp& default_instance();

  static inline const GMShowNavMeshRsp* internal_default_instance() {
    return reinterpret_cast<const GMShowNavMeshRsp*>(
               &_GMShowNavMeshRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GMShowNavMeshRsp* other);
  friend void swap(GMShowNavMeshRsp& a, GMShowNavMeshRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMShowNavMeshRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GMShowNavMeshRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMShowNavMeshRsp& from);
  void MergeFrom(const GMShowNavMeshRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMShowNavMeshRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PBNavMeshTile tiles = 11;
  int tiles_size() const;
  void clear_tiles();
  static const int kTilesFieldNumber = 11;
  const ::proto::PBNavMeshTile& tiles(int index) const;
  ::proto::PBNavMeshTile* mutable_tiles(int index);
  ::proto::PBNavMeshTile* add_tiles();
  ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshTile >*
      mutable_tiles();
  const ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshTile >&
      tiles() const;

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GMShowNavMeshRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshTile > tiles_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PbNavMeshStatsInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PbNavMeshStatsInfo) */ {
 public:
  PbNavMeshStatsInfo();
  virtual ~PbNavMeshStatsInfo();

  PbNavMeshStatsInfo(const PbNavMeshStatsInfo& from);

  inline PbNavMeshStatsInfo& operator=(const PbNavMeshStatsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbNavMeshStatsInfo(PbNavMeshStatsInfo&& from) noexcept
    : PbNavMeshStatsInfo() {
    *this = ::std::move(from);
  }

  inline PbNavMeshStatsInfo& operator=(PbNavMeshStatsInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbNavMeshStatsInfo& default_instance();

  static inline const PbNavMeshStatsInfo* internal_default_instance() {
    return reinterpret_cast<const PbNavMeshStatsInfo*>(
               &_PbNavMeshStatsInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(PbNavMeshStatsInfo* other);
  friend void swap(PbNavMeshStatsInfo& a, PbNavMeshStatsInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbNavMeshStatsInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PbNavMeshStatsInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbNavMeshStatsInfo& from);
  void MergeFrom(const PbNavMeshStatsInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbNavMeshStatsInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 total_authority_ai = 8;
  void clear_total_authority_ai();
  static const int kTotalAuthorityAiFieldNumber = 8;
  ::google::protobuf::int32 total_authority_ai() const;
  void set_total_authority_ai(::google::protobuf::int32 value);

  // int32 authority_ai_in_combat = 10;
  void clear_authority_ai_in_combat();
  static const int kAuthorityAiInCombatFieldNumber = 10;
  ::google::protobuf::int32 authority_ai_in_combat() const;
  void set_authority_ai_in_combat(::google::protobuf::int32 value);

  // int32 no_authority_ai_in_combat = 11;
  void clear_no_authority_ai_in_combat();
  static const int kNoAuthorityAiInCombatFieldNumber = 11;
  ::google::protobuf::int32 no_authority_ai_in_combat() const;
  void set_no_authority_ai_in_combat(::google::protobuf::int32 value);

  // int32 total_no_authority_ai = 13;
  void clear_total_no_authority_ai();
  static const int kTotalNoAuthorityAiFieldNumber = 13;
  ::google::protobuf::int32 total_no_authority_ai() const;
  void set_total_no_authority_ai(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PbNavMeshStatsInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 total_authority_ai_;
  ::google::protobuf::int32 authority_ai_in_combat_;
  ::google::protobuf::int32 no_authority_ai_in_combat_;
  ::google::protobuf::int32 total_no_authority_ai_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NavMeshStatsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NavMeshStatsNotify) */ {
 public:
  NavMeshStatsNotify();
  virtual ~NavMeshStatsNotify();

  NavMeshStatsNotify(const NavMeshStatsNotify& from);

  inline NavMeshStatsNotify& operator=(const NavMeshStatsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NavMeshStatsNotify(NavMeshStatsNotify&& from) noexcept
    : NavMeshStatsNotify() {
    *this = ::std::move(from);
  }

  inline NavMeshStatsNotify& operator=(NavMeshStatsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NavMeshStatsNotify& default_instance();

  static inline const NavMeshStatsNotify* internal_default_instance() {
    return reinterpret_cast<const NavMeshStatsNotify*>(
               &_NavMeshStatsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(NavMeshStatsNotify* other);
  friend void swap(NavMeshStatsNotify& a, NavMeshStatsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NavMeshStatsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  NavMeshStatsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NavMeshStatsNotify& from);
  void MergeFrom(const NavMeshStatsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NavMeshStatsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PbNavMeshStatsInfo infos = 4;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 4;
  const ::proto::PbNavMeshStatsInfo& infos(int index) const;
  ::proto::PbNavMeshStatsInfo* mutable_infos(int index);
  ::proto::PbNavMeshStatsInfo* add_infos();
  ::google::protobuf::RepeatedPtrField< ::proto::PbNavMeshStatsInfo >*
      mutable_infos();
  const ::google::protobuf::RepeatedPtrField< ::proto::PbNavMeshStatsInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:proto.NavMeshStatsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PbNavMeshStatsInfo > infos_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fpathfinding_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QueryFilter

// int32 type_id = 9;
inline void QueryFilter::clear_type_id() {
  type_id_ = 0;
}
inline ::google::protobuf::int32 QueryFilter::type_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryFilter.type_id)
  return type_id_;
}
inline void QueryFilter::set_type_id(::google::protobuf::int32 value) {
  
  type_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryFilter.type_id)
}

// int32 area_mask = 13;
inline void QueryFilter::clear_area_mask() {
  area_mask_ = 0;
}
inline ::google::protobuf::int32 QueryFilter::area_mask() const {
  // @@protoc_insertion_point(field_get:proto.QueryFilter.area_mask)
  return area_mask_;
}
inline void QueryFilter::set_area_mask(::google::protobuf::int32 value) {
  
  area_mask_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryFilter.area_mask)
}

// -------------------------------------------------------------------

// QueryPathReq

// .proto.QueryPathReq.OptionType query_type = 13;
inline void QueryPathReq::clear_query_type() {
  query_type_ = 0;
}
inline ::proto::QueryPathReq_OptionType QueryPathReq::query_type() const {
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.query_type)
  return static_cast< ::proto::QueryPathReq_OptionType >(query_type_);
}
inline void QueryPathReq::set_query_type(::proto::QueryPathReq_OptionType value) {
  
  query_type_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPathReq.query_type)
}

// .proto.Vector3Int source_extend = 6;
inline bool QueryPathReq::has_source_extend() const {
  return this != internal_default_instance() && source_extend_ != NULL;
}
inline void QueryPathReq::clear_source_extend() {
  if (GetArenaNoVirtual() == NULL && source_extend_ != NULL) delete source_extend_;
  source_extend_ = NULL;
}
inline const ::proto::Vector3Int& QueryPathReq::source_extend() const {
  const ::proto::Vector3Int* p = source_extend_;
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.source_extend)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector3Int*>(
      &::proto::_Vector3Int_default_instance_);
}
inline ::proto::Vector3Int* QueryPathReq::mutable_source_extend() {
  
  if (source_extend_ == NULL) {
    source_extend_ = new ::proto::Vector3Int;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPathReq.source_extend)
  return source_extend_;
}
inline ::proto::Vector3Int* QueryPathReq::release_source_extend() {
  // @@protoc_insertion_point(field_release:proto.QueryPathReq.source_extend)
  
  ::proto::Vector3Int* temp = source_extend_;
  source_extend_ = NULL;
  return temp;
}
inline void QueryPathReq::set_allocated_source_extend(::proto::Vector3Int* source_extend) {
  delete source_extend_;
  source_extend_ = source_extend;
  if (source_extend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPathReq.source_extend)
}

// .proto.Vector source_pos = 2;
inline bool QueryPathReq::has_source_pos() const {
  return this != internal_default_instance() && source_pos_ != NULL;
}
inline void QueryPathReq::clear_source_pos() {
  if (GetArenaNoVirtual() == NULL && source_pos_ != NULL) delete source_pos_;
  source_pos_ = NULL;
}
inline const ::proto::Vector& QueryPathReq::source_pos() const {
  const ::proto::Vector* p = source_pos_;
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.source_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* QueryPathReq::mutable_source_pos() {
  
  if (source_pos_ == NULL) {
    source_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPathReq.source_pos)
  return source_pos_;
}
inline ::proto::Vector* QueryPathReq::release_source_pos() {
  // @@protoc_insertion_point(field_release:proto.QueryPathReq.source_pos)
  
  ::proto::Vector* temp = source_pos_;
  source_pos_ = NULL;
  return temp;
}
inline void QueryPathReq::set_allocated_source_pos(::proto::Vector* source_pos) {
  delete source_pos_;
  source_pos_ = source_pos;
  if (source_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPathReq.source_pos)
}

// .proto.QueryFilter filter = 12;
inline bool QueryPathReq::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
inline void QueryPathReq::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
inline const ::proto::QueryFilter& QueryPathReq::filter() const {
  const ::proto::QueryFilter* p = filter_;
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::QueryFilter*>(
      &::proto::_QueryFilter_default_instance_);
}
inline ::proto::QueryFilter* QueryPathReq::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::proto::QueryFilter;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPathReq.filter)
  return filter_;
}
inline ::proto::QueryFilter* QueryPathReq::release_filter() {
  // @@protoc_insertion_point(field_release:proto.QueryPathReq.filter)
  
  ::proto::QueryFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
inline void QueryPathReq::set_allocated_filter(::proto::QueryFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPathReq.filter)
}

// int32 query_id = 15;
inline void QueryPathReq::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 QueryPathReq::query_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.query_id)
  return query_id_;
}
inline void QueryPathReq::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPathReq.query_id)
}

// .proto.Vector3Int destination_extend = 4;
inline bool QueryPathReq::has_destination_extend() const {
  return this != internal_default_instance() && destination_extend_ != NULL;
}
inline void QueryPathReq::clear_destination_extend() {
  if (GetArenaNoVirtual() == NULL && destination_extend_ != NULL) delete destination_extend_;
  destination_extend_ = NULL;
}
inline const ::proto::Vector3Int& QueryPathReq::destination_extend() const {
  const ::proto::Vector3Int* p = destination_extend_;
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.destination_extend)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector3Int*>(
      &::proto::_Vector3Int_default_instance_);
}
inline ::proto::Vector3Int* QueryPathReq::mutable_destination_extend() {
  
  if (destination_extend_ == NULL) {
    destination_extend_ = new ::proto::Vector3Int;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPathReq.destination_extend)
  return destination_extend_;
}
inline ::proto::Vector3Int* QueryPathReq::release_destination_extend() {
  // @@protoc_insertion_point(field_release:proto.QueryPathReq.destination_extend)
  
  ::proto::Vector3Int* temp = destination_extend_;
  destination_extend_ = NULL;
  return temp;
}
inline void QueryPathReq::set_allocated_destination_extend(::proto::Vector3Int* destination_extend) {
  delete destination_extend_;
  destination_extend_ = destination_extend;
  if (destination_extend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPathReq.destination_extend)
}

// repeated .proto.Vector destination_pos = 10;
inline int QueryPathReq::destination_pos_size() const {
  return destination_pos_.size();
}
inline void QueryPathReq::clear_destination_pos() {
  destination_pos_.Clear();
}
inline const ::proto::Vector& QueryPathReq::destination_pos(int index) const {
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.destination_pos)
  return destination_pos_.Get(index);
}
inline ::proto::Vector* QueryPathReq::mutable_destination_pos(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QueryPathReq.destination_pos)
  return destination_pos_.Mutable(index);
}
inline ::proto::Vector* QueryPathReq::add_destination_pos() {
  // @@protoc_insertion_point(field_add:proto.QueryPathReq.destination_pos)
  return destination_pos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
QueryPathReq::mutable_destination_pos() {
  // @@protoc_insertion_point(field_mutable_list:proto.QueryPathReq.destination_pos)
  return &destination_pos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
QueryPathReq::destination_pos() const {
  // @@protoc_insertion_point(field_list:proto.QueryPathReq.destination_pos)
  return destination_pos_;
}

// uint32 scene_id = 11;
inline void QueryPathReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 QueryPathReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryPathReq.scene_id)
  return scene_id_;
}
inline void QueryPathReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPathReq.scene_id)
}

// -------------------------------------------------------------------

// QueryPathRsp

// int32 query_id = 12;
inline void QueryPathRsp::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 QueryPathRsp::query_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryPathRsp.query_id)
  return query_id_;
}
inline void QueryPathRsp::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPathRsp.query_id)
}

// repeated .proto.Vector corners = 6;
inline int QueryPathRsp::corners_size() const {
  return corners_.size();
}
inline void QueryPathRsp::clear_corners() {
  corners_.Clear();
}
inline const ::proto::Vector& QueryPathRsp::corners(int index) const {
  // @@protoc_insertion_point(field_get:proto.QueryPathRsp.corners)
  return corners_.Get(index);
}
inline ::proto::Vector* QueryPathRsp::mutable_corners(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QueryPathRsp.corners)
  return corners_.Mutable(index);
}
inline ::proto::Vector* QueryPathRsp::add_corners() {
  // @@protoc_insertion_point(field_add:proto.QueryPathRsp.corners)
  return corners_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
QueryPathRsp::mutable_corners() {
  // @@protoc_insertion_point(field_mutable_list:proto.QueryPathRsp.corners)
  return &corners_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
QueryPathRsp::corners() const {
  // @@protoc_insertion_point(field_list:proto.QueryPathRsp.corners)
  return corners_;
}

// .proto.QueryPathRsp.PathStatusType query_status = 8;
inline void QueryPathRsp::clear_query_status() {
  query_status_ = 0;
}
inline ::proto::QueryPathRsp_PathStatusType QueryPathRsp::query_status() const {
  // @@protoc_insertion_point(field_get:proto.QueryPathRsp.query_status)
  return static_cast< ::proto::QueryPathRsp_PathStatusType >(query_status_);
}
inline void QueryPathRsp::set_query_status(::proto::QueryPathRsp_PathStatusType value) {
  
  query_status_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPathRsp.query_status)
}

// int32 retcode = 1;
inline void QueryPathRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 QueryPathRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryPathRsp.retcode)
  return retcode_;
}
inline void QueryPathRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPathRsp.retcode)
}

// -------------------------------------------------------------------

// ObstacleInfo

// .proto.MathQuaternion rotation = 4;
inline bool ObstacleInfo::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline void ObstacleInfo::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) delete rotation_;
  rotation_ = NULL;
}
inline const ::proto::MathQuaternion& ObstacleInfo::rotation() const {
  const ::proto::MathQuaternion* p = rotation_;
  // @@protoc_insertion_point(field_get:proto.ObstacleInfo.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
inline ::proto::MathQuaternion* ObstacleInfo::mutable_rotation() {
  
  if (rotation_ == NULL) {
    rotation_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.ObstacleInfo.rotation)
  return rotation_;
}
inline ::proto::MathQuaternion* ObstacleInfo::release_rotation() {
  // @@protoc_insertion_point(field_release:proto.ObstacleInfo.rotation)
  
  ::proto::MathQuaternion* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline void ObstacleInfo::set_allocated_rotation(::proto::MathQuaternion* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ObstacleInfo.rotation)
}

// int32 obstacle_id = 2;
inline void ObstacleInfo::clear_obstacle_id() {
  obstacle_id_ = 0;
}
inline ::google::protobuf::int32 ObstacleInfo::obstacle_id() const {
  // @@protoc_insertion_point(field_get:proto.ObstacleInfo.obstacle_id)
  return obstacle_id_;
}
inline void ObstacleInfo::set_obstacle_id(::google::protobuf::int32 value) {
  
  obstacle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ObstacleInfo.obstacle_id)
}

// .proto.Vector center = 14;
inline bool ObstacleInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void ObstacleInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& ObstacleInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.ObstacleInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ObstacleInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ObstacleInfo.center)
  return center_;
}
inline ::proto::Vector* ObstacleInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.ObstacleInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void ObstacleInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ObstacleInfo.center)
}

// .proto.ObstacleInfo.ShapeType shape = 6;
inline void ObstacleInfo::clear_shape() {
  shape_ = 0;
}
inline ::proto::ObstacleInfo_ShapeType ObstacleInfo::shape() const {
  // @@protoc_insertion_point(field_get:proto.ObstacleInfo.shape)
  return static_cast< ::proto::ObstacleInfo_ShapeType >(shape_);
}
inline void ObstacleInfo::set_shape(::proto::ObstacleInfo_ShapeType value) {
  
  shape_ = value;
  // @@protoc_insertion_point(field_set:proto.ObstacleInfo.shape)
}

// .proto.Vector3Int extents = 12;
inline bool ObstacleInfo::has_extents() const {
  return this != internal_default_instance() && extents_ != NULL;
}
inline void ObstacleInfo::clear_extents() {
  if (GetArenaNoVirtual() == NULL && extents_ != NULL) delete extents_;
  extents_ = NULL;
}
inline const ::proto::Vector3Int& ObstacleInfo::extents() const {
  const ::proto::Vector3Int* p = extents_;
  // @@protoc_insertion_point(field_get:proto.ObstacleInfo.extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector3Int*>(
      &::proto::_Vector3Int_default_instance_);
}
inline ::proto::Vector3Int* ObstacleInfo::mutable_extents() {
  
  if (extents_ == NULL) {
    extents_ = new ::proto::Vector3Int;
  }
  // @@protoc_insertion_point(field_mutable:proto.ObstacleInfo.extents)
  return extents_;
}
inline ::proto::Vector3Int* ObstacleInfo::release_extents() {
  // @@protoc_insertion_point(field_release:proto.ObstacleInfo.extents)
  
  ::proto::Vector3Int* temp = extents_;
  extents_ = NULL;
  return temp;
}
inline void ObstacleInfo::set_allocated_extents(::proto::Vector3Int* extents) {
  delete extents_;
  extents_ = extents;
  if (extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ObstacleInfo.extents)
}

// -------------------------------------------------------------------

// ObstacleModifyNotify

// repeated int32 remove_obstacle_ids = 9;
inline int ObstacleModifyNotify::remove_obstacle_ids_size() const {
  return remove_obstacle_ids_.size();
}
inline void ObstacleModifyNotify::clear_remove_obstacle_ids() {
  remove_obstacle_ids_.Clear();
}
inline ::google::protobuf::int32 ObstacleModifyNotify::remove_obstacle_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.ObstacleModifyNotify.remove_obstacle_ids)
  return remove_obstacle_ids_.Get(index);
}
inline void ObstacleModifyNotify::set_remove_obstacle_ids(int index, ::google::protobuf::int32 value) {
  remove_obstacle_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ObstacleModifyNotify.remove_obstacle_ids)
}
inline void ObstacleModifyNotify::add_remove_obstacle_ids(::google::protobuf::int32 value) {
  remove_obstacle_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ObstacleModifyNotify.remove_obstacle_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ObstacleModifyNotify::remove_obstacle_ids() const {
  // @@protoc_insertion_point(field_list:proto.ObstacleModifyNotify.remove_obstacle_ids)
  return remove_obstacle_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ObstacleModifyNotify::mutable_remove_obstacle_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.ObstacleModifyNotify.remove_obstacle_ids)
  return &remove_obstacle_ids_;
}

// repeated .proto.ObstacleInfo add_obstacles = 6;
inline int ObstacleModifyNotify::add_obstacles_size() const {
  return add_obstacles_.size();
}
inline void ObstacleModifyNotify::clear_add_obstacles() {
  add_obstacles_.Clear();
}
inline const ::proto::ObstacleInfo& ObstacleModifyNotify::add_obstacles(int index) const {
  // @@protoc_insertion_point(field_get:proto.ObstacleModifyNotify.add_obstacles)
  return add_obstacles_.Get(index);
}
inline ::proto::ObstacleInfo* ObstacleModifyNotify::mutable_add_obstacles(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ObstacleModifyNotify.add_obstacles)
  return add_obstacles_.Mutable(index);
}
inline ::proto::ObstacleInfo* ObstacleModifyNotify::add_add_obstacles() {
  // @@protoc_insertion_point(field_add:proto.ObstacleModifyNotify.add_obstacles)
  return add_obstacles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >*
ObstacleModifyNotify::mutable_add_obstacles() {
  // @@protoc_insertion_point(field_mutable_list:proto.ObstacleModifyNotify.add_obstacles)
  return &add_obstacles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >&
ObstacleModifyNotify::add_obstacles() const {
  // @@protoc_insertion_point(field_list:proto.ObstacleModifyNotify.add_obstacles)
  return add_obstacles_;
}

// uint32 scene_id = 5;
inline void ObstacleModifyNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ObstacleModifyNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ObstacleModifyNotify.scene_id)
  return scene_id_;
}
inline void ObstacleModifyNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ObstacleModifyNotify.scene_id)
}

// -------------------------------------------------------------------

// PathfindingPingNotify

// -------------------------------------------------------------------

// PathfindingEnterSceneReq

// uint32 scene_id = 12;
inline void PathfindingEnterSceneReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PathfindingEnterSceneReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneReq.scene_id)
  return scene_id_;
}
inline void PathfindingEnterSceneReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PathfindingEnterSceneReq.scene_id)
}

// repeated uint32 activity_id = 14;
inline int PathfindingEnterSceneReq::activity_id_size() const {
  return activity_id_.size();
}
inline void PathfindingEnterSceneReq::clear_activity_id() {
  activity_id_.Clear();
}
inline ::google::protobuf::uint32 PathfindingEnterSceneReq::activity_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneReq.activity_id)
  return activity_id_.Get(index);
}
inline void PathfindingEnterSceneReq::set_activity_id(int index, ::google::protobuf::uint32 value) {
  activity_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PathfindingEnterSceneReq.activity_id)
}
inline void PathfindingEnterSceneReq::add_activity_id(::google::protobuf::uint32 value) {
  activity_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PathfindingEnterSceneReq.activity_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PathfindingEnterSceneReq::activity_id() const {
  // @@protoc_insertion_point(field_list:proto.PathfindingEnterSceneReq.activity_id)
  return activity_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PathfindingEnterSceneReq::mutable_activity_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.PathfindingEnterSceneReq.activity_id)
  return &activity_id_;
}

// uint32 scene_tag_hash = 15;
inline void PathfindingEnterSceneReq::clear_scene_tag_hash() {
  scene_tag_hash_ = 0u;
}
inline ::google::protobuf::uint32 PathfindingEnterSceneReq::scene_tag_hash() const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneReq.scene_tag_hash)
  return scene_tag_hash_;
}
inline void PathfindingEnterSceneReq::set_scene_tag_hash(::google::protobuf::uint32 value) {
  
  scene_tag_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.PathfindingEnterSceneReq.scene_tag_hash)
}

// uint32 version = 6;
inline void PathfindingEnterSceneReq::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 PathfindingEnterSceneReq::version() const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneReq.version)
  return version_;
}
inline void PathfindingEnterSceneReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.PathfindingEnterSceneReq.version)
}

// bool is_editor = 11;
inline void PathfindingEnterSceneReq::clear_is_editor() {
  is_editor_ = false;
}
inline bool PathfindingEnterSceneReq::is_editor() const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneReq.is_editor)
  return is_editor_;
}
inline void PathfindingEnterSceneReq::set_is_editor(bool value) {
  
  is_editor_ = value;
  // @@protoc_insertion_point(field_set:proto.PathfindingEnterSceneReq.is_editor)
}

// repeated .proto.ObstacleInfo obstacles = 13;
inline int PathfindingEnterSceneReq::obstacles_size() const {
  return obstacles_.size();
}
inline void PathfindingEnterSceneReq::clear_obstacles() {
  obstacles_.Clear();
}
inline const ::proto::ObstacleInfo& PathfindingEnterSceneReq::obstacles(int index) const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneReq.obstacles)
  return obstacles_.Get(index);
}
inline ::proto::ObstacleInfo* PathfindingEnterSceneReq::mutable_obstacles(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PathfindingEnterSceneReq.obstacles)
  return obstacles_.Mutable(index);
}
inline ::proto::ObstacleInfo* PathfindingEnterSceneReq::add_obstacles() {
  // @@protoc_insertion_point(field_add:proto.PathfindingEnterSceneReq.obstacles)
  return obstacles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >*
PathfindingEnterSceneReq::mutable_obstacles() {
  // @@protoc_insertion_point(field_mutable_list:proto.PathfindingEnterSceneReq.obstacles)
  return &obstacles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ObstacleInfo >&
PathfindingEnterSceneReq::obstacles() const {
  // @@protoc_insertion_point(field_list:proto.PathfindingEnterSceneReq.obstacles)
  return obstacles_;
}

// uint32 polygon_id = 4;
inline void PathfindingEnterSceneReq::clear_polygon_id() {
  polygon_id_ = 0u;
}
inline ::google::protobuf::uint32 PathfindingEnterSceneReq::polygon_id() const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneReq.polygon_id)
  return polygon_id_;
}
inline void PathfindingEnterSceneReq::set_polygon_id(::google::protobuf::uint32 value) {
  
  polygon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PathfindingEnterSceneReq.polygon_id)
}

// -------------------------------------------------------------------

// PathfindingEnterSceneRsp

// int32 retcode = 9;
inline void PathfindingEnterSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PathfindingEnterSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PathfindingEnterSceneRsp.retcode)
  return retcode_;
}
inline void PathfindingEnterSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PathfindingEnterSceneRsp.retcode)
}

// -------------------------------------------------------------------

// GMShowObstacleReq

// -------------------------------------------------------------------

// GMObstacleInfo

// int64 timestamp = 14;
inline void GMObstacleInfo::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GMObstacleInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.GMObstacleInfo.timestamp)
  return timestamp_;
}
inline void GMObstacleInfo::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.GMObstacleInfo.timestamp)
}

// .proto.GMObstacleInfo.ShapeType shape = 2;
inline void GMObstacleInfo::clear_shape() {
  shape_ = 0;
}
inline ::proto::GMObstacleInfo_ShapeType GMObstacleInfo::shape() const {
  // @@protoc_insertion_point(field_get:proto.GMObstacleInfo.shape)
  return static_cast< ::proto::GMObstacleInfo_ShapeType >(shape_);
}
inline void GMObstacleInfo::set_shape(::proto::GMObstacleInfo_ShapeType value) {
  
  shape_ = value;
  // @@protoc_insertion_point(field_set:proto.GMObstacleInfo.shape)
}

// int32 obstacle_id = 13;
inline void GMObstacleInfo::clear_obstacle_id() {
  obstacle_id_ = 0;
}
inline ::google::protobuf::int32 GMObstacleInfo::obstacle_id() const {
  // @@protoc_insertion_point(field_get:proto.GMObstacleInfo.obstacle_id)
  return obstacle_id_;
}
inline void GMObstacleInfo::set_obstacle_id(::google::protobuf::int32 value) {
  
  obstacle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GMObstacleInfo.obstacle_id)
}

// .proto.MathQuaternion rotation = 3;
inline bool GMObstacleInfo::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline void GMObstacleInfo::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) delete rotation_;
  rotation_ = NULL;
}
inline const ::proto::MathQuaternion& GMObstacleInfo::rotation() const {
  const ::proto::MathQuaternion* p = rotation_;
  // @@protoc_insertion_point(field_get:proto.GMObstacleInfo.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
inline ::proto::MathQuaternion* GMObstacleInfo::mutable_rotation() {
  
  if (rotation_ == NULL) {
    rotation_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.GMObstacleInfo.rotation)
  return rotation_;
}
inline ::proto::MathQuaternion* GMObstacleInfo::release_rotation() {
  // @@protoc_insertion_point(field_release:proto.GMObstacleInfo.rotation)
  
  ::proto::MathQuaternion* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline void GMObstacleInfo::set_allocated_rotation(::proto::MathQuaternion* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GMObstacleInfo.rotation)
}

// .proto.Vector center = 8;
inline bool GMObstacleInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void GMObstacleInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& GMObstacleInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.GMObstacleInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* GMObstacleInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.GMObstacleInfo.center)
  return center_;
}
inline ::proto::Vector* GMObstacleInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.GMObstacleInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void GMObstacleInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GMObstacleInfo.center)
}

// .proto.Vector3Int extents = 15;
inline bool GMObstacleInfo::has_extents() const {
  return this != internal_default_instance() && extents_ != NULL;
}
inline void GMObstacleInfo::clear_extents() {
  if (GetArenaNoVirtual() == NULL && extents_ != NULL) delete extents_;
  extents_ = NULL;
}
inline const ::proto::Vector3Int& GMObstacleInfo::extents() const {
  const ::proto::Vector3Int* p = extents_;
  // @@protoc_insertion_point(field_get:proto.GMObstacleInfo.extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector3Int*>(
      &::proto::_Vector3Int_default_instance_);
}
inline ::proto::Vector3Int* GMObstacleInfo::mutable_extents() {
  
  if (extents_ == NULL) {
    extents_ = new ::proto::Vector3Int;
  }
  // @@protoc_insertion_point(field_mutable:proto.GMObstacleInfo.extents)
  return extents_;
}
inline ::proto::Vector3Int* GMObstacleInfo::release_extents() {
  // @@protoc_insertion_point(field_release:proto.GMObstacleInfo.extents)
  
  ::proto::Vector3Int* temp = extents_;
  extents_ = NULL;
  return temp;
}
inline void GMObstacleInfo::set_allocated_extents(::proto::Vector3Int* extents) {
  delete extents_;
  extents_ = extents;
  if (extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GMObstacleInfo.extents)
}

// -------------------------------------------------------------------

// GMShowObstacleRsp

// int32 retcode = 5;
inline void GMShowObstacleRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GMShowObstacleRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GMShowObstacleRsp.retcode)
  return retcode_;
}
inline void GMShowObstacleRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GMShowObstacleRsp.retcode)
}

// repeated .proto.GMObstacleInfo obstacles = 6;
inline int GMShowObstacleRsp::obstacles_size() const {
  return obstacles_.size();
}
inline void GMShowObstacleRsp::clear_obstacles() {
  obstacles_.Clear();
}
inline const ::proto::GMObstacleInfo& GMShowObstacleRsp::obstacles(int index) const {
  // @@protoc_insertion_point(field_get:proto.GMShowObstacleRsp.obstacles)
  return obstacles_.Get(index);
}
inline ::proto::GMObstacleInfo* GMShowObstacleRsp::mutable_obstacles(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GMShowObstacleRsp.obstacles)
  return obstacles_.Mutable(index);
}
inline ::proto::GMObstacleInfo* GMShowObstacleRsp::add_obstacles() {
  // @@protoc_insertion_point(field_add:proto.GMShowObstacleRsp.obstacles)
  return obstacles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GMObstacleInfo >*
GMShowObstacleRsp::mutable_obstacles() {
  // @@protoc_insertion_point(field_mutable_list:proto.GMShowObstacleRsp.obstacles)
  return &obstacles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GMObstacleInfo >&
GMShowObstacleRsp::obstacles() const {
  // @@protoc_insertion_point(field_list:proto.GMShowObstacleRsp.obstacles)
  return obstacles_;
}

// -------------------------------------------------------------------

// GMShowNavMeshReq

// .proto.Vector center = 1;
inline bool GMShowNavMeshReq::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void GMShowNavMeshReq::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& GMShowNavMeshReq::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.GMShowNavMeshReq.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* GMShowNavMeshReq::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.GMShowNavMeshReq.center)
  return center_;
}
inline ::proto::Vector* GMShowNavMeshReq::release_center() {
  // @@protoc_insertion_point(field_release:proto.GMShowNavMeshReq.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void GMShowNavMeshReq::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GMShowNavMeshReq.center)
}

// .proto.Vector extent = 5;
inline bool GMShowNavMeshReq::has_extent() const {
  return this != internal_default_instance() && extent_ != NULL;
}
inline void GMShowNavMeshReq::clear_extent() {
  if (GetArenaNoVirtual() == NULL && extent_ != NULL) delete extent_;
  extent_ = NULL;
}
inline const ::proto::Vector& GMShowNavMeshReq::extent() const {
  const ::proto::Vector* p = extent_;
  // @@protoc_insertion_point(field_get:proto.GMShowNavMeshReq.extent)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* GMShowNavMeshReq::mutable_extent() {
  
  if (extent_ == NULL) {
    extent_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.GMShowNavMeshReq.extent)
  return extent_;
}
inline ::proto::Vector* GMShowNavMeshReq::release_extent() {
  // @@protoc_insertion_point(field_release:proto.GMShowNavMeshReq.extent)
  
  ::proto::Vector* temp = extent_;
  extent_ = NULL;
  return temp;
}
inline void GMShowNavMeshReq::set_allocated_extent(::proto::Vector* extent) {
  delete extent_;
  extent_ = extent;
  if (extent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GMShowNavMeshReq.extent)
}

// -------------------------------------------------------------------

// PBNavMeshPoly

// repeated .proto.PBNavMeshPoly.EdgeType edge_types = 10;
inline int PBNavMeshPoly::edge_types_size() const {
  return edge_types_.size();
}
inline void PBNavMeshPoly::clear_edge_types() {
  edge_types_.Clear();
}
inline ::proto::PBNavMeshPoly_EdgeType PBNavMeshPoly::edge_types(int index) const {
  // @@protoc_insertion_point(field_get:proto.PBNavMeshPoly.edge_types)
  return static_cast< ::proto::PBNavMeshPoly_EdgeType >(edge_types_.Get(index));
}
inline void PBNavMeshPoly::set_edge_types(int index, ::proto::PBNavMeshPoly_EdgeType value) {
  edge_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PBNavMeshPoly.edge_types)
}
inline void PBNavMeshPoly::add_edge_types(::proto::PBNavMeshPoly_EdgeType value) {
  edge_types_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PBNavMeshPoly.edge_types)
}
inline const ::google::protobuf::RepeatedField<int>&
PBNavMeshPoly::edge_types() const {
  // @@protoc_insertion_point(field_list:proto.PBNavMeshPoly.edge_types)
  return edge_types_;
}
inline ::google::protobuf::RepeatedField<int>*
PBNavMeshPoly::mutable_edge_types() {
  // @@protoc_insertion_point(field_mutable_list:proto.PBNavMeshPoly.edge_types)
  return &edge_types_;
}

// int32 area = 6;
inline void PBNavMeshPoly::clear_area() {
  area_ = 0;
}
inline ::google::protobuf::int32 PBNavMeshPoly::area() const {
  // @@protoc_insertion_point(field_get:proto.PBNavMeshPoly.area)
  return area_;
}
inline void PBNavMeshPoly::set_area(::google::protobuf::int32 value) {
  
  area_ = value;
  // @@protoc_insertion_point(field_set:proto.PBNavMeshPoly.area)
}

// repeated int32 vects = 7;
inline int PBNavMeshPoly::vects_size() const {
  return vects_.size();
}
inline void PBNavMeshPoly::clear_vects() {
  vects_.Clear();
}
inline ::google::protobuf::int32 PBNavMeshPoly::vects(int index) const {
  // @@protoc_insertion_point(field_get:proto.PBNavMeshPoly.vects)
  return vects_.Get(index);
}
inline void PBNavMeshPoly::set_vects(int index, ::google::protobuf::int32 value) {
  vects_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PBNavMeshPoly.vects)
}
inline void PBNavMeshPoly::add_vects(::google::protobuf::int32 value) {
  vects_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PBNavMeshPoly.vects)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBNavMeshPoly::vects() const {
  // @@protoc_insertion_point(field_list:proto.PBNavMeshPoly.vects)
  return vects_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBNavMeshPoly::mutable_vects() {
  // @@protoc_insertion_point(field_mutable_list:proto.PBNavMeshPoly.vects)
  return &vects_;
}

// -------------------------------------------------------------------

// PBNavMeshTile

// repeated .proto.Vector vecs = 4;
inline int PBNavMeshTile::vecs_size() const {
  return vecs_.size();
}
inline void PBNavMeshTile::clear_vecs() {
  vecs_.Clear();
}
inline const ::proto::Vector& PBNavMeshTile::vecs(int index) const {
  // @@protoc_insertion_point(field_get:proto.PBNavMeshTile.vecs)
  return vecs_.Get(index);
}
inline ::proto::Vector* PBNavMeshTile::mutable_vecs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PBNavMeshTile.vecs)
  return vecs_.Mutable(index);
}
inline ::proto::Vector* PBNavMeshTile::add_vecs() {
  // @@protoc_insertion_point(field_add:proto.PBNavMeshTile.vecs)
  return vecs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
PBNavMeshTile::mutable_vecs() {
  // @@protoc_insertion_point(field_mutable_list:proto.PBNavMeshTile.vecs)
  return &vecs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
PBNavMeshTile::vecs() const {
  // @@protoc_insertion_point(field_list:proto.PBNavMeshTile.vecs)
  return vecs_;
}

// repeated .proto.PBNavMeshPoly polys = 8;
inline int PBNavMeshTile::polys_size() const {
  return polys_.size();
}
inline void PBNavMeshTile::clear_polys() {
  polys_.Clear();
}
inline const ::proto::PBNavMeshPoly& PBNavMeshTile::polys(int index) const {
  // @@protoc_insertion_point(field_get:proto.PBNavMeshTile.polys)
  return polys_.Get(index);
}
inline ::proto::PBNavMeshPoly* PBNavMeshTile::mutable_polys(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PBNavMeshTile.polys)
  return polys_.Mutable(index);
}
inline ::proto::PBNavMeshPoly* PBNavMeshTile::add_polys() {
  // @@protoc_insertion_point(field_add:proto.PBNavMeshTile.polys)
  return polys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshPoly >*
PBNavMeshTile::mutable_polys() {
  // @@protoc_insertion_point(field_mutable_list:proto.PBNavMeshTile.polys)
  return &polys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshPoly >&
PBNavMeshTile::polys() const {
  // @@protoc_insertion_point(field_list:proto.PBNavMeshTile.polys)
  return polys_;
}

// -------------------------------------------------------------------

// GMShowNavMeshRsp

// repeated .proto.PBNavMeshTile tiles = 11;
inline int GMShowNavMeshRsp::tiles_size() const {
  return tiles_.size();
}
inline void GMShowNavMeshRsp::clear_tiles() {
  tiles_.Clear();
}
inline const ::proto::PBNavMeshTile& GMShowNavMeshRsp::tiles(int index) const {
  // @@protoc_insertion_point(field_get:proto.GMShowNavMeshRsp.tiles)
  return tiles_.Get(index);
}
inline ::proto::PBNavMeshTile* GMShowNavMeshRsp::mutable_tiles(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GMShowNavMeshRsp.tiles)
  return tiles_.Mutable(index);
}
inline ::proto::PBNavMeshTile* GMShowNavMeshRsp::add_tiles() {
  // @@protoc_insertion_point(field_add:proto.GMShowNavMeshRsp.tiles)
  return tiles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshTile >*
GMShowNavMeshRsp::mutable_tiles() {
  // @@protoc_insertion_point(field_mutable_list:proto.GMShowNavMeshRsp.tiles)
  return &tiles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PBNavMeshTile >&
GMShowNavMeshRsp::tiles() const {
  // @@protoc_insertion_point(field_list:proto.GMShowNavMeshRsp.tiles)
  return tiles_;
}

// int32 retcode = 5;
inline void GMShowNavMeshRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GMShowNavMeshRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GMShowNavMeshRsp.retcode)
  return retcode_;
}
inline void GMShowNavMeshRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GMShowNavMeshRsp.retcode)
}

// -------------------------------------------------------------------

// PbNavMeshStatsInfo

// int32 authority_ai_in_combat = 10;
inline void PbNavMeshStatsInfo::clear_authority_ai_in_combat() {
  authority_ai_in_combat_ = 0;
}
inline ::google::protobuf::int32 PbNavMeshStatsInfo::authority_ai_in_combat() const {
  // @@protoc_insertion_point(field_get:proto.PbNavMeshStatsInfo.authority_ai_in_combat)
  return authority_ai_in_combat_;
}
inline void PbNavMeshStatsInfo::set_authority_ai_in_combat(::google::protobuf::int32 value) {
  
  authority_ai_in_combat_ = value;
  // @@protoc_insertion_point(field_set:proto.PbNavMeshStatsInfo.authority_ai_in_combat)
}

// int32 no_authority_ai_in_combat = 11;
inline void PbNavMeshStatsInfo::clear_no_authority_ai_in_combat() {
  no_authority_ai_in_combat_ = 0;
}
inline ::google::protobuf::int32 PbNavMeshStatsInfo::no_authority_ai_in_combat() const {
  // @@protoc_insertion_point(field_get:proto.PbNavMeshStatsInfo.no_authority_ai_in_combat)
  return no_authority_ai_in_combat_;
}
inline void PbNavMeshStatsInfo::set_no_authority_ai_in_combat(::google::protobuf::int32 value) {
  
  no_authority_ai_in_combat_ = value;
  // @@protoc_insertion_point(field_set:proto.PbNavMeshStatsInfo.no_authority_ai_in_combat)
}

// int32 total_authority_ai = 8;
inline void PbNavMeshStatsInfo::clear_total_authority_ai() {
  total_authority_ai_ = 0;
}
inline ::google::protobuf::int32 PbNavMeshStatsInfo::total_authority_ai() const {
  // @@protoc_insertion_point(field_get:proto.PbNavMeshStatsInfo.total_authority_ai)
  return total_authority_ai_;
}
inline void PbNavMeshStatsInfo::set_total_authority_ai(::google::protobuf::int32 value) {
  
  total_authority_ai_ = value;
  // @@protoc_insertion_point(field_set:proto.PbNavMeshStatsInfo.total_authority_ai)
}

// int32 total_no_authority_ai = 13;
inline void PbNavMeshStatsInfo::clear_total_no_authority_ai() {
  total_no_authority_ai_ = 0;
}
inline ::google::protobuf::int32 PbNavMeshStatsInfo::total_no_authority_ai() const {
  // @@protoc_insertion_point(field_get:proto.PbNavMeshStatsInfo.total_no_authority_ai)
  return total_no_authority_ai_;
}
inline void PbNavMeshStatsInfo::set_total_no_authority_ai(::google::protobuf::int32 value) {
  
  total_no_authority_ai_ = value;
  // @@protoc_insertion_point(field_set:proto.PbNavMeshStatsInfo.total_no_authority_ai)
}

// -------------------------------------------------------------------

// NavMeshStatsNotify

// repeated .proto.PbNavMeshStatsInfo infos = 4;
inline int NavMeshStatsNotify::infos_size() const {
  return infos_.size();
}
inline void NavMeshStatsNotify::clear_infos() {
  infos_.Clear();
}
inline const ::proto::PbNavMeshStatsInfo& NavMeshStatsNotify::infos(int index) const {
  // @@protoc_insertion_point(field_get:proto.NavMeshStatsNotify.infos)
  return infos_.Get(index);
}
inline ::proto::PbNavMeshStatsInfo* NavMeshStatsNotify::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:proto.NavMeshStatsNotify.infos)
  return infos_.Mutable(index);
}
inline ::proto::PbNavMeshStatsInfo* NavMeshStatsNotify::add_infos() {
  // @@protoc_insertion_point(field_add:proto.NavMeshStatsNotify.infos)
  return infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PbNavMeshStatsInfo >*
NavMeshStatsNotify::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:proto.NavMeshStatsNotify.infos)
  return &infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PbNavMeshStatsInfo >&
NavMeshStatsNotify::infos() const {
  // @@protoc_insertion_point(field_list:proto.NavMeshStatsNotify.infos)
  return infos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::QueryPathReq_OptionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::QueryPathReq_OptionType>() {
  return ::proto::QueryPathReq_OptionType_descriptor();
}
template <> struct is_proto_enum< ::proto::QueryPathRsp_PathStatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::QueryPathRsp_PathStatusType>() {
  return ::proto::QueryPathRsp_PathStatusType_descriptor();
}
template <> struct is_proto_enum< ::proto::ObstacleInfo_ShapeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ObstacleInfo_ShapeType>() {
  return ::proto::ObstacleInfo_ShapeType_descriptor();
}
template <> struct is_proto_enum< ::proto::GMObstacleInfo_ShapeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GMObstacleInfo_ShapeType>() {
  return ::proto::GMObstacleInfo_ShapeType_descriptor();
}
template <> struct is_proto_enum< ::proto::PBNavMeshPoly_EdgeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PBNavMeshPoly_EdgeType>() {
  return ::proto::PBNavMeshPoly_EdgeType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fpathfinding_2eproto__INCLUDED
