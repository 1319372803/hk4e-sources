// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_tothemoon.proto

#ifndef PROTOBUF_cmd_2fcmd_5ftothemoon_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5ftothemoon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class DynamicLayerNodes;
class DynamicLayerNodesDefaultTypeInternal;
extern DynamicLayerNodesDefaultTypeInternal _DynamicLayerNodes_default_instance_;
class DynamicNodes;
class DynamicNodesDefaultTypeInternal;
extern DynamicNodesDefaultTypeInternal _DynamicNodes_default_instance_;
class DynamicSVONode;
class DynamicSVONodeDefaultTypeInternal;
extern DynamicSVONodeDefaultTypeInternal _DynamicSVONode_default_instance_;
class ToTheMoonAddObstacleReq;
class ToTheMoonAddObstacleReqDefaultTypeInternal;
extern ToTheMoonAddObstacleReqDefaultTypeInternal _ToTheMoonAddObstacleReq_default_instance_;
class ToTheMoonAddObstacleRsp;
class ToTheMoonAddObstacleRspDefaultTypeInternal;
extern ToTheMoonAddObstacleRspDefaultTypeInternal _ToTheMoonAddObstacleRsp_default_instance_;
class ToTheMoonEnterSceneReq;
class ToTheMoonEnterSceneReqDefaultTypeInternal;
extern ToTheMoonEnterSceneReqDefaultTypeInternal _ToTheMoonEnterSceneReq_default_instance_;
class ToTheMoonEnterSceneRsp;
class ToTheMoonEnterSceneRspDefaultTypeInternal;
extern ToTheMoonEnterSceneRspDefaultTypeInternal _ToTheMoonEnterSceneRsp_default_instance_;
class ToTheMoonObstacleInfo;
class ToTheMoonObstacleInfoDefaultTypeInternal;
extern ToTheMoonObstacleInfoDefaultTypeInternal _ToTheMoonObstacleInfo_default_instance_;
class ToTheMoonObstaclesModifyNotify;
class ToTheMoonObstaclesModifyNotifyDefaultTypeInternal;
extern ToTheMoonObstaclesModifyNotifyDefaultTypeInternal _ToTheMoonObstaclesModifyNotify_default_instance_;
class ToTheMoonPingNotify;
class ToTheMoonPingNotifyDefaultTypeInternal;
extern ToTheMoonPingNotifyDefaultTypeInternal _ToTheMoonPingNotify_default_instance_;
class ToTheMoonQueryPathReq;
class ToTheMoonQueryPathReqDefaultTypeInternal;
extern ToTheMoonQueryPathReqDefaultTypeInternal _ToTheMoonQueryPathReq_default_instance_;
class ToTheMoonQueryPathRsp;
class ToTheMoonQueryPathRspDefaultTypeInternal;
extern ToTheMoonQueryPathRspDefaultTypeInternal _ToTheMoonQueryPathRsp_default_instance_;
class ToTheMoonRemoveObstacleReq;
class ToTheMoonRemoveObstacleReqDefaultTypeInternal;
extern ToTheMoonRemoveObstacleReqDefaultTypeInternal _ToTheMoonRemoveObstacleReq_default_instance_;
class ToTheMoonRemoveObstacleRsp;
class ToTheMoonRemoveObstacleRspDefaultTypeInternal;
extern ToTheMoonRemoveObstacleRspDefaultTypeInternal _ToTheMoonRemoveObstacleRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5ftothemoon_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5ftothemoon_2eproto

enum ToTheMoonQueryPathReq_OptionType {
  ToTheMoonQueryPathReq_OptionType_OPTION_NONE = 0,
  ToTheMoonQueryPathReq_OptionType_OPTION_NORMAL = 1,
  ToTheMoonQueryPathReq_OptionType_ToTheMoonQueryPathReq_OptionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ToTheMoonQueryPathReq_OptionType_ToTheMoonQueryPathReq_OptionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ToTheMoonQueryPathReq_OptionType_IsValid(int value);
const ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq_OptionType_OptionType_MIN = ToTheMoonQueryPathReq_OptionType_OPTION_NONE;
const ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq_OptionType_OptionType_MAX = ToTheMoonQueryPathReq_OptionType_OPTION_NORMAL;
const int ToTheMoonQueryPathReq_OptionType_OptionType_ARRAYSIZE = ToTheMoonQueryPathReq_OptionType_OptionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathReq_OptionType_descriptor();
inline const ::std::string& ToTheMoonQueryPathReq_OptionType_Name(ToTheMoonQueryPathReq_OptionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ToTheMoonQueryPathReq_OptionType_descriptor(), value);
}
inline bool ToTheMoonQueryPathReq_OptionType_Parse(
    const ::std::string& name, ToTheMoonQueryPathReq_OptionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ToTheMoonQueryPathReq_OptionType>(
    ToTheMoonQueryPathReq_OptionType_descriptor(), name, value);
}
enum ToTheMoonQueryPathReq_AStarMethod {
  ToTheMoonQueryPathReq_AStarMethod_Classic = 0,
  ToTheMoonQueryPathReq_AStarMethod_Tendency = 1,
  ToTheMoonQueryPathReq_AStarMethod_Adaptive = 2,
  ToTheMoonQueryPathReq_AStarMethod_Inflection = 3,
  ToTheMoonQueryPathReq_AStarMethod_ToTheMoonQueryPathReq_AStarMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ToTheMoonQueryPathReq_AStarMethod_ToTheMoonQueryPathReq_AStarMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ToTheMoonQueryPathReq_AStarMethod_IsValid(int value);
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq_AStarMethod_AStarMethod_MIN = ToTheMoonQueryPathReq_AStarMethod_Classic;
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq_AStarMethod_AStarMethod_MAX = ToTheMoonQueryPathReq_AStarMethod_Inflection;
const int ToTheMoonQueryPathReq_AStarMethod_AStarMethod_ARRAYSIZE = ToTheMoonQueryPathReq_AStarMethod_AStarMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathReq_AStarMethod_descriptor();
inline const ::std::string& ToTheMoonQueryPathReq_AStarMethod_Name(ToTheMoonQueryPathReq_AStarMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    ToTheMoonQueryPathReq_AStarMethod_descriptor(), value);
}
inline bool ToTheMoonQueryPathReq_AStarMethod_Parse(
    const ::std::string& name, ToTheMoonQueryPathReq_AStarMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ToTheMoonQueryPathReq_AStarMethod>(
    ToTheMoonQueryPathReq_AStarMethod_descriptor(), name, value);
}
enum ToTheMoonQueryPathReq_FilterType {
  ToTheMoonQueryPathReq_FilterType_All = 0,
  ToTheMoonQueryPathReq_FilterType_Air = 1,
  ToTheMoonQueryPathReq_FilterType_Water = 2,
  ToTheMoonQueryPathReq_FilterType_ToTheMoonQueryPathReq_FilterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ToTheMoonQueryPathReq_FilterType_ToTheMoonQueryPathReq_FilterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ToTheMoonQueryPathReq_FilterType_IsValid(int value);
const ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq_FilterType_FilterType_MIN = ToTheMoonQueryPathReq_FilterType_All;
const ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq_FilterType_FilterType_MAX = ToTheMoonQueryPathReq_FilterType_Water;
const int ToTheMoonQueryPathReq_FilterType_FilterType_ARRAYSIZE = ToTheMoonQueryPathReq_FilterType_FilterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathReq_FilterType_descriptor();
inline const ::std::string& ToTheMoonQueryPathReq_FilterType_Name(ToTheMoonQueryPathReq_FilterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ToTheMoonQueryPathReq_FilterType_descriptor(), value);
}
inline bool ToTheMoonQueryPathReq_FilterType_Parse(
    const ::std::string& name, ToTheMoonQueryPathReq_FilterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ToTheMoonQueryPathReq_FilterType>(
    ToTheMoonQueryPathReq_FilterType_descriptor(), name, value);
}
enum ToTheMoonQueryPathRsp_PathStatusType {
  ToTheMoonQueryPathRsp_PathStatusType_STATUS_FAIL = 0,
  ToTheMoonQueryPathRsp_PathStatusType_STATUS_SUCC = 1,
  ToTheMoonQueryPathRsp_PathStatusType_STATUS_PARTIAL = 2,
  ToTheMoonQueryPathRsp_PathStatusType_ToTheMoonQueryPathRsp_PathStatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ToTheMoonQueryPathRsp_PathStatusType_ToTheMoonQueryPathRsp_PathStatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ToTheMoonQueryPathRsp_PathStatusType_IsValid(int value);
const ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp_PathStatusType_PathStatusType_MIN = ToTheMoonQueryPathRsp_PathStatusType_STATUS_FAIL;
const ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp_PathStatusType_PathStatusType_MAX = ToTheMoonQueryPathRsp_PathStatusType_STATUS_PARTIAL;
const int ToTheMoonQueryPathRsp_PathStatusType_PathStatusType_ARRAYSIZE = ToTheMoonQueryPathRsp_PathStatusType_PathStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathRsp_PathStatusType_descriptor();
inline const ::std::string& ToTheMoonQueryPathRsp_PathStatusType_Name(ToTheMoonQueryPathRsp_PathStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ToTheMoonQueryPathRsp_PathStatusType_descriptor(), value);
}
inline bool ToTheMoonQueryPathRsp_PathStatusType_Parse(
    const ::std::string& name, ToTheMoonQueryPathRsp_PathStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ToTheMoonQueryPathRsp_PathStatusType>(
    ToTheMoonQueryPathRsp_PathStatusType_descriptor(), name, value);
}
enum ToTheMoonObstacleInfo_ShapeType {
  ToTheMoonObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE = 0,
  ToTheMoonObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX = 1,
  ToTheMoonObstacleInfo_ShapeType_ToTheMoonObstacleInfo_ShapeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ToTheMoonObstacleInfo_ShapeType_ToTheMoonObstacleInfo_ShapeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ToTheMoonObstacleInfo_ShapeType_IsValid(int value);
const ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo_ShapeType_ShapeType_MIN = ToTheMoonObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE;
const ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo_ShapeType_ShapeType_MAX = ToTheMoonObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX;
const int ToTheMoonObstacleInfo_ShapeType_ShapeType_ARRAYSIZE = ToTheMoonObstacleInfo_ShapeType_ShapeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ToTheMoonObstacleInfo_ShapeType_descriptor();
inline const ::std::string& ToTheMoonObstacleInfo_ShapeType_Name(ToTheMoonObstacleInfo_ShapeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ToTheMoonObstacleInfo_ShapeType_descriptor(), value);
}
inline bool ToTheMoonObstacleInfo_ShapeType_Parse(
    const ::std::string& name, ToTheMoonObstacleInfo_ShapeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ToTheMoonObstacleInfo_ShapeType>(
    ToTheMoonObstacleInfo_ShapeType_descriptor(), name, value);
}
enum ToTheMoonRemoveObstacleReq_ObstacleType {
  ToTheMoonRemoveObstacleReq_ObstacleType_Box = 0,
  ToTheMoonRemoveObstacleReq_ObstacleType_Capsule = 1,
  ToTheMoonRemoveObstacleReq_ObstacleType_ToTheMoonRemoveObstacleReq_ObstacleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ToTheMoonRemoveObstacleReq_ObstacleType_ToTheMoonRemoveObstacleReq_ObstacleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ToTheMoonRemoveObstacleReq_ObstacleType_IsValid(int value);
const ToTheMoonRemoveObstacleReq_ObstacleType ToTheMoonRemoveObstacleReq_ObstacleType_ObstacleType_MIN = ToTheMoonRemoveObstacleReq_ObstacleType_Box;
const ToTheMoonRemoveObstacleReq_ObstacleType ToTheMoonRemoveObstacleReq_ObstacleType_ObstacleType_MAX = ToTheMoonRemoveObstacleReq_ObstacleType_Capsule;
const int ToTheMoonRemoveObstacleReq_ObstacleType_ObstacleType_ARRAYSIZE = ToTheMoonRemoveObstacleReq_ObstacleType_ObstacleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ToTheMoonRemoveObstacleReq_ObstacleType_descriptor();
inline const ::std::string& ToTheMoonRemoveObstacleReq_ObstacleType_Name(ToTheMoonRemoveObstacleReq_ObstacleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ToTheMoonRemoveObstacleReq_ObstacleType_descriptor(), value);
}
inline bool ToTheMoonRemoveObstacleReq_ObstacleType_Parse(
    const ::std::string& name, ToTheMoonRemoveObstacleReq_ObstacleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ToTheMoonRemoveObstacleReq_ObstacleType>(
    ToTheMoonRemoveObstacleReq_ObstacleType_descriptor(), name, value);
}
// ===================================================================

class ToTheMoonQueryPathReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonQueryPathReq) */ {
 public:
  ToTheMoonQueryPathReq();
  virtual ~ToTheMoonQueryPathReq();

  ToTheMoonQueryPathReq(const ToTheMoonQueryPathReq& from);

  inline ToTheMoonQueryPathReq& operator=(const ToTheMoonQueryPathReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonQueryPathReq(ToTheMoonQueryPathReq&& from) noexcept
    : ToTheMoonQueryPathReq() {
    *this = ::std::move(from);
  }

  inline ToTheMoonQueryPathReq& operator=(ToTheMoonQueryPathReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonQueryPathReq& default_instance();

  static inline const ToTheMoonQueryPathReq* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonQueryPathReq*>(
               &_ToTheMoonQueryPathReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ToTheMoonQueryPathReq* other);
  friend void swap(ToTheMoonQueryPathReq& a, ToTheMoonQueryPathReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonQueryPathReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonQueryPathReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonQueryPathReq& from);
  void MergeFrom(const ToTheMoonQueryPathReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonQueryPathReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ToTheMoonQueryPathReq_OptionType OptionType;
  static const OptionType OPTION_NONE =
    ToTheMoonQueryPathReq_OptionType_OPTION_NONE;
  static const OptionType OPTION_NORMAL =
    ToTheMoonQueryPathReq_OptionType_OPTION_NORMAL;
  static inline bool OptionType_IsValid(int value) {
    return ToTheMoonQueryPathReq_OptionType_IsValid(value);
  }
  static const OptionType OptionType_MIN =
    ToTheMoonQueryPathReq_OptionType_OptionType_MIN;
  static const OptionType OptionType_MAX =
    ToTheMoonQueryPathReq_OptionType_OptionType_MAX;
  static const int OptionType_ARRAYSIZE =
    ToTheMoonQueryPathReq_OptionType_OptionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OptionType_descriptor() {
    return ToTheMoonQueryPathReq_OptionType_descriptor();
  }
  static inline const ::std::string& OptionType_Name(OptionType value) {
    return ToTheMoonQueryPathReq_OptionType_Name(value);
  }
  static inline bool OptionType_Parse(const ::std::string& name,
      OptionType* value) {
    return ToTheMoonQueryPathReq_OptionType_Parse(name, value);
  }

  typedef ToTheMoonQueryPathReq_AStarMethod AStarMethod;
  static const AStarMethod Classic =
    ToTheMoonQueryPathReq_AStarMethod_Classic;
  static const AStarMethod Tendency =
    ToTheMoonQueryPathReq_AStarMethod_Tendency;
  static const AStarMethod Adaptive =
    ToTheMoonQueryPathReq_AStarMethod_Adaptive;
  static const AStarMethod Inflection =
    ToTheMoonQueryPathReq_AStarMethod_Inflection;
  static inline bool AStarMethod_IsValid(int value) {
    return ToTheMoonQueryPathReq_AStarMethod_IsValid(value);
  }
  static const AStarMethod AStarMethod_MIN =
    ToTheMoonQueryPathReq_AStarMethod_AStarMethod_MIN;
  static const AStarMethod AStarMethod_MAX =
    ToTheMoonQueryPathReq_AStarMethod_AStarMethod_MAX;
  static const int AStarMethod_ARRAYSIZE =
    ToTheMoonQueryPathReq_AStarMethod_AStarMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AStarMethod_descriptor() {
    return ToTheMoonQueryPathReq_AStarMethod_descriptor();
  }
  static inline const ::std::string& AStarMethod_Name(AStarMethod value) {
    return ToTheMoonQueryPathReq_AStarMethod_Name(value);
  }
  static inline bool AStarMethod_Parse(const ::std::string& name,
      AStarMethod* value) {
    return ToTheMoonQueryPathReq_AStarMethod_Parse(name, value);
  }

  typedef ToTheMoonQueryPathReq_FilterType FilterType;
  static const FilterType All =
    ToTheMoonQueryPathReq_FilterType_All;
  static const FilterType Air =
    ToTheMoonQueryPathReq_FilterType_Air;
  static const FilterType Water =
    ToTheMoonQueryPathReq_FilterType_Water;
  static inline bool FilterType_IsValid(int value) {
    return ToTheMoonQueryPathReq_FilterType_IsValid(value);
  }
  static const FilterType FilterType_MIN =
    ToTheMoonQueryPathReq_FilterType_FilterType_MIN;
  static const FilterType FilterType_MAX =
    ToTheMoonQueryPathReq_FilterType_FilterType_MAX;
  static const int FilterType_ARRAYSIZE =
    ToTheMoonQueryPathReq_FilterType_FilterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FilterType_descriptor() {
    return ToTheMoonQueryPathReq_FilterType_descriptor();
  }
  static inline const ::std::string& FilterType_Name(FilterType value) {
    return ToTheMoonQueryPathReq_FilterType_Name(value);
  }
  static inline bool FilterType_Parse(const ::std::string& name,
      FilterType* value) {
    return ToTheMoonQueryPathReq_FilterType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector destination_pos = 9;
  bool has_destination_pos() const;
  void clear_destination_pos();
  static const int kDestinationPosFieldNumber = 9;
  const ::proto::Vector& destination_pos() const;
  ::proto::Vector* mutable_destination_pos();
  ::proto::Vector* release_destination_pos();
  void set_allocated_destination_pos(::proto::Vector* destination_pos);

  // .proto.Vector source_pos = 10;
  bool has_source_pos() const;
  void clear_source_pos();
  static const int kSourcePosFieldNumber = 10;
  const ::proto::Vector& source_pos() const;
  ::proto::Vector* mutable_source_pos();
  ::proto::Vector* release_source_pos();
  void set_allocated_source_pos(::proto::Vector* source_pos);

  // .proto.ToTheMoonQueryPathReq.AStarMethod astar_method = 1;
  void clear_astar_method();
  static const int kAstarMethodFieldNumber = 1;
  ::proto::ToTheMoonQueryPathReq_AStarMethod astar_method() const;
  void set_astar_method(::proto::ToTheMoonQueryPathReq_AStarMethod value);

  // .proto.ToTheMoonQueryPathReq.FilterType filter_type = 3;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 3;
  ::proto::ToTheMoonQueryPathReq_FilterType filter_type() const;
  void set_filter_type(::proto::ToTheMoonQueryPathReq_FilterType value);

  // uint32 scene_id = 6;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 6;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // .proto.ToTheMoonQueryPathReq.OptionType query_type = 8;
  void clear_query_type();
  static const int kQueryTypeFieldNumber = 8;
  ::proto::ToTheMoonQueryPathReq_OptionType query_type() const;
  void set_query_type(::proto::ToTheMoonQueryPathReq_OptionType value);

  // bool refined = 13;
  void clear_refined();
  static const int kRefinedFieldNumber = 13;
  bool refined() const;
  void set_refined(bool value);

  // bool use_full_neighbor = 5;
  void clear_use_full_neighbor();
  static const int kUseFullNeighborFieldNumber = 5;
  bool use_full_neighbor() const;
  void set_use_full_neighbor(bool value);

  // int32 query_id = 11;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 11;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // int32 fuzzy_range = 15;
  void clear_fuzzy_range();
  static const int kFuzzyRangeFieldNumber = 15;
  ::google::protobuf::int32 fuzzy_range() const;
  void set_fuzzy_range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonQueryPathReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* destination_pos_;
  ::proto::Vector* source_pos_;
  int astar_method_;
  int filter_type_;
  ::google::protobuf::uint32 scene_id_;
  int query_type_;
  bool refined_;
  bool use_full_neighbor_;
  ::google::protobuf::int32 query_id_;
  ::google::protobuf::int32 fuzzy_range_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonQueryPathRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonQueryPathRsp) */ {
 public:
  ToTheMoonQueryPathRsp();
  virtual ~ToTheMoonQueryPathRsp();

  ToTheMoonQueryPathRsp(const ToTheMoonQueryPathRsp& from);

  inline ToTheMoonQueryPathRsp& operator=(const ToTheMoonQueryPathRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonQueryPathRsp(ToTheMoonQueryPathRsp&& from) noexcept
    : ToTheMoonQueryPathRsp() {
    *this = ::std::move(from);
  }

  inline ToTheMoonQueryPathRsp& operator=(ToTheMoonQueryPathRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonQueryPathRsp& default_instance();

  static inline const ToTheMoonQueryPathRsp* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonQueryPathRsp*>(
               &_ToTheMoonQueryPathRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ToTheMoonQueryPathRsp* other);
  friend void swap(ToTheMoonQueryPathRsp& a, ToTheMoonQueryPathRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonQueryPathRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonQueryPathRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonQueryPathRsp& from);
  void MergeFrom(const ToTheMoonQueryPathRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonQueryPathRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ToTheMoonQueryPathRsp_PathStatusType PathStatusType;
  static const PathStatusType STATUS_FAIL =
    ToTheMoonQueryPathRsp_PathStatusType_STATUS_FAIL;
  static const PathStatusType STATUS_SUCC =
    ToTheMoonQueryPathRsp_PathStatusType_STATUS_SUCC;
  static const PathStatusType STATUS_PARTIAL =
    ToTheMoonQueryPathRsp_PathStatusType_STATUS_PARTIAL;
  static inline bool PathStatusType_IsValid(int value) {
    return ToTheMoonQueryPathRsp_PathStatusType_IsValid(value);
  }
  static const PathStatusType PathStatusType_MIN =
    ToTheMoonQueryPathRsp_PathStatusType_PathStatusType_MIN;
  static const PathStatusType PathStatusType_MAX =
    ToTheMoonQueryPathRsp_PathStatusType_PathStatusType_MAX;
  static const int PathStatusType_ARRAYSIZE =
    ToTheMoonQueryPathRsp_PathStatusType_PathStatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PathStatusType_descriptor() {
    return ToTheMoonQueryPathRsp_PathStatusType_descriptor();
  }
  static inline const ::std::string& PathStatusType_Name(PathStatusType value) {
    return ToTheMoonQueryPathRsp_PathStatusType_Name(value);
  }
  static inline bool PathStatusType_Parse(const ::std::string& name,
      PathStatusType* value) {
    return ToTheMoonQueryPathRsp_PathStatusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 level = 1;
  int level_size() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level(int index) const;
  void set_level(int index, ::google::protobuf::int32 value);
  void add_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_level();

  // repeated int64 index = 3;
  int index_size() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int64 index(int index) const;
  void set_index(int index, ::google::protobuf::int64 value);
  void add_index(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_index();

  // repeated .proto.Vector corners = 14;
  int corners_size() const;
  void clear_corners();
  static const int kCornersFieldNumber = 14;
  const ::proto::Vector& corners(int index) const;
  ::proto::Vector* mutable_corners(int index);
  ::proto::Vector* add_corners();
  ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
      mutable_corners();
  const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
      corners() const;

  // int32 query_id = 9;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 9;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // .proto.ToTheMoonQueryPathRsp.PathStatusType query_status = 7;
  void clear_query_status();
  static const int kQueryStatusFieldNumber = 7;
  ::proto::ToTheMoonQueryPathRsp_PathStatusType query_status() const;
  void set_query_status(::proto::ToTheMoonQueryPathRsp_PathStatusType value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonQueryPathRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > level_;
  mutable int _level_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > index_;
  mutable int _index_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::Vector > corners_;
  ::google::protobuf::int32 query_id_;
  int query_status_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonPingNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonPingNotify) */ {
 public:
  ToTheMoonPingNotify();
  virtual ~ToTheMoonPingNotify();

  ToTheMoonPingNotify(const ToTheMoonPingNotify& from);

  inline ToTheMoonPingNotify& operator=(const ToTheMoonPingNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonPingNotify(ToTheMoonPingNotify&& from) noexcept
    : ToTheMoonPingNotify() {
    *this = ::std::move(from);
  }

  inline ToTheMoonPingNotify& operator=(ToTheMoonPingNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonPingNotify& default_instance();

  static inline const ToTheMoonPingNotify* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonPingNotify*>(
               &_ToTheMoonPingNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ToTheMoonPingNotify* other);
  friend void swap(ToTheMoonPingNotify& a, ToTheMoonPingNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonPingNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonPingNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonPingNotify& from);
  void MergeFrom(const ToTheMoonPingNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonPingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonPingNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonEnterSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonEnterSceneReq) */ {
 public:
  ToTheMoonEnterSceneReq();
  virtual ~ToTheMoonEnterSceneReq();

  ToTheMoonEnterSceneReq(const ToTheMoonEnterSceneReq& from);

  inline ToTheMoonEnterSceneReq& operator=(const ToTheMoonEnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonEnterSceneReq(ToTheMoonEnterSceneReq&& from) noexcept
    : ToTheMoonEnterSceneReq() {
    *this = ::std::move(from);
  }

  inline ToTheMoonEnterSceneReq& operator=(ToTheMoonEnterSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonEnterSceneReq& default_instance();

  static inline const ToTheMoonEnterSceneReq* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonEnterSceneReq*>(
               &_ToTheMoonEnterSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ToTheMoonEnterSceneReq* other);
  friend void swap(ToTheMoonEnterSceneReq& a, ToTheMoonEnterSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonEnterSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonEnterSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonEnterSceneReq& from);
  void MergeFrom(const ToTheMoonEnterSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonEnterSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 version = 14;
  void clear_version();
  static const int kVersionFieldNumber = 14;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 scene_id = 15;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 15;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonEnterSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonEnterSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonEnterSceneRsp) */ {
 public:
  ToTheMoonEnterSceneRsp();
  virtual ~ToTheMoonEnterSceneRsp();

  ToTheMoonEnterSceneRsp(const ToTheMoonEnterSceneRsp& from);

  inline ToTheMoonEnterSceneRsp& operator=(const ToTheMoonEnterSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonEnterSceneRsp(ToTheMoonEnterSceneRsp&& from) noexcept
    : ToTheMoonEnterSceneRsp() {
    *this = ::std::move(from);
  }

  inline ToTheMoonEnterSceneRsp& operator=(ToTheMoonEnterSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonEnterSceneRsp& default_instance();

  static inline const ToTheMoonEnterSceneRsp* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonEnterSceneRsp*>(
               &_ToTheMoonEnterSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ToTheMoonEnterSceneRsp* other);
  friend void swap(ToTheMoonEnterSceneRsp& a, ToTheMoonEnterSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonEnterSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonEnterSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonEnterSceneRsp& from);
  void MergeFrom(const ToTheMoonEnterSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonEnterSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonEnterSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonObstacleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonObstacleInfo) */ {
 public:
  ToTheMoonObstacleInfo();
  virtual ~ToTheMoonObstacleInfo();

  ToTheMoonObstacleInfo(const ToTheMoonObstacleInfo& from);

  inline ToTheMoonObstacleInfo& operator=(const ToTheMoonObstacleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonObstacleInfo(ToTheMoonObstacleInfo&& from) noexcept
    : ToTheMoonObstacleInfo() {
    *this = ::std::move(from);
  }

  inline ToTheMoonObstacleInfo& operator=(ToTheMoonObstacleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonObstacleInfo& default_instance();

  static inline const ToTheMoonObstacleInfo* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonObstacleInfo*>(
               &_ToTheMoonObstacleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ToTheMoonObstacleInfo* other);
  friend void swap(ToTheMoonObstacleInfo& a, ToTheMoonObstacleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonObstacleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonObstacleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonObstacleInfo& from);
  void MergeFrom(const ToTheMoonObstacleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonObstacleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ToTheMoonObstacleInfo_ShapeType ShapeType;
  static const ShapeType OBSTACLE_SHAPE_CAPSULE =
    ToTheMoonObstacleInfo_ShapeType_OBSTACLE_SHAPE_CAPSULE;
  static const ShapeType OBSTACLE_SHAPE_BOX =
    ToTheMoonObstacleInfo_ShapeType_OBSTACLE_SHAPE_BOX;
  static inline bool ShapeType_IsValid(int value) {
    return ToTheMoonObstacleInfo_ShapeType_IsValid(value);
  }
  static const ShapeType ShapeType_MIN =
    ToTheMoonObstacleInfo_ShapeType_ShapeType_MIN;
  static const ShapeType ShapeType_MAX =
    ToTheMoonObstacleInfo_ShapeType_ShapeType_MAX;
  static const int ShapeType_ARRAYSIZE =
    ToTheMoonObstacleInfo_ShapeType_ShapeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ShapeType_descriptor() {
    return ToTheMoonObstacleInfo_ShapeType_descriptor();
  }
  static inline const ::std::string& ShapeType_Name(ShapeType value) {
    return ToTheMoonObstacleInfo_ShapeType_Name(value);
  }
  static inline bool ShapeType_Parse(const ::std::string& name,
      ShapeType* value) {
    return ToTheMoonObstacleInfo_ShapeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MathQuaternion rotation = 7;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 7;
  const ::proto::MathQuaternion& rotation() const;
  ::proto::MathQuaternion* mutable_rotation();
  ::proto::MathQuaternion* release_rotation();
  void set_allocated_rotation(::proto::MathQuaternion* rotation);

  // .proto.Vector center = 13;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 13;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector half_extents = 14;
  bool has_half_extents() const;
  void clear_half_extents();
  static const int kHalfExtentsFieldNumber = 14;
  const ::proto::Vector& half_extents() const;
  ::proto::Vector* mutable_half_extents();
  ::proto::Vector* release_half_extents();
  void set_allocated_half_extents(::proto::Vector* half_extents);

  // .proto.ToTheMoonObstacleInfo.ShapeType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::proto::ToTheMoonObstacleInfo_ShapeType type() const;
  void set_type(::proto::ToTheMoonObstacleInfo_ShapeType value);

  // int32 handle_id = 11;
  void clear_handle_id();
  static const int kHandleIdFieldNumber = 11;
  ::google::protobuf::int32 handle_id() const;
  void set_handle_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonObstacleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MathQuaternion* rotation_;
  ::proto::Vector* center_;
  ::proto::Vector* half_extents_;
  int type_;
  ::google::protobuf::int32 handle_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonAddObstacleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonAddObstacleReq) */ {
 public:
  ToTheMoonAddObstacleReq();
  virtual ~ToTheMoonAddObstacleReq();

  ToTheMoonAddObstacleReq(const ToTheMoonAddObstacleReq& from);

  inline ToTheMoonAddObstacleReq& operator=(const ToTheMoonAddObstacleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonAddObstacleReq(ToTheMoonAddObstacleReq&& from) noexcept
    : ToTheMoonAddObstacleReq() {
    *this = ::std::move(from);
  }

  inline ToTheMoonAddObstacleReq& operator=(ToTheMoonAddObstacleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonAddObstacleReq& default_instance();

  static inline const ToTheMoonAddObstacleReq* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonAddObstacleReq*>(
               &_ToTheMoonAddObstacleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ToTheMoonAddObstacleReq* other);
  friend void swap(ToTheMoonAddObstacleReq& a, ToTheMoonAddObstacleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonAddObstacleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonAddObstacleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonAddObstacleReq& from);
  void MergeFrom(const ToTheMoonAddObstacleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonAddObstacleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ToTheMoonObstacleInfo obstacle = 13;
  bool has_obstacle() const;
  void clear_obstacle();
  static const int kObstacleFieldNumber = 13;
  const ::proto::ToTheMoonObstacleInfo& obstacle() const;
  ::proto::ToTheMoonObstacleInfo* mutable_obstacle();
  ::proto::ToTheMoonObstacleInfo* release_obstacle();
  void set_allocated_obstacle(::proto::ToTheMoonObstacleInfo* obstacle);

  // bool use_edge = 12;
  void clear_use_edge();
  static const int kUseEdgeFieldNumber = 12;
  bool use_edge() const;
  void set_use_edge(bool value);

  // uint32 scene_id = 3;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // int32 query_id = 9;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 9;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonAddObstacleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ToTheMoonObstacleInfo* obstacle_;
  bool use_edge_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::int32 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DynamicSVONode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DynamicSVONode) */ {
 public:
  DynamicSVONode();
  virtual ~DynamicSVONode();

  DynamicSVONode(const DynamicSVONode& from);

  inline DynamicSVONode& operator=(const DynamicSVONode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DynamicSVONode(DynamicSVONode&& from) noexcept
    : DynamicSVONode() {
    *this = ::std::move(from);
  }

  inline DynamicSVONode& operator=(DynamicSVONode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicSVONode& default_instance();

  static inline const DynamicSVONode* internal_default_instance() {
    return reinterpret_cast<const DynamicSVONode*>(
               &_DynamicSVONode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DynamicSVONode* other);
  friend void swap(DynamicSVONode& a, DynamicSVONode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DynamicSVONode* New() const PROTOBUF_FINAL { return New(NULL); }

  DynamicSVONode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DynamicSVONode& from);
  void MergeFrom(const DynamicSVONode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DynamicSVONode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector refer_pos = 1;
  bool has_refer_pos() const;
  void clear_refer_pos();
  static const int kReferPosFieldNumber = 1;
  const ::proto::Vector& refer_pos() const;
  ::proto::Vector* mutable_refer_pos();
  ::proto::Vector* release_refer_pos();
  void set_allocated_refer_pos(::proto::Vector* refer_pos);

  // int32 area = 5;
  void clear_area();
  static const int kAreaFieldNumber = 5;
  ::google::protobuf::int32 area() const;
  void set_area(::google::protobuf::int32 value);

  // int64 index = 8;
  void clear_index();
  static const int kIndexFieldNumber = 8;
  ::google::protobuf::int64 index() const;
  void set_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.DynamicSVONode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* refer_pos_;
  ::google::protobuf::int32 area_;
  ::google::protobuf::int64 index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DynamicLayerNodes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DynamicLayerNodes) */ {
 public:
  DynamicLayerNodes();
  virtual ~DynamicLayerNodes();

  DynamicLayerNodes(const DynamicLayerNodes& from);

  inline DynamicLayerNodes& operator=(const DynamicLayerNodes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DynamicLayerNodes(DynamicLayerNodes&& from) noexcept
    : DynamicLayerNodes() {
    *this = ::std::move(from);
  }

  inline DynamicLayerNodes& operator=(DynamicLayerNodes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicLayerNodes& default_instance();

  static inline const DynamicLayerNodes* internal_default_instance() {
    return reinterpret_cast<const DynamicLayerNodes*>(
               &_DynamicLayerNodes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(DynamicLayerNodes* other);
  friend void swap(DynamicLayerNodes& a, DynamicLayerNodes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DynamicLayerNodes* New() const PROTOBUF_FINAL { return New(NULL); }

  DynamicLayerNodes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DynamicLayerNodes& from);
  void MergeFrom(const DynamicLayerNodes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DynamicLayerNodes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.DynamicSVONode nodes = 6;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 6;
  const ::proto::DynamicSVONode& nodes(int index) const;
  ::proto::DynamicSVONode* mutable_nodes(int index);
  ::proto::DynamicSVONode* add_nodes();
  ::google::protobuf::RepeatedPtrField< ::proto::DynamicSVONode >*
      mutable_nodes();
  const ::google::protobuf::RepeatedPtrField< ::proto::DynamicSVONode >&
      nodes() const;

  // int32 level = 10;
  void clear_level();
  static const int kLevelFieldNumber = 10;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.DynamicLayerNodes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DynamicSVONode > nodes_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DynamicNodes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DynamicNodes) */ {
 public:
  DynamicNodes();
  virtual ~DynamicNodes();

  DynamicNodes(const DynamicNodes& from);

  inline DynamicNodes& operator=(const DynamicNodes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DynamicNodes(DynamicNodes&& from) noexcept
    : DynamicNodes() {
    *this = ::std::move(from);
  }

  inline DynamicNodes& operator=(DynamicNodes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicNodes& default_instance();

  static inline const DynamicNodes* internal_default_instance() {
    return reinterpret_cast<const DynamicNodes*>(
               &_DynamicNodes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(DynamicNodes* other);
  friend void swap(DynamicNodes& a, DynamicNodes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DynamicNodes* New() const PROTOBUF_FINAL { return New(NULL); }

  DynamicNodes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DynamicNodes& from);
  void MergeFrom(const DynamicNodes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DynamicNodes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.DynamicLayerNodes nodes = 3;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 3;
  const ::proto::DynamicLayerNodes& nodes(int index) const;
  ::proto::DynamicLayerNodes* mutable_nodes(int index);
  ::proto::DynamicLayerNodes* add_nodes();
  ::google::protobuf::RepeatedPtrField< ::proto::DynamicLayerNodes >*
      mutable_nodes();
  const ::google::protobuf::RepeatedPtrField< ::proto::DynamicLayerNodes >&
      nodes() const;

  // @@protoc_insertion_point(class_scope:proto.DynamicNodes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DynamicLayerNodes > nodes_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonAddObstacleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonAddObstacleRsp) */ {
 public:
  ToTheMoonAddObstacleRsp();
  virtual ~ToTheMoonAddObstacleRsp();

  ToTheMoonAddObstacleRsp(const ToTheMoonAddObstacleRsp& from);

  inline ToTheMoonAddObstacleRsp& operator=(const ToTheMoonAddObstacleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonAddObstacleRsp(ToTheMoonAddObstacleRsp&& from) noexcept
    : ToTheMoonAddObstacleRsp() {
    *this = ::std::move(from);
  }

  inline ToTheMoonAddObstacleRsp& operator=(ToTheMoonAddObstacleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonAddObstacleRsp& default_instance();

  static inline const ToTheMoonAddObstacleRsp* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonAddObstacleRsp*>(
               &_ToTheMoonAddObstacleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ToTheMoonAddObstacleRsp* other);
  friend void swap(ToTheMoonAddObstacleRsp& a, ToTheMoonAddObstacleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonAddObstacleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonAddObstacleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonAddObstacleRsp& from);
  void MergeFrom(const ToTheMoonAddObstacleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonAddObstacleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DynamicNodes dynamic_nodes = 2;
  bool has_dynamic_nodes() const;
  void clear_dynamic_nodes();
  static const int kDynamicNodesFieldNumber = 2;
  const ::proto::DynamicNodes& dynamic_nodes() const;
  ::proto::DynamicNodes* mutable_dynamic_nodes();
  ::proto::DynamicNodes* release_dynamic_nodes();
  void set_allocated_dynamic_nodes(::proto::DynamicNodes* dynamic_nodes);

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // int32 query_id = 13;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 13;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonAddObstacleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::DynamicNodes* dynamic_nodes_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonRemoveObstacleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonRemoveObstacleReq) */ {
 public:
  ToTheMoonRemoveObstacleReq();
  virtual ~ToTheMoonRemoveObstacleReq();

  ToTheMoonRemoveObstacleReq(const ToTheMoonRemoveObstacleReq& from);

  inline ToTheMoonRemoveObstacleReq& operator=(const ToTheMoonRemoveObstacleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonRemoveObstacleReq(ToTheMoonRemoveObstacleReq&& from) noexcept
    : ToTheMoonRemoveObstacleReq() {
    *this = ::std::move(from);
  }

  inline ToTheMoonRemoveObstacleReq& operator=(ToTheMoonRemoveObstacleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonRemoveObstacleReq& default_instance();

  static inline const ToTheMoonRemoveObstacleReq* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonRemoveObstacleReq*>(
               &_ToTheMoonRemoveObstacleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ToTheMoonRemoveObstacleReq* other);
  friend void swap(ToTheMoonRemoveObstacleReq& a, ToTheMoonRemoveObstacleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonRemoveObstacleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonRemoveObstacleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonRemoveObstacleReq& from);
  void MergeFrom(const ToTheMoonRemoveObstacleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonRemoveObstacleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ToTheMoonRemoveObstacleReq_ObstacleType ObstacleType;
  static const ObstacleType Box =
    ToTheMoonRemoveObstacleReq_ObstacleType_Box;
  static const ObstacleType Capsule =
    ToTheMoonRemoveObstacleReq_ObstacleType_Capsule;
  static inline bool ObstacleType_IsValid(int value) {
    return ToTheMoonRemoveObstacleReq_ObstacleType_IsValid(value);
  }
  static const ObstacleType ObstacleType_MIN =
    ToTheMoonRemoveObstacleReq_ObstacleType_ObstacleType_MIN;
  static const ObstacleType ObstacleType_MAX =
    ToTheMoonRemoveObstacleReq_ObstacleType_ObstacleType_MAX;
  static const int ObstacleType_ARRAYSIZE =
    ToTheMoonRemoveObstacleReq_ObstacleType_ObstacleType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ObstacleType_descriptor() {
    return ToTheMoonRemoveObstacleReq_ObstacleType_descriptor();
  }
  static inline const ::std::string& ObstacleType_Name(ObstacleType value) {
    return ToTheMoonRemoveObstacleReq_ObstacleType_Name(value);
  }
  static inline bool ObstacleType_Parse(const ::std::string& name,
      ObstacleType* value) {
    return ToTheMoonRemoveObstacleReq_ObstacleType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 handle = 12;
  void clear_handle();
  static const int kHandleFieldNumber = 12;
  ::google::protobuf::int32 handle() const;
  void set_handle(::google::protobuf::int32 value);

  // uint32 scene_id = 10;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 10;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // int32 query_id = 11;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 11;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonRemoveObstacleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 handle_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::int32 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonRemoveObstacleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonRemoveObstacleRsp) */ {
 public:
  ToTheMoonRemoveObstacleRsp();
  virtual ~ToTheMoonRemoveObstacleRsp();

  ToTheMoonRemoveObstacleRsp(const ToTheMoonRemoveObstacleRsp& from);

  inline ToTheMoonRemoveObstacleRsp& operator=(const ToTheMoonRemoveObstacleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonRemoveObstacleRsp(ToTheMoonRemoveObstacleRsp&& from) noexcept
    : ToTheMoonRemoveObstacleRsp() {
    *this = ::std::move(from);
  }

  inline ToTheMoonRemoveObstacleRsp& operator=(ToTheMoonRemoveObstacleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonRemoveObstacleRsp& default_instance();

  static inline const ToTheMoonRemoveObstacleRsp* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonRemoveObstacleRsp*>(
               &_ToTheMoonRemoveObstacleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ToTheMoonRemoveObstacleRsp* other);
  friend void swap(ToTheMoonRemoveObstacleRsp& a, ToTheMoonRemoveObstacleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonRemoveObstacleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonRemoveObstacleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonRemoveObstacleRsp& from);
  void MergeFrom(const ToTheMoonRemoveObstacleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonRemoveObstacleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DynamicNodes dynamic_nodes = 8;
  bool has_dynamic_nodes() const;
  void clear_dynamic_nodes();
  static const int kDynamicNodesFieldNumber = 8;
  const ::proto::DynamicNodes& dynamic_nodes() const;
  ::proto::DynamicNodes* mutable_dynamic_nodes();
  ::proto::DynamicNodes* release_dynamic_nodes();
  void set_allocated_dynamic_nodes(::proto::DynamicNodes* dynamic_nodes);

  // int32 query_id = 3;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 3;
  ::google::protobuf::int32 query_id() const;
  void set_query_id(::google::protobuf::int32 value);

  // int32 retcode = 14;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 14;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonRemoveObstacleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::DynamicNodes* dynamic_nodes_;
  ::google::protobuf::int32 query_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTheMoonObstaclesModifyNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ToTheMoonObstaclesModifyNotify) */ {
 public:
  ToTheMoonObstaclesModifyNotify();
  virtual ~ToTheMoonObstaclesModifyNotify();

  ToTheMoonObstaclesModifyNotify(const ToTheMoonObstaclesModifyNotify& from);

  inline ToTheMoonObstaclesModifyNotify& operator=(const ToTheMoonObstaclesModifyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTheMoonObstaclesModifyNotify(ToTheMoonObstaclesModifyNotify&& from) noexcept
    : ToTheMoonObstaclesModifyNotify() {
    *this = ::std::move(from);
  }

  inline ToTheMoonObstaclesModifyNotify& operator=(ToTheMoonObstaclesModifyNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTheMoonObstaclesModifyNotify& default_instance();

  static inline const ToTheMoonObstaclesModifyNotify* internal_default_instance() {
    return reinterpret_cast<const ToTheMoonObstaclesModifyNotify*>(
               &_ToTheMoonObstaclesModifyNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ToTheMoonObstaclesModifyNotify* other);
  friend void swap(ToTheMoonObstaclesModifyNotify& a, ToTheMoonObstaclesModifyNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTheMoonObstaclesModifyNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ToTheMoonObstaclesModifyNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToTheMoonObstaclesModifyNotify& from);
  void MergeFrom(const ToTheMoonObstaclesModifyNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToTheMoonObstaclesModifyNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ToTheMoonObstacleInfo add_obstacles = 4;
  int add_obstacles_size() const;
  void clear_add_obstacles();
  static const int kAddObstaclesFieldNumber = 4;
  const ::proto::ToTheMoonObstacleInfo& add_obstacles(int index) const;
  ::proto::ToTheMoonObstacleInfo* mutable_add_obstacles(int index);
  ::proto::ToTheMoonObstacleInfo* add_add_obstacles();
  ::google::protobuf::RepeatedPtrField< ::proto::ToTheMoonObstacleInfo >*
      mutable_add_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::proto::ToTheMoonObstacleInfo >&
      add_obstacles() const;

  // repeated int32 remove_obstacle_ids = 13;
  int remove_obstacle_ids_size() const;
  void clear_remove_obstacle_ids();
  static const int kRemoveObstacleIdsFieldNumber = 13;
  ::google::protobuf::int32 remove_obstacle_ids(int index) const;
  void set_remove_obstacle_ids(int index, ::google::protobuf::int32 value);
  void add_remove_obstacle_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remove_obstacle_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remove_obstacle_ids();

  // bool use_edge = 1;
  void clear_use_edge();
  static const int kUseEdgeFieldNumber = 1;
  bool use_edge() const;
  void set_use_edge(bool value);

  // uint32 scene_id = 15;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 15;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ToTheMoonObstaclesModifyNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ToTheMoonObstacleInfo > add_obstacles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remove_obstacle_ids_;
  mutable int _remove_obstacle_ids_cached_byte_size_;
  bool use_edge_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftothemoon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ToTheMoonQueryPathReq

// .proto.Vector destination_pos = 9;
inline bool ToTheMoonQueryPathReq::has_destination_pos() const {
  return this != internal_default_instance() && destination_pos_ != NULL;
}
inline void ToTheMoonQueryPathReq::clear_destination_pos() {
  if (GetArenaNoVirtual() == NULL && destination_pos_ != NULL) delete destination_pos_;
  destination_pos_ = NULL;
}
inline const ::proto::Vector& ToTheMoonQueryPathReq::destination_pos() const {
  const ::proto::Vector* p = destination_pos_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.destination_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ToTheMoonQueryPathReq::mutable_destination_pos() {
  
  if (destination_pos_ == NULL) {
    destination_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonQueryPathReq.destination_pos)
  return destination_pos_;
}
inline ::proto::Vector* ToTheMoonQueryPathReq::release_destination_pos() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonQueryPathReq.destination_pos)
  
  ::proto::Vector* temp = destination_pos_;
  destination_pos_ = NULL;
  return temp;
}
inline void ToTheMoonQueryPathReq::set_allocated_destination_pos(::proto::Vector* destination_pos) {
  delete destination_pos_;
  destination_pos_ = destination_pos;
  if (destination_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonQueryPathReq.destination_pos)
}

// int32 fuzzy_range = 15;
inline void ToTheMoonQueryPathReq::clear_fuzzy_range() {
  fuzzy_range_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonQueryPathReq::fuzzy_range() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.fuzzy_range)
  return fuzzy_range_;
}
inline void ToTheMoonQueryPathReq::set_fuzzy_range(::google::protobuf::int32 value) {
  
  fuzzy_range_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.fuzzy_range)
}

// .proto.ToTheMoonQueryPathReq.OptionType query_type = 8;
inline void ToTheMoonQueryPathReq::clear_query_type() {
  query_type_ = 0;
}
inline ::proto::ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq::query_type() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.query_type)
  return static_cast< ::proto::ToTheMoonQueryPathReq_OptionType >(query_type_);
}
inline void ToTheMoonQueryPathReq::set_query_type(::proto::ToTheMoonQueryPathReq_OptionType value) {
  
  query_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.query_type)
}

// .proto.ToTheMoonQueryPathReq.AStarMethod astar_method = 1;
inline void ToTheMoonQueryPathReq::clear_astar_method() {
  astar_method_ = 0;
}
inline ::proto::ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::astar_method() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.astar_method)
  return static_cast< ::proto::ToTheMoonQueryPathReq_AStarMethod >(astar_method_);
}
inline void ToTheMoonQueryPathReq::set_astar_method(::proto::ToTheMoonQueryPathReq_AStarMethod value) {
  
  astar_method_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.astar_method)
}

// uint32 scene_id = 6;
inline void ToTheMoonQueryPathReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ToTheMoonQueryPathReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.scene_id)
  return scene_id_;
}
inline void ToTheMoonQueryPathReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.scene_id)
}

// int32 query_id = 11;
inline void ToTheMoonQueryPathReq::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonQueryPathReq::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.query_id)
  return query_id_;
}
inline void ToTheMoonQueryPathReq::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.query_id)
}

// .proto.ToTheMoonQueryPathReq.FilterType filter_type = 3;
inline void ToTheMoonQueryPathReq::clear_filter_type() {
  filter_type_ = 0;
}
inline ::proto::ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq::filter_type() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.filter_type)
  return static_cast< ::proto::ToTheMoonQueryPathReq_FilterType >(filter_type_);
}
inline void ToTheMoonQueryPathReq::set_filter_type(::proto::ToTheMoonQueryPathReq_FilterType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.filter_type)
}

// bool refined = 13;
inline void ToTheMoonQueryPathReq::clear_refined() {
  refined_ = false;
}
inline bool ToTheMoonQueryPathReq::refined() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.refined)
  return refined_;
}
inline void ToTheMoonQueryPathReq::set_refined(bool value) {
  
  refined_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.refined)
}

// bool use_full_neighbor = 5;
inline void ToTheMoonQueryPathReq::clear_use_full_neighbor() {
  use_full_neighbor_ = false;
}
inline bool ToTheMoonQueryPathReq::use_full_neighbor() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.use_full_neighbor)
  return use_full_neighbor_;
}
inline void ToTheMoonQueryPathReq::set_use_full_neighbor(bool value) {
  
  use_full_neighbor_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.use_full_neighbor)
}

// .proto.Vector source_pos = 10;
inline bool ToTheMoonQueryPathReq::has_source_pos() const {
  return this != internal_default_instance() && source_pos_ != NULL;
}
inline void ToTheMoonQueryPathReq::clear_source_pos() {
  if (GetArenaNoVirtual() == NULL && source_pos_ != NULL) delete source_pos_;
  source_pos_ = NULL;
}
inline const ::proto::Vector& ToTheMoonQueryPathReq::source_pos() const {
  const ::proto::Vector* p = source_pos_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.source_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ToTheMoonQueryPathReq::mutable_source_pos() {
  
  if (source_pos_ == NULL) {
    source_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonQueryPathReq.source_pos)
  return source_pos_;
}
inline ::proto::Vector* ToTheMoonQueryPathReq::release_source_pos() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonQueryPathReq.source_pos)
  
  ::proto::Vector* temp = source_pos_;
  source_pos_ = NULL;
  return temp;
}
inline void ToTheMoonQueryPathReq::set_allocated_source_pos(::proto::Vector* source_pos) {
  delete source_pos_;
  source_pos_ = source_pos;
  if (source_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonQueryPathReq.source_pos)
}

// -------------------------------------------------------------------

// ToTheMoonQueryPathRsp

// .proto.ToTheMoonQueryPathRsp.PathStatusType query_status = 7;
inline void ToTheMoonQueryPathRsp::clear_query_status() {
  query_status_ = 0;
}
inline ::proto::ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp::query_status() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.query_status)
  return static_cast< ::proto::ToTheMoonQueryPathRsp_PathStatusType >(query_status_);
}
inline void ToTheMoonQueryPathRsp::set_query_status(::proto::ToTheMoonQueryPathRsp_PathStatusType value) {
  
  query_status_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.query_status)
}

// repeated int64 index = 3;
inline int ToTheMoonQueryPathRsp::index_size() const {
  return index_.size();
}
inline void ToTheMoonQueryPathRsp::clear_index() {
  index_.Clear();
}
inline ::google::protobuf::int64 ToTheMoonQueryPathRsp::index(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.index)
  return index_.Get(index);
}
inline void ToTheMoonQueryPathRsp::set_index(int index, ::google::protobuf::int64 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.index)
}
inline void ToTheMoonQueryPathRsp::add_index(::google::protobuf::int64 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ToTheMoonQueryPathRsp.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ToTheMoonQueryPathRsp::index() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonQueryPathRsp.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ToTheMoonQueryPathRsp::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonQueryPathRsp.index)
  return &index_;
}

// repeated .proto.Vector corners = 14;
inline int ToTheMoonQueryPathRsp::corners_size() const {
  return corners_.size();
}
inline void ToTheMoonQueryPathRsp::clear_corners() {
  corners_.Clear();
}
inline const ::proto::Vector& ToTheMoonQueryPathRsp::corners(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.corners)
  return corners_.Get(index);
}
inline ::proto::Vector* ToTheMoonQueryPathRsp::mutable_corners(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonQueryPathRsp.corners)
  return corners_.Mutable(index);
}
inline ::proto::Vector* ToTheMoonQueryPathRsp::add_corners() {
  // @@protoc_insertion_point(field_add:proto.ToTheMoonQueryPathRsp.corners)
  return corners_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
ToTheMoonQueryPathRsp::mutable_corners() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonQueryPathRsp.corners)
  return &corners_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
ToTheMoonQueryPathRsp::corners() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonQueryPathRsp.corners)
  return corners_;
}

// repeated int32 level = 1;
inline int ToTheMoonQueryPathRsp::level_size() const {
  return level_.size();
}
inline void ToTheMoonQueryPathRsp::clear_level() {
  level_.Clear();
}
inline ::google::protobuf::int32 ToTheMoonQueryPathRsp::level(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.level)
  return level_.Get(index);
}
inline void ToTheMoonQueryPathRsp::set_level(int index, ::google::protobuf::int32 value) {
  level_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.level)
}
inline void ToTheMoonQueryPathRsp::add_level(::google::protobuf::int32 value) {
  level_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ToTheMoonQueryPathRsp.level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ToTheMoonQueryPathRsp::level() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonQueryPathRsp.level)
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ToTheMoonQueryPathRsp::mutable_level() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonQueryPathRsp.level)
  return &level_;
}

// int32 retcode = 8;
inline void ToTheMoonQueryPathRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonQueryPathRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.retcode)
  return retcode_;
}
inline void ToTheMoonQueryPathRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.retcode)
}

// int32 query_id = 9;
inline void ToTheMoonQueryPathRsp::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonQueryPathRsp::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.query_id)
  return query_id_;
}
inline void ToTheMoonQueryPathRsp::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.query_id)
}

// -------------------------------------------------------------------

// ToTheMoonPingNotify

// -------------------------------------------------------------------

// ToTheMoonEnterSceneReq

// uint32 version = 14;
inline void ToTheMoonEnterSceneReq::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 ToTheMoonEnterSceneReq::version() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonEnterSceneReq.version)
  return version_;
}
inline void ToTheMoonEnterSceneReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonEnterSceneReq.version)
}

// uint32 scene_id = 15;
inline void ToTheMoonEnterSceneReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ToTheMoonEnterSceneReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonEnterSceneReq.scene_id)
  return scene_id_;
}
inline void ToTheMoonEnterSceneReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonEnterSceneReq.scene_id)
}

// -------------------------------------------------------------------

// ToTheMoonEnterSceneRsp

// int32 retcode = 7;
inline void ToTheMoonEnterSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonEnterSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonEnterSceneRsp.retcode)
  return retcode_;
}
inline void ToTheMoonEnterSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonEnterSceneRsp.retcode)
}

// -------------------------------------------------------------------

// ToTheMoonObstacleInfo

// .proto.ToTheMoonObstacleInfo.ShapeType type = 2;
inline void ToTheMoonObstacleInfo::clear_type() {
  type_ = 0;
}
inline ::proto::ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.type)
  return static_cast< ::proto::ToTheMoonObstacleInfo_ShapeType >(type_);
}
inline void ToTheMoonObstacleInfo::set_type(::proto::ToTheMoonObstacleInfo_ShapeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstacleInfo.type)
}

// int32 handle_id = 11;
inline void ToTheMoonObstacleInfo::clear_handle_id() {
  handle_id_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonObstacleInfo::handle_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.handle_id)
  return handle_id_;
}
inline void ToTheMoonObstacleInfo::set_handle_id(::google::protobuf::int32 value) {
  
  handle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstacleInfo.handle_id)
}

// .proto.MathQuaternion rotation = 7;
inline bool ToTheMoonObstacleInfo::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline void ToTheMoonObstacleInfo::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) delete rotation_;
  rotation_ = NULL;
}
inline const ::proto::MathQuaternion& ToTheMoonObstacleInfo::rotation() const {
  const ::proto::MathQuaternion* p = rotation_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
inline ::proto::MathQuaternion* ToTheMoonObstacleInfo::mutable_rotation() {
  
  if (rotation_ == NULL) {
    rotation_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstacleInfo.rotation)
  return rotation_;
}
inline ::proto::MathQuaternion* ToTheMoonObstacleInfo::release_rotation() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonObstacleInfo.rotation)
  
  ::proto::MathQuaternion* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline void ToTheMoonObstacleInfo::set_allocated_rotation(::proto::MathQuaternion* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonObstacleInfo.rotation)
}

// .proto.Vector center = 13;
inline bool ToTheMoonObstacleInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void ToTheMoonObstacleInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& ToTheMoonObstacleInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ToTheMoonObstacleInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstacleInfo.center)
  return center_;
}
inline ::proto::Vector* ToTheMoonObstacleInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonObstacleInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void ToTheMoonObstacleInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonObstacleInfo.center)
}

// .proto.Vector half_extents = 14;
inline bool ToTheMoonObstacleInfo::has_half_extents() const {
  return this != internal_default_instance() && half_extents_ != NULL;
}
inline void ToTheMoonObstacleInfo::clear_half_extents() {
  if (GetArenaNoVirtual() == NULL && half_extents_ != NULL) delete half_extents_;
  half_extents_ = NULL;
}
inline const ::proto::Vector& ToTheMoonObstacleInfo::half_extents() const {
  const ::proto::Vector* p = half_extents_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.half_extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ToTheMoonObstacleInfo::mutable_half_extents() {
  
  if (half_extents_ == NULL) {
    half_extents_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstacleInfo.half_extents)
  return half_extents_;
}
inline ::proto::Vector* ToTheMoonObstacleInfo::release_half_extents() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonObstacleInfo.half_extents)
  
  ::proto::Vector* temp = half_extents_;
  half_extents_ = NULL;
  return temp;
}
inline void ToTheMoonObstacleInfo::set_allocated_half_extents(::proto::Vector* half_extents) {
  delete half_extents_;
  half_extents_ = half_extents;
  if (half_extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonObstacleInfo.half_extents)
}

// -------------------------------------------------------------------

// ToTheMoonAddObstacleReq

// bool use_edge = 12;
inline void ToTheMoonAddObstacleReq::clear_use_edge() {
  use_edge_ = false;
}
inline bool ToTheMoonAddObstacleReq::use_edge() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.use_edge)
  return use_edge_;
}
inline void ToTheMoonAddObstacleReq::set_use_edge(bool value) {
  
  use_edge_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleReq.use_edge)
}

// .proto.ToTheMoonObstacleInfo obstacle = 13;
inline bool ToTheMoonAddObstacleReq::has_obstacle() const {
  return this != internal_default_instance() && obstacle_ != NULL;
}
inline void ToTheMoonAddObstacleReq::clear_obstacle() {
  if (GetArenaNoVirtual() == NULL && obstacle_ != NULL) delete obstacle_;
  obstacle_ = NULL;
}
inline const ::proto::ToTheMoonObstacleInfo& ToTheMoonAddObstacleReq::obstacle() const {
  const ::proto::ToTheMoonObstacleInfo* p = obstacle_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.obstacle)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ToTheMoonObstacleInfo*>(
      &::proto::_ToTheMoonObstacleInfo_default_instance_);
}
inline ::proto::ToTheMoonObstacleInfo* ToTheMoonAddObstacleReq::mutable_obstacle() {
  
  if (obstacle_ == NULL) {
    obstacle_ = new ::proto::ToTheMoonObstacleInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonAddObstacleReq.obstacle)
  return obstacle_;
}
inline ::proto::ToTheMoonObstacleInfo* ToTheMoonAddObstacleReq::release_obstacle() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonAddObstacleReq.obstacle)
  
  ::proto::ToTheMoonObstacleInfo* temp = obstacle_;
  obstacle_ = NULL;
  return temp;
}
inline void ToTheMoonAddObstacleReq::set_allocated_obstacle(::proto::ToTheMoonObstacleInfo* obstacle) {
  delete obstacle_;
  obstacle_ = obstacle;
  if (obstacle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonAddObstacleReq.obstacle)
}

// int32 query_id = 9;
inline void ToTheMoonAddObstacleReq::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonAddObstacleReq::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.query_id)
  return query_id_;
}
inline void ToTheMoonAddObstacleReq::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleReq.query_id)
}

// uint32 scene_id = 3;
inline void ToTheMoonAddObstacleReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ToTheMoonAddObstacleReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.scene_id)
  return scene_id_;
}
inline void ToTheMoonAddObstacleReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleReq.scene_id)
}

// -------------------------------------------------------------------

// DynamicSVONode

// int64 index = 8;
inline void DynamicSVONode::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DynamicSVONode::index() const {
  // @@protoc_insertion_point(field_get:proto.DynamicSVONode.index)
  return index_;
}
inline void DynamicSVONode::set_index(::google::protobuf::int64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.DynamicSVONode.index)
}

// int32 area = 5;
inline void DynamicSVONode::clear_area() {
  area_ = 0;
}
inline ::google::protobuf::int32 DynamicSVONode::area() const {
  // @@protoc_insertion_point(field_get:proto.DynamicSVONode.area)
  return area_;
}
inline void DynamicSVONode::set_area(::google::protobuf::int32 value) {
  
  area_ = value;
  // @@protoc_insertion_point(field_set:proto.DynamicSVONode.area)
}

// .proto.Vector refer_pos = 1;
inline bool DynamicSVONode::has_refer_pos() const {
  return this != internal_default_instance() && refer_pos_ != NULL;
}
inline void DynamicSVONode::clear_refer_pos() {
  if (GetArenaNoVirtual() == NULL && refer_pos_ != NULL) delete refer_pos_;
  refer_pos_ = NULL;
}
inline const ::proto::Vector& DynamicSVONode::refer_pos() const {
  const ::proto::Vector* p = refer_pos_;
  // @@protoc_insertion_point(field_get:proto.DynamicSVONode.refer_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* DynamicSVONode::mutable_refer_pos() {
  
  if (refer_pos_ == NULL) {
    refer_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.DynamicSVONode.refer_pos)
  return refer_pos_;
}
inline ::proto::Vector* DynamicSVONode::release_refer_pos() {
  // @@protoc_insertion_point(field_release:proto.DynamicSVONode.refer_pos)
  
  ::proto::Vector* temp = refer_pos_;
  refer_pos_ = NULL;
  return temp;
}
inline void DynamicSVONode::set_allocated_refer_pos(::proto::Vector* refer_pos) {
  delete refer_pos_;
  refer_pos_ = refer_pos;
  if (refer_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DynamicSVONode.refer_pos)
}

// -------------------------------------------------------------------

// DynamicLayerNodes

// int32 level = 10;
inline void DynamicLayerNodes::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 DynamicLayerNodes::level() const {
  // @@protoc_insertion_point(field_get:proto.DynamicLayerNodes.level)
  return level_;
}
inline void DynamicLayerNodes::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.DynamicLayerNodes.level)
}

// repeated .proto.DynamicSVONode nodes = 6;
inline int DynamicLayerNodes::nodes_size() const {
  return nodes_.size();
}
inline void DynamicLayerNodes::clear_nodes() {
  nodes_.Clear();
}
inline const ::proto::DynamicSVONode& DynamicLayerNodes::nodes(int index) const {
  // @@protoc_insertion_point(field_get:proto.DynamicLayerNodes.nodes)
  return nodes_.Get(index);
}
inline ::proto::DynamicSVONode* DynamicLayerNodes::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DynamicLayerNodes.nodes)
  return nodes_.Mutable(index);
}
inline ::proto::DynamicSVONode* DynamicLayerNodes::add_nodes() {
  // @@protoc_insertion_point(field_add:proto.DynamicLayerNodes.nodes)
  return nodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::DynamicSVONode >*
DynamicLayerNodes::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:proto.DynamicLayerNodes.nodes)
  return &nodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::DynamicSVONode >&
DynamicLayerNodes::nodes() const {
  // @@protoc_insertion_point(field_list:proto.DynamicLayerNodes.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// DynamicNodes

// repeated .proto.DynamicLayerNodes nodes = 3;
inline int DynamicNodes::nodes_size() const {
  return nodes_.size();
}
inline void DynamicNodes::clear_nodes() {
  nodes_.Clear();
}
inline const ::proto::DynamicLayerNodes& DynamicNodes::nodes(int index) const {
  // @@protoc_insertion_point(field_get:proto.DynamicNodes.nodes)
  return nodes_.Get(index);
}
inline ::proto::DynamicLayerNodes* DynamicNodes::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DynamicNodes.nodes)
  return nodes_.Mutable(index);
}
inline ::proto::DynamicLayerNodes* DynamicNodes::add_nodes() {
  // @@protoc_insertion_point(field_add:proto.DynamicNodes.nodes)
  return nodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::DynamicLayerNodes >*
DynamicNodes::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:proto.DynamicNodes.nodes)
  return &nodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::DynamicLayerNodes >&
DynamicNodes::nodes() const {
  // @@protoc_insertion_point(field_list:proto.DynamicNodes.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// ToTheMoonAddObstacleRsp

// .proto.DynamicNodes dynamic_nodes = 2;
inline bool ToTheMoonAddObstacleRsp::has_dynamic_nodes() const {
  return this != internal_default_instance() && dynamic_nodes_ != NULL;
}
inline void ToTheMoonAddObstacleRsp::clear_dynamic_nodes() {
  if (GetArenaNoVirtual() == NULL && dynamic_nodes_ != NULL) delete dynamic_nodes_;
  dynamic_nodes_ = NULL;
}
inline const ::proto::DynamicNodes& ToTheMoonAddObstacleRsp::dynamic_nodes() const {
  const ::proto::DynamicNodes* p = dynamic_nodes_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DynamicNodes*>(
      &::proto::_DynamicNodes_default_instance_);
}
inline ::proto::DynamicNodes* ToTheMoonAddObstacleRsp::mutable_dynamic_nodes() {
  
  if (dynamic_nodes_ == NULL) {
    dynamic_nodes_ = new ::proto::DynamicNodes;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
  return dynamic_nodes_;
}
inline ::proto::DynamicNodes* ToTheMoonAddObstacleRsp::release_dynamic_nodes() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
  
  ::proto::DynamicNodes* temp = dynamic_nodes_;
  dynamic_nodes_ = NULL;
  return temp;
}
inline void ToTheMoonAddObstacleRsp::set_allocated_dynamic_nodes(::proto::DynamicNodes* dynamic_nodes) {
  delete dynamic_nodes_;
  dynamic_nodes_ = dynamic_nodes;
  if (dynamic_nodes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
}

// int32 query_id = 13;
inline void ToTheMoonAddObstacleRsp::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonAddObstacleRsp::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleRsp.query_id)
  return query_id_;
}
inline void ToTheMoonAddObstacleRsp::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleRsp.query_id)
}

// int32 retcode = 11;
inline void ToTheMoonAddObstacleRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonAddObstacleRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleRsp.retcode)
  return retcode_;
}
inline void ToTheMoonAddObstacleRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleRsp.retcode)
}

// -------------------------------------------------------------------

// ToTheMoonRemoveObstacleReq

// int32 handle = 12;
inline void ToTheMoonRemoveObstacleReq::clear_handle() {
  handle_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonRemoveObstacleReq::handle() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleReq.handle)
  return handle_;
}
inline void ToTheMoonRemoveObstacleReq::set_handle(::google::protobuf::int32 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleReq.handle)
}

// uint32 scene_id = 10;
inline void ToTheMoonRemoveObstacleReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ToTheMoonRemoveObstacleReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleReq.scene_id)
  return scene_id_;
}
inline void ToTheMoonRemoveObstacleReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleReq.scene_id)
}

// int32 query_id = 11;
inline void ToTheMoonRemoveObstacleReq::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonRemoveObstacleReq::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleReq.query_id)
  return query_id_;
}
inline void ToTheMoonRemoveObstacleReq::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleReq.query_id)
}

// -------------------------------------------------------------------

// ToTheMoonRemoveObstacleRsp

// int32 query_id = 3;
inline void ToTheMoonRemoveObstacleRsp::clear_query_id() {
  query_id_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonRemoveObstacleRsp::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleRsp.query_id)
  return query_id_;
}
inline void ToTheMoonRemoveObstacleRsp::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleRsp.query_id)
}

// int32 retcode = 14;
inline void ToTheMoonRemoveObstacleRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ToTheMoonRemoveObstacleRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleRsp.retcode)
  return retcode_;
}
inline void ToTheMoonRemoveObstacleRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleRsp.retcode)
}

// .proto.DynamicNodes dynamic_nodes = 8;
inline bool ToTheMoonRemoveObstacleRsp::has_dynamic_nodes() const {
  return this != internal_default_instance() && dynamic_nodes_ != NULL;
}
inline void ToTheMoonRemoveObstacleRsp::clear_dynamic_nodes() {
  if (GetArenaNoVirtual() == NULL && dynamic_nodes_ != NULL) delete dynamic_nodes_;
  dynamic_nodes_ = NULL;
}
inline const ::proto::DynamicNodes& ToTheMoonRemoveObstacleRsp::dynamic_nodes() const {
  const ::proto::DynamicNodes* p = dynamic_nodes_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DynamicNodes*>(
      &::proto::_DynamicNodes_default_instance_);
}
inline ::proto::DynamicNodes* ToTheMoonRemoveObstacleRsp::mutable_dynamic_nodes() {
  
  if (dynamic_nodes_ == NULL) {
    dynamic_nodes_ = new ::proto::DynamicNodes;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
  return dynamic_nodes_;
}
inline ::proto::DynamicNodes* ToTheMoonRemoveObstacleRsp::release_dynamic_nodes() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
  
  ::proto::DynamicNodes* temp = dynamic_nodes_;
  dynamic_nodes_ = NULL;
  return temp;
}
inline void ToTheMoonRemoveObstacleRsp::set_allocated_dynamic_nodes(::proto::DynamicNodes* dynamic_nodes) {
  delete dynamic_nodes_;
  dynamic_nodes_ = dynamic_nodes;
  if (dynamic_nodes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
}

// -------------------------------------------------------------------

// ToTheMoonObstaclesModifyNotify

// repeated .proto.ToTheMoonObstacleInfo add_obstacles = 4;
inline int ToTheMoonObstaclesModifyNotify::add_obstacles_size() const {
  return add_obstacles_.size();
}
inline void ToTheMoonObstaclesModifyNotify::clear_add_obstacles() {
  add_obstacles_.Clear();
}
inline const ::proto::ToTheMoonObstacleInfo& ToTheMoonObstaclesModifyNotify::add_obstacles(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_.Get(index);
}
inline ::proto::ToTheMoonObstacleInfo* ToTheMoonObstaclesModifyNotify::mutable_add_obstacles(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_.Mutable(index);
}
inline ::proto::ToTheMoonObstacleInfo* ToTheMoonObstaclesModifyNotify::add_add_obstacles() {
  // @@protoc_insertion_point(field_add:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ToTheMoonObstacleInfo >*
ToTheMoonObstaclesModifyNotify::mutable_add_obstacles() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return &add_obstacles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ToTheMoonObstacleInfo >&
ToTheMoonObstaclesModifyNotify::add_obstacles() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_;
}

// repeated int32 remove_obstacle_ids = 13;
inline int ToTheMoonObstaclesModifyNotify::remove_obstacle_ids_size() const {
  return remove_obstacle_ids_.size();
}
inline void ToTheMoonObstaclesModifyNotify::clear_remove_obstacle_ids() {
  remove_obstacle_ids_.Clear();
}
inline ::google::protobuf::int32 ToTheMoonObstaclesModifyNotify::remove_obstacle_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
  return remove_obstacle_ids_.Get(index);
}
inline void ToTheMoonObstaclesModifyNotify::set_remove_obstacle_ids(int index, ::google::protobuf::int32 value) {
  remove_obstacle_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
}
inline void ToTheMoonObstaclesModifyNotify::add_remove_obstacle_ids(::google::protobuf::int32 value) {
  remove_obstacle_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ToTheMoonObstaclesModifyNotify::remove_obstacle_ids() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
  return remove_obstacle_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ToTheMoonObstaclesModifyNotify::mutable_remove_obstacle_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
  return &remove_obstacle_ids_;
}

// uint32 scene_id = 15;
inline void ToTheMoonObstaclesModifyNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ToTheMoonObstaclesModifyNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.scene_id)
  return scene_id_;
}
inline void ToTheMoonObstaclesModifyNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstaclesModifyNotify.scene_id)
}

// bool use_edge = 1;
inline void ToTheMoonObstaclesModifyNotify::clear_use_edge() {
  use_edge_ = false;
}
inline bool ToTheMoonObstaclesModifyNotify::use_edge() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.use_edge)
  return use_edge_;
}
inline void ToTheMoonObstaclesModifyNotify::set_use_edge(bool value) {
  
  use_edge_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstaclesModifyNotify.use_edge)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::ToTheMoonQueryPathReq_OptionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ToTheMoonQueryPathReq_OptionType>() {
  return ::proto::ToTheMoonQueryPathReq_OptionType_descriptor();
}
template <> struct is_proto_enum< ::proto::ToTheMoonQueryPathReq_AStarMethod> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ToTheMoonQueryPathReq_AStarMethod>() {
  return ::proto::ToTheMoonQueryPathReq_AStarMethod_descriptor();
}
template <> struct is_proto_enum< ::proto::ToTheMoonQueryPathReq_FilterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ToTheMoonQueryPathReq_FilterType>() {
  return ::proto::ToTheMoonQueryPathReq_FilterType_descriptor();
}
template <> struct is_proto_enum< ::proto::ToTheMoonQueryPathRsp_PathStatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ToTheMoonQueryPathRsp_PathStatusType>() {
  return ::proto::ToTheMoonQueryPathRsp_PathStatusType_descriptor();
}
template <> struct is_proto_enum< ::proto::ToTheMoonObstacleInfo_ShapeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ToTheMoonObstacleInfo_ShapeType>() {
  return ::proto::ToTheMoonObstacleInfo_ShapeType_descriptor();
}
template <> struct is_proto_enum< ::proto::ToTheMoonRemoveObstacleReq_ObstacleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ToTheMoonRemoveObstacleReq_ObstacleType>() {
  return ::proto::ToTheMoonRemoveObstacleReq_ObstacleType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5ftothemoon_2eproto__INCLUDED
