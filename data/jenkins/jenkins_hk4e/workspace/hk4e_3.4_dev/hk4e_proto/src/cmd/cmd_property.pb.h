// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_property.proto

#ifndef PROTOBUF_cmd_2fcmd_5fproperty_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fproperty_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AvatarFightPropNotify;
class AvatarFightPropNotifyDefaultTypeInternal;
extern AvatarFightPropNotifyDefaultTypeInternal _AvatarFightPropNotify_default_instance_;
class AvatarFightPropNotify_FightPropMapEntry;
class AvatarFightPropNotify_FightPropMapEntryDefaultTypeInternal;
extern AvatarFightPropNotify_FightPropMapEntryDefaultTypeInternal _AvatarFightPropNotify_FightPropMapEntry_default_instance_;
class AvatarFightPropUpdateNotify;
class AvatarFightPropUpdateNotifyDefaultTypeInternal;
extern AvatarFightPropUpdateNotifyDefaultTypeInternal _AvatarFightPropUpdateNotify_default_instance_;
class AvatarFightPropUpdateNotify_FightPropMapEntry;
class AvatarFightPropUpdateNotify_FightPropMapEntryDefaultTypeInternal;
extern AvatarFightPropUpdateNotify_FightPropMapEntryDefaultTypeInternal _AvatarFightPropUpdateNotify_FightPropMapEntry_default_instance_;
class AvatarLifeStateChangeNotify;
class AvatarLifeStateChangeNotifyDefaultTypeInternal;
extern AvatarLifeStateChangeNotifyDefaultTypeInternal _AvatarLifeStateChangeNotify_default_instance_;
class AvatarPropChangeReasonNotify;
class AvatarPropChangeReasonNotifyDefaultTypeInternal;
extern AvatarPropChangeReasonNotifyDefaultTypeInternal _AvatarPropChangeReasonNotify_default_instance_;
class AvatarPropNotify;
class AvatarPropNotifyDefaultTypeInternal;
extern AvatarPropNotifyDefaultTypeInternal _AvatarPropNotify_default_instance_;
class AvatarPropNotify_PropMapEntry;
class AvatarPropNotify_PropMapEntryDefaultTypeInternal;
extern AvatarPropNotify_PropMapEntryDefaultTypeInternal _AvatarPropNotify_PropMapEntry_default_instance_;
class EntityFightPropChangeReasonNotify;
class EntityFightPropChangeReasonNotifyDefaultTypeInternal;
extern EntityFightPropChangeReasonNotifyDefaultTypeInternal _EntityFightPropChangeReasonNotify_default_instance_;
class EntityFightPropNotify;
class EntityFightPropNotifyDefaultTypeInternal;
extern EntityFightPropNotifyDefaultTypeInternal _EntityFightPropNotify_default_instance_;
class EntityFightPropNotify_FightPropMapEntry;
class EntityFightPropNotify_FightPropMapEntryDefaultTypeInternal;
extern EntityFightPropNotify_FightPropMapEntryDefaultTypeInternal _EntityFightPropNotify_FightPropMapEntry_default_instance_;
class EntityFightPropUpdateNotify;
class EntityFightPropUpdateNotifyDefaultTypeInternal;
extern EntityFightPropUpdateNotifyDefaultTypeInternal _EntityFightPropUpdateNotify_default_instance_;
class EntityFightPropUpdateNotify_FightPropMapEntry;
class EntityFightPropUpdateNotify_FightPropMapEntryDefaultTypeInternal;
extern EntityFightPropUpdateNotify_FightPropMapEntryDefaultTypeInternal _EntityFightPropUpdateNotify_FightPropMapEntry_default_instance_;
class EntityPropNotify;
class EntityPropNotifyDefaultTypeInternal;
extern EntityPropNotifyDefaultTypeInternal _EntityPropNotify_default_instance_;
class EntityPropNotify_PropMapEntry;
class EntityPropNotify_PropMapEntryDefaultTypeInternal;
extern EntityPropNotify_PropMapEntryDefaultTypeInternal _EntityPropNotify_PropMapEntry_default_instance_;
class LifeStateChangeNotify;
class LifeStateChangeNotifyDefaultTypeInternal;
extern LifeStateChangeNotifyDefaultTypeInternal _LifeStateChangeNotify_default_instance_;
class MarkNewNotify;
class MarkNewNotifyDefaultTypeInternal;
extern MarkNewNotifyDefaultTypeInternal _MarkNewNotify_default_instance_;
class PlayerPropChangeReasonNotify;
class PlayerPropChangeReasonNotifyDefaultTypeInternal;
extern PlayerPropChangeReasonNotifyDefaultTypeInternal _PlayerPropChangeReasonNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fproperty_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fproperty_2eproto

enum PropChangeReason {
  PROP_CHANGE_NONE = 0,
  PROP_CHANGE_STATUE_RECOVER = 1,
  PROP_CHANGE_ENERGY_BALL = 2,
  PROP_CHANGE_ABILITY = 3,
  PROP_CHANGE_LEVELUP = 4,
  PROP_CHANGE_ITEM = 5,
  PROP_CHANGE_AVATAR_CARD = 6,
  PROP_CHANGE_CITY_LEVELUP = 7,
  PROP_CHANGE_AVATAR_UPGRADE = 8,
  PROP_CHANGE_AVATAR_PROMOTE = 9,
  PROP_CHANGE_PLAYER_ADD_EXP = 10,
  PROP_CHANGE_FINISH_QUEST = 11,
  PROP_CHANGE_GM = 12,
  PROP_CHANGE_MANUAL_ADJUST_WORLD_LEVEL = 13,
  PropChangeReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PropChangeReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PropChangeReason_IsValid(int value);
const PropChangeReason PropChangeReason_MIN = PROP_CHANGE_NONE;
const PropChangeReason PropChangeReason_MAX = PROP_CHANGE_MANUAL_ADJUST_WORLD_LEVEL;
const int PropChangeReason_ARRAYSIZE = PropChangeReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* PropChangeReason_descriptor();
inline const ::std::string& PropChangeReason_Name(PropChangeReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    PropChangeReason_descriptor(), value);
}
inline bool PropChangeReason_Parse(
    const ::std::string& name, PropChangeReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PropChangeReason>(
    PropChangeReason_descriptor(), name, value);
}
enum ChangeEnergyReason {
  CHANGE_ENERGY_NONE = 0,
  CHANGE_ENERGY_SKILL_START = 1,
  ChangeEnergyReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeEnergyReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeEnergyReason_IsValid(int value);
const ChangeEnergyReason ChangeEnergyReason_MIN = CHANGE_ENERGY_NONE;
const ChangeEnergyReason ChangeEnergyReason_MAX = CHANGE_ENERGY_SKILL_START;
const int ChangeEnergyReason_ARRAYSIZE = ChangeEnergyReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeEnergyReason_descriptor();
inline const ::std::string& ChangeEnergyReason_Name(ChangeEnergyReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeEnergyReason_descriptor(), value);
}
inline bool ChangeEnergyReason_Parse(
    const ::std::string& name, ChangeEnergyReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeEnergyReason>(
    ChangeEnergyReason_descriptor(), name, value);
}
enum MarkNewType {
  MARK_NEW_TYPE_NONE = 0,
  MARK_NEW_TYPE_COMBINE = 1,
  MARK_NEW_TYPE_FORGE = 2,
  MarkNewType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarkNewType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarkNewType_IsValid(int value);
const MarkNewType MarkNewType_MIN = MARK_NEW_TYPE_NONE;
const MarkNewType MarkNewType_MAX = MARK_NEW_TYPE_FORGE;
const int MarkNewType_ARRAYSIZE = MarkNewType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarkNewType_descriptor();
inline const ::std::string& MarkNewType_Name(MarkNewType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarkNewType_descriptor(), value);
}
inline bool MarkNewType_Parse(
    const ::std::string& name, MarkNewType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarkNewType>(
    MarkNewType_descriptor(), name, value);
}
// ===================================================================


// -------------------------------------------------------------------

class EntityPropNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityPropNotify) */ {
 public:
  EntityPropNotify();
  virtual ~EntityPropNotify();

  EntityPropNotify(const EntityPropNotify& from);

  inline EntityPropNotify& operator=(const EntityPropNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityPropNotify(EntityPropNotify&& from) noexcept
    : EntityPropNotify() {
    *this = ::std::move(from);
  }

  inline EntityPropNotify& operator=(EntityPropNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityPropNotify& default_instance();

  static inline const EntityPropNotify* internal_default_instance() {
    return reinterpret_cast<const EntityPropNotify*>(
               &_EntityPropNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EntityPropNotify* other);
  friend void swap(EntityPropNotify& a, EntityPropNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityPropNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityPropNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityPropNotify& from);
  void MergeFrom(const EntityPropNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityPropNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 1;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // uint32 entity_id = 14;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 14;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityPropNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EntityPropNotify_PropMapEntry : public ::google::protobuf::internal::MapEntry<EntityPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EntityPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    EntityPropNotify_PropMapEntry();
    EntityPropNotify_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EntityPropNotify_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EntityPropNotify_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EntityPropNotify_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LifeStateChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LifeStateChangeNotify) */ {
 public:
  LifeStateChangeNotify();
  virtual ~LifeStateChangeNotify();

  LifeStateChangeNotify(const LifeStateChangeNotify& from);

  inline LifeStateChangeNotify& operator=(const LifeStateChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LifeStateChangeNotify(LifeStateChangeNotify&& from) noexcept
    : LifeStateChangeNotify() {
    *this = ::std::move(from);
  }

  inline LifeStateChangeNotify& operator=(LifeStateChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LifeStateChangeNotify& default_instance();

  static inline const LifeStateChangeNotify* internal_default_instance() {
    return reinterpret_cast<const LifeStateChangeNotify*>(
               &_LifeStateChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LifeStateChangeNotify* other);
  friend void swap(LifeStateChangeNotify& a, LifeStateChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LifeStateChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LifeStateChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LifeStateChangeNotify& from);
  void MergeFrom(const LifeStateChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LifeStateChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ServerBuff server_buff_list = 6;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 6;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // string attack_tag = 7;
  void clear_attack_tag();
  static const int kAttackTagFieldNumber = 7;
  const ::std::string& attack_tag() const;
  void set_attack_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_attack_tag(::std::string&& value);
  #endif
  void set_attack_tag(const char* value);
  void set_attack_tag(const char* value, size_t size);
  ::std::string* mutable_attack_tag();
  ::std::string* release_attack_tag();
  void set_allocated_attack_tag(::std::string* attack_tag);

  // uint32 source_entity_id = 1;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 move_reliable_seq = 15;
  void clear_move_reliable_seq();
  static const int kMoveReliableSeqFieldNumber = 15;
  ::google::protobuf::uint32 move_reliable_seq() const;
  void set_move_reliable_seq(::google::protobuf::uint32 value);

  // uint32 life_state = 5;
  void clear_life_state();
  static const int kLifeStateFieldNumber = 5;
  ::google::protobuf::uint32 life_state() const;
  void set_life_state(::google::protobuf::uint32 value);

  // .proto.PlayerDieType die_type = 14;
  void clear_die_type();
  static const int kDieTypeFieldNumber = 14;
  ::proto::PlayerDieType die_type() const;
  void set_die_type(::proto::PlayerDieType value);

  // @@protoc_insertion_point(class_scope:proto.LifeStateChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::google::protobuf::internal::ArenaStringPtr attack_tag_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 move_reliable_seq_;
  ::google::protobuf::uint32 life_state_;
  int die_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EntityFightPropNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityFightPropNotify) */ {
 public:
  EntityFightPropNotify();
  virtual ~EntityFightPropNotify();

  EntityFightPropNotify(const EntityFightPropNotify& from);

  inline EntityFightPropNotify& operator=(const EntityFightPropNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityFightPropNotify(EntityFightPropNotify&& from) noexcept
    : EntityFightPropNotify() {
    *this = ::std::move(from);
  }

  inline EntityFightPropNotify& operator=(EntityFightPropNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityFightPropNotify& default_instance();

  static inline const EntityFightPropNotify* internal_default_instance() {
    return reinterpret_cast<const EntityFightPropNotify*>(
               &_EntityFightPropNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(EntityFightPropNotify* other);
  friend void swap(EntityFightPropNotify& a, EntityFightPropNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityFightPropNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityFightPropNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityFightPropNotify& from);
  void MergeFrom(const EntityFightPropNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityFightPropNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, float> fight_prop_map = 8;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // uint32 entity_id = 4;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityFightPropNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EntityFightPropNotify_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<EntityFightPropNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EntityFightPropNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    EntityFightPropNotify_FightPropMapEntry();
    EntityFightPropNotify_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EntityFightPropNotify_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EntityFightPropNotify_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EntityFightPropNotify_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EntityFightPropUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityFightPropUpdateNotify) */ {
 public:
  EntityFightPropUpdateNotify();
  virtual ~EntityFightPropUpdateNotify();

  EntityFightPropUpdateNotify(const EntityFightPropUpdateNotify& from);

  inline EntityFightPropUpdateNotify& operator=(const EntityFightPropUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityFightPropUpdateNotify(EntityFightPropUpdateNotify&& from) noexcept
    : EntityFightPropUpdateNotify() {
    *this = ::std::move(from);
  }

  inline EntityFightPropUpdateNotify& operator=(EntityFightPropUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityFightPropUpdateNotify& default_instance();

  static inline const EntityFightPropUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const EntityFightPropUpdateNotify*>(
               &_EntityFightPropUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(EntityFightPropUpdateNotify* other);
  friend void swap(EntityFightPropUpdateNotify& a, EntityFightPropUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityFightPropUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityFightPropUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityFightPropUpdateNotify& from);
  void MergeFrom(const EntityFightPropUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityFightPropUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, float> fight_prop_map = 15;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // uint32 entity_id = 13;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 13;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityFightPropUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EntityFightPropUpdateNotify_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<EntityFightPropUpdateNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EntityFightPropUpdateNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    EntityFightPropUpdateNotify_FightPropMapEntry();
    EntityFightPropUpdateNotify_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EntityFightPropUpdateNotify_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EntityFightPropUpdateNotify_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EntityFightPropUpdateNotify_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarFightPropNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarFightPropNotify) */ {
 public:
  AvatarFightPropNotify();
  virtual ~AvatarFightPropNotify();

  AvatarFightPropNotify(const AvatarFightPropNotify& from);

  inline AvatarFightPropNotify& operator=(const AvatarFightPropNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarFightPropNotify(AvatarFightPropNotify&& from) noexcept
    : AvatarFightPropNotify() {
    *this = ::std::move(from);
  }

  inline AvatarFightPropNotify& operator=(AvatarFightPropNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarFightPropNotify& default_instance();

  static inline const AvatarFightPropNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarFightPropNotify*>(
               &_AvatarFightPropNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AvatarFightPropNotify* other);
  friend void swap(AvatarFightPropNotify& a, AvatarFightPropNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarFightPropNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarFightPropNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarFightPropNotify& from);
  void MergeFrom(const AvatarFightPropNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarFightPropNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, float> fight_prop_map = 8;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // uint64 avatar_guid = 4;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 4;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarFightPropNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarFightPropNotify_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarFightPropNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarFightPropNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    AvatarFightPropNotify_FightPropMapEntry();
    AvatarFightPropNotify_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarFightPropNotify_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarFightPropNotify_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarFightPropNotify_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarFightPropUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarFightPropUpdateNotify) */ {
 public:
  AvatarFightPropUpdateNotify();
  virtual ~AvatarFightPropUpdateNotify();

  AvatarFightPropUpdateNotify(const AvatarFightPropUpdateNotify& from);

  inline AvatarFightPropUpdateNotify& operator=(const AvatarFightPropUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarFightPropUpdateNotify(AvatarFightPropUpdateNotify&& from) noexcept
    : AvatarFightPropUpdateNotify() {
    *this = ::std::move(from);
  }

  inline AvatarFightPropUpdateNotify& operator=(AvatarFightPropUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarFightPropUpdateNotify& default_instance();

  static inline const AvatarFightPropUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarFightPropUpdateNotify*>(
               &_AvatarFightPropUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AvatarFightPropUpdateNotify* other);
  friend void swap(AvatarFightPropUpdateNotify& a, AvatarFightPropUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarFightPropUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarFightPropUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarFightPropUpdateNotify& from);
  void MergeFrom(const AvatarFightPropUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarFightPropUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, float> fight_prop_map = 15;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // uint64 avatar_guid = 13;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 13;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarFightPropUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarFightPropUpdateNotify_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarFightPropUpdateNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarFightPropUpdateNotify_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    AvatarFightPropUpdateNotify_FightPropMapEntry();
    AvatarFightPropUpdateNotify_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarFightPropUpdateNotify_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarFightPropUpdateNotify_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarFightPropUpdateNotify_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityFightPropChangeReasonNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityFightPropChangeReasonNotify) */ {
 public:
  EntityFightPropChangeReasonNotify();
  virtual ~EntityFightPropChangeReasonNotify();

  EntityFightPropChangeReasonNotify(const EntityFightPropChangeReasonNotify& from);

  inline EntityFightPropChangeReasonNotify& operator=(const EntityFightPropChangeReasonNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityFightPropChangeReasonNotify(EntityFightPropChangeReasonNotify&& from) noexcept
    : EntityFightPropChangeReasonNotify() {
    *this = ::std::move(from);
  }

  inline EntityFightPropChangeReasonNotify& operator=(EntityFightPropChangeReasonNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityFightPropChangeReasonNotify& default_instance();

  static inline const EntityFightPropChangeReasonNotify* internal_default_instance() {
    return reinterpret_cast<const EntityFightPropChangeReasonNotify*>(
               &_EntityFightPropChangeReasonNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(EntityFightPropChangeReasonNotify* other);
  friend void swap(EntityFightPropChangeReasonNotify& a, EntityFightPropChangeReasonNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityFightPropChangeReasonNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityFightPropChangeReasonNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityFightPropChangeReasonNotify& from);
  void MergeFrom(const EntityFightPropChangeReasonNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityFightPropChangeReasonNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 param_list = 10;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 10;
  ::google::protobuf::uint32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::uint32 value);
  void add_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_list();

  // float prop_delta = 1;
  void clear_prop_delta();
  static const int kPropDeltaFieldNumber = 1;
  float prop_delta() const;
  void set_prop_delta(float value);

  // uint32 entity_id = 5;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.PropChangeReason reason = 6;
  void clear_reason();
  static const int kReasonFieldNumber = 6;
  ::proto::PropChangeReason reason() const;
  void set_reason(::proto::PropChangeReason value);

  // uint32 prop_type = 13;
  void clear_prop_type();
  static const int kPropTypeFieldNumber = 13;
  ::google::protobuf::uint32 prop_type() const;
  void set_prop_type(::google::protobuf::uint32 value);

  // .proto.ChangHpReason change_hp_reason = 14;
  void clear_change_hp_reason();
  static const int kChangeHpReasonFieldNumber = 14;
  ::proto::ChangHpReason change_hp_reason() const;
  void set_change_hp_reason(::proto::ChangHpReason value);

  // .proto.ChangeEnergyReason change_energy_reson = 15;
  void clear_change_energy_reson();
  static const int kChangeEnergyResonFieldNumber = 15;
  ::proto::ChangeEnergyReason change_energy_reson() const;
  void set_change_energy_reson(::proto::ChangeEnergyReason value);

  // @@protoc_insertion_point(class_scope:proto.EntityFightPropChangeReasonNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  float prop_delta_;
  ::google::protobuf::uint32 entity_id_;
  int reason_;
  ::google::protobuf::uint32 prop_type_;
  int change_hp_reason_;
  int change_energy_reson_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarLifeStateChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarLifeStateChangeNotify) */ {
 public:
  AvatarLifeStateChangeNotify();
  virtual ~AvatarLifeStateChangeNotify();

  AvatarLifeStateChangeNotify(const AvatarLifeStateChangeNotify& from);

  inline AvatarLifeStateChangeNotify& operator=(const AvatarLifeStateChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarLifeStateChangeNotify(AvatarLifeStateChangeNotify&& from) noexcept
    : AvatarLifeStateChangeNotify() {
    *this = ::std::move(from);
  }

  inline AvatarLifeStateChangeNotify& operator=(AvatarLifeStateChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarLifeStateChangeNotify& default_instance();

  static inline const AvatarLifeStateChangeNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarLifeStateChangeNotify*>(
               &_AvatarLifeStateChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AvatarLifeStateChangeNotify* other);
  friend void swap(AvatarLifeStateChangeNotify& a, AvatarLifeStateChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarLifeStateChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarLifeStateChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarLifeStateChangeNotify& from);
  void MergeFrom(const AvatarLifeStateChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarLifeStateChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ServerBuff server_buff_list = 12;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 12;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // string attack_tag = 10;
  void clear_attack_tag();
  static const int kAttackTagFieldNumber = 10;
  const ::std::string& attack_tag() const;
  void set_attack_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_attack_tag(::std::string&& value);
  #endif
  void set_attack_tag(const char* value);
  void set_attack_tag(const char* value, size_t size);
  ::std::string* mutable_attack_tag();
  ::std::string* release_attack_tag();
  void set_allocated_attack_tag(::std::string* attack_tag);

  // .proto.PlayerDieType die_type = 2;
  void clear_die_type();
  static const int kDieTypeFieldNumber = 2;
  ::proto::PlayerDieType die_type() const;
  void set_die_type(::proto::PlayerDieType value);

  // uint32 source_entity_id = 3;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // uint32 move_reliable_seq = 5;
  void clear_move_reliable_seq();
  static const int kMoveReliableSeqFieldNumber = 5;
  ::google::protobuf::uint32 move_reliable_seq() const;
  void set_move_reliable_seq(::google::protobuf::uint32 value);

  // uint32 life_state = 13;
  void clear_life_state();
  static const int kLifeStateFieldNumber = 13;
  ::google::protobuf::uint32 life_state() const;
  void set_life_state(::google::protobuf::uint32 value);

  // uint64 avatar_guid = 11;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 11;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarLifeStateChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::google::protobuf::internal::ArenaStringPtr attack_tag_;
  int die_type_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::uint32 move_reliable_seq_;
  ::google::protobuf::uint32 life_state_;
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarPropChangeReasonNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarPropChangeReasonNotify) */ {
 public:
  AvatarPropChangeReasonNotify();
  virtual ~AvatarPropChangeReasonNotify();

  AvatarPropChangeReasonNotify(const AvatarPropChangeReasonNotify& from);

  inline AvatarPropChangeReasonNotify& operator=(const AvatarPropChangeReasonNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarPropChangeReasonNotify(AvatarPropChangeReasonNotify&& from) noexcept
    : AvatarPropChangeReasonNotify() {
    *this = ::std::move(from);
  }

  inline AvatarPropChangeReasonNotify& operator=(AvatarPropChangeReasonNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarPropChangeReasonNotify& default_instance();

  static inline const AvatarPropChangeReasonNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarPropChangeReasonNotify*>(
               &_AvatarPropChangeReasonNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(AvatarPropChangeReasonNotify* other);
  friend void swap(AvatarPropChangeReasonNotify& a, AvatarPropChangeReasonNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarPropChangeReasonNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarPropChangeReasonNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarPropChangeReasonNotify& from);
  void MergeFrom(const AvatarPropChangeReasonNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarPropChangeReasonNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 prop_type = 1;
  void clear_prop_type();
  static const int kPropTypeFieldNumber = 1;
  ::google::protobuf::uint32 prop_type() const;
  void set_prop_type(::google::protobuf::uint32 value);

  // .proto.PropChangeReason reason = 5;
  void clear_reason();
  static const int kReasonFieldNumber = 5;
  ::proto::PropChangeReason reason() const;
  void set_reason(::proto::PropChangeReason value);

  // uint64 avatar_guid = 8;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 8;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // float old_value = 11;
  void clear_old_value();
  static const int kOldValueFieldNumber = 11;
  float old_value() const;
  void set_old_value(float value);

  // float cur_value = 15;
  void clear_cur_value();
  static const int kCurValueFieldNumber = 15;
  float cur_value() const;
  void set_cur_value(float value);

  // @@protoc_insertion_point(class_scope:proto.AvatarPropChangeReasonNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 prop_type_;
  int reason_;
  ::google::protobuf::uint64 avatar_guid_;
  float old_value_;
  float cur_value_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerPropChangeReasonNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerPropChangeReasonNotify) */ {
 public:
  PlayerPropChangeReasonNotify();
  virtual ~PlayerPropChangeReasonNotify();

  PlayerPropChangeReasonNotify(const PlayerPropChangeReasonNotify& from);

  inline PlayerPropChangeReasonNotify& operator=(const PlayerPropChangeReasonNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPropChangeReasonNotify(PlayerPropChangeReasonNotify&& from) noexcept
    : PlayerPropChangeReasonNotify() {
    *this = ::std::move(from);
  }

  inline PlayerPropChangeReasonNotify& operator=(PlayerPropChangeReasonNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropChangeReasonNotify& default_instance();

  static inline const PlayerPropChangeReasonNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerPropChangeReasonNotify*>(
               &_PlayerPropChangeReasonNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PlayerPropChangeReasonNotify* other);
  friend void swap(PlayerPropChangeReasonNotify& a, PlayerPropChangeReasonNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPropChangeReasonNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPropChangeReasonNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPropChangeReasonNotify& from);
  void MergeFrom(const PlayerPropChangeReasonNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPropChangeReasonNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PropChangeReason reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::proto::PropChangeReason reason() const;
  void set_reason(::proto::PropChangeReason value);

  // uint32 prop_type = 6;
  void clear_prop_type();
  static const int kPropTypeFieldNumber = 6;
  ::google::protobuf::uint32 prop_type() const;
  void set_prop_type(::google::protobuf::uint32 value);

  // float cur_value = 11;
  void clear_cur_value();
  static const int kCurValueFieldNumber = 11;
  float cur_value() const;
  void set_cur_value(float value);

  // float old_value = 12;
  void clear_old_value();
  static const int kOldValueFieldNumber = 12;
  float old_value() const;
  void set_old_value(float value);

  // @@protoc_insertion_point(class_scope:proto.PlayerPropChangeReasonNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  ::google::protobuf::uint32 prop_type_;
  float cur_value_;
  float old_value_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarPropNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarPropNotify) */ {
 public:
  AvatarPropNotify();
  virtual ~AvatarPropNotify();

  AvatarPropNotify(const AvatarPropNotify& from);

  inline AvatarPropNotify& operator=(const AvatarPropNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarPropNotify(AvatarPropNotify&& from) noexcept
    : AvatarPropNotify() {
    *this = ::std::move(from);
  }

  inline AvatarPropNotify& operator=(AvatarPropNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarPropNotify& default_instance();

  static inline const AvatarPropNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarPropNotify*>(
               &_AvatarPropNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(AvatarPropNotify* other);
  friend void swap(AvatarPropNotify& a, AvatarPropNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarPropNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarPropNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarPropNotify& from);
  void MergeFrom(const AvatarPropNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarPropNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, int64> prop_map = 14;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 14;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >*
      mutable_prop_map();

  // uint64 avatar_guid = 15;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 15;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarPropNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarPropNotify_PropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > SuperType;
    AvatarPropNotify_PropMapEntry();
    AvatarPropNotify_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarPropNotify_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarPropNotify_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarPropNotify_PropMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > prop_map_;
  private:
  ::google::protobuf::uint64 avatar_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkNewNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkNewNotify) */ {
 public:
  MarkNewNotify();
  virtual ~MarkNewNotify();

  MarkNewNotify(const MarkNewNotify& from);

  inline MarkNewNotify& operator=(const MarkNewNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkNewNotify(MarkNewNotify&& from) noexcept
    : MarkNewNotify() {
    *this = ::std::move(from);
  }

  inline MarkNewNotify& operator=(MarkNewNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkNewNotify& default_instance();

  static inline const MarkNewNotify* internal_default_instance() {
    return reinterpret_cast<const MarkNewNotify*>(
               &_MarkNewNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(MarkNewNotify* other);
  friend void swap(MarkNewNotify& a, MarkNewNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkNewNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkNewNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkNewNotify& from);
  void MergeFrom(const MarkNewNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkNewNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id_list = 7;
  int id_list_size() const;
  void clear_id_list();
  static const int kIdListFieldNumber = 7;
  ::google::protobuf::uint32 id_list(int index) const;
  void set_id_list(int index, ::google::protobuf::uint32 value);
  void add_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id_list();

  // uint32 mark_new_type = 11;
  void clear_mark_new_type();
  static const int kMarkNewTypeFieldNumber = 11;
  ::google::protobuf::uint32 mark_new_type() const;
  void set_mark_new_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MarkNewNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_list_;
  mutable int _id_list_cached_byte_size_;
  ::google::protobuf::uint32 mark_new_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fproperty_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EntityPropNotify

// map<uint32, .proto.PropValue> prop_map = 1;
inline int EntityPropNotify::prop_map_size() const {
  return prop_map_.size();
}
inline void EntityPropNotify::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
EntityPropNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.EntityPropNotify.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
EntityPropNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.EntityPropNotify.prop_map)
  return prop_map_.MutableMap();
}

// uint32 entity_id = 14;
inline void EntityPropNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityPropNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityPropNotify.entity_id)
  return entity_id_;
}
inline void EntityPropNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityPropNotify.entity_id)
}

// -------------------------------------------------------------------

// LifeStateChangeNotify

// uint32 entity_id = 4;
inline void LifeStateChangeNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 LifeStateChangeNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.LifeStateChangeNotify.entity_id)
  return entity_id_;
}
inline void LifeStateChangeNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LifeStateChangeNotify.entity_id)
}

// repeated .proto.ServerBuff server_buff_list = 6;
inline int LifeStateChangeNotify::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void LifeStateChangeNotify::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& LifeStateChangeNotify::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LifeStateChangeNotify.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* LifeStateChangeNotify::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.LifeStateChangeNotify.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* LifeStateChangeNotify::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.LifeStateChangeNotify.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
LifeStateChangeNotify::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LifeStateChangeNotify.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
LifeStateChangeNotify::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.LifeStateChangeNotify.server_buff_list)
  return server_buff_list_;
}

// string attack_tag = 7;
inline void LifeStateChangeNotify::clear_attack_tag() {
  attack_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LifeStateChangeNotify::attack_tag() const {
  // @@protoc_insertion_point(field_get:proto.LifeStateChangeNotify.attack_tag)
  return attack_tag_.GetNoArena();
}
inline void LifeStateChangeNotify::set_attack_tag(const ::std::string& value) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LifeStateChangeNotify.attack_tag)
}
#if LANG_CXX11
inline void LifeStateChangeNotify::set_attack_tag(::std::string&& value) {
  
  attack_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LifeStateChangeNotify.attack_tag)
}
#endif
inline void LifeStateChangeNotify::set_attack_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LifeStateChangeNotify.attack_tag)
}
inline void LifeStateChangeNotify::set_attack_tag(const char* value, size_t size) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LifeStateChangeNotify.attack_tag)
}
inline ::std::string* LifeStateChangeNotify::mutable_attack_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.LifeStateChangeNotify.attack_tag)
  return attack_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LifeStateChangeNotify::release_attack_tag() {
  // @@protoc_insertion_point(field_release:proto.LifeStateChangeNotify.attack_tag)
  
  return attack_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LifeStateChangeNotify::set_allocated_attack_tag(::std::string* attack_tag) {
  if (attack_tag != NULL) {
    
  } else {
    
  }
  attack_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attack_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.LifeStateChangeNotify.attack_tag)
}

// uint32 move_reliable_seq = 15;
inline void LifeStateChangeNotify::clear_move_reliable_seq() {
  move_reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 LifeStateChangeNotify::move_reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.LifeStateChangeNotify.move_reliable_seq)
  return move_reliable_seq_;
}
inline void LifeStateChangeNotify::set_move_reliable_seq(::google::protobuf::uint32 value) {
  
  move_reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.LifeStateChangeNotify.move_reliable_seq)
}

// .proto.PlayerDieType die_type = 14;
inline void LifeStateChangeNotify::clear_die_type() {
  die_type_ = 0;
}
inline ::proto::PlayerDieType LifeStateChangeNotify::die_type() const {
  // @@protoc_insertion_point(field_get:proto.LifeStateChangeNotify.die_type)
  return static_cast< ::proto::PlayerDieType >(die_type_);
}
inline void LifeStateChangeNotify::set_die_type(::proto::PlayerDieType value) {
  
  die_type_ = value;
  // @@protoc_insertion_point(field_set:proto.LifeStateChangeNotify.die_type)
}

// uint32 life_state = 5;
inline void LifeStateChangeNotify::clear_life_state() {
  life_state_ = 0u;
}
inline ::google::protobuf::uint32 LifeStateChangeNotify::life_state() const {
  // @@protoc_insertion_point(field_get:proto.LifeStateChangeNotify.life_state)
  return life_state_;
}
inline void LifeStateChangeNotify::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.LifeStateChangeNotify.life_state)
}

// uint32 source_entity_id = 1;
inline void LifeStateChangeNotify::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 LifeStateChangeNotify::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.LifeStateChangeNotify.source_entity_id)
  return source_entity_id_;
}
inline void LifeStateChangeNotify::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LifeStateChangeNotify.source_entity_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EntityFightPropNotify

// uint32 entity_id = 4;
inline void EntityFightPropNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityFightPropNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropNotify.entity_id)
  return entity_id_;
}
inline void EntityFightPropNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropNotify.entity_id)
}

// map<uint32, float> fight_prop_map = 8;
inline int EntityFightPropNotify::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void EntityFightPropNotify::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
EntityFightPropNotify::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.EntityFightPropNotify.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
EntityFightPropNotify::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.EntityFightPropNotify.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EntityFightPropUpdateNotify

// map<uint32, float> fight_prop_map = 15;
inline int EntityFightPropUpdateNotify::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void EntityFightPropUpdateNotify::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
EntityFightPropUpdateNotify::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.EntityFightPropUpdateNotify.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
EntityFightPropUpdateNotify::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.EntityFightPropUpdateNotify.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// uint32 entity_id = 13;
inline void EntityFightPropUpdateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityFightPropUpdateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropUpdateNotify.entity_id)
  return entity_id_;
}
inline void EntityFightPropUpdateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropUpdateNotify.entity_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarFightPropNotify

// map<uint32, float> fight_prop_map = 8;
inline int AvatarFightPropNotify::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void AvatarFightPropNotify::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarFightPropNotify::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarFightPropNotify.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarFightPropNotify::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarFightPropNotify.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// uint64 avatar_guid = 4;
inline void AvatarFightPropNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarFightPropNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFightPropNotify.avatar_guid)
  return avatar_guid_;
}
inline void AvatarFightPropNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFightPropNotify.avatar_guid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarFightPropUpdateNotify

// map<uint32, float> fight_prop_map = 15;
inline int AvatarFightPropUpdateNotify::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void AvatarFightPropUpdateNotify::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarFightPropUpdateNotify::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarFightPropUpdateNotify.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarFightPropUpdateNotify::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarFightPropUpdateNotify.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// uint64 avatar_guid = 13;
inline void AvatarFightPropUpdateNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarFightPropUpdateNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFightPropUpdateNotify.avatar_guid)
  return avatar_guid_;
}
inline void AvatarFightPropUpdateNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFightPropUpdateNotify.avatar_guid)
}

// -------------------------------------------------------------------

// EntityFightPropChangeReasonNotify

// repeated uint32 param_list = 10;
inline int EntityFightPropChangeReasonNotify::param_list_size() const {
  return param_list_.size();
}
inline void EntityFightPropChangeReasonNotify::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::uint32 EntityFightPropChangeReasonNotify::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropChangeReasonNotify.param_list)
  return param_list_.Get(index);
}
inline void EntityFightPropChangeReasonNotify::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.EntityFightPropChangeReasonNotify.param_list)
}
inline void EntityFightPropChangeReasonNotify::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.EntityFightPropChangeReasonNotify.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EntityFightPropChangeReasonNotify::param_list() const {
  // @@protoc_insertion_point(field_list:proto.EntityFightPropChangeReasonNotify.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EntityFightPropChangeReasonNotify::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EntityFightPropChangeReasonNotify.param_list)
  return &param_list_;
}

// float prop_delta = 1;
inline void EntityFightPropChangeReasonNotify::clear_prop_delta() {
  prop_delta_ = 0;
}
inline float EntityFightPropChangeReasonNotify::prop_delta() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropChangeReasonNotify.prop_delta)
  return prop_delta_;
}
inline void EntityFightPropChangeReasonNotify::set_prop_delta(float value) {
  
  prop_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropChangeReasonNotify.prop_delta)
}

// .proto.ChangHpReason change_hp_reason = 14;
inline void EntityFightPropChangeReasonNotify::clear_change_hp_reason() {
  change_hp_reason_ = 0;
}
inline ::proto::ChangHpReason EntityFightPropChangeReasonNotify::change_hp_reason() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropChangeReasonNotify.change_hp_reason)
  return static_cast< ::proto::ChangHpReason >(change_hp_reason_);
}
inline void EntityFightPropChangeReasonNotify::set_change_hp_reason(::proto::ChangHpReason value) {
  
  change_hp_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropChangeReasonNotify.change_hp_reason)
}

// .proto.PropChangeReason reason = 6;
inline void EntityFightPropChangeReasonNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::PropChangeReason EntityFightPropChangeReasonNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropChangeReasonNotify.reason)
  return static_cast< ::proto::PropChangeReason >(reason_);
}
inline void EntityFightPropChangeReasonNotify::set_reason(::proto::PropChangeReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropChangeReasonNotify.reason)
}

// uint32 entity_id = 5;
inline void EntityFightPropChangeReasonNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityFightPropChangeReasonNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropChangeReasonNotify.entity_id)
  return entity_id_;
}
inline void EntityFightPropChangeReasonNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropChangeReasonNotify.entity_id)
}

// .proto.ChangeEnergyReason change_energy_reson = 15;
inline void EntityFightPropChangeReasonNotify::clear_change_energy_reson() {
  change_energy_reson_ = 0;
}
inline ::proto::ChangeEnergyReason EntityFightPropChangeReasonNotify::change_energy_reson() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropChangeReasonNotify.change_energy_reson)
  return static_cast< ::proto::ChangeEnergyReason >(change_energy_reson_);
}
inline void EntityFightPropChangeReasonNotify::set_change_energy_reson(::proto::ChangeEnergyReason value) {
  
  change_energy_reson_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropChangeReasonNotify.change_energy_reson)
}

// uint32 prop_type = 13;
inline void EntityFightPropChangeReasonNotify::clear_prop_type() {
  prop_type_ = 0u;
}
inline ::google::protobuf::uint32 EntityFightPropChangeReasonNotify::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.EntityFightPropChangeReasonNotify.prop_type)
  return prop_type_;
}
inline void EntityFightPropChangeReasonNotify::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityFightPropChangeReasonNotify.prop_type)
}

// -------------------------------------------------------------------

// AvatarLifeStateChangeNotify

// uint32 life_state = 13;
inline void AvatarLifeStateChangeNotify::clear_life_state() {
  life_state_ = 0u;
}
inline ::google::protobuf::uint32 AvatarLifeStateChangeNotify::life_state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarLifeStateChangeNotify.life_state)
  return life_state_;
}
inline void AvatarLifeStateChangeNotify::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarLifeStateChangeNotify.life_state)
}

// string attack_tag = 10;
inline void AvatarLifeStateChangeNotify::clear_attack_tag() {
  attack_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarLifeStateChangeNotify::attack_tag() const {
  // @@protoc_insertion_point(field_get:proto.AvatarLifeStateChangeNotify.attack_tag)
  return attack_tag_.GetNoArena();
}
inline void AvatarLifeStateChangeNotify::set_attack_tag(const ::std::string& value) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarLifeStateChangeNotify.attack_tag)
}
#if LANG_CXX11
inline void AvatarLifeStateChangeNotify::set_attack_tag(::std::string&& value) {
  
  attack_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarLifeStateChangeNotify.attack_tag)
}
#endif
inline void AvatarLifeStateChangeNotify::set_attack_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarLifeStateChangeNotify.attack_tag)
}
inline void AvatarLifeStateChangeNotify::set_attack_tag(const char* value, size_t size) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarLifeStateChangeNotify.attack_tag)
}
inline ::std::string* AvatarLifeStateChangeNotify::mutable_attack_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarLifeStateChangeNotify.attack_tag)
  return attack_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarLifeStateChangeNotify::release_attack_tag() {
  // @@protoc_insertion_point(field_release:proto.AvatarLifeStateChangeNotify.attack_tag)
  
  return attack_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarLifeStateChangeNotify::set_allocated_attack_tag(::std::string* attack_tag) {
  if (attack_tag != NULL) {
    
  } else {
    
  }
  attack_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attack_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarLifeStateChangeNotify.attack_tag)
}

// .proto.PlayerDieType die_type = 2;
inline void AvatarLifeStateChangeNotify::clear_die_type() {
  die_type_ = 0;
}
inline ::proto::PlayerDieType AvatarLifeStateChangeNotify::die_type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarLifeStateChangeNotify.die_type)
  return static_cast< ::proto::PlayerDieType >(die_type_);
}
inline void AvatarLifeStateChangeNotify::set_die_type(::proto::PlayerDieType value) {
  
  die_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarLifeStateChangeNotify.die_type)
}

// repeated .proto.ServerBuff server_buff_list = 12;
inline int AvatarLifeStateChangeNotify::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void AvatarLifeStateChangeNotify::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& AvatarLifeStateChangeNotify::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarLifeStateChangeNotify.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* AvatarLifeStateChangeNotify::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarLifeStateChangeNotify.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* AvatarLifeStateChangeNotify::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarLifeStateChangeNotify.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
AvatarLifeStateChangeNotify::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarLifeStateChangeNotify.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
AvatarLifeStateChangeNotify::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarLifeStateChangeNotify.server_buff_list)
  return server_buff_list_;
}

// uint32 move_reliable_seq = 5;
inline void AvatarLifeStateChangeNotify::clear_move_reliable_seq() {
  move_reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 AvatarLifeStateChangeNotify::move_reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.AvatarLifeStateChangeNotify.move_reliable_seq)
  return move_reliable_seq_;
}
inline void AvatarLifeStateChangeNotify::set_move_reliable_seq(::google::protobuf::uint32 value) {
  
  move_reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarLifeStateChangeNotify.move_reliable_seq)
}

// uint32 source_entity_id = 3;
inline void AvatarLifeStateChangeNotify::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarLifeStateChangeNotify::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarLifeStateChangeNotify.source_entity_id)
  return source_entity_id_;
}
inline void AvatarLifeStateChangeNotify::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarLifeStateChangeNotify.source_entity_id)
}

// uint64 avatar_guid = 11;
inline void AvatarLifeStateChangeNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarLifeStateChangeNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarLifeStateChangeNotify.avatar_guid)
  return avatar_guid_;
}
inline void AvatarLifeStateChangeNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarLifeStateChangeNotify.avatar_guid)
}

// -------------------------------------------------------------------

// AvatarPropChangeReasonNotify

// float old_value = 11;
inline void AvatarPropChangeReasonNotify::clear_old_value() {
  old_value_ = 0;
}
inline float AvatarPropChangeReasonNotify::old_value() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPropChangeReasonNotify.old_value)
  return old_value_;
}
inline void AvatarPropChangeReasonNotify::set_old_value(float value) {
  
  old_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPropChangeReasonNotify.old_value)
}

// .proto.PropChangeReason reason = 5;
inline void AvatarPropChangeReasonNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::PropChangeReason AvatarPropChangeReasonNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPropChangeReasonNotify.reason)
  return static_cast< ::proto::PropChangeReason >(reason_);
}
inline void AvatarPropChangeReasonNotify::set_reason(::proto::PropChangeReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPropChangeReasonNotify.reason)
}

// uint32 prop_type = 1;
inline void AvatarPropChangeReasonNotify::clear_prop_type() {
  prop_type_ = 0u;
}
inline ::google::protobuf::uint32 AvatarPropChangeReasonNotify::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPropChangeReasonNotify.prop_type)
  return prop_type_;
}
inline void AvatarPropChangeReasonNotify::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPropChangeReasonNotify.prop_type)
}

// uint64 avatar_guid = 8;
inline void AvatarPropChangeReasonNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarPropChangeReasonNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPropChangeReasonNotify.avatar_guid)
  return avatar_guid_;
}
inline void AvatarPropChangeReasonNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPropChangeReasonNotify.avatar_guid)
}

// float cur_value = 15;
inline void AvatarPropChangeReasonNotify::clear_cur_value() {
  cur_value_ = 0;
}
inline float AvatarPropChangeReasonNotify::cur_value() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPropChangeReasonNotify.cur_value)
  return cur_value_;
}
inline void AvatarPropChangeReasonNotify::set_cur_value(float value) {
  
  cur_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPropChangeReasonNotify.cur_value)
}

// -------------------------------------------------------------------

// PlayerPropChangeReasonNotify

// uint32 prop_type = 6;
inline void PlayerPropChangeReasonNotify::clear_prop_type() {
  prop_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerPropChangeReasonNotify::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeReasonNotify.prop_type)
  return prop_type_;
}
inline void PlayerPropChangeReasonNotify::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeReasonNotify.prop_type)
}

// float old_value = 12;
inline void PlayerPropChangeReasonNotify::clear_old_value() {
  old_value_ = 0;
}
inline float PlayerPropChangeReasonNotify::old_value() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeReasonNotify.old_value)
  return old_value_;
}
inline void PlayerPropChangeReasonNotify::set_old_value(float value) {
  
  old_value_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeReasonNotify.old_value)
}

// .proto.PropChangeReason reason = 1;
inline void PlayerPropChangeReasonNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::PropChangeReason PlayerPropChangeReasonNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeReasonNotify.reason)
  return static_cast< ::proto::PropChangeReason >(reason_);
}
inline void PlayerPropChangeReasonNotify::set_reason(::proto::PropChangeReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeReasonNotify.reason)
}

// float cur_value = 11;
inline void PlayerPropChangeReasonNotify::clear_cur_value() {
  cur_value_ = 0;
}
inline float PlayerPropChangeReasonNotify::cur_value() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeReasonNotify.cur_value)
  return cur_value_;
}
inline void PlayerPropChangeReasonNotify::set_cur_value(float value) {
  
  cur_value_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeReasonNotify.cur_value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarPropNotify

// map<uint32, int64> prop_map = 14;
inline int AvatarPropNotify::prop_map_size() const {
  return prop_map_.size();
}
inline void AvatarPropNotify::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >&
AvatarPropNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarPropNotify.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >*
AvatarPropNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarPropNotify.prop_map)
  return prop_map_.MutableMap();
}

// uint64 avatar_guid = 15;
inline void AvatarPropNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarPropNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarPropNotify.avatar_guid)
  return avatar_guid_;
}
inline void AvatarPropNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarPropNotify.avatar_guid)
}

// -------------------------------------------------------------------

// MarkNewNotify

// repeated uint32 id_list = 7;
inline int MarkNewNotify::id_list_size() const {
  return id_list_.size();
}
inline void MarkNewNotify::clear_id_list() {
  id_list_.Clear();
}
inline ::google::protobuf::uint32 MarkNewNotify::id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MarkNewNotify.id_list)
  return id_list_.Get(index);
}
inline void MarkNewNotify::set_id_list(int index, ::google::protobuf::uint32 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MarkNewNotify.id_list)
}
inline void MarkNewNotify::add_id_list(::google::protobuf::uint32 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MarkNewNotify.id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MarkNewNotify::id_list() const {
  // @@protoc_insertion_point(field_list:proto.MarkNewNotify.id_list)
  return id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MarkNewNotify::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MarkNewNotify.id_list)
  return &id_list_;
}

// uint32 mark_new_type = 11;
inline void MarkNewNotify::clear_mark_new_type() {
  mark_new_type_ = 0u;
}
inline ::google::protobuf::uint32 MarkNewNotify::mark_new_type() const {
  // @@protoc_insertion_point(field_get:proto.MarkNewNotify.mark_new_type)
  return mark_new_type_;
}
inline void MarkNewNotify::set_mark_new_type(::google::protobuf::uint32 value) {
  
  mark_new_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkNewNotify.mark_new_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::PropChangeReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PropChangeReason>() {
  return ::proto::PropChangeReason_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeEnergyReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeEnergyReason>() {
  return ::proto::ChangeEnergyReason_descriptor();
}
template <> struct is_proto_enum< ::proto::MarkNewType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MarkNewType>() {
  return ::proto::MarkNewType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fproperty_2eproto__INCLUDED
