// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_match.proto

#ifndef PROTOBUF_cmd_2fcmd_5fmatch_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fmatch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class GCGMatchInfo;
class GCGMatchInfoDefaultTypeInternal;
extern GCGMatchInfoDefaultTypeInternal _GCGMatchInfo_default_instance_;
class GeneralMatchInfo;
class GeneralMatchInfoDefaultTypeInternal;
extern GeneralMatchInfoDefaultTypeInternal _GeneralMatchInfo_default_instance_;
class MatchPlayerInfo;
class MatchPlayerInfoDefaultTypeInternal;
extern MatchPlayerInfoDefaultTypeInternal _MatchPlayerInfo_default_instance_;
class PlayerAllowEnterMpAfterAgreeMatchNotify;
class PlayerAllowEnterMpAfterAgreeMatchNotifyDefaultTypeInternal;
extern PlayerAllowEnterMpAfterAgreeMatchNotifyDefaultTypeInternal _PlayerAllowEnterMpAfterAgreeMatchNotify_default_instance_;
class PlayerApplyEnterMpAfterMatchAgreedNotify;
class PlayerApplyEnterMpAfterMatchAgreedNotifyDefaultTypeInternal;
extern PlayerApplyEnterMpAfterMatchAgreedNotifyDefaultTypeInternal _PlayerApplyEnterMpAfterMatchAgreedNotify_default_instance_;
class PlayerCancelMatchReq;
class PlayerCancelMatchReqDefaultTypeInternal;
extern PlayerCancelMatchReqDefaultTypeInternal _PlayerCancelMatchReq_default_instance_;
class PlayerCancelMatchRsp;
class PlayerCancelMatchRspDefaultTypeInternal;
extern PlayerCancelMatchRspDefaultTypeInternal _PlayerCancelMatchRsp_default_instance_;
class PlayerConfirmMatchReq;
class PlayerConfirmMatchReqDefaultTypeInternal;
extern PlayerConfirmMatchReqDefaultTypeInternal _PlayerConfirmMatchReq_default_instance_;
class PlayerConfirmMatchRsp;
class PlayerConfirmMatchRspDefaultTypeInternal;
extern PlayerConfirmMatchRspDefaultTypeInternal _PlayerConfirmMatchRsp_default_instance_;
class PlayerGCGMatchConfirmNotify;
class PlayerGCGMatchConfirmNotifyDefaultTypeInternal;
extern PlayerGCGMatchConfirmNotifyDefaultTypeInternal _PlayerGCGMatchConfirmNotify_default_instance_;
class PlayerGCGMatchDismissNotify;
class PlayerGCGMatchDismissNotifyDefaultTypeInternal;
extern PlayerGCGMatchDismissNotifyDefaultTypeInternal _PlayerGCGMatchDismissNotify_default_instance_;
class PlayerGeneralMatchConfirmNotify;
class PlayerGeneralMatchConfirmNotifyDefaultTypeInternal;
extern PlayerGeneralMatchConfirmNotifyDefaultTypeInternal _PlayerGeneralMatchConfirmNotify_default_instance_;
class PlayerGeneralMatchDismissNotify;
class PlayerGeneralMatchDismissNotifyDefaultTypeInternal;
extern PlayerGeneralMatchDismissNotifyDefaultTypeInternal _PlayerGeneralMatchDismissNotify_default_instance_;
class PlayerGetForceQuitBanInfoReq;
class PlayerGetForceQuitBanInfoReqDefaultTypeInternal;
extern PlayerGetForceQuitBanInfoReqDefaultTypeInternal _PlayerGetForceQuitBanInfoReq_default_instance_;
class PlayerGetForceQuitBanInfoRsp;
class PlayerGetForceQuitBanInfoRspDefaultTypeInternal;
extern PlayerGetForceQuitBanInfoRspDefaultTypeInternal _PlayerGetForceQuitBanInfoRsp_default_instance_;
class PlayerMatchAgreedResultNotify;
class PlayerMatchAgreedResultNotifyDefaultTypeInternal;
extern PlayerMatchAgreedResultNotifyDefaultTypeInternal _PlayerMatchAgreedResultNotify_default_instance_;
class PlayerMatchInfoNotify;
class PlayerMatchInfoNotifyDefaultTypeInternal;
extern PlayerMatchInfoNotifyDefaultTypeInternal _PlayerMatchInfoNotify_default_instance_;
class PlayerMatchStopNotify;
class PlayerMatchStopNotifyDefaultTypeInternal;
extern PlayerMatchStopNotifyDefaultTypeInternal _PlayerMatchStopNotify_default_instance_;
class PlayerMatchSuccNotify;
class PlayerMatchSuccNotifyDefaultTypeInternal;
extern PlayerMatchSuccNotifyDefaultTypeInternal _PlayerMatchSuccNotify_default_instance_;
class PlayerStartMatchReq;
class PlayerStartMatchReqDefaultTypeInternal;
extern PlayerStartMatchReqDefaultTypeInternal _PlayerStartMatchReq_default_instance_;
class PlayerStartMatchRsp;
class PlayerStartMatchRspDefaultTypeInternal;
extern PlayerStartMatchRspDefaultTypeInternal _PlayerStartMatchRsp_default_instance_;
class ServerTryCancelGeneralMatchNotify;
class ServerTryCancelGeneralMatchNotifyDefaultTypeInternal;
extern ServerTryCancelGeneralMatchNotifyDefaultTypeInternal _ServerTryCancelGeneralMatchNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fmatch_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fmatch_2eproto

enum PlayerMatchAgreedResultNotify_Reason {
  PlayerMatchAgreedResultNotify_Reason_SUCC = 0,
  PlayerMatchAgreedResultNotify_Reason_TARGET_SCENE_CANNOT_ENTER = 1,
  PlayerMatchAgreedResultNotify_Reason_SELF_MP_UNAVAILABLE = 2,
  PlayerMatchAgreedResultNotify_Reason_OTHER_DATA_VERSION_NOT_LATEST = 3,
  PlayerMatchAgreedResultNotify_Reason_DATA_VERSION_NOT_LATEST = 4,
  PlayerMatchAgreedResultNotify_Reason_PlayerMatchAgreedResultNotify_Reason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerMatchAgreedResultNotify_Reason_PlayerMatchAgreedResultNotify_Reason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerMatchAgreedResultNotify_Reason_IsValid(int value);
const PlayerMatchAgreedResultNotify_Reason PlayerMatchAgreedResultNotify_Reason_Reason_MIN = PlayerMatchAgreedResultNotify_Reason_SUCC;
const PlayerMatchAgreedResultNotify_Reason PlayerMatchAgreedResultNotify_Reason_Reason_MAX = PlayerMatchAgreedResultNotify_Reason_DATA_VERSION_NOT_LATEST;
const int PlayerMatchAgreedResultNotify_Reason_Reason_ARRAYSIZE = PlayerMatchAgreedResultNotify_Reason_Reason_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerMatchAgreedResultNotify_Reason_descriptor();
inline const ::std::string& PlayerMatchAgreedResultNotify_Reason_Name(PlayerMatchAgreedResultNotify_Reason value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerMatchAgreedResultNotify_Reason_descriptor(), value);
}
inline bool PlayerMatchAgreedResultNotify_Reason_Parse(
    const ::std::string& name, PlayerMatchAgreedResultNotify_Reason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerMatchAgreedResultNotify_Reason>(
    PlayerMatchAgreedResultNotify_Reason_descriptor(), name, value);
}
// ===================================================================

class PlayerStartMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerStartMatchReq) */ {
 public:
  PlayerStartMatchReq();
  virtual ~PlayerStartMatchReq();

  PlayerStartMatchReq(const PlayerStartMatchReq& from);

  inline PlayerStartMatchReq& operator=(const PlayerStartMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerStartMatchReq(PlayerStartMatchReq&& from) noexcept
    : PlayerStartMatchReq() {
    *this = ::std::move(from);
  }

  inline PlayerStartMatchReq& operator=(PlayerStartMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerStartMatchReq& default_instance();

  static inline const PlayerStartMatchReq* internal_default_instance() {
    return reinterpret_cast<const PlayerStartMatchReq*>(
               &_PlayerStartMatchReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerStartMatchReq* other);
  friend void swap(PlayerStartMatchReq& a, PlayerStartMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerStartMatchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerStartMatchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerStartMatchReq& from);
  void MergeFrom(const PlayerStartMatchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerStartMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 match_param_list = 11;
  int match_param_list_size() const;
  void clear_match_param_list();
  static const int kMatchParamListFieldNumber = 11;
  ::google::protobuf::uint32 match_param_list(int index) const;
  void set_match_param_list(int index, ::google::protobuf::uint32 value);
  void add_match_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      match_param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_match_param_list();

  // uint32 dungeon_id = 1;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 1;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // .proto.MatchType match_type = 3;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 3;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 mp_play_id = 15;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 15;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // uint32 match_id = 6;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 6;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 mechanicus_difficult_level = 12;
  void clear_mechanicus_difficult_level();
  static const int kMechanicusDifficultLevelFieldNumber = 12;
  ::google::protobuf::uint32 mechanicus_difficult_level() const;
  void set_mechanicus_difficult_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerStartMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > match_param_list_;
  mutable int _match_param_list_cached_byte_size_;
  ::google::protobuf::uint32 dungeon_id_;
  int match_type_;
  ::google::protobuf::uint32 mp_play_id_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 mechanicus_difficult_level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerStartMatchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerStartMatchRsp) */ {
 public:
  PlayerStartMatchRsp();
  virtual ~PlayerStartMatchRsp();

  PlayerStartMatchRsp(const PlayerStartMatchRsp& from);

  inline PlayerStartMatchRsp& operator=(const PlayerStartMatchRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerStartMatchRsp(PlayerStartMatchRsp&& from) noexcept
    : PlayerStartMatchRsp() {
    *this = ::std::move(from);
  }

  inline PlayerStartMatchRsp& operator=(PlayerStartMatchRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerStartMatchRsp& default_instance();

  static inline const PlayerStartMatchRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerStartMatchRsp*>(
               &_PlayerStartMatchRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlayerStartMatchRsp* other);
  friend void swap(PlayerStartMatchRsp& a, PlayerStartMatchRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerStartMatchRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerStartMatchRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerStartMatchRsp& from);
  void MergeFrom(const PlayerStartMatchRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerStartMatchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 mechanicus_difficult_level = 2;
  void clear_mechanicus_difficult_level();
  static const int kMechanicusDifficultLevelFieldNumber = 2;
  ::google::protobuf::uint32 mechanicus_difficult_level() const;
  void set_mechanicus_difficult_level(::google::protobuf::uint32 value);

  // uint32 dungeon_id = 3;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 3;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 param = 4;
  void clear_param();
  static const int kParamFieldNumber = 4;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // uint32 punish_end_time = 5;
  void clear_punish_end_time();
  static const int kPunishEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 punish_end_time() const;
  void set_punish_end_time(::google::protobuf::uint32 value);

  // .proto.MatchType match_type = 7;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 7;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 match_id = 8;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 8;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 13;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 13;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerStartMatchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 mechanicus_difficult_level_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::uint32 punish_end_time_;
  int match_type_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 mp_play_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMatchInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMatchInfoNotify) */ {
 public:
  PlayerMatchInfoNotify();
  virtual ~PlayerMatchInfoNotify();

  PlayerMatchInfoNotify(const PlayerMatchInfoNotify& from);

  inline PlayerMatchInfoNotify& operator=(const PlayerMatchInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMatchInfoNotify(PlayerMatchInfoNotify&& from) noexcept
    : PlayerMatchInfoNotify() {
    *this = ::std::move(from);
  }

  inline PlayerMatchInfoNotify& operator=(PlayerMatchInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMatchInfoNotify& default_instance();

  static inline const PlayerMatchInfoNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerMatchInfoNotify*>(
               &_PlayerMatchInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlayerMatchInfoNotify* other);
  friend void swap(PlayerMatchInfoNotify& a, PlayerMatchInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMatchInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMatchInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMatchInfoNotify& from);
  void MergeFrom(const PlayerMatchInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMatchInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 match_param_list = 6;
  int match_param_list_size() const;
  void clear_match_param_list();
  static const int kMatchParamListFieldNumber = 6;
  ::google::protobuf::uint32 match_param_list(int index) const;
  void set_match_param_list(int index, ::google::protobuf::uint32 value);
  void add_match_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      match_param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_match_param_list();

  // uint32 estimate_match_cost_time = 3;
  void clear_estimate_match_cost_time();
  static const int kEstimateMatchCostTimeFieldNumber = 3;
  ::google::protobuf::uint32 estimate_match_cost_time() const;
  void set_estimate_match_cost_time(::google::protobuf::uint32 value);

  // uint32 match_begin_time = 4;
  void clear_match_begin_time();
  static const int kMatchBeginTimeFieldNumber = 4;
  ::google::protobuf::uint32 match_begin_time() const;
  void set_match_begin_time(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 5;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 5;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // uint32 match_id = 8;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 8;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 dungeon_id = 10;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 10;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // .proto.MatchType match_type = 11;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 11;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 mechanicus_difficult_level = 12;
  void clear_mechanicus_difficult_level();
  static const int kMechanicusDifficultLevelFieldNumber = 12;
  ::google::protobuf::uint32 mechanicus_difficult_level() const;
  void set_mechanicus_difficult_level(::google::protobuf::uint32 value);

  // uint32 host_uid = 13;
  void clear_host_uid();
  static const int kHostUidFieldNumber = 13;
  ::google::protobuf::uint32 host_uid() const;
  void set_host_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMatchInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > match_param_list_;
  mutable int _match_param_list_cached_byte_size_;
  ::google::protobuf::uint32 estimate_match_cost_time_;
  ::google::protobuf::uint32 match_begin_time_;
  ::google::protobuf::uint32 mp_play_id_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 dungeon_id_;
  int match_type_;
  ::google::protobuf::uint32 mechanicus_difficult_level_;
  ::google::protobuf::uint32 host_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCancelMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCancelMatchReq) */ {
 public:
  PlayerCancelMatchReq();
  virtual ~PlayerCancelMatchReq();

  PlayerCancelMatchReq(const PlayerCancelMatchReq& from);

  inline PlayerCancelMatchReq& operator=(const PlayerCancelMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCancelMatchReq(PlayerCancelMatchReq&& from) noexcept
    : PlayerCancelMatchReq() {
    *this = ::std::move(from);
  }

  inline PlayerCancelMatchReq& operator=(PlayerCancelMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCancelMatchReq& default_instance();

  static inline const PlayerCancelMatchReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCancelMatchReq*>(
               &_PlayerCancelMatchReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PlayerCancelMatchReq* other);
  friend void swap(PlayerCancelMatchReq& a, PlayerCancelMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCancelMatchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCancelMatchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCancelMatchReq& from);
  void MergeFrom(const PlayerCancelMatchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCancelMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchType match_type = 11;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 11;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCancelMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int match_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCancelMatchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCancelMatchRsp) */ {
 public:
  PlayerCancelMatchRsp();
  virtual ~PlayerCancelMatchRsp();

  PlayerCancelMatchRsp(const PlayerCancelMatchRsp& from);

  inline PlayerCancelMatchRsp& operator=(const PlayerCancelMatchRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCancelMatchRsp(PlayerCancelMatchRsp&& from) noexcept
    : PlayerCancelMatchRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCancelMatchRsp& operator=(PlayerCancelMatchRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCancelMatchRsp& default_instance();

  static inline const PlayerCancelMatchRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCancelMatchRsp*>(
               &_PlayerCancelMatchRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlayerCancelMatchRsp* other);
  friend void swap(PlayerCancelMatchRsp& a, PlayerCancelMatchRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCancelMatchRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCancelMatchRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCancelMatchRsp& from);
  void MergeFrom(const PlayerCancelMatchRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCancelMatchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 6;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MatchType match_type = 7;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 7;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCancelMatchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  int match_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMatchStopNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMatchStopNotify) */ {
 public:
  PlayerMatchStopNotify();
  virtual ~PlayerMatchStopNotify();

  PlayerMatchStopNotify(const PlayerMatchStopNotify& from);

  inline PlayerMatchStopNotify& operator=(const PlayerMatchStopNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMatchStopNotify(PlayerMatchStopNotify&& from) noexcept
    : PlayerMatchStopNotify() {
    *this = ::std::move(from);
  }

  inline PlayerMatchStopNotify& operator=(PlayerMatchStopNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMatchStopNotify& default_instance();

  static inline const PlayerMatchStopNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerMatchStopNotify*>(
               &_PlayerMatchStopNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlayerMatchStopNotify* other);
  friend void swap(PlayerMatchStopNotify& a, PlayerMatchStopNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMatchStopNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMatchStopNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMatchStopNotify& from);
  void MergeFrom(const PlayerMatchStopNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMatchStopNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchReason reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::proto::MatchReason reason() const;
  void set_reason(::proto::MatchReason value);

  // uint32 host_uid = 12;
  void clear_host_uid();
  static const int kHostUidFieldNumber = 12;
  ::google::protobuf::uint32 host_uid() const;
  void set_host_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMatchStopNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  ::google::protobuf::uint32 host_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchPlayerInfo) */ {
 public:
  MatchPlayerInfo();
  virtual ~MatchPlayerInfo();

  MatchPlayerInfo(const MatchPlayerInfo& from);

  inline MatchPlayerInfo& operator=(const MatchPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchPlayerInfo(MatchPlayerInfo&& from) noexcept
    : MatchPlayerInfo() {
    *this = ::std::move(from);
  }

  inline MatchPlayerInfo& operator=(MatchPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchPlayerInfo& default_instance();

  static inline const MatchPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const MatchPlayerInfo*>(
               &_MatchPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MatchPlayerInfo* other);
  friend void swap(MatchPlayerInfo& a, MatchPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchPlayerInfo& from);
  void MergeFrom(const MatchPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OnlinePlayerInfo player_info = 2;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 2;
  const ::proto::OnlinePlayerInfo& player_info() const;
  ::proto::OnlinePlayerInfo* mutable_player_info();
  ::proto::OnlinePlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::OnlinePlayerInfo* player_info);

  // bool is_agreed = 9;
  void clear_is_agreed();
  static const int kIsAgreedFieldNumber = 9;
  bool is_agreed() const;
  void set_is_agreed(bool value);

  // @@protoc_insertion_point(class_scope:proto.MatchPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OnlinePlayerInfo* player_info_;
  bool is_agreed_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeneralMatchInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GeneralMatchInfo) */ {
 public:
  GeneralMatchInfo();
  virtual ~GeneralMatchInfo();

  GeneralMatchInfo(const GeneralMatchInfo& from);

  inline GeneralMatchInfo& operator=(const GeneralMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeneralMatchInfo(GeneralMatchInfo&& from) noexcept
    : GeneralMatchInfo() {
    *this = ::std::move(from);
  }

  inline GeneralMatchInfo& operator=(GeneralMatchInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralMatchInfo& default_instance();

  static inline const GeneralMatchInfo* internal_default_instance() {
    return reinterpret_cast<const GeneralMatchInfo*>(
               &_GeneralMatchInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GeneralMatchInfo* other);
  friend void swap(GeneralMatchInfo& a, GeneralMatchInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeneralMatchInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GeneralMatchInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GeneralMatchInfo& from);
  void MergeFrom(const GeneralMatchInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GeneralMatchInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MatchPlayerInfo player_list = 5;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 5;
  const ::proto::MatchPlayerInfo& player_list(int index) const;
  ::proto::MatchPlayerInfo* mutable_player_list(int index);
  ::proto::MatchPlayerInfo* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >&
      player_list() const;

  // uint32 match_param = 1;
  void clear_match_param();
  static const int kMatchParamFieldNumber = 1;
  ::google::protobuf::uint32 match_param() const;
  void set_match_param(::google::protobuf::uint32 value);

  // uint32 match_id = 9;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 9;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GeneralMatchInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo > player_list_;
  ::google::protobuf::uint32 match_param_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GCGMatchInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GCGMatchInfo) */ {
 public:
  GCGMatchInfo();
  virtual ~GCGMatchInfo();

  GCGMatchInfo(const GCGMatchInfo& from);

  inline GCGMatchInfo& operator=(const GCGMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCGMatchInfo(GCGMatchInfo&& from) noexcept
    : GCGMatchInfo() {
    *this = ::std::move(from);
  }

  inline GCGMatchInfo& operator=(GCGMatchInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGMatchInfo& default_instance();

  static inline const GCGMatchInfo* internal_default_instance() {
    return reinterpret_cast<const GCGMatchInfo*>(
               &_GCGMatchInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GCGMatchInfo* other);
  friend void swap(GCGMatchInfo& a, GCGMatchInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCGMatchInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GCGMatchInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GCGMatchInfo& from);
  void MergeFrom(const GCGMatchInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GCGMatchInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MatchPlayerInfo player_list = 13;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 13;
  const ::proto::MatchPlayerInfo& player_list(int index) const;
  ::proto::MatchPlayerInfo* mutable_player_list(int index);
  ::proto::MatchPlayerInfo* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >&
      player_list() const;

  // @@protoc_insertion_point(class_scope:proto.GCGMatchInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo > player_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMatchSuccNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMatchSuccNotify) */ {
 public:
  PlayerMatchSuccNotify();
  virtual ~PlayerMatchSuccNotify();

  PlayerMatchSuccNotify(const PlayerMatchSuccNotify& from);

  inline PlayerMatchSuccNotify& operator=(const PlayerMatchSuccNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMatchSuccNotify(PlayerMatchSuccNotify&& from) noexcept
    : PlayerMatchSuccNotify() {
    *this = ::std::move(from);
  }

  inline PlayerMatchSuccNotify& operator=(PlayerMatchSuccNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMatchSuccNotify& default_instance();

  static inline const PlayerMatchSuccNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerMatchSuccNotify*>(
               &_PlayerMatchSuccNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PlayerMatchSuccNotify* other);
  friend void swap(PlayerMatchSuccNotify& a, PlayerMatchSuccNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMatchSuccNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMatchSuccNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMatchSuccNotify& from);
  void MergeFrom(const PlayerMatchSuccNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMatchSuccNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GeneralMatchInfo general_match_info = 7;
  bool has_general_match_info() const;
  void clear_general_match_info();
  static const int kGeneralMatchInfoFieldNumber = 7;
  const ::proto::GeneralMatchInfo& general_match_info() const;
  ::proto::GeneralMatchInfo* mutable_general_match_info();
  ::proto::GeneralMatchInfo* release_general_match_info();
  void set_allocated_general_match_info(::proto::GeneralMatchInfo* general_match_info);

  // .proto.GCGMatchInfo gcg_match_info = 11;
  bool has_gcg_match_info() const;
  void clear_gcg_match_info();
  static const int kGcgMatchInfoFieldNumber = 11;
  const ::proto::GCGMatchInfo& gcg_match_info() const;
  ::proto::GCGMatchInfo* mutable_gcg_match_info();
  ::proto::GCGMatchInfo* release_gcg_match_info();
  void set_allocated_gcg_match_info(::proto::GCGMatchInfo* gcg_match_info);

  // uint32 mechanicus_difficult_level = 1;
  void clear_mechanicus_difficult_level();
  static const int kMechanicusDifficultLevelFieldNumber = 1;
  ::google::protobuf::uint32 mechanicus_difficult_level() const;
  void set_mechanicus_difficult_level(::google::protobuf::uint32 value);

  // uint32 confirm_end_time = 2;
  void clear_confirm_end_time();
  static const int kConfirmEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 confirm_end_time() const;
  void set_confirm_end_time(::google::protobuf::uint32 value);

  // uint32 host_uid = 3;
  void clear_host_uid();
  static const int kHostUidFieldNumber = 3;
  ::google::protobuf::uint32 host_uid() const;
  void set_host_uid(::google::protobuf::uint32 value);

  // .proto.MatchType match_type = 5;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 5;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 dungeon_id = 6;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 6;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 mp_play_id = 15;
  void clear_mp_play_id();
  static const int kMpPlayIdFieldNumber = 15;
  ::google::protobuf::uint32 mp_play_id() const;
  void set_mp_play_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMatchSuccNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GeneralMatchInfo* general_match_info_;
  ::proto::GCGMatchInfo* gcg_match_info_;
  ::google::protobuf::uint32 mechanicus_difficult_level_;
  ::google::protobuf::uint32 confirm_end_time_;
  ::google::protobuf::uint32 host_uid_;
  int match_type_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 mp_play_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerConfirmMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerConfirmMatchReq) */ {
 public:
  PlayerConfirmMatchReq();
  virtual ~PlayerConfirmMatchReq();

  PlayerConfirmMatchReq(const PlayerConfirmMatchReq& from);

  inline PlayerConfirmMatchReq& operator=(const PlayerConfirmMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerConfirmMatchReq(PlayerConfirmMatchReq&& from) noexcept
    : PlayerConfirmMatchReq() {
    *this = ::std::move(from);
  }

  inline PlayerConfirmMatchReq& operator=(PlayerConfirmMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerConfirmMatchReq& default_instance();

  static inline const PlayerConfirmMatchReq* internal_default_instance() {
    return reinterpret_cast<const PlayerConfirmMatchReq*>(
               &_PlayerConfirmMatchReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PlayerConfirmMatchReq* other);
  friend void swap(PlayerConfirmMatchReq& a, PlayerConfirmMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerConfirmMatchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerConfirmMatchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerConfirmMatchReq& from);
  void MergeFrom(const PlayerConfirmMatchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerConfirmMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_agreed = 10;
  void clear_is_agreed();
  static const int kIsAgreedFieldNumber = 10;
  bool is_agreed() const;
  void set_is_agreed(bool value);

  // .proto.MatchType match_type = 12;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 12;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // @@protoc_insertion_point(class_scope:proto.PlayerConfirmMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_agreed_;
  int match_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerConfirmMatchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerConfirmMatchRsp) */ {
 public:
  PlayerConfirmMatchRsp();
  virtual ~PlayerConfirmMatchRsp();

  PlayerConfirmMatchRsp(const PlayerConfirmMatchRsp& from);

  inline PlayerConfirmMatchRsp& operator=(const PlayerConfirmMatchRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerConfirmMatchRsp(PlayerConfirmMatchRsp&& from) noexcept
    : PlayerConfirmMatchRsp() {
    *this = ::std::move(from);
  }

  inline PlayerConfirmMatchRsp& operator=(PlayerConfirmMatchRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerConfirmMatchRsp& default_instance();

  static inline const PlayerConfirmMatchRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerConfirmMatchRsp*>(
               &_PlayerConfirmMatchRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PlayerConfirmMatchRsp* other);
  friend void swap(PlayerConfirmMatchRsp& a, PlayerConfirmMatchRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerConfirmMatchRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerConfirmMatchRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerConfirmMatchRsp& from);
  void MergeFrom(const PlayerConfirmMatchRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerConfirmMatchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 match_id = 4;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // .proto.MatchType match_type = 9;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 9;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool is_agreed = 11;
  void clear_is_agreed();
  static const int kIsAgreedFieldNumber = 11;
  bool is_agreed() const;
  void set_is_agreed(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerConfirmMatchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 match_id_;
  int match_type_;
  ::google::protobuf::int32 retcode_;
  bool is_agreed_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerAllowEnterMpAfterAgreeMatchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerAllowEnterMpAfterAgreeMatchNotify) */ {
 public:
  PlayerAllowEnterMpAfterAgreeMatchNotify();
  virtual ~PlayerAllowEnterMpAfterAgreeMatchNotify();

  PlayerAllowEnterMpAfterAgreeMatchNotify(const PlayerAllowEnterMpAfterAgreeMatchNotify& from);

  inline PlayerAllowEnterMpAfterAgreeMatchNotify& operator=(const PlayerAllowEnterMpAfterAgreeMatchNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerAllowEnterMpAfterAgreeMatchNotify(PlayerAllowEnterMpAfterAgreeMatchNotify&& from) noexcept
    : PlayerAllowEnterMpAfterAgreeMatchNotify() {
    *this = ::std::move(from);
  }

  inline PlayerAllowEnterMpAfterAgreeMatchNotify& operator=(PlayerAllowEnterMpAfterAgreeMatchNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerAllowEnterMpAfterAgreeMatchNotify& default_instance();

  static inline const PlayerAllowEnterMpAfterAgreeMatchNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerAllowEnterMpAfterAgreeMatchNotify*>(
               &_PlayerAllowEnterMpAfterAgreeMatchNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PlayerAllowEnterMpAfterAgreeMatchNotify* other);
  friend void swap(PlayerAllowEnterMpAfterAgreeMatchNotify& a, PlayerAllowEnterMpAfterAgreeMatchNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerAllowEnterMpAfterAgreeMatchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerAllowEnterMpAfterAgreeMatchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerAllowEnterMpAfterAgreeMatchNotify& from);
  void MergeFrom(const PlayerAllowEnterMpAfterAgreeMatchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerAllowEnterMpAfterAgreeMatchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerAllowEnterMpAfterAgreeMatchNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMatchAgreedResultNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMatchAgreedResultNotify) */ {
 public:
  PlayerMatchAgreedResultNotify();
  virtual ~PlayerMatchAgreedResultNotify();

  PlayerMatchAgreedResultNotify(const PlayerMatchAgreedResultNotify& from);

  inline PlayerMatchAgreedResultNotify& operator=(const PlayerMatchAgreedResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMatchAgreedResultNotify(PlayerMatchAgreedResultNotify&& from) noexcept
    : PlayerMatchAgreedResultNotify() {
    *this = ::std::move(from);
  }

  inline PlayerMatchAgreedResultNotify& operator=(PlayerMatchAgreedResultNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMatchAgreedResultNotify& default_instance();

  static inline const PlayerMatchAgreedResultNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerMatchAgreedResultNotify*>(
               &_PlayerMatchAgreedResultNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PlayerMatchAgreedResultNotify* other);
  friend void swap(PlayerMatchAgreedResultNotify& a, PlayerMatchAgreedResultNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMatchAgreedResultNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMatchAgreedResultNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMatchAgreedResultNotify& from);
  void MergeFrom(const PlayerMatchAgreedResultNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMatchAgreedResultNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerMatchAgreedResultNotify_Reason Reason;
  static const Reason SUCC =
    PlayerMatchAgreedResultNotify_Reason_SUCC;
  static const Reason TARGET_SCENE_CANNOT_ENTER =
    PlayerMatchAgreedResultNotify_Reason_TARGET_SCENE_CANNOT_ENTER;
  static const Reason SELF_MP_UNAVAILABLE =
    PlayerMatchAgreedResultNotify_Reason_SELF_MP_UNAVAILABLE;
  static const Reason OTHER_DATA_VERSION_NOT_LATEST =
    PlayerMatchAgreedResultNotify_Reason_OTHER_DATA_VERSION_NOT_LATEST;
  static const Reason DATA_VERSION_NOT_LATEST =
    PlayerMatchAgreedResultNotify_Reason_DATA_VERSION_NOT_LATEST;
  static inline bool Reason_IsValid(int value) {
    return PlayerMatchAgreedResultNotify_Reason_IsValid(value);
  }
  static const Reason Reason_MIN =
    PlayerMatchAgreedResultNotify_Reason_Reason_MIN;
  static const Reason Reason_MAX =
    PlayerMatchAgreedResultNotify_Reason_Reason_MAX;
  static const int Reason_ARRAYSIZE =
    PlayerMatchAgreedResultNotify_Reason_Reason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Reason_descriptor() {
    return PlayerMatchAgreedResultNotify_Reason_descriptor();
  }
  static inline const ::std::string& Reason_Name(Reason value) {
    return PlayerMatchAgreedResultNotify_Reason_Name(value);
  }
  static inline bool Reason_Parse(const ::std::string& name,
      Reason* value) {
    return PlayerMatchAgreedResultNotify_Reason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_uid = 14;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 14;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // .proto.MatchType match_type = 3;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 3;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // .proto.PlayerMatchAgreedResultNotify.Reason reason = 8;
  void clear_reason();
  static const int kReasonFieldNumber = 8;
  ::proto::PlayerMatchAgreedResultNotify_Reason reason() const;
  void set_reason(::proto::PlayerMatchAgreedResultNotify_Reason value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMatchAgreedResultNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  int match_type_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerApplyEnterMpAfterMatchAgreedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerApplyEnterMpAfterMatchAgreedNotify) */ {
 public:
  PlayerApplyEnterMpAfterMatchAgreedNotify();
  virtual ~PlayerApplyEnterMpAfterMatchAgreedNotify();

  PlayerApplyEnterMpAfterMatchAgreedNotify(const PlayerApplyEnterMpAfterMatchAgreedNotify& from);

  inline PlayerApplyEnterMpAfterMatchAgreedNotify& operator=(const PlayerApplyEnterMpAfterMatchAgreedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerApplyEnterMpAfterMatchAgreedNotify(PlayerApplyEnterMpAfterMatchAgreedNotify&& from) noexcept
    : PlayerApplyEnterMpAfterMatchAgreedNotify() {
    *this = ::std::move(from);
  }

  inline PlayerApplyEnterMpAfterMatchAgreedNotify& operator=(PlayerApplyEnterMpAfterMatchAgreedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerApplyEnterMpAfterMatchAgreedNotify& default_instance();

  static inline const PlayerApplyEnterMpAfterMatchAgreedNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerApplyEnterMpAfterMatchAgreedNotify*>(
               &_PlayerApplyEnterMpAfterMatchAgreedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PlayerApplyEnterMpAfterMatchAgreedNotify* other);
  friend void swap(PlayerApplyEnterMpAfterMatchAgreedNotify& a, PlayerApplyEnterMpAfterMatchAgreedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerApplyEnterMpAfterMatchAgreedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerApplyEnterMpAfterMatchAgreedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerApplyEnterMpAfterMatchAgreedNotify& from);
  void MergeFrom(const PlayerApplyEnterMpAfterMatchAgreedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerApplyEnterMpAfterMatchAgreedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OnlinePlayerInfo src_player_info = 11;
  bool has_src_player_info() const;
  void clear_src_player_info();
  static const int kSrcPlayerInfoFieldNumber = 11;
  const ::proto::OnlinePlayerInfo& src_player_info() const;
  ::proto::OnlinePlayerInfo* mutable_src_player_info();
  ::proto::OnlinePlayerInfo* release_src_player_info();
  void set_allocated_src_player_info(::proto::OnlinePlayerInfo* src_player_info);

  // .proto.MatchType match_type = 3;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 3;
  ::proto::MatchType match_type() const;
  void set_match_type(::proto::MatchType value);

  // uint32 matchserver_id = 10;
  void clear_matchserver_id();
  static const int kMatchserverIdFieldNumber = 10;
  ::google::protobuf::uint32 matchserver_id() const;
  void set_matchserver_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerApplyEnterMpAfterMatchAgreedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OnlinePlayerInfo* src_player_info_;
  int match_type_;
  ::google::protobuf::uint32 matchserver_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGeneralMatchDismissNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGeneralMatchDismissNotify) */ {
 public:
  PlayerGeneralMatchDismissNotify();
  virtual ~PlayerGeneralMatchDismissNotify();

  PlayerGeneralMatchDismissNotify(const PlayerGeneralMatchDismissNotify& from);

  inline PlayerGeneralMatchDismissNotify& operator=(const PlayerGeneralMatchDismissNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGeneralMatchDismissNotify(PlayerGeneralMatchDismissNotify&& from) noexcept
    : PlayerGeneralMatchDismissNotify() {
    *this = ::std::move(from);
  }

  inline PlayerGeneralMatchDismissNotify& operator=(PlayerGeneralMatchDismissNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGeneralMatchDismissNotify& default_instance();

  static inline const PlayerGeneralMatchDismissNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerGeneralMatchDismissNotify*>(
               &_PlayerGeneralMatchDismissNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(PlayerGeneralMatchDismissNotify* other);
  friend void swap(PlayerGeneralMatchDismissNotify& a, PlayerGeneralMatchDismissNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGeneralMatchDismissNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGeneralMatchDismissNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGeneralMatchDismissNotify& from);
  void MergeFrom(const PlayerGeneralMatchDismissNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGeneralMatchDismissNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 3;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 3;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // uint32 match_id = 1;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // .proto.MatchReason reason = 13;
  void clear_reason();
  static const int kReasonFieldNumber = 13;
  ::proto::MatchReason reason() const;
  void set_reason(::proto::MatchReason value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGeneralMatchDismissNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  ::google::protobuf::uint32 match_id_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGeneralMatchConfirmNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGeneralMatchConfirmNotify) */ {
 public:
  PlayerGeneralMatchConfirmNotify();
  virtual ~PlayerGeneralMatchConfirmNotify();

  PlayerGeneralMatchConfirmNotify(const PlayerGeneralMatchConfirmNotify& from);

  inline PlayerGeneralMatchConfirmNotify& operator=(const PlayerGeneralMatchConfirmNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGeneralMatchConfirmNotify(PlayerGeneralMatchConfirmNotify&& from) noexcept
    : PlayerGeneralMatchConfirmNotify() {
    *this = ::std::move(from);
  }

  inline PlayerGeneralMatchConfirmNotify& operator=(PlayerGeneralMatchConfirmNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGeneralMatchConfirmNotify& default_instance();

  static inline const PlayerGeneralMatchConfirmNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerGeneralMatchConfirmNotify*>(
               &_PlayerGeneralMatchConfirmNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(PlayerGeneralMatchConfirmNotify* other);
  friend void swap(PlayerGeneralMatchConfirmNotify& a, PlayerGeneralMatchConfirmNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGeneralMatchConfirmNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGeneralMatchConfirmNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGeneralMatchConfirmNotify& from);
  void MergeFrom(const PlayerGeneralMatchConfirmNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGeneralMatchConfirmNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 14;
  void clear_uid();
  static const int kUidFieldNumber = 14;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 match_id = 8;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 8;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // bool is_agree = 13;
  void clear_is_agree();
  static const int kIsAgreeFieldNumber = 13;
  bool is_agree() const;
  void set_is_agree(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGeneralMatchConfirmNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 match_id_;
  bool is_agree_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGetForceQuitBanInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGetForceQuitBanInfoReq) */ {
 public:
  PlayerGetForceQuitBanInfoReq();
  virtual ~PlayerGetForceQuitBanInfoReq();

  PlayerGetForceQuitBanInfoReq(const PlayerGetForceQuitBanInfoReq& from);

  inline PlayerGetForceQuitBanInfoReq& operator=(const PlayerGetForceQuitBanInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGetForceQuitBanInfoReq(PlayerGetForceQuitBanInfoReq&& from) noexcept
    : PlayerGetForceQuitBanInfoReq() {
    *this = ::std::move(from);
  }

  inline PlayerGetForceQuitBanInfoReq& operator=(PlayerGetForceQuitBanInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGetForceQuitBanInfoReq& default_instance();

  static inline const PlayerGetForceQuitBanInfoReq* internal_default_instance() {
    return reinterpret_cast<const PlayerGetForceQuitBanInfoReq*>(
               &_PlayerGetForceQuitBanInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(PlayerGetForceQuitBanInfoReq* other);
  friend void swap(PlayerGetForceQuitBanInfoReq& a, PlayerGetForceQuitBanInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGetForceQuitBanInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGetForceQuitBanInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGetForceQuitBanInfoReq& from);
  void MergeFrom(const PlayerGetForceQuitBanInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGetForceQuitBanInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.PlayerGetForceQuitBanInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGetForceQuitBanInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGetForceQuitBanInfoRsp) */ {
 public:
  PlayerGetForceQuitBanInfoRsp();
  virtual ~PlayerGetForceQuitBanInfoRsp();

  PlayerGetForceQuitBanInfoRsp(const PlayerGetForceQuitBanInfoRsp& from);

  inline PlayerGetForceQuitBanInfoRsp& operator=(const PlayerGetForceQuitBanInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGetForceQuitBanInfoRsp(PlayerGetForceQuitBanInfoRsp&& from) noexcept
    : PlayerGetForceQuitBanInfoRsp() {
    *this = ::std::move(from);
  }

  inline PlayerGetForceQuitBanInfoRsp& operator=(PlayerGetForceQuitBanInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGetForceQuitBanInfoRsp& default_instance();

  static inline const PlayerGetForceQuitBanInfoRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerGetForceQuitBanInfoRsp*>(
               &_PlayerGetForceQuitBanInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PlayerGetForceQuitBanInfoRsp* other);
  friend void swap(PlayerGetForceQuitBanInfoRsp& a, PlayerGetForceQuitBanInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGetForceQuitBanInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGetForceQuitBanInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGetForceQuitBanInfoRsp& from);
  void MergeFrom(const PlayerGetForceQuitBanInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGetForceQuitBanInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 expire_time = 13;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 13;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 match_id = 8;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 8;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGetForceQuitBanInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 expire_time_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerTryCancelGeneralMatchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerTryCancelGeneralMatchNotify) */ {
 public:
  ServerTryCancelGeneralMatchNotify();
  virtual ~ServerTryCancelGeneralMatchNotify();

  ServerTryCancelGeneralMatchNotify(const ServerTryCancelGeneralMatchNotify& from);

  inline ServerTryCancelGeneralMatchNotify& operator=(const ServerTryCancelGeneralMatchNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerTryCancelGeneralMatchNotify(ServerTryCancelGeneralMatchNotify&& from) noexcept
    : ServerTryCancelGeneralMatchNotify() {
    *this = ::std::move(from);
  }

  inline ServerTryCancelGeneralMatchNotify& operator=(ServerTryCancelGeneralMatchNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTryCancelGeneralMatchNotify& default_instance();

  static inline const ServerTryCancelGeneralMatchNotify* internal_default_instance() {
    return reinterpret_cast<const ServerTryCancelGeneralMatchNotify*>(
               &_ServerTryCancelGeneralMatchNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ServerTryCancelGeneralMatchNotify* other);
  friend void swap(ServerTryCancelGeneralMatchNotify& a, ServerTryCancelGeneralMatchNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerTryCancelGeneralMatchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerTryCancelGeneralMatchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerTryCancelGeneralMatchNotify& from);
  void MergeFrom(const ServerTryCancelGeneralMatchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerTryCancelGeneralMatchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 match_id = 9;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 9;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerTryCancelGeneralMatchNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGCGMatchDismissNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGCGMatchDismissNotify) */ {
 public:
  PlayerGCGMatchDismissNotify();
  virtual ~PlayerGCGMatchDismissNotify();

  PlayerGCGMatchDismissNotify(const PlayerGCGMatchDismissNotify& from);

  inline PlayerGCGMatchDismissNotify& operator=(const PlayerGCGMatchDismissNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGCGMatchDismissNotify(PlayerGCGMatchDismissNotify&& from) noexcept
    : PlayerGCGMatchDismissNotify() {
    *this = ::std::move(from);
  }

  inline PlayerGCGMatchDismissNotify& operator=(PlayerGCGMatchDismissNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGCGMatchDismissNotify& default_instance();

  static inline const PlayerGCGMatchDismissNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerGCGMatchDismissNotify*>(
               &_PlayerGCGMatchDismissNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(PlayerGCGMatchDismissNotify* other);
  friend void swap(PlayerGCGMatchDismissNotify& a, PlayerGCGMatchDismissNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGCGMatchDismissNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGCGMatchDismissNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGCGMatchDismissNotify& from);
  void MergeFrom(const PlayerGCGMatchDismissNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGCGMatchDismissNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 7;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 7;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // .proto.MatchReason reason = 5;
  void clear_reason();
  static const int kReasonFieldNumber = 5;
  ::proto::MatchReason reason() const;
  void set_reason(::proto::MatchReason value);

  // uint32 match_id = 11;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 11;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGCGMatchDismissNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  int reason_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGCGMatchConfirmNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGCGMatchConfirmNotify) */ {
 public:
  PlayerGCGMatchConfirmNotify();
  virtual ~PlayerGCGMatchConfirmNotify();

  PlayerGCGMatchConfirmNotify(const PlayerGCGMatchConfirmNotify& from);

  inline PlayerGCGMatchConfirmNotify& operator=(const PlayerGCGMatchConfirmNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGCGMatchConfirmNotify(PlayerGCGMatchConfirmNotify&& from) noexcept
    : PlayerGCGMatchConfirmNotify() {
    *this = ::std::move(from);
  }

  inline PlayerGCGMatchConfirmNotify& operator=(PlayerGCGMatchConfirmNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGCGMatchConfirmNotify& default_instance();

  static inline const PlayerGCGMatchConfirmNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerGCGMatchConfirmNotify*>(
               &_PlayerGCGMatchConfirmNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(PlayerGCGMatchConfirmNotify* other);
  friend void swap(PlayerGCGMatchConfirmNotify& a, PlayerGCGMatchConfirmNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGCGMatchConfirmNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGCGMatchConfirmNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGCGMatchConfirmNotify& from);
  void MergeFrom(const PlayerGCGMatchConfirmNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGCGMatchConfirmNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 match_id = 14;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 14;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // bool is_agree = 5;
  void clear_is_agree();
  static const int kIsAgreeFieldNumber = 5;
  bool is_agree() const;
  void set_is_agree(bool value);

  // uint32 uid = 10;
  void clear_uid();
  static const int kUidFieldNumber = 10;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGCGMatchConfirmNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 match_id_;
  bool is_agree_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fmatch_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerStartMatchReq

// .proto.MatchType match_type = 3;
inline void PlayerStartMatchReq::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerStartMatchReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerStartMatchReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchReq.match_type)
}

// uint32 mechanicus_difficult_level = 12;
inline void PlayerStartMatchReq::clear_mechanicus_difficult_level() {
  mechanicus_difficult_level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchReq::mechanicus_difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchReq.mechanicus_difficult_level)
  return mechanicus_difficult_level_;
}
inline void PlayerStartMatchReq::set_mechanicus_difficult_level(::google::protobuf::uint32 value) {
  
  mechanicus_difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchReq.mechanicus_difficult_level)
}

// repeated uint32 match_param_list = 11;
inline int PlayerStartMatchReq::match_param_list_size() const {
  return match_param_list_.size();
}
inline void PlayerStartMatchReq::clear_match_param_list() {
  match_param_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerStartMatchReq::match_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchReq.match_param_list)
  return match_param_list_.Get(index);
}
inline void PlayerStartMatchReq::set_match_param_list(int index, ::google::protobuf::uint32 value) {
  match_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchReq.match_param_list)
}
inline void PlayerStartMatchReq::add_match_param_list(::google::protobuf::uint32 value) {
  match_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerStartMatchReq.match_param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerStartMatchReq::match_param_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerStartMatchReq.match_param_list)
  return match_param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerStartMatchReq::mutable_match_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerStartMatchReq.match_param_list)
  return &match_param_list_;
}

// uint32 dungeon_id = 1;
inline void PlayerStartMatchReq::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchReq::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchReq.dungeon_id)
  return dungeon_id_;
}
inline void PlayerStartMatchReq::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchReq.dungeon_id)
}

// uint32 mp_play_id = 15;
inline void PlayerStartMatchReq::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchReq::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchReq.mp_play_id)
  return mp_play_id_;
}
inline void PlayerStartMatchReq::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchReq.mp_play_id)
}

// uint32 match_id = 6;
inline void PlayerStartMatchReq::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchReq::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchReq.match_id)
  return match_id_;
}
inline void PlayerStartMatchReq::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchReq.match_id)
}

// -------------------------------------------------------------------

// PlayerStartMatchRsp

// int32 retcode = 1;
inline void PlayerStartMatchRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerStartMatchRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.retcode)
  return retcode_;
}
inline void PlayerStartMatchRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.retcode)
}

// uint32 punish_end_time = 5;
inline void PlayerStartMatchRsp::clear_punish_end_time() {
  punish_end_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchRsp::punish_end_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.punish_end_time)
  return punish_end_time_;
}
inline void PlayerStartMatchRsp::set_punish_end_time(::google::protobuf::uint32 value) {
  
  punish_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.punish_end_time)
}

// uint32 param = 4;
inline void PlayerStartMatchRsp::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.param)
  return param_;
}
inline void PlayerStartMatchRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.param)
}

// uint32 mp_play_id = 13;
inline void PlayerStartMatchRsp::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchRsp::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.mp_play_id)
  return mp_play_id_;
}
inline void PlayerStartMatchRsp::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.mp_play_id)
}

// uint32 mechanicus_difficult_level = 2;
inline void PlayerStartMatchRsp::clear_mechanicus_difficult_level() {
  mechanicus_difficult_level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchRsp::mechanicus_difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.mechanicus_difficult_level)
  return mechanicus_difficult_level_;
}
inline void PlayerStartMatchRsp::set_mechanicus_difficult_level(::google::protobuf::uint32 value) {
  
  mechanicus_difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.mechanicus_difficult_level)
}

// uint32 dungeon_id = 3;
inline void PlayerStartMatchRsp::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchRsp::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.dungeon_id)
  return dungeon_id_;
}
inline void PlayerStartMatchRsp::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.dungeon_id)
}

// uint32 match_id = 8;
inline void PlayerStartMatchRsp::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerStartMatchRsp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.match_id)
  return match_id_;
}
inline void PlayerStartMatchRsp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.match_id)
}

// .proto.MatchType match_type = 7;
inline void PlayerStartMatchRsp::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerStartMatchRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerStartMatchRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerStartMatchRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerStartMatchRsp.match_type)
}

// -------------------------------------------------------------------

// PlayerMatchInfoNotify

// uint32 match_id = 8;
inline void PlayerMatchInfoNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.match_id)
  return match_id_;
}
inline void PlayerMatchInfoNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.match_id)
}

// uint32 match_begin_time = 4;
inline void PlayerMatchInfoNotify::clear_match_begin_time() {
  match_begin_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::match_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.match_begin_time)
  return match_begin_time_;
}
inline void PlayerMatchInfoNotify::set_match_begin_time(::google::protobuf::uint32 value) {
  
  match_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.match_begin_time)
}

// uint32 dungeon_id = 10;
inline void PlayerMatchInfoNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.dungeon_id)
  return dungeon_id_;
}
inline void PlayerMatchInfoNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.dungeon_id)
}

// .proto.MatchType match_type = 11;
inline void PlayerMatchInfoNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerMatchInfoNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerMatchInfoNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.match_type)
}

// uint32 mechanicus_difficult_level = 12;
inline void PlayerMatchInfoNotify::clear_mechanicus_difficult_level() {
  mechanicus_difficult_level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::mechanicus_difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.mechanicus_difficult_level)
  return mechanicus_difficult_level_;
}
inline void PlayerMatchInfoNotify::set_mechanicus_difficult_level(::google::protobuf::uint32 value) {
  
  mechanicus_difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.mechanicus_difficult_level)
}

// repeated uint32 match_param_list = 6;
inline int PlayerMatchInfoNotify::match_param_list_size() const {
  return match_param_list_.size();
}
inline void PlayerMatchInfoNotify::clear_match_param_list() {
  match_param_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::match_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.match_param_list)
  return match_param_list_.Get(index);
}
inline void PlayerMatchInfoNotify::set_match_param_list(int index, ::google::protobuf::uint32 value) {
  match_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.match_param_list)
}
inline void PlayerMatchInfoNotify::add_match_param_list(::google::protobuf::uint32 value) {
  match_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerMatchInfoNotify.match_param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerMatchInfoNotify::match_param_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMatchInfoNotify.match_param_list)
  return match_param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerMatchInfoNotify::mutable_match_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMatchInfoNotify.match_param_list)
  return &match_param_list_;
}

// uint32 estimate_match_cost_time = 3;
inline void PlayerMatchInfoNotify::clear_estimate_match_cost_time() {
  estimate_match_cost_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::estimate_match_cost_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.estimate_match_cost_time)
  return estimate_match_cost_time_;
}
inline void PlayerMatchInfoNotify::set_estimate_match_cost_time(::google::protobuf::uint32 value) {
  
  estimate_match_cost_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.estimate_match_cost_time)
}

// uint32 mp_play_id = 5;
inline void PlayerMatchInfoNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.mp_play_id)
  return mp_play_id_;
}
inline void PlayerMatchInfoNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.mp_play_id)
}

// uint32 host_uid = 13;
inline void PlayerMatchInfoNotify::clear_host_uid() {
  host_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchInfoNotify::host_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchInfoNotify.host_uid)
  return host_uid_;
}
inline void PlayerMatchInfoNotify::set_host_uid(::google::protobuf::uint32 value) {
  
  host_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchInfoNotify.host_uid)
}

// -------------------------------------------------------------------

// PlayerCancelMatchReq

// .proto.MatchType match_type = 11;
inline void PlayerCancelMatchReq::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerCancelMatchReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCancelMatchReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerCancelMatchReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCancelMatchReq.match_type)
}

// -------------------------------------------------------------------

// PlayerCancelMatchRsp

// int32 retcode = 6;
inline void PlayerCancelMatchRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerCancelMatchRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCancelMatchRsp.retcode)
  return retcode_;
}
inline void PlayerCancelMatchRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCancelMatchRsp.retcode)
}

// .proto.MatchType match_type = 7;
inline void PlayerCancelMatchRsp::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerCancelMatchRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCancelMatchRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerCancelMatchRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCancelMatchRsp.match_type)
}

// -------------------------------------------------------------------

// PlayerMatchStopNotify

// .proto.MatchReason reason = 1;
inline void PlayerMatchStopNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::MatchReason PlayerMatchStopNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchStopNotify.reason)
  return static_cast< ::proto::MatchReason >(reason_);
}
inline void PlayerMatchStopNotify::set_reason(::proto::MatchReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchStopNotify.reason)
}

// uint32 host_uid = 12;
inline void PlayerMatchStopNotify::clear_host_uid() {
  host_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchStopNotify::host_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchStopNotify.host_uid)
  return host_uid_;
}
inline void PlayerMatchStopNotify::set_host_uid(::google::protobuf::uint32 value) {
  
  host_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchStopNotify.host_uid)
}

// -------------------------------------------------------------------

// MatchPlayerInfo

// bool is_agreed = 9;
inline void MatchPlayerInfo::clear_is_agreed() {
  is_agreed_ = false;
}
inline bool MatchPlayerInfo::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerInfo.is_agreed)
  return is_agreed_;
}
inline void MatchPlayerInfo::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerInfo.is_agreed)
}

// .proto.OnlinePlayerInfo player_info = 2;
inline bool MatchPlayerInfo::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void MatchPlayerInfo::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& MatchPlayerInfo::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.MatchPlayerInfo.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* MatchPlayerInfo::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayerInfo.player_info)
  return player_info_;
}
inline ::proto::OnlinePlayerInfo* MatchPlayerInfo::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayerInfo.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void MatchPlayerInfo::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayerInfo.player_info)
}

// -------------------------------------------------------------------

// GeneralMatchInfo

// uint32 match_param = 1;
inline void GeneralMatchInfo::clear_match_param() {
  match_param_ = 0u;
}
inline ::google::protobuf::uint32 GeneralMatchInfo::match_param() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchInfo.match_param)
  return match_param_;
}
inline void GeneralMatchInfo::set_match_param(::google::protobuf::uint32 value) {
  
  match_param_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchInfo.match_param)
}

// uint32 match_id = 9;
inline void GeneralMatchInfo::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 GeneralMatchInfo::match_id() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchInfo.match_id)
  return match_id_;
}
inline void GeneralMatchInfo::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchInfo.match_id)
}

// repeated .proto.MatchPlayerInfo player_list = 5;
inline int GeneralMatchInfo::player_list_size() const {
  return player_list_.size();
}
inline void GeneralMatchInfo::clear_player_list() {
  player_list_.Clear();
}
inline const ::proto::MatchPlayerInfo& GeneralMatchInfo::player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchInfo.player_list)
  return player_list_.Get(index);
}
inline ::proto::MatchPlayerInfo* GeneralMatchInfo::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GeneralMatchInfo.player_list)
  return player_list_.Mutable(index);
}
inline ::proto::MatchPlayerInfo* GeneralMatchInfo::add_player_list() {
  // @@protoc_insertion_point(field_add:proto.GeneralMatchInfo.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >*
GeneralMatchInfo::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GeneralMatchInfo.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >&
GeneralMatchInfo::player_list() const {
  // @@protoc_insertion_point(field_list:proto.GeneralMatchInfo.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// GCGMatchInfo

// repeated .proto.MatchPlayerInfo player_list = 13;
inline int GCGMatchInfo::player_list_size() const {
  return player_list_.size();
}
inline void GCGMatchInfo::clear_player_list() {
  player_list_.Clear();
}
inline const ::proto::MatchPlayerInfo& GCGMatchInfo::player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGMatchInfo.player_list)
  return player_list_.Get(index);
}
inline ::proto::MatchPlayerInfo* GCGMatchInfo::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GCGMatchInfo.player_list)
  return player_list_.Mutable(index);
}
inline ::proto::MatchPlayerInfo* GCGMatchInfo::add_player_list() {
  // @@protoc_insertion_point(field_add:proto.GCGMatchInfo.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >*
GCGMatchInfo::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGMatchInfo.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayerInfo >&
GCGMatchInfo::player_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGMatchInfo.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// PlayerMatchSuccNotify

// .proto.GeneralMatchInfo general_match_info = 7;
inline bool PlayerMatchSuccNotify::has_general_match_info() const {
  return this != internal_default_instance() && general_match_info_ != NULL;
}
inline void PlayerMatchSuccNotify::clear_general_match_info() {
  if (GetArenaNoVirtual() == NULL && general_match_info_ != NULL) delete general_match_info_;
  general_match_info_ = NULL;
}
inline const ::proto::GeneralMatchInfo& PlayerMatchSuccNotify::general_match_info() const {
  const ::proto::GeneralMatchInfo* p = general_match_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.general_match_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GeneralMatchInfo*>(
      &::proto::_GeneralMatchInfo_default_instance_);
}
inline ::proto::GeneralMatchInfo* PlayerMatchSuccNotify::mutable_general_match_info() {
  
  if (general_match_info_ == NULL) {
    general_match_info_ = new ::proto::GeneralMatchInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerMatchSuccNotify.general_match_info)
  return general_match_info_;
}
inline ::proto::GeneralMatchInfo* PlayerMatchSuccNotify::release_general_match_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerMatchSuccNotify.general_match_info)
  
  ::proto::GeneralMatchInfo* temp = general_match_info_;
  general_match_info_ = NULL;
  return temp;
}
inline void PlayerMatchSuccNotify::set_allocated_general_match_info(::proto::GeneralMatchInfo* general_match_info) {
  delete general_match_info_;
  general_match_info_ = general_match_info;
  if (general_match_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerMatchSuccNotify.general_match_info)
}

// uint32 mp_play_id = 15;
inline void PlayerMatchSuccNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchSuccNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.mp_play_id)
  return mp_play_id_;
}
inline void PlayerMatchSuccNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchSuccNotify.mp_play_id)
}

// uint32 host_uid = 3;
inline void PlayerMatchSuccNotify::clear_host_uid() {
  host_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchSuccNotify::host_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.host_uid)
  return host_uid_;
}
inline void PlayerMatchSuccNotify::set_host_uid(::google::protobuf::uint32 value) {
  
  host_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchSuccNotify.host_uid)
}

// .proto.MatchType match_type = 5;
inline void PlayerMatchSuccNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerMatchSuccNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerMatchSuccNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchSuccNotify.match_type)
}

// .proto.GCGMatchInfo gcg_match_info = 11;
inline bool PlayerMatchSuccNotify::has_gcg_match_info() const {
  return this != internal_default_instance() && gcg_match_info_ != NULL;
}
inline void PlayerMatchSuccNotify::clear_gcg_match_info() {
  if (GetArenaNoVirtual() == NULL && gcg_match_info_ != NULL) delete gcg_match_info_;
  gcg_match_info_ = NULL;
}
inline const ::proto::GCGMatchInfo& PlayerMatchSuccNotify::gcg_match_info() const {
  const ::proto::GCGMatchInfo* p = gcg_match_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.gcg_match_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGMatchInfo*>(
      &::proto::_GCGMatchInfo_default_instance_);
}
inline ::proto::GCGMatchInfo* PlayerMatchSuccNotify::mutable_gcg_match_info() {
  
  if (gcg_match_info_ == NULL) {
    gcg_match_info_ = new ::proto::GCGMatchInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerMatchSuccNotify.gcg_match_info)
  return gcg_match_info_;
}
inline ::proto::GCGMatchInfo* PlayerMatchSuccNotify::release_gcg_match_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerMatchSuccNotify.gcg_match_info)
  
  ::proto::GCGMatchInfo* temp = gcg_match_info_;
  gcg_match_info_ = NULL;
  return temp;
}
inline void PlayerMatchSuccNotify::set_allocated_gcg_match_info(::proto::GCGMatchInfo* gcg_match_info) {
  delete gcg_match_info_;
  gcg_match_info_ = gcg_match_info;
  if (gcg_match_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerMatchSuccNotify.gcg_match_info)
}

// uint32 confirm_end_time = 2;
inline void PlayerMatchSuccNotify::clear_confirm_end_time() {
  confirm_end_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchSuccNotify::confirm_end_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.confirm_end_time)
  return confirm_end_time_;
}
inline void PlayerMatchSuccNotify::set_confirm_end_time(::google::protobuf::uint32 value) {
  
  confirm_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchSuccNotify.confirm_end_time)
}

// uint32 dungeon_id = 6;
inline void PlayerMatchSuccNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchSuccNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.dungeon_id)
  return dungeon_id_;
}
inline void PlayerMatchSuccNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchSuccNotify.dungeon_id)
}

// uint32 mechanicus_difficult_level = 1;
inline void PlayerMatchSuccNotify::clear_mechanicus_difficult_level() {
  mechanicus_difficult_level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchSuccNotify::mechanicus_difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchSuccNotify.mechanicus_difficult_level)
  return mechanicus_difficult_level_;
}
inline void PlayerMatchSuccNotify::set_mechanicus_difficult_level(::google::protobuf::uint32 value) {
  
  mechanicus_difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchSuccNotify.mechanicus_difficult_level)
}

// -------------------------------------------------------------------

// PlayerConfirmMatchReq

// .proto.MatchType match_type = 12;
inline void PlayerConfirmMatchReq::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerConfirmMatchReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerConfirmMatchReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerConfirmMatchReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerConfirmMatchReq.match_type)
}

// bool is_agreed = 10;
inline void PlayerConfirmMatchReq::clear_is_agreed() {
  is_agreed_ = false;
}
inline bool PlayerConfirmMatchReq::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerConfirmMatchReq.is_agreed)
  return is_agreed_;
}
inline void PlayerConfirmMatchReq::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerConfirmMatchReq.is_agreed)
}

// -------------------------------------------------------------------

// PlayerConfirmMatchRsp

// .proto.MatchType match_type = 9;
inline void PlayerConfirmMatchRsp::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerConfirmMatchRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerConfirmMatchRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerConfirmMatchRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerConfirmMatchRsp.match_type)
}

// uint32 match_id = 4;
inline void PlayerConfirmMatchRsp::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerConfirmMatchRsp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerConfirmMatchRsp.match_id)
  return match_id_;
}
inline void PlayerConfirmMatchRsp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerConfirmMatchRsp.match_id)
}

// bool is_agreed = 11;
inline void PlayerConfirmMatchRsp::clear_is_agreed() {
  is_agreed_ = false;
}
inline bool PlayerConfirmMatchRsp::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerConfirmMatchRsp.is_agreed)
  return is_agreed_;
}
inline void PlayerConfirmMatchRsp::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerConfirmMatchRsp.is_agreed)
}

// int32 retcode = 10;
inline void PlayerConfirmMatchRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerConfirmMatchRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerConfirmMatchRsp.retcode)
  return retcode_;
}
inline void PlayerConfirmMatchRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerConfirmMatchRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerAllowEnterMpAfterAgreeMatchNotify

// uint32 target_uid = 1;
inline void PlayerAllowEnterMpAfterAgreeMatchNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerAllowEnterMpAfterAgreeMatchNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerAllowEnterMpAfterAgreeMatchNotify.target_uid)
  return target_uid_;
}
inline void PlayerAllowEnterMpAfterAgreeMatchNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerAllowEnterMpAfterAgreeMatchNotify.target_uid)
}

// -------------------------------------------------------------------

// PlayerMatchAgreedResultNotify

// uint32 target_uid = 14;
inline void PlayerMatchAgreedResultNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMatchAgreedResultNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchAgreedResultNotify.target_uid)
  return target_uid_;
}
inline void PlayerMatchAgreedResultNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchAgreedResultNotify.target_uid)
}

// .proto.MatchType match_type = 3;
inline void PlayerMatchAgreedResultNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerMatchAgreedResultNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchAgreedResultNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerMatchAgreedResultNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchAgreedResultNotify.match_type)
}

// .proto.PlayerMatchAgreedResultNotify.Reason reason = 8;
inline void PlayerMatchAgreedResultNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::PlayerMatchAgreedResultNotify_Reason PlayerMatchAgreedResultNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMatchAgreedResultNotify.reason)
  return static_cast< ::proto::PlayerMatchAgreedResultNotify_Reason >(reason_);
}
inline void PlayerMatchAgreedResultNotify::set_reason(::proto::PlayerMatchAgreedResultNotify_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMatchAgreedResultNotify.reason)
}

// -------------------------------------------------------------------

// PlayerApplyEnterMpAfterMatchAgreedNotify

// .proto.OnlinePlayerInfo src_player_info = 11;
inline bool PlayerApplyEnterMpAfterMatchAgreedNotify::has_src_player_info() const {
  return this != internal_default_instance() && src_player_info_ != NULL;
}
inline void PlayerApplyEnterMpAfterMatchAgreedNotify::clear_src_player_info() {
  if (GetArenaNoVirtual() == NULL && src_player_info_ != NULL) delete src_player_info_;
  src_player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& PlayerApplyEnterMpAfterMatchAgreedNotify::src_player_info() const {
  const ::proto::OnlinePlayerInfo* p = src_player_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.src_player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* PlayerApplyEnterMpAfterMatchAgreedNotify::mutable_src_player_info() {
  
  if (src_player_info_ == NULL) {
    src_player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.src_player_info)
  return src_player_info_;
}
inline ::proto::OnlinePlayerInfo* PlayerApplyEnterMpAfterMatchAgreedNotify::release_src_player_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.src_player_info)
  
  ::proto::OnlinePlayerInfo* temp = src_player_info_;
  src_player_info_ = NULL;
  return temp;
}
inline void PlayerApplyEnterMpAfterMatchAgreedNotify::set_allocated_src_player_info(::proto::OnlinePlayerInfo* src_player_info) {
  delete src_player_info_;
  src_player_info_ = src_player_info;
  if (src_player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.src_player_info)
}

// uint32 matchserver_id = 10;
inline void PlayerApplyEnterMpAfterMatchAgreedNotify::clear_matchserver_id() {
  matchserver_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerApplyEnterMpAfterMatchAgreedNotify::matchserver_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.matchserver_id)
  return matchserver_id_;
}
inline void PlayerApplyEnterMpAfterMatchAgreedNotify::set_matchserver_id(::google::protobuf::uint32 value) {
  
  matchserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.matchserver_id)
}

// .proto.MatchType match_type = 3;
inline void PlayerApplyEnterMpAfterMatchAgreedNotify::clear_match_type() {
  match_type_ = 0;
}
inline ::proto::MatchType PlayerApplyEnterMpAfterMatchAgreedNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
inline void PlayerApplyEnterMpAfterMatchAgreedNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpAfterMatchAgreedNotify.match_type)
}

// -------------------------------------------------------------------

// PlayerGeneralMatchDismissNotify

// repeated uint32 uid_list = 3;
inline int PlayerGeneralMatchDismissNotify::uid_list_size() const {
  return uid_list_.size();
}
inline void PlayerGeneralMatchDismissNotify::clear_uid_list() {
  uid_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerGeneralMatchDismissNotify::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerGeneralMatchDismissNotify.uid_list)
  return uid_list_.Get(index);
}
inline void PlayerGeneralMatchDismissNotify::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerGeneralMatchDismissNotify.uid_list)
}
inline void PlayerGeneralMatchDismissNotify::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerGeneralMatchDismissNotify.uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerGeneralMatchDismissNotify::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerGeneralMatchDismissNotify.uid_list)
  return uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerGeneralMatchDismissNotify::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerGeneralMatchDismissNotify.uid_list)
  return &uid_list_;
}

// .proto.MatchReason reason = 13;
inline void PlayerGeneralMatchDismissNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::MatchReason PlayerGeneralMatchDismissNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGeneralMatchDismissNotify.reason)
  return static_cast< ::proto::MatchReason >(reason_);
}
inline void PlayerGeneralMatchDismissNotify::set_reason(::proto::MatchReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGeneralMatchDismissNotify.reason)
}

// uint32 match_id = 1;
inline void PlayerGeneralMatchDismissNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGeneralMatchDismissNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGeneralMatchDismissNotify.match_id)
  return match_id_;
}
inline void PlayerGeneralMatchDismissNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGeneralMatchDismissNotify.match_id)
}

// -------------------------------------------------------------------

// PlayerGeneralMatchConfirmNotify

// uint32 match_id = 8;
inline void PlayerGeneralMatchConfirmNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGeneralMatchConfirmNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGeneralMatchConfirmNotify.match_id)
  return match_id_;
}
inline void PlayerGeneralMatchConfirmNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGeneralMatchConfirmNotify.match_id)
}

// bool is_agree = 13;
inline void PlayerGeneralMatchConfirmNotify::clear_is_agree() {
  is_agree_ = false;
}
inline bool PlayerGeneralMatchConfirmNotify::is_agree() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGeneralMatchConfirmNotify.is_agree)
  return is_agree_;
}
inline void PlayerGeneralMatchConfirmNotify::set_is_agree(bool value) {
  
  is_agree_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGeneralMatchConfirmNotify.is_agree)
}

// uint32 uid = 14;
inline void PlayerGeneralMatchConfirmNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGeneralMatchConfirmNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGeneralMatchConfirmNotify.uid)
  return uid_;
}
inline void PlayerGeneralMatchConfirmNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGeneralMatchConfirmNotify.uid)
}

// -------------------------------------------------------------------

// PlayerGetForceQuitBanInfoReq

// -------------------------------------------------------------------

// PlayerGetForceQuitBanInfoRsp

// int32 retcode = 4;
inline void PlayerGetForceQuitBanInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerGetForceQuitBanInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGetForceQuitBanInfoRsp.retcode)
  return retcode_;
}
inline void PlayerGetForceQuitBanInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGetForceQuitBanInfoRsp.retcode)
}

// uint32 match_id = 8;
inline void PlayerGetForceQuitBanInfoRsp::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGetForceQuitBanInfoRsp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGetForceQuitBanInfoRsp.match_id)
  return match_id_;
}
inline void PlayerGetForceQuitBanInfoRsp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGetForceQuitBanInfoRsp.match_id)
}

// uint32 expire_time = 13;
inline void PlayerGetForceQuitBanInfoRsp::clear_expire_time() {
  expire_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGetForceQuitBanInfoRsp::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGetForceQuitBanInfoRsp.expire_time)
  return expire_time_;
}
inline void PlayerGetForceQuitBanInfoRsp::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGetForceQuitBanInfoRsp.expire_time)
}

// -------------------------------------------------------------------

// ServerTryCancelGeneralMatchNotify

// uint32 match_id = 9;
inline void ServerTryCancelGeneralMatchNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerTryCancelGeneralMatchNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerTryCancelGeneralMatchNotify.match_id)
  return match_id_;
}
inline void ServerTryCancelGeneralMatchNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerTryCancelGeneralMatchNotify.match_id)
}

// -------------------------------------------------------------------

// PlayerGCGMatchDismissNotify

// uint32 match_id = 11;
inline void PlayerGCGMatchDismissNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGCGMatchDismissNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGCGMatchDismissNotify.match_id)
  return match_id_;
}
inline void PlayerGCGMatchDismissNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGCGMatchDismissNotify.match_id)
}

// .proto.MatchReason reason = 5;
inline void PlayerGCGMatchDismissNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::MatchReason PlayerGCGMatchDismissNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGCGMatchDismissNotify.reason)
  return static_cast< ::proto::MatchReason >(reason_);
}
inline void PlayerGCGMatchDismissNotify::set_reason(::proto::MatchReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGCGMatchDismissNotify.reason)
}

// repeated uint32 uid_list = 7;
inline int PlayerGCGMatchDismissNotify::uid_list_size() const {
  return uid_list_.size();
}
inline void PlayerGCGMatchDismissNotify::clear_uid_list() {
  uid_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerGCGMatchDismissNotify::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerGCGMatchDismissNotify.uid_list)
  return uid_list_.Get(index);
}
inline void PlayerGCGMatchDismissNotify::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerGCGMatchDismissNotify.uid_list)
}
inline void PlayerGCGMatchDismissNotify::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerGCGMatchDismissNotify.uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerGCGMatchDismissNotify::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerGCGMatchDismissNotify.uid_list)
  return uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerGCGMatchDismissNotify::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerGCGMatchDismissNotify.uid_list)
  return &uid_list_;
}

// -------------------------------------------------------------------

// PlayerGCGMatchConfirmNotify

// uint32 uid = 10;
inline void PlayerGCGMatchConfirmNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGCGMatchConfirmNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGCGMatchConfirmNotify.uid)
  return uid_;
}
inline void PlayerGCGMatchConfirmNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGCGMatchConfirmNotify.uid)
}

// bool is_agree = 5;
inline void PlayerGCGMatchConfirmNotify::clear_is_agree() {
  is_agree_ = false;
}
inline bool PlayerGCGMatchConfirmNotify::is_agree() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGCGMatchConfirmNotify.is_agree)
  return is_agree_;
}
inline void PlayerGCGMatchConfirmNotify::set_is_agree(bool value) {
  
  is_agree_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGCGMatchConfirmNotify.is_agree)
}

// uint32 match_id = 14;
inline void PlayerGCGMatchConfirmNotify::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGCGMatchConfirmNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGCGMatchConfirmNotify.match_id)
  return match_id_;
}
inline void PlayerGCGMatchConfirmNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGCGMatchConfirmNotify.match_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::PlayerMatchAgreedResultNotify_Reason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerMatchAgreedResultNotify_Reason>() {
  return ::proto::PlayerMatchAgreedResultNotify_Reason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fmatch_2eproto__INCLUDED
