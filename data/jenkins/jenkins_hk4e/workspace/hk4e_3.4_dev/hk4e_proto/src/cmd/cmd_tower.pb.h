// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_tower.proto

#ifndef PROTOBUF_cmd_2fcmd_5ftower_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5ftower_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class TowerAllDataReq;
class TowerAllDataReqDefaultTypeInternal;
extern TowerAllDataReqDefaultTypeInternal _TowerAllDataReq_default_instance_;
class TowerAllDataRsp;
class TowerAllDataRspDefaultTypeInternal;
extern TowerAllDataRspDefaultTypeInternal _TowerAllDataRsp_default_instance_;
class TowerAllDataRsp_FloorOpenTimeMapEntry;
class TowerAllDataRsp_FloorOpenTimeMapEntryDefaultTypeInternal;
extern TowerAllDataRsp_FloorOpenTimeMapEntryDefaultTypeInternal _TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_;
class TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry;
class TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntryDefaultTypeInternal;
extern TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntryDefaultTypeInternal _TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_;
class TowerBriefDataNotify;
class TowerBriefDataNotifyDefaultTypeInternal;
extern TowerBriefDataNotifyDefaultTypeInternal _TowerBriefDataNotify_default_instance_;
class TowerBuffSelectReq;
class TowerBuffSelectReqDefaultTypeInternal;
extern TowerBuffSelectReqDefaultTypeInternal _TowerBuffSelectReq_default_instance_;
class TowerBuffSelectRsp;
class TowerBuffSelectRspDefaultTypeInternal;
extern TowerBuffSelectRspDefaultTypeInternal _TowerBuffSelectRsp_default_instance_;
class TowerCurLevelRecord;
class TowerCurLevelRecordDefaultTypeInternal;
extern TowerCurLevelRecordDefaultTypeInternal _TowerCurLevelRecord_default_instance_;
class TowerCurLevelRecordChangeNotify;
class TowerCurLevelRecordChangeNotifyDefaultTypeInternal;
extern TowerCurLevelRecordChangeNotifyDefaultTypeInternal _TowerCurLevelRecordChangeNotify_default_instance_;
class TowerDailyRewardProgressChangeNotify;
class TowerDailyRewardProgressChangeNotifyDefaultTypeInternal;
extern TowerDailyRewardProgressChangeNotifyDefaultTypeInternal _TowerDailyRewardProgressChangeNotify_default_instance_;
class TowerEnterLevelReq;
class TowerEnterLevelReqDefaultTypeInternal;
extern TowerEnterLevelReqDefaultTypeInternal _TowerEnterLevelReq_default_instance_;
class TowerEnterLevelRsp;
class TowerEnterLevelRspDefaultTypeInternal;
extern TowerEnterLevelRspDefaultTypeInternal _TowerEnterLevelRsp_default_instance_;
class TowerFightRecordPair;
class TowerFightRecordPairDefaultTypeInternal;
extern TowerFightRecordPairDefaultTypeInternal _TowerFightRecordPair_default_instance_;
class TowerFloorRecord;
class TowerFloorRecordDefaultTypeInternal;
extern TowerFloorRecordDefaultTypeInternal _TowerFloorRecord_default_instance_;
class TowerFloorRecordChangeNotify;
class TowerFloorRecordChangeNotifyDefaultTypeInternal;
extern TowerFloorRecordChangeNotifyDefaultTypeInternal _TowerFloorRecordChangeNotify_default_instance_;
class TowerFloorRecord_PassedLevelMapEntry;
class TowerFloorRecord_PassedLevelMapEntryDefaultTypeInternal;
extern TowerFloorRecord_PassedLevelMapEntryDefaultTypeInternal _TowerFloorRecord_PassedLevelMapEntry_default_instance_;
class TowerGetFloorStarRewardReq;
class TowerGetFloorStarRewardReqDefaultTypeInternal;
extern TowerGetFloorStarRewardReqDefaultTypeInternal _TowerGetFloorStarRewardReq_default_instance_;
class TowerGetFloorStarRewardRsp;
class TowerGetFloorStarRewardRspDefaultTypeInternal;
extern TowerGetFloorStarRewardRspDefaultTypeInternal _TowerGetFloorStarRewardRsp_default_instance_;
class TowerLevelEndNotify;
class TowerLevelEndNotifyDefaultTypeInternal;
extern TowerLevelEndNotifyDefaultTypeInternal _TowerLevelEndNotify_default_instance_;
class TowerLevelRecord;
class TowerLevelRecordDefaultTypeInternal;
extern TowerLevelRecordDefaultTypeInternal _TowerLevelRecord_default_instance_;
class TowerLevelStarCondData;
class TowerLevelStarCondDataDefaultTypeInternal;
extern TowerLevelStarCondDataDefaultTypeInternal _TowerLevelStarCondData_default_instance_;
class TowerLevelStarCondNotify;
class TowerLevelStarCondNotifyDefaultTypeInternal;
extern TowerLevelStarCondNotifyDefaultTypeInternal _TowerLevelStarCondNotify_default_instance_;
class TowerMiddleLevelChangeTeamNotify;
class TowerMiddleLevelChangeTeamNotifyDefaultTypeInternal;
extern TowerMiddleLevelChangeTeamNotifyDefaultTypeInternal _TowerMiddleLevelChangeTeamNotify_default_instance_;
class TowerMonthlyBrief;
class TowerMonthlyBriefDefaultTypeInternal;
extern TowerMonthlyBriefDefaultTypeInternal _TowerMonthlyBrief_default_instance_;
class TowerMonthlyCombatRecord;
class TowerMonthlyCombatRecordDefaultTypeInternal;
extern TowerMonthlyCombatRecordDefaultTypeInternal _TowerMonthlyCombatRecord_default_instance_;
class TowerMonthlyDetail;
class TowerMonthlyDetailDefaultTypeInternal;
extern TowerMonthlyDetailDefaultTypeInternal _TowerMonthlyDetail_default_instance_;
class TowerRecordHandbookReq;
class TowerRecordHandbookReqDefaultTypeInternal;
extern TowerRecordHandbookReqDefaultTypeInternal _TowerRecordHandbookReq_default_instance_;
class TowerRecordHandbookRsp;
class TowerRecordHandbookRspDefaultTypeInternal;
extern TowerRecordHandbookRspDefaultTypeInternal _TowerRecordHandbookRsp_default_instance_;
class TowerSurrenderReq;
class TowerSurrenderReqDefaultTypeInternal;
extern TowerSurrenderReqDefaultTypeInternal _TowerSurrenderReq_default_instance_;
class TowerSurrenderRsp;
class TowerSurrenderRspDefaultTypeInternal;
extern TowerSurrenderRspDefaultTypeInternal _TowerSurrenderRsp_default_instance_;
class TowerTeam;
class TowerTeamDefaultTypeInternal;
extern TowerTeamDefaultTypeInternal _TowerTeam_default_instance_;
class TowerTeamSelectReq;
class TowerTeamSelectReqDefaultTypeInternal;
extern TowerTeamSelectReqDefaultTypeInternal _TowerTeamSelectReq_default_instance_;
class TowerTeamSelectRsp;
class TowerTeamSelectRspDefaultTypeInternal;
extern TowerTeamSelectRspDefaultTypeInternal _TowerTeamSelectRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5ftower_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5ftower_2eproto

enum TowerLevelEndNotify_ContinueStateType {
  TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_NOT_CONTINUE = 0,
  TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_ENTER_NEXT_LEVEL = 1,
  TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR = 2,
  TowerLevelEndNotify_ContinueStateType_TowerLevelEndNotify_ContinueStateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TowerLevelEndNotify_ContinueStateType_TowerLevelEndNotify_ContinueStateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TowerLevelEndNotify_ContinueStateType_IsValid(int value);
const TowerLevelEndNotify_ContinueStateType TowerLevelEndNotify_ContinueStateType_ContinueStateType_MIN = TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_NOT_CONTINUE;
const TowerLevelEndNotify_ContinueStateType TowerLevelEndNotify_ContinueStateType_ContinueStateType_MAX = TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR;
const int TowerLevelEndNotify_ContinueStateType_ContinueStateType_ARRAYSIZE = TowerLevelEndNotify_ContinueStateType_ContinueStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TowerLevelEndNotify_ContinueStateType_descriptor();
inline const ::std::string& TowerLevelEndNotify_ContinueStateType_Name(TowerLevelEndNotify_ContinueStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TowerLevelEndNotify_ContinueStateType_descriptor(), value);
}
inline bool TowerLevelEndNotify_ContinueStateType_Parse(
    const ::std::string& name, TowerLevelEndNotify_ContinueStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TowerLevelEndNotify_ContinueStateType>(
    TowerLevelEndNotify_ContinueStateType_descriptor(), name, value);
}
// ===================================================================

class TowerTeam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerTeam) */ {
 public:
  TowerTeam();
  virtual ~TowerTeam();

  TowerTeam(const TowerTeam& from);

  inline TowerTeam& operator=(const TowerTeam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerTeam(TowerTeam&& from) noexcept
    : TowerTeam() {
    *this = ::std::move(from);
  }

  inline TowerTeam& operator=(TowerTeam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerTeam& default_instance();

  static inline const TowerTeam* internal_default_instance() {
    return reinterpret_cast<const TowerTeam*>(
               &_TowerTeam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TowerTeam* other);
  friend void swap(TowerTeam& a, TowerTeam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerTeam* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerTeam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerTeam& from);
  void MergeFrom(const TowerTeam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_guid_list = 14;
  int avatar_guid_list_size() const;
  void clear_avatar_guid_list();
  static const int kAvatarGuidListFieldNumber = 14;
  ::google::protobuf::uint64 avatar_guid_list(int index) const;
  void set_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid_list();

  // uint32 tower_team_id = 3;
  void clear_tower_team_id();
  static const int kTowerTeamIdFieldNumber = 3;
  ::google::protobuf::uint32 tower_team_id() const;
  void set_tower_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerTeam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_list_;
  mutable int _avatar_guid_list_cached_byte_size_;
  ::google::protobuf::uint32 tower_team_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerLevelRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerLevelRecord) */ {
 public:
  TowerLevelRecord();
  virtual ~TowerLevelRecord();

  TowerLevelRecord(const TowerLevelRecord& from);

  inline TowerLevelRecord& operator=(const TowerLevelRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerLevelRecord(TowerLevelRecord&& from) noexcept
    : TowerLevelRecord() {
    *this = ::std::move(from);
  }

  inline TowerLevelRecord& operator=(TowerLevelRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLevelRecord& default_instance();

  static inline const TowerLevelRecord* internal_default_instance() {
    return reinterpret_cast<const TowerLevelRecord*>(
               &_TowerLevelRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TowerLevelRecord* other);
  friend void swap(TowerLevelRecord& a, TowerLevelRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerLevelRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerLevelRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerLevelRecord& from);
  void MergeFrom(const TowerLevelRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerLevelRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 satisfied_cond_list = 13;
  int satisfied_cond_list_size() const;
  void clear_satisfied_cond_list();
  static const int kSatisfiedCondListFieldNumber = 13;
  ::google::protobuf::uint32 satisfied_cond_list(int index) const;
  void set_satisfied_cond_list(int index, ::google::protobuf::uint32 value);
  void add_satisfied_cond_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      satisfied_cond_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_satisfied_cond_list();

  // uint32 level_id = 10;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 10;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerLevelRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > satisfied_cond_list_;
  mutable int _satisfied_cond_list_cached_byte_size_;
  ::google::protobuf::uint32 level_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class TowerFloorRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerFloorRecord) */ {
 public:
  TowerFloorRecord();
  virtual ~TowerFloorRecord();

  TowerFloorRecord(const TowerFloorRecord& from);

  inline TowerFloorRecord& operator=(const TowerFloorRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerFloorRecord(TowerFloorRecord&& from) noexcept
    : TowerFloorRecord() {
    *this = ::std::move(from);
  }

  inline TowerFloorRecord& operator=(TowerFloorRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerFloorRecord& default_instance();

  static inline const TowerFloorRecord* internal_default_instance() {
    return reinterpret_cast<const TowerFloorRecord*>(
               &_TowerFloorRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TowerFloorRecord* other);
  friend void swap(TowerFloorRecord& a, TowerFloorRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerFloorRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerFloorRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerFloorRecord& from);
  void MergeFrom(const TowerFloorRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerFloorRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .proto.TowerLevelRecord passed_level_record_list = 2;
  int passed_level_record_list_size() const;
  void clear_passed_level_record_list();
  static const int kPassedLevelRecordListFieldNumber = 2;
  const ::proto::TowerLevelRecord& passed_level_record_list(int index) const;
  ::proto::TowerLevelRecord* mutable_passed_level_record_list(int index);
  ::proto::TowerLevelRecord* add_passed_level_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelRecord >*
      mutable_passed_level_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelRecord >&
      passed_level_record_list() const;

  // map<uint32, uint32> passed_level_map = 8;
  int passed_level_map_size() const;
  void clear_passed_level_map();
  static const int kPassedLevelMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      passed_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_passed_level_map();

  // uint32 floor_id = 12;
  void clear_floor_id();
  static const int kFloorIdFieldNumber = 12;
  ::google::protobuf::uint32 floor_id() const;
  void set_floor_id(::google::protobuf::uint32 value);

  // uint32 floor_star_reward_progress = 15;
  void clear_floor_star_reward_progress();
  static const int kFloorStarRewardProgressFieldNumber = 15;
  ::google::protobuf::uint32 floor_star_reward_progress() const;
  void set_floor_star_reward_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerFloorRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelRecord > passed_level_record_list_;
  public:
  class TowerFloorRecord_PassedLevelMapEntry : public ::google::protobuf::internal::MapEntry<TowerFloorRecord_PassedLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<TowerFloorRecord_PassedLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    TowerFloorRecord_PassedLevelMapEntry();
    TowerFloorRecord_PassedLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const TowerFloorRecord_PassedLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_TowerFloorRecord_PassedLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      TowerFloorRecord_PassedLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > passed_level_map_;
  private:
  ::google::protobuf::uint32 floor_id_;
  ::google::protobuf::uint32 floor_star_reward_progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerCurLevelRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerCurLevelRecord) */ {
 public:
  TowerCurLevelRecord();
  virtual ~TowerCurLevelRecord();

  TowerCurLevelRecord(const TowerCurLevelRecord& from);

  inline TowerCurLevelRecord& operator=(const TowerCurLevelRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerCurLevelRecord(TowerCurLevelRecord&& from) noexcept
    : TowerCurLevelRecord() {
    *this = ::std::move(from);
  }

  inline TowerCurLevelRecord& operator=(TowerCurLevelRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerCurLevelRecord& default_instance();

  static inline const TowerCurLevelRecord* internal_default_instance() {
    return reinterpret_cast<const TowerCurLevelRecord*>(
               &_TowerCurLevelRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TowerCurLevelRecord* other);
  friend void swap(TowerCurLevelRecord& a, TowerCurLevelRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerCurLevelRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerCurLevelRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerCurLevelRecord& from);
  void MergeFrom(const TowerCurLevelRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerCurLevelRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 buff_id_list = 4;
  int buff_id_list_size() const;
  void clear_buff_id_list();
  static const int kBuffIdListFieldNumber = 4;
  ::google::protobuf::uint32 buff_id_list(int index) const;
  void set_buff_id_list(int index, ::google::protobuf::uint32 value);
  void add_buff_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buff_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buff_id_list();

  // repeated .proto.TowerTeam tower_team_list = 8;
  int tower_team_list_size() const;
  void clear_tower_team_list();
  static const int kTowerTeamListFieldNumber = 8;
  const ::proto::TowerTeam& tower_team_list(int index) const;
  ::proto::TowerTeam* mutable_tower_team_list(int index);
  ::proto::TowerTeam* add_tower_team_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >*
      mutable_tower_team_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >&
      tower_team_list() const;

  // uint32 cur_level_index = 1;
  void clear_cur_level_index();
  static const int kCurLevelIndexFieldNumber = 1;
  ::google::protobuf::uint32 cur_level_index() const;
  void set_cur_level_index(::google::protobuf::uint32 value);

  // bool is_empty = 6;
  void clear_is_empty();
  static const int kIsEmptyFieldNumber = 6;
  bool is_empty() const;
  void set_is_empty(bool value);

  // bool is_upper_part = 2;
  void clear_is_upper_part();
  static const int kIsUpperPartFieldNumber = 2;
  bool is_upper_part() const;
  void set_is_upper_part(bool value);

  // uint32 cur_floor_id = 15;
  void clear_cur_floor_id();
  static const int kCurFloorIdFieldNumber = 15;
  ::google::protobuf::uint32 cur_floor_id() const;
  void set_cur_floor_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerCurLevelRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buff_id_list_;
  mutable int _buff_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam > tower_team_list_;
  ::google::protobuf::uint32 cur_level_index_;
  bool is_empty_;
  bool is_upper_part_;
  ::google::protobuf::uint32 cur_floor_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerBriefDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerBriefDataNotify) */ {
 public:
  TowerBriefDataNotify();
  virtual ~TowerBriefDataNotify();

  TowerBriefDataNotify(const TowerBriefDataNotify& from);

  inline TowerBriefDataNotify& operator=(const TowerBriefDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerBriefDataNotify(TowerBriefDataNotify&& from) noexcept
    : TowerBriefDataNotify() {
    *this = ::std::move(from);
  }

  inline TowerBriefDataNotify& operator=(TowerBriefDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerBriefDataNotify& default_instance();

  static inline const TowerBriefDataNotify* internal_default_instance() {
    return reinterpret_cast<const TowerBriefDataNotify*>(
               &_TowerBriefDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TowerBriefDataNotify* other);
  friend void swap(TowerBriefDataNotify& a, TowerBriefDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerBriefDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerBriefDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerBriefDataNotify& from);
  void MergeFrom(const TowerBriefDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerBriefDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 last_level_index = 4;
  void clear_last_level_index();
  static const int kLastLevelIndexFieldNumber = 4;
  ::google::protobuf::uint32 last_level_index() const;
  void set_last_level_index(::google::protobuf::uint32 value);

  // uint32 tower_schedule_id = 5;
  void clear_tower_schedule_id();
  static const int kTowerScheduleIdFieldNumber = 5;
  ::google::protobuf::uint32 tower_schedule_id() const;
  void set_tower_schedule_id(::google::protobuf::uint32 value);

  // uint32 next_schedule_change_time = 6;
  void clear_next_schedule_change_time();
  static const int kNextScheduleChangeTimeFieldNumber = 6;
  ::google::protobuf::uint32 next_schedule_change_time() const;
  void set_next_schedule_change_time(::google::protobuf::uint32 value);

  // uint32 last_floor_index = 8;
  void clear_last_floor_index();
  static const int kLastFloorIndexFieldNumber = 8;
  ::google::protobuf::uint32 last_floor_index() const;
  void set_last_floor_index(::google::protobuf::uint32 value);

  // uint32 schedule_start_time = 15;
  void clear_schedule_start_time();
  static const int kScheduleStartTimeFieldNumber = 15;
  ::google::protobuf::uint32 schedule_start_time() const;
  void set_schedule_start_time(::google::protobuf::uint32 value);

  // uint32 total_star_num = 11;
  void clear_total_star_num();
  static const int kTotalStarNumFieldNumber = 11;
  ::google::protobuf::uint32 total_star_num() const;
  void set_total_star_num(::google::protobuf::uint32 value);

  // bool is_finished_entrance_floor = 14;
  void clear_is_finished_entrance_floor();
  static const int kIsFinishedEntranceFloorFieldNumber = 14;
  bool is_finished_entrance_floor() const;
  void set_is_finished_entrance_floor(bool value);

  // @@protoc_insertion_point(class_scope:proto.TowerBriefDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 last_level_index_;
  ::google::protobuf::uint32 tower_schedule_id_;
  ::google::protobuf::uint32 next_schedule_change_time_;
  ::google::protobuf::uint32 last_floor_index_;
  ::google::protobuf::uint32 schedule_start_time_;
  ::google::protobuf::uint32 total_star_num_;
  bool is_finished_entrance_floor_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerFloorRecordChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerFloorRecordChangeNotify) */ {
 public:
  TowerFloorRecordChangeNotify();
  virtual ~TowerFloorRecordChangeNotify();

  TowerFloorRecordChangeNotify(const TowerFloorRecordChangeNotify& from);

  inline TowerFloorRecordChangeNotify& operator=(const TowerFloorRecordChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerFloorRecordChangeNotify(TowerFloorRecordChangeNotify&& from) noexcept
    : TowerFloorRecordChangeNotify() {
    *this = ::std::move(from);
  }

  inline TowerFloorRecordChangeNotify& operator=(TowerFloorRecordChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerFloorRecordChangeNotify& default_instance();

  static inline const TowerFloorRecordChangeNotify* internal_default_instance() {
    return reinterpret_cast<const TowerFloorRecordChangeNotify*>(
               &_TowerFloorRecordChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TowerFloorRecordChangeNotify* other);
  friend void swap(TowerFloorRecordChangeNotify& a, TowerFloorRecordChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerFloorRecordChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerFloorRecordChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerFloorRecordChangeNotify& from);
  void MergeFrom(const TowerFloorRecordChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerFloorRecordChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.TowerFloorRecord tower_floor_record_list = 8;
  int tower_floor_record_list_size() const;
  void clear_tower_floor_record_list();
  static const int kTowerFloorRecordListFieldNumber = 8;
  const ::proto::TowerFloorRecord& tower_floor_record_list(int index) const;
  ::proto::TowerFloorRecord* mutable_tower_floor_record_list(int index);
  ::proto::TowerFloorRecord* add_tower_floor_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >*
      mutable_tower_floor_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >&
      tower_floor_record_list() const;

  // bool is_finished_entrance_floor = 11;
  void clear_is_finished_entrance_floor();
  static const int kIsFinishedEntranceFloorFieldNumber = 11;
  bool is_finished_entrance_floor() const;
  void set_is_finished_entrance_floor(bool value);

  // @@protoc_insertion_point(class_scope:proto.TowerFloorRecordChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord > tower_floor_record_list_;
  bool is_finished_entrance_floor_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerCurLevelRecordChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerCurLevelRecordChangeNotify) */ {
 public:
  TowerCurLevelRecordChangeNotify();
  virtual ~TowerCurLevelRecordChangeNotify();

  TowerCurLevelRecordChangeNotify(const TowerCurLevelRecordChangeNotify& from);

  inline TowerCurLevelRecordChangeNotify& operator=(const TowerCurLevelRecordChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerCurLevelRecordChangeNotify(TowerCurLevelRecordChangeNotify&& from) noexcept
    : TowerCurLevelRecordChangeNotify() {
    *this = ::std::move(from);
  }

  inline TowerCurLevelRecordChangeNotify& operator=(TowerCurLevelRecordChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerCurLevelRecordChangeNotify& default_instance();

  static inline const TowerCurLevelRecordChangeNotify* internal_default_instance() {
    return reinterpret_cast<const TowerCurLevelRecordChangeNotify*>(
               &_TowerCurLevelRecordChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TowerCurLevelRecordChangeNotify* other);
  friend void swap(TowerCurLevelRecordChangeNotify& a, TowerCurLevelRecordChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerCurLevelRecordChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerCurLevelRecordChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerCurLevelRecordChangeNotify& from);
  void MergeFrom(const TowerCurLevelRecordChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerCurLevelRecordChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.TowerCurLevelRecord cur_level_record = 10;
  bool has_cur_level_record() const;
  void clear_cur_level_record();
  static const int kCurLevelRecordFieldNumber = 10;
  const ::proto::TowerCurLevelRecord& cur_level_record() const;
  ::proto::TowerCurLevelRecord* mutable_cur_level_record();
  ::proto::TowerCurLevelRecord* release_cur_level_record();
  void set_allocated_cur_level_record(::proto::TowerCurLevelRecord* cur_level_record);

  // @@protoc_insertion_point(class_scope:proto.TowerCurLevelRecordChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::TowerCurLevelRecord* cur_level_record_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerDailyRewardProgressChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerDailyRewardProgressChangeNotify) */ {
 public:
  TowerDailyRewardProgressChangeNotify();
  virtual ~TowerDailyRewardProgressChangeNotify();

  TowerDailyRewardProgressChangeNotify(const TowerDailyRewardProgressChangeNotify& from);

  inline TowerDailyRewardProgressChangeNotify& operator=(const TowerDailyRewardProgressChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerDailyRewardProgressChangeNotify(TowerDailyRewardProgressChangeNotify&& from) noexcept
    : TowerDailyRewardProgressChangeNotify() {
    *this = ::std::move(from);
  }

  inline TowerDailyRewardProgressChangeNotify& operator=(TowerDailyRewardProgressChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerDailyRewardProgressChangeNotify& default_instance();

  static inline const TowerDailyRewardProgressChangeNotify* internal_default_instance() {
    return reinterpret_cast<const TowerDailyRewardProgressChangeNotify*>(
               &_TowerDailyRewardProgressChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TowerDailyRewardProgressChangeNotify* other);
  friend void swap(TowerDailyRewardProgressChangeNotify& a, TowerDailyRewardProgressChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerDailyRewardProgressChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerDailyRewardProgressChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerDailyRewardProgressChangeNotify& from);
  void MergeFrom(const TowerDailyRewardProgressChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerDailyRewardProgressChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 daily_level_index = 9;
  void clear_daily_level_index();
  static const int kDailyLevelIndexFieldNumber = 9;
  ::google::protobuf::uint32 daily_level_index() const;
  void set_daily_level_index(::google::protobuf::uint32 value);

  // uint32 daily_floor_id = 15;
  void clear_daily_floor_id();
  static const int kDailyFloorIdFieldNumber = 15;
  ::google::protobuf::uint32 daily_floor_id() const;
  void set_daily_floor_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerDailyRewardProgressChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 daily_level_index_;
  ::google::protobuf::uint32 daily_floor_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerTeamSelectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerTeamSelectReq) */ {
 public:
  TowerTeamSelectReq();
  virtual ~TowerTeamSelectReq();

  TowerTeamSelectReq(const TowerTeamSelectReq& from);

  inline TowerTeamSelectReq& operator=(const TowerTeamSelectReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerTeamSelectReq(TowerTeamSelectReq&& from) noexcept
    : TowerTeamSelectReq() {
    *this = ::std::move(from);
  }

  inline TowerTeamSelectReq& operator=(TowerTeamSelectReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerTeamSelectReq& default_instance();

  static inline const TowerTeamSelectReq* internal_default_instance() {
    return reinterpret_cast<const TowerTeamSelectReq*>(
               &_TowerTeamSelectReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TowerTeamSelectReq* other);
  friend void swap(TowerTeamSelectReq& a, TowerTeamSelectReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerTeamSelectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerTeamSelectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerTeamSelectReq& from);
  void MergeFrom(const TowerTeamSelectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerTeamSelectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.TowerTeam tower_team_list = 11;
  int tower_team_list_size() const;
  void clear_tower_team_list();
  static const int kTowerTeamListFieldNumber = 11;
  const ::proto::TowerTeam& tower_team_list(int index) const;
  ::proto::TowerTeam* mutable_tower_team_list(int index);
  ::proto::TowerTeam* add_tower_team_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >*
      mutable_tower_team_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >&
      tower_team_list() const;

  // uint32 floor_id = 10;
  void clear_floor_id();
  static const int kFloorIdFieldNumber = 10;
  ::google::protobuf::uint32 floor_id() const;
  void set_floor_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerTeamSelectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam > tower_team_list_;
  ::google::protobuf::uint32 floor_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerTeamSelectRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerTeamSelectRsp) */ {
 public:
  TowerTeamSelectRsp();
  virtual ~TowerTeamSelectRsp();

  TowerTeamSelectRsp(const TowerTeamSelectRsp& from);

  inline TowerTeamSelectRsp& operator=(const TowerTeamSelectRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerTeamSelectRsp(TowerTeamSelectRsp&& from) noexcept
    : TowerTeamSelectRsp() {
    *this = ::std::move(from);
  }

  inline TowerTeamSelectRsp& operator=(TowerTeamSelectRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerTeamSelectRsp& default_instance();

  static inline const TowerTeamSelectRsp* internal_default_instance() {
    return reinterpret_cast<const TowerTeamSelectRsp*>(
               &_TowerTeamSelectRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TowerTeamSelectRsp* other);
  friend void swap(TowerTeamSelectRsp& a, TowerTeamSelectRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerTeamSelectRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerTeamSelectRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerTeamSelectRsp& from);
  void MergeFrom(const TowerTeamSelectRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerTeamSelectRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerTeamSelectRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerAllDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerAllDataReq) */ {
 public:
  TowerAllDataReq();
  virtual ~TowerAllDataReq();

  TowerAllDataReq(const TowerAllDataReq& from);

  inline TowerAllDataReq& operator=(const TowerAllDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerAllDataReq(TowerAllDataReq&& from) noexcept
    : TowerAllDataReq() {
    *this = ::std::move(from);
  }

  inline TowerAllDataReq& operator=(TowerAllDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerAllDataReq& default_instance();

  static inline const TowerAllDataReq* internal_default_instance() {
    return reinterpret_cast<const TowerAllDataReq*>(
               &_TowerAllDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TowerAllDataReq* other);
  friend void swap(TowerAllDataReq& a, TowerAllDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerAllDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerAllDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerAllDataReq& from);
  void MergeFrom(const TowerAllDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerAllDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_interact = 2;
  void clear_is_interact();
  static const int kIsInteractFieldNumber = 2;
  bool is_interact() const;
  void set_is_interact(bool value);

  // @@protoc_insertion_point(class_scope:proto.TowerAllDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_interact_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerMonthlyBrief : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerMonthlyBrief) */ {
 public:
  TowerMonthlyBrief();
  virtual ~TowerMonthlyBrief();

  TowerMonthlyBrief(const TowerMonthlyBrief& from);

  inline TowerMonthlyBrief& operator=(const TowerMonthlyBrief& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerMonthlyBrief(TowerMonthlyBrief&& from) noexcept
    : TowerMonthlyBrief() {
    *this = ::std::move(from);
  }

  inline TowerMonthlyBrief& operator=(TowerMonthlyBrief&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerMonthlyBrief& default_instance();

  static inline const TowerMonthlyBrief* internal_default_instance() {
    return reinterpret_cast<const TowerMonthlyBrief*>(
               &_TowerMonthlyBrief_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TowerMonthlyBrief* other);
  friend void swap(TowerMonthlyBrief& a, TowerMonthlyBrief& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerMonthlyBrief* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerMonthlyBrief* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerMonthlyBrief& from);
  void MergeFrom(const TowerMonthlyBrief& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerMonthlyBrief* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 best_level_index = 3;
  void clear_best_level_index();
  static const int kBestLevelIndexFieldNumber = 3;
  ::google::protobuf::uint32 best_level_index() const;
  void set_best_level_index(::google::protobuf::uint32 value);

  // uint32 best_floor_index = 6;
  void clear_best_floor_index();
  static const int kBestFloorIndexFieldNumber = 6;
  ::google::protobuf::uint32 best_floor_index() const;
  void set_best_floor_index(::google::protobuf::uint32 value);

  // uint32 total_star_count = 12;
  void clear_total_star_count();
  static const int kTotalStarCountFieldNumber = 12;
  ::google::protobuf::uint32 total_star_count() const;
  void set_total_star_count(::google::protobuf::uint32 value);

  // uint32 tower_schedule_id = 15;
  void clear_tower_schedule_id();
  static const int kTowerScheduleIdFieldNumber = 15;
  ::google::protobuf::uint32 tower_schedule_id() const;
  void set_tower_schedule_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerMonthlyBrief)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 best_level_index_;
  ::google::protobuf::uint32 best_floor_index_;
  ::google::protobuf::uint32 total_star_count_;
  ::google::protobuf::uint32 tower_schedule_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class TowerAllDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerAllDataRsp) */ {
 public:
  TowerAllDataRsp();
  virtual ~TowerAllDataRsp();

  TowerAllDataRsp(const TowerAllDataRsp& from);

  inline TowerAllDataRsp& operator=(const TowerAllDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerAllDataRsp(TowerAllDataRsp&& from) noexcept
    : TowerAllDataRsp() {
    *this = ::std::move(from);
  }

  inline TowerAllDataRsp& operator=(TowerAllDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerAllDataRsp& default_instance();

  static inline const TowerAllDataRsp* internal_default_instance() {
    return reinterpret_cast<const TowerAllDataRsp*>(
               &_TowerAllDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(TowerAllDataRsp* other);
  friend void swap(TowerAllDataRsp& a, TowerAllDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerAllDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerAllDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerAllDataRsp& from);
  void MergeFrom(const TowerAllDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerAllDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> floor_open_time_map = 4;
  int floor_open_time_map_size() const;
  void clear_floor_open_time_map();
  static const int kFloorOpenTimeMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      floor_open_time_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_floor_open_time_map();

  // repeated .proto.TowerFloorRecord tower_floor_record_list = 5;
  int tower_floor_record_list_size() const;
  void clear_tower_floor_record_list();
  static const int kTowerFloorRecordListFieldNumber = 5;
  const ::proto::TowerFloorRecord& tower_floor_record_list(int index) const;
  ::proto::TowerFloorRecord* mutable_tower_floor_record_list(int index);
  ::proto::TowerFloorRecord* add_tower_floor_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >*
      mutable_tower_floor_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >&
      tower_floor_record_list() const;

  // map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
  int skip_floor_granted_reward_item_map_size() const;
  void clear_skip_floor_granted_reward_item_map();
  static const int kSkipFloorGrantedRewardItemMapFieldNumber = 12;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skip_floor_granted_reward_item_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skip_floor_granted_reward_item_map();

  // .proto.TowerMonthlyBrief monthly_brief = 14;
  bool has_monthly_brief() const;
  void clear_monthly_brief();
  static const int kMonthlyBriefFieldNumber = 14;
  const ::proto::TowerMonthlyBrief& monthly_brief() const;
  ::proto::TowerMonthlyBrief* mutable_monthly_brief();
  ::proto::TowerMonthlyBrief* release_monthly_brief();
  void set_allocated_monthly_brief(::proto::TowerMonthlyBrief* monthly_brief);

  // .proto.TowerCurLevelRecord cur_level_record = 15;
  bool has_cur_level_record() const;
  void clear_cur_level_record();
  static const int kCurLevelRecordFieldNumber = 15;
  const ::proto::TowerCurLevelRecord& cur_level_record() const;
  ::proto::TowerCurLevelRecord* mutable_cur_level_record();
  ::proto::TowerCurLevelRecord* release_cur_level_record();
  void set_allocated_cur_level_record(::proto::TowerCurLevelRecord* cur_level_record);

  // .proto.TowerMonthlyBrief last_schedule_monthly_brief = 1222;
  bool has_last_schedule_monthly_brief() const;
  void clear_last_schedule_monthly_brief();
  static const int kLastScheduleMonthlyBriefFieldNumber = 1222;
  const ::proto::TowerMonthlyBrief& last_schedule_monthly_brief() const;
  ::proto::TowerMonthlyBrief* mutable_last_schedule_monthly_brief();
  ::proto::TowerMonthlyBrief* release_last_schedule_monthly_brief();
  void set_allocated_last_schedule_monthly_brief(::proto::TowerMonthlyBrief* last_schedule_monthly_brief);

  // uint32 skip_to_floor_index = 2;
  void clear_skip_to_floor_index();
  static const int kSkipToFloorIndexFieldNumber = 2;
  ::google::protobuf::uint32 skip_to_floor_index() const;
  void set_skip_to_floor_index(::google::protobuf::uint32 value);

  // bool is_first_interact = 3;
  void clear_is_first_interact();
  static const int kIsFirstInteractFieldNumber = 3;
  bool is_first_interact() const;
  void set_is_first_interact(bool value);

  // bool is_finished_entrance_floor = 1;
  void clear_is_finished_entrance_floor();
  static const int kIsFinishedEntranceFloorFieldNumber = 1;
  bool is_finished_entrance_floor() const;
  void set_is_finished_entrance_floor(bool value);

  // uint32 next_schedule_change_time = 6;
  void clear_next_schedule_change_time();
  static const int kNextScheduleChangeTimeFieldNumber = 6;
  ::google::protobuf::uint32 next_schedule_change_time() const;
  void set_next_schedule_change_time(::google::protobuf::uint32 value);

  // uint32 valid_tower_record_num = 7;
  void clear_valid_tower_record_num();
  static const int kValidTowerRecordNumFieldNumber = 7;
  ::google::protobuf::uint32 valid_tower_record_num() const;
  void set_valid_tower_record_num(::google::protobuf::uint32 value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 daily_level_index = 9;
  void clear_daily_level_index();
  static const int kDailyLevelIndexFieldNumber = 9;
  ::google::protobuf::uint32 daily_level_index() const;
  void set_daily_level_index(::google::protobuf::uint32 value);

  // uint32 tower_schedule_id = 10;
  void clear_tower_schedule_id();
  static const int kTowerScheduleIdFieldNumber = 10;
  ::google::protobuf::uint32 tower_schedule_id() const;
  void set_tower_schedule_id(::google::protobuf::uint32 value);

  // uint32 daily_floor_id = 11;
  void clear_daily_floor_id();
  static const int kDailyFloorIdFieldNumber = 11;
  ::google::protobuf::uint32 daily_floor_id() const;
  void set_daily_floor_id(::google::protobuf::uint32 value);

  // uint32 commemorative_reward_id = 13;
  void clear_commemorative_reward_id();
  static const int kCommemorativeRewardIdFieldNumber = 13;
  ::google::protobuf::uint32 commemorative_reward_id() const;
  void set_commemorative_reward_id(::google::protobuf::uint32 value);

  // uint32 schedule_start_time = 914;
  void clear_schedule_start_time();
  static const int kScheduleStartTimeFieldNumber = 914;
  ::google::protobuf::uint32 schedule_start_time() const;
  void set_schedule_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerAllDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class TowerAllDataRsp_FloorOpenTimeMapEntry : public ::google::protobuf::internal::MapEntry<TowerAllDataRsp_FloorOpenTimeMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<TowerAllDataRsp_FloorOpenTimeMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    TowerAllDataRsp_FloorOpenTimeMapEntry();
    TowerAllDataRsp_FloorOpenTimeMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const TowerAllDataRsp_FloorOpenTimeMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      TowerAllDataRsp_FloorOpenTimeMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > floor_open_time_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord > tower_floor_record_list_;
  public:
  class TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry : public ::google::protobuf::internal::MapEntry<TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry();
    TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skip_floor_granted_reward_item_map_;
  private:
  ::proto::TowerMonthlyBrief* monthly_brief_;
  ::proto::TowerCurLevelRecord* cur_level_record_;
  ::proto::TowerMonthlyBrief* last_schedule_monthly_brief_;
  ::google::protobuf::uint32 skip_to_floor_index_;
  bool is_first_interact_;
  bool is_finished_entrance_floor_;
  ::google::protobuf::uint32 next_schedule_change_time_;
  ::google::protobuf::uint32 valid_tower_record_num_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 daily_level_index_;
  ::google::protobuf::uint32 tower_schedule_id_;
  ::google::protobuf::uint32 daily_floor_id_;
  ::google::protobuf::uint32 commemorative_reward_id_;
  ::google::protobuf::uint32 schedule_start_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerEnterLevelReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerEnterLevelReq) */ {
 public:
  TowerEnterLevelReq();
  virtual ~TowerEnterLevelReq();

  TowerEnterLevelReq(const TowerEnterLevelReq& from);

  inline TowerEnterLevelReq& operator=(const TowerEnterLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerEnterLevelReq(TowerEnterLevelReq&& from) noexcept
    : TowerEnterLevelReq() {
    *this = ::std::move(from);
  }

  inline TowerEnterLevelReq& operator=(TowerEnterLevelReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerEnterLevelReq& default_instance();

  static inline const TowerEnterLevelReq* internal_default_instance() {
    return reinterpret_cast<const TowerEnterLevelReq*>(
               &_TowerEnterLevelReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(TowerEnterLevelReq* other);
  friend void swap(TowerEnterLevelReq& a, TowerEnterLevelReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerEnterLevelReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerEnterLevelReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerEnterLevelReq& from);
  void MergeFrom(const TowerEnterLevelReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerEnterLevelReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 enter_point_id = 3;
  void clear_enter_point_id();
  static const int kEnterPointIdFieldNumber = 3;
  ::google::protobuf::uint32 enter_point_id() const;
  void set_enter_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerEnterLevelReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerEnterLevelRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerEnterLevelRsp) */ {
 public:
  TowerEnterLevelRsp();
  virtual ~TowerEnterLevelRsp();

  TowerEnterLevelRsp(const TowerEnterLevelRsp& from);

  inline TowerEnterLevelRsp& operator=(const TowerEnterLevelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerEnterLevelRsp(TowerEnterLevelRsp&& from) noexcept
    : TowerEnterLevelRsp() {
    *this = ::std::move(from);
  }

  inline TowerEnterLevelRsp& operator=(TowerEnterLevelRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerEnterLevelRsp& default_instance();

  static inline const TowerEnterLevelRsp* internal_default_instance() {
    return reinterpret_cast<const TowerEnterLevelRsp*>(
               &_TowerEnterLevelRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(TowerEnterLevelRsp* other);
  friend void swap(TowerEnterLevelRsp& a, TowerEnterLevelRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerEnterLevelRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerEnterLevelRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerEnterLevelRsp& from);
  void MergeFrom(const TowerEnterLevelRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerEnterLevelRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 tower_buff_id_list = 10;
  int tower_buff_id_list_size() const;
  void clear_tower_buff_id_list();
  static const int kTowerBuffIdListFieldNumber = 10;
  ::google::protobuf::uint32 tower_buff_id_list(int index) const;
  void set_tower_buff_id_list(int index, ::google::protobuf::uint32 value);
  void add_tower_buff_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tower_buff_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tower_buff_id_list();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 floor_id = 5;
  void clear_floor_id();
  static const int kFloorIdFieldNumber = 5;
  ::google::protobuf::uint32 floor_id() const;
  void set_floor_id(::google::protobuf::uint32 value);

  // uint32 level_index = 14;
  void clear_level_index();
  static const int kLevelIndexFieldNumber = 14;
  ::google::protobuf::uint32 level_index() const;
  void set_level_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerEnterLevelRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tower_buff_id_list_;
  mutable int _tower_buff_id_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 floor_id_;
  ::google::protobuf::uint32 level_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerBuffSelectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerBuffSelectReq) */ {
 public:
  TowerBuffSelectReq();
  virtual ~TowerBuffSelectReq();

  TowerBuffSelectReq(const TowerBuffSelectReq& from);

  inline TowerBuffSelectReq& operator=(const TowerBuffSelectReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerBuffSelectReq(TowerBuffSelectReq&& from) noexcept
    : TowerBuffSelectReq() {
    *this = ::std::move(from);
  }

  inline TowerBuffSelectReq& operator=(TowerBuffSelectReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerBuffSelectReq& default_instance();

  static inline const TowerBuffSelectReq* internal_default_instance() {
    return reinterpret_cast<const TowerBuffSelectReq*>(
               &_TowerBuffSelectReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(TowerBuffSelectReq* other);
  friend void swap(TowerBuffSelectReq& a, TowerBuffSelectReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerBuffSelectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerBuffSelectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerBuffSelectReq& from);
  void MergeFrom(const TowerBuffSelectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerBuffSelectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 tower_buff_id = 5;
  void clear_tower_buff_id();
  static const int kTowerBuffIdFieldNumber = 5;
  ::google::protobuf::uint32 tower_buff_id() const;
  void set_tower_buff_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerBuffSelectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 tower_buff_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerBuffSelectRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerBuffSelectRsp) */ {
 public:
  TowerBuffSelectRsp();
  virtual ~TowerBuffSelectRsp();

  TowerBuffSelectRsp(const TowerBuffSelectRsp& from);

  inline TowerBuffSelectRsp& operator=(const TowerBuffSelectRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerBuffSelectRsp(TowerBuffSelectRsp&& from) noexcept
    : TowerBuffSelectRsp() {
    *this = ::std::move(from);
  }

  inline TowerBuffSelectRsp& operator=(TowerBuffSelectRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerBuffSelectRsp& default_instance();

  static inline const TowerBuffSelectRsp* internal_default_instance() {
    return reinterpret_cast<const TowerBuffSelectRsp*>(
               &_TowerBuffSelectRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(TowerBuffSelectRsp* other);
  friend void swap(TowerBuffSelectRsp& a, TowerBuffSelectRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerBuffSelectRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerBuffSelectRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerBuffSelectRsp& from);
  void MergeFrom(const TowerBuffSelectRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerBuffSelectRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 tower_buff_id = 13;
  void clear_tower_buff_id();
  static const int kTowerBuffIdFieldNumber = 13;
  ::google::protobuf::uint32 tower_buff_id() const;
  void set_tower_buff_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerBuffSelectRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 tower_buff_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerSurrenderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerSurrenderReq) */ {
 public:
  TowerSurrenderReq();
  virtual ~TowerSurrenderReq();

  TowerSurrenderReq(const TowerSurrenderReq& from);

  inline TowerSurrenderReq& operator=(const TowerSurrenderReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerSurrenderReq(TowerSurrenderReq&& from) noexcept
    : TowerSurrenderReq() {
    *this = ::std::move(from);
  }

  inline TowerSurrenderReq& operator=(TowerSurrenderReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerSurrenderReq& default_instance();

  static inline const TowerSurrenderReq* internal_default_instance() {
    return reinterpret_cast<const TowerSurrenderReq*>(
               &_TowerSurrenderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(TowerSurrenderReq* other);
  friend void swap(TowerSurrenderReq& a, TowerSurrenderReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerSurrenderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerSurrenderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerSurrenderReq& from);
  void MergeFrom(const TowerSurrenderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerSurrenderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.TowerSurrenderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerSurrenderRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerSurrenderRsp) */ {
 public:
  TowerSurrenderRsp();
  virtual ~TowerSurrenderRsp();

  TowerSurrenderRsp(const TowerSurrenderRsp& from);

  inline TowerSurrenderRsp& operator=(const TowerSurrenderRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerSurrenderRsp(TowerSurrenderRsp&& from) noexcept
    : TowerSurrenderRsp() {
    *this = ::std::move(from);
  }

  inline TowerSurrenderRsp& operator=(TowerSurrenderRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerSurrenderRsp& default_instance();

  static inline const TowerSurrenderRsp* internal_default_instance() {
    return reinterpret_cast<const TowerSurrenderRsp*>(
               &_TowerSurrenderRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(TowerSurrenderRsp* other);
  friend void swap(TowerSurrenderRsp& a, TowerSurrenderRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerSurrenderRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerSurrenderRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerSurrenderRsp& from);
  void MergeFrom(const TowerSurrenderRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerSurrenderRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerSurrenderRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerGetFloorStarRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerGetFloorStarRewardReq) */ {
 public:
  TowerGetFloorStarRewardReq();
  virtual ~TowerGetFloorStarRewardReq();

  TowerGetFloorStarRewardReq(const TowerGetFloorStarRewardReq& from);

  inline TowerGetFloorStarRewardReq& operator=(const TowerGetFloorStarRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerGetFloorStarRewardReq(TowerGetFloorStarRewardReq&& from) noexcept
    : TowerGetFloorStarRewardReq() {
    *this = ::std::move(from);
  }

  inline TowerGetFloorStarRewardReq& operator=(TowerGetFloorStarRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerGetFloorStarRewardReq& default_instance();

  static inline const TowerGetFloorStarRewardReq* internal_default_instance() {
    return reinterpret_cast<const TowerGetFloorStarRewardReq*>(
               &_TowerGetFloorStarRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(TowerGetFloorStarRewardReq* other);
  friend void swap(TowerGetFloorStarRewardReq& a, TowerGetFloorStarRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerGetFloorStarRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerGetFloorStarRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerGetFloorStarRewardReq& from);
  void MergeFrom(const TowerGetFloorStarRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerGetFloorStarRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 floor_id = 15;
  void clear_floor_id();
  static const int kFloorIdFieldNumber = 15;
  ::google::protobuf::uint32 floor_id() const;
  void set_floor_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerGetFloorStarRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 floor_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerGetFloorStarRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerGetFloorStarRewardRsp) */ {
 public:
  TowerGetFloorStarRewardRsp();
  virtual ~TowerGetFloorStarRewardRsp();

  TowerGetFloorStarRewardRsp(const TowerGetFloorStarRewardRsp& from);

  inline TowerGetFloorStarRewardRsp& operator=(const TowerGetFloorStarRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerGetFloorStarRewardRsp(TowerGetFloorStarRewardRsp&& from) noexcept
    : TowerGetFloorStarRewardRsp() {
    *this = ::std::move(from);
  }

  inline TowerGetFloorStarRewardRsp& operator=(TowerGetFloorStarRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerGetFloorStarRewardRsp& default_instance();

  static inline const TowerGetFloorStarRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TowerGetFloorStarRewardRsp*>(
               &_TowerGetFloorStarRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(TowerGetFloorStarRewardRsp* other);
  friend void swap(TowerGetFloorStarRewardRsp& a, TowerGetFloorStarRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerGetFloorStarRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerGetFloorStarRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerGetFloorStarRewardRsp& from);
  void MergeFrom(const TowerGetFloorStarRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerGetFloorStarRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 floor_id = 9;
  void clear_floor_id();
  static const int kFloorIdFieldNumber = 9;
  ::google::protobuf::uint32 floor_id() const;
  void set_floor_id(::google::protobuf::uint32 value);

  // int32 retcode = 11;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 11;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerGetFloorStarRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 floor_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerLevelEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerLevelEndNotify) */ {
 public:
  TowerLevelEndNotify();
  virtual ~TowerLevelEndNotify();

  TowerLevelEndNotify(const TowerLevelEndNotify& from);

  inline TowerLevelEndNotify& operator=(const TowerLevelEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerLevelEndNotify(TowerLevelEndNotify&& from) noexcept
    : TowerLevelEndNotify() {
    *this = ::std::move(from);
  }

  inline TowerLevelEndNotify& operator=(TowerLevelEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLevelEndNotify& default_instance();

  static inline const TowerLevelEndNotify* internal_default_instance() {
    return reinterpret_cast<const TowerLevelEndNotify*>(
               &_TowerLevelEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(TowerLevelEndNotify* other);
  friend void swap(TowerLevelEndNotify& a, TowerLevelEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerLevelEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerLevelEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerLevelEndNotify& from);
  void MergeFrom(const TowerLevelEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerLevelEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TowerLevelEndNotify_ContinueStateType ContinueStateType;
  static const ContinueStateType CONTINUE_STATE_CAN_NOT_CONTINUE =
    TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_NOT_CONTINUE;
  static const ContinueStateType CONTINUE_STATE_CAN_ENTER_NEXT_LEVEL =
    TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_ENTER_NEXT_LEVEL;
  static const ContinueStateType CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR =
    TowerLevelEndNotify_ContinueStateType_CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR;
  static inline bool ContinueStateType_IsValid(int value) {
    return TowerLevelEndNotify_ContinueStateType_IsValid(value);
  }
  static const ContinueStateType ContinueStateType_MIN =
    TowerLevelEndNotify_ContinueStateType_ContinueStateType_MIN;
  static const ContinueStateType ContinueStateType_MAX =
    TowerLevelEndNotify_ContinueStateType_ContinueStateType_MAX;
  static const int ContinueStateType_ARRAYSIZE =
    TowerLevelEndNotify_ContinueStateType_ContinueStateType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ContinueStateType_descriptor() {
    return TowerLevelEndNotify_ContinueStateType_descriptor();
  }
  static inline const ::std::string& ContinueStateType_Name(ContinueStateType value) {
    return TowerLevelEndNotify_ContinueStateType_Name(value);
  }
  static inline bool ContinueStateType_Parse(const ::std::string& name,
      ContinueStateType* value) {
    return TowerLevelEndNotify_ContinueStateType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 finished_star_cond_list = 6;
  int finished_star_cond_list_size() const;
  void clear_finished_star_cond_list();
  static const int kFinishedStarCondListFieldNumber = 6;
  ::google::protobuf::uint32 finished_star_cond_list(int index) const;
  void set_finished_star_cond_list(int index, ::google::protobuf::uint32 value);
  void add_finished_star_cond_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finished_star_cond_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finished_star_cond_list();

  // repeated .proto.ItemParam reward_item_list = 12;
  int reward_item_list_size() const;
  void clear_reward_item_list();
  static const int kRewardItemListFieldNumber = 12;
  const ::proto::ItemParam& reward_item_list(int index) const;
  ::proto::ItemParam* mutable_reward_item_list(int index);
  ::proto::ItemParam* add_reward_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_reward_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      reward_item_list() const;

  // uint32 next_floor_id = 4;
  void clear_next_floor_id();
  static const int kNextFloorIdFieldNumber = 4;
  ::google::protobuf::uint32 next_floor_id() const;
  void set_next_floor_id(::google::protobuf::uint32 value);

  // bool is_success = 5;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 5;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 continue_state = 15;
  void clear_continue_state();
  static const int kContinueStateFieldNumber = 15;
  ::google::protobuf::uint32 continue_state() const;
  void set_continue_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerLevelEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finished_star_cond_list_;
  mutable int _finished_star_cond_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > reward_item_list_;
  ::google::protobuf::uint32 next_floor_id_;
  bool is_success_;
  ::google::protobuf::uint32 continue_state_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerLevelStarCondData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerLevelStarCondData) */ {
 public:
  TowerLevelStarCondData();
  virtual ~TowerLevelStarCondData();

  TowerLevelStarCondData(const TowerLevelStarCondData& from);

  inline TowerLevelStarCondData& operator=(const TowerLevelStarCondData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerLevelStarCondData(TowerLevelStarCondData&& from) noexcept
    : TowerLevelStarCondData() {
    *this = ::std::move(from);
  }

  inline TowerLevelStarCondData& operator=(TowerLevelStarCondData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLevelStarCondData& default_instance();

  static inline const TowerLevelStarCondData* internal_default_instance() {
    return reinterpret_cast<const TowerLevelStarCondData*>(
               &_TowerLevelStarCondData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(TowerLevelStarCondData* other);
  friend void swap(TowerLevelStarCondData& a, TowerLevelStarCondData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerLevelStarCondData* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerLevelStarCondData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerLevelStarCondData& from);
  void MergeFrom(const TowerLevelStarCondData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerLevelStarCondData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_fail = 15;
  void clear_is_fail();
  static const int kIsFailFieldNumber = 15;
  bool is_fail() const;
  void set_is_fail(bool value);

  // bool is_pause = 13;
  void clear_is_pause();
  static const int kIsPauseFieldNumber = 13;
  bool is_pause() const;
  void set_is_pause(bool value);

  // uint32 star_cond_index = 6;
  void clear_star_cond_index();
  static const int kStarCondIndexFieldNumber = 6;
  ::google::protobuf::uint32 star_cond_index() const;
  void set_star_cond_index(::google::protobuf::uint32 value);

  // uint32 cond_value = 9;
  void clear_cond_value();
  static const int kCondValueFieldNumber = 9;
  ::google::protobuf::uint32 cond_value() const;
  void set_cond_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerLevelStarCondData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_fail_;
  bool is_pause_;
  ::google::protobuf::uint32 star_cond_index_;
  ::google::protobuf::uint32 cond_value_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerLevelStarCondNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerLevelStarCondNotify) */ {
 public:
  TowerLevelStarCondNotify();
  virtual ~TowerLevelStarCondNotify();

  TowerLevelStarCondNotify(const TowerLevelStarCondNotify& from);

  inline TowerLevelStarCondNotify& operator=(const TowerLevelStarCondNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerLevelStarCondNotify(TowerLevelStarCondNotify&& from) noexcept
    : TowerLevelStarCondNotify() {
    *this = ::std::move(from);
  }

  inline TowerLevelStarCondNotify& operator=(TowerLevelStarCondNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerLevelStarCondNotify& default_instance();

  static inline const TowerLevelStarCondNotify* internal_default_instance() {
    return reinterpret_cast<const TowerLevelStarCondNotify*>(
               &_TowerLevelStarCondNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(TowerLevelStarCondNotify* other);
  friend void swap(TowerLevelStarCondNotify& a, TowerLevelStarCondNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerLevelStarCondNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerLevelStarCondNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerLevelStarCondNotify& from);
  void MergeFrom(const TowerLevelStarCondNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerLevelStarCondNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.TowerLevelStarCondData cond_data_list = 9;
  int cond_data_list_size() const;
  void clear_cond_data_list();
  static const int kCondDataListFieldNumber = 9;
  const ::proto::TowerLevelStarCondData& cond_data_list(int index) const;
  ::proto::TowerLevelStarCondData* mutable_cond_data_list(int index);
  ::proto::TowerLevelStarCondData* add_cond_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelStarCondData >*
      mutable_cond_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelStarCondData >&
      cond_data_list() const;

  // uint32 floor_id = 11;
  void clear_floor_id();
  static const int kFloorIdFieldNumber = 11;
  ::google::protobuf::uint32 floor_id() const;
  void set_floor_id(::google::protobuf::uint32 value);

  // uint32 level_index = 14;
  void clear_level_index();
  static const int kLevelIndexFieldNumber = 14;
  ::google::protobuf::uint32 level_index() const;
  void set_level_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerLevelStarCondNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelStarCondData > cond_data_list_;
  ::google::protobuf::uint32 floor_id_;
  ::google::protobuf::uint32 level_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerMiddleLevelChangeTeamNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerMiddleLevelChangeTeamNotify) */ {
 public:
  TowerMiddleLevelChangeTeamNotify();
  virtual ~TowerMiddleLevelChangeTeamNotify();

  TowerMiddleLevelChangeTeamNotify(const TowerMiddleLevelChangeTeamNotify& from);

  inline TowerMiddleLevelChangeTeamNotify& operator=(const TowerMiddleLevelChangeTeamNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerMiddleLevelChangeTeamNotify(TowerMiddleLevelChangeTeamNotify&& from) noexcept
    : TowerMiddleLevelChangeTeamNotify() {
    *this = ::std::move(from);
  }

  inline TowerMiddleLevelChangeTeamNotify& operator=(TowerMiddleLevelChangeTeamNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerMiddleLevelChangeTeamNotify& default_instance();

  static inline const TowerMiddleLevelChangeTeamNotify* internal_default_instance() {
    return reinterpret_cast<const TowerMiddleLevelChangeTeamNotify*>(
               &_TowerMiddleLevelChangeTeamNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TowerMiddleLevelChangeTeamNotify* other);
  friend void swap(TowerMiddleLevelChangeTeamNotify& a, TowerMiddleLevelChangeTeamNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerMiddleLevelChangeTeamNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerMiddleLevelChangeTeamNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerMiddleLevelChangeTeamNotify& from);
  void MergeFrom(const TowerMiddleLevelChangeTeamNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerMiddleLevelChangeTeamNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.TowerMiddleLevelChangeTeamNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerFightRecordPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerFightRecordPair) */ {
 public:
  TowerFightRecordPair();
  virtual ~TowerFightRecordPair();

  TowerFightRecordPair(const TowerFightRecordPair& from);

  inline TowerFightRecordPair& operator=(const TowerFightRecordPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerFightRecordPair(TowerFightRecordPair&& from) noexcept
    : TowerFightRecordPair() {
    *this = ::std::move(from);
  }

  inline TowerFightRecordPair& operator=(TowerFightRecordPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerFightRecordPair& default_instance();

  static inline const TowerFightRecordPair* internal_default_instance() {
    return reinterpret_cast<const TowerFightRecordPair*>(
               &_TowerFightRecordPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TowerFightRecordPair* other);
  friend void swap(TowerFightRecordPair& a, TowerFightRecordPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerFightRecordPair* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerFightRecordPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerFightRecordPair& from);
  void MergeFrom(const TowerFightRecordPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerFightRecordPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerFightRecordPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 data_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerMonthlyCombatRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerMonthlyCombatRecord) */ {
 public:
  TowerMonthlyCombatRecord();
  virtual ~TowerMonthlyCombatRecord();

  TowerMonthlyCombatRecord(const TowerMonthlyCombatRecord& from);

  inline TowerMonthlyCombatRecord& operator=(const TowerMonthlyCombatRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerMonthlyCombatRecord(TowerMonthlyCombatRecord&& from) noexcept
    : TowerMonthlyCombatRecord() {
    *this = ::std::move(from);
  }

  inline TowerMonthlyCombatRecord& operator=(TowerMonthlyCombatRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerMonthlyCombatRecord& default_instance();

  static inline const TowerMonthlyCombatRecord* internal_default_instance() {
    return reinterpret_cast<const TowerMonthlyCombatRecord*>(
               &_TowerMonthlyCombatRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(TowerMonthlyCombatRecord* other);
  friend void swap(TowerMonthlyCombatRecord& a, TowerMonthlyCombatRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerMonthlyCombatRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerMonthlyCombatRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerMonthlyCombatRecord& from);
  void MergeFrom(const TowerMonthlyCombatRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerMonthlyCombatRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.TowerFightRecordPair most_reveal_avatar_list = 6;
  int most_reveal_avatar_list_size() const;
  void clear_most_reveal_avatar_list();
  static const int kMostRevealAvatarListFieldNumber = 6;
  const ::proto::TowerFightRecordPair& most_reveal_avatar_list(int index) const;
  ::proto::TowerFightRecordPair* mutable_most_reveal_avatar_list(int index);
  ::proto::TowerFightRecordPair* add_most_reveal_avatar_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerFightRecordPair >*
      mutable_most_reveal_avatar_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerFightRecordPair >&
      most_reveal_avatar_list() const;

  // .proto.TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
  bool has_most_cast_energy_skill_avatar_pair() const;
  void clear_most_cast_energy_skill_avatar_pair();
  static const int kMostCastEnergySkillAvatarPairFieldNumber = 4;
  const ::proto::TowerFightRecordPair& most_cast_energy_skill_avatar_pair() const;
  ::proto::TowerFightRecordPair* mutable_most_cast_energy_skill_avatar_pair();
  ::proto::TowerFightRecordPair* release_most_cast_energy_skill_avatar_pair();
  void set_allocated_most_cast_energy_skill_avatar_pair(::proto::TowerFightRecordPair* most_cast_energy_skill_avatar_pair);

  // .proto.TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
  bool has_most_cast_normal_skill_avatar_pair() const;
  void clear_most_cast_normal_skill_avatar_pair();
  static const int kMostCastNormalSkillAvatarPairFieldNumber = 8;
  const ::proto::TowerFightRecordPair& most_cast_normal_skill_avatar_pair() const;
  ::proto::TowerFightRecordPair* mutable_most_cast_normal_skill_avatar_pair();
  ::proto::TowerFightRecordPair* release_most_cast_normal_skill_avatar_pair();
  void set_allocated_most_cast_normal_skill_avatar_pair(::proto::TowerFightRecordPair* most_cast_normal_skill_avatar_pair);

  // .proto.TowerFightRecordPair most_take_damage_avatar_pair = 9;
  bool has_most_take_damage_avatar_pair() const;
  void clear_most_take_damage_avatar_pair();
  static const int kMostTakeDamageAvatarPairFieldNumber = 9;
  const ::proto::TowerFightRecordPair& most_take_damage_avatar_pair() const;
  ::proto::TowerFightRecordPair* mutable_most_take_damage_avatar_pair();
  ::proto::TowerFightRecordPair* release_most_take_damage_avatar_pair();
  void set_allocated_most_take_damage_avatar_pair(::proto::TowerFightRecordPair* most_take_damage_avatar_pair);

  // .proto.TowerFightRecordPair highest_dps_avatr_pair = 12;
  bool has_highest_dps_avatr_pair() const;
  void clear_highest_dps_avatr_pair();
  static const int kHighestDpsAvatrPairFieldNumber = 12;
  const ::proto::TowerFightRecordPair& highest_dps_avatr_pair() const;
  ::proto::TowerFightRecordPair* mutable_highest_dps_avatr_pair();
  ::proto::TowerFightRecordPair* release_highest_dps_avatr_pair();
  void set_allocated_highest_dps_avatr_pair(::proto::TowerFightRecordPair* highest_dps_avatr_pair);

  // .proto.TowerFightRecordPair most_kill_avatar_pair = 14;
  bool has_most_kill_avatar_pair() const;
  void clear_most_kill_avatar_pair();
  static const int kMostKillAvatarPairFieldNumber = 14;
  const ::proto::TowerFightRecordPair& most_kill_avatar_pair() const;
  ::proto::TowerFightRecordPair* mutable_most_kill_avatar_pair();
  ::proto::TowerFightRecordPair* release_most_kill_avatar_pair();
  void set_allocated_most_kill_avatar_pair(::proto::TowerFightRecordPair* most_kill_avatar_pair);

  // @@protoc_insertion_point(class_scope:proto.TowerMonthlyCombatRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TowerFightRecordPair > most_reveal_avatar_list_;
  ::proto::TowerFightRecordPair* most_cast_energy_skill_avatar_pair_;
  ::proto::TowerFightRecordPair* most_cast_normal_skill_avatar_pair_;
  ::proto::TowerFightRecordPair* most_take_damage_avatar_pair_;
  ::proto::TowerFightRecordPair* highest_dps_avatr_pair_;
  ::proto::TowerFightRecordPair* most_kill_avatar_pair_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerMonthlyDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerMonthlyDetail) */ {
 public:
  TowerMonthlyDetail();
  virtual ~TowerMonthlyDetail();

  TowerMonthlyDetail(const TowerMonthlyDetail& from);

  inline TowerMonthlyDetail& operator=(const TowerMonthlyDetail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerMonthlyDetail(TowerMonthlyDetail&& from) noexcept
    : TowerMonthlyDetail() {
    *this = ::std::move(from);
  }

  inline TowerMonthlyDetail& operator=(TowerMonthlyDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerMonthlyDetail& default_instance();

  static inline const TowerMonthlyDetail* internal_default_instance() {
    return reinterpret_cast<const TowerMonthlyDetail*>(
               &_TowerMonthlyDetail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(TowerMonthlyDetail* other);
  friend void swap(TowerMonthlyDetail& a, TowerMonthlyDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerMonthlyDetail* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerMonthlyDetail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerMonthlyDetail& from);
  void MergeFrom(const TowerMonthlyDetail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerMonthlyDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.TowerMonthlyCombatRecord monthly_combat_record = 2;
  bool has_monthly_combat_record() const;
  void clear_monthly_combat_record();
  static const int kMonthlyCombatRecordFieldNumber = 2;
  const ::proto::TowerMonthlyCombatRecord& monthly_combat_record() const;
  ::proto::TowerMonthlyCombatRecord* mutable_monthly_combat_record();
  ::proto::TowerMonthlyCombatRecord* release_monthly_combat_record();
  void set_allocated_monthly_combat_record(::proto::TowerMonthlyCombatRecord* monthly_combat_record);

  // .proto.TowerMonthlyBrief monthly_brief = 12;
  bool has_monthly_brief() const;
  void clear_monthly_brief();
  static const int kMonthlyBriefFieldNumber = 12;
  const ::proto::TowerMonthlyBrief& monthly_brief() const;
  ::proto::TowerMonthlyBrief* mutable_monthly_brief();
  ::proto::TowerMonthlyBrief* release_monthly_brief();
  void set_allocated_monthly_brief(::proto::TowerMonthlyBrief* monthly_brief);

  // @@protoc_insertion_point(class_scope:proto.TowerMonthlyDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::TowerMonthlyCombatRecord* monthly_combat_record_;
  ::proto::TowerMonthlyBrief* monthly_brief_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerRecordHandbookReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerRecordHandbookReq) */ {
 public:
  TowerRecordHandbookReq();
  virtual ~TowerRecordHandbookReq();

  TowerRecordHandbookReq(const TowerRecordHandbookReq& from);

  inline TowerRecordHandbookReq& operator=(const TowerRecordHandbookReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerRecordHandbookReq(TowerRecordHandbookReq&& from) noexcept
    : TowerRecordHandbookReq() {
    *this = ::std::move(from);
  }

  inline TowerRecordHandbookReq& operator=(TowerRecordHandbookReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerRecordHandbookReq& default_instance();

  static inline const TowerRecordHandbookReq* internal_default_instance() {
    return reinterpret_cast<const TowerRecordHandbookReq*>(
               &_TowerRecordHandbookReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(TowerRecordHandbookReq* other);
  friend void swap(TowerRecordHandbookReq& a, TowerRecordHandbookReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerRecordHandbookReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerRecordHandbookReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerRecordHandbookReq& from);
  void MergeFrom(const TowerRecordHandbookReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerRecordHandbookReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.TowerRecordHandbookReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TowerRecordHandbookRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TowerRecordHandbookRsp) */ {
 public:
  TowerRecordHandbookRsp();
  virtual ~TowerRecordHandbookRsp();

  TowerRecordHandbookRsp(const TowerRecordHandbookRsp& from);

  inline TowerRecordHandbookRsp& operator=(const TowerRecordHandbookRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TowerRecordHandbookRsp(TowerRecordHandbookRsp&& from) noexcept
    : TowerRecordHandbookRsp() {
    *this = ::std::move(from);
  }

  inline TowerRecordHandbookRsp& operator=(TowerRecordHandbookRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerRecordHandbookRsp& default_instance();

  static inline const TowerRecordHandbookRsp* internal_default_instance() {
    return reinterpret_cast<const TowerRecordHandbookRsp*>(
               &_TowerRecordHandbookRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(TowerRecordHandbookRsp* other);
  friend void swap(TowerRecordHandbookRsp& a, TowerRecordHandbookRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TowerRecordHandbookRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TowerRecordHandbookRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TowerRecordHandbookRsp& from);
  void MergeFrom(const TowerRecordHandbookRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TowerRecordHandbookRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.TowerMonthlyDetail monthly_detail_list = 14;
  int monthly_detail_list_size() const;
  void clear_monthly_detail_list();
  static const int kMonthlyDetailListFieldNumber = 14;
  const ::proto::TowerMonthlyDetail& monthly_detail_list(int index) const;
  ::proto::TowerMonthlyDetail* mutable_monthly_detail_list(int index);
  ::proto::TowerMonthlyDetail* add_monthly_detail_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TowerMonthlyDetail >*
      mutable_monthly_detail_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TowerMonthlyDetail >&
      monthly_detail_list() const;

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TowerRecordHandbookRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TowerMonthlyDetail > monthly_detail_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ftower_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TowerTeam

// uint32 tower_team_id = 3;
inline void TowerTeam::clear_tower_team_id() {
  tower_team_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerTeam::tower_team_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerTeam.tower_team_id)
  return tower_team_id_;
}
inline void TowerTeam::set_tower_team_id(::google::protobuf::uint32 value) {
  
  tower_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerTeam.tower_team_id)
}

// repeated uint64 avatar_guid_list = 14;
inline int TowerTeam::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
inline void TowerTeam::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 TowerTeam::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerTeam.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
inline void TowerTeam::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerTeam.avatar_guid_list)
}
inline void TowerTeam::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerTeam.avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TowerTeam::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerTeam.avatar_guid_list)
  return avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TowerTeam::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerTeam.avatar_guid_list)
  return &avatar_guid_list_;
}

// -------------------------------------------------------------------

// TowerLevelRecord

// repeated uint32 satisfied_cond_list = 13;
inline int TowerLevelRecord::satisfied_cond_list_size() const {
  return satisfied_cond_list_.size();
}
inline void TowerLevelRecord::clear_satisfied_cond_list() {
  satisfied_cond_list_.Clear();
}
inline ::google::protobuf::uint32 TowerLevelRecord::satisfied_cond_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelRecord.satisfied_cond_list)
  return satisfied_cond_list_.Get(index);
}
inline void TowerLevelRecord::set_satisfied_cond_list(int index, ::google::protobuf::uint32 value) {
  satisfied_cond_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerLevelRecord.satisfied_cond_list)
}
inline void TowerLevelRecord::add_satisfied_cond_list(::google::protobuf::uint32 value) {
  satisfied_cond_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerLevelRecord.satisfied_cond_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerLevelRecord::satisfied_cond_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelRecord.satisfied_cond_list)
  return satisfied_cond_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerLevelRecord::mutable_satisfied_cond_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelRecord.satisfied_cond_list)
  return &satisfied_cond_list_;
}

// uint32 level_id = 10;
inline void TowerLevelRecord::clear_level_id() {
  level_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerLevelRecord::level_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelRecord.level_id)
  return level_id_;
}
inline void TowerLevelRecord::set_level_id(::google::protobuf::uint32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelRecord.level_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TowerFloorRecord

// uint32 floor_star_reward_progress = 15;
inline void TowerFloorRecord::clear_floor_star_reward_progress() {
  floor_star_reward_progress_ = 0u;
}
inline ::google::protobuf::uint32 TowerFloorRecord::floor_star_reward_progress() const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecord.floor_star_reward_progress)
  return floor_star_reward_progress_;
}
inline void TowerFloorRecord::set_floor_star_reward_progress(::google::protobuf::uint32 value) {
  
  floor_star_reward_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFloorRecord.floor_star_reward_progress)
}

// map<uint32, uint32> passed_level_map = 8;
inline int TowerFloorRecord::passed_level_map_size() const {
  return passed_level_map_.size();
}
inline void TowerFloorRecord::clear_passed_level_map() {
  passed_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
TowerFloorRecord::passed_level_map() const {
  // @@protoc_insertion_point(field_map:proto.TowerFloorRecord.passed_level_map)
  return passed_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
TowerFloorRecord::mutable_passed_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.TowerFloorRecord.passed_level_map)
  return passed_level_map_.MutableMap();
}

// uint32 floor_id = 12;
inline void TowerFloorRecord::clear_floor_id() {
  floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerFloorRecord::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecord.floor_id)
  return floor_id_;
}
inline void TowerFloorRecord::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFloorRecord.floor_id)
}

// repeated .proto.TowerLevelRecord passed_level_record_list = 2;
inline int TowerFloorRecord::passed_level_record_list_size() const {
  return passed_level_record_list_.size();
}
inline void TowerFloorRecord::clear_passed_level_record_list() {
  passed_level_record_list_.Clear();
}
inline const ::proto::TowerLevelRecord& TowerFloorRecord::passed_level_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_.Get(index);
}
inline ::proto::TowerLevelRecord* TowerFloorRecord::mutable_passed_level_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_.Mutable(index);
}
inline ::proto::TowerLevelRecord* TowerFloorRecord::add_passed_level_record_list() {
  // @@protoc_insertion_point(field_add:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelRecord >*
TowerFloorRecord::mutable_passed_level_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerFloorRecord.passed_level_record_list)
  return &passed_level_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelRecord >&
TowerFloorRecord::passed_level_record_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_;
}

// -------------------------------------------------------------------

// TowerCurLevelRecord

// repeated .proto.TowerTeam tower_team_list = 8;
inline int TowerCurLevelRecord::tower_team_list_size() const {
  return tower_team_list_.size();
}
inline void TowerCurLevelRecord::clear_tower_team_list() {
  tower_team_list_.Clear();
}
inline const ::proto::TowerTeam& TowerCurLevelRecord::tower_team_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_.Get(index);
}
inline ::proto::TowerTeam* TowerCurLevelRecord::mutable_tower_team_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_.Mutable(index);
}
inline ::proto::TowerTeam* TowerCurLevelRecord::add_tower_team_list() {
  // @@protoc_insertion_point(field_add:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >*
TowerCurLevelRecord::mutable_tower_team_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerCurLevelRecord.tower_team_list)
  return &tower_team_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >&
TowerCurLevelRecord::tower_team_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_;
}

// bool is_empty = 6;
inline void TowerCurLevelRecord::clear_is_empty() {
  is_empty_ = false;
}
inline bool TowerCurLevelRecord::is_empty() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.is_empty)
  return is_empty_;
}
inline void TowerCurLevelRecord::set_is_empty(bool value) {
  
  is_empty_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.is_empty)
}

// repeated uint32 buff_id_list = 4;
inline int TowerCurLevelRecord::buff_id_list_size() const {
  return buff_id_list_.size();
}
inline void TowerCurLevelRecord::clear_buff_id_list() {
  buff_id_list_.Clear();
}
inline ::google::protobuf::uint32 TowerCurLevelRecord::buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.buff_id_list)
  return buff_id_list_.Get(index);
}
inline void TowerCurLevelRecord::set_buff_id_list(int index, ::google::protobuf::uint32 value) {
  buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.buff_id_list)
}
inline void TowerCurLevelRecord::add_buff_id_list(::google::protobuf::uint32 value) {
  buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerCurLevelRecord.buff_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerCurLevelRecord::buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerCurLevelRecord.buff_id_list)
  return buff_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerCurLevelRecord::mutable_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerCurLevelRecord.buff_id_list)
  return &buff_id_list_;
}

// bool is_upper_part = 2;
inline void TowerCurLevelRecord::clear_is_upper_part() {
  is_upper_part_ = false;
}
inline bool TowerCurLevelRecord::is_upper_part() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.is_upper_part)
  return is_upper_part_;
}
inline void TowerCurLevelRecord::set_is_upper_part(bool value) {
  
  is_upper_part_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.is_upper_part)
}

// uint32 cur_level_index = 1;
inline void TowerCurLevelRecord::clear_cur_level_index() {
  cur_level_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerCurLevelRecord::cur_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.cur_level_index)
  return cur_level_index_;
}
inline void TowerCurLevelRecord::set_cur_level_index(::google::protobuf::uint32 value) {
  
  cur_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.cur_level_index)
}

// uint32 cur_floor_id = 15;
inline void TowerCurLevelRecord::clear_cur_floor_id() {
  cur_floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerCurLevelRecord::cur_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.cur_floor_id)
  return cur_floor_id_;
}
inline void TowerCurLevelRecord::set_cur_floor_id(::google::protobuf::uint32 value) {
  
  cur_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.cur_floor_id)
}

// -------------------------------------------------------------------

// TowerBriefDataNotify

// uint32 total_star_num = 11;
inline void TowerBriefDataNotify::clear_total_star_num() {
  total_star_num_ = 0u;
}
inline ::google::protobuf::uint32 TowerBriefDataNotify::total_star_num() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.total_star_num)
  return total_star_num_;
}
inline void TowerBriefDataNotify::set_total_star_num(::google::protobuf::uint32 value) {
  
  total_star_num_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.total_star_num)
}

// uint32 last_floor_index = 8;
inline void TowerBriefDataNotify::clear_last_floor_index() {
  last_floor_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerBriefDataNotify::last_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.last_floor_index)
  return last_floor_index_;
}
inline void TowerBriefDataNotify::set_last_floor_index(::google::protobuf::uint32 value) {
  
  last_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.last_floor_index)
}

// uint32 schedule_start_time = 15;
inline void TowerBriefDataNotify::clear_schedule_start_time() {
  schedule_start_time_ = 0u;
}
inline ::google::protobuf::uint32 TowerBriefDataNotify::schedule_start_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.schedule_start_time)
  return schedule_start_time_;
}
inline void TowerBriefDataNotify::set_schedule_start_time(::google::protobuf::uint32 value) {
  
  schedule_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.schedule_start_time)
}

// uint32 next_schedule_change_time = 6;
inline void TowerBriefDataNotify::clear_next_schedule_change_time() {
  next_schedule_change_time_ = 0u;
}
inline ::google::protobuf::uint32 TowerBriefDataNotify::next_schedule_change_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.next_schedule_change_time)
  return next_schedule_change_time_;
}
inline void TowerBriefDataNotify::set_next_schedule_change_time(::google::protobuf::uint32 value) {
  
  next_schedule_change_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.next_schedule_change_time)
}

// bool is_finished_entrance_floor = 14;
inline void TowerBriefDataNotify::clear_is_finished_entrance_floor() {
  is_finished_entrance_floor_ = false;
}
inline bool TowerBriefDataNotify::is_finished_entrance_floor() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.is_finished_entrance_floor)
  return is_finished_entrance_floor_;
}
inline void TowerBriefDataNotify::set_is_finished_entrance_floor(bool value) {
  
  is_finished_entrance_floor_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.is_finished_entrance_floor)
}

// uint32 last_level_index = 4;
inline void TowerBriefDataNotify::clear_last_level_index() {
  last_level_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerBriefDataNotify::last_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.last_level_index)
  return last_level_index_;
}
inline void TowerBriefDataNotify::set_last_level_index(::google::protobuf::uint32 value) {
  
  last_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.last_level_index)
}

// uint32 tower_schedule_id = 5;
inline void TowerBriefDataNotify::clear_tower_schedule_id() {
  tower_schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerBriefDataNotify::tower_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.tower_schedule_id)
  return tower_schedule_id_;
}
inline void TowerBriefDataNotify::set_tower_schedule_id(::google::protobuf::uint32 value) {
  
  tower_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.tower_schedule_id)
}

// -------------------------------------------------------------------

// TowerFloorRecordChangeNotify

// bool is_finished_entrance_floor = 11;
inline void TowerFloorRecordChangeNotify::clear_is_finished_entrance_floor() {
  is_finished_entrance_floor_ = false;
}
inline bool TowerFloorRecordChangeNotify::is_finished_entrance_floor() const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecordChangeNotify.is_finished_entrance_floor)
  return is_finished_entrance_floor_;
}
inline void TowerFloorRecordChangeNotify::set_is_finished_entrance_floor(bool value) {
  
  is_finished_entrance_floor_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFloorRecordChangeNotify.is_finished_entrance_floor)
}

// repeated .proto.TowerFloorRecord tower_floor_record_list = 8;
inline int TowerFloorRecordChangeNotify::tower_floor_record_list_size() const {
  return tower_floor_record_list_.size();
}
inline void TowerFloorRecordChangeNotify::clear_tower_floor_record_list() {
  tower_floor_record_list_.Clear();
}
inline const ::proto::TowerFloorRecord& TowerFloorRecordChangeNotify::tower_floor_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_.Get(index);
}
inline ::proto::TowerFloorRecord* TowerFloorRecordChangeNotify::mutable_tower_floor_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_.Mutable(index);
}
inline ::proto::TowerFloorRecord* TowerFloorRecordChangeNotify::add_tower_floor_record_list() {
  // @@protoc_insertion_point(field_add:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >*
TowerFloorRecordChangeNotify::mutable_tower_floor_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return &tower_floor_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >&
TowerFloorRecordChangeNotify::tower_floor_record_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_;
}

// -------------------------------------------------------------------

// TowerCurLevelRecordChangeNotify

// .proto.TowerCurLevelRecord cur_level_record = 10;
inline bool TowerCurLevelRecordChangeNotify::has_cur_level_record() const {
  return this != internal_default_instance() && cur_level_record_ != NULL;
}
inline void TowerCurLevelRecordChangeNotify::clear_cur_level_record() {
  if (GetArenaNoVirtual() == NULL && cur_level_record_ != NULL) delete cur_level_record_;
  cur_level_record_ = NULL;
}
inline const ::proto::TowerCurLevelRecord& TowerCurLevelRecordChangeNotify::cur_level_record() const {
  const ::proto::TowerCurLevelRecord* p = cur_level_record_;
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerCurLevelRecord*>(
      &::proto::_TowerCurLevelRecord_default_instance_);
}
inline ::proto::TowerCurLevelRecord* TowerCurLevelRecordChangeNotify::mutable_cur_level_record() {
  
  if (cur_level_record_ == NULL) {
    cur_level_record_ = new ::proto::TowerCurLevelRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
  return cur_level_record_;
}
inline ::proto::TowerCurLevelRecord* TowerCurLevelRecordChangeNotify::release_cur_level_record() {
  // @@protoc_insertion_point(field_release:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
  
  ::proto::TowerCurLevelRecord* temp = cur_level_record_;
  cur_level_record_ = NULL;
  return temp;
}
inline void TowerCurLevelRecordChangeNotify::set_allocated_cur_level_record(::proto::TowerCurLevelRecord* cur_level_record) {
  delete cur_level_record_;
  cur_level_record_ = cur_level_record;
  if (cur_level_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
}

// -------------------------------------------------------------------

// TowerDailyRewardProgressChangeNotify

// uint32 daily_floor_id = 15;
inline void TowerDailyRewardProgressChangeNotify::clear_daily_floor_id() {
  daily_floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerDailyRewardProgressChangeNotify::daily_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerDailyRewardProgressChangeNotify.daily_floor_id)
  return daily_floor_id_;
}
inline void TowerDailyRewardProgressChangeNotify::set_daily_floor_id(::google::protobuf::uint32 value) {
  
  daily_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerDailyRewardProgressChangeNotify.daily_floor_id)
}

// uint32 daily_level_index = 9;
inline void TowerDailyRewardProgressChangeNotify::clear_daily_level_index() {
  daily_level_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerDailyRewardProgressChangeNotify::daily_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerDailyRewardProgressChangeNotify.daily_level_index)
  return daily_level_index_;
}
inline void TowerDailyRewardProgressChangeNotify::set_daily_level_index(::google::protobuf::uint32 value) {
  
  daily_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerDailyRewardProgressChangeNotify.daily_level_index)
}

// -------------------------------------------------------------------

// TowerTeamSelectReq

// repeated .proto.TowerTeam tower_team_list = 11;
inline int TowerTeamSelectReq::tower_team_list_size() const {
  return tower_team_list_.size();
}
inline void TowerTeamSelectReq::clear_tower_team_list() {
  tower_team_list_.Clear();
}
inline const ::proto::TowerTeam& TowerTeamSelectReq::tower_team_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_.Get(index);
}
inline ::proto::TowerTeam* TowerTeamSelectReq::mutable_tower_team_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_.Mutable(index);
}
inline ::proto::TowerTeam* TowerTeamSelectReq::add_tower_team_list() {
  // @@protoc_insertion_point(field_add:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >*
TowerTeamSelectReq::mutable_tower_team_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerTeamSelectReq.tower_team_list)
  return &tower_team_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >&
TowerTeamSelectReq::tower_team_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_;
}

// uint32 floor_id = 10;
inline void TowerTeamSelectReq::clear_floor_id() {
  floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerTeamSelectReq::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerTeamSelectReq.floor_id)
  return floor_id_;
}
inline void TowerTeamSelectReq::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerTeamSelectReq.floor_id)
}

// -------------------------------------------------------------------

// TowerTeamSelectRsp

// int32 retcode = 8;
inline void TowerTeamSelectRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TowerTeamSelectRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerTeamSelectRsp.retcode)
  return retcode_;
}
inline void TowerTeamSelectRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerTeamSelectRsp.retcode)
}

// -------------------------------------------------------------------

// TowerAllDataReq

// bool is_interact = 2;
inline void TowerAllDataReq::clear_is_interact() {
  is_interact_ = false;
}
inline bool TowerAllDataReq::is_interact() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataReq.is_interact)
  return is_interact_;
}
inline void TowerAllDataReq::set_is_interact(bool value) {
  
  is_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataReq.is_interact)
}

// -------------------------------------------------------------------

// TowerMonthlyBrief

// uint32 tower_schedule_id = 15;
inline void TowerMonthlyBrief::clear_tower_schedule_id() {
  tower_schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerMonthlyBrief::tower_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.tower_schedule_id)
  return tower_schedule_id_;
}
inline void TowerMonthlyBrief::set_tower_schedule_id(::google::protobuf::uint32 value) {
  
  tower_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.tower_schedule_id)
}

// uint32 best_floor_index = 6;
inline void TowerMonthlyBrief::clear_best_floor_index() {
  best_floor_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerMonthlyBrief::best_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.best_floor_index)
  return best_floor_index_;
}
inline void TowerMonthlyBrief::set_best_floor_index(::google::protobuf::uint32 value) {
  
  best_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.best_floor_index)
}

// uint32 best_level_index = 3;
inline void TowerMonthlyBrief::clear_best_level_index() {
  best_level_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerMonthlyBrief::best_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.best_level_index)
  return best_level_index_;
}
inline void TowerMonthlyBrief::set_best_level_index(::google::protobuf::uint32 value) {
  
  best_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.best_level_index)
}

// uint32 total_star_count = 12;
inline void TowerMonthlyBrief::clear_total_star_count() {
  total_star_count_ = 0u;
}
inline ::google::protobuf::uint32 TowerMonthlyBrief::total_star_count() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.total_star_count)
  return total_star_count_;
}
inline void TowerMonthlyBrief::set_total_star_count(::google::protobuf::uint32 value) {
  
  total_star_count_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.total_star_count)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TowerAllDataRsp

// uint32 tower_schedule_id = 10;
inline void TowerAllDataRsp::clear_tower_schedule_id() {
  tower_schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::tower_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.tower_schedule_id)
  return tower_schedule_id_;
}
inline void TowerAllDataRsp::set_tower_schedule_id(::google::protobuf::uint32 value) {
  
  tower_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.tower_schedule_id)
}

// uint32 daily_level_index = 9;
inline void TowerAllDataRsp::clear_daily_level_index() {
  daily_level_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::daily_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.daily_level_index)
  return daily_level_index_;
}
inline void TowerAllDataRsp::set_daily_level_index(::google::protobuf::uint32 value) {
  
  daily_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.daily_level_index)
}

// map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
inline int TowerAllDataRsp::skip_floor_granted_reward_item_map_size() const {
  return skip_floor_granted_reward_item_map_.size();
}
inline void TowerAllDataRsp::clear_skip_floor_granted_reward_item_map() {
  skip_floor_granted_reward_item_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
TowerAllDataRsp::skip_floor_granted_reward_item_map() const {
  // @@protoc_insertion_point(field_map:proto.TowerAllDataRsp.skip_floor_granted_reward_item_map)
  return skip_floor_granted_reward_item_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
TowerAllDataRsp::mutable_skip_floor_granted_reward_item_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.TowerAllDataRsp.skip_floor_granted_reward_item_map)
  return skip_floor_granted_reward_item_map_.MutableMap();
}

// bool is_first_interact = 3;
inline void TowerAllDataRsp::clear_is_first_interact() {
  is_first_interact_ = false;
}
inline bool TowerAllDataRsp::is_first_interact() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.is_first_interact)
  return is_first_interact_;
}
inline void TowerAllDataRsp::set_is_first_interact(bool value) {
  
  is_first_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.is_first_interact)
}

// bool is_finished_entrance_floor = 1;
inline void TowerAllDataRsp::clear_is_finished_entrance_floor() {
  is_finished_entrance_floor_ = false;
}
inline bool TowerAllDataRsp::is_finished_entrance_floor() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.is_finished_entrance_floor)
  return is_finished_entrance_floor_;
}
inline void TowerAllDataRsp::set_is_finished_entrance_floor(bool value) {
  
  is_finished_entrance_floor_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.is_finished_entrance_floor)
}

// repeated .proto.TowerFloorRecord tower_floor_record_list = 5;
inline int TowerAllDataRsp::tower_floor_record_list_size() const {
  return tower_floor_record_list_.size();
}
inline void TowerAllDataRsp::clear_tower_floor_record_list() {
  tower_floor_record_list_.Clear();
}
inline const ::proto::TowerFloorRecord& TowerAllDataRsp::tower_floor_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_.Get(index);
}
inline ::proto::TowerFloorRecord* TowerAllDataRsp::mutable_tower_floor_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_.Mutable(index);
}
inline ::proto::TowerFloorRecord* TowerAllDataRsp::add_tower_floor_record_list() {
  // @@protoc_insertion_point(field_add:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >*
TowerAllDataRsp::mutable_tower_floor_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerAllDataRsp.tower_floor_record_list)
  return &tower_floor_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >&
TowerAllDataRsp::tower_floor_record_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_;
}

// uint32 daily_floor_id = 11;
inline void TowerAllDataRsp::clear_daily_floor_id() {
  daily_floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::daily_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.daily_floor_id)
  return daily_floor_id_;
}
inline void TowerAllDataRsp::set_daily_floor_id(::google::protobuf::uint32 value) {
  
  daily_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.daily_floor_id)
}

// uint32 commemorative_reward_id = 13;
inline void TowerAllDataRsp::clear_commemorative_reward_id() {
  commemorative_reward_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::commemorative_reward_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.commemorative_reward_id)
  return commemorative_reward_id_;
}
inline void TowerAllDataRsp::set_commemorative_reward_id(::google::protobuf::uint32 value) {
  
  commemorative_reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.commemorative_reward_id)
}

// .proto.TowerMonthlyBrief last_schedule_monthly_brief = 1222;
inline bool TowerAllDataRsp::has_last_schedule_monthly_brief() const {
  return this != internal_default_instance() && last_schedule_monthly_brief_ != NULL;
}
inline void TowerAllDataRsp::clear_last_schedule_monthly_brief() {
  if (GetArenaNoVirtual() == NULL && last_schedule_monthly_brief_ != NULL) delete last_schedule_monthly_brief_;
  last_schedule_monthly_brief_ = NULL;
}
inline const ::proto::TowerMonthlyBrief& TowerAllDataRsp::last_schedule_monthly_brief() const {
  const ::proto::TowerMonthlyBrief* p = last_schedule_monthly_brief_;
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.last_schedule_monthly_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyBrief*>(
      &::proto::_TowerMonthlyBrief_default_instance_);
}
inline ::proto::TowerMonthlyBrief* TowerAllDataRsp::mutable_last_schedule_monthly_brief() {
  
  if (last_schedule_monthly_brief_ == NULL) {
    last_schedule_monthly_brief_ = new ::proto::TowerMonthlyBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.last_schedule_monthly_brief)
  return last_schedule_monthly_brief_;
}
inline ::proto::TowerMonthlyBrief* TowerAllDataRsp::release_last_schedule_monthly_brief() {
  // @@protoc_insertion_point(field_release:proto.TowerAllDataRsp.last_schedule_monthly_brief)
  
  ::proto::TowerMonthlyBrief* temp = last_schedule_monthly_brief_;
  last_schedule_monthly_brief_ = NULL;
  return temp;
}
inline void TowerAllDataRsp::set_allocated_last_schedule_monthly_brief(::proto::TowerMonthlyBrief* last_schedule_monthly_brief) {
  delete last_schedule_monthly_brief_;
  last_schedule_monthly_brief_ = last_schedule_monthly_brief;
  if (last_schedule_monthly_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerAllDataRsp.last_schedule_monthly_brief)
}

// uint32 next_schedule_change_time = 6;
inline void TowerAllDataRsp::clear_next_schedule_change_time() {
  next_schedule_change_time_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::next_schedule_change_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.next_schedule_change_time)
  return next_schedule_change_time_;
}
inline void TowerAllDataRsp::set_next_schedule_change_time(::google::protobuf::uint32 value) {
  
  next_schedule_change_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.next_schedule_change_time)
}

// uint32 valid_tower_record_num = 7;
inline void TowerAllDataRsp::clear_valid_tower_record_num() {
  valid_tower_record_num_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::valid_tower_record_num() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.valid_tower_record_num)
  return valid_tower_record_num_;
}
inline void TowerAllDataRsp::set_valid_tower_record_num(::google::protobuf::uint32 value) {
  
  valid_tower_record_num_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.valid_tower_record_num)
}

// uint32 skip_to_floor_index = 2;
inline void TowerAllDataRsp::clear_skip_to_floor_index() {
  skip_to_floor_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::skip_to_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.skip_to_floor_index)
  return skip_to_floor_index_;
}
inline void TowerAllDataRsp::set_skip_to_floor_index(::google::protobuf::uint32 value) {
  
  skip_to_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.skip_to_floor_index)
}

// map<uint32, uint32> floor_open_time_map = 4;
inline int TowerAllDataRsp::floor_open_time_map_size() const {
  return floor_open_time_map_.size();
}
inline void TowerAllDataRsp::clear_floor_open_time_map() {
  floor_open_time_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
TowerAllDataRsp::floor_open_time_map() const {
  // @@protoc_insertion_point(field_map:proto.TowerAllDataRsp.floor_open_time_map)
  return floor_open_time_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
TowerAllDataRsp::mutable_floor_open_time_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.TowerAllDataRsp.floor_open_time_map)
  return floor_open_time_map_.MutableMap();
}

// .proto.TowerCurLevelRecord cur_level_record = 15;
inline bool TowerAllDataRsp::has_cur_level_record() const {
  return this != internal_default_instance() && cur_level_record_ != NULL;
}
inline void TowerAllDataRsp::clear_cur_level_record() {
  if (GetArenaNoVirtual() == NULL && cur_level_record_ != NULL) delete cur_level_record_;
  cur_level_record_ = NULL;
}
inline const ::proto::TowerCurLevelRecord& TowerAllDataRsp::cur_level_record() const {
  const ::proto::TowerCurLevelRecord* p = cur_level_record_;
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.cur_level_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerCurLevelRecord*>(
      &::proto::_TowerCurLevelRecord_default_instance_);
}
inline ::proto::TowerCurLevelRecord* TowerAllDataRsp::mutable_cur_level_record() {
  
  if (cur_level_record_ == NULL) {
    cur_level_record_ = new ::proto::TowerCurLevelRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.cur_level_record)
  return cur_level_record_;
}
inline ::proto::TowerCurLevelRecord* TowerAllDataRsp::release_cur_level_record() {
  // @@protoc_insertion_point(field_release:proto.TowerAllDataRsp.cur_level_record)
  
  ::proto::TowerCurLevelRecord* temp = cur_level_record_;
  cur_level_record_ = NULL;
  return temp;
}
inline void TowerAllDataRsp::set_allocated_cur_level_record(::proto::TowerCurLevelRecord* cur_level_record) {
  delete cur_level_record_;
  cur_level_record_ = cur_level_record;
  if (cur_level_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerAllDataRsp.cur_level_record)
}

// int32 retcode = 8;
inline void TowerAllDataRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TowerAllDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.retcode)
  return retcode_;
}
inline void TowerAllDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.retcode)
}

// uint32 schedule_start_time = 914;
inline void TowerAllDataRsp::clear_schedule_start_time() {
  schedule_start_time_ = 0u;
}
inline ::google::protobuf::uint32 TowerAllDataRsp::schedule_start_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.schedule_start_time)
  return schedule_start_time_;
}
inline void TowerAllDataRsp::set_schedule_start_time(::google::protobuf::uint32 value) {
  
  schedule_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.schedule_start_time)
}

// .proto.TowerMonthlyBrief monthly_brief = 14;
inline bool TowerAllDataRsp::has_monthly_brief() const {
  return this != internal_default_instance() && monthly_brief_ != NULL;
}
inline void TowerAllDataRsp::clear_monthly_brief() {
  if (GetArenaNoVirtual() == NULL && monthly_brief_ != NULL) delete monthly_brief_;
  monthly_brief_ = NULL;
}
inline const ::proto::TowerMonthlyBrief& TowerAllDataRsp::monthly_brief() const {
  const ::proto::TowerMonthlyBrief* p = monthly_brief_;
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.monthly_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyBrief*>(
      &::proto::_TowerMonthlyBrief_default_instance_);
}
inline ::proto::TowerMonthlyBrief* TowerAllDataRsp::mutable_monthly_brief() {
  
  if (monthly_brief_ == NULL) {
    monthly_brief_ = new ::proto::TowerMonthlyBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.monthly_brief)
  return monthly_brief_;
}
inline ::proto::TowerMonthlyBrief* TowerAllDataRsp::release_monthly_brief() {
  // @@protoc_insertion_point(field_release:proto.TowerAllDataRsp.monthly_brief)
  
  ::proto::TowerMonthlyBrief* temp = monthly_brief_;
  monthly_brief_ = NULL;
  return temp;
}
inline void TowerAllDataRsp::set_allocated_monthly_brief(::proto::TowerMonthlyBrief* monthly_brief) {
  delete monthly_brief_;
  monthly_brief_ = monthly_brief;
  if (monthly_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerAllDataRsp.monthly_brief)
}

// -------------------------------------------------------------------

// TowerEnterLevelReq

// uint32 enter_point_id = 3;
inline void TowerEnterLevelReq::clear_enter_point_id() {
  enter_point_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerEnterLevelReq::enter_point_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelReq.enter_point_id)
  return enter_point_id_;
}
inline void TowerEnterLevelReq::set_enter_point_id(::google::protobuf::uint32 value) {
  
  enter_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelReq.enter_point_id)
}

// -------------------------------------------------------------------

// TowerEnterLevelRsp

// repeated uint32 tower_buff_id_list = 10;
inline int TowerEnterLevelRsp::tower_buff_id_list_size() const {
  return tower_buff_id_list_.size();
}
inline void TowerEnterLevelRsp::clear_tower_buff_id_list() {
  tower_buff_id_list_.Clear();
}
inline ::google::protobuf::uint32 TowerEnterLevelRsp::tower_buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.tower_buff_id_list)
  return tower_buff_id_list_.Get(index);
}
inline void TowerEnterLevelRsp::set_tower_buff_id_list(int index, ::google::protobuf::uint32 value) {
  tower_buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.tower_buff_id_list)
}
inline void TowerEnterLevelRsp::add_tower_buff_id_list(::google::protobuf::uint32 value) {
  tower_buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerEnterLevelRsp.tower_buff_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerEnterLevelRsp::tower_buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerEnterLevelRsp.tower_buff_id_list)
  return tower_buff_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerEnterLevelRsp::mutable_tower_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerEnterLevelRsp.tower_buff_id_list)
  return &tower_buff_id_list_;
}

// int32 retcode = 1;
inline void TowerEnterLevelRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TowerEnterLevelRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.retcode)
  return retcode_;
}
inline void TowerEnterLevelRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.retcode)
}

// uint32 level_index = 14;
inline void TowerEnterLevelRsp::clear_level_index() {
  level_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerEnterLevelRsp::level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.level_index)
  return level_index_;
}
inline void TowerEnterLevelRsp::set_level_index(::google::protobuf::uint32 value) {
  
  level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.level_index)
}

// uint32 floor_id = 5;
inline void TowerEnterLevelRsp::clear_floor_id() {
  floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerEnterLevelRsp::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.floor_id)
  return floor_id_;
}
inline void TowerEnterLevelRsp::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.floor_id)
}

// -------------------------------------------------------------------

// TowerBuffSelectReq

// uint32 tower_buff_id = 5;
inline void TowerBuffSelectReq::clear_tower_buff_id() {
  tower_buff_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerBuffSelectReq::tower_buff_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerBuffSelectReq.tower_buff_id)
  return tower_buff_id_;
}
inline void TowerBuffSelectReq::set_tower_buff_id(::google::protobuf::uint32 value) {
  
  tower_buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBuffSelectReq.tower_buff_id)
}

// -------------------------------------------------------------------

// TowerBuffSelectRsp

// int32 retcode = 11;
inline void TowerBuffSelectRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TowerBuffSelectRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerBuffSelectRsp.retcode)
  return retcode_;
}
inline void TowerBuffSelectRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBuffSelectRsp.retcode)
}

// uint32 tower_buff_id = 13;
inline void TowerBuffSelectRsp::clear_tower_buff_id() {
  tower_buff_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerBuffSelectRsp::tower_buff_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerBuffSelectRsp.tower_buff_id)
  return tower_buff_id_;
}
inline void TowerBuffSelectRsp::set_tower_buff_id(::google::protobuf::uint32 value) {
  
  tower_buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBuffSelectRsp.tower_buff_id)
}

// -------------------------------------------------------------------

// TowerSurrenderReq

// -------------------------------------------------------------------

// TowerSurrenderRsp

// int32 retcode = 9;
inline void TowerSurrenderRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TowerSurrenderRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerSurrenderRsp.retcode)
  return retcode_;
}
inline void TowerSurrenderRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerSurrenderRsp.retcode)
}

// -------------------------------------------------------------------

// TowerGetFloorStarRewardReq

// uint32 floor_id = 15;
inline void TowerGetFloorStarRewardReq::clear_floor_id() {
  floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerGetFloorStarRewardReq::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerGetFloorStarRewardReq.floor_id)
  return floor_id_;
}
inline void TowerGetFloorStarRewardReq::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerGetFloorStarRewardReq.floor_id)
}

// -------------------------------------------------------------------

// TowerGetFloorStarRewardRsp

// int32 retcode = 11;
inline void TowerGetFloorStarRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TowerGetFloorStarRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerGetFloorStarRewardRsp.retcode)
  return retcode_;
}
inline void TowerGetFloorStarRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerGetFloorStarRewardRsp.retcode)
}

// uint32 floor_id = 9;
inline void TowerGetFloorStarRewardRsp::clear_floor_id() {
  floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerGetFloorStarRewardRsp::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerGetFloorStarRewardRsp.floor_id)
  return floor_id_;
}
inline void TowerGetFloorStarRewardRsp::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerGetFloorStarRewardRsp.floor_id)
}

// -------------------------------------------------------------------

// TowerLevelEndNotify

// uint32 next_floor_id = 4;
inline void TowerLevelEndNotify::clear_next_floor_id() {
  next_floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerLevelEndNotify::next_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.next_floor_id)
  return next_floor_id_;
}
inline void TowerLevelEndNotify::set_next_floor_id(::google::protobuf::uint32 value) {
  
  next_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.next_floor_id)
}

// repeated .proto.ItemParam reward_item_list = 12;
inline int TowerLevelEndNotify::reward_item_list_size() const {
  return reward_item_list_.size();
}
inline void TowerLevelEndNotify::clear_reward_item_list() {
  reward_item_list_.Clear();
}
inline const ::proto::ItemParam& TowerLevelEndNotify::reward_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_.Get(index);
}
inline ::proto::ItemParam* TowerLevelEndNotify::mutable_reward_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_.Mutable(index);
}
inline ::proto::ItemParam* TowerLevelEndNotify::add_reward_item_list() {
  // @@protoc_insertion_point(field_add:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TowerLevelEndNotify::mutable_reward_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelEndNotify.reward_item_list)
  return &reward_item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TowerLevelEndNotify::reward_item_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_;
}

// uint32 continue_state = 15;
inline void TowerLevelEndNotify::clear_continue_state() {
  continue_state_ = 0u;
}
inline ::google::protobuf::uint32 TowerLevelEndNotify::continue_state() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.continue_state)
  return continue_state_;
}
inline void TowerLevelEndNotify::set_continue_state(::google::protobuf::uint32 value) {
  
  continue_state_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.continue_state)
}

// bool is_success = 5;
inline void TowerLevelEndNotify::clear_is_success() {
  is_success_ = false;
}
inline bool TowerLevelEndNotify::is_success() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.is_success)
  return is_success_;
}
inline void TowerLevelEndNotify::set_is_success(bool value) {
  
  is_success_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.is_success)
}

// repeated uint32 finished_star_cond_list = 6;
inline int TowerLevelEndNotify::finished_star_cond_list_size() const {
  return finished_star_cond_list_.size();
}
inline void TowerLevelEndNotify::clear_finished_star_cond_list() {
  finished_star_cond_list_.Clear();
}
inline ::google::protobuf::uint32 TowerLevelEndNotify::finished_star_cond_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.finished_star_cond_list)
  return finished_star_cond_list_.Get(index);
}
inline void TowerLevelEndNotify::set_finished_star_cond_list(int index, ::google::protobuf::uint32 value) {
  finished_star_cond_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.finished_star_cond_list)
}
inline void TowerLevelEndNotify::add_finished_star_cond_list(::google::protobuf::uint32 value) {
  finished_star_cond_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerLevelEndNotify.finished_star_cond_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerLevelEndNotify::finished_star_cond_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelEndNotify.finished_star_cond_list)
  return finished_star_cond_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerLevelEndNotify::mutable_finished_star_cond_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelEndNotify.finished_star_cond_list)
  return &finished_star_cond_list_;
}

// -------------------------------------------------------------------

// TowerLevelStarCondData

// bool is_fail = 15;
inline void TowerLevelStarCondData::clear_is_fail() {
  is_fail_ = false;
}
inline bool TowerLevelStarCondData::is_fail() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.is_fail)
  return is_fail_;
}
inline void TowerLevelStarCondData::set_is_fail(bool value) {
  
  is_fail_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.is_fail)
}

// uint32 cond_value = 9;
inline void TowerLevelStarCondData::clear_cond_value() {
  cond_value_ = 0u;
}
inline ::google::protobuf::uint32 TowerLevelStarCondData::cond_value() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.cond_value)
  return cond_value_;
}
inline void TowerLevelStarCondData::set_cond_value(::google::protobuf::uint32 value) {
  
  cond_value_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.cond_value)
}

// bool is_pause = 13;
inline void TowerLevelStarCondData::clear_is_pause() {
  is_pause_ = false;
}
inline bool TowerLevelStarCondData::is_pause() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.is_pause)
  return is_pause_;
}
inline void TowerLevelStarCondData::set_is_pause(bool value) {
  
  is_pause_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.is_pause)
}

// uint32 star_cond_index = 6;
inline void TowerLevelStarCondData::clear_star_cond_index() {
  star_cond_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerLevelStarCondData::star_cond_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.star_cond_index)
  return star_cond_index_;
}
inline void TowerLevelStarCondData::set_star_cond_index(::google::protobuf::uint32 value) {
  
  star_cond_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.star_cond_index)
}

// -------------------------------------------------------------------

// TowerLevelStarCondNotify

// uint32 level_index = 14;
inline void TowerLevelStarCondNotify::clear_level_index() {
  level_index_ = 0u;
}
inline ::google::protobuf::uint32 TowerLevelStarCondNotify::level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondNotify.level_index)
  return level_index_;
}
inline void TowerLevelStarCondNotify::set_level_index(::google::protobuf::uint32 value) {
  
  level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondNotify.level_index)
}

// uint32 floor_id = 11;
inline void TowerLevelStarCondNotify::clear_floor_id() {
  floor_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerLevelStarCondNotify::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondNotify.floor_id)
  return floor_id_;
}
inline void TowerLevelStarCondNotify::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondNotify.floor_id)
}

// repeated .proto.TowerLevelStarCondData cond_data_list = 9;
inline int TowerLevelStarCondNotify::cond_data_list_size() const {
  return cond_data_list_.size();
}
inline void TowerLevelStarCondNotify::clear_cond_data_list() {
  cond_data_list_.Clear();
}
inline const ::proto::TowerLevelStarCondData& TowerLevelStarCondNotify::cond_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_.Get(index);
}
inline ::proto::TowerLevelStarCondData* TowerLevelStarCondNotify::mutable_cond_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_.Mutable(index);
}
inline ::proto::TowerLevelStarCondData* TowerLevelStarCondNotify::add_cond_data_list() {
  // @@protoc_insertion_point(field_add:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelStarCondData >*
TowerLevelStarCondNotify::mutable_cond_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelStarCondNotify.cond_data_list)
  return &cond_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelStarCondData >&
TowerLevelStarCondNotify::cond_data_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_;
}

// -------------------------------------------------------------------

// TowerMiddleLevelChangeTeamNotify

// -------------------------------------------------------------------

// TowerFightRecordPair

// uint32 avatar_id = 1;
inline void TowerFightRecordPair::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 TowerFightRecordPair::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerFightRecordPair.avatar_id)
  return avatar_id_;
}
inline void TowerFightRecordPair::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFightRecordPair.avatar_id)
}

// uint32 data = 3;
inline void TowerFightRecordPair::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 TowerFightRecordPair::data() const {
  // @@protoc_insertion_point(field_get:proto.TowerFightRecordPair.data)
  return data_;
}
inline void TowerFightRecordPair::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFightRecordPair.data)
}

// -------------------------------------------------------------------

// TowerMonthlyCombatRecord

// .proto.TowerFightRecordPair most_kill_avatar_pair = 14;
inline bool TowerMonthlyCombatRecord::has_most_kill_avatar_pair() const {
  return this != internal_default_instance() && most_kill_avatar_pair_ != NULL;
}
inline void TowerMonthlyCombatRecord::clear_most_kill_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_kill_avatar_pair_ != NULL) delete most_kill_avatar_pair_;
  most_kill_avatar_pair_ = NULL;
}
inline const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_kill_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_kill_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_kill_avatar_pair() {
  
  if (most_kill_avatar_pair_ == NULL) {
    most_kill_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
  return most_kill_avatar_pair_;
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_kill_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_kill_avatar_pair_;
  most_kill_avatar_pair_ = NULL;
  return temp;
}
inline void TowerMonthlyCombatRecord::set_allocated_most_kill_avatar_pair(::proto::TowerFightRecordPair* most_kill_avatar_pair) {
  delete most_kill_avatar_pair_;
  most_kill_avatar_pair_ = most_kill_avatar_pair;
  if (most_kill_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
}

// .proto.TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
inline bool TowerMonthlyCombatRecord::has_most_cast_normal_skill_avatar_pair() const {
  return this != internal_default_instance() && most_cast_normal_skill_avatar_pair_ != NULL;
}
inline void TowerMonthlyCombatRecord::clear_most_cast_normal_skill_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_cast_normal_skill_avatar_pair_ != NULL) delete most_cast_normal_skill_avatar_pair_;
  most_cast_normal_skill_avatar_pair_ = NULL;
}
inline const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_cast_normal_skill_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_cast_normal_skill_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_cast_normal_skill_avatar_pair() {
  
  if (most_cast_normal_skill_avatar_pair_ == NULL) {
    most_cast_normal_skill_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
  return most_cast_normal_skill_avatar_pair_;
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_cast_normal_skill_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_cast_normal_skill_avatar_pair_;
  most_cast_normal_skill_avatar_pair_ = NULL;
  return temp;
}
inline void TowerMonthlyCombatRecord::set_allocated_most_cast_normal_skill_avatar_pair(::proto::TowerFightRecordPair* most_cast_normal_skill_avatar_pair) {
  delete most_cast_normal_skill_avatar_pair_;
  most_cast_normal_skill_avatar_pair_ = most_cast_normal_skill_avatar_pair;
  if (most_cast_normal_skill_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
}

// repeated .proto.TowerFightRecordPair most_reveal_avatar_list = 6;
inline int TowerMonthlyCombatRecord::most_reveal_avatar_list_size() const {
  return most_reveal_avatar_list_.size();
}
inline void TowerMonthlyCombatRecord::clear_most_reveal_avatar_list() {
  most_reveal_avatar_list_.Clear();
}
inline const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_reveal_avatar_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_.Get(index);
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_reveal_avatar_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_.Mutable(index);
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::add_most_reveal_avatar_list() {
  // @@protoc_insertion_point(field_add:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerFightRecordPair >*
TowerMonthlyCombatRecord::mutable_most_reveal_avatar_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return &most_reveal_avatar_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerFightRecordPair >&
TowerMonthlyCombatRecord::most_reveal_avatar_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_;
}

// .proto.TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
inline bool TowerMonthlyCombatRecord::has_most_cast_energy_skill_avatar_pair() const {
  return this != internal_default_instance() && most_cast_energy_skill_avatar_pair_ != NULL;
}
inline void TowerMonthlyCombatRecord::clear_most_cast_energy_skill_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_cast_energy_skill_avatar_pair_ != NULL) delete most_cast_energy_skill_avatar_pair_;
  most_cast_energy_skill_avatar_pair_ = NULL;
}
inline const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_cast_energy_skill_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_cast_energy_skill_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_cast_energy_skill_avatar_pair() {
  
  if (most_cast_energy_skill_avatar_pair_ == NULL) {
    most_cast_energy_skill_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
  return most_cast_energy_skill_avatar_pair_;
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_cast_energy_skill_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_cast_energy_skill_avatar_pair_;
  most_cast_energy_skill_avatar_pair_ = NULL;
  return temp;
}
inline void TowerMonthlyCombatRecord::set_allocated_most_cast_energy_skill_avatar_pair(::proto::TowerFightRecordPair* most_cast_energy_skill_avatar_pair) {
  delete most_cast_energy_skill_avatar_pair_;
  most_cast_energy_skill_avatar_pair_ = most_cast_energy_skill_avatar_pair;
  if (most_cast_energy_skill_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
}

// .proto.TowerFightRecordPair highest_dps_avatr_pair = 12;
inline bool TowerMonthlyCombatRecord::has_highest_dps_avatr_pair() const {
  return this != internal_default_instance() && highest_dps_avatr_pair_ != NULL;
}
inline void TowerMonthlyCombatRecord::clear_highest_dps_avatr_pair() {
  if (GetArenaNoVirtual() == NULL && highest_dps_avatr_pair_ != NULL) delete highest_dps_avatr_pair_;
  highest_dps_avatr_pair_ = NULL;
}
inline const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::highest_dps_avatr_pair() const {
  const ::proto::TowerFightRecordPair* p = highest_dps_avatr_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_highest_dps_avatr_pair() {
  
  if (highest_dps_avatr_pair_ == NULL) {
    highest_dps_avatr_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
  return highest_dps_avatr_pair_;
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_highest_dps_avatr_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
  
  ::proto::TowerFightRecordPair* temp = highest_dps_avatr_pair_;
  highest_dps_avatr_pair_ = NULL;
  return temp;
}
inline void TowerMonthlyCombatRecord::set_allocated_highest_dps_avatr_pair(::proto::TowerFightRecordPair* highest_dps_avatr_pair) {
  delete highest_dps_avatr_pair_;
  highest_dps_avatr_pair_ = highest_dps_avatr_pair;
  if (highest_dps_avatr_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
}

// .proto.TowerFightRecordPair most_take_damage_avatar_pair = 9;
inline bool TowerMonthlyCombatRecord::has_most_take_damage_avatar_pair() const {
  return this != internal_default_instance() && most_take_damage_avatar_pair_ != NULL;
}
inline void TowerMonthlyCombatRecord::clear_most_take_damage_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_take_damage_avatar_pair_ != NULL) delete most_take_damage_avatar_pair_;
  most_take_damage_avatar_pair_ = NULL;
}
inline const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_take_damage_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_take_damage_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_take_damage_avatar_pair() {
  
  if (most_take_damage_avatar_pair_ == NULL) {
    most_take_damage_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
  return most_take_damage_avatar_pair_;
}
inline ::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_take_damage_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_take_damage_avatar_pair_;
  most_take_damage_avatar_pair_ = NULL;
  return temp;
}
inline void TowerMonthlyCombatRecord::set_allocated_most_take_damage_avatar_pair(::proto::TowerFightRecordPair* most_take_damage_avatar_pair) {
  delete most_take_damage_avatar_pair_;
  most_take_damage_avatar_pair_ = most_take_damage_avatar_pair;
  if (most_take_damage_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
}

// -------------------------------------------------------------------

// TowerMonthlyDetail

// .proto.TowerMonthlyCombatRecord monthly_combat_record = 2;
inline bool TowerMonthlyDetail::has_monthly_combat_record() const {
  return this != internal_default_instance() && monthly_combat_record_ != NULL;
}
inline void TowerMonthlyDetail::clear_monthly_combat_record() {
  if (GetArenaNoVirtual() == NULL && monthly_combat_record_ != NULL) delete monthly_combat_record_;
  monthly_combat_record_ = NULL;
}
inline const ::proto::TowerMonthlyCombatRecord& TowerMonthlyDetail::monthly_combat_record() const {
  const ::proto::TowerMonthlyCombatRecord* p = monthly_combat_record_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyDetail.monthly_combat_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyCombatRecord*>(
      &::proto::_TowerMonthlyCombatRecord_default_instance_);
}
inline ::proto::TowerMonthlyCombatRecord* TowerMonthlyDetail::mutable_monthly_combat_record() {
  
  if (monthly_combat_record_ == NULL) {
    monthly_combat_record_ = new ::proto::TowerMonthlyCombatRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyDetail.monthly_combat_record)
  return monthly_combat_record_;
}
inline ::proto::TowerMonthlyCombatRecord* TowerMonthlyDetail::release_monthly_combat_record() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyDetail.monthly_combat_record)
  
  ::proto::TowerMonthlyCombatRecord* temp = monthly_combat_record_;
  monthly_combat_record_ = NULL;
  return temp;
}
inline void TowerMonthlyDetail::set_allocated_monthly_combat_record(::proto::TowerMonthlyCombatRecord* monthly_combat_record) {
  delete monthly_combat_record_;
  monthly_combat_record_ = monthly_combat_record;
  if (monthly_combat_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyDetail.monthly_combat_record)
}

// .proto.TowerMonthlyBrief monthly_brief = 12;
inline bool TowerMonthlyDetail::has_monthly_brief() const {
  return this != internal_default_instance() && monthly_brief_ != NULL;
}
inline void TowerMonthlyDetail::clear_monthly_brief() {
  if (GetArenaNoVirtual() == NULL && monthly_brief_ != NULL) delete monthly_brief_;
  monthly_brief_ = NULL;
}
inline const ::proto::TowerMonthlyBrief& TowerMonthlyDetail::monthly_brief() const {
  const ::proto::TowerMonthlyBrief* p = monthly_brief_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyDetail.monthly_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyBrief*>(
      &::proto::_TowerMonthlyBrief_default_instance_);
}
inline ::proto::TowerMonthlyBrief* TowerMonthlyDetail::mutable_monthly_brief() {
  
  if (monthly_brief_ == NULL) {
    monthly_brief_ = new ::proto::TowerMonthlyBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyDetail.monthly_brief)
  return monthly_brief_;
}
inline ::proto::TowerMonthlyBrief* TowerMonthlyDetail::release_monthly_brief() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyDetail.monthly_brief)
  
  ::proto::TowerMonthlyBrief* temp = monthly_brief_;
  monthly_brief_ = NULL;
  return temp;
}
inline void TowerMonthlyDetail::set_allocated_monthly_brief(::proto::TowerMonthlyBrief* monthly_brief) {
  delete monthly_brief_;
  monthly_brief_ = monthly_brief;
  if (monthly_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyDetail.monthly_brief)
}

// -------------------------------------------------------------------

// TowerRecordHandbookReq

// -------------------------------------------------------------------

// TowerRecordHandbookRsp

// int32 retcode = 7;
inline void TowerRecordHandbookRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TowerRecordHandbookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerRecordHandbookRsp.retcode)
  return retcode_;
}
inline void TowerRecordHandbookRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerRecordHandbookRsp.retcode)
}

// repeated .proto.TowerMonthlyDetail monthly_detail_list = 14;
inline int TowerRecordHandbookRsp::monthly_detail_list_size() const {
  return monthly_detail_list_.size();
}
inline void TowerRecordHandbookRsp::clear_monthly_detail_list() {
  monthly_detail_list_.Clear();
}
inline const ::proto::TowerMonthlyDetail& TowerRecordHandbookRsp::monthly_detail_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_.Get(index);
}
inline ::proto::TowerMonthlyDetail* TowerRecordHandbookRsp::mutable_monthly_detail_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_.Mutable(index);
}
inline ::proto::TowerMonthlyDetail* TowerRecordHandbookRsp::add_monthly_detail_list() {
  // @@protoc_insertion_point(field_add:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TowerMonthlyDetail >*
TowerRecordHandbookRsp::mutable_monthly_detail_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return &monthly_detail_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TowerMonthlyDetail >&
TowerRecordHandbookRsp::monthly_detail_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::TowerLevelEndNotify_ContinueStateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TowerLevelEndNotify_ContinueStateType>() {
  return ::proto::TowerLevelEndNotify_ContinueStateType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5ftower_2eproto__INCLUDED
