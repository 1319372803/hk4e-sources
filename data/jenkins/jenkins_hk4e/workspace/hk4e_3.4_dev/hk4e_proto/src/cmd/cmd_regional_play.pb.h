// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_regional_play.proto

#ifndef PROTOBUF_cmd_2fcmd_5fregional_5fplay_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fregional_5fplay_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class DeathZoneInfo;
class DeathZoneInfoDefaultTypeInternal;
extern DeathZoneInfoDefaultTypeInternal _DeathZoneInfo_default_instance_;
class DeathZoneInfoNotify;
class DeathZoneInfoNotifyDefaultTypeInternal;
extern DeathZoneInfoNotifyDefaultTypeInternal _DeathZoneInfoNotify_default_instance_;
class PlayerDeathZoneNotify;
class PlayerDeathZoneNotifyDefaultTypeInternal;
extern PlayerDeathZoneNotifyDefaultTypeInternal _PlayerDeathZoneNotify_default_instance_;
class RegionalPlayInfoNotify;
class RegionalPlayInfoNotifyDefaultTypeInternal;
extern RegionalPlayInfoNotifyDefaultTypeInternal _RegionalPlayInfoNotify_default_instance_;
class RegionalPlayVar;
class RegionalPlayVarDefaultTypeInternal;
extern RegionalPlayVarDefaultTypeInternal _RegionalPlayVar_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fregional_5fplay_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fregional_5fplay_2eproto

// ===================================================================

class RegionalPlayVar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionalPlayVar) */ {
 public:
  RegionalPlayVar();
  virtual ~RegionalPlayVar();

  RegionalPlayVar(const RegionalPlayVar& from);

  inline RegionalPlayVar& operator=(const RegionalPlayVar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionalPlayVar(RegionalPlayVar&& from) noexcept
    : RegionalPlayVar() {
    *this = ::std::move(from);
  }

  inline RegionalPlayVar& operator=(RegionalPlayVar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionalPlayVar& default_instance();

  static inline const RegionalPlayVar* internal_default_instance() {
    return reinterpret_cast<const RegionalPlayVar*>(
               &_RegionalPlayVar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RegionalPlayVar* other);
  friend void swap(RegionalPlayVar& a, RegionalPlayVar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionalPlayVar* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionalPlayVar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionalPlayVar& from);
  void MergeFrom(const RegionalPlayVar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionalPlayVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  float value() const;
  void set_value(float value);

  // float base_value = 10;
  void clear_base_value();
  static const int kBaseValueFieldNumber = 10;
  float base_value() const;
  void set_base_value(float value);

  // float max_value = 11;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 11;
  float max_value() const;
  void set_max_value(float value);

  // uint32 type = 15;
  void clear_type();
  static const int kTypeFieldNumber = 15;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RegionalPlayVar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value_;
  float base_value_;
  float max_value_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionalPlayInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionalPlayInfoNotify) */ {
 public:
  RegionalPlayInfoNotify();
  virtual ~RegionalPlayInfoNotify();

  RegionalPlayInfoNotify(const RegionalPlayInfoNotify& from);

  inline RegionalPlayInfoNotify& operator=(const RegionalPlayInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionalPlayInfoNotify(RegionalPlayInfoNotify&& from) noexcept
    : RegionalPlayInfoNotify() {
    *this = ::std::move(from);
  }

  inline RegionalPlayInfoNotify& operator=(RegionalPlayInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionalPlayInfoNotify& default_instance();

  static inline const RegionalPlayInfoNotify* internal_default_instance() {
    return reinterpret_cast<const RegionalPlayInfoNotify*>(
               &_RegionalPlayInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RegionalPlayInfoNotify* other);
  friend void swap(RegionalPlayInfoNotify& a, RegionalPlayInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionalPlayInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionalPlayInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionalPlayInfoNotify& from);
  void MergeFrom(const RegionalPlayInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionalPlayInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RegionalPlayVar var_list = 5;
  int var_list_size() const;
  void clear_var_list();
  static const int kVarListFieldNumber = 5;
  const ::proto::RegionalPlayVar& var_list(int index) const;
  ::proto::RegionalPlayVar* mutable_var_list(int index);
  ::proto::RegionalPlayVar* add_var_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar >*
      mutable_var_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar >&
      var_list() const;

  // string play_name = 9;
  void clear_play_name();
  static const int kPlayNameFieldNumber = 9;
  const ::std::string& play_name() const;
  void set_play_name(const ::std::string& value);
  #if LANG_CXX11
  void set_play_name(::std::string&& value);
  #endif
  void set_play_name(const char* value);
  void set_play_name(const char* value, size_t size);
  ::std::string* mutable_play_name();
  ::std::string* release_play_name();
  void set_allocated_play_name(::std::string* play_name);

  // uint32 play_type = 7;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 7;
  ::google::protobuf::uint32 play_type() const;
  void set_play_type(::google::protobuf::uint32 value);

  // bool is_enabled = 15;
  void clear_is_enabled();
  static const int kIsEnabledFieldNumber = 15;
  bool is_enabled() const;
  void set_is_enabled(bool value);

  // bool is_in_region = 4;
  void clear_is_in_region();
  static const int kIsInRegionFieldNumber = 4;
  bool is_in_region() const;
  void set_is_in_region(bool value);

  // @@protoc_insertion_point(class_scope:proto.RegionalPlayInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar > var_list_;
  ::google::protobuf::internal::ArenaStringPtr play_name_;
  ::google::protobuf::uint32 play_type_;
  bool is_enabled_;
  bool is_in_region_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeathZoneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeathZoneInfo) */ {
 public:
  DeathZoneInfo();
  virtual ~DeathZoneInfo();

  DeathZoneInfo(const DeathZoneInfo& from);

  inline DeathZoneInfo& operator=(const DeathZoneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathZoneInfo(DeathZoneInfo&& from) noexcept
    : DeathZoneInfo() {
    *this = ::std::move(from);
  }

  inline DeathZoneInfo& operator=(DeathZoneInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeathZoneInfo& default_instance();

  static inline const DeathZoneInfo* internal_default_instance() {
    return reinterpret_cast<const DeathZoneInfo*>(
               &_DeathZoneInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DeathZoneInfo* other);
  friend void swap(DeathZoneInfo& a, DeathZoneInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathZoneInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathZoneInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeathZoneInfo& from);
  void MergeFrom(const DeathZoneInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeathZoneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_open = 9;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 9;
  bool is_open() const;
  void set_is_open(bool value);

  // uint32 id = 14;
  void clear_id();
  static const int kIdFieldNumber = 14;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeathZoneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_open_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeathZoneInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeathZoneInfoNotify) */ {
 public:
  DeathZoneInfoNotify();
  virtual ~DeathZoneInfoNotify();

  DeathZoneInfoNotify(const DeathZoneInfoNotify& from);

  inline DeathZoneInfoNotify& operator=(const DeathZoneInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathZoneInfoNotify(DeathZoneInfoNotify&& from) noexcept
    : DeathZoneInfoNotify() {
    *this = ::std::move(from);
  }

  inline DeathZoneInfoNotify& operator=(DeathZoneInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeathZoneInfoNotify& default_instance();

  static inline const DeathZoneInfoNotify* internal_default_instance() {
    return reinterpret_cast<const DeathZoneInfoNotify*>(
               &_DeathZoneInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DeathZoneInfoNotify* other);
  friend void swap(DeathZoneInfoNotify& a, DeathZoneInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathZoneInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathZoneInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeathZoneInfoNotify& from);
  void MergeFrom(const DeathZoneInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeathZoneInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.DeathZoneInfo death_zone_info_list = 8;
  int death_zone_info_list_size() const;
  void clear_death_zone_info_list();
  static const int kDeathZoneInfoListFieldNumber = 8;
  const ::proto::DeathZoneInfo& death_zone_info_list(int index) const;
  ::proto::DeathZoneInfo* mutable_death_zone_info_list(int index);
  ::proto::DeathZoneInfo* add_death_zone_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo >*
      mutable_death_zone_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo >&
      death_zone_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.DeathZoneInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo > death_zone_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerDeathZoneNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerDeathZoneNotify) */ {
 public:
  PlayerDeathZoneNotify();
  virtual ~PlayerDeathZoneNotify();

  PlayerDeathZoneNotify(const PlayerDeathZoneNotify& from);

  inline PlayerDeathZoneNotify& operator=(const PlayerDeathZoneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDeathZoneNotify(PlayerDeathZoneNotify&& from) noexcept
    : PlayerDeathZoneNotify() {
    *this = ::std::move(from);
  }

  inline PlayerDeathZoneNotify& operator=(PlayerDeathZoneNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDeathZoneNotify& default_instance();

  static inline const PlayerDeathZoneNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerDeathZoneNotify*>(
               &_PlayerDeathZoneNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlayerDeathZoneNotify* other);
  friend void swap(PlayerDeathZoneNotify& a, PlayerDeathZoneNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDeathZoneNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerDeathZoneNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerDeathZoneNotify& from);
  void MergeFrom(const PlayerDeathZoneNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerDeathZoneNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cur_death_zone_id = 8;
  void clear_cur_death_zone_id();
  static const int kCurDeathZoneIdFieldNumber = 8;
  ::google::protobuf::uint32 cur_death_zone_id() const;
  void set_cur_death_zone_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerDeathZoneNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cur_death_zone_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fregional_5fplay_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegionalPlayVar

// uint32 type = 15;
inline void RegionalPlayVar::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 RegionalPlayVar::type() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayVar.type)
  return type_;
}
inline void RegionalPlayVar::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionalPlayVar.type)
}

// float max_value = 11;
inline void RegionalPlayVar::clear_max_value() {
  max_value_ = 0;
}
inline float RegionalPlayVar::max_value() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayVar.max_value)
  return max_value_;
}
inline void RegionalPlayVar::set_max_value(float value) {
  
  max_value_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionalPlayVar.max_value)
}

// float value = 3;
inline void RegionalPlayVar::clear_value() {
  value_ = 0;
}
inline float RegionalPlayVar::value() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayVar.value)
  return value_;
}
inline void RegionalPlayVar::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionalPlayVar.value)
}

// float base_value = 10;
inline void RegionalPlayVar::clear_base_value() {
  base_value_ = 0;
}
inline float RegionalPlayVar::base_value() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayVar.base_value)
  return base_value_;
}
inline void RegionalPlayVar::set_base_value(float value) {
  
  base_value_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionalPlayVar.base_value)
}

// -------------------------------------------------------------------

// RegionalPlayInfoNotify

// repeated .proto.RegionalPlayVar var_list = 5;
inline int RegionalPlayInfoNotify::var_list_size() const {
  return var_list_.size();
}
inline void RegionalPlayInfoNotify::clear_var_list() {
  var_list_.Clear();
}
inline const ::proto::RegionalPlayVar& RegionalPlayInfoNotify::var_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayInfoNotify.var_list)
  return var_list_.Get(index);
}
inline ::proto::RegionalPlayVar* RegionalPlayInfoNotify::mutable_var_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RegionalPlayInfoNotify.var_list)
  return var_list_.Mutable(index);
}
inline ::proto::RegionalPlayVar* RegionalPlayInfoNotify::add_var_list() {
  // @@protoc_insertion_point(field_add:proto.RegionalPlayInfoNotify.var_list)
  return var_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar >*
RegionalPlayInfoNotify::mutable_var_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RegionalPlayInfoNotify.var_list)
  return &var_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RegionalPlayVar >&
RegionalPlayInfoNotify::var_list() const {
  // @@protoc_insertion_point(field_list:proto.RegionalPlayInfoNotify.var_list)
  return var_list_;
}

// string play_name = 9;
inline void RegionalPlayInfoNotify::clear_play_name() {
  play_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionalPlayInfoNotify::play_name() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayInfoNotify.play_name)
  return play_name_.GetNoArena();
}
inline void RegionalPlayInfoNotify::set_play_name(const ::std::string& value) {
  
  play_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionalPlayInfoNotify.play_name)
}
#if LANG_CXX11
inline void RegionalPlayInfoNotify::set_play_name(::std::string&& value) {
  
  play_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionalPlayInfoNotify.play_name)
}
#endif
inline void RegionalPlayInfoNotify::set_play_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  play_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionalPlayInfoNotify.play_name)
}
inline void RegionalPlayInfoNotify::set_play_name(const char* value, size_t size) {
  
  play_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionalPlayInfoNotify.play_name)
}
inline ::std::string* RegionalPlayInfoNotify::mutable_play_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionalPlayInfoNotify.play_name)
  return play_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionalPlayInfoNotify::release_play_name() {
  // @@protoc_insertion_point(field_release:proto.RegionalPlayInfoNotify.play_name)
  
  return play_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionalPlayInfoNotify::set_allocated_play_name(::std::string* play_name) {
  if (play_name != NULL) {
    
  } else {
    
  }
  play_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), play_name);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionalPlayInfoNotify.play_name)
}

// bool is_enabled = 15;
inline void RegionalPlayInfoNotify::clear_is_enabled() {
  is_enabled_ = false;
}
inline bool RegionalPlayInfoNotify::is_enabled() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayInfoNotify.is_enabled)
  return is_enabled_;
}
inline void RegionalPlayInfoNotify::set_is_enabled(bool value) {
  
  is_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionalPlayInfoNotify.is_enabled)
}

// uint32 play_type = 7;
inline void RegionalPlayInfoNotify::clear_play_type() {
  play_type_ = 0u;
}
inline ::google::protobuf::uint32 RegionalPlayInfoNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayInfoNotify.play_type)
  return play_type_;
}
inline void RegionalPlayInfoNotify::set_play_type(::google::protobuf::uint32 value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionalPlayInfoNotify.play_type)
}

// bool is_in_region = 4;
inline void RegionalPlayInfoNotify::clear_is_in_region() {
  is_in_region_ = false;
}
inline bool RegionalPlayInfoNotify::is_in_region() const {
  // @@protoc_insertion_point(field_get:proto.RegionalPlayInfoNotify.is_in_region)
  return is_in_region_;
}
inline void RegionalPlayInfoNotify::set_is_in_region(bool value) {
  
  is_in_region_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionalPlayInfoNotify.is_in_region)
}

// -------------------------------------------------------------------

// DeathZoneInfo

// bool is_open = 9;
inline void DeathZoneInfo::clear_is_open() {
  is_open_ = false;
}
inline bool DeathZoneInfo::is_open() const {
  // @@protoc_insertion_point(field_get:proto.DeathZoneInfo.is_open)
  return is_open_;
}
inline void DeathZoneInfo::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.DeathZoneInfo.is_open)
}

// uint32 id = 14;
inline void DeathZoneInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 DeathZoneInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.DeathZoneInfo.id)
  return id_;
}
inline void DeathZoneInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeathZoneInfo.id)
}

// -------------------------------------------------------------------

// DeathZoneInfoNotify

// repeated .proto.DeathZoneInfo death_zone_info_list = 8;
inline int DeathZoneInfoNotify::death_zone_info_list_size() const {
  return death_zone_info_list_.size();
}
inline void DeathZoneInfoNotify::clear_death_zone_info_list() {
  death_zone_info_list_.Clear();
}
inline const ::proto::DeathZoneInfo& DeathZoneInfoNotify::death_zone_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DeathZoneInfoNotify.death_zone_info_list)
  return death_zone_info_list_.Get(index);
}
inline ::proto::DeathZoneInfo* DeathZoneInfoNotify::mutable_death_zone_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DeathZoneInfoNotify.death_zone_info_list)
  return death_zone_info_list_.Mutable(index);
}
inline ::proto::DeathZoneInfo* DeathZoneInfoNotify::add_death_zone_info_list() {
  // @@protoc_insertion_point(field_add:proto.DeathZoneInfoNotify.death_zone_info_list)
  return death_zone_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo >*
DeathZoneInfoNotify::mutable_death_zone_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DeathZoneInfoNotify.death_zone_info_list)
  return &death_zone_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::DeathZoneInfo >&
DeathZoneInfoNotify::death_zone_info_list() const {
  // @@protoc_insertion_point(field_list:proto.DeathZoneInfoNotify.death_zone_info_list)
  return death_zone_info_list_;
}

// -------------------------------------------------------------------

// PlayerDeathZoneNotify

// uint32 cur_death_zone_id = 8;
inline void PlayerDeathZoneNotify::clear_cur_death_zone_id() {
  cur_death_zone_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerDeathZoneNotify::cur_death_zone_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDeathZoneNotify.cur_death_zone_id)
  return cur_death_zone_id_;
}
inline void PlayerDeathZoneNotify::set_cur_death_zone_id(::google::protobuf::uint32 value) {
  
  cur_death_zone_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDeathZoneNotify.cur_death_zone_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fregional_5fplay_2eproto__INCLUDED
