// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_social.proto

#ifndef PROTOBUF_cmd_2fcmd_5fsocial_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fsocial_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddBlacklistReq;
class AddBlacklistReqDefaultTypeInternal;
extern AddBlacklistReqDefaultTypeInternal _AddBlacklistReq_default_instance_;
class AddBlacklistRsp;
class AddBlacklistRspDefaultTypeInternal;
extern AddBlacklistRspDefaultTypeInternal _AddBlacklistRsp_default_instance_;
class AddFriendNotify;
class AddFriendNotifyDefaultTypeInternal;
extern AddFriendNotifyDefaultTypeInternal _AddFriendNotify_default_instance_;
class AskAddFriendNotify;
class AskAddFriendNotifyDefaultTypeInternal;
extern AskAddFriendNotifyDefaultTypeInternal _AskAddFriendNotify_default_instance_;
class AskAddFriendReq;
class AskAddFriendReqDefaultTypeInternal;
extern AskAddFriendReqDefaultTypeInternal _AskAddFriendReq_default_instance_;
class AskAddFriendRsp;
class AskAddFriendRspDefaultTypeInternal;
extern AskAddFriendRspDefaultTypeInternal _AskAddFriendRsp_default_instance_;
class ChatEmojiCollectionData;
class ChatEmojiCollectionDataDefaultTypeInternal;
extern ChatEmojiCollectionDataDefaultTypeInternal _ChatEmojiCollectionData_default_instance_;
class DealAddFriendReq;
class DealAddFriendReqDefaultTypeInternal;
extern DealAddFriendReqDefaultTypeInternal _DealAddFriendReq_default_instance_;
class DealAddFriendRsp;
class DealAddFriendRspDefaultTypeInternal;
extern DealAddFriendRspDefaultTypeInternal _DealAddFriendRsp_default_instance_;
class DeleteFriendNotify;
class DeleteFriendNotifyDefaultTypeInternal;
extern DeleteFriendNotifyDefaultTypeInternal _DeleteFriendNotify_default_instance_;
class DeleteFriendReq;
class DeleteFriendReqDefaultTypeInternal;
extern DeleteFriendReqDefaultTypeInternal _DeleteFriendReq_default_instance_;
class DeleteFriendRsp;
class DeleteFriendRspDefaultTypeInternal;
extern DeleteFriendRspDefaultTypeInternal _DeleteFriendRsp_default_instance_;
class ForceAddPlayerFriendReq;
class ForceAddPlayerFriendReqDefaultTypeInternal;
extern ForceAddPlayerFriendReqDefaultTypeInternal _ForceAddPlayerFriendReq_default_instance_;
class ForceAddPlayerFriendRsp;
class ForceAddPlayerFriendRspDefaultTypeInternal;
extern ForceAddPlayerFriendRspDefaultTypeInternal _ForceAddPlayerFriendRsp_default_instance_;
class FriendBrief;
class FriendBriefDefaultTypeInternal;
extern FriendBriefDefaultTypeInternal _FriendBrief_default_instance_;
class FriendInfoChangeNotify;
class FriendInfoChangeNotifyDefaultTypeInternal;
extern FriendInfoChangeNotifyDefaultTypeInternal _FriendInfoChangeNotify_default_instance_;
class GetAllUnlockNameCardReq;
class GetAllUnlockNameCardReqDefaultTypeInternal;
extern GetAllUnlockNameCardReqDefaultTypeInternal _GetAllUnlockNameCardReq_default_instance_;
class GetAllUnlockNameCardRsp;
class GetAllUnlockNameCardRspDefaultTypeInternal;
extern GetAllUnlockNameCardRspDefaultTypeInternal _GetAllUnlockNameCardRsp_default_instance_;
class GetChatEmojiCollectionReq;
class GetChatEmojiCollectionReqDefaultTypeInternal;
extern GetChatEmojiCollectionReqDefaultTypeInternal _GetChatEmojiCollectionReq_default_instance_;
class GetChatEmojiCollectionRsp;
class GetChatEmojiCollectionRspDefaultTypeInternal;
extern GetChatEmojiCollectionRspDefaultTypeInternal _GetChatEmojiCollectionRsp_default_instance_;
class GetFriendShowAvatarInfoReq;
class GetFriendShowAvatarInfoReqDefaultTypeInternal;
extern GetFriendShowAvatarInfoReqDefaultTypeInternal _GetFriendShowAvatarInfoReq_default_instance_;
class GetFriendShowAvatarInfoRsp;
class GetFriendShowAvatarInfoRspDefaultTypeInternal;
extern GetFriendShowAvatarInfoRspDefaultTypeInternal _GetFriendShowAvatarInfoRsp_default_instance_;
class GetFriendShowNameCardInfoReq;
class GetFriendShowNameCardInfoReqDefaultTypeInternal;
extern GetFriendShowNameCardInfoReqDefaultTypeInternal _GetFriendShowNameCardInfoReq_default_instance_;
class GetFriendShowNameCardInfoRsp;
class GetFriendShowNameCardInfoRspDefaultTypeInternal;
extern GetFriendShowNameCardInfoRspDefaultTypeInternal _GetFriendShowNameCardInfoRsp_default_instance_;
class GetPlayerAskFriendListReq;
class GetPlayerAskFriendListReqDefaultTypeInternal;
extern GetPlayerAskFriendListReqDefaultTypeInternal _GetPlayerAskFriendListReq_default_instance_;
class GetPlayerAskFriendListRsp;
class GetPlayerAskFriendListRspDefaultTypeInternal;
extern GetPlayerAskFriendListRspDefaultTypeInternal _GetPlayerAskFriendListRsp_default_instance_;
class GetPlayerBlacklistReq;
class GetPlayerBlacklistReqDefaultTypeInternal;
extern GetPlayerBlacklistReqDefaultTypeInternal _GetPlayerBlacklistReq_default_instance_;
class GetPlayerBlacklistRsp;
class GetPlayerBlacklistRspDefaultTypeInternal;
extern GetPlayerBlacklistRspDefaultTypeInternal _GetPlayerBlacklistRsp_default_instance_;
class GetPlayerFriendListReq;
class GetPlayerFriendListReqDefaultTypeInternal;
extern GetPlayerFriendListReqDefaultTypeInternal _GetPlayerFriendListReq_default_instance_;
class GetPlayerFriendListRsp;
class GetPlayerFriendListRspDefaultTypeInternal;
extern GetPlayerFriendListRspDefaultTypeInternal _GetPlayerFriendListRsp_default_instance_;
class GetPlayerSocialDetailReq;
class GetPlayerSocialDetailReqDefaultTypeInternal;
extern GetPlayerSocialDetailReqDefaultTypeInternal _GetPlayerSocialDetailReq_default_instance_;
class GetPlayerSocialDetailRsp;
class GetPlayerSocialDetailRspDefaultTypeInternal;
extern GetPlayerSocialDetailRspDefaultTypeInternal _GetPlayerSocialDetailRsp_default_instance_;
class GetRecentMpPlayerListReq;
class GetRecentMpPlayerListReqDefaultTypeInternal;
extern GetRecentMpPlayerListReqDefaultTypeInternal _GetRecentMpPlayerListReq_default_instance_;
class GetRecentMpPlayerListRsp;
class GetRecentMpPlayerListRspDefaultTypeInternal;
extern GetRecentMpPlayerListRspDefaultTypeInternal _GetRecentMpPlayerListRsp_default_instance_;
class PSNBlackListNotify;
class PSNBlackListNotifyDefaultTypeInternal;
extern PSNBlackListNotifyDefaultTypeInternal _PSNBlackListNotify_default_instance_;
class PSNFriendListNotify;
class PSNFriendListNotifyDefaultTypeInternal;
extern PSNFriendListNotifyDefaultTypeInternal _PSNFriendListNotify_default_instance_;
class PlayerReportReq;
class PlayerReportReqDefaultTypeInternal;
extern PlayerReportReqDefaultTypeInternal _PlayerReportReq_default_instance_;
class PlayerReportRsp;
class PlayerReportRspDefaultTypeInternal;
extern PlayerReportRspDefaultTypeInternal _PlayerReportRsp_default_instance_;
class PlayerSignatureAuditDataNotify;
class PlayerSignatureAuditDataNotifyDefaultTypeInternal;
extern PlayerSignatureAuditDataNotifyDefaultTypeInternal _PlayerSignatureAuditDataNotify_default_instance_;
class PlayerSignatureNotify;
class PlayerSignatureNotifyDefaultTypeInternal;
extern PlayerSignatureNotifyDefaultTypeInternal _PlayerSignatureNotify_default_instance_;
class ProfilePictureChangeNotify;
class ProfilePictureChangeNotifyDefaultTypeInternal;
extern ProfilePictureChangeNotifyDefaultTypeInternal _ProfilePictureChangeNotify_default_instance_;
class ReadSignatureAuditReq;
class ReadSignatureAuditReqDefaultTypeInternal;
extern ReadSignatureAuditReqDefaultTypeInternal _ReadSignatureAuditReq_default_instance_;
class ReadSignatureAuditRsp;
class ReadSignatureAuditRspDefaultTypeInternal;
extern ReadSignatureAuditRspDefaultTypeInternal _ReadSignatureAuditRsp_default_instance_;
class RemoveBlacklistReq;
class RemoveBlacklistReqDefaultTypeInternal;
extern RemoveBlacklistReqDefaultTypeInternal _RemoveBlacklistReq_default_instance_;
class RemoveBlacklistRsp;
class RemoveBlacklistRspDefaultTypeInternal;
extern RemoveBlacklistRspDefaultTypeInternal _RemoveBlacklistRsp_default_instance_;
class SetChatEmojiCollectionReq;
class SetChatEmojiCollectionReqDefaultTypeInternal;
extern SetChatEmojiCollectionReqDefaultTypeInternal _SetChatEmojiCollectionReq_default_instance_;
class SetChatEmojiCollectionRsp;
class SetChatEmojiCollectionRspDefaultTypeInternal;
extern SetChatEmojiCollectionRspDefaultTypeInternal _SetChatEmojiCollectionRsp_default_instance_;
class SetFriendRemarkNameReq;
class SetFriendRemarkNameReqDefaultTypeInternal;
extern SetFriendRemarkNameReqDefaultTypeInternal _SetFriendRemarkNameReq_default_instance_;
class SetFriendRemarkNameRsp;
class SetFriendRemarkNameRspDefaultTypeInternal;
extern SetFriendRemarkNameRspDefaultTypeInternal _SetFriendRemarkNameRsp_default_instance_;
class SetNameCardReq;
class SetNameCardReqDefaultTypeInternal;
extern SetNameCardReqDefaultTypeInternal _SetNameCardReq_default_instance_;
class SetNameCardRsp;
class SetNameCardRspDefaultTypeInternal;
extern SetNameCardRspDefaultTypeInternal _SetNameCardRsp_default_instance_;
class SetPlayerBirthdayReq;
class SetPlayerBirthdayReqDefaultTypeInternal;
extern SetPlayerBirthdayReqDefaultTypeInternal _SetPlayerBirthdayReq_default_instance_;
class SetPlayerBirthdayRsp;
class SetPlayerBirthdayRspDefaultTypeInternal;
extern SetPlayerBirthdayRspDefaultTypeInternal _SetPlayerBirthdayRsp_default_instance_;
class SetPlayerHeadImageReq;
class SetPlayerHeadImageReqDefaultTypeInternal;
extern SetPlayerHeadImageReqDefaultTypeInternal _SetPlayerHeadImageReq_default_instance_;
class SetPlayerHeadImageRsp;
class SetPlayerHeadImageRspDefaultTypeInternal;
extern SetPlayerHeadImageRspDefaultTypeInternal _SetPlayerHeadImageRsp_default_instance_;
class SetPlayerSignatureReq;
class SetPlayerSignatureReqDefaultTypeInternal;
extern SetPlayerSignatureReqDefaultTypeInternal _SetPlayerSignatureReq_default_instance_;
class SetPlayerSignatureRsp;
class SetPlayerSignatureRspDefaultTypeInternal;
extern SetPlayerSignatureRspDefaultTypeInternal _SetPlayerSignatureRsp_default_instance_;
class SignatureAuditConfigNotify;
class SignatureAuditConfigNotifyDefaultTypeInternal;
extern SignatureAuditConfigNotifyDefaultTypeInternal _SignatureAuditConfigNotify_default_instance_;
class SocialDataNotify;
class SocialDataNotifyDefaultTypeInternal;
extern SocialDataNotifyDefaultTypeInternal _SocialDataNotify_default_instance_;
class SocialDetail;
class SocialDetailDefaultTypeInternal;
extern SocialDetailDefaultTypeInternal _SocialDetail_default_instance_;
class SocialShowAvatarInfo;
class SocialShowAvatarInfoDefaultTypeInternal;
extern SocialShowAvatarInfoDefaultTypeInternal _SocialShowAvatarInfo_default_instance_;
class TakeFirstShareRewardReq;
class TakeFirstShareRewardReqDefaultTypeInternal;
extern TakeFirstShareRewardReqDefaultTypeInternal _TakeFirstShareRewardReq_default_instance_;
class TakeFirstShareRewardRsp;
class TakeFirstShareRewardRspDefaultTypeInternal;
extern TakeFirstShareRewardRspDefaultTypeInternal _TakeFirstShareRewardRsp_default_instance_;
class UnlockNameCardNotify;
class UnlockNameCardNotifyDefaultTypeInternal;
extern UnlockNameCardNotifyDefaultTypeInternal _UnlockNameCardNotify_default_instance_;
class UpdatePS4BlockListReq;
class UpdatePS4BlockListReqDefaultTypeInternal;
extern UpdatePS4BlockListReqDefaultTypeInternal _UpdatePS4BlockListReq_default_instance_;
class UpdatePS4BlockListRsp;
class UpdatePS4BlockListRspDefaultTypeInternal;
extern UpdatePS4BlockListRspDefaultTypeInternal _UpdatePS4BlockListRsp_default_instance_;
class UpdatePS4FriendListNotify;
class UpdatePS4FriendListNotifyDefaultTypeInternal;
extern UpdatePS4FriendListNotifyDefaultTypeInternal _UpdatePS4FriendListNotify_default_instance_;
class UpdatePS4FriendListReq;
class UpdatePS4FriendListReqDefaultTypeInternal;
extern UpdatePS4FriendListReqDefaultTypeInternal _UpdatePS4FriendListReq_default_instance_;
class UpdatePS4FriendListRsp;
class UpdatePS4FriendListRspDefaultTypeInternal;
extern UpdatePS4FriendListRspDefaultTypeInternal _UpdatePS4FriendListRsp_default_instance_;
class UpdatePlayerShowAvatarListReq;
class UpdatePlayerShowAvatarListReqDefaultTypeInternal;
extern UpdatePlayerShowAvatarListReqDefaultTypeInternal _UpdatePlayerShowAvatarListReq_default_instance_;
class UpdatePlayerShowAvatarListRsp;
class UpdatePlayerShowAvatarListRspDefaultTypeInternal;
extern UpdatePlayerShowAvatarListRspDefaultTypeInternal _UpdatePlayerShowAvatarListRsp_default_instance_;
class UpdatePlayerShowNameCardListReq;
class UpdatePlayerShowNameCardListReqDefaultTypeInternal;
extern UpdatePlayerShowNameCardListReqDefaultTypeInternal _UpdatePlayerShowNameCardListReq_default_instance_;
class UpdatePlayerShowNameCardListRsp;
class UpdatePlayerShowNameCardListRspDefaultTypeInternal;
extern UpdatePlayerShowNameCardListRspDefaultTypeInternal _UpdatePlayerShowNameCardListRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fsocial_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fsocial_2eproto

enum FriendOnlineState {
  FREIEND_DISCONNECT = 0,
  FRIEND_ONLINE = 1,
  FriendOnlineState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FriendOnlineState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FriendOnlineState_IsValid(int value);
const FriendOnlineState FriendOnlineState_MIN = FREIEND_DISCONNECT;
const FriendOnlineState FriendOnlineState_MAX = FRIEND_ONLINE;
const int FriendOnlineState_ARRAYSIZE = FriendOnlineState_MAX + 1;

const ::google::protobuf::EnumDescriptor* FriendOnlineState_descriptor();
inline const ::std::string& FriendOnlineState_Name(FriendOnlineState value) {
  return ::google::protobuf::internal::NameOfEnum(
    FriendOnlineState_descriptor(), value);
}
inline bool FriendOnlineState_Parse(
    const ::std::string& name, FriendOnlineState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FriendOnlineState>(
    FriendOnlineState_descriptor(), name, value);
}
enum DealAddFriendResultType {
  DEAL_ADD_FRIEND_REJECT = 0,
  DEAL_ADD_FRIEND_ACCEPT = 1,
  DealAddFriendResultType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DealAddFriendResultType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DealAddFriendResultType_IsValid(int value);
const DealAddFriendResultType DealAddFriendResultType_MIN = DEAL_ADD_FRIEND_REJECT;
const DealAddFriendResultType DealAddFriendResultType_MAX = DEAL_ADD_FRIEND_ACCEPT;
const int DealAddFriendResultType_ARRAYSIZE = DealAddFriendResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DealAddFriendResultType_descriptor();
inline const ::std::string& DealAddFriendResultType_Name(DealAddFriendResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DealAddFriendResultType_descriptor(), value);
}
inline bool DealAddFriendResultType_Parse(
    const ::std::string& name, DealAddFriendResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DealAddFriendResultType>(
    DealAddFriendResultType_descriptor(), name, value);
}
// ===================================================================

class SocialShowAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SocialShowAvatarInfo) */ {
 public:
  SocialShowAvatarInfo();
  virtual ~SocialShowAvatarInfo();

  SocialShowAvatarInfo(const SocialShowAvatarInfo& from);

  inline SocialShowAvatarInfo& operator=(const SocialShowAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SocialShowAvatarInfo(SocialShowAvatarInfo&& from) noexcept
    : SocialShowAvatarInfo() {
    *this = ::std::move(from);
  }

  inline SocialShowAvatarInfo& operator=(SocialShowAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialShowAvatarInfo& default_instance();

  static inline const SocialShowAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const SocialShowAvatarInfo*>(
               &_SocialShowAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SocialShowAvatarInfo* other);
  friend void swap(SocialShowAvatarInfo& a, SocialShowAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SocialShowAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SocialShowAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SocialShowAvatarInfo& from);
  void MergeFrom(const SocialShowAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SocialShowAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 costume_id = 3;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 3;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SocialShowAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SocialDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SocialDetail) */ {
 public:
  SocialDetail();
  virtual ~SocialDetail();

  SocialDetail(const SocialDetail& from);

  inline SocialDetail& operator=(const SocialDetail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SocialDetail(SocialDetail&& from) noexcept
    : SocialDetail() {
    *this = ::std::move(from);
  }

  inline SocialDetail& operator=(SocialDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialDetail& default_instance();

  static inline const SocialDetail* internal_default_instance() {
    return reinterpret_cast<const SocialDetail*>(
               &_SocialDetail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SocialDetail* other);
  friend void swap(SocialDetail& a, SocialDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SocialDetail* New() const PROTOBUF_FINAL { return New(NULL); }

  SocialDetail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SocialDetail& from);
  void MergeFrom(const SocialDetail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SocialDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 reserved_list = 8;
  int reserved_list_size() const;
  void clear_reserved_list();
  static const int kReservedListFieldNumber = 8;
  ::google::protobuf::uint32 reserved_list(int index) const;
  void set_reserved_list(int index, ::google::protobuf::uint32 value);
  void add_reserved_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reserved_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reserved_list();

  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  int show_avatar_info_list_size() const;
  void clear_show_avatar_info_list();
  static const int kShowAvatarInfoListFieldNumber = 22;
  const ::proto::SocialShowAvatarInfo& show_avatar_info_list(int index) const;
  ::proto::SocialShowAvatarInfo* mutable_show_avatar_info_list(int index);
  ::proto::SocialShowAvatarInfo* add_show_avatar_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >*
      mutable_show_avatar_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >&
      show_avatar_info_list() const;

  // repeated uint32 show_name_card_id_list = 23;
  int show_name_card_id_list_size() const;
  void clear_show_name_card_id_list();
  static const int kShowNameCardIdListFieldNumber = 23;
  ::google::protobuf::uint32 show_name_card_id_list(int index) const;
  void set_show_name_card_id_list(int index, ::google::protobuf::uint32 value);
  void add_show_name_card_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      show_name_card_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_show_name_card_id_list();

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string signature = 5;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // string online_id = 13;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 13;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string remark_name = 17;
  void clear_remark_name();
  static const int kRemarkNameFieldNumber = 17;
  const ::std::string& remark_name() const;
  void set_remark_name(const ::std::string& value);
  #if LANG_CXX11
  void set_remark_name(::std::string&& value);
  #endif
  void set_remark_name(const char* value);
  void set_remark_name(const char* value, size_t size);
  ::std::string* mutable_remark_name();
  ::std::string* release_remark_name();
  void set_allocated_remark_name(::std::string* remark_name);

  // string ip_code = 26;
  void clear_ip_code();
  static const int kIpCodeFieldNumber = 26;
  const ::std::string& ip_code() const;
  void set_ip_code(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_code(::std::string&& value);
  #endif
  void set_ip_code(const char* value);
  void set_ip_code(const char* value, size_t size);
  ::std::string* mutable_ip_code();
  ::std::string* release_ip_code();
  void set_allocated_ip_code(::std::string* ip_code);

  // .proto.Birthday birthday = 6;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 6;
  const ::proto::Birthday& birthday() const;
  ::proto::Birthday* mutable_birthday();
  ::proto::Birthday* release_birthday();
  void set_allocated_birthday(::proto::Birthday* birthday);

  // .proto.ProfilePicture profile_picture = 25;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 25;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 avatar_id = 4;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 world_level = 7;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 7;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // .proto.FriendOnlineState online_state = 9;
  void clear_online_state();
  static const int kOnlineStateFieldNumber = 9;
  ::proto::FriendOnlineState online_state() const;
  void set_online_state(::proto::FriendOnlineState value);

  // uint32 param = 10;
  void clear_param();
  static const int kParamFieldNumber = 10;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // bool is_friend = 11;
  void clear_is_friend();
  static const int kIsFriendFieldNumber = 11;
  bool is_friend() const;
  void set_is_friend(bool value);

  // bool is_mp_mode_available = 12;
  void clear_is_mp_mode_available();
  static const int kIsMpModeAvailableFieldNumber = 12;
  bool is_mp_mode_available() const;
  void set_is_mp_mode_available(bool value);

  // bool is_in_blacklist = 15;
  void clear_is_in_blacklist();
  static const int kIsInBlacklistFieldNumber = 15;
  bool is_in_blacklist() const;
  void set_is_in_blacklist(bool value);

  // bool is_chat_no_disturb = 16;
  void clear_is_chat_no_disturb();
  static const int kIsChatNoDisturbFieldNumber = 16;
  bool is_chat_no_disturb() const;
  void set_is_chat_no_disturb(bool value);

  // uint32 name_card_id = 14;
  void clear_name_card_id();
  static const int kNameCardIdFieldNumber = 14;
  ::google::protobuf::uint32 name_card_id() const;
  void set_name_card_id(::google::protobuf::uint32 value);

  // uint32 finish_achievement_num = 18;
  void clear_finish_achievement_num();
  static const int kFinishAchievementNumFieldNumber = 18;
  ::google::protobuf::uint32 finish_achievement_num() const;
  void set_finish_achievement_num(::google::protobuf::uint32 value);

  // uint32 tower_floor_index = 19;
  void clear_tower_floor_index();
  static const int kTowerFloorIndexFieldNumber = 19;
  ::google::protobuf::uint32 tower_floor_index() const;
  void set_tower_floor_index(::google::protobuf::uint32 value);

  // uint32 tower_level_index = 20;
  void clear_tower_level_index();
  static const int kTowerLevelIndexFieldNumber = 20;
  ::google::protobuf::uint32 tower_level_index() const;
  void set_tower_level_index(::google::protobuf::uint32 value);

  // bool is_show_avatar = 21;
  void clear_is_show_avatar();
  static const int kIsShowAvatarFieldNumber = 21;
  bool is_show_avatar() const;
  void set_is_show_avatar(bool value);

  // .proto.FriendEnterHomeOption friend_enter_home_option = 24;
  void clear_friend_enter_home_option();
  static const int kFriendEnterHomeOptionFieldNumber = 24;
  ::proto::FriendEnterHomeOption friend_enter_home_option() const;
  void set_friend_enter_home_option(::proto::FriendEnterHomeOption value);

  // @@protoc_insertion_point(class_scope:proto.SocialDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reserved_list_;
  mutable int _reserved_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo > show_avatar_info_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > show_name_card_id_list_;
  mutable int _show_name_card_id_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr remark_name_;
  ::google::protobuf::internal::ArenaStringPtr ip_code_;
  ::proto::Birthday* birthday_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 world_level_;
  int online_state_;
  ::google::protobuf::uint32 param_;
  bool is_friend_;
  bool is_mp_mode_available_;
  bool is_in_blacklist_;
  bool is_chat_no_disturb_;
  ::google::protobuf::uint32 name_card_id_;
  ::google::protobuf::uint32 finish_achievement_num_;
  ::google::protobuf::uint32 tower_floor_index_;
  ::google::protobuf::uint32 tower_level_index_;
  bool is_show_avatar_;
  int friend_enter_home_option_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FriendBrief : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FriendBrief) */ {
 public:
  FriendBrief();
  virtual ~FriendBrief();

  FriendBrief(const FriendBrief& from);

  inline FriendBrief& operator=(const FriendBrief& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FriendBrief(FriendBrief&& from) noexcept
    : FriendBrief() {
    *this = ::std::move(from);
  }

  inline FriendBrief& operator=(FriendBrief&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendBrief& default_instance();

  static inline const FriendBrief* internal_default_instance() {
    return reinterpret_cast<const FriendBrief*>(
               &_FriendBrief_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FriendBrief* other);
  friend void swap(FriendBrief& a, FriendBrief& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FriendBrief* New() const PROTOBUF_FINAL { return New(NULL); }

  FriendBrief* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriendBrief& from);
  void MergeFrom(const FriendBrief& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriendBrief* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
  int show_avatar_info_list_size() const;
  void clear_show_avatar_info_list();
  static const int kShowAvatarInfoListFieldNumber = 22;
  const ::proto::SocialShowAvatarInfo& show_avatar_info_list(int index) const;
  ::proto::SocialShowAvatarInfo* mutable_show_avatar_info_list(int index);
  ::proto::SocialShowAvatarInfo* add_show_avatar_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >*
      mutable_show_avatar_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >&
      show_avatar_info_list() const;

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string signature = 6;
  void clear_signature();
  static const int kSignatureFieldNumber = 6;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // string online_id = 11;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 11;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string remark_name = 17;
  void clear_remark_name();
  static const int kRemarkNameFieldNumber = 17;
  const ::std::string& remark_name() const;
  void set_remark_name(const ::std::string& value);
  #if LANG_CXX11
  void set_remark_name(::std::string&& value);
  #endif
  void set_remark_name(const char* value);
  void set_remark_name(const char* value, size_t size);
  ::std::string* mutable_remark_name();
  ::std::string* release_remark_name();
  void set_allocated_remark_name(::std::string* remark_name);

  // .proto.ProfilePicture profile_picture = 24;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 24;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 avatar_id = 4;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 world_level = 5;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 5;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // .proto.FriendOnlineState online_state = 7;
  void clear_online_state();
  static const int kOnlineStateFieldNumber = 7;
  ::proto::FriendOnlineState online_state() const;
  void set_online_state(::proto::FriendOnlineState value);

  // uint32 param = 8;
  void clear_param();
  static const int kParamFieldNumber = 8;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // uint32 last_active_time = 12;
  void clear_last_active_time();
  static const int kLastActiveTimeFieldNumber = 12;
  ::google::protobuf::uint32 last_active_time() const;
  void set_last_active_time(::google::protobuf::uint32 value);

  // uint32 name_card_id = 13;
  void clear_name_card_id();
  static const int kNameCardIdFieldNumber = 13;
  ::google::protobuf::uint32 name_card_id() const;
  void set_name_card_id(::google::protobuf::uint32 value);

  // uint32 mp_player_num = 14;
  void clear_mp_player_num();
  static const int kMpPlayerNumFieldNumber = 14;
  ::google::protobuf::uint32 mp_player_num() const;
  void set_mp_player_num(::google::protobuf::uint32 value);

  // uint32 chat_sequence = 16;
  void clear_chat_sequence();
  static const int kChatSequenceFieldNumber = 16;
  ::google::protobuf::uint32 chat_sequence() const;
  void set_chat_sequence(::google::protobuf::uint32 value);

  // bool is_mp_mode_available = 10;
  void clear_is_mp_mode_available();
  static const int kIsMpModeAvailableFieldNumber = 10;
  bool is_mp_mode_available() const;
  void set_is_mp_mode_available(bool value);

  // bool is_chat_no_disturb = 15;
  void clear_is_chat_no_disturb();
  static const int kIsChatNoDisturbFieldNumber = 15;
  bool is_chat_no_disturb() const;
  void set_is_chat_no_disturb(bool value);

  // bool is_game_source = 25;
  void clear_is_game_source();
  static const int kIsGameSourceFieldNumber = 25;
  bool is_game_source() const;
  void set_is_game_source(bool value);

  // bool is_psn_source = 26;
  void clear_is_psn_source();
  static const int kIsPsnSourceFieldNumber = 26;
  bool is_psn_source() const;
  void set_is_psn_source(bool value);

  // .proto.FriendEnterHomeOption friend_enter_home_option = 23;
  void clear_friend_enter_home_option();
  static const int kFriendEnterHomeOptionFieldNumber = 23;
  ::proto::FriendEnterHomeOption friend_enter_home_option() const;
  void set_friend_enter_home_option(::proto::FriendEnterHomeOption value);

  // .proto.PlatformType platform_type = 27;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 27;
  ::proto::PlatformType platform_type() const;
  void set_platform_type(::proto::PlatformType value);

  // @@protoc_insertion_point(class_scope:proto.FriendBrief)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo > show_avatar_info_list_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr remark_name_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 world_level_;
  int online_state_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::uint32 last_active_time_;
  ::google::protobuf::uint32 name_card_id_;
  ::google::protobuf::uint32 mp_player_num_;
  ::google::protobuf::uint32 chat_sequence_;
  bool is_mp_mode_available_;
  bool is_chat_no_disturb_;
  bool is_game_source_;
  bool is_psn_source_;
  int friend_enter_home_option_;
  int platform_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatEmojiCollectionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatEmojiCollectionData) */ {
 public:
  ChatEmojiCollectionData();
  virtual ~ChatEmojiCollectionData();

  ChatEmojiCollectionData(const ChatEmojiCollectionData& from);

  inline ChatEmojiCollectionData& operator=(const ChatEmojiCollectionData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatEmojiCollectionData(ChatEmojiCollectionData&& from) noexcept
    : ChatEmojiCollectionData() {
    *this = ::std::move(from);
  }

  inline ChatEmojiCollectionData& operator=(ChatEmojiCollectionData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatEmojiCollectionData& default_instance();

  static inline const ChatEmojiCollectionData* internal_default_instance() {
    return reinterpret_cast<const ChatEmojiCollectionData*>(
               &_ChatEmojiCollectionData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ChatEmojiCollectionData* other);
  friend void swap(ChatEmojiCollectionData& a, ChatEmojiCollectionData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatEmojiCollectionData* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatEmojiCollectionData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatEmojiCollectionData& from);
  void MergeFrom(const ChatEmojiCollectionData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatEmojiCollectionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 emoji_id_list = 1;
  int emoji_id_list_size() const;
  void clear_emoji_id_list();
  static const int kEmojiIdListFieldNumber = 1;
  ::google::protobuf::uint32 emoji_id_list(int index) const;
  void set_emoji_id_list(int index, ::google::protobuf::uint32 value);
  void add_emoji_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      emoji_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_emoji_id_list();

  // @@protoc_insertion_point(class_scope:proto.ChatEmojiCollectionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > emoji_id_list_;
  mutable int _emoji_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerFriendListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerFriendListReq) */ {
 public:
  GetPlayerFriendListReq();
  virtual ~GetPlayerFriendListReq();

  GetPlayerFriendListReq(const GetPlayerFriendListReq& from);

  inline GetPlayerFriendListReq& operator=(const GetPlayerFriendListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerFriendListReq(GetPlayerFriendListReq&& from) noexcept
    : GetPlayerFriendListReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerFriendListReq& operator=(GetPlayerFriendListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerFriendListReq& default_instance();

  static inline const GetPlayerFriendListReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerFriendListReq*>(
               &_GetPlayerFriendListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetPlayerFriendListReq* other);
  friend void swap(GetPlayerFriendListReq& a, GetPlayerFriendListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerFriendListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerFriendListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerFriendListReq& from);
  void MergeFrom(const GetPlayerFriendListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerFriendListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetPlayerFriendListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerFriendListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerFriendListRsp) */ {
 public:
  GetPlayerFriendListRsp();
  virtual ~GetPlayerFriendListRsp();

  GetPlayerFriendListRsp(const GetPlayerFriendListRsp& from);

  inline GetPlayerFriendListRsp& operator=(const GetPlayerFriendListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerFriendListRsp(GetPlayerFriendListRsp&& from) noexcept
    : GetPlayerFriendListRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerFriendListRsp& operator=(GetPlayerFriendListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerFriendListRsp& default_instance();

  static inline const GetPlayerFriendListRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerFriendListRsp*>(
               &_GetPlayerFriendListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetPlayerFriendListRsp* other);
  friend void swap(GetPlayerFriendListRsp& a, GetPlayerFriendListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerFriendListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerFriendListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerFriendListRsp& from);
  void MergeFrom(const GetPlayerFriendListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerFriendListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FriendBrief ask_friend_list = 8;
  int ask_friend_list_size() const;
  void clear_ask_friend_list();
  static const int kAskFriendListFieldNumber = 8;
  const ::proto::FriendBrief& ask_friend_list(int index) const;
  ::proto::FriendBrief* mutable_ask_friend_list(int index);
  ::proto::FriendBrief* add_ask_friend_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_ask_friend_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      ask_friend_list() const;

  // repeated .proto.FriendBrief friend_list = 14;
  int friend_list_size() const;
  void clear_friend_list();
  static const int kFriendListFieldNumber = 14;
  const ::proto::FriendBrief& friend_list(int index) const;
  ::proto::FriendBrief* mutable_friend_list(int index);
  ::proto::FriendBrief* add_friend_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_friend_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      friend_list() const;

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerFriendListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > ask_friend_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > friend_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AskAddFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AskAddFriendReq) */ {
 public:
  AskAddFriendReq();
  virtual ~AskAddFriendReq();

  AskAddFriendReq(const AskAddFriendReq& from);

  inline AskAddFriendReq& operator=(const AskAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AskAddFriendReq(AskAddFriendReq&& from) noexcept
    : AskAddFriendReq() {
    *this = ::std::move(from);
  }

  inline AskAddFriendReq& operator=(AskAddFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAddFriendReq& default_instance();

  static inline const AskAddFriendReq* internal_default_instance() {
    return reinterpret_cast<const AskAddFriendReq*>(
               &_AskAddFriendReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(AskAddFriendReq* other);
  friend void swap(AskAddFriendReq& a, AskAddFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AskAddFriendReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AskAddFriendReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AskAddFriendReq& from);
  void MergeFrom(const AskAddFriendReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AskAddFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 7;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 7;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AskAddFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AskAddFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AskAddFriendRsp) */ {
 public:
  AskAddFriendRsp();
  virtual ~AskAddFriendRsp();

  AskAddFriendRsp(const AskAddFriendRsp& from);

  inline AskAddFriendRsp& operator=(const AskAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AskAddFriendRsp(AskAddFriendRsp&& from) noexcept
    : AskAddFriendRsp() {
    *this = ::std::move(from);
  }

  inline AskAddFriendRsp& operator=(AskAddFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAddFriendRsp& default_instance();

  static inline const AskAddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AskAddFriendRsp*>(
               &_AskAddFriendRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(AskAddFriendRsp* other);
  friend void swap(AskAddFriendRsp& a, AskAddFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AskAddFriendRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AskAddFriendRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AskAddFriendRsp& from);
  void MergeFrom(const AskAddFriendRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AskAddFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 param = 8;
  void clear_param();
  static const int kParamFieldNumber = 8;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // uint32 target_uid = 4;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 4;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AskAddFriendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DealAddFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DealAddFriendReq) */ {
 public:
  DealAddFriendReq();
  virtual ~DealAddFriendReq();

  DealAddFriendReq(const DealAddFriendReq& from);

  inline DealAddFriendReq& operator=(const DealAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DealAddFriendReq(DealAddFriendReq&& from) noexcept
    : DealAddFriendReq() {
    *this = ::std::move(from);
  }

  inline DealAddFriendReq& operator=(DealAddFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DealAddFriendReq& default_instance();

  static inline const DealAddFriendReq* internal_default_instance() {
    return reinterpret_cast<const DealAddFriendReq*>(
               &_DealAddFriendReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(DealAddFriendReq* other);
  friend void swap(DealAddFriendReq& a, DealAddFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DealAddFriendReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DealAddFriendReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DealAddFriendReq& from);
  void MergeFrom(const DealAddFriendReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DealAddFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 10;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 10;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // .proto.DealAddFriendResultType deal_add_friend_result = 12;
  void clear_deal_add_friend_result();
  static const int kDealAddFriendResultFieldNumber = 12;
  ::proto::DealAddFriendResultType deal_add_friend_result() const;
  void set_deal_add_friend_result(::proto::DealAddFriendResultType value);

  // @@protoc_insertion_point(class_scope:proto.DealAddFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  int deal_add_friend_result_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DealAddFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DealAddFriendRsp) */ {
 public:
  DealAddFriendRsp();
  virtual ~DealAddFriendRsp();

  DealAddFriendRsp(const DealAddFriendRsp& from);

  inline DealAddFriendRsp& operator=(const DealAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DealAddFriendRsp(DealAddFriendRsp&& from) noexcept
    : DealAddFriendRsp() {
    *this = ::std::move(from);
  }

  inline DealAddFriendRsp& operator=(DealAddFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DealAddFriendRsp& default_instance();

  static inline const DealAddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const DealAddFriendRsp*>(
               &_DealAddFriendRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(DealAddFriendRsp* other);
  friend void swap(DealAddFriendRsp& a, DealAddFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DealAddFriendRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DealAddFriendRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DealAddFriendRsp& from);
  void MergeFrom(const DealAddFriendRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DealAddFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 5;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 5;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // .proto.DealAddFriendResultType deal_add_friend_result = 6;
  void clear_deal_add_friend_result();
  static const int kDealAddFriendResultFieldNumber = 6;
  ::proto::DealAddFriendResultType deal_add_friend_result() const;
  void set_deal_add_friend_result(::proto::DealAddFriendResultType value);

  // @@protoc_insertion_point(class_scope:proto.DealAddFriendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  int deal_add_friend_result_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerSocialDetailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerSocialDetailReq) */ {
 public:
  GetPlayerSocialDetailReq();
  virtual ~GetPlayerSocialDetailReq();

  GetPlayerSocialDetailReq(const GetPlayerSocialDetailReq& from);

  inline GetPlayerSocialDetailReq& operator=(const GetPlayerSocialDetailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerSocialDetailReq(GetPlayerSocialDetailReq&& from) noexcept
    : GetPlayerSocialDetailReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerSocialDetailReq& operator=(GetPlayerSocialDetailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerSocialDetailReq& default_instance();

  static inline const GetPlayerSocialDetailReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerSocialDetailReq*>(
               &_GetPlayerSocialDetailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetPlayerSocialDetailReq* other);
  friend void swap(GetPlayerSocialDetailReq& a, GetPlayerSocialDetailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerSocialDetailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerSocialDetailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerSocialDetailReq& from);
  void MergeFrom(const GetPlayerSocialDetailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerSocialDetailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 9;
  void clear_uid();
  static const int kUidFieldNumber = 9;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerSocialDetailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerSocialDetailRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerSocialDetailRsp) */ {
 public:
  GetPlayerSocialDetailRsp();
  virtual ~GetPlayerSocialDetailRsp();

  GetPlayerSocialDetailRsp(const GetPlayerSocialDetailRsp& from);

  inline GetPlayerSocialDetailRsp& operator=(const GetPlayerSocialDetailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerSocialDetailRsp(GetPlayerSocialDetailRsp&& from) noexcept
    : GetPlayerSocialDetailRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerSocialDetailRsp& operator=(GetPlayerSocialDetailRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerSocialDetailRsp& default_instance();

  static inline const GetPlayerSocialDetailRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerSocialDetailRsp*>(
               &_GetPlayerSocialDetailRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetPlayerSocialDetailRsp* other);
  friend void swap(GetPlayerSocialDetailRsp& a, GetPlayerSocialDetailRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerSocialDetailRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerSocialDetailRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerSocialDetailRsp& from);
  void MergeFrom(const GetPlayerSocialDetailRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerSocialDetailRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.SocialDetail detail_data = 12;
  bool has_detail_data() const;
  void clear_detail_data();
  static const int kDetailDataFieldNumber = 12;
  const ::proto::SocialDetail& detail_data() const;
  ::proto::SocialDetail* mutable_detail_data();
  ::proto::SocialDetail* release_detail_data();
  void set_allocated_detail_data(::proto::SocialDetail* detail_data);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerSocialDetailRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::SocialDetail* detail_data_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeleteFriendReq) */ {
 public:
  DeleteFriendReq();
  virtual ~DeleteFriendReq();

  DeleteFriendReq(const DeleteFriendReq& from);

  inline DeleteFriendReq& operator=(const DeleteFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteFriendReq(DeleteFriendReq&& from) noexcept
    : DeleteFriendReq() {
    *this = ::std::move(from);
  }

  inline DeleteFriendReq& operator=(DeleteFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendReq& default_instance();

  static inline const DeleteFriendReq* internal_default_instance() {
    return reinterpret_cast<const DeleteFriendReq*>(
               &_DeleteFriendReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DeleteFriendReq* other);
  friend void swap(DeleteFriendReq& a, DeleteFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteFriendReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteFriendReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteFriendReq& from);
  void MergeFrom(const DeleteFriendReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 13;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 13;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeleteFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeleteFriendRsp) */ {
 public:
  DeleteFriendRsp();
  virtual ~DeleteFriendRsp();

  DeleteFriendRsp(const DeleteFriendRsp& from);

  inline DeleteFriendRsp& operator=(const DeleteFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteFriendRsp(DeleteFriendRsp&& from) noexcept
    : DeleteFriendRsp() {
    *this = ::std::move(from);
  }

  inline DeleteFriendRsp& operator=(DeleteFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendRsp& default_instance();

  static inline const DeleteFriendRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteFriendRsp*>(
               &_DeleteFriendRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(DeleteFriendRsp* other);
  friend void swap(DeleteFriendRsp& a, DeleteFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteFriendRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteFriendRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteFriendRsp& from);
  void MergeFrom(const DeleteFriendRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 14;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 14;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeleteFriendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBirthdayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBirthdayReq) */ {
 public:
  SetPlayerBirthdayReq();
  virtual ~SetPlayerBirthdayReq();

  SetPlayerBirthdayReq(const SetPlayerBirthdayReq& from);

  inline SetPlayerBirthdayReq& operator=(const SetPlayerBirthdayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBirthdayReq(SetPlayerBirthdayReq&& from) noexcept
    : SetPlayerBirthdayReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerBirthdayReq& operator=(SetPlayerBirthdayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBirthdayReq& default_instance();

  static inline const SetPlayerBirthdayReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBirthdayReq*>(
               &_SetPlayerBirthdayReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SetPlayerBirthdayReq* other);
  friend void swap(SetPlayerBirthdayReq& a, SetPlayerBirthdayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBirthdayReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBirthdayReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBirthdayReq& from);
  void MergeFrom(const SetPlayerBirthdayReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBirthdayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Birthday birthday = 9;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 9;
  const ::proto::Birthday& birthday() const;
  ::proto::Birthday* mutable_birthday();
  ::proto::Birthday* release_birthday();
  void set_allocated_birthday(::proto::Birthday* birthday);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBirthdayReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Birthday* birthday_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBirthdayRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBirthdayRsp) */ {
 public:
  SetPlayerBirthdayRsp();
  virtual ~SetPlayerBirthdayRsp();

  SetPlayerBirthdayRsp(const SetPlayerBirthdayRsp& from);

  inline SetPlayerBirthdayRsp& operator=(const SetPlayerBirthdayRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBirthdayRsp(SetPlayerBirthdayRsp&& from) noexcept
    : SetPlayerBirthdayRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerBirthdayRsp& operator=(SetPlayerBirthdayRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBirthdayRsp& default_instance();

  static inline const SetPlayerBirthdayRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBirthdayRsp*>(
               &_SetPlayerBirthdayRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SetPlayerBirthdayRsp* other);
  friend void swap(SetPlayerBirthdayRsp& a, SetPlayerBirthdayRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBirthdayRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBirthdayRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBirthdayRsp& from);
  void MergeFrom(const SetPlayerBirthdayRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBirthdayRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Birthday birthday = 2;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 2;
  const ::proto::Birthday& birthday() const;
  ::proto::Birthday* mutable_birthday();
  ::proto::Birthday* release_birthday();
  void set_allocated_birthday(::proto::Birthday* birthday);

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBirthdayRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Birthday* birthday_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerSignatureReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerSignatureReq) */ {
 public:
  SetPlayerSignatureReq();
  virtual ~SetPlayerSignatureReq();

  SetPlayerSignatureReq(const SetPlayerSignatureReq& from);

  inline SetPlayerSignatureReq& operator=(const SetPlayerSignatureReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerSignatureReq(SetPlayerSignatureReq&& from) noexcept
    : SetPlayerSignatureReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerSignatureReq& operator=(SetPlayerSignatureReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerSignatureReq& default_instance();

  static inline const SetPlayerSignatureReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerSignatureReq*>(
               &_SetPlayerSignatureReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SetPlayerSignatureReq* other);
  friend void swap(SetPlayerSignatureReq& a, SetPlayerSignatureReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerSignatureReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerSignatureReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerSignatureReq& from);
  void MergeFrom(const SetPlayerSignatureReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerSignatureReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string signature = 3;
  void clear_signature();
  static const int kSignatureFieldNumber = 3;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerSignatureReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerSignatureRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerSignatureRsp) */ {
 public:
  SetPlayerSignatureRsp();
  virtual ~SetPlayerSignatureRsp();

  SetPlayerSignatureRsp(const SetPlayerSignatureRsp& from);

  inline SetPlayerSignatureRsp& operator=(const SetPlayerSignatureRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerSignatureRsp(SetPlayerSignatureRsp&& from) noexcept
    : SetPlayerSignatureRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerSignatureRsp& operator=(SetPlayerSignatureRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerSignatureRsp& default_instance();

  static inline const SetPlayerSignatureRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerSignatureRsp*>(
               &_SetPlayerSignatureRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SetPlayerSignatureRsp* other);
  friend void swap(SetPlayerSignatureRsp& a, SetPlayerSignatureRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerSignatureRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerSignatureRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerSignatureRsp& from);
  void MergeFrom(const SetPlayerSignatureRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerSignatureRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerSignatureRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerHeadImageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerHeadImageReq) */ {
 public:
  SetPlayerHeadImageReq();
  virtual ~SetPlayerHeadImageReq();

  SetPlayerHeadImageReq(const SetPlayerHeadImageReq& from);

  inline SetPlayerHeadImageReq& operator=(const SetPlayerHeadImageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerHeadImageReq(SetPlayerHeadImageReq&& from) noexcept
    : SetPlayerHeadImageReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerHeadImageReq& operator=(SetPlayerHeadImageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerHeadImageReq& default_instance();

  static inline const SetPlayerHeadImageReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerHeadImageReq*>(
               &_SetPlayerHeadImageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(SetPlayerHeadImageReq* other);
  friend void swap(SetPlayerHeadImageReq& a, SetPlayerHeadImageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerHeadImageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerHeadImageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerHeadImageReq& from);
  void MergeFrom(const SetPlayerHeadImageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerHeadImageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 7;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 7;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerHeadImageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerHeadImageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerHeadImageRsp) */ {
 public:
  SetPlayerHeadImageRsp();
  virtual ~SetPlayerHeadImageRsp();

  SetPlayerHeadImageRsp(const SetPlayerHeadImageRsp& from);

  inline SetPlayerHeadImageRsp& operator=(const SetPlayerHeadImageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerHeadImageRsp(SetPlayerHeadImageRsp&& from) noexcept
    : SetPlayerHeadImageRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerHeadImageRsp& operator=(SetPlayerHeadImageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerHeadImageRsp& default_instance();

  static inline const SetPlayerHeadImageRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerHeadImageRsp*>(
               &_SetPlayerHeadImageRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SetPlayerHeadImageRsp* other);
  friend void swap(SetPlayerHeadImageRsp& a, SetPlayerHeadImageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerHeadImageRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerHeadImageRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerHeadImageRsp& from);
  void MergeFrom(const SetPlayerHeadImageRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerHeadImageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ProfilePicture profile_picture = 6;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 6;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 avatar_id = 5;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 5;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerHeadImageRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePS4FriendListNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePS4FriendListNotify) */ {
 public:
  UpdatePS4FriendListNotify();
  virtual ~UpdatePS4FriendListNotify();

  UpdatePS4FriendListNotify(const UpdatePS4FriendListNotify& from);

  inline UpdatePS4FriendListNotify& operator=(const UpdatePS4FriendListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePS4FriendListNotify(UpdatePS4FriendListNotify&& from) noexcept
    : UpdatePS4FriendListNotify() {
    *this = ::std::move(from);
  }

  inline UpdatePS4FriendListNotify& operator=(UpdatePS4FriendListNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePS4FriendListNotify& default_instance();

  static inline const UpdatePS4FriendListNotify* internal_default_instance() {
    return reinterpret_cast<const UpdatePS4FriendListNotify*>(
               &_UpdatePS4FriendListNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(UpdatePS4FriendListNotify* other);
  friend void swap(UpdatePS4FriendListNotify& a, UpdatePS4FriendListNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePS4FriendListNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePS4FriendListNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePS4FriendListNotify& from);
  void MergeFrom(const UpdatePS4FriendListNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePS4FriendListNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string psn_id_list = 15;
  int psn_id_list_size() const;
  void clear_psn_id_list();
  static const int kPsnIdListFieldNumber = 15;
  const ::std::string& psn_id_list(int index) const;
  ::std::string* mutable_psn_id_list(int index);
  void set_psn_id_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id_list(int index, ::std::string&& value);
  #endif
  void set_psn_id_list(int index, const char* value);
  void set_psn_id_list(int index, const char* value, size_t size);
  ::std::string* add_psn_id_list();
  void add_psn_id_list(const ::std::string& value);
  #if LANG_CXX11
  void add_psn_id_list(::std::string&& value);
  #endif
  void add_psn_id_list(const char* value);
  void add_psn_id_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& psn_id_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_psn_id_list();

  // @@protoc_insertion_point(class_scope:proto.UpdatePS4FriendListNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> psn_id_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFriendNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeleteFriendNotify) */ {
 public:
  DeleteFriendNotify();
  virtual ~DeleteFriendNotify();

  DeleteFriendNotify(const DeleteFriendNotify& from);

  inline DeleteFriendNotify& operator=(const DeleteFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteFriendNotify(DeleteFriendNotify&& from) noexcept
    : DeleteFriendNotify() {
    *this = ::std::move(from);
  }

  inline DeleteFriendNotify& operator=(DeleteFriendNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendNotify& default_instance();

  static inline const DeleteFriendNotify* internal_default_instance() {
    return reinterpret_cast<const DeleteFriendNotify*>(
               &_DeleteFriendNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(DeleteFriendNotify* other);
  friend void swap(DeleteFriendNotify& a, DeleteFriendNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteFriendNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteFriendNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteFriendNotify& from);
  void MergeFrom(const DeleteFriendNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteFriendNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 12;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 12;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeleteFriendNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFriendNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddFriendNotify) */ {
 public:
  AddFriendNotify();
  virtual ~AddFriendNotify();

  AddFriendNotify(const AddFriendNotify& from);

  inline AddFriendNotify& operator=(const AddFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddFriendNotify(AddFriendNotify&& from) noexcept
    : AddFriendNotify() {
    *this = ::std::move(from);
  }

  inline AddFriendNotify& operator=(AddFriendNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendNotify& default_instance();

  static inline const AddFriendNotify* internal_default_instance() {
    return reinterpret_cast<const AddFriendNotify*>(
               &_AddFriendNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(AddFriendNotify* other);
  friend void swap(AddFriendNotify& a, AddFriendNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddFriendNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFriendNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFriendNotify& from);
  void MergeFrom(const AddFriendNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFriendNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.FriendBrief target_friend_brief = 10;
  bool has_target_friend_brief() const;
  void clear_target_friend_brief();
  static const int kTargetFriendBriefFieldNumber = 10;
  const ::proto::FriendBrief& target_friend_brief() const;
  ::proto::FriendBrief* mutable_target_friend_brief();
  ::proto::FriendBrief* release_target_friend_brief();
  void set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief);

  // uint32 target_uid = 11;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 11;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddFriendNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::FriendBrief* target_friend_brief_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AskAddFriendNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AskAddFriendNotify) */ {
 public:
  AskAddFriendNotify();
  virtual ~AskAddFriendNotify();

  AskAddFriendNotify(const AskAddFriendNotify& from);

  inline AskAddFriendNotify& operator=(const AskAddFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AskAddFriendNotify(AskAddFriendNotify&& from) noexcept
    : AskAddFriendNotify() {
    *this = ::std::move(from);
  }

  inline AskAddFriendNotify& operator=(AskAddFriendNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAddFriendNotify& default_instance();

  static inline const AskAddFriendNotify* internal_default_instance() {
    return reinterpret_cast<const AskAddFriendNotify*>(
               &_AskAddFriendNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(AskAddFriendNotify* other);
  friend void swap(AskAddFriendNotify& a, AskAddFriendNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AskAddFriendNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AskAddFriendNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AskAddFriendNotify& from);
  void MergeFrom(const AskAddFriendNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AskAddFriendNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.FriendBrief target_friend_brief = 15;
  bool has_target_friend_brief() const;
  void clear_target_friend_brief();
  static const int kTargetFriendBriefFieldNumber = 15;
  const ::proto::FriendBrief& target_friend_brief() const;
  ::proto::FriendBrief* mutable_target_friend_brief();
  ::proto::FriendBrief* release_target_friend_brief();
  void set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief);

  // uint32 target_uid = 9;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 9;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AskAddFriendNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::FriendBrief* target_friend_brief_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetNameCardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetNameCardReq) */ {
 public:
  SetNameCardReq();
  virtual ~SetNameCardReq();

  SetNameCardReq(const SetNameCardReq& from);

  inline SetNameCardReq& operator=(const SetNameCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetNameCardReq(SetNameCardReq&& from) noexcept
    : SetNameCardReq() {
    *this = ::std::move(from);
  }

  inline SetNameCardReq& operator=(SetNameCardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetNameCardReq& default_instance();

  static inline const SetNameCardReq* internal_default_instance() {
    return reinterpret_cast<const SetNameCardReq*>(
               &_SetNameCardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SetNameCardReq* other);
  friend void swap(SetNameCardReq& a, SetNameCardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetNameCardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetNameCardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetNameCardReq& from);
  void MergeFrom(const SetNameCardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetNameCardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 name_card_id = 10;
  void clear_name_card_id();
  static const int kNameCardIdFieldNumber = 10;
  ::google::protobuf::uint32 name_card_id() const;
  void set_name_card_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetNameCardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 name_card_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetNameCardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetNameCardRsp) */ {
 public:
  SetNameCardRsp();
  virtual ~SetNameCardRsp();

  SetNameCardRsp(const SetNameCardRsp& from);

  inline SetNameCardRsp& operator=(const SetNameCardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetNameCardRsp(SetNameCardRsp&& from) noexcept
    : SetNameCardRsp() {
    *this = ::std::move(from);
  }

  inline SetNameCardRsp& operator=(SetNameCardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetNameCardRsp& default_instance();

  static inline const SetNameCardRsp* internal_default_instance() {
    return reinterpret_cast<const SetNameCardRsp*>(
               &_SetNameCardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(SetNameCardRsp* other);
  friend void swap(SetNameCardRsp& a, SetNameCardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetNameCardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetNameCardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetNameCardRsp& from);
  void MergeFrom(const SetNameCardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetNameCardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 name_card_id = 11;
  void clear_name_card_id();
  static const int kNameCardIdFieldNumber = 11;
  ::google::protobuf::uint32 name_card_id() const;
  void set_name_card_id(::google::protobuf::uint32 value);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetNameCardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 name_card_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAllUnlockNameCardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetAllUnlockNameCardReq) */ {
 public:
  GetAllUnlockNameCardReq();
  virtual ~GetAllUnlockNameCardReq();

  GetAllUnlockNameCardReq(const GetAllUnlockNameCardReq& from);

  inline GetAllUnlockNameCardReq& operator=(const GetAllUnlockNameCardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAllUnlockNameCardReq(GetAllUnlockNameCardReq&& from) noexcept
    : GetAllUnlockNameCardReq() {
    *this = ::std::move(from);
  }

  inline GetAllUnlockNameCardReq& operator=(GetAllUnlockNameCardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllUnlockNameCardReq& default_instance();

  static inline const GetAllUnlockNameCardReq* internal_default_instance() {
    return reinterpret_cast<const GetAllUnlockNameCardReq*>(
               &_GetAllUnlockNameCardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(GetAllUnlockNameCardReq* other);
  friend void swap(GetAllUnlockNameCardReq& a, GetAllUnlockNameCardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAllUnlockNameCardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAllUnlockNameCardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAllUnlockNameCardReq& from);
  void MergeFrom(const GetAllUnlockNameCardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAllUnlockNameCardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetAllUnlockNameCardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAllUnlockNameCardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetAllUnlockNameCardRsp) */ {
 public:
  GetAllUnlockNameCardRsp();
  virtual ~GetAllUnlockNameCardRsp();

  GetAllUnlockNameCardRsp(const GetAllUnlockNameCardRsp& from);

  inline GetAllUnlockNameCardRsp& operator=(const GetAllUnlockNameCardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAllUnlockNameCardRsp(GetAllUnlockNameCardRsp&& from) noexcept
    : GetAllUnlockNameCardRsp() {
    *this = ::std::move(from);
  }

  inline GetAllUnlockNameCardRsp& operator=(GetAllUnlockNameCardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllUnlockNameCardRsp& default_instance();

  static inline const GetAllUnlockNameCardRsp* internal_default_instance() {
    return reinterpret_cast<const GetAllUnlockNameCardRsp*>(
               &_GetAllUnlockNameCardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(GetAllUnlockNameCardRsp* other);
  friend void swap(GetAllUnlockNameCardRsp& a, GetAllUnlockNameCardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAllUnlockNameCardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAllUnlockNameCardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAllUnlockNameCardRsp& from);
  void MergeFrom(const GetAllUnlockNameCardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAllUnlockNameCardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 name_card_list = 14;
  int name_card_list_size() const;
  void clear_name_card_list();
  static const int kNameCardListFieldNumber = 14;
  ::google::protobuf::uint32 name_card_list(int index) const;
  void set_name_card_list(int index, ::google::protobuf::uint32 value);
  void add_name_card_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      name_card_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_name_card_list();

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetAllUnlockNameCardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > name_card_list_;
  mutable int _name_card_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddBlacklistReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddBlacklistReq) */ {
 public:
  AddBlacklistReq();
  virtual ~AddBlacklistReq();

  AddBlacklistReq(const AddBlacklistReq& from);

  inline AddBlacklistReq& operator=(const AddBlacklistReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddBlacklistReq(AddBlacklistReq&& from) noexcept
    : AddBlacklistReq() {
    *this = ::std::move(from);
  }

  inline AddBlacklistReq& operator=(AddBlacklistReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBlacklistReq& default_instance();

  static inline const AddBlacklistReq* internal_default_instance() {
    return reinterpret_cast<const AddBlacklistReq*>(
               &_AddBlacklistReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(AddBlacklistReq* other);
  friend void swap(AddBlacklistReq& a, AddBlacklistReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddBlacklistReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddBlacklistReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddBlacklistReq& from);
  void MergeFrom(const AddBlacklistReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddBlacklistReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddBlacklistReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddBlacklistRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddBlacklistRsp) */ {
 public:
  AddBlacklistRsp();
  virtual ~AddBlacklistRsp();

  AddBlacklistRsp(const AddBlacklistRsp& from);

  inline AddBlacklistRsp& operator=(const AddBlacklistRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddBlacklistRsp(AddBlacklistRsp&& from) noexcept
    : AddBlacklistRsp() {
    *this = ::std::move(from);
  }

  inline AddBlacklistRsp& operator=(AddBlacklistRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBlacklistRsp& default_instance();

  static inline const AddBlacklistRsp* internal_default_instance() {
    return reinterpret_cast<const AddBlacklistRsp*>(
               &_AddBlacklistRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AddBlacklistRsp* other);
  friend void swap(AddBlacklistRsp& a, AddBlacklistRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddBlacklistRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddBlacklistRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddBlacklistRsp& from);
  void MergeFrom(const AddBlacklistRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddBlacklistRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.FriendBrief target_friend_brief = 13;
  bool has_target_friend_brief() const;
  void clear_target_friend_brief();
  static const int kTargetFriendBriefFieldNumber = 13;
  const ::proto::FriendBrief& target_friend_brief() const;
  ::proto::FriendBrief* mutable_target_friend_brief();
  ::proto::FriendBrief* release_target_friend_brief();
  void set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AddBlacklistRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::FriendBrief* target_friend_brief_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveBlacklistReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveBlacklistReq) */ {
 public:
  RemoveBlacklistReq();
  virtual ~RemoveBlacklistReq();

  RemoveBlacklistReq(const RemoveBlacklistReq& from);

  inline RemoveBlacklistReq& operator=(const RemoveBlacklistReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveBlacklistReq(RemoveBlacklistReq&& from) noexcept
    : RemoveBlacklistReq() {
    *this = ::std::move(from);
  }

  inline RemoveBlacklistReq& operator=(RemoveBlacklistReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveBlacklistReq& default_instance();

  static inline const RemoveBlacklistReq* internal_default_instance() {
    return reinterpret_cast<const RemoveBlacklistReq*>(
               &_RemoveBlacklistReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(RemoveBlacklistReq* other);
  friend void swap(RemoveBlacklistReq& a, RemoveBlacklistReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveBlacklistReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveBlacklistReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveBlacklistReq& from);
  void MergeFrom(const RemoveBlacklistReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveBlacklistReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 13;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 13;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RemoveBlacklistReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveBlacklistRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveBlacklistRsp) */ {
 public:
  RemoveBlacklistRsp();
  virtual ~RemoveBlacklistRsp();

  RemoveBlacklistRsp(const RemoveBlacklistRsp& from);

  inline RemoveBlacklistRsp& operator=(const RemoveBlacklistRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveBlacklistRsp(RemoveBlacklistRsp&& from) noexcept
    : RemoveBlacklistRsp() {
    *this = ::std::move(from);
  }

  inline RemoveBlacklistRsp& operator=(RemoveBlacklistRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveBlacklistRsp& default_instance();

  static inline const RemoveBlacklistRsp* internal_default_instance() {
    return reinterpret_cast<const RemoveBlacklistRsp*>(
               &_RemoveBlacklistRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(RemoveBlacklistRsp* other);
  friend void swap(RemoveBlacklistRsp& a, RemoveBlacklistRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveBlacklistRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveBlacklistRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveBlacklistRsp& from);
  void MergeFrom(const RemoveBlacklistRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveBlacklistRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 7;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 7;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.RemoveBlacklistRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockNameCardNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockNameCardNotify) */ {
 public:
  UnlockNameCardNotify();
  virtual ~UnlockNameCardNotify();

  UnlockNameCardNotify(const UnlockNameCardNotify& from);

  inline UnlockNameCardNotify& operator=(const UnlockNameCardNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockNameCardNotify(UnlockNameCardNotify&& from) noexcept
    : UnlockNameCardNotify() {
    *this = ::std::move(from);
  }

  inline UnlockNameCardNotify& operator=(UnlockNameCardNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockNameCardNotify& default_instance();

  static inline const UnlockNameCardNotify* internal_default_instance() {
    return reinterpret_cast<const UnlockNameCardNotify*>(
               &_UnlockNameCardNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(UnlockNameCardNotify* other);
  friend void swap(UnlockNameCardNotify& a, UnlockNameCardNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockNameCardNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockNameCardNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockNameCardNotify& from);
  void MergeFrom(const UnlockNameCardNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockNameCardNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 name_card_id = 8;
  void clear_name_card_id();
  static const int kNameCardIdFieldNumber = 8;
  ::google::protobuf::uint32 name_card_id() const;
  void set_name_card_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockNameCardNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 name_card_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRecentMpPlayerListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetRecentMpPlayerListReq) */ {
 public:
  GetRecentMpPlayerListReq();
  virtual ~GetRecentMpPlayerListReq();

  GetRecentMpPlayerListReq(const GetRecentMpPlayerListReq& from);

  inline GetRecentMpPlayerListReq& operator=(const GetRecentMpPlayerListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRecentMpPlayerListReq(GetRecentMpPlayerListReq&& from) noexcept
    : GetRecentMpPlayerListReq() {
    *this = ::std::move(from);
  }

  inline GetRecentMpPlayerListReq& operator=(GetRecentMpPlayerListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRecentMpPlayerListReq& default_instance();

  static inline const GetRecentMpPlayerListReq* internal_default_instance() {
    return reinterpret_cast<const GetRecentMpPlayerListReq*>(
               &_GetRecentMpPlayerListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(GetRecentMpPlayerListReq* other);
  friend void swap(GetRecentMpPlayerListReq& a, GetRecentMpPlayerListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRecentMpPlayerListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRecentMpPlayerListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRecentMpPlayerListReq& from);
  void MergeFrom(const GetRecentMpPlayerListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRecentMpPlayerListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetRecentMpPlayerListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRecentMpPlayerListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetRecentMpPlayerListRsp) */ {
 public:
  GetRecentMpPlayerListRsp();
  virtual ~GetRecentMpPlayerListRsp();

  GetRecentMpPlayerListRsp(const GetRecentMpPlayerListRsp& from);

  inline GetRecentMpPlayerListRsp& operator=(const GetRecentMpPlayerListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRecentMpPlayerListRsp(GetRecentMpPlayerListRsp&& from) noexcept
    : GetRecentMpPlayerListRsp() {
    *this = ::std::move(from);
  }

  inline GetRecentMpPlayerListRsp& operator=(GetRecentMpPlayerListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRecentMpPlayerListRsp& default_instance();

  static inline const GetRecentMpPlayerListRsp* internal_default_instance() {
    return reinterpret_cast<const GetRecentMpPlayerListRsp*>(
               &_GetRecentMpPlayerListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(GetRecentMpPlayerListRsp* other);
  friend void swap(GetRecentMpPlayerListRsp& a, GetRecentMpPlayerListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRecentMpPlayerListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRecentMpPlayerListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRecentMpPlayerListRsp& from);
  void MergeFrom(const GetRecentMpPlayerListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRecentMpPlayerListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FriendBrief recent_mp_player_brief_list = 14;
  int recent_mp_player_brief_list_size() const;
  void clear_recent_mp_player_brief_list();
  static const int kRecentMpPlayerBriefListFieldNumber = 14;
  const ::proto::FriendBrief& recent_mp_player_brief_list(int index) const;
  ::proto::FriendBrief* mutable_recent_mp_player_brief_list(int index);
  ::proto::FriendBrief* add_recent_mp_player_brief_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_recent_mp_player_brief_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      recent_mp_player_brief_list() const;

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetRecentMpPlayerListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > recent_mp_player_brief_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SocialDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SocialDataNotify) */ {
 public:
  SocialDataNotify();
  virtual ~SocialDataNotify();

  SocialDataNotify(const SocialDataNotify& from);

  inline SocialDataNotify& operator=(const SocialDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SocialDataNotify(SocialDataNotify&& from) noexcept
    : SocialDataNotify() {
    *this = ::std::move(from);
  }

  inline SocialDataNotify& operator=(SocialDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialDataNotify& default_instance();

  static inline const SocialDataNotify* internal_default_instance() {
    return reinterpret_cast<const SocialDataNotify*>(
               &_SocialDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SocialDataNotify* other);
  friend void swap(SocialDataNotify& a, SocialDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SocialDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SocialDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SocialDataNotify& from);
  void MergeFrom(const SocialDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SocialDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_have_first_share = 11;
  void clear_is_have_first_share();
  static const int kIsHaveFirstShareFieldNumber = 11;
  bool is_have_first_share() const;
  void set_is_have_first_share(bool value);

  // @@protoc_insertion_point(class_scope:proto.SocialDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_have_first_share_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeFirstShareRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeFirstShareRewardReq) */ {
 public:
  TakeFirstShareRewardReq();
  virtual ~TakeFirstShareRewardReq();

  TakeFirstShareRewardReq(const TakeFirstShareRewardReq& from);

  inline TakeFirstShareRewardReq& operator=(const TakeFirstShareRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeFirstShareRewardReq(TakeFirstShareRewardReq&& from) noexcept
    : TakeFirstShareRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeFirstShareRewardReq& operator=(TakeFirstShareRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeFirstShareRewardReq& default_instance();

  static inline const TakeFirstShareRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeFirstShareRewardReq*>(
               &_TakeFirstShareRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(TakeFirstShareRewardReq* other);
  friend void swap(TakeFirstShareRewardReq& a, TakeFirstShareRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeFirstShareRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeFirstShareRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeFirstShareRewardReq& from);
  void MergeFrom(const TakeFirstShareRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeFirstShareRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.TakeFirstShareRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeFirstShareRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeFirstShareRewardRsp) */ {
 public:
  TakeFirstShareRewardRsp();
  virtual ~TakeFirstShareRewardRsp();

  TakeFirstShareRewardRsp(const TakeFirstShareRewardRsp& from);

  inline TakeFirstShareRewardRsp& operator=(const TakeFirstShareRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeFirstShareRewardRsp(TakeFirstShareRewardRsp&& from) noexcept
    : TakeFirstShareRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeFirstShareRewardRsp& operator=(TakeFirstShareRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeFirstShareRewardRsp& default_instance();

  static inline const TakeFirstShareRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeFirstShareRewardRsp*>(
               &_TakeFirstShareRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(TakeFirstShareRewardRsp* other);
  friend void swap(TakeFirstShareRewardRsp& a, TakeFirstShareRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeFirstShareRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeFirstShareRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeFirstShareRewardRsp& from);
  void MergeFrom(const TakeFirstShareRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeFirstShareRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeFirstShareRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePS4BlockListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePS4BlockListReq) */ {
 public:
  UpdatePS4BlockListReq();
  virtual ~UpdatePS4BlockListReq();

  UpdatePS4BlockListReq(const UpdatePS4BlockListReq& from);

  inline UpdatePS4BlockListReq& operator=(const UpdatePS4BlockListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePS4BlockListReq(UpdatePS4BlockListReq&& from) noexcept
    : UpdatePS4BlockListReq() {
    *this = ::std::move(from);
  }

  inline UpdatePS4BlockListReq& operator=(UpdatePS4BlockListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePS4BlockListReq& default_instance();

  static inline const UpdatePS4BlockListReq* internal_default_instance() {
    return reinterpret_cast<const UpdatePS4BlockListReq*>(
               &_UpdatePS4BlockListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(UpdatePS4BlockListReq* other);
  friend void swap(UpdatePS4BlockListReq& a, UpdatePS4BlockListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePS4BlockListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePS4BlockListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePS4BlockListReq& from);
  void MergeFrom(const UpdatePS4BlockListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePS4BlockListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string psn_id_list = 10;
  int psn_id_list_size() const;
  void clear_psn_id_list();
  static const int kPsnIdListFieldNumber = 10;
  const ::std::string& psn_id_list(int index) const;
  ::std::string* mutable_psn_id_list(int index);
  void set_psn_id_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id_list(int index, ::std::string&& value);
  #endif
  void set_psn_id_list(int index, const char* value);
  void set_psn_id_list(int index, const char* value, size_t size);
  ::std::string* add_psn_id_list();
  void add_psn_id_list(const ::std::string& value);
  #if LANG_CXX11
  void add_psn_id_list(::std::string&& value);
  #endif
  void add_psn_id_list(const char* value);
  void add_psn_id_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& psn_id_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_psn_id_list();

  // @@protoc_insertion_point(class_scope:proto.UpdatePS4BlockListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> psn_id_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePS4BlockListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePS4BlockListRsp) */ {
 public:
  UpdatePS4BlockListRsp();
  virtual ~UpdatePS4BlockListRsp();

  UpdatePS4BlockListRsp(const UpdatePS4BlockListRsp& from);

  inline UpdatePS4BlockListRsp& operator=(const UpdatePS4BlockListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePS4BlockListRsp(UpdatePS4BlockListRsp&& from) noexcept
    : UpdatePS4BlockListRsp() {
    *this = ::std::move(from);
  }

  inline UpdatePS4BlockListRsp& operator=(UpdatePS4BlockListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePS4BlockListRsp& default_instance();

  static inline const UpdatePS4BlockListRsp* internal_default_instance() {
    return reinterpret_cast<const UpdatePS4BlockListRsp*>(
               &_UpdatePS4BlockListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(UpdatePS4BlockListRsp* other);
  friend void swap(UpdatePS4BlockListRsp& a, UpdatePS4BlockListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePS4BlockListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePS4BlockListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePS4BlockListRsp& from);
  void MergeFrom(const UpdatePS4BlockListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePS4BlockListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UpdatePS4BlockListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerBlacklistReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerBlacklistReq) */ {
 public:
  GetPlayerBlacklistReq();
  virtual ~GetPlayerBlacklistReq();

  GetPlayerBlacklistReq(const GetPlayerBlacklistReq& from);

  inline GetPlayerBlacklistReq& operator=(const GetPlayerBlacklistReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerBlacklistReq(GetPlayerBlacklistReq&& from) noexcept
    : GetPlayerBlacklistReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerBlacklistReq& operator=(GetPlayerBlacklistReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerBlacklistReq& default_instance();

  static inline const GetPlayerBlacklistReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerBlacklistReq*>(
               &_GetPlayerBlacklistReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(GetPlayerBlacklistReq* other);
  friend void swap(GetPlayerBlacklistReq& a, GetPlayerBlacklistReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerBlacklistReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerBlacklistReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerBlacklistReq& from);
  void MergeFrom(const GetPlayerBlacklistReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerBlacklistReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetPlayerBlacklistReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerBlacklistRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerBlacklistRsp) */ {
 public:
  GetPlayerBlacklistRsp();
  virtual ~GetPlayerBlacklistRsp();

  GetPlayerBlacklistRsp(const GetPlayerBlacklistRsp& from);

  inline GetPlayerBlacklistRsp& operator=(const GetPlayerBlacklistRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerBlacklistRsp(GetPlayerBlacklistRsp&& from) noexcept
    : GetPlayerBlacklistRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerBlacklistRsp& operator=(GetPlayerBlacklistRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerBlacklistRsp& default_instance();

  static inline const GetPlayerBlacklistRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerBlacklistRsp*>(
               &_GetPlayerBlacklistRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(GetPlayerBlacklistRsp* other);
  friend void swap(GetPlayerBlacklistRsp& a, GetPlayerBlacklistRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerBlacklistRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerBlacklistRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerBlacklistRsp& from);
  void MergeFrom(const GetPlayerBlacklistRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerBlacklistRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FriendBrief blacklist = 3;
  int blacklist_size() const;
  void clear_blacklist();
  static const int kBlacklistFieldNumber = 3;
  const ::proto::FriendBrief& blacklist(int index) const;
  ::proto::FriendBrief* mutable_blacklist(int index);
  ::proto::FriendBrief* add_blacklist();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_blacklist();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      blacklist() const;

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerBlacklistRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > blacklist_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerReportReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerReportReq) */ {
 public:
  PlayerReportReq();
  virtual ~PlayerReportReq();

  PlayerReportReq(const PlayerReportReq& from);

  inline PlayerReportReq& operator=(const PlayerReportReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerReportReq(PlayerReportReq&& from) noexcept
    : PlayerReportReq() {
    *this = ::std::move(from);
  }

  inline PlayerReportReq& operator=(PlayerReportReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReportReq& default_instance();

  static inline const PlayerReportReq* internal_default_instance() {
    return reinterpret_cast<const PlayerReportReq*>(
               &_PlayerReportReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(PlayerReportReq* other);
  friend void swap(PlayerReportReq& a, PlayerReportReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerReportReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerReportReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerReportReq& from);
  void MergeFrom(const PlayerReportReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerReportReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string target_home_module_name = 6;
  void clear_target_home_module_name();
  static const int kTargetHomeModuleNameFieldNumber = 6;
  const ::std::string& target_home_module_name() const;
  void set_target_home_module_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_home_module_name(::std::string&& value);
  #endif
  void set_target_home_module_name(const char* value);
  void set_target_home_module_name(const char* value, size_t size);
  ::std::string* mutable_target_home_module_name();
  ::std::string* release_target_home_module_name();
  void set_allocated_target_home_module_name(::std::string* target_home_module_name);

  // string content = 8;
  void clear_content();
  static const int kContentFieldNumber = 8;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint32 target_uid = 14;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 14;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 target_home_module_id = 5;
  void clear_target_home_module_id();
  static const int kTargetHomeModuleIdFieldNumber = 5;
  ::google::protobuf::uint32 target_home_module_id() const;
  void set_target_home_module_id(::google::protobuf::uint32 value);

  // .proto.ReportReasonType reason = 12;
  void clear_reason();
  static const int kReasonFieldNumber = 12;
  ::proto::ReportReasonType reason() const;
  void set_reason(::proto::ReportReasonType value);

  // @@protoc_insertion_point(class_scope:proto.PlayerReportReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_home_module_name_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 target_home_module_id_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerReportRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerReportRsp) */ {
 public:
  PlayerReportRsp();
  virtual ~PlayerReportRsp();

  PlayerReportRsp(const PlayerReportRsp& from);

  inline PlayerReportRsp& operator=(const PlayerReportRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerReportRsp(PlayerReportRsp&& from) noexcept
    : PlayerReportRsp() {
    *this = ::std::move(from);
  }

  inline PlayerReportRsp& operator=(PlayerReportRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReportRsp& default_instance();

  static inline const PlayerReportRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerReportRsp*>(
               &_PlayerReportRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(PlayerReportRsp* other);
  friend void swap(PlayerReportRsp& a, PlayerReportRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerReportRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerReportRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerReportRsp& from);
  void MergeFrom(const PlayerReportRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerReportRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 6;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 6;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 cd_time = 11;
  void clear_cd_time();
  static const int kCdTimeFieldNumber = 11;
  ::google::protobuf::uint32 cd_time() const;
  void set_cd_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerReportRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 cd_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFriendRemarkNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetFriendRemarkNameReq) */ {
 public:
  SetFriendRemarkNameReq();
  virtual ~SetFriendRemarkNameReq();

  SetFriendRemarkNameReq(const SetFriendRemarkNameReq& from);

  inline SetFriendRemarkNameReq& operator=(const SetFriendRemarkNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetFriendRemarkNameReq(SetFriendRemarkNameReq&& from) noexcept
    : SetFriendRemarkNameReq() {
    *this = ::std::move(from);
  }

  inline SetFriendRemarkNameReq& operator=(SetFriendRemarkNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFriendRemarkNameReq& default_instance();

  static inline const SetFriendRemarkNameReq* internal_default_instance() {
    return reinterpret_cast<const SetFriendRemarkNameReq*>(
               &_SetFriendRemarkNameReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SetFriendRemarkNameReq* other);
  friend void swap(SetFriendRemarkNameReq& a, SetFriendRemarkNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetFriendRemarkNameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFriendRemarkNameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetFriendRemarkNameReq& from);
  void MergeFrom(const SetFriendRemarkNameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetFriendRemarkNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string remark_name = 8;
  void clear_remark_name();
  static const int kRemarkNameFieldNumber = 8;
  const ::std::string& remark_name() const;
  void set_remark_name(const ::std::string& value);
  #if LANG_CXX11
  void set_remark_name(::std::string&& value);
  #endif
  void set_remark_name(const char* value);
  void set_remark_name(const char* value, size_t size);
  ::std::string* mutable_remark_name();
  ::std::string* release_remark_name();
  void set_allocated_remark_name(::std::string* remark_name);

  // uint32 uid = 10;
  void clear_uid();
  static const int kUidFieldNumber = 10;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetFriendRemarkNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr remark_name_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFriendRemarkNameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetFriendRemarkNameRsp) */ {
 public:
  SetFriendRemarkNameRsp();
  virtual ~SetFriendRemarkNameRsp();

  SetFriendRemarkNameRsp(const SetFriendRemarkNameRsp& from);

  inline SetFriendRemarkNameRsp& operator=(const SetFriendRemarkNameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetFriendRemarkNameRsp(SetFriendRemarkNameRsp&& from) noexcept
    : SetFriendRemarkNameRsp() {
    *this = ::std::move(from);
  }

  inline SetFriendRemarkNameRsp& operator=(SetFriendRemarkNameRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFriendRemarkNameRsp& default_instance();

  static inline const SetFriendRemarkNameRsp* internal_default_instance() {
    return reinterpret_cast<const SetFriendRemarkNameRsp*>(
               &_SetFriendRemarkNameRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(SetFriendRemarkNameRsp* other);
  friend void swap(SetFriendRemarkNameRsp& a, SetFriendRemarkNameRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetFriendRemarkNameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFriendRemarkNameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetFriendRemarkNameRsp& from);
  void MergeFrom(const SetFriendRemarkNameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetFriendRemarkNameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string remark_name = 13;
  void clear_remark_name();
  static const int kRemarkNameFieldNumber = 13;
  const ::std::string& remark_name() const;
  void set_remark_name(const ::std::string& value);
  #if LANG_CXX11
  void set_remark_name(::std::string&& value);
  #endif
  void set_remark_name(const char* value);
  void set_remark_name(const char* value, size_t size);
  ::std::string* mutable_remark_name();
  ::std::string* release_remark_name();
  void set_allocated_remark_name(::std::string* remark_name);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool is_clear_remark = 3;
  void clear_is_clear_remark();
  static const int kIsClearRemarkFieldNumber = 3;
  bool is_clear_remark() const;
  void set_is_clear_remark(bool value);

  // uint32 uid = 10;
  void clear_uid();
  static const int kUidFieldNumber = 10;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetFriendRemarkNameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr remark_name_;
  ::google::protobuf::int32 retcode_;
  bool is_clear_remark_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePlayerShowAvatarListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePlayerShowAvatarListReq) */ {
 public:
  UpdatePlayerShowAvatarListReq();
  virtual ~UpdatePlayerShowAvatarListReq();

  UpdatePlayerShowAvatarListReq(const UpdatePlayerShowAvatarListReq& from);

  inline UpdatePlayerShowAvatarListReq& operator=(const UpdatePlayerShowAvatarListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePlayerShowAvatarListReq(UpdatePlayerShowAvatarListReq&& from) noexcept
    : UpdatePlayerShowAvatarListReq() {
    *this = ::std::move(from);
  }

  inline UpdatePlayerShowAvatarListReq& operator=(UpdatePlayerShowAvatarListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePlayerShowAvatarListReq& default_instance();

  static inline const UpdatePlayerShowAvatarListReq* internal_default_instance() {
    return reinterpret_cast<const UpdatePlayerShowAvatarListReq*>(
               &_UpdatePlayerShowAvatarListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(UpdatePlayerShowAvatarListReq* other);
  friend void swap(UpdatePlayerShowAvatarListReq& a, UpdatePlayerShowAvatarListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePlayerShowAvatarListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePlayerShowAvatarListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePlayerShowAvatarListReq& from);
  void MergeFrom(const UpdatePlayerShowAvatarListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePlayerShowAvatarListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 show_avatar_id_list = 13;
  int show_avatar_id_list_size() const;
  void clear_show_avatar_id_list();
  static const int kShowAvatarIdListFieldNumber = 13;
  ::google::protobuf::uint32 show_avatar_id_list(int index) const;
  void set_show_avatar_id_list(int index, ::google::protobuf::uint32 value);
  void add_show_avatar_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      show_avatar_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_show_avatar_id_list();

  // bool is_show_avatar = 15;
  void clear_is_show_avatar();
  static const int kIsShowAvatarFieldNumber = 15;
  bool is_show_avatar() const;
  void set_is_show_avatar(bool value);

  // @@protoc_insertion_point(class_scope:proto.UpdatePlayerShowAvatarListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > show_avatar_id_list_;
  mutable int _show_avatar_id_list_cached_byte_size_;
  bool is_show_avatar_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePlayerShowAvatarListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePlayerShowAvatarListRsp) */ {
 public:
  UpdatePlayerShowAvatarListRsp();
  virtual ~UpdatePlayerShowAvatarListRsp();

  UpdatePlayerShowAvatarListRsp(const UpdatePlayerShowAvatarListRsp& from);

  inline UpdatePlayerShowAvatarListRsp& operator=(const UpdatePlayerShowAvatarListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePlayerShowAvatarListRsp(UpdatePlayerShowAvatarListRsp&& from) noexcept
    : UpdatePlayerShowAvatarListRsp() {
    *this = ::std::move(from);
  }

  inline UpdatePlayerShowAvatarListRsp& operator=(UpdatePlayerShowAvatarListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePlayerShowAvatarListRsp& default_instance();

  static inline const UpdatePlayerShowAvatarListRsp* internal_default_instance() {
    return reinterpret_cast<const UpdatePlayerShowAvatarListRsp*>(
               &_UpdatePlayerShowAvatarListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(UpdatePlayerShowAvatarListRsp* other);
  friend void swap(UpdatePlayerShowAvatarListRsp& a, UpdatePlayerShowAvatarListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePlayerShowAvatarListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePlayerShowAvatarListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePlayerShowAvatarListRsp& from);
  void MergeFrom(const UpdatePlayerShowAvatarListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePlayerShowAvatarListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 show_avatar_id_list = 1;
  int show_avatar_id_list_size() const;
  void clear_show_avatar_id_list();
  static const int kShowAvatarIdListFieldNumber = 1;
  ::google::protobuf::uint32 show_avatar_id_list(int index) const;
  void set_show_avatar_id_list(int index, ::google::protobuf::uint32 value);
  void add_show_avatar_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      show_avatar_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_show_avatar_id_list();

  // bool is_show_avatar = 3;
  void clear_is_show_avatar();
  static const int kIsShowAvatarFieldNumber = 3;
  bool is_show_avatar() const;
  void set_is_show_avatar(bool value);

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UpdatePlayerShowAvatarListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > show_avatar_id_list_;
  mutable int _show_avatar_id_list_cached_byte_size_;
  bool is_show_avatar_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendShowAvatarInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetFriendShowAvatarInfoReq) */ {
 public:
  GetFriendShowAvatarInfoReq();
  virtual ~GetFriendShowAvatarInfoReq();

  GetFriendShowAvatarInfoReq(const GetFriendShowAvatarInfoReq& from);

  inline GetFriendShowAvatarInfoReq& operator=(const GetFriendShowAvatarInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendShowAvatarInfoReq(GetFriendShowAvatarInfoReq&& from) noexcept
    : GetFriendShowAvatarInfoReq() {
    *this = ::std::move(from);
  }

  inline GetFriendShowAvatarInfoReq& operator=(GetFriendShowAvatarInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendShowAvatarInfoReq& default_instance();

  static inline const GetFriendShowAvatarInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetFriendShowAvatarInfoReq*>(
               &_GetFriendShowAvatarInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(GetFriendShowAvatarInfoReq* other);
  friend void swap(GetFriendShowAvatarInfoReq& a, GetFriendShowAvatarInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendShowAvatarInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFriendShowAvatarInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFriendShowAvatarInfoReq& from);
  void MergeFrom(const GetFriendShowAvatarInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFriendShowAvatarInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 15;
  void clear_uid();
  static const int kUidFieldNumber = 15;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetFriendShowAvatarInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendShowAvatarInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetFriendShowAvatarInfoRsp) */ {
 public:
  GetFriendShowAvatarInfoRsp();
  virtual ~GetFriendShowAvatarInfoRsp();

  GetFriendShowAvatarInfoRsp(const GetFriendShowAvatarInfoRsp& from);

  inline GetFriendShowAvatarInfoRsp& operator=(const GetFriendShowAvatarInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendShowAvatarInfoRsp(GetFriendShowAvatarInfoRsp&& from) noexcept
    : GetFriendShowAvatarInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetFriendShowAvatarInfoRsp& operator=(GetFriendShowAvatarInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendShowAvatarInfoRsp& default_instance();

  static inline const GetFriendShowAvatarInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetFriendShowAvatarInfoRsp*>(
               &_GetFriendShowAvatarInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(GetFriendShowAvatarInfoRsp* other);
  friend void swap(GetFriendShowAvatarInfoRsp& a, GetFriendShowAvatarInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendShowAvatarInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFriendShowAvatarInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFriendShowAvatarInfoRsp& from);
  void MergeFrom(const GetFriendShowAvatarInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFriendShowAvatarInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 9;
  int show_avatar_info_list_size() const;
  void clear_show_avatar_info_list();
  static const int kShowAvatarInfoListFieldNumber = 9;
  const ::proto::ShowAvatarInfo& show_avatar_info_list(int index) const;
  ::proto::ShowAvatarInfo* mutable_show_avatar_info_list(int index);
  ::proto::ShowAvatarInfo* add_show_avatar_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >*
      mutable_show_avatar_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >&
      show_avatar_info_list() const;

  // int32 retcode = 3;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 uid = 6;
  void clear_uid();
  static const int kUidFieldNumber = 6;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetFriendShowAvatarInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo > show_avatar_info_list_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePlayerShowNameCardListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePlayerShowNameCardListReq) */ {
 public:
  UpdatePlayerShowNameCardListReq();
  virtual ~UpdatePlayerShowNameCardListReq();

  UpdatePlayerShowNameCardListReq(const UpdatePlayerShowNameCardListReq& from);

  inline UpdatePlayerShowNameCardListReq& operator=(const UpdatePlayerShowNameCardListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePlayerShowNameCardListReq(UpdatePlayerShowNameCardListReq&& from) noexcept
    : UpdatePlayerShowNameCardListReq() {
    *this = ::std::move(from);
  }

  inline UpdatePlayerShowNameCardListReq& operator=(UpdatePlayerShowNameCardListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePlayerShowNameCardListReq& default_instance();

  static inline const UpdatePlayerShowNameCardListReq* internal_default_instance() {
    return reinterpret_cast<const UpdatePlayerShowNameCardListReq*>(
               &_UpdatePlayerShowNameCardListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(UpdatePlayerShowNameCardListReq* other);
  friend void swap(UpdatePlayerShowNameCardListReq& a, UpdatePlayerShowNameCardListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePlayerShowNameCardListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePlayerShowNameCardListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePlayerShowNameCardListReq& from);
  void MergeFrom(const UpdatePlayerShowNameCardListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePlayerShowNameCardListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 show_name_card_id_list = 15;
  int show_name_card_id_list_size() const;
  void clear_show_name_card_id_list();
  static const int kShowNameCardIdListFieldNumber = 15;
  ::google::protobuf::uint32 show_name_card_id_list(int index) const;
  void set_show_name_card_id_list(int index, ::google::protobuf::uint32 value);
  void add_show_name_card_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      show_name_card_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_show_name_card_id_list();

  // @@protoc_insertion_point(class_scope:proto.UpdatePlayerShowNameCardListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > show_name_card_id_list_;
  mutable int _show_name_card_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePlayerShowNameCardListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePlayerShowNameCardListRsp) */ {
 public:
  UpdatePlayerShowNameCardListRsp();
  virtual ~UpdatePlayerShowNameCardListRsp();

  UpdatePlayerShowNameCardListRsp(const UpdatePlayerShowNameCardListRsp& from);

  inline UpdatePlayerShowNameCardListRsp& operator=(const UpdatePlayerShowNameCardListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePlayerShowNameCardListRsp(UpdatePlayerShowNameCardListRsp&& from) noexcept
    : UpdatePlayerShowNameCardListRsp() {
    *this = ::std::move(from);
  }

  inline UpdatePlayerShowNameCardListRsp& operator=(UpdatePlayerShowNameCardListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePlayerShowNameCardListRsp& default_instance();

  static inline const UpdatePlayerShowNameCardListRsp* internal_default_instance() {
    return reinterpret_cast<const UpdatePlayerShowNameCardListRsp*>(
               &_UpdatePlayerShowNameCardListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(UpdatePlayerShowNameCardListRsp* other);
  friend void swap(UpdatePlayerShowNameCardListRsp& a, UpdatePlayerShowNameCardListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePlayerShowNameCardListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePlayerShowNameCardListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePlayerShowNameCardListRsp& from);
  void MergeFrom(const UpdatePlayerShowNameCardListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePlayerShowNameCardListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 show_name_card_id_list = 12;
  int show_name_card_id_list_size() const;
  void clear_show_name_card_id_list();
  static const int kShowNameCardIdListFieldNumber = 12;
  ::google::protobuf::uint32 show_name_card_id_list(int index) const;
  void set_show_name_card_id_list(int index, ::google::protobuf::uint32 value);
  void add_show_name_card_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      show_name_card_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_show_name_card_id_list();

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UpdatePlayerShowNameCardListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > show_name_card_id_list_;
  mutable int _show_name_card_id_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendShowNameCardInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetFriendShowNameCardInfoReq) */ {
 public:
  GetFriendShowNameCardInfoReq();
  virtual ~GetFriendShowNameCardInfoReq();

  GetFriendShowNameCardInfoReq(const GetFriendShowNameCardInfoReq& from);

  inline GetFriendShowNameCardInfoReq& operator=(const GetFriendShowNameCardInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendShowNameCardInfoReq(GetFriendShowNameCardInfoReq&& from) noexcept
    : GetFriendShowNameCardInfoReq() {
    *this = ::std::move(from);
  }

  inline GetFriendShowNameCardInfoReq& operator=(GetFriendShowNameCardInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendShowNameCardInfoReq& default_instance();

  static inline const GetFriendShowNameCardInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetFriendShowNameCardInfoReq*>(
               &_GetFriendShowNameCardInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(GetFriendShowNameCardInfoReq* other);
  friend void swap(GetFriendShowNameCardInfoReq& a, GetFriendShowNameCardInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendShowNameCardInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFriendShowNameCardInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFriendShowNameCardInfoReq& from);
  void MergeFrom(const GetFriendShowNameCardInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFriendShowNameCardInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetFriendShowNameCardInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendShowNameCardInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetFriendShowNameCardInfoRsp) */ {
 public:
  GetFriendShowNameCardInfoRsp();
  virtual ~GetFriendShowNameCardInfoRsp();

  GetFriendShowNameCardInfoRsp(const GetFriendShowNameCardInfoRsp& from);

  inline GetFriendShowNameCardInfoRsp& operator=(const GetFriendShowNameCardInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendShowNameCardInfoRsp(GetFriendShowNameCardInfoRsp&& from) noexcept
    : GetFriendShowNameCardInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetFriendShowNameCardInfoRsp& operator=(GetFriendShowNameCardInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendShowNameCardInfoRsp& default_instance();

  static inline const GetFriendShowNameCardInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetFriendShowNameCardInfoRsp*>(
               &_GetFriendShowNameCardInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(GetFriendShowNameCardInfoRsp* other);
  friend void swap(GetFriendShowNameCardInfoRsp& a, GetFriendShowNameCardInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendShowNameCardInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFriendShowNameCardInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFriendShowNameCardInfoRsp& from);
  void MergeFrom(const GetFriendShowNameCardInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFriendShowNameCardInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 show_name_card_id_list = 10;
  int show_name_card_id_list_size() const;
  void clear_show_name_card_id_list();
  static const int kShowNameCardIdListFieldNumber = 10;
  ::google::protobuf::uint32 show_name_card_id_list(int index) const;
  void set_show_name_card_id_list(int index, ::google::protobuf::uint32 value);
  void add_show_name_card_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      show_name_card_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_show_name_card_id_list();

  // uint32 uid = 7;
  void clear_uid();
  static const int kUidFieldNumber = 7;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetFriendShowNameCardInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > show_name_card_id_list_;
  mutable int _show_name_card_id_list_cached_byte_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceAddPlayerFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ForceAddPlayerFriendReq) */ {
 public:
  ForceAddPlayerFriendReq();
  virtual ~ForceAddPlayerFriendReq();

  ForceAddPlayerFriendReq(const ForceAddPlayerFriendReq& from);

  inline ForceAddPlayerFriendReq& operator=(const ForceAddPlayerFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceAddPlayerFriendReq(ForceAddPlayerFriendReq&& from) noexcept
    : ForceAddPlayerFriendReq() {
    *this = ::std::move(from);
  }

  inline ForceAddPlayerFriendReq& operator=(ForceAddPlayerFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceAddPlayerFriendReq& default_instance();

  static inline const ForceAddPlayerFriendReq* internal_default_instance() {
    return reinterpret_cast<const ForceAddPlayerFriendReq*>(
               &_ForceAddPlayerFriendReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(ForceAddPlayerFriendReq* other);
  friend void swap(ForceAddPlayerFriendReq& a, ForceAddPlayerFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceAddPlayerFriendReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceAddPlayerFriendReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForceAddPlayerFriendReq& from);
  void MergeFrom(const ForceAddPlayerFriendReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForceAddPlayerFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 15;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 15;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ForceAddPlayerFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceAddPlayerFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ForceAddPlayerFriendRsp) */ {
 public:
  ForceAddPlayerFriendRsp();
  virtual ~ForceAddPlayerFriendRsp();

  ForceAddPlayerFriendRsp(const ForceAddPlayerFriendRsp& from);

  inline ForceAddPlayerFriendRsp& operator=(const ForceAddPlayerFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceAddPlayerFriendRsp(ForceAddPlayerFriendRsp&& from) noexcept
    : ForceAddPlayerFriendRsp() {
    *this = ::std::move(from);
  }

  inline ForceAddPlayerFriendRsp& operator=(ForceAddPlayerFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceAddPlayerFriendRsp& default_instance();

  static inline const ForceAddPlayerFriendRsp* internal_default_instance() {
    return reinterpret_cast<const ForceAddPlayerFriendRsp*>(
               &_ForceAddPlayerFriendRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(ForceAddPlayerFriendRsp* other);
  friend void swap(ForceAddPlayerFriendRsp& a, ForceAddPlayerFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceAddPlayerFriendRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceAddPlayerFriendRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForceAddPlayerFriendRsp& from);
  void MergeFrom(const ForceAddPlayerFriendRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForceAddPlayerFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.FriendBrief target_friend_brief = 2;
  bool has_target_friend_brief() const;
  void clear_target_friend_brief();
  static const int kTargetFriendBriefFieldNumber = 2;
  const ::proto::FriendBrief& target_friend_brief() const;
  ::proto::FriendBrief* mutable_target_friend_brief();
  ::proto::FriendBrief* release_target_friend_brief();
  void set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief);

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 9;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 9;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ForceAddPlayerFriendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::FriendBrief* target_friend_brief_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProfilePictureChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProfilePictureChangeNotify) */ {
 public:
  ProfilePictureChangeNotify();
  virtual ~ProfilePictureChangeNotify();

  ProfilePictureChangeNotify(const ProfilePictureChangeNotify& from);

  inline ProfilePictureChangeNotify& operator=(const ProfilePictureChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProfilePictureChangeNotify(ProfilePictureChangeNotify&& from) noexcept
    : ProfilePictureChangeNotify() {
    *this = ::std::move(from);
  }

  inline ProfilePictureChangeNotify& operator=(ProfilePictureChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfilePictureChangeNotify& default_instance();

  static inline const ProfilePictureChangeNotify* internal_default_instance() {
    return reinterpret_cast<const ProfilePictureChangeNotify*>(
               &_ProfilePictureChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ProfilePictureChangeNotify* other);
  friend void swap(ProfilePictureChangeNotify& a, ProfilePictureChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProfilePictureChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ProfilePictureChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProfilePictureChangeNotify& from);
  void MergeFrom(const ProfilePictureChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProfilePictureChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ProfilePicture profile_picture = 12;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 12;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // @@protoc_insertion_point(class_scope:proto.ProfilePictureChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ProfilePicture* profile_picture_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PSNFriendListNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PSNFriendListNotify) */ {
 public:
  PSNFriendListNotify();
  virtual ~PSNFriendListNotify();

  PSNFriendListNotify(const PSNFriendListNotify& from);

  inline PSNFriendListNotify& operator=(const PSNFriendListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PSNFriendListNotify(PSNFriendListNotify&& from) noexcept
    : PSNFriendListNotify() {
    *this = ::std::move(from);
  }

  inline PSNFriendListNotify& operator=(PSNFriendListNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PSNFriendListNotify& default_instance();

  static inline const PSNFriendListNotify* internal_default_instance() {
    return reinterpret_cast<const PSNFriendListNotify*>(
               &_PSNFriendListNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(PSNFriendListNotify* other);
  friend void swap(PSNFriendListNotify& a, PSNFriendListNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PSNFriendListNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PSNFriendListNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PSNFriendListNotify& from);
  void MergeFrom(const PSNFriendListNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PSNFriendListNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FriendBrief psn_friend_list = 8;
  int psn_friend_list_size() const;
  void clear_psn_friend_list();
  static const int kPsnFriendListFieldNumber = 8;
  const ::proto::FriendBrief& psn_friend_list(int index) const;
  ::proto::FriendBrief* mutable_psn_friend_list(int index);
  ::proto::FriendBrief* add_psn_friend_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_psn_friend_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      psn_friend_list() const;

  // @@protoc_insertion_point(class_scope:proto.PSNFriendListNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > psn_friend_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PSNBlackListNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PSNBlackListNotify) */ {
 public:
  PSNBlackListNotify();
  virtual ~PSNBlackListNotify();

  PSNBlackListNotify(const PSNBlackListNotify& from);

  inline PSNBlackListNotify& operator=(const PSNBlackListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PSNBlackListNotify(PSNBlackListNotify&& from) noexcept
    : PSNBlackListNotify() {
    *this = ::std::move(from);
  }

  inline PSNBlackListNotify& operator=(PSNBlackListNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PSNBlackListNotify& default_instance();

  static inline const PSNBlackListNotify* internal_default_instance() {
    return reinterpret_cast<const PSNBlackListNotify*>(
               &_PSNBlackListNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(PSNBlackListNotify* other);
  friend void swap(PSNBlackListNotify& a, PSNBlackListNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PSNBlackListNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PSNBlackListNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PSNBlackListNotify& from);
  void MergeFrom(const PSNBlackListNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PSNBlackListNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FriendBrief psn_blacklist = 11;
  int psn_blacklist_size() const;
  void clear_psn_blacklist();
  static const int kPsnBlacklistFieldNumber = 11;
  const ::proto::FriendBrief& psn_blacklist(int index) const;
  ::proto::FriendBrief* mutable_psn_blacklist(int index);
  ::proto::FriendBrief* add_psn_blacklist();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_psn_blacklist();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      psn_blacklist() const;

  // @@protoc_insertion_point(class_scope:proto.PSNBlackListNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > psn_blacklist_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerAskFriendListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerAskFriendListReq) */ {
 public:
  GetPlayerAskFriendListReq();
  virtual ~GetPlayerAskFriendListReq();

  GetPlayerAskFriendListReq(const GetPlayerAskFriendListReq& from);

  inline GetPlayerAskFriendListReq& operator=(const GetPlayerAskFriendListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerAskFriendListReq(GetPlayerAskFriendListReq&& from) noexcept
    : GetPlayerAskFriendListReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerAskFriendListReq& operator=(GetPlayerAskFriendListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerAskFriendListReq& default_instance();

  static inline const GetPlayerAskFriendListReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerAskFriendListReq*>(
               &_GetPlayerAskFriendListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(GetPlayerAskFriendListReq* other);
  friend void swap(GetPlayerAskFriendListReq& a, GetPlayerAskFriendListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerAskFriendListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerAskFriendListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerAskFriendListReq& from);
  void MergeFrom(const GetPlayerAskFriendListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerAskFriendListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetPlayerAskFriendListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerAskFriendListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerAskFriendListRsp) */ {
 public:
  GetPlayerAskFriendListRsp();
  virtual ~GetPlayerAskFriendListRsp();

  GetPlayerAskFriendListRsp(const GetPlayerAskFriendListRsp& from);

  inline GetPlayerAskFriendListRsp& operator=(const GetPlayerAskFriendListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerAskFriendListRsp(GetPlayerAskFriendListRsp&& from) noexcept
    : GetPlayerAskFriendListRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerAskFriendListRsp& operator=(GetPlayerAskFriendListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerAskFriendListRsp& default_instance();

  static inline const GetPlayerAskFriendListRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerAskFriendListRsp*>(
               &_GetPlayerAskFriendListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(GetPlayerAskFriendListRsp* other);
  friend void swap(GetPlayerAskFriendListRsp& a, GetPlayerAskFriendListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerAskFriendListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerAskFriendListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerAskFriendListRsp& from);
  void MergeFrom(const GetPlayerAskFriendListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerAskFriendListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FriendBrief ask_friend_list = 15;
  int ask_friend_list_size() const;
  void clear_ask_friend_list();
  static const int kAskFriendListFieldNumber = 15;
  const ::proto::FriendBrief& ask_friend_list(int index) const;
  ::proto::FriendBrief* mutable_ask_friend_list(int index);
  ::proto::FriendBrief* add_ask_friend_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_ask_friend_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      ask_friend_list() const;

  // int32 retcode = 13;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 13;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerAskFriendListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > ask_friend_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetChatEmojiCollectionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetChatEmojiCollectionReq) */ {
 public:
  GetChatEmojiCollectionReq();
  virtual ~GetChatEmojiCollectionReq();

  GetChatEmojiCollectionReq(const GetChatEmojiCollectionReq& from);

  inline GetChatEmojiCollectionReq& operator=(const GetChatEmojiCollectionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetChatEmojiCollectionReq(GetChatEmojiCollectionReq&& from) noexcept
    : GetChatEmojiCollectionReq() {
    *this = ::std::move(from);
  }

  inline GetChatEmojiCollectionReq& operator=(GetChatEmojiCollectionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChatEmojiCollectionReq& default_instance();

  static inline const GetChatEmojiCollectionReq* internal_default_instance() {
    return reinterpret_cast<const GetChatEmojiCollectionReq*>(
               &_GetChatEmojiCollectionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(GetChatEmojiCollectionReq* other);
  friend void swap(GetChatEmojiCollectionReq& a, GetChatEmojiCollectionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetChatEmojiCollectionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetChatEmojiCollectionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetChatEmojiCollectionReq& from);
  void MergeFrom(const GetChatEmojiCollectionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetChatEmojiCollectionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetChatEmojiCollectionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetChatEmojiCollectionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetChatEmojiCollectionRsp) */ {
 public:
  GetChatEmojiCollectionRsp();
  virtual ~GetChatEmojiCollectionRsp();

  GetChatEmojiCollectionRsp(const GetChatEmojiCollectionRsp& from);

  inline GetChatEmojiCollectionRsp& operator=(const GetChatEmojiCollectionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetChatEmojiCollectionRsp(GetChatEmojiCollectionRsp&& from) noexcept
    : GetChatEmojiCollectionRsp() {
    *this = ::std::move(from);
  }

  inline GetChatEmojiCollectionRsp& operator=(GetChatEmojiCollectionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChatEmojiCollectionRsp& default_instance();

  static inline const GetChatEmojiCollectionRsp* internal_default_instance() {
    return reinterpret_cast<const GetChatEmojiCollectionRsp*>(
               &_GetChatEmojiCollectionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(GetChatEmojiCollectionRsp* other);
  friend void swap(GetChatEmojiCollectionRsp& a, GetChatEmojiCollectionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetChatEmojiCollectionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetChatEmojiCollectionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetChatEmojiCollectionRsp& from);
  void MergeFrom(const GetChatEmojiCollectionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetChatEmojiCollectionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 8;
  bool has_chat_emoji_collection_data() const;
  void clear_chat_emoji_collection_data();
  static const int kChatEmojiCollectionDataFieldNumber = 8;
  const ::proto::ChatEmojiCollectionData& chat_emoji_collection_data() const;
  ::proto::ChatEmojiCollectionData* mutable_chat_emoji_collection_data();
  ::proto::ChatEmojiCollectionData* release_chat_emoji_collection_data();
  void set_allocated_chat_emoji_collection_data(::proto::ChatEmojiCollectionData* chat_emoji_collection_data);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetChatEmojiCollectionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatEmojiCollectionData* chat_emoji_collection_data_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetChatEmojiCollectionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetChatEmojiCollectionReq) */ {
 public:
  SetChatEmojiCollectionReq();
  virtual ~SetChatEmojiCollectionReq();

  SetChatEmojiCollectionReq(const SetChatEmojiCollectionReq& from);

  inline SetChatEmojiCollectionReq& operator=(const SetChatEmojiCollectionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetChatEmojiCollectionReq(SetChatEmojiCollectionReq&& from) noexcept
    : SetChatEmojiCollectionReq() {
    *this = ::std::move(from);
  }

  inline SetChatEmojiCollectionReq& operator=(SetChatEmojiCollectionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetChatEmojiCollectionReq& default_instance();

  static inline const SetChatEmojiCollectionReq* internal_default_instance() {
    return reinterpret_cast<const SetChatEmojiCollectionReq*>(
               &_SetChatEmojiCollectionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(SetChatEmojiCollectionReq* other);
  friend void swap(SetChatEmojiCollectionReq& a, SetChatEmojiCollectionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetChatEmojiCollectionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetChatEmojiCollectionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetChatEmojiCollectionReq& from);
  void MergeFrom(const SetChatEmojiCollectionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetChatEmojiCollectionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ChatEmojiCollectionData chat_emoji_collection_data = 12;
  bool has_chat_emoji_collection_data() const;
  void clear_chat_emoji_collection_data();
  static const int kChatEmojiCollectionDataFieldNumber = 12;
  const ::proto::ChatEmojiCollectionData& chat_emoji_collection_data() const;
  ::proto::ChatEmojiCollectionData* mutable_chat_emoji_collection_data();
  ::proto::ChatEmojiCollectionData* release_chat_emoji_collection_data();
  void set_allocated_chat_emoji_collection_data(::proto::ChatEmojiCollectionData* chat_emoji_collection_data);

  // @@protoc_insertion_point(class_scope:proto.SetChatEmojiCollectionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatEmojiCollectionData* chat_emoji_collection_data_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetChatEmojiCollectionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetChatEmojiCollectionRsp) */ {
 public:
  SetChatEmojiCollectionRsp();
  virtual ~SetChatEmojiCollectionRsp();

  SetChatEmojiCollectionRsp(const SetChatEmojiCollectionRsp& from);

  inline SetChatEmojiCollectionRsp& operator=(const SetChatEmojiCollectionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetChatEmojiCollectionRsp(SetChatEmojiCollectionRsp&& from) noexcept
    : SetChatEmojiCollectionRsp() {
    *this = ::std::move(from);
  }

  inline SetChatEmojiCollectionRsp& operator=(SetChatEmojiCollectionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetChatEmojiCollectionRsp& default_instance();

  static inline const SetChatEmojiCollectionRsp* internal_default_instance() {
    return reinterpret_cast<const SetChatEmojiCollectionRsp*>(
               &_SetChatEmojiCollectionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(SetChatEmojiCollectionRsp* other);
  friend void swap(SetChatEmojiCollectionRsp& a, SetChatEmojiCollectionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetChatEmojiCollectionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetChatEmojiCollectionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetChatEmojiCollectionRsp& from);
  void MergeFrom(const SetChatEmojiCollectionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetChatEmojiCollectionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetChatEmojiCollectionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePS4FriendListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePS4FriendListReq) */ {
 public:
  UpdatePS4FriendListReq();
  virtual ~UpdatePS4FriendListReq();

  UpdatePS4FriendListReq(const UpdatePS4FriendListReq& from);

  inline UpdatePS4FriendListReq& operator=(const UpdatePS4FriendListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePS4FriendListReq(UpdatePS4FriendListReq&& from) noexcept
    : UpdatePS4FriendListReq() {
    *this = ::std::move(from);
  }

  inline UpdatePS4FriendListReq& operator=(UpdatePS4FriendListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePS4FriendListReq& default_instance();

  static inline const UpdatePS4FriendListReq* internal_default_instance() {
    return reinterpret_cast<const UpdatePS4FriendListReq*>(
               &_UpdatePS4FriendListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(UpdatePS4FriendListReq* other);
  friend void swap(UpdatePS4FriendListReq& a, UpdatePS4FriendListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePS4FriendListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePS4FriendListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePS4FriendListReq& from);
  void MergeFrom(const UpdatePS4FriendListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePS4FriendListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string psn_id_list = 4;
  int psn_id_list_size() const;
  void clear_psn_id_list();
  static const int kPsnIdListFieldNumber = 4;
  const ::std::string& psn_id_list(int index) const;
  ::std::string* mutable_psn_id_list(int index);
  void set_psn_id_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id_list(int index, ::std::string&& value);
  #endif
  void set_psn_id_list(int index, const char* value);
  void set_psn_id_list(int index, const char* value, size_t size);
  ::std::string* add_psn_id_list();
  void add_psn_id_list(const ::std::string& value);
  #if LANG_CXX11
  void add_psn_id_list(::std::string&& value);
  #endif
  void add_psn_id_list(const char* value);
  void add_psn_id_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& psn_id_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_psn_id_list();

  // @@protoc_insertion_point(class_scope:proto.UpdatePS4FriendListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> psn_id_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePS4FriendListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdatePS4FriendListRsp) */ {
 public:
  UpdatePS4FriendListRsp();
  virtual ~UpdatePS4FriendListRsp();

  UpdatePS4FriendListRsp(const UpdatePS4FriendListRsp& from);

  inline UpdatePS4FriendListRsp& operator=(const UpdatePS4FriendListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePS4FriendListRsp(UpdatePS4FriendListRsp&& from) noexcept
    : UpdatePS4FriendListRsp() {
    *this = ::std::move(from);
  }

  inline UpdatePS4FriendListRsp& operator=(UpdatePS4FriendListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePS4FriendListRsp& default_instance();

  static inline const UpdatePS4FriendListRsp* internal_default_instance() {
    return reinterpret_cast<const UpdatePS4FriendListRsp*>(
               &_UpdatePS4FriendListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(UpdatePS4FriendListRsp* other);
  friend void swap(UpdatePS4FriendListRsp& a, UpdatePS4FriendListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePS4FriendListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatePS4FriendListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatePS4FriendListRsp& from);
  void MergeFrom(const UpdatePS4FriendListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatePS4FriendListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string psn_id_list = 2;
  int psn_id_list_size() const;
  void clear_psn_id_list();
  static const int kPsnIdListFieldNumber = 2;
  const ::std::string& psn_id_list(int index) const;
  ::std::string* mutable_psn_id_list(int index);
  void set_psn_id_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id_list(int index, ::std::string&& value);
  #endif
  void set_psn_id_list(int index, const char* value);
  void set_psn_id_list(int index, const char* value, size_t size);
  ::std::string* add_psn_id_list();
  void add_psn_id_list(const ::std::string& value);
  #if LANG_CXX11
  void add_psn_id_list(::std::string&& value);
  #endif
  void add_psn_id_list(const char* value);
  void add_psn_id_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& psn_id_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_psn_id_list();

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UpdatePS4FriendListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> psn_id_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FriendInfoChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FriendInfoChangeNotify) */ {
 public:
  FriendInfoChangeNotify();
  virtual ~FriendInfoChangeNotify();

  FriendInfoChangeNotify(const FriendInfoChangeNotify& from);

  inline FriendInfoChangeNotify& operator=(const FriendInfoChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FriendInfoChangeNotify(FriendInfoChangeNotify&& from) noexcept
    : FriendInfoChangeNotify() {
    *this = ::std::move(from);
  }

  inline FriendInfoChangeNotify& operator=(FriendInfoChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfoChangeNotify& default_instance();

  static inline const FriendInfoChangeNotify* internal_default_instance() {
    return reinterpret_cast<const FriendInfoChangeNotify*>(
               &_FriendInfoChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(FriendInfoChangeNotify* other);
  friend void swap(FriendInfoChangeNotify& a, FriendInfoChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FriendInfoChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  FriendInfoChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriendInfoChangeNotify& from);
  void MergeFrom(const FriendInfoChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriendInfoChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string online_id = 9;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 9;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FriendInfoChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSignatureAuditDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSignatureAuditDataNotify) */ {
 public:
  PlayerSignatureAuditDataNotify();
  virtual ~PlayerSignatureAuditDataNotify();

  PlayerSignatureAuditDataNotify(const PlayerSignatureAuditDataNotify& from);

  inline PlayerSignatureAuditDataNotify& operator=(const PlayerSignatureAuditDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSignatureAuditDataNotify(PlayerSignatureAuditDataNotify&& from) noexcept
    : PlayerSignatureAuditDataNotify() {
    *this = ::std::move(from);
  }

  inline PlayerSignatureAuditDataNotify& operator=(PlayerSignatureAuditDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSignatureAuditDataNotify& default_instance();

  static inline const PlayerSignatureAuditDataNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerSignatureAuditDataNotify*>(
               &_PlayerSignatureAuditDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(PlayerSignatureAuditDataNotify* other);
  friend void swap(PlayerSignatureAuditDataNotify& a, PlayerSignatureAuditDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSignatureAuditDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSignatureAuditDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSignatureAuditDataNotify& from);
  void MergeFrom(const PlayerSignatureAuditDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSignatureAuditDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.ContentAuditInfo info = 14;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 14;
  const ::proto::ContentAuditInfo& info() const;
  ::proto::ContentAuditInfo* mutable_info();
  ::proto::ContentAuditInfo* release_info();
  void set_allocated_info(::proto::ContentAuditInfo* info);

  // @@protoc_insertion_point(class_scope:proto.PlayerSignatureAuditDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ContentAuditInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSignatureNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSignatureNotify) */ {
 public:
  PlayerSignatureNotify();
  virtual ~PlayerSignatureNotify();

  PlayerSignatureNotify(const PlayerSignatureNotify& from);

  inline PlayerSignatureNotify& operator=(const PlayerSignatureNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSignatureNotify(PlayerSignatureNotify&& from) noexcept
    : PlayerSignatureNotify() {
    *this = ::std::move(from);
  }

  inline PlayerSignatureNotify& operator=(PlayerSignatureNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSignatureNotify& default_instance();

  static inline const PlayerSignatureNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerSignatureNotify*>(
               &_PlayerSignatureNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(PlayerSignatureNotify* other);
  friend void swap(PlayerSignatureNotify& a, PlayerSignatureNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSignatureNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSignatureNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSignatureNotify& from);
  void MergeFrom(const PlayerSignatureNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSignatureNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string signature = 12;
  void clear_signature();
  static const int kSignatureFieldNumber = 12;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:proto.PlayerSignatureNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignatureAuditConfigNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SignatureAuditConfigNotify) */ {
 public:
  SignatureAuditConfigNotify();
  virtual ~SignatureAuditConfigNotify();

  SignatureAuditConfigNotify(const SignatureAuditConfigNotify& from);

  inline SignatureAuditConfigNotify& operator=(const SignatureAuditConfigNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignatureAuditConfigNotify(SignatureAuditConfigNotify&& from) noexcept
    : SignatureAuditConfigNotify() {
    *this = ::std::move(from);
  }

  inline SignatureAuditConfigNotify& operator=(SignatureAuditConfigNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignatureAuditConfigNotify& default_instance();

  static inline const SignatureAuditConfigNotify* internal_default_instance() {
    return reinterpret_cast<const SignatureAuditConfigNotify*>(
               &_SignatureAuditConfigNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(SignatureAuditConfigNotify* other);
  friend void swap(SignatureAuditConfigNotify& a, SignatureAuditConfigNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignatureAuditConfigNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SignatureAuditConfigNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignatureAuditConfigNotify& from);
  void MergeFrom(const SignatureAuditConfigNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignatureAuditConfigNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_open = 9;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 9;
  bool is_open() const;
  void set_is_open(bool value);

  // uint32 submit_limit = 10;
  void clear_submit_limit();
  static const int kSubmitLimitFieldNumber = 10;
  ::google::protobuf::uint32 submit_limit() const;
  void set_submit_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SignatureAuditConfigNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_open_;
  ::google::protobuf::uint32 submit_limit_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadSignatureAuditReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReadSignatureAuditReq) */ {
 public:
  ReadSignatureAuditReq();
  virtual ~ReadSignatureAuditReq();

  ReadSignatureAuditReq(const ReadSignatureAuditReq& from);

  inline ReadSignatureAuditReq& operator=(const ReadSignatureAuditReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadSignatureAuditReq(ReadSignatureAuditReq&& from) noexcept
    : ReadSignatureAuditReq() {
    *this = ::std::move(from);
  }

  inline ReadSignatureAuditReq& operator=(ReadSignatureAuditReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSignatureAuditReq& default_instance();

  static inline const ReadSignatureAuditReq* internal_default_instance() {
    return reinterpret_cast<const ReadSignatureAuditReq*>(
               &_ReadSignatureAuditReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(ReadSignatureAuditReq* other);
  friend void swap(ReadSignatureAuditReq& a, ReadSignatureAuditReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadSignatureAuditReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadSignatureAuditReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadSignatureAuditReq& from);
  void MergeFrom(const ReadSignatureAuditReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadSignatureAuditReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ReadSignatureAuditReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadSignatureAuditRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReadSignatureAuditRsp) */ {
 public:
  ReadSignatureAuditRsp();
  virtual ~ReadSignatureAuditRsp();

  ReadSignatureAuditRsp(const ReadSignatureAuditRsp& from);

  inline ReadSignatureAuditRsp& operator=(const ReadSignatureAuditRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadSignatureAuditRsp(ReadSignatureAuditRsp&& from) noexcept
    : ReadSignatureAuditRsp() {
    *this = ::std::move(from);
  }

  inline ReadSignatureAuditRsp& operator=(ReadSignatureAuditRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSignatureAuditRsp& default_instance();

  static inline const ReadSignatureAuditRsp* internal_default_instance() {
    return reinterpret_cast<const ReadSignatureAuditRsp*>(
               &_ReadSignatureAuditRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(ReadSignatureAuditRsp* other);
  friend void swap(ReadSignatureAuditRsp& a, ReadSignatureAuditRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadSignatureAuditRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadSignatureAuditRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadSignatureAuditRsp& from);
  void MergeFrom(const ReadSignatureAuditRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadSignatureAuditRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ReadSignatureAuditRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SocialShowAvatarInfo

// uint32 avatar_id = 1;
inline void SocialShowAvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SocialShowAvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialShowAvatarInfo.avatar_id)
  return avatar_id_;
}
inline void SocialShowAvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialShowAvatarInfo.avatar_id)
}

// uint32 level = 2;
inline void SocialShowAvatarInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SocialShowAvatarInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SocialShowAvatarInfo.level)
  return level_;
}
inline void SocialShowAvatarInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialShowAvatarInfo.level)
}

// uint32 costume_id = 3;
inline void SocialShowAvatarInfo::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 SocialShowAvatarInfo::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialShowAvatarInfo.costume_id)
  return costume_id_;
}
inline void SocialShowAvatarInfo::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialShowAvatarInfo.costume_id)
}

// -------------------------------------------------------------------

// SocialDetail

// uint32 uid = 1;
inline void SocialDetail::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::uid() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.uid)
  return uid_;
}
inline void SocialDetail::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.uid)
}

// string nickname = 2;
inline void SocialDetail::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocialDetail::nickname() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.nickname)
  return nickname_.GetNoArena();
}
inline void SocialDetail::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.nickname)
}
#if LANG_CXX11
inline void SocialDetail::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.nickname)
}
#endif
inline void SocialDetail::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.nickname)
}
inline void SocialDetail::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.nickname)
}
inline ::std::string* SocialDetail::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocialDetail::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocialDetail::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.nickname)
}

// uint32 level = 3;
inline void SocialDetail::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.level)
  return level_;
}
inline void SocialDetail::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.level)
}

// uint32 avatar_id = 4;
inline void SocialDetail::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.avatar_id)
  return avatar_id_;
}
inline void SocialDetail::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.avatar_id)
}

// string signature = 5;
inline void SocialDetail::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocialDetail::signature() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.signature)
  return signature_.GetNoArena();
}
inline void SocialDetail::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.signature)
}
#if LANG_CXX11
inline void SocialDetail::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.signature)
}
#endif
inline void SocialDetail::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.signature)
}
inline void SocialDetail::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.signature)
}
inline ::std::string* SocialDetail::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocialDetail::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocialDetail::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.signature)
}

// .proto.Birthday birthday = 6;
inline bool SocialDetail::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
inline void SocialDetail::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
inline const ::proto::Birthday& SocialDetail::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SocialDetail.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
inline ::proto::Birthday* SocialDetail::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.birthday)
  return birthday_;
}
inline ::proto::Birthday* SocialDetail::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
inline void SocialDetail::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.birthday)
}

// uint32 world_level = 7;
inline void SocialDetail::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::world_level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.world_level)
  return world_level_;
}
inline void SocialDetail::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.world_level)
}

// repeated uint32 reserved_list = 8;
inline int SocialDetail::reserved_list_size() const {
  return reserved_list_.size();
}
inline void SocialDetail::clear_reserved_list() {
  reserved_list_.Clear();
}
inline ::google::protobuf::uint32 SocialDetail::reserved_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.reserved_list)
  return reserved_list_.Get(index);
}
inline void SocialDetail::set_reserved_list(int index, ::google::protobuf::uint32 value) {
  reserved_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.reserved_list)
}
inline void SocialDetail::add_reserved_list(::google::protobuf::uint32 value) {
  reserved_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SocialDetail.reserved_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SocialDetail::reserved_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.reserved_list)
  return reserved_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SocialDetail::mutable_reserved_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.reserved_list)
  return &reserved_list_;
}

// .proto.FriendOnlineState online_state = 9;
inline void SocialDetail::clear_online_state() {
  online_state_ = 0;
}
inline ::proto::FriendOnlineState SocialDetail::online_state() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
inline void SocialDetail::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.online_state)
}

// uint32 param = 10;
inline void SocialDetail::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::param() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.param)
  return param_;
}
inline void SocialDetail::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.param)
}

// bool is_friend = 11;
inline void SocialDetail::clear_is_friend() {
  is_friend_ = false;
}
inline bool SocialDetail::is_friend() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_friend)
  return is_friend_;
}
inline void SocialDetail::set_is_friend(bool value) {
  
  is_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_friend)
}

// bool is_mp_mode_available = 12;
inline void SocialDetail::clear_is_mp_mode_available() {
  is_mp_mode_available_ = false;
}
inline bool SocialDetail::is_mp_mode_available() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_mp_mode_available)
  return is_mp_mode_available_;
}
inline void SocialDetail::set_is_mp_mode_available(bool value) {
  
  is_mp_mode_available_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_mp_mode_available)
}

// string online_id = 13;
inline void SocialDetail::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocialDetail::online_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.online_id)
  return online_id_.GetNoArena();
}
inline void SocialDetail::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.online_id)
}
#if LANG_CXX11
inline void SocialDetail::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.online_id)
}
#endif
inline void SocialDetail::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.online_id)
}
inline void SocialDetail::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.online_id)
}
inline ::std::string* SocialDetail::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocialDetail::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocialDetail::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.online_id)
}

// uint32 name_card_id = 14;
inline void SocialDetail::clear_name_card_id() {
  name_card_id_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.name_card_id)
  return name_card_id_;
}
inline void SocialDetail::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.name_card_id)
}

// bool is_in_blacklist = 15;
inline void SocialDetail::clear_is_in_blacklist() {
  is_in_blacklist_ = false;
}
inline bool SocialDetail::is_in_blacklist() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_in_blacklist)
  return is_in_blacklist_;
}
inline void SocialDetail::set_is_in_blacklist(bool value) {
  
  is_in_blacklist_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_in_blacklist)
}

// bool is_chat_no_disturb = 16;
inline void SocialDetail::clear_is_chat_no_disturb() {
  is_chat_no_disturb_ = false;
}
inline bool SocialDetail::is_chat_no_disturb() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_chat_no_disturb)
  return is_chat_no_disturb_;
}
inline void SocialDetail::set_is_chat_no_disturb(bool value) {
  
  is_chat_no_disturb_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_chat_no_disturb)
}

// string remark_name = 17;
inline void SocialDetail::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocialDetail::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.remark_name)
  return remark_name_.GetNoArena();
}
inline void SocialDetail::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.remark_name)
}
#if LANG_CXX11
inline void SocialDetail::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.remark_name)
}
#endif
inline void SocialDetail::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.remark_name)
}
inline void SocialDetail::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.remark_name)
}
inline ::std::string* SocialDetail::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocialDetail::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocialDetail::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.remark_name)
}

// uint32 finish_achievement_num = 18;
inline void SocialDetail::clear_finish_achievement_num() {
  finish_achievement_num_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::finish_achievement_num() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.finish_achievement_num)
  return finish_achievement_num_;
}
inline void SocialDetail::set_finish_achievement_num(::google::protobuf::uint32 value) {
  
  finish_achievement_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.finish_achievement_num)
}

// uint32 tower_floor_index = 19;
inline void SocialDetail::clear_tower_floor_index() {
  tower_floor_index_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::tower_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.tower_floor_index)
  return tower_floor_index_;
}
inline void SocialDetail::set_tower_floor_index(::google::protobuf::uint32 value) {
  
  tower_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.tower_floor_index)
}

// uint32 tower_level_index = 20;
inline void SocialDetail::clear_tower_level_index() {
  tower_level_index_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::tower_level_index() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.tower_level_index)
  return tower_level_index_;
}
inline void SocialDetail::set_tower_level_index(::google::protobuf::uint32 value) {
  
  tower_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.tower_level_index)
}

// bool is_show_avatar = 21;
inline void SocialDetail::clear_is_show_avatar() {
  is_show_avatar_ = false;
}
inline bool SocialDetail::is_show_avatar() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_show_avatar)
  return is_show_avatar_;
}
inline void SocialDetail::set_is_show_avatar(bool value) {
  
  is_show_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_show_avatar)
}

// repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
inline int SocialDetail::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
inline void SocialDetail::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
inline const ::proto::SocialShowAvatarInfo& SocialDetail::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
inline ::proto::SocialShowAvatarInfo* SocialDetail::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
inline ::proto::SocialShowAvatarInfo* SocialDetail::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >*
SocialDetail::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.show_avatar_info_list)
  return &show_avatar_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >&
SocialDetail::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.show_avatar_info_list)
  return show_avatar_info_list_;
}

// repeated uint32 show_name_card_id_list = 23;
inline int SocialDetail::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
inline void SocialDetail::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
inline ::google::protobuf::uint32 SocialDetail::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
inline void SocialDetail::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.show_name_card_id_list)
}
inline void SocialDetail::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SocialDetail.show_name_card_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SocialDetail::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.show_name_card_id_list)
  return show_name_card_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SocialDetail::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.show_name_card_id_list)
  return &show_name_card_id_list_;
}

// .proto.FriendEnterHomeOption friend_enter_home_option = 24;
inline void SocialDetail::clear_friend_enter_home_option() {
  friend_enter_home_option_ = 0;
}
inline ::proto::FriendEnterHomeOption SocialDetail::friend_enter_home_option() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.friend_enter_home_option)
  return static_cast< ::proto::FriendEnterHomeOption >(friend_enter_home_option_);
}
inline void SocialDetail::set_friend_enter_home_option(::proto::FriendEnterHomeOption value) {
  
  friend_enter_home_option_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.friend_enter_home_option)
}

// .proto.ProfilePicture profile_picture = 25;
inline bool SocialDetail::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
inline void SocialDetail::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
inline const ::proto::ProfilePicture& SocialDetail::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.SocialDetail.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
inline ::proto::ProfilePicture* SocialDetail::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.profile_picture)
  return profile_picture_;
}
inline ::proto::ProfilePicture* SocialDetail::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
inline void SocialDetail::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.profile_picture)
}

// string ip_code = 26;
inline void SocialDetail::clear_ip_code() {
  ip_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocialDetail::ip_code() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.ip_code)
  return ip_code_.GetNoArena();
}
inline void SocialDetail::set_ip_code(const ::std::string& value) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.ip_code)
}
#if LANG_CXX11
inline void SocialDetail::set_ip_code(::std::string&& value) {
  
  ip_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.ip_code)
}
#endif
inline void SocialDetail::set_ip_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.ip_code)
}
inline void SocialDetail::set_ip_code(const char* value, size_t size) {
  
  ip_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.ip_code)
}
inline ::std::string* SocialDetail::mutable_ip_code() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.ip_code)
  return ip_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocialDetail::release_ip_code() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.ip_code)
  
  return ip_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocialDetail::set_allocated_ip_code(::std::string* ip_code) {
  if (ip_code != NULL) {
    
  } else {
    
  }
  ip_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_code);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.ip_code)
}

// -------------------------------------------------------------------

// FriendBrief

// uint32 uid = 1;
inline void FriendBrief::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::uid() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.uid)
  return uid_;
}
inline void FriendBrief::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.uid)
}

// string nickname = 2;
inline void FriendBrief::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendBrief::nickname() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.nickname)
  return nickname_.GetNoArena();
}
inline void FriendBrief::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.nickname)
}
#if LANG_CXX11
inline void FriendBrief::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.nickname)
}
#endif
inline void FriendBrief::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.nickname)
}
inline void FriendBrief::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.nickname)
}
inline ::std::string* FriendBrief::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendBrief::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendBrief::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.nickname)
}

// uint32 level = 3;
inline void FriendBrief::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.level)
  return level_;
}
inline void FriendBrief::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.level)
}

// uint32 avatar_id = 4;
inline void FriendBrief::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.avatar_id)
  return avatar_id_;
}
inline void FriendBrief::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.avatar_id)
}

// uint32 world_level = 5;
inline void FriendBrief::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::world_level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.world_level)
  return world_level_;
}
inline void FriendBrief::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.world_level)
}

// string signature = 6;
inline void FriendBrief::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendBrief::signature() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.signature)
  return signature_.GetNoArena();
}
inline void FriendBrief::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.signature)
}
#if LANG_CXX11
inline void FriendBrief::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.signature)
}
#endif
inline void FriendBrief::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.signature)
}
inline void FriendBrief::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.signature)
}
inline ::std::string* FriendBrief::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendBrief::release_signature() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendBrief::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.signature)
}

// .proto.FriendOnlineState online_state = 7;
inline void FriendBrief::clear_online_state() {
  online_state_ = 0;
}
inline ::proto::FriendOnlineState FriendBrief::online_state() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
inline void FriendBrief::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.online_state)
}

// uint32 param = 8;
inline void FriendBrief::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::param() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.param)
  return param_;
}
inline void FriendBrief::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.param)
}

// bool is_mp_mode_available = 10;
inline void FriendBrief::clear_is_mp_mode_available() {
  is_mp_mode_available_ = false;
}
inline bool FriendBrief::is_mp_mode_available() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_mp_mode_available)
  return is_mp_mode_available_;
}
inline void FriendBrief::set_is_mp_mode_available(bool value) {
  
  is_mp_mode_available_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_mp_mode_available)
}

// string online_id = 11;
inline void FriendBrief::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendBrief::online_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.online_id)
  return online_id_.GetNoArena();
}
inline void FriendBrief::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.online_id)
}
#if LANG_CXX11
inline void FriendBrief::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.online_id)
}
#endif
inline void FriendBrief::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.online_id)
}
inline void FriendBrief::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.online_id)
}
inline ::std::string* FriendBrief::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendBrief::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendBrief::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.online_id)
}

// uint32 last_active_time = 12;
inline void FriendBrief::clear_last_active_time() {
  last_active_time_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::last_active_time() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.last_active_time)
  return last_active_time_;
}
inline void FriendBrief::set_last_active_time(::google::protobuf::uint32 value) {
  
  last_active_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.last_active_time)
}

// uint32 name_card_id = 13;
inline void FriendBrief::clear_name_card_id() {
  name_card_id_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.name_card_id)
  return name_card_id_;
}
inline void FriendBrief::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.name_card_id)
}

// uint32 mp_player_num = 14;
inline void FriendBrief::clear_mp_player_num() {
  mp_player_num_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::mp_player_num() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.mp_player_num)
  return mp_player_num_;
}
inline void FriendBrief::set_mp_player_num(::google::protobuf::uint32 value) {
  
  mp_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.mp_player_num)
}

// bool is_chat_no_disturb = 15;
inline void FriendBrief::clear_is_chat_no_disturb() {
  is_chat_no_disturb_ = false;
}
inline bool FriendBrief::is_chat_no_disturb() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_chat_no_disturb)
  return is_chat_no_disturb_;
}
inline void FriendBrief::set_is_chat_no_disturb(bool value) {
  
  is_chat_no_disturb_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_chat_no_disturb)
}

// uint32 chat_sequence = 16;
inline void FriendBrief::clear_chat_sequence() {
  chat_sequence_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::chat_sequence() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.chat_sequence)
  return chat_sequence_;
}
inline void FriendBrief::set_chat_sequence(::google::protobuf::uint32 value) {
  
  chat_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.chat_sequence)
}

// string remark_name = 17;
inline void FriendBrief::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendBrief::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.remark_name)
  return remark_name_.GetNoArena();
}
inline void FriendBrief::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.remark_name)
}
#if LANG_CXX11
inline void FriendBrief::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.remark_name)
}
#endif
inline void FriendBrief::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.remark_name)
}
inline void FriendBrief::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.remark_name)
}
inline ::std::string* FriendBrief::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendBrief::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendBrief::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.remark_name)
}

// repeated .proto.SocialShowAvatarInfo show_avatar_info_list = 22;
inline int FriendBrief::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
inline void FriendBrief::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
inline const ::proto::SocialShowAvatarInfo& FriendBrief::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
inline ::proto::SocialShowAvatarInfo* FriendBrief::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
inline ::proto::SocialShowAvatarInfo* FriendBrief::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >*
FriendBrief::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FriendBrief.show_avatar_info_list)
  return &show_avatar_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SocialShowAvatarInfo >&
FriendBrief::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.FriendBrief.show_avatar_info_list)
  return show_avatar_info_list_;
}

// .proto.FriendEnterHomeOption friend_enter_home_option = 23;
inline void FriendBrief::clear_friend_enter_home_option() {
  friend_enter_home_option_ = 0;
}
inline ::proto::FriendEnterHomeOption FriendBrief::friend_enter_home_option() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.friend_enter_home_option)
  return static_cast< ::proto::FriendEnterHomeOption >(friend_enter_home_option_);
}
inline void FriendBrief::set_friend_enter_home_option(::proto::FriendEnterHomeOption value) {
  
  friend_enter_home_option_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.friend_enter_home_option)
}

// .proto.ProfilePicture profile_picture = 24;
inline bool FriendBrief::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
inline void FriendBrief::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
inline const ::proto::ProfilePicture& FriendBrief::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.FriendBrief.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
inline ::proto::ProfilePicture* FriendBrief::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.profile_picture)
  return profile_picture_;
}
inline ::proto::ProfilePicture* FriendBrief::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
inline void FriendBrief::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.profile_picture)
}

// bool is_game_source = 25;
inline void FriendBrief::clear_is_game_source() {
  is_game_source_ = false;
}
inline bool FriendBrief::is_game_source() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_game_source)
  return is_game_source_;
}
inline void FriendBrief::set_is_game_source(bool value) {
  
  is_game_source_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_game_source)
}

// bool is_psn_source = 26;
inline void FriendBrief::clear_is_psn_source() {
  is_psn_source_ = false;
}
inline bool FriendBrief::is_psn_source() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.is_psn_source)
  return is_psn_source_;
}
inline void FriendBrief::set_is_psn_source(bool value) {
  
  is_psn_source_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.is_psn_source)
}

// .proto.PlatformType platform_type = 27;
inline void FriendBrief::clear_platform_type() {
  platform_type_ = 0;
}
inline ::proto::PlatformType FriendBrief::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.platform_type)
  return static_cast< ::proto::PlatformType >(platform_type_);
}
inline void FriendBrief::set_platform_type(::proto::PlatformType value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.platform_type)
}

// -------------------------------------------------------------------

// ChatEmojiCollectionData

// repeated uint32 emoji_id_list = 1;
inline int ChatEmojiCollectionData::emoji_id_list_size() const {
  return emoji_id_list_.size();
}
inline void ChatEmojiCollectionData::clear_emoji_id_list() {
  emoji_id_list_.Clear();
}
inline ::google::protobuf::uint32 ChatEmojiCollectionData::emoji_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatEmojiCollectionData.emoji_id_list)
  return emoji_id_list_.Get(index);
}
inline void ChatEmojiCollectionData::set_emoji_id_list(int index, ::google::protobuf::uint32 value) {
  emoji_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ChatEmojiCollectionData.emoji_id_list)
}
inline void ChatEmojiCollectionData::add_emoji_id_list(::google::protobuf::uint32 value) {
  emoji_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ChatEmojiCollectionData.emoji_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChatEmojiCollectionData::emoji_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ChatEmojiCollectionData.emoji_id_list)
  return emoji_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChatEmojiCollectionData::mutable_emoji_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatEmojiCollectionData.emoji_id_list)
  return &emoji_id_list_;
}

// -------------------------------------------------------------------

// GetPlayerFriendListReq

// -------------------------------------------------------------------

// GetPlayerFriendListRsp

// int32 retcode = 9;
inline void GetPlayerFriendListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerFriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.retcode)
  return retcode_;
}
inline void GetPlayerFriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerFriendListRsp.retcode)
}

// repeated .proto.FriendBrief ask_friend_list = 8;
inline int GetPlayerFriendListRsp::ask_friend_list_size() const {
  return ask_friend_list_.size();
}
inline void GetPlayerFriendListRsp::clear_ask_friend_list() {
  ask_friend_list_.Clear();
}
inline const ::proto::FriendBrief& GetPlayerFriendListRsp::ask_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Get(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::mutable_ask_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Mutable(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::add_ask_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_ask_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return &ask_friend_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::ask_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_;
}

// repeated .proto.FriendBrief friend_list = 14;
inline int GetPlayerFriendListRsp::friend_list_size() const {
  return friend_list_.size();
}
inline void GetPlayerFriendListRsp::clear_friend_list() {
  friend_list_.Clear();
}
inline const ::proto::FriendBrief& GetPlayerFriendListRsp::friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Get(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::mutable_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Mutable(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::add_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.friend_list)
  return &friend_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_;
}

// -------------------------------------------------------------------

// AskAddFriendReq

// uint32 target_uid = 7;
inline void AskAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AskAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendReq.target_uid)
  return target_uid_;
}
inline void AskAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendReq.target_uid)
}

// -------------------------------------------------------------------

// AskAddFriendRsp

// uint32 param = 8;
inline void AskAddFriendRsp::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 AskAddFriendRsp::param() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.param)
  return param_;
}
inline void AskAddFriendRsp::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.param)
}

// int32 retcode = 7;
inline void AskAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AskAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.retcode)
  return retcode_;
}
inline void AskAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.retcode)
}

// uint32 target_uid = 4;
inline void AskAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AskAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.target_uid)
  return target_uid_;
}
inline void AskAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.target_uid)
}

// -------------------------------------------------------------------

// DealAddFriendReq

// .proto.DealAddFriendResultType deal_add_friend_result = 12;
inline void DealAddFriendReq::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
inline ::proto::DealAddFriendResultType DealAddFriendReq::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
inline void DealAddFriendReq::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.deal_add_friend_result)
}

// uint32 target_uid = 10;
inline void DealAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DealAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.target_uid)
  return target_uid_;
}
inline void DealAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.target_uid)
}

// -------------------------------------------------------------------

// DealAddFriendRsp

// int32 retcode = 1;
inline void DealAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 DealAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.retcode)
  return retcode_;
}
inline void DealAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.retcode)
}

// uint32 target_uid = 5;
inline void DealAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DealAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.target_uid)
  return target_uid_;
}
inline void DealAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.target_uid)
}

// .proto.DealAddFriendResultType deal_add_friend_result = 6;
inline void DealAddFriendRsp::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
inline ::proto::DealAddFriendResultType DealAddFriendRsp::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
inline void DealAddFriendRsp::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.deal_add_friend_result)
}

// -------------------------------------------------------------------

// GetPlayerSocialDetailReq

// uint32 uid = 9;
inline void GetPlayerSocialDetailReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerSocialDetailReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailReq.uid)
  return uid_;
}
inline void GetPlayerSocialDetailReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailReq.uid)
}

// -------------------------------------------------------------------

// GetPlayerSocialDetailRsp

// .proto.SocialDetail detail_data = 12;
inline bool GetPlayerSocialDetailRsp::has_detail_data() const {
  return this != internal_default_instance() && detail_data_ != NULL;
}
inline void GetPlayerSocialDetailRsp::clear_detail_data() {
  if (GetArenaNoVirtual() == NULL && detail_data_ != NULL) delete detail_data_;
  detail_data_ = NULL;
}
inline const ::proto::SocialDetail& GetPlayerSocialDetailRsp::detail_data() const {
  const ::proto::SocialDetail* p = detail_data_;
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.detail_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SocialDetail*>(
      &::proto::_SocialDetail_default_instance_);
}
inline ::proto::SocialDetail* GetPlayerSocialDetailRsp::mutable_detail_data() {
  
  if (detail_data_ == NULL) {
    detail_data_ = new ::proto::SocialDetail;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerSocialDetailRsp.detail_data)
  return detail_data_;
}
inline ::proto::SocialDetail* GetPlayerSocialDetailRsp::release_detail_data() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerSocialDetailRsp.detail_data)
  
  ::proto::SocialDetail* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
inline void GetPlayerSocialDetailRsp::set_allocated_detail_data(::proto::SocialDetail* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerSocialDetailRsp.detail_data)
}

// int32 retcode = 1;
inline void GetPlayerSocialDetailRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerSocialDetailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.retcode)
  return retcode_;
}
inline void GetPlayerSocialDetailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailRsp.retcode)
}

// -------------------------------------------------------------------

// DeleteFriendReq

// uint32 target_uid = 13;
inline void DeleteFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DeleteFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendReq.target_uid)
  return target_uid_;
}
inline void DeleteFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendReq.target_uid)
}

// -------------------------------------------------------------------

// DeleteFriendRsp

// uint32 target_uid = 14;
inline void DeleteFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DeleteFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.target_uid)
  return target_uid_;
}
inline void DeleteFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.target_uid)
}

// int32 retcode = 5;
inline void DeleteFriendRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 DeleteFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.retcode)
  return retcode_;
}
inline void DeleteFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.retcode)
}

// -------------------------------------------------------------------

// SetPlayerBirthdayReq

// .proto.Birthday birthday = 9;
inline bool SetPlayerBirthdayReq::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
inline void SetPlayerBirthdayReq::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
inline const ::proto::Birthday& SetPlayerBirthdayReq::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayReq.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
inline ::proto::Birthday* SetPlayerBirthdayReq::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBirthdayReq.birthday)
  return birthday_;
}
inline ::proto::Birthday* SetPlayerBirthdayReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBirthdayReq.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
inline void SetPlayerBirthdayReq::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBirthdayReq.birthday)
}

// -------------------------------------------------------------------

// SetPlayerBirthdayRsp

// .proto.Birthday birthday = 2;
inline bool SetPlayerBirthdayRsp::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
inline void SetPlayerBirthdayRsp::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
inline const ::proto::Birthday& SetPlayerBirthdayRsp::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayRsp.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
inline ::proto::Birthday* SetPlayerBirthdayRsp::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBirthdayRsp.birthday)
  return birthday_;
}
inline ::proto::Birthday* SetPlayerBirthdayRsp::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBirthdayRsp.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
inline void SetPlayerBirthdayRsp::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBirthdayRsp.birthday)
}

// int32 retcode = 5;
inline void SetPlayerBirthdayRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerBirthdayRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayRsp.retcode)
  return retcode_;
}
inline void SetPlayerBirthdayRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBirthdayRsp.retcode)
}

// -------------------------------------------------------------------

// SetPlayerSignatureReq

// string signature = 3;
inline void SetPlayerSignatureReq::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerSignatureReq::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureReq.signature)
  return signature_.GetNoArena();
}
inline void SetPlayerSignatureReq::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureReq.signature)
}
#if LANG_CXX11
inline void SetPlayerSignatureReq::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerSignatureReq.signature)
}
#endif
inline void SetPlayerSignatureReq::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerSignatureReq.signature)
}
inline void SetPlayerSignatureReq::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerSignatureReq.signature)
}
inline ::std::string* SetPlayerSignatureReq::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerSignatureReq.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerSignatureReq::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerSignatureReq.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerSignatureReq::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerSignatureReq.signature)
}

// -------------------------------------------------------------------

// SetPlayerSignatureRsp

// string signature = 1;
inline void SetPlayerSignatureRsp::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerSignatureRsp::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureRsp.signature)
  return signature_.GetNoArena();
}
inline void SetPlayerSignatureRsp::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureRsp.signature)
}
#if LANG_CXX11
inline void SetPlayerSignatureRsp::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerSignatureRsp.signature)
}
#endif
inline void SetPlayerSignatureRsp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerSignatureRsp.signature)
}
inline void SetPlayerSignatureRsp::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerSignatureRsp.signature)
}
inline ::std::string* SetPlayerSignatureRsp::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerSignatureRsp.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerSignatureRsp::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerSignatureRsp.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerSignatureRsp::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerSignatureRsp.signature)
}

// int32 retcode = 4;
inline void SetPlayerSignatureRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerSignatureRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureRsp.retcode)
  return retcode_;
}
inline void SetPlayerSignatureRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureRsp.retcode)
}

// -------------------------------------------------------------------

// SetPlayerHeadImageReq

// uint32 avatar_id = 7;
inline void SetPlayerHeadImageReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SetPlayerHeadImageReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageReq.avatar_id)
  return avatar_id_;
}
inline void SetPlayerHeadImageReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageReq.avatar_id)
}

// -------------------------------------------------------------------

// SetPlayerHeadImageRsp

// .proto.ProfilePicture profile_picture = 6;
inline bool SetPlayerHeadImageRsp::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
inline void SetPlayerHeadImageRsp::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
inline const ::proto::ProfilePicture& SetPlayerHeadImageRsp::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
inline ::proto::ProfilePicture* SetPlayerHeadImageRsp::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerHeadImageRsp.profile_picture)
  return profile_picture_;
}
inline ::proto::ProfilePicture* SetPlayerHeadImageRsp::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerHeadImageRsp.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
inline void SetPlayerHeadImageRsp::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerHeadImageRsp.profile_picture)
}

// uint32 avatar_id = 5;
inline void SetPlayerHeadImageRsp::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SetPlayerHeadImageRsp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.avatar_id)
  return avatar_id_;
}
inline void SetPlayerHeadImageRsp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageRsp.avatar_id)
}

// int32 retcode = 1;
inline void SetPlayerHeadImageRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerHeadImageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.retcode)
  return retcode_;
}
inline void SetPlayerHeadImageRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageRsp.retcode)
}

// -------------------------------------------------------------------

// UpdatePS4FriendListNotify

// repeated string psn_id_list = 15;
inline int UpdatePS4FriendListNotify::psn_id_list_size() const {
  return psn_id_list_.size();
}
inline void UpdatePS4FriendListNotify::clear_psn_id_list() {
  psn_id_list_.Clear();
}
inline const ::std::string& UpdatePS4FriendListNotify::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_.Get(index);
}
inline ::std::string* UpdatePS4FriendListNotify::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_.Mutable(index);
}
inline void UpdatePS4FriendListNotify::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListNotify.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpdatePS4FriendListNotify::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListNotify.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpdatePS4FriendListNotify::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4FriendListNotify.psn_id_list)
}
inline void UpdatePS4FriendListNotify::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4FriendListNotify.psn_id_list)
}
inline ::std::string* UpdatePS4FriendListNotify::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_.Add();
}
inline void UpdatePS4FriendListNotify::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListNotify.psn_id_list)
}
#if LANG_CXX11
inline void UpdatePS4FriendListNotify::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListNotify.psn_id_list)
}
#endif
inline void UpdatePS4FriendListNotify::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4FriendListNotify.psn_id_list)
}
inline void UpdatePS4FriendListNotify::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4FriendListNotify.psn_id_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4FriendListNotify::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4FriendListNotify.psn_id_list)
  return psn_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4FriendListNotify::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4FriendListNotify.psn_id_list)
  return &psn_id_list_;
}

// -------------------------------------------------------------------

// DeleteFriendNotify

// uint32 target_uid = 12;
inline void DeleteFriendNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DeleteFriendNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendNotify.target_uid)
  return target_uid_;
}
inline void DeleteFriendNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendNotify.target_uid)
}

// -------------------------------------------------------------------

// AddFriendNotify

// uint32 target_uid = 11;
inline void AddFriendNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AddFriendNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddFriendNotify.target_uid)
  return target_uid_;
}
inline void AddFriendNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFriendNotify.target_uid)
}

// .proto.FriendBrief target_friend_brief = 10;
inline bool AddFriendNotify::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
inline void AddFriendNotify::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
inline const ::proto::FriendBrief& AddFriendNotify::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.AddFriendNotify.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
inline ::proto::FriendBrief* AddFriendNotify::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddFriendNotify.target_friend_brief)
  return target_friend_brief_;
}
inline ::proto::FriendBrief* AddFriendNotify::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.AddFriendNotify.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
inline void AddFriendNotify::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddFriendNotify.target_friend_brief)
}

// -------------------------------------------------------------------

// AskAddFriendNotify

// .proto.FriendBrief target_friend_brief = 15;
inline bool AskAddFriendNotify::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
inline void AskAddFriendNotify::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
inline const ::proto::FriendBrief& AskAddFriendNotify::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.AskAddFriendNotify.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
inline ::proto::FriendBrief* AskAddFriendNotify::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.AskAddFriendNotify.target_friend_brief)
  return target_friend_brief_;
}
inline ::proto::FriendBrief* AskAddFriendNotify::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.AskAddFriendNotify.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
inline void AskAddFriendNotify::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AskAddFriendNotify.target_friend_brief)
}

// uint32 target_uid = 9;
inline void AskAddFriendNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AskAddFriendNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendNotify.target_uid)
  return target_uid_;
}
inline void AskAddFriendNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendNotify.target_uid)
}

// -------------------------------------------------------------------

// SetNameCardReq

// uint32 name_card_id = 10;
inline void SetNameCardReq::clear_name_card_id() {
  name_card_id_ = 0u;
}
inline ::google::protobuf::uint32 SetNameCardReq::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.SetNameCardReq.name_card_id)
  return name_card_id_;
}
inline void SetNameCardReq::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetNameCardReq.name_card_id)
}

// -------------------------------------------------------------------

// SetNameCardRsp

// uint32 name_card_id = 11;
inline void SetNameCardRsp::clear_name_card_id() {
  name_card_id_ = 0u;
}
inline ::google::protobuf::uint32 SetNameCardRsp::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.SetNameCardRsp.name_card_id)
  return name_card_id_;
}
inline void SetNameCardRsp::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetNameCardRsp.name_card_id)
}

// int32 retcode = 12;
inline void SetNameCardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetNameCardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetNameCardRsp.retcode)
  return retcode_;
}
inline void SetNameCardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetNameCardRsp.retcode)
}

// -------------------------------------------------------------------

// GetAllUnlockNameCardReq

// -------------------------------------------------------------------

// GetAllUnlockNameCardRsp

// int32 retcode = 4;
inline void GetAllUnlockNameCardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetAllUnlockNameCardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetAllUnlockNameCardRsp.retcode)
  return retcode_;
}
inline void GetAllUnlockNameCardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetAllUnlockNameCardRsp.retcode)
}

// repeated uint32 name_card_list = 14;
inline int GetAllUnlockNameCardRsp::name_card_list_size() const {
  return name_card_list_.size();
}
inline void GetAllUnlockNameCardRsp::clear_name_card_list() {
  name_card_list_.Clear();
}
inline ::google::protobuf::uint32 GetAllUnlockNameCardRsp::name_card_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetAllUnlockNameCardRsp.name_card_list)
  return name_card_list_.Get(index);
}
inline void GetAllUnlockNameCardRsp::set_name_card_list(int index, ::google::protobuf::uint32 value) {
  name_card_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetAllUnlockNameCardRsp.name_card_list)
}
inline void GetAllUnlockNameCardRsp::add_name_card_list(::google::protobuf::uint32 value) {
  name_card_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetAllUnlockNameCardRsp.name_card_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetAllUnlockNameCardRsp::name_card_list() const {
  // @@protoc_insertion_point(field_list:proto.GetAllUnlockNameCardRsp.name_card_list)
  return name_card_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetAllUnlockNameCardRsp::mutable_name_card_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetAllUnlockNameCardRsp.name_card_list)
  return &name_card_list_;
}

// -------------------------------------------------------------------

// AddBlacklistReq

// uint32 target_uid = 2;
inline void AddBlacklistReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AddBlacklistReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddBlacklistReq.target_uid)
  return target_uid_;
}
inline void AddBlacklistReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddBlacklistReq.target_uid)
}

// -------------------------------------------------------------------

// AddBlacklistRsp

// .proto.FriendBrief target_friend_brief = 13;
inline bool AddBlacklistRsp::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
inline void AddBlacklistRsp::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
inline const ::proto::FriendBrief& AddBlacklistRsp::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.AddBlacklistRsp.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
inline ::proto::FriendBrief* AddBlacklistRsp::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddBlacklistRsp.target_friend_brief)
  return target_friend_brief_;
}
inline ::proto::FriendBrief* AddBlacklistRsp::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.AddBlacklistRsp.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
inline void AddBlacklistRsp::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddBlacklistRsp.target_friend_brief)
}

// int32 retcode = 7;
inline void AddBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AddBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddBlacklistRsp.retcode)
  return retcode_;
}
inline void AddBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddBlacklistRsp.retcode)
}

// -------------------------------------------------------------------

// RemoveBlacklistReq

// uint32 target_uid = 13;
inline void RemoveBlacklistReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 RemoveBlacklistReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.RemoveBlacklistReq.target_uid)
  return target_uid_;
}
inline void RemoveBlacklistReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveBlacklistReq.target_uid)
}

// -------------------------------------------------------------------

// RemoveBlacklistRsp

// int32 retcode = 12;
inline void RemoveBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RemoveBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RemoveBlacklistRsp.retcode)
  return retcode_;
}
inline void RemoveBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveBlacklistRsp.retcode)
}

// uint32 target_uid = 7;
inline void RemoveBlacklistRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 RemoveBlacklistRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.RemoveBlacklistRsp.target_uid)
  return target_uid_;
}
inline void RemoveBlacklistRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveBlacklistRsp.target_uid)
}

// -------------------------------------------------------------------

// UnlockNameCardNotify

// uint32 name_card_id = 8;
inline void UnlockNameCardNotify::clear_name_card_id() {
  name_card_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockNameCardNotify::name_card_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockNameCardNotify.name_card_id)
  return name_card_id_;
}
inline void UnlockNameCardNotify::set_name_card_id(::google::protobuf::uint32 value) {
  
  name_card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockNameCardNotify.name_card_id)
}

// -------------------------------------------------------------------

// GetRecentMpPlayerListReq

// -------------------------------------------------------------------

// GetRecentMpPlayerListRsp

// int32 retcode = 13;
inline void GetRecentMpPlayerListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetRecentMpPlayerListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetRecentMpPlayerListRsp.retcode)
  return retcode_;
}
inline void GetRecentMpPlayerListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRecentMpPlayerListRsp.retcode)
}

// repeated .proto.FriendBrief recent_mp_player_brief_list = 14;
inline int GetRecentMpPlayerListRsp::recent_mp_player_brief_list_size() const {
  return recent_mp_player_brief_list_.size();
}
inline void GetRecentMpPlayerListRsp::clear_recent_mp_player_brief_list() {
  recent_mp_player_brief_list_.Clear();
}
inline const ::proto::FriendBrief& GetRecentMpPlayerListRsp::recent_mp_player_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Get(index);
}
inline ::proto::FriendBrief* GetRecentMpPlayerListRsp::mutable_recent_mp_player_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Mutable(index);
}
inline ::proto::FriendBrief* GetRecentMpPlayerListRsp::add_recent_mp_player_brief_list() {
  // @@protoc_insertion_point(field_add:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetRecentMpPlayerListRsp::mutable_recent_mp_player_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return &recent_mp_player_brief_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetRecentMpPlayerListRsp::recent_mp_player_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_;
}

// -------------------------------------------------------------------

// SocialDataNotify

// bool is_have_first_share = 11;
inline void SocialDataNotify::clear_is_have_first_share() {
  is_have_first_share_ = false;
}
inline bool SocialDataNotify::is_have_first_share() const {
  // @@protoc_insertion_point(field_get:proto.SocialDataNotify.is_have_first_share)
  return is_have_first_share_;
}
inline void SocialDataNotify::set_is_have_first_share(bool value) {
  
  is_have_first_share_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDataNotify.is_have_first_share)
}

// -------------------------------------------------------------------

// TakeFirstShareRewardReq

// -------------------------------------------------------------------

// TakeFirstShareRewardRsp

// int32 retcode = 15;
inline void TakeFirstShareRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakeFirstShareRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeFirstShareRewardRsp.retcode)
  return retcode_;
}
inline void TakeFirstShareRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeFirstShareRewardRsp.retcode)
}

// -------------------------------------------------------------------

// UpdatePS4BlockListReq

// repeated string psn_id_list = 10;
inline int UpdatePS4BlockListReq::psn_id_list_size() const {
  return psn_id_list_.size();
}
inline void UpdatePS4BlockListReq::clear_psn_id_list() {
  psn_id_list_.Clear();
}
inline const ::std::string& UpdatePS4BlockListReq::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_.Get(index);
}
inline ::std::string* UpdatePS4BlockListReq::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_.Mutable(index);
}
inline void UpdatePS4BlockListReq::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4BlockListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpdatePS4BlockListReq::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4BlockListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpdatePS4BlockListReq::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4BlockListReq.psn_id_list)
}
inline void UpdatePS4BlockListReq::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4BlockListReq.psn_id_list)
}
inline ::std::string* UpdatePS4BlockListReq::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_.Add();
}
inline void UpdatePS4BlockListReq::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4BlockListReq.psn_id_list)
}
#if LANG_CXX11
inline void UpdatePS4BlockListReq::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4BlockListReq.psn_id_list)
}
#endif
inline void UpdatePS4BlockListReq::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4BlockListReq.psn_id_list)
}
inline void UpdatePS4BlockListReq::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4BlockListReq.psn_id_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4BlockListReq::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4BlockListReq.psn_id_list)
  return psn_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4BlockListReq::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4BlockListReq.psn_id_list)
  return &psn_id_list_;
}

// -------------------------------------------------------------------

// UpdatePS4BlockListRsp

// int32 retcode = 7;
inline void UpdatePS4BlockListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UpdatePS4BlockListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4BlockListRsp.retcode)
  return retcode_;
}
inline void UpdatePS4BlockListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePS4BlockListRsp.retcode)
}

// -------------------------------------------------------------------

// GetPlayerBlacklistReq

// -------------------------------------------------------------------

// GetPlayerBlacklistRsp

// int32 retcode = 2;
inline void GetPlayerBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerBlacklistRsp.retcode)
  return retcode_;
}
inline void GetPlayerBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerBlacklistRsp.retcode)
}

// repeated .proto.FriendBrief blacklist = 3;
inline int GetPlayerBlacklistRsp::blacklist_size() const {
  return blacklist_.size();
}
inline void GetPlayerBlacklistRsp::clear_blacklist() {
  blacklist_.Clear();
}
inline const ::proto::FriendBrief& GetPlayerBlacklistRsp::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_.Get(index);
}
inline ::proto::FriendBrief* GetPlayerBlacklistRsp::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_.Mutable(index);
}
inline ::proto::FriendBrief* GetPlayerBlacklistRsp::add_blacklist() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerBlacklistRsp::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerBlacklistRsp.blacklist)
  return &blacklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerBlacklistRsp::blacklist() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerBlacklistRsp.blacklist)
  return blacklist_;
}

// -------------------------------------------------------------------

// PlayerReportReq

// .proto.ReportReasonType reason = 12;
inline void PlayerReportReq::clear_reason() {
  reason_ = 0;
}
inline ::proto::ReportReasonType PlayerReportReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.reason)
  return static_cast< ::proto::ReportReasonType >(reason_);
}
inline void PlayerReportReq::set_reason(::proto::ReportReasonType value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.reason)
}

// string content = 8;
inline void PlayerReportReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerReportReq::content() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.content)
  return content_.GetNoArena();
}
inline void PlayerReportReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.content)
}
#if LANG_CXX11
inline void PlayerReportReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerReportReq.content)
}
#endif
inline void PlayerReportReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerReportReq.content)
}
inline void PlayerReportReq::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerReportReq.content)
}
inline ::std::string* PlayerReportReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerReportReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerReportReq::release_content() {
  // @@protoc_insertion_point(field_release:proto.PlayerReportReq.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerReportReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerReportReq.content)
}

// uint32 target_home_module_id = 5;
inline void PlayerReportReq::clear_target_home_module_id() {
  target_home_module_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerReportReq::target_home_module_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.target_home_module_id)
  return target_home_module_id_;
}
inline void PlayerReportReq::set_target_home_module_id(::google::protobuf::uint32 value) {
  
  target_home_module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.target_home_module_id)
}

// string target_home_module_name = 6;
inline void PlayerReportReq::clear_target_home_module_name() {
  target_home_module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerReportReq::target_home_module_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.target_home_module_name)
  return target_home_module_name_.GetNoArena();
}
inline void PlayerReportReq::set_target_home_module_name(const ::std::string& value) {
  
  target_home_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.target_home_module_name)
}
#if LANG_CXX11
inline void PlayerReportReq::set_target_home_module_name(::std::string&& value) {
  
  target_home_module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerReportReq.target_home_module_name)
}
#endif
inline void PlayerReportReq::set_target_home_module_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_home_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerReportReq.target_home_module_name)
}
inline void PlayerReportReq::set_target_home_module_name(const char* value, size_t size) {
  
  target_home_module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerReportReq.target_home_module_name)
}
inline ::std::string* PlayerReportReq::mutable_target_home_module_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerReportReq.target_home_module_name)
  return target_home_module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerReportReq::release_target_home_module_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerReportReq.target_home_module_name)
  
  return target_home_module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerReportReq::set_allocated_target_home_module_name(::std::string* target_home_module_name) {
  if (target_home_module_name != NULL) {
    
  } else {
    
  }
  target_home_module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_home_module_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerReportReq.target_home_module_name)
}

// uint32 target_uid = 14;
inline void PlayerReportReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerReportReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportReq.target_uid)
  return target_uid_;
}
inline void PlayerReportReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportReq.target_uid)
}

// -------------------------------------------------------------------

// PlayerReportRsp

// uint32 cd_time = 11;
inline void PlayerReportRsp::clear_cd_time() {
  cd_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerReportRsp::cd_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportRsp.cd_time)
  return cd_time_;
}
inline void PlayerReportRsp::set_cd_time(::google::protobuf::uint32 value) {
  
  cd_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportRsp.cd_time)
}

// uint32 target_uid = 6;
inline void PlayerReportRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerReportRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportRsp.target_uid)
  return target_uid_;
}
inline void PlayerReportRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportRsp.target_uid)
}

// int32 retcode = 12;
inline void PlayerReportRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerReportRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerReportRsp.retcode)
  return retcode_;
}
inline void PlayerReportRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerReportRsp.retcode)
}

// -------------------------------------------------------------------

// SetFriendRemarkNameReq

// uint32 uid = 10;
inline void SetFriendRemarkNameReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SetFriendRemarkNameReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameReq.uid)
  return uid_;
}
inline void SetFriendRemarkNameReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameReq.uid)
}

// string remark_name = 8;
inline void SetFriendRemarkNameReq::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetFriendRemarkNameReq::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameReq.remark_name)
  return remark_name_.GetNoArena();
}
inline void SetFriendRemarkNameReq::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameReq.remark_name)
}
#if LANG_CXX11
inline void SetFriendRemarkNameReq::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetFriendRemarkNameReq.remark_name)
}
#endif
inline void SetFriendRemarkNameReq::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetFriendRemarkNameReq.remark_name)
}
inline void SetFriendRemarkNameReq::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetFriendRemarkNameReq.remark_name)
}
inline ::std::string* SetFriendRemarkNameReq::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetFriendRemarkNameReq.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFriendRemarkNameReq::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.SetFriendRemarkNameReq.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFriendRemarkNameReq::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetFriendRemarkNameReq.remark_name)
}

// -------------------------------------------------------------------

// SetFriendRemarkNameRsp

// string remark_name = 13;
inline void SetFriendRemarkNameRsp::clear_remark_name() {
  remark_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetFriendRemarkNameRsp::remark_name() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.remark_name)
  return remark_name_.GetNoArena();
}
inline void SetFriendRemarkNameRsp::set_remark_name(const ::std::string& value) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.remark_name)
}
#if LANG_CXX11
inline void SetFriendRemarkNameRsp::set_remark_name(::std::string&& value) {
  
  remark_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetFriendRemarkNameRsp.remark_name)
}
#endif
inline void SetFriendRemarkNameRsp::set_remark_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetFriendRemarkNameRsp.remark_name)
}
inline void SetFriendRemarkNameRsp::set_remark_name(const char* value, size_t size) {
  
  remark_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetFriendRemarkNameRsp.remark_name)
}
inline ::std::string* SetFriendRemarkNameRsp::mutable_remark_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetFriendRemarkNameRsp.remark_name)
  return remark_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFriendRemarkNameRsp::release_remark_name() {
  // @@protoc_insertion_point(field_release:proto.SetFriendRemarkNameRsp.remark_name)
  
  return remark_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFriendRemarkNameRsp::set_allocated_remark_name(::std::string* remark_name) {
  if (remark_name != NULL) {
    
  } else {
    
  }
  remark_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetFriendRemarkNameRsp.remark_name)
}

// bool is_clear_remark = 3;
inline void SetFriendRemarkNameRsp::clear_is_clear_remark() {
  is_clear_remark_ = false;
}
inline bool SetFriendRemarkNameRsp::is_clear_remark() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.is_clear_remark)
  return is_clear_remark_;
}
inline void SetFriendRemarkNameRsp::set_is_clear_remark(bool value) {
  
  is_clear_remark_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.is_clear_remark)
}

// uint32 uid = 10;
inline void SetFriendRemarkNameRsp::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SetFriendRemarkNameRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.uid)
  return uid_;
}
inline void SetFriendRemarkNameRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.uid)
}

// int32 retcode = 1;
inline void SetFriendRemarkNameRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetFriendRemarkNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetFriendRemarkNameRsp.retcode)
  return retcode_;
}
inline void SetFriendRemarkNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFriendRemarkNameRsp.retcode)
}

// -------------------------------------------------------------------

// UpdatePlayerShowAvatarListReq

// bool is_show_avatar = 15;
inline void UpdatePlayerShowAvatarListReq::clear_is_show_avatar() {
  is_show_avatar_ = false;
}
inline bool UpdatePlayerShowAvatarListReq::is_show_avatar() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListReq.is_show_avatar)
  return is_show_avatar_;
}
inline void UpdatePlayerShowAvatarListReq::set_is_show_avatar(bool value) {
  
  is_show_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListReq.is_show_avatar)
}

// repeated uint32 show_avatar_id_list = 13;
inline int UpdatePlayerShowAvatarListReq::show_avatar_id_list_size() const {
  return show_avatar_id_list_.size();
}
inline void UpdatePlayerShowAvatarListReq::clear_show_avatar_id_list() {
  show_avatar_id_list_.Clear();
}
inline ::google::protobuf::uint32 UpdatePlayerShowAvatarListReq::show_avatar_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
  return show_avatar_id_list_.Get(index);
}
inline void UpdatePlayerShowAvatarListReq::set_show_avatar_id_list(int index, ::google::protobuf::uint32 value) {
  show_avatar_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
}
inline void UpdatePlayerShowAvatarListReq::add_show_avatar_id_list(::google::protobuf::uint32 value) {
  show_avatar_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowAvatarListReq::show_avatar_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
  return show_avatar_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowAvatarListReq::mutable_show_avatar_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowAvatarListReq.show_avatar_id_list)
  return &show_avatar_id_list_;
}

// -------------------------------------------------------------------

// UpdatePlayerShowAvatarListRsp

// repeated uint32 show_avatar_id_list = 1;
inline int UpdatePlayerShowAvatarListRsp::show_avatar_id_list_size() const {
  return show_avatar_id_list_.size();
}
inline void UpdatePlayerShowAvatarListRsp::clear_show_avatar_id_list() {
  show_avatar_id_list_.Clear();
}
inline ::google::protobuf::uint32 UpdatePlayerShowAvatarListRsp::show_avatar_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
  return show_avatar_id_list_.Get(index);
}
inline void UpdatePlayerShowAvatarListRsp::set_show_avatar_id_list(int index, ::google::protobuf::uint32 value) {
  show_avatar_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
}
inline void UpdatePlayerShowAvatarListRsp::add_show_avatar_id_list(::google::protobuf::uint32 value) {
  show_avatar_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowAvatarListRsp::show_avatar_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
  return show_avatar_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowAvatarListRsp::mutable_show_avatar_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowAvatarListRsp.show_avatar_id_list)
  return &show_avatar_id_list_;
}

// bool is_show_avatar = 3;
inline void UpdatePlayerShowAvatarListRsp::clear_is_show_avatar() {
  is_show_avatar_ = false;
}
inline bool UpdatePlayerShowAvatarListRsp::is_show_avatar() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListRsp.is_show_avatar)
  return is_show_avatar_;
}
inline void UpdatePlayerShowAvatarListRsp::set_is_show_avatar(bool value) {
  
  is_show_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListRsp.is_show_avatar)
}

// int32 retcode = 10;
inline void UpdatePlayerShowAvatarListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UpdatePlayerShowAvatarListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowAvatarListRsp.retcode)
  return retcode_;
}
inline void UpdatePlayerShowAvatarListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowAvatarListRsp.retcode)
}

// -------------------------------------------------------------------

// GetFriendShowAvatarInfoReq

// uint32 uid = 15;
inline void GetFriendShowAvatarInfoReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetFriendShowAvatarInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoReq.uid)
  return uid_;
}
inline void GetFriendShowAvatarInfoReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowAvatarInfoReq.uid)
}

// -------------------------------------------------------------------

// GetFriendShowAvatarInfoRsp

// uint32 uid = 6;
inline void GetFriendShowAvatarInfoRsp::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetFriendShowAvatarInfoRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoRsp.uid)
  return uid_;
}
inline void GetFriendShowAvatarInfoRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowAvatarInfoRsp.uid)
}

// int32 retcode = 3;
inline void GetFriendShowAvatarInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetFriendShowAvatarInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoRsp.retcode)
  return retcode_;
}
inline void GetFriendShowAvatarInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowAvatarInfoRsp.retcode)
}

// repeated .proto.ShowAvatarInfo show_avatar_info_list = 9;
inline int GetFriendShowAvatarInfoRsp::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
inline void GetFriendShowAvatarInfoRsp::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
inline const ::proto::ShowAvatarInfo& GetFriendShowAvatarInfoRsp::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
inline ::proto::ShowAvatarInfo* GetFriendShowAvatarInfoRsp::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
inline ::proto::ShowAvatarInfo* GetFriendShowAvatarInfoRsp::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >*
GetFriendShowAvatarInfoRsp::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return &show_avatar_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >&
GetFriendShowAvatarInfoRsp::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_;
}

// -------------------------------------------------------------------

// UpdatePlayerShowNameCardListReq

// repeated uint32 show_name_card_id_list = 15;
inline int UpdatePlayerShowNameCardListReq::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
inline void UpdatePlayerShowNameCardListReq::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
inline ::google::protobuf::uint32 UpdatePlayerShowNameCardListReq::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
inline void UpdatePlayerShowNameCardListReq::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
}
inline void UpdatePlayerShowNameCardListReq::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowNameCardListReq::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
  return show_name_card_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowNameCardListReq::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowNameCardListReq.show_name_card_id_list)
  return &show_name_card_id_list_;
}

// -------------------------------------------------------------------

// UpdatePlayerShowNameCardListRsp

// int32 retcode = 13;
inline void UpdatePlayerShowNameCardListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UpdatePlayerShowNameCardListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowNameCardListRsp.retcode)
  return retcode_;
}
inline void UpdatePlayerShowNameCardListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowNameCardListRsp.retcode)
}

// repeated uint32 show_name_card_id_list = 12;
inline int UpdatePlayerShowNameCardListRsp::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
inline void UpdatePlayerShowNameCardListRsp::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
inline ::google::protobuf::uint32 UpdatePlayerShowNameCardListRsp::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
inline void UpdatePlayerShowNameCardListRsp::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
}
inline void UpdatePlayerShowNameCardListRsp::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdatePlayerShowNameCardListRsp::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
  return show_name_card_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdatePlayerShowNameCardListRsp::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePlayerShowNameCardListRsp.show_name_card_id_list)
  return &show_name_card_id_list_;
}

// -------------------------------------------------------------------

// GetFriendShowNameCardInfoReq

// uint32 uid = 3;
inline void GetFriendShowNameCardInfoReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetFriendShowNameCardInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoReq.uid)
  return uid_;
}
inline void GetFriendShowNameCardInfoReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoReq.uid)
}

// -------------------------------------------------------------------

// GetFriendShowNameCardInfoRsp

// int32 retcode = 15;
inline void GetFriendShowNameCardInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetFriendShowNameCardInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoRsp.retcode)
  return retcode_;
}
inline void GetFriendShowNameCardInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoRsp.retcode)
}

// uint32 uid = 7;
inline void GetFriendShowNameCardInfoRsp::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetFriendShowNameCardInfoRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoRsp.uid)
  return uid_;
}
inline void GetFriendShowNameCardInfoRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoRsp.uid)
}

// repeated uint32 show_name_card_id_list = 10;
inline int GetFriendShowNameCardInfoRsp::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
inline void GetFriendShowNameCardInfoRsp::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetFriendShowNameCardInfoRsp::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
inline void GetFriendShowNameCardInfoRsp::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
}
inline void GetFriendShowNameCardInfoRsp::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetFriendShowNameCardInfoRsp::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return show_name_card_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetFriendShowNameCardInfoRsp::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return &show_name_card_id_list_;
}

// -------------------------------------------------------------------

// ForceAddPlayerFriendReq

// uint32 target_uid = 15;
inline void ForceAddPlayerFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 ForceAddPlayerFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendReq.target_uid)
  return target_uid_;
}
inline void ForceAddPlayerFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAddPlayerFriendReq.target_uid)
}

// -------------------------------------------------------------------

// ForceAddPlayerFriendRsp

// int32 retcode = 5;
inline void ForceAddPlayerFriendRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ForceAddPlayerFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendRsp.retcode)
  return retcode_;
}
inline void ForceAddPlayerFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAddPlayerFriendRsp.retcode)
}

// .proto.FriendBrief target_friend_brief = 2;
inline bool ForceAddPlayerFriendRsp::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
inline void ForceAddPlayerFriendRsp::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
inline const ::proto::FriendBrief& ForceAddPlayerFriendRsp::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendRsp.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
inline ::proto::FriendBrief* ForceAddPlayerFriendRsp::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.ForceAddPlayerFriendRsp.target_friend_brief)
  return target_friend_brief_;
}
inline ::proto::FriendBrief* ForceAddPlayerFriendRsp::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.ForceAddPlayerFriendRsp.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
inline void ForceAddPlayerFriendRsp::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ForceAddPlayerFriendRsp.target_friend_brief)
}

// uint32 target_uid = 9;
inline void ForceAddPlayerFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 ForceAddPlayerFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ForceAddPlayerFriendRsp.target_uid)
  return target_uid_;
}
inline void ForceAddPlayerFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAddPlayerFriendRsp.target_uid)
}

// -------------------------------------------------------------------

// ProfilePictureChangeNotify

// .proto.ProfilePicture profile_picture = 12;
inline bool ProfilePictureChangeNotify::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
inline void ProfilePictureChangeNotify::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
inline const ::proto::ProfilePicture& ProfilePictureChangeNotify::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.ProfilePictureChangeNotify.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
inline ::proto::ProfilePicture* ProfilePictureChangeNotify::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.ProfilePictureChangeNotify.profile_picture)
  return profile_picture_;
}
inline ::proto::ProfilePicture* ProfilePictureChangeNotify::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.ProfilePictureChangeNotify.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
inline void ProfilePictureChangeNotify::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ProfilePictureChangeNotify.profile_picture)
}

// -------------------------------------------------------------------

// PSNFriendListNotify

// repeated .proto.FriendBrief psn_friend_list = 8;
inline int PSNFriendListNotify::psn_friend_list_size() const {
  return psn_friend_list_.size();
}
inline void PSNFriendListNotify::clear_psn_friend_list() {
  psn_friend_list_.Clear();
}
inline const ::proto::FriendBrief& PSNFriendListNotify::psn_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_.Get(index);
}
inline ::proto::FriendBrief* PSNFriendListNotify::mutable_psn_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_.Mutable(index);
}
inline ::proto::FriendBrief* PSNFriendListNotify::add_psn_friend_list() {
  // @@protoc_insertion_point(field_add:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
PSNFriendListNotify::mutable_psn_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PSNFriendListNotify.psn_friend_list)
  return &psn_friend_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
PSNFriendListNotify::psn_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.PSNFriendListNotify.psn_friend_list)
  return psn_friend_list_;
}

// -------------------------------------------------------------------

// PSNBlackListNotify

// repeated .proto.FriendBrief psn_blacklist = 11;
inline int PSNBlackListNotify::psn_blacklist_size() const {
  return psn_blacklist_.size();
}
inline void PSNBlackListNotify::clear_psn_blacklist() {
  psn_blacklist_.Clear();
}
inline const ::proto::FriendBrief& PSNBlackListNotify::psn_blacklist(int index) const {
  // @@protoc_insertion_point(field_get:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_.Get(index);
}
inline ::proto::FriendBrief* PSNBlackListNotify::mutable_psn_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_.Mutable(index);
}
inline ::proto::FriendBrief* PSNBlackListNotify::add_psn_blacklist() {
  // @@protoc_insertion_point(field_add:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
PSNBlackListNotify::mutable_psn_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:proto.PSNBlackListNotify.psn_blacklist)
  return &psn_blacklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
PSNBlackListNotify::psn_blacklist() const {
  // @@protoc_insertion_point(field_list:proto.PSNBlackListNotify.psn_blacklist)
  return psn_blacklist_;
}

// -------------------------------------------------------------------

// GetPlayerAskFriendListReq

// -------------------------------------------------------------------

// GetPlayerAskFriendListRsp

// int32 retcode = 13;
inline void GetPlayerAskFriendListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerAskFriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerAskFriendListRsp.retcode)
  return retcode_;
}
inline void GetPlayerAskFriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerAskFriendListRsp.retcode)
}

// repeated .proto.FriendBrief ask_friend_list = 15;
inline int GetPlayerAskFriendListRsp::ask_friend_list_size() const {
  return ask_friend_list_.size();
}
inline void GetPlayerAskFriendListRsp::clear_ask_friend_list() {
  ask_friend_list_.Clear();
}
inline const ::proto::FriendBrief& GetPlayerAskFriendListRsp::ask_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_.Get(index);
}
inline ::proto::FriendBrief* GetPlayerAskFriendListRsp::mutable_ask_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_.Mutable(index);
}
inline ::proto::FriendBrief* GetPlayerAskFriendListRsp::add_ask_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerAskFriendListRsp::mutable_ask_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return &ask_friend_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerAskFriendListRsp::ask_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerAskFriendListRsp.ask_friend_list)
  return ask_friend_list_;
}

// -------------------------------------------------------------------

// GetChatEmojiCollectionReq

// -------------------------------------------------------------------

// GetChatEmojiCollectionRsp

// int32 retcode = 15;
inline void GetChatEmojiCollectionRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetChatEmojiCollectionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetChatEmojiCollectionRsp.retcode)
  return retcode_;
}
inline void GetChatEmojiCollectionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetChatEmojiCollectionRsp.retcode)
}

// .proto.ChatEmojiCollectionData chat_emoji_collection_data = 8;
inline bool GetChatEmojiCollectionRsp::has_chat_emoji_collection_data() const {
  return this != internal_default_instance() && chat_emoji_collection_data_ != NULL;
}
inline void GetChatEmojiCollectionRsp::clear_chat_emoji_collection_data() {
  if (GetArenaNoVirtual() == NULL && chat_emoji_collection_data_ != NULL) delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
}
inline const ::proto::ChatEmojiCollectionData& GetChatEmojiCollectionRsp::chat_emoji_collection_data() const {
  const ::proto::ChatEmojiCollectionData* p = chat_emoji_collection_data_;
  // @@protoc_insertion_point(field_get:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatEmojiCollectionData*>(
      &::proto::_ChatEmojiCollectionData_default_instance_);
}
inline ::proto::ChatEmojiCollectionData* GetChatEmojiCollectionRsp::mutable_chat_emoji_collection_data() {
  
  if (chat_emoji_collection_data_ == NULL) {
    chat_emoji_collection_data_ = new ::proto::ChatEmojiCollectionData;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
  return chat_emoji_collection_data_;
}
inline ::proto::ChatEmojiCollectionData* GetChatEmojiCollectionRsp::release_chat_emoji_collection_data() {
  // @@protoc_insertion_point(field_release:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
  
  ::proto::ChatEmojiCollectionData* temp = chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
  return temp;
}
inline void GetChatEmojiCollectionRsp::set_allocated_chat_emoji_collection_data(::proto::ChatEmojiCollectionData* chat_emoji_collection_data) {
  delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = chat_emoji_collection_data;
  if (chat_emoji_collection_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetChatEmojiCollectionRsp.chat_emoji_collection_data)
}

// -------------------------------------------------------------------

// SetChatEmojiCollectionReq

// .proto.ChatEmojiCollectionData chat_emoji_collection_data = 12;
inline bool SetChatEmojiCollectionReq::has_chat_emoji_collection_data() const {
  return this != internal_default_instance() && chat_emoji_collection_data_ != NULL;
}
inline void SetChatEmojiCollectionReq::clear_chat_emoji_collection_data() {
  if (GetArenaNoVirtual() == NULL && chat_emoji_collection_data_ != NULL) delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
}
inline const ::proto::ChatEmojiCollectionData& SetChatEmojiCollectionReq::chat_emoji_collection_data() const {
  const ::proto::ChatEmojiCollectionData* p = chat_emoji_collection_data_;
  // @@protoc_insertion_point(field_get:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatEmojiCollectionData*>(
      &::proto::_ChatEmojiCollectionData_default_instance_);
}
inline ::proto::ChatEmojiCollectionData* SetChatEmojiCollectionReq::mutable_chat_emoji_collection_data() {
  
  if (chat_emoji_collection_data_ == NULL) {
    chat_emoji_collection_data_ = new ::proto::ChatEmojiCollectionData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
  return chat_emoji_collection_data_;
}
inline ::proto::ChatEmojiCollectionData* SetChatEmojiCollectionReq::release_chat_emoji_collection_data() {
  // @@protoc_insertion_point(field_release:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
  
  ::proto::ChatEmojiCollectionData* temp = chat_emoji_collection_data_;
  chat_emoji_collection_data_ = NULL;
  return temp;
}
inline void SetChatEmojiCollectionReq::set_allocated_chat_emoji_collection_data(::proto::ChatEmojiCollectionData* chat_emoji_collection_data) {
  delete chat_emoji_collection_data_;
  chat_emoji_collection_data_ = chat_emoji_collection_data;
  if (chat_emoji_collection_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetChatEmojiCollectionReq.chat_emoji_collection_data)
}

// -------------------------------------------------------------------

// SetChatEmojiCollectionRsp

// int32 retcode = 12;
inline void SetChatEmojiCollectionRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetChatEmojiCollectionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetChatEmojiCollectionRsp.retcode)
  return retcode_;
}
inline void SetChatEmojiCollectionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetChatEmojiCollectionRsp.retcode)
}

// -------------------------------------------------------------------

// UpdatePS4FriendListReq

// repeated string psn_id_list = 4;
inline int UpdatePS4FriendListReq::psn_id_list_size() const {
  return psn_id_list_.size();
}
inline void UpdatePS4FriendListReq::clear_psn_id_list() {
  psn_id_list_.Clear();
}
inline const ::std::string& UpdatePS4FriendListReq::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_.Get(index);
}
inline ::std::string* UpdatePS4FriendListReq::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_.Mutable(index);
}
inline void UpdatePS4FriendListReq::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpdatePS4FriendListReq::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpdatePS4FriendListReq::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4FriendListReq.psn_id_list)
}
inline void UpdatePS4FriendListReq::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4FriendListReq.psn_id_list)
}
inline ::std::string* UpdatePS4FriendListReq::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_.Add();
}
inline void UpdatePS4FriendListReq::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListReq.psn_id_list)
}
#if LANG_CXX11
inline void UpdatePS4FriendListReq::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListReq.psn_id_list)
}
#endif
inline void UpdatePS4FriendListReq::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4FriendListReq.psn_id_list)
}
inline void UpdatePS4FriendListReq::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4FriendListReq.psn_id_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4FriendListReq::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4FriendListReq.psn_id_list)
  return psn_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4FriendListReq::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4FriendListReq.psn_id_list)
  return &psn_id_list_;
}

// -------------------------------------------------------------------

// UpdatePS4FriendListRsp

// int32 retcode = 5;
inline void UpdatePS4FriendListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UpdatePS4FriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListRsp.retcode)
  return retcode_;
}
inline void UpdatePS4FriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListRsp.retcode)
}

// repeated string psn_id_list = 2;
inline int UpdatePS4FriendListRsp::psn_id_list_size() const {
  return psn_id_list_.size();
}
inline void UpdatePS4FriendListRsp::clear_psn_id_list() {
  psn_id_list_.Clear();
}
inline const ::std::string& UpdatePS4FriendListRsp::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_.Get(index);
}
inline ::std::string* UpdatePS4FriendListRsp::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_.Mutable(index);
}
inline void UpdatePS4FriendListRsp::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListRsp.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpdatePS4FriendListRsp::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.UpdatePS4FriendListRsp.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpdatePS4FriendListRsp::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.UpdatePS4FriendListRsp.psn_id_list)
}
inline void UpdatePS4FriendListRsp::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.UpdatePS4FriendListRsp.psn_id_list)
}
inline ::std::string* UpdatePS4FriendListRsp::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_.Add();
}
inline void UpdatePS4FriendListRsp::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListRsp.psn_id_list)
}
#if LANG_CXX11
inline void UpdatePS4FriendListRsp::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.UpdatePS4FriendListRsp.psn_id_list)
}
#endif
inline void UpdatePS4FriendListRsp::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.UpdatePS4FriendListRsp.psn_id_list)
}
inline void UpdatePS4FriendListRsp::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.UpdatePS4FriendListRsp.psn_id_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdatePS4FriendListRsp::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdatePS4FriendListRsp.psn_id_list)
  return psn_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdatePS4FriendListRsp::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdatePS4FriendListRsp.psn_id_list)
  return &psn_id_list_;
}

// -------------------------------------------------------------------

// FriendInfoChangeNotify

// uint32 uid = 1;
inline void FriendInfoChangeNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfoChangeNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.FriendInfoChangeNotify.uid)
  return uid_;
}
inline void FriendInfoChangeNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendInfoChangeNotify.uid)
}

// string online_id = 9;
inline void FriendInfoChangeNotify::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfoChangeNotify::online_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendInfoChangeNotify.online_id)
  return online_id_.GetNoArena();
}
inline void FriendInfoChangeNotify::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendInfoChangeNotify.online_id)
}
#if LANG_CXX11
inline void FriendInfoChangeNotify::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendInfoChangeNotify.online_id)
}
#endif
inline void FriendInfoChangeNotify::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendInfoChangeNotify.online_id)
}
inline void FriendInfoChangeNotify::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendInfoChangeNotify.online_id)
}
inline ::std::string* FriendInfoChangeNotify::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendInfoChangeNotify.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfoChangeNotify::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.FriendInfoChangeNotify.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfoChangeNotify::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendInfoChangeNotify.online_id)
}

// -------------------------------------------------------------------

// PlayerSignatureAuditDataNotify

// .proto.ContentAuditInfo info = 14;
inline bool PlayerSignatureAuditDataNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void PlayerSignatureAuditDataNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::proto::ContentAuditInfo& PlayerSignatureAuditDataNotify::info() const {
  const ::proto::ContentAuditInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.PlayerSignatureAuditDataNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ContentAuditInfo*>(
      &::proto::_ContentAuditInfo_default_instance_);
}
inline ::proto::ContentAuditInfo* PlayerSignatureAuditDataNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::ContentAuditInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerSignatureAuditDataNotify.info)
  return info_;
}
inline ::proto::ContentAuditInfo* PlayerSignatureAuditDataNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerSignatureAuditDataNotify.info)
  
  ::proto::ContentAuditInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void PlayerSignatureAuditDataNotify::set_allocated_info(::proto::ContentAuditInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerSignatureAuditDataNotify.info)
}

// -------------------------------------------------------------------

// PlayerSignatureNotify

// string signature = 12;
inline void PlayerSignatureNotify::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerSignatureNotify::signature() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSignatureNotify.signature)
  return signature_.GetNoArena();
}
inline void PlayerSignatureNotify::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerSignatureNotify.signature)
}
#if LANG_CXX11
inline void PlayerSignatureNotify::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerSignatureNotify.signature)
}
#endif
inline void PlayerSignatureNotify::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerSignatureNotify.signature)
}
inline void PlayerSignatureNotify::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerSignatureNotify.signature)
}
inline ::std::string* PlayerSignatureNotify::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerSignatureNotify.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerSignatureNotify::release_signature() {
  // @@protoc_insertion_point(field_release:proto.PlayerSignatureNotify.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerSignatureNotify::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerSignatureNotify.signature)
}

// -------------------------------------------------------------------

// SignatureAuditConfigNotify

// bool is_open = 9;
inline void SignatureAuditConfigNotify::clear_is_open() {
  is_open_ = false;
}
inline bool SignatureAuditConfigNotify::is_open() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditConfigNotify.is_open)
  return is_open_;
}
inline void SignatureAuditConfigNotify::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.SignatureAuditConfigNotify.is_open)
}

// uint32 submit_limit = 10;
inline void SignatureAuditConfigNotify::clear_submit_limit() {
  submit_limit_ = 0u;
}
inline ::google::protobuf::uint32 SignatureAuditConfigNotify::submit_limit() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditConfigNotify.submit_limit)
  return submit_limit_;
}
inline void SignatureAuditConfigNotify::set_submit_limit(::google::protobuf::uint32 value) {
  
  submit_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.SignatureAuditConfigNotify.submit_limit)
}

// -------------------------------------------------------------------

// ReadSignatureAuditReq

// -------------------------------------------------------------------

// ReadSignatureAuditRsp

// int32 retcode = 9;
inline void ReadSignatureAuditRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ReadSignatureAuditRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ReadSignatureAuditRsp.retcode)
  return retcode_;
}
inline void ReadSignatureAuditRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ReadSignatureAuditRsp.retcode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::FriendOnlineState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FriendOnlineState>() {
  return ::proto::FriendOnlineState_descriptor();
}
template <> struct is_proto_enum< ::proto::DealAddFriendResultType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DealAddFriendResultType>() {
  return ::proto::DealAddFriendResultType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fsocial_2eproto__INCLUDED
