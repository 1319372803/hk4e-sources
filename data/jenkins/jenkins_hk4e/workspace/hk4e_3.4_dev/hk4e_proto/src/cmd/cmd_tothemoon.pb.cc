// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_tothemoon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_tothemoon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class ToTheMoonQueryPathReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonQueryPathReq>
     _instance;
} _ToTheMoonQueryPathReq_default_instance_;
class ToTheMoonQueryPathRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonQueryPathRsp>
     _instance;
} _ToTheMoonQueryPathRsp_default_instance_;
class ToTheMoonPingNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonPingNotify>
     _instance;
} _ToTheMoonPingNotify_default_instance_;
class ToTheMoonEnterSceneReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonEnterSceneReq>
     _instance;
} _ToTheMoonEnterSceneReq_default_instance_;
class ToTheMoonEnterSceneRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonEnterSceneRsp>
     _instance;
} _ToTheMoonEnterSceneRsp_default_instance_;
class ToTheMoonObstacleInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonObstacleInfo>
     _instance;
} _ToTheMoonObstacleInfo_default_instance_;
class ToTheMoonAddObstacleReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonAddObstacleReq>
     _instance;
} _ToTheMoonAddObstacleReq_default_instance_;
class DynamicSVONodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DynamicSVONode>
     _instance;
} _DynamicSVONode_default_instance_;
class DynamicLayerNodesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DynamicLayerNodes>
     _instance;
} _DynamicLayerNodes_default_instance_;
class DynamicNodesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DynamicNodes>
     _instance;
} _DynamicNodes_default_instance_;
class ToTheMoonAddObstacleRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonAddObstacleRsp>
     _instance;
} _ToTheMoonAddObstacleRsp_default_instance_;
class ToTheMoonRemoveObstacleReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonRemoveObstacleReq>
     _instance;
} _ToTheMoonRemoveObstacleReq_default_instance_;
class ToTheMoonRemoveObstacleRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonRemoveObstacleRsp>
     _instance;
} _ToTheMoonRemoveObstacleRsp_default_instance_;
class ToTheMoonObstaclesModifyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ToTheMoonObstaclesModifyNotify>
     _instance;
} _ToTheMoonObstaclesModifyNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5ftothemoon_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, destination_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, fuzzy_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, query_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, astar_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, filter_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, refined_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, use_full_neighbor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathReq, source_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathRsp, query_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathRsp, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathRsp, corners_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathRsp, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonQueryPathRsp, query_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonPingNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonEnterSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonEnterSceneReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonEnterSceneReq, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonEnterSceneRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonEnterSceneRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstacleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstacleInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstacleInfo, handle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstacleInfo, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstacleInfo, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstacleInfo, half_extents_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleReq, use_edge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleReq, obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleReq, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleReq, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicSVONode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicSVONode, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicSVONode, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicSVONode, refer_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicLayerNodes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicLayerNodes, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicLayerNodes, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicNodes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicNodes, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleRsp, dynamic_nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleRsp, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonAddObstacleRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleReq, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleReq, query_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleRsp, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonRemoveObstacleRsp, dynamic_nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstaclesModifyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstaclesModifyNotify, add_obstacles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstaclesModifyNotify, remove_obstacle_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstaclesModifyNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToTheMoonObstaclesModifyNotify, use_edge_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ToTheMoonQueryPathReq)},
  { 15, -1, sizeof(ToTheMoonQueryPathRsp)},
  { 26, -1, sizeof(ToTheMoonPingNotify)},
  { 31, -1, sizeof(ToTheMoonEnterSceneReq)},
  { 38, -1, sizeof(ToTheMoonEnterSceneRsp)},
  { 44, -1, sizeof(ToTheMoonObstacleInfo)},
  { 54, -1, sizeof(ToTheMoonAddObstacleReq)},
  { 63, -1, sizeof(DynamicSVONode)},
  { 71, -1, sizeof(DynamicLayerNodes)},
  { 78, -1, sizeof(DynamicNodes)},
  { 84, -1, sizeof(ToTheMoonAddObstacleRsp)},
  { 92, -1, sizeof(ToTheMoonRemoveObstacleReq)},
  { 100, -1, sizeof(ToTheMoonRemoveObstacleRsp)},
  { 108, -1, sizeof(ToTheMoonObstaclesModifyNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonQueryPathReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonQueryPathRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonPingNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonEnterSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonEnterSceneRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonObstacleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonAddObstacleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DynamicSVONode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DynamicLayerNodes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DynamicNodes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonAddObstacleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonRemoveObstacleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonRemoveObstacleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ToTheMoonObstaclesModifyNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_tothemoon.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _ToTheMoonQueryPathReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonQueryPathReq_default_instance_);_ToTheMoonQueryPathRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonQueryPathRsp_default_instance_);_ToTheMoonPingNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonPingNotify_default_instance_);_ToTheMoonEnterSceneReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonEnterSceneReq_default_instance_);_ToTheMoonEnterSceneRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonEnterSceneRsp_default_instance_);_ToTheMoonObstacleInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonObstacleInfo_default_instance_);_ToTheMoonAddObstacleReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonAddObstacleReq_default_instance_);_DynamicSVONode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DynamicSVONode_default_instance_);_DynamicLayerNodes_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DynamicLayerNodes_default_instance_);_DynamicNodes_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DynamicNodes_default_instance_);_ToTheMoonAddObstacleRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonAddObstacleRsp_default_instance_);_ToTheMoonRemoveObstacleReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonRemoveObstacleReq_default_instance_);_ToTheMoonRemoveObstacleRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonRemoveObstacleRsp_default_instance_);_ToTheMoonObstaclesModifyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ToTheMoonObstaclesModifyNotify_default_instance_);_ToTheMoonQueryPathReq_default_instance_._instance.get_mutable()->destination_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _ToTheMoonQueryPathReq_default_instance_._instance.get_mutable()->source_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _ToTheMoonObstacleInfo_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::proto::MathQuaternion*>(
      ::proto::MathQuaternion::internal_default_instance());
  _ToTheMoonObstacleInfo_default_instance_._instance.get_mutable()->center_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _ToTheMoonObstacleInfo_default_instance_._instance.get_mutable()->half_extents_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _ToTheMoonAddObstacleReq_default_instance_._instance.get_mutable()->obstacle_ = const_cast< ::proto::ToTheMoonObstacleInfo*>(
      ::proto::ToTheMoonObstacleInfo::internal_default_instance());
  _DynamicSVONode_default_instance_._instance.get_mutable()->refer_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _ToTheMoonAddObstacleRsp_default_instance_._instance.get_mutable()->dynamic_nodes_ = const_cast< ::proto::DynamicNodes*>(
      ::proto::DynamicNodes::internal_default_instance());
  _ToTheMoonRemoveObstacleRsp_default_instance_._instance.get_mutable()->dynamic_nodes_ = const_cast< ::proto::DynamicNodes*>(
      ::proto::DynamicNodes::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027cmd/cmd_tothemoon.proto\022\005proto\032\014define"
      ".proto\"\247\004\n\025ToTheMoonQueryPathReq\022&\n\017dest"
      "ination_pos\030\t \001(\0132\r.proto.Vector\022\023\n\013fuzz"
      "y_range\030\017 \001(\005\022;\n\nquery_type\030\010 \001(\0162\'.prot"
      "o.ToTheMoonQueryPathReq.OptionType\022>\n\014as"
      "tar_method\030\001 \001(\0162(.proto.ToTheMoonQueryP"
      "athReq.AStarMethod\022\020\n\010scene_id\030\006 \001(\r\022\020\n\010"
      "query_id\030\013 \001(\005\022<\n\013filter_type\030\003 \001(\0162\'.pr"
      "oto.ToTheMoonQueryPathReq.FilterType\022\017\n\007"
      "refined\030\r \001(\010\022\031\n\021use_full_neighbor\030\005 \001(\010"
      "\022!\n\nsource_pos\030\n \001(\0132\r.proto.Vector\"0\n\nO"
      "ptionType\022\017\n\013OPTION_NONE\020\000\022\021\n\rOPTION_NOR"
      "MAL\020\001\"F\n\013AStarMethod\022\013\n\007Classic\020\000\022\014\n\010Ten"
      "dency\020\001\022\014\n\010Adaptive\020\002\022\016\n\nInflection\020\003\")\n"
      "\nFilterType\022\007\n\003All\020\000\022\007\n\003Air\020\001\022\t\n\005Water\020\002"
      "\"\203\002\n\025ToTheMoonQueryPathRsp\022A\n\014query_stat"
      "us\030\007 \001(\0162+.proto.ToTheMoonQueryPathRsp.P"
      "athStatusType\022\r\n\005index\030\003 \003(\003\022\036\n\007corners\030"
      "\016 \003(\0132\r.proto.Vector\022\r\n\005level\030\001 \003(\005\022\017\n\007r"
      "etcode\030\010 \001(\005\022\020\n\010query_id\030\t \001(\005\"F\n\016PathSt"
      "atusType\022\017\n\013STATUS_FAIL\020\000\022\017\n\013STATUS_SUCC"
      "\020\001\022\022\n\016STATUS_PARTIAL\020\002\"\025\n\023ToTheMoonPingN"
      "otify\";\n\026ToTheMoonEnterSceneReq\022\017\n\007versi"
      "on\030\016 \001(\r\022\020\n\010scene_id\030\017 \001(\r\")\n\026ToTheMoonE"
      "nterSceneRsp\022\017\n\007retcode\030\007 \001(\005\"\216\002\n\025ToTheM"
      "oonObstacleInfo\0224\n\004type\030\002 \001(\0162&.proto.To"
      "TheMoonObstacleInfo.ShapeType\022\021\n\thandle_"
      "id\030\013 \001(\005\022\'\n\010rotation\030\007 \001(\0132\025.proto.MathQ"
      "uaternion\022\035\n\006center\030\r \001(\0132\r.proto.Vector"
      "\022#\n\014half_extents\030\016 \001(\0132\r.proto.Vector\"\?\n"
      "\tShapeType\022\032\n\026OBSTACLE_SHAPE_CAPSULE\020\000\022\026"
      "\n\022OBSTACLE_SHAPE_BOX\020\001\"\177\n\027ToTheMoonAddOb"
      "stacleReq\022\020\n\010use_edge\030\014 \001(\010\022.\n\010obstacle\030"
      "\r \001(\0132\034.proto.ToTheMoonObstacleInfo\022\020\n\010q"
      "uery_id\030\t \001(\005\022\020\n\010scene_id\030\003 \001(\r\"O\n\016Dynam"
      "icSVONode\022\r\n\005index\030\010 \001(\003\022\014\n\004area\030\005 \001(\005\022 "
      "\n\trefer_pos\030\001 \001(\0132\r.proto.Vector\"H\n\021Dyna"
      "micLayerNodes\022\r\n\005level\030\n \001(\005\022$\n\005nodes\030\006 "
      "\003(\0132\025.proto.DynamicSVONode\"7\n\014DynamicNod"
      "es\022\'\n\005nodes\030\003 \003(\0132\030.proto.DynamicLayerNo"
      "des\"h\n\027ToTheMoonAddObstacleRsp\022*\n\rdynami"
      "c_nodes\030\002 \001(\0132\023.proto.DynamicNodes\022\020\n\010qu"
      "ery_id\030\r \001(\005\022\017\n\007retcode\030\013 \001(\005\"v\n\032ToTheMo"
      "onRemoveObstacleReq\022\016\n\006handle\030\014 \001(\005\022\020\n\010s"
      "cene_id\030\n \001(\r\022\020\n\010query_id\030\013 \001(\005\"$\n\014Obsta"
      "cleType\022\007\n\003Box\020\000\022\013\n\007Capsule\020\001\"k\n\032ToTheMo"
      "onRemoveObstacleRsp\022\020\n\010query_id\030\003 \001(\005\022\017\n"
      "\007retcode\030\016 \001(\005\022*\n\rdynamic_nodes\030\010 \001(\0132\023."
      "proto.DynamicNodes\"\226\001\n\036ToTheMoonObstacle"
      "sModifyNotify\0223\n\radd_obstacles\030\004 \003(\0132\034.p"
      "roto.ToTheMoonObstacleInfo\022\033\n\023remove_obs"
      "tacle_ids\030\r \003(\005\022\020\n\010scene_id\030\017 \001(\r\022\020\n\010use"
      "_edge\030\001 \001(\010B(Z&github.com/teyvat-helper/"
      "hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2141);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_tothemoon.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5ftothemoon_2eproto

const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathReq_OptionType_descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_enum_descriptors[0];
}
bool ToTheMoonQueryPathReq_OptionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq::OPTION_NONE;
const ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq::OPTION_NORMAL;
const ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq::OptionType_MIN;
const ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq::OptionType_MAX;
const int ToTheMoonQueryPathReq::OptionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathReq_AStarMethod_descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_enum_descriptors[1];
}
bool ToTheMoonQueryPathReq_AStarMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::Classic;
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::Tendency;
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::Adaptive;
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::Inflection;
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::AStarMethod_MIN;
const ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::AStarMethod_MAX;
const int ToTheMoonQueryPathReq::AStarMethod_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathReq_FilterType_descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_enum_descriptors[2];
}
bool ToTheMoonQueryPathReq_FilterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq::All;
const ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq::Air;
const ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq::Water;
const ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq::FilterType_MIN;
const ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq::FilterType_MAX;
const int ToTheMoonQueryPathReq::FilterType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ToTheMoonQueryPathRsp_PathStatusType_descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_enum_descriptors[3];
}
bool ToTheMoonQueryPathRsp_PathStatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp::STATUS_FAIL;
const ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp::STATUS_SUCC;
const ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp::STATUS_PARTIAL;
const ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp::PathStatusType_MIN;
const ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp::PathStatusType_MAX;
const int ToTheMoonQueryPathRsp::PathStatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ToTheMoonObstacleInfo_ShapeType_descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_enum_descriptors[4];
}
bool ToTheMoonObstacleInfo_ShapeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo::OBSTACLE_SHAPE_CAPSULE;
const ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo::OBSTACLE_SHAPE_BOX;
const ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo::ShapeType_MIN;
const ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo::ShapeType_MAX;
const int ToTheMoonObstacleInfo::ShapeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ToTheMoonRemoveObstacleReq_ObstacleType_descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_enum_descriptors[5];
}
bool ToTheMoonRemoveObstacleReq_ObstacleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ToTheMoonRemoveObstacleReq_ObstacleType ToTheMoonRemoveObstacleReq::Box;
const ToTheMoonRemoveObstacleReq_ObstacleType ToTheMoonRemoveObstacleReq::Capsule;
const ToTheMoonRemoveObstacleReq_ObstacleType ToTheMoonRemoveObstacleReq::ObstacleType_MIN;
const ToTheMoonRemoveObstacleReq_ObstacleType ToTheMoonRemoveObstacleReq::ObstacleType_MAX;
const int ToTheMoonRemoveObstacleReq::ObstacleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonQueryPathReq::kDestinationPosFieldNumber;
const int ToTheMoonQueryPathReq::kFuzzyRangeFieldNumber;
const int ToTheMoonQueryPathReq::kQueryTypeFieldNumber;
const int ToTheMoonQueryPathReq::kAstarMethodFieldNumber;
const int ToTheMoonQueryPathReq::kSceneIdFieldNumber;
const int ToTheMoonQueryPathReq::kQueryIdFieldNumber;
const int ToTheMoonQueryPathReq::kFilterTypeFieldNumber;
const int ToTheMoonQueryPathReq::kRefinedFieldNumber;
const int ToTheMoonQueryPathReq::kUseFullNeighborFieldNumber;
const int ToTheMoonQueryPathReq::kSourcePosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonQueryPathReq::ToTheMoonQueryPathReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonQueryPathReq)
}
ToTheMoonQueryPathReq::ToTheMoonQueryPathReq(const ToTheMoonQueryPathReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_destination_pos()) {
    destination_pos_ = new ::proto::Vector(*from.destination_pos_);
  } else {
    destination_pos_ = NULL;
  }
  if (from.has_source_pos()) {
    source_pos_ = new ::proto::Vector(*from.source_pos_);
  } else {
    source_pos_ = NULL;
  }
  ::memcpy(&astar_method_, &from.astar_method_,
    static_cast<size_t>(reinterpret_cast<char*>(&fuzzy_range_) -
    reinterpret_cast<char*>(&astar_method_)) + sizeof(fuzzy_range_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonQueryPathReq)
}

void ToTheMoonQueryPathReq::SharedCtor() {
  ::memset(&destination_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fuzzy_range_) -
      reinterpret_cast<char*>(&destination_pos_)) + sizeof(fuzzy_range_));
  _cached_size_ = 0;
}

ToTheMoonQueryPathReq::~ToTheMoonQueryPathReq() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonQueryPathReq)
  SharedDtor();
}

void ToTheMoonQueryPathReq::SharedDtor() {
  if (this != internal_default_instance()) delete destination_pos_;
  if (this != internal_default_instance()) delete source_pos_;
}

void ToTheMoonQueryPathReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonQueryPathReq::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonQueryPathReq& ToTheMoonQueryPathReq::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonQueryPathReq* ToTheMoonQueryPathReq::New(::google::protobuf::Arena* arena) const {
  ToTheMoonQueryPathReq* n = new ToTheMoonQueryPathReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonQueryPathReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonQueryPathReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && destination_pos_ != NULL) {
    delete destination_pos_;
  }
  destination_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_pos_ != NULL) {
    delete source_pos_;
  }
  source_pos_ = NULL;
  ::memset(&astar_method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fuzzy_range_) -
      reinterpret_cast<char*>(&astar_method_)) + sizeof(fuzzy_range_));
  _internal_metadata_.Clear();
}

bool ToTheMoonQueryPathReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonQueryPathReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ToTheMoonQueryPathReq.AStarMethod astar_method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_astar_method(static_cast< ::proto::ToTheMoonQueryPathReq_AStarMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ToTheMoonQueryPathReq.FilterType filter_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_filter_type(static_cast< ::proto::ToTheMoonQueryPathReq_FilterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_full_neighbor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_full_neighbor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ToTheMoonQueryPathReq.OptionType query_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_query_type(static_cast< ::proto::ToTheMoonQueryPathReq_OptionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector destination_pos = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_destination_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector source_pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 query_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool refined = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &refined_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fuzzy_range = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fuzzy_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonQueryPathReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonQueryPathReq)
  return false;
#undef DO_
}

void ToTheMoonQueryPathReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonQueryPathReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ToTheMoonQueryPathReq.AStarMethod astar_method = 1;
  if (this->astar_method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->astar_method(), output);
  }

  // .proto.ToTheMoonQueryPathReq.FilterType filter_type = 3;
  if (this->filter_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->filter_type(), output);
  }

  // bool use_full_neighbor = 5;
  if (this->use_full_neighbor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->use_full_neighbor(), output);
  }

  // uint32 scene_id = 6;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->scene_id(), output);
  }

  // .proto.ToTheMoonQueryPathReq.OptionType query_type = 8;
  if (this->query_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->query_type(), output);
  }

  // .proto.Vector destination_pos = 9;
  if (this->has_destination_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->destination_pos_, output);
  }

  // .proto.Vector source_pos = 10;
  if (this->has_source_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->source_pos_, output);
  }

  // int32 query_id = 11;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->query_id(), output);
  }

  // bool refined = 13;
  if (this->refined() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->refined(), output);
  }

  // int32 fuzzy_range = 15;
  if (this->fuzzy_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->fuzzy_range(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonQueryPathReq)
}

::google::protobuf::uint8* ToTheMoonQueryPathReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonQueryPathReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ToTheMoonQueryPathReq.AStarMethod astar_method = 1;
  if (this->astar_method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->astar_method(), target);
  }

  // .proto.ToTheMoonQueryPathReq.FilterType filter_type = 3;
  if (this->filter_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->filter_type(), target);
  }

  // bool use_full_neighbor = 5;
  if (this->use_full_neighbor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->use_full_neighbor(), target);
  }

  // uint32 scene_id = 6;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->scene_id(), target);
  }

  // .proto.ToTheMoonQueryPathReq.OptionType query_type = 8;
  if (this->query_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->query_type(), target);
  }

  // .proto.Vector destination_pos = 9;
  if (this->has_destination_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->destination_pos_, deterministic, target);
  }

  // .proto.Vector source_pos = 10;
  if (this->has_source_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->source_pos_, deterministic, target);
  }

  // int32 query_id = 11;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->query_id(), target);
  }

  // bool refined = 13;
  if (this->refined() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->refined(), target);
  }

  // int32 fuzzy_range = 15;
  if (this->fuzzy_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->fuzzy_range(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonQueryPathReq)
  return target;
}

size_t ToTheMoonQueryPathReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonQueryPathReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector destination_pos = 9;
  if (this->has_destination_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->destination_pos_);
  }

  // .proto.Vector source_pos = 10;
  if (this->has_source_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_pos_);
  }

  // .proto.ToTheMoonQueryPathReq.AStarMethod astar_method = 1;
  if (this->astar_method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->astar_method());
  }

  // .proto.ToTheMoonQueryPathReq.FilterType filter_type = 3;
  if (this->filter_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filter_type());
  }

  // uint32 scene_id = 6;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // .proto.ToTheMoonQueryPathReq.OptionType query_type = 8;
  if (this->query_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->query_type());
  }

  // bool refined = 13;
  if (this->refined() != 0) {
    total_size += 1 + 1;
  }

  // bool use_full_neighbor = 5;
  if (this->use_full_neighbor() != 0) {
    total_size += 1 + 1;
  }

  // int32 query_id = 11;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->query_id());
  }

  // int32 fuzzy_range = 15;
  if (this->fuzzy_range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fuzzy_range());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonQueryPathReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonQueryPathReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonQueryPathReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonQueryPathReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonQueryPathReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonQueryPathReq)
    MergeFrom(*source);
  }
}

void ToTheMoonQueryPathReq::MergeFrom(const ToTheMoonQueryPathReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonQueryPathReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destination_pos()) {
    mutable_destination_pos()->::proto::Vector::MergeFrom(from.destination_pos());
  }
  if (from.has_source_pos()) {
    mutable_source_pos()->::proto::Vector::MergeFrom(from.source_pos());
  }
  if (from.astar_method() != 0) {
    set_astar_method(from.astar_method());
  }
  if (from.filter_type() != 0) {
    set_filter_type(from.filter_type());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.query_type() != 0) {
    set_query_type(from.query_type());
  }
  if (from.refined() != 0) {
    set_refined(from.refined());
  }
  if (from.use_full_neighbor() != 0) {
    set_use_full_neighbor(from.use_full_neighbor());
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
  if (from.fuzzy_range() != 0) {
    set_fuzzy_range(from.fuzzy_range());
  }
}

void ToTheMoonQueryPathReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonQueryPathReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonQueryPathReq::CopyFrom(const ToTheMoonQueryPathReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonQueryPathReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonQueryPathReq::IsInitialized() const {
  return true;
}

void ToTheMoonQueryPathReq::Swap(ToTheMoonQueryPathReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonQueryPathReq::InternalSwap(ToTheMoonQueryPathReq* other) {
  using std::swap;
  swap(destination_pos_, other->destination_pos_);
  swap(source_pos_, other->source_pos_);
  swap(astar_method_, other->astar_method_);
  swap(filter_type_, other->filter_type_);
  swap(scene_id_, other->scene_id_);
  swap(query_type_, other->query_type_);
  swap(refined_, other->refined_);
  swap(use_full_neighbor_, other->use_full_neighbor_);
  swap(query_id_, other->query_id_);
  swap(fuzzy_range_, other->fuzzy_range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonQueryPathReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonQueryPathReq

// .proto.Vector destination_pos = 9;
bool ToTheMoonQueryPathReq::has_destination_pos() const {
  return this != internal_default_instance() && destination_pos_ != NULL;
}
void ToTheMoonQueryPathReq::clear_destination_pos() {
  if (GetArenaNoVirtual() == NULL && destination_pos_ != NULL) delete destination_pos_;
  destination_pos_ = NULL;
}
const ::proto::Vector& ToTheMoonQueryPathReq::destination_pos() const {
  const ::proto::Vector* p = destination_pos_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.destination_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ToTheMoonQueryPathReq::mutable_destination_pos() {
  
  if (destination_pos_ == NULL) {
    destination_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonQueryPathReq.destination_pos)
  return destination_pos_;
}
::proto::Vector* ToTheMoonQueryPathReq::release_destination_pos() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonQueryPathReq.destination_pos)
  
  ::proto::Vector* temp = destination_pos_;
  destination_pos_ = NULL;
  return temp;
}
void ToTheMoonQueryPathReq::set_allocated_destination_pos(::proto::Vector* destination_pos) {
  delete destination_pos_;
  destination_pos_ = destination_pos;
  if (destination_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonQueryPathReq.destination_pos)
}

// int32 fuzzy_range = 15;
void ToTheMoonQueryPathReq::clear_fuzzy_range() {
  fuzzy_range_ = 0;
}
::google::protobuf::int32 ToTheMoonQueryPathReq::fuzzy_range() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.fuzzy_range)
  return fuzzy_range_;
}
void ToTheMoonQueryPathReq::set_fuzzy_range(::google::protobuf::int32 value) {
  
  fuzzy_range_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.fuzzy_range)
}

// .proto.ToTheMoonQueryPathReq.OptionType query_type = 8;
void ToTheMoonQueryPathReq::clear_query_type() {
  query_type_ = 0;
}
::proto::ToTheMoonQueryPathReq_OptionType ToTheMoonQueryPathReq::query_type() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.query_type)
  return static_cast< ::proto::ToTheMoonQueryPathReq_OptionType >(query_type_);
}
void ToTheMoonQueryPathReq::set_query_type(::proto::ToTheMoonQueryPathReq_OptionType value) {
  
  query_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.query_type)
}

// .proto.ToTheMoonQueryPathReq.AStarMethod astar_method = 1;
void ToTheMoonQueryPathReq::clear_astar_method() {
  astar_method_ = 0;
}
::proto::ToTheMoonQueryPathReq_AStarMethod ToTheMoonQueryPathReq::astar_method() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.astar_method)
  return static_cast< ::proto::ToTheMoonQueryPathReq_AStarMethod >(astar_method_);
}
void ToTheMoonQueryPathReq::set_astar_method(::proto::ToTheMoonQueryPathReq_AStarMethod value) {
  
  astar_method_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.astar_method)
}

// uint32 scene_id = 6;
void ToTheMoonQueryPathReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ToTheMoonQueryPathReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.scene_id)
  return scene_id_;
}
void ToTheMoonQueryPathReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.scene_id)
}

// int32 query_id = 11;
void ToTheMoonQueryPathReq::clear_query_id() {
  query_id_ = 0;
}
::google::protobuf::int32 ToTheMoonQueryPathReq::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.query_id)
  return query_id_;
}
void ToTheMoonQueryPathReq::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.query_id)
}

// .proto.ToTheMoonQueryPathReq.FilterType filter_type = 3;
void ToTheMoonQueryPathReq::clear_filter_type() {
  filter_type_ = 0;
}
::proto::ToTheMoonQueryPathReq_FilterType ToTheMoonQueryPathReq::filter_type() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.filter_type)
  return static_cast< ::proto::ToTheMoonQueryPathReq_FilterType >(filter_type_);
}
void ToTheMoonQueryPathReq::set_filter_type(::proto::ToTheMoonQueryPathReq_FilterType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.filter_type)
}

// bool refined = 13;
void ToTheMoonQueryPathReq::clear_refined() {
  refined_ = false;
}
bool ToTheMoonQueryPathReq::refined() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.refined)
  return refined_;
}
void ToTheMoonQueryPathReq::set_refined(bool value) {
  
  refined_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.refined)
}

// bool use_full_neighbor = 5;
void ToTheMoonQueryPathReq::clear_use_full_neighbor() {
  use_full_neighbor_ = false;
}
bool ToTheMoonQueryPathReq::use_full_neighbor() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.use_full_neighbor)
  return use_full_neighbor_;
}
void ToTheMoonQueryPathReq::set_use_full_neighbor(bool value) {
  
  use_full_neighbor_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathReq.use_full_neighbor)
}

// .proto.Vector source_pos = 10;
bool ToTheMoonQueryPathReq::has_source_pos() const {
  return this != internal_default_instance() && source_pos_ != NULL;
}
void ToTheMoonQueryPathReq::clear_source_pos() {
  if (GetArenaNoVirtual() == NULL && source_pos_ != NULL) delete source_pos_;
  source_pos_ = NULL;
}
const ::proto::Vector& ToTheMoonQueryPathReq::source_pos() const {
  const ::proto::Vector* p = source_pos_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathReq.source_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ToTheMoonQueryPathReq::mutable_source_pos() {
  
  if (source_pos_ == NULL) {
    source_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonQueryPathReq.source_pos)
  return source_pos_;
}
::proto::Vector* ToTheMoonQueryPathReq::release_source_pos() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonQueryPathReq.source_pos)
  
  ::proto::Vector* temp = source_pos_;
  source_pos_ = NULL;
  return temp;
}
void ToTheMoonQueryPathReq::set_allocated_source_pos(::proto::Vector* source_pos) {
  delete source_pos_;
  source_pos_ = source_pos;
  if (source_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonQueryPathReq.source_pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonQueryPathRsp::kQueryStatusFieldNumber;
const int ToTheMoonQueryPathRsp::kIndexFieldNumber;
const int ToTheMoonQueryPathRsp::kCornersFieldNumber;
const int ToTheMoonQueryPathRsp::kLevelFieldNumber;
const int ToTheMoonQueryPathRsp::kRetcodeFieldNumber;
const int ToTheMoonQueryPathRsp::kQueryIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonQueryPathRsp::ToTheMoonQueryPathRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonQueryPathRsp)
}
ToTheMoonQueryPathRsp::ToTheMoonQueryPathRsp(const ToTheMoonQueryPathRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      level_(from.level_),
      index_(from.index_),
      corners_(from.corners_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&query_id_, &from.query_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&query_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonQueryPathRsp)
}

void ToTheMoonQueryPathRsp::SharedCtor() {
  ::memset(&query_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&query_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ToTheMoonQueryPathRsp::~ToTheMoonQueryPathRsp() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonQueryPathRsp)
  SharedDtor();
}

void ToTheMoonQueryPathRsp::SharedDtor() {
}

void ToTheMoonQueryPathRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonQueryPathRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonQueryPathRsp& ToTheMoonQueryPathRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonQueryPathRsp* ToTheMoonQueryPathRsp::New(::google::protobuf::Arena* arena) const {
  ToTheMoonQueryPathRsp* n = new ToTheMoonQueryPathRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonQueryPathRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonQueryPathRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_.Clear();
  index_.Clear();
  corners_.Clear();
  ::memset(&query_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&query_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ToTheMoonQueryPathRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonQueryPathRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ToTheMoonQueryPathRsp.PathStatusType query_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_query_status(static_cast< ::proto::ToTheMoonQueryPathRsp_PathStatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 query_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Vector corners = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_corners()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonQueryPathRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonQueryPathRsp)
  return false;
#undef DO_
}

void ToTheMoonQueryPathRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonQueryPathRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 level = 1;
  if (this->level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _level_cached_byte_size_));
  }
  for (int i = 0, n = this->level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->level(i), output);
  }

  // repeated int64 index = 3;
  if (this->index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _index_cached_byte_size_));
  }
  for (int i = 0, n = this->index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->index(i), output);
  }

  // .proto.ToTheMoonQueryPathRsp.PathStatusType query_status = 7;
  if (this->query_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->query_status(), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // int32 query_id = 9;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->query_id(), output);
  }

  // repeated .proto.Vector corners = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->corners_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->corners(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonQueryPathRsp)
}

::google::protobuf::uint8* ToTheMoonQueryPathRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonQueryPathRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 level = 1;
  if (this->level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->level_, target);
  }

  // repeated int64 index = 3;
  if (this->index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->index_, target);
  }

  // .proto.ToTheMoonQueryPathRsp.PathStatusType query_status = 7;
  if (this->query_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->query_status(), target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // int32 query_id = 9;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->query_id(), target);
  }

  // repeated .proto.Vector corners = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->corners_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->corners(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonQueryPathRsp)
  return target;
}

size_t ToTheMoonQueryPathRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonQueryPathRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 level = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->level_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 index = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.Vector corners = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->corners_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->corners(static_cast<int>(i)));
    }
  }

  // int32 query_id = 9;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->query_id());
  }

  // .proto.ToTheMoonQueryPathRsp.PathStatusType query_status = 7;
  if (this->query_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->query_status());
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonQueryPathRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonQueryPathRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonQueryPathRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonQueryPathRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonQueryPathRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonQueryPathRsp)
    MergeFrom(*source);
  }
}

void ToTheMoonQueryPathRsp::MergeFrom(const ToTheMoonQueryPathRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonQueryPathRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  level_.MergeFrom(from.level_);
  index_.MergeFrom(from.index_);
  corners_.MergeFrom(from.corners_);
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
  if (from.query_status() != 0) {
    set_query_status(from.query_status());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ToTheMoonQueryPathRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonQueryPathRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonQueryPathRsp::CopyFrom(const ToTheMoonQueryPathRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonQueryPathRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonQueryPathRsp::IsInitialized() const {
  return true;
}

void ToTheMoonQueryPathRsp::Swap(ToTheMoonQueryPathRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonQueryPathRsp::InternalSwap(ToTheMoonQueryPathRsp* other) {
  using std::swap;
  level_.InternalSwap(&other->level_);
  index_.InternalSwap(&other->index_);
  corners_.InternalSwap(&other->corners_);
  swap(query_id_, other->query_id_);
  swap(query_status_, other->query_status_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonQueryPathRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonQueryPathRsp

// .proto.ToTheMoonQueryPathRsp.PathStatusType query_status = 7;
void ToTheMoonQueryPathRsp::clear_query_status() {
  query_status_ = 0;
}
::proto::ToTheMoonQueryPathRsp_PathStatusType ToTheMoonQueryPathRsp::query_status() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.query_status)
  return static_cast< ::proto::ToTheMoonQueryPathRsp_PathStatusType >(query_status_);
}
void ToTheMoonQueryPathRsp::set_query_status(::proto::ToTheMoonQueryPathRsp_PathStatusType value) {
  
  query_status_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.query_status)
}

// repeated int64 index = 3;
int ToTheMoonQueryPathRsp::index_size() const {
  return index_.size();
}
void ToTheMoonQueryPathRsp::clear_index() {
  index_.Clear();
}
::google::protobuf::int64 ToTheMoonQueryPathRsp::index(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.index)
  return index_.Get(index);
}
void ToTheMoonQueryPathRsp::set_index(int index, ::google::protobuf::int64 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.index)
}
void ToTheMoonQueryPathRsp::add_index(::google::protobuf::int64 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ToTheMoonQueryPathRsp.index)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ToTheMoonQueryPathRsp::index() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonQueryPathRsp.index)
  return index_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ToTheMoonQueryPathRsp::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonQueryPathRsp.index)
  return &index_;
}

// repeated .proto.Vector corners = 14;
int ToTheMoonQueryPathRsp::corners_size() const {
  return corners_.size();
}
void ToTheMoonQueryPathRsp::clear_corners() {
  corners_.Clear();
}
const ::proto::Vector& ToTheMoonQueryPathRsp::corners(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.corners)
  return corners_.Get(index);
}
::proto::Vector* ToTheMoonQueryPathRsp::mutable_corners(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonQueryPathRsp.corners)
  return corners_.Mutable(index);
}
::proto::Vector* ToTheMoonQueryPathRsp::add_corners() {
  // @@protoc_insertion_point(field_add:proto.ToTheMoonQueryPathRsp.corners)
  return corners_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Vector >*
ToTheMoonQueryPathRsp::mutable_corners() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonQueryPathRsp.corners)
  return &corners_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
ToTheMoonQueryPathRsp::corners() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonQueryPathRsp.corners)
  return corners_;
}

// repeated int32 level = 1;
int ToTheMoonQueryPathRsp::level_size() const {
  return level_.size();
}
void ToTheMoonQueryPathRsp::clear_level() {
  level_.Clear();
}
::google::protobuf::int32 ToTheMoonQueryPathRsp::level(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.level)
  return level_.Get(index);
}
void ToTheMoonQueryPathRsp::set_level(int index, ::google::protobuf::int32 value) {
  level_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.level)
}
void ToTheMoonQueryPathRsp::add_level(::google::protobuf::int32 value) {
  level_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ToTheMoonQueryPathRsp.level)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ToTheMoonQueryPathRsp::level() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonQueryPathRsp.level)
  return level_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ToTheMoonQueryPathRsp::mutable_level() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonQueryPathRsp.level)
  return &level_;
}

// int32 retcode = 8;
void ToTheMoonQueryPathRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ToTheMoonQueryPathRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.retcode)
  return retcode_;
}
void ToTheMoonQueryPathRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.retcode)
}

// int32 query_id = 9;
void ToTheMoonQueryPathRsp::clear_query_id() {
  query_id_ = 0;
}
::google::protobuf::int32 ToTheMoonQueryPathRsp::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonQueryPathRsp.query_id)
  return query_id_;
}
void ToTheMoonQueryPathRsp::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonQueryPathRsp.query_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonPingNotify::ToTheMoonPingNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonPingNotify)
}
ToTheMoonPingNotify::ToTheMoonPingNotify(const ToTheMoonPingNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonPingNotify)
}

void ToTheMoonPingNotify::SharedCtor() {
  _cached_size_ = 0;
}

ToTheMoonPingNotify::~ToTheMoonPingNotify() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonPingNotify)
  SharedDtor();
}

void ToTheMoonPingNotify::SharedDtor() {
}

void ToTheMoonPingNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonPingNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonPingNotify& ToTheMoonPingNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonPingNotify* ToTheMoonPingNotify::New(::google::protobuf::Arena* arena) const {
  ToTheMoonPingNotify* n = new ToTheMoonPingNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonPingNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonPingNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ToTheMoonPingNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonPingNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonPingNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonPingNotify)
  return false;
#undef DO_
}

void ToTheMoonPingNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonPingNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonPingNotify)
}

::google::protobuf::uint8* ToTheMoonPingNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonPingNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonPingNotify)
  return target;
}

size_t ToTheMoonPingNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonPingNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonPingNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonPingNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonPingNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonPingNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonPingNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonPingNotify)
    MergeFrom(*source);
  }
}

void ToTheMoonPingNotify::MergeFrom(const ToTheMoonPingNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonPingNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ToTheMoonPingNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonPingNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonPingNotify::CopyFrom(const ToTheMoonPingNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonPingNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonPingNotify::IsInitialized() const {
  return true;
}

void ToTheMoonPingNotify::Swap(ToTheMoonPingNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonPingNotify::InternalSwap(ToTheMoonPingNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonPingNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonPingNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonEnterSceneReq::kVersionFieldNumber;
const int ToTheMoonEnterSceneReq::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonEnterSceneReq::ToTheMoonEnterSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonEnterSceneReq)
}
ToTheMoonEnterSceneReq::ToTheMoonEnterSceneReq(const ToTheMoonEnterSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&version_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonEnterSceneReq)
}

void ToTheMoonEnterSceneReq::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&version_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

ToTheMoonEnterSceneReq::~ToTheMoonEnterSceneReq() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonEnterSceneReq)
  SharedDtor();
}

void ToTheMoonEnterSceneReq::SharedDtor() {
}

void ToTheMoonEnterSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonEnterSceneReq::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonEnterSceneReq& ToTheMoonEnterSceneReq::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonEnterSceneReq* ToTheMoonEnterSceneReq::New(::google::protobuf::Arena* arena) const {
  ToTheMoonEnterSceneReq* n = new ToTheMoonEnterSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonEnterSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonEnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&version_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool ToTheMoonEnterSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonEnterSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 version = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonEnterSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonEnterSceneReq)
  return false;
#undef DO_
}

void ToTheMoonEnterSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonEnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 14;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->version(), output);
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonEnterSceneReq)
}

::google::protobuf::uint8* ToTheMoonEnterSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonEnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 14;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->version(), target);
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonEnterSceneReq)
  return target;
}

size_t ToTheMoonEnterSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonEnterSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 version = 14;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonEnterSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonEnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonEnterSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonEnterSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonEnterSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonEnterSceneReq)
    MergeFrom(*source);
  }
}

void ToTheMoonEnterSceneReq::MergeFrom(const ToTheMoonEnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonEnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ToTheMoonEnterSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonEnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonEnterSceneReq::CopyFrom(const ToTheMoonEnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonEnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonEnterSceneReq::IsInitialized() const {
  return true;
}

void ToTheMoonEnterSceneReq::Swap(ToTheMoonEnterSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonEnterSceneReq::InternalSwap(ToTheMoonEnterSceneReq* other) {
  using std::swap;
  swap(version_, other->version_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonEnterSceneReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonEnterSceneReq

// uint32 version = 14;
void ToTheMoonEnterSceneReq::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 ToTheMoonEnterSceneReq::version() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonEnterSceneReq.version)
  return version_;
}
void ToTheMoonEnterSceneReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonEnterSceneReq.version)
}

// uint32 scene_id = 15;
void ToTheMoonEnterSceneReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ToTheMoonEnterSceneReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonEnterSceneReq.scene_id)
  return scene_id_;
}
void ToTheMoonEnterSceneReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonEnterSceneReq.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonEnterSceneRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonEnterSceneRsp::ToTheMoonEnterSceneRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonEnterSceneRsp)
}
ToTheMoonEnterSceneRsp::ToTheMoonEnterSceneRsp(const ToTheMoonEnterSceneRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonEnterSceneRsp)
}

void ToTheMoonEnterSceneRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ToTheMoonEnterSceneRsp::~ToTheMoonEnterSceneRsp() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonEnterSceneRsp)
  SharedDtor();
}

void ToTheMoonEnterSceneRsp::SharedDtor() {
}

void ToTheMoonEnterSceneRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonEnterSceneRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonEnterSceneRsp& ToTheMoonEnterSceneRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonEnterSceneRsp* ToTheMoonEnterSceneRsp::New(::google::protobuf::Arena* arena) const {
  ToTheMoonEnterSceneRsp* n = new ToTheMoonEnterSceneRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonEnterSceneRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonEnterSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ToTheMoonEnterSceneRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonEnterSceneRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonEnterSceneRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonEnterSceneRsp)
  return false;
#undef DO_
}

void ToTheMoonEnterSceneRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonEnterSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonEnterSceneRsp)
}

::google::protobuf::uint8* ToTheMoonEnterSceneRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonEnterSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonEnterSceneRsp)
  return target;
}

size_t ToTheMoonEnterSceneRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonEnterSceneRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonEnterSceneRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonEnterSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonEnterSceneRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonEnterSceneRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonEnterSceneRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonEnterSceneRsp)
    MergeFrom(*source);
  }
}

void ToTheMoonEnterSceneRsp::MergeFrom(const ToTheMoonEnterSceneRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonEnterSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ToTheMoonEnterSceneRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonEnterSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonEnterSceneRsp::CopyFrom(const ToTheMoonEnterSceneRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonEnterSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonEnterSceneRsp::IsInitialized() const {
  return true;
}

void ToTheMoonEnterSceneRsp::Swap(ToTheMoonEnterSceneRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonEnterSceneRsp::InternalSwap(ToTheMoonEnterSceneRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonEnterSceneRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonEnterSceneRsp

// int32 retcode = 7;
void ToTheMoonEnterSceneRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ToTheMoonEnterSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonEnterSceneRsp.retcode)
  return retcode_;
}
void ToTheMoonEnterSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonEnterSceneRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonObstacleInfo::kTypeFieldNumber;
const int ToTheMoonObstacleInfo::kHandleIdFieldNumber;
const int ToTheMoonObstacleInfo::kRotationFieldNumber;
const int ToTheMoonObstacleInfo::kCenterFieldNumber;
const int ToTheMoonObstacleInfo::kHalfExtentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonObstacleInfo::ToTheMoonObstacleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonObstacleInfo)
}
ToTheMoonObstacleInfo::ToTheMoonObstacleInfo(const ToTheMoonObstacleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rotation()) {
    rotation_ = new ::proto::MathQuaternion(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  if (from.has_center()) {
    center_ = new ::proto::Vector(*from.center_);
  } else {
    center_ = NULL;
  }
  if (from.has_half_extents()) {
    half_extents_ = new ::proto::Vector(*from.half_extents_);
  } else {
    half_extents_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&handle_id_) -
    reinterpret_cast<char*>(&type_)) + sizeof(handle_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonObstacleInfo)
}

void ToTheMoonObstacleInfo::SharedCtor() {
  ::memset(&rotation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&handle_id_) -
      reinterpret_cast<char*>(&rotation_)) + sizeof(handle_id_));
  _cached_size_ = 0;
}

ToTheMoonObstacleInfo::~ToTheMoonObstacleInfo() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonObstacleInfo)
  SharedDtor();
}

void ToTheMoonObstacleInfo::SharedDtor() {
  if (this != internal_default_instance()) delete rotation_;
  if (this != internal_default_instance()) delete center_;
  if (this != internal_default_instance()) delete half_extents_;
}

void ToTheMoonObstacleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonObstacleInfo::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonObstacleInfo& ToTheMoonObstacleInfo::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonObstacleInfo* ToTheMoonObstacleInfo::New(::google::protobuf::Arena* arena) const {
  ToTheMoonObstacleInfo* n = new ToTheMoonObstacleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonObstacleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonObstacleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
  if (GetArenaNoVirtual() == NULL && half_extents_ != NULL) {
    delete half_extents_;
  }
  half_extents_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&handle_id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(handle_id_));
  _internal_metadata_.Clear();
}

bool ToTheMoonObstacleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonObstacleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ToTheMoonObstacleInfo.ShapeType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::proto::ToTheMoonObstacleInfo_ShapeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MathQuaternion rotation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 handle_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector center = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector half_extents = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_half_extents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonObstacleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonObstacleInfo)
  return false;
#undef DO_
}

void ToTheMoonObstacleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonObstacleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ToTheMoonObstacleInfo.ShapeType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .proto.MathQuaternion rotation = 7;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->rotation_, output);
  }

  // int32 handle_id = 11;
  if (this->handle_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->handle_id(), output);
  }

  // .proto.Vector center = 13;
  if (this->has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->center_, output);
  }

  // .proto.Vector half_extents = 14;
  if (this->has_half_extents()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->half_extents_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonObstacleInfo)
}

::google::protobuf::uint8* ToTheMoonObstacleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonObstacleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ToTheMoonObstacleInfo.ShapeType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .proto.MathQuaternion rotation = 7;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->rotation_, deterministic, target);
  }

  // int32 handle_id = 11;
  if (this->handle_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->handle_id(), target);
  }

  // .proto.Vector center = 13;
  if (this->has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->center_, deterministic, target);
  }

  // .proto.Vector half_extents = 14;
  if (this->has_half_extents()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->half_extents_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonObstacleInfo)
  return target;
}

size_t ToTheMoonObstacleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonObstacleInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MathQuaternion rotation = 7;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rotation_);
  }

  // .proto.Vector center = 13;
  if (this->has_center()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->center_);
  }

  // .proto.Vector half_extents = 14;
  if (this->has_half_extents()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->half_extents_);
  }

  // .proto.ToTheMoonObstacleInfo.ShapeType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 handle_id = 11;
  if (this->handle_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->handle_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonObstacleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonObstacleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonObstacleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonObstacleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonObstacleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonObstacleInfo)
    MergeFrom(*source);
  }
}

void ToTheMoonObstacleInfo::MergeFrom(const ToTheMoonObstacleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonObstacleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rotation()) {
    mutable_rotation()->::proto::MathQuaternion::MergeFrom(from.rotation());
  }
  if (from.has_center()) {
    mutable_center()->::proto::Vector::MergeFrom(from.center());
  }
  if (from.has_half_extents()) {
    mutable_half_extents()->::proto::Vector::MergeFrom(from.half_extents());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.handle_id() != 0) {
    set_handle_id(from.handle_id());
  }
}

void ToTheMoonObstacleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonObstacleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonObstacleInfo::CopyFrom(const ToTheMoonObstacleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonObstacleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonObstacleInfo::IsInitialized() const {
  return true;
}

void ToTheMoonObstacleInfo::Swap(ToTheMoonObstacleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonObstacleInfo::InternalSwap(ToTheMoonObstacleInfo* other) {
  using std::swap;
  swap(rotation_, other->rotation_);
  swap(center_, other->center_);
  swap(half_extents_, other->half_extents_);
  swap(type_, other->type_);
  swap(handle_id_, other->handle_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonObstacleInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonObstacleInfo

// .proto.ToTheMoonObstacleInfo.ShapeType type = 2;
void ToTheMoonObstacleInfo::clear_type() {
  type_ = 0;
}
::proto::ToTheMoonObstacleInfo_ShapeType ToTheMoonObstacleInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.type)
  return static_cast< ::proto::ToTheMoonObstacleInfo_ShapeType >(type_);
}
void ToTheMoonObstacleInfo::set_type(::proto::ToTheMoonObstacleInfo_ShapeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstacleInfo.type)
}

// int32 handle_id = 11;
void ToTheMoonObstacleInfo::clear_handle_id() {
  handle_id_ = 0;
}
::google::protobuf::int32 ToTheMoonObstacleInfo::handle_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.handle_id)
  return handle_id_;
}
void ToTheMoonObstacleInfo::set_handle_id(::google::protobuf::int32 value) {
  
  handle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstacleInfo.handle_id)
}

// .proto.MathQuaternion rotation = 7;
bool ToTheMoonObstacleInfo::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
void ToTheMoonObstacleInfo::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) delete rotation_;
  rotation_ = NULL;
}
const ::proto::MathQuaternion& ToTheMoonObstacleInfo::rotation() const {
  const ::proto::MathQuaternion* p = rotation_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
::proto::MathQuaternion* ToTheMoonObstacleInfo::mutable_rotation() {
  
  if (rotation_ == NULL) {
    rotation_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstacleInfo.rotation)
  return rotation_;
}
::proto::MathQuaternion* ToTheMoonObstacleInfo::release_rotation() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonObstacleInfo.rotation)
  
  ::proto::MathQuaternion* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
void ToTheMoonObstacleInfo::set_allocated_rotation(::proto::MathQuaternion* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonObstacleInfo.rotation)
}

// .proto.Vector center = 13;
bool ToTheMoonObstacleInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
void ToTheMoonObstacleInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
const ::proto::Vector& ToTheMoonObstacleInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ToTheMoonObstacleInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstacleInfo.center)
  return center_;
}
::proto::Vector* ToTheMoonObstacleInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonObstacleInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
void ToTheMoonObstacleInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonObstacleInfo.center)
}

// .proto.Vector half_extents = 14;
bool ToTheMoonObstacleInfo::has_half_extents() const {
  return this != internal_default_instance() && half_extents_ != NULL;
}
void ToTheMoonObstacleInfo::clear_half_extents() {
  if (GetArenaNoVirtual() == NULL && half_extents_ != NULL) delete half_extents_;
  half_extents_ = NULL;
}
const ::proto::Vector& ToTheMoonObstacleInfo::half_extents() const {
  const ::proto::Vector* p = half_extents_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstacleInfo.half_extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ToTheMoonObstacleInfo::mutable_half_extents() {
  
  if (half_extents_ == NULL) {
    half_extents_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstacleInfo.half_extents)
  return half_extents_;
}
::proto::Vector* ToTheMoonObstacleInfo::release_half_extents() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonObstacleInfo.half_extents)
  
  ::proto::Vector* temp = half_extents_;
  half_extents_ = NULL;
  return temp;
}
void ToTheMoonObstacleInfo::set_allocated_half_extents(::proto::Vector* half_extents) {
  delete half_extents_;
  half_extents_ = half_extents;
  if (half_extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonObstacleInfo.half_extents)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonAddObstacleReq::kUseEdgeFieldNumber;
const int ToTheMoonAddObstacleReq::kObstacleFieldNumber;
const int ToTheMoonAddObstacleReq::kQueryIdFieldNumber;
const int ToTheMoonAddObstacleReq::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonAddObstacleReq::ToTheMoonAddObstacleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonAddObstacleReq)
}
ToTheMoonAddObstacleReq::ToTheMoonAddObstacleReq(const ToTheMoonAddObstacleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_obstacle()) {
    obstacle_ = new ::proto::ToTheMoonObstacleInfo(*from.obstacle_);
  } else {
    obstacle_ = NULL;
  }
  ::memcpy(&use_edge_, &from.use_edge_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_id_) -
    reinterpret_cast<char*>(&use_edge_)) + sizeof(query_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonAddObstacleReq)
}

void ToTheMoonAddObstacleReq::SharedCtor() {
  ::memset(&obstacle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&obstacle_)) + sizeof(query_id_));
  _cached_size_ = 0;
}

ToTheMoonAddObstacleReq::~ToTheMoonAddObstacleReq() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonAddObstacleReq)
  SharedDtor();
}

void ToTheMoonAddObstacleReq::SharedDtor() {
  if (this != internal_default_instance()) delete obstacle_;
}

void ToTheMoonAddObstacleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonAddObstacleReq::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonAddObstacleReq& ToTheMoonAddObstacleReq::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonAddObstacleReq* ToTheMoonAddObstacleReq::New(::google::protobuf::Arena* arena) const {
  ToTheMoonAddObstacleReq* n = new ToTheMoonAddObstacleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonAddObstacleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonAddObstacleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && obstacle_ != NULL) {
    delete obstacle_;
  }
  obstacle_ = NULL;
  ::memset(&use_edge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&use_edge_)) + sizeof(query_id_));
  _internal_metadata_.Clear();
}

bool ToTheMoonAddObstacleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonAddObstacleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 query_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_edge = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_edge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ToTheMoonObstacleInfo obstacle = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obstacle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonAddObstacleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonAddObstacleReq)
  return false;
#undef DO_
}

void ToTheMoonAddObstacleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonAddObstacleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_id(), output);
  }

  // int32 query_id = 9;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->query_id(), output);
  }

  // bool use_edge = 12;
  if (this->use_edge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->use_edge(), output);
  }

  // .proto.ToTheMoonObstacleInfo obstacle = 13;
  if (this->has_obstacle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->obstacle_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonAddObstacleReq)
}

::google::protobuf::uint8* ToTheMoonAddObstacleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonAddObstacleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_id(), target);
  }

  // int32 query_id = 9;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->query_id(), target);
  }

  // bool use_edge = 12;
  if (this->use_edge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->use_edge(), target);
  }

  // .proto.ToTheMoonObstacleInfo obstacle = 13;
  if (this->has_obstacle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->obstacle_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonAddObstacleReq)
  return target;
}

size_t ToTheMoonAddObstacleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonAddObstacleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ToTheMoonObstacleInfo obstacle = 13;
  if (this->has_obstacle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->obstacle_);
  }

  // bool use_edge = 12;
  if (this->use_edge() != 0) {
    total_size += 1 + 1;
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // int32 query_id = 9;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->query_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonAddObstacleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonAddObstacleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonAddObstacleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonAddObstacleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonAddObstacleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonAddObstacleReq)
    MergeFrom(*source);
  }
}

void ToTheMoonAddObstacleReq::MergeFrom(const ToTheMoonAddObstacleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonAddObstacleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_obstacle()) {
    mutable_obstacle()->::proto::ToTheMoonObstacleInfo::MergeFrom(from.obstacle());
  }
  if (from.use_edge() != 0) {
    set_use_edge(from.use_edge());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
}

void ToTheMoonAddObstacleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonAddObstacleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonAddObstacleReq::CopyFrom(const ToTheMoonAddObstacleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonAddObstacleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonAddObstacleReq::IsInitialized() const {
  return true;
}

void ToTheMoonAddObstacleReq::Swap(ToTheMoonAddObstacleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonAddObstacleReq::InternalSwap(ToTheMoonAddObstacleReq* other) {
  using std::swap;
  swap(obstacle_, other->obstacle_);
  swap(use_edge_, other->use_edge_);
  swap(scene_id_, other->scene_id_);
  swap(query_id_, other->query_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonAddObstacleReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonAddObstacleReq

// bool use_edge = 12;
void ToTheMoonAddObstacleReq::clear_use_edge() {
  use_edge_ = false;
}
bool ToTheMoonAddObstacleReq::use_edge() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.use_edge)
  return use_edge_;
}
void ToTheMoonAddObstacleReq::set_use_edge(bool value) {
  
  use_edge_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleReq.use_edge)
}

// .proto.ToTheMoonObstacleInfo obstacle = 13;
bool ToTheMoonAddObstacleReq::has_obstacle() const {
  return this != internal_default_instance() && obstacle_ != NULL;
}
void ToTheMoonAddObstacleReq::clear_obstacle() {
  if (GetArenaNoVirtual() == NULL && obstacle_ != NULL) delete obstacle_;
  obstacle_ = NULL;
}
const ::proto::ToTheMoonObstacleInfo& ToTheMoonAddObstacleReq::obstacle() const {
  const ::proto::ToTheMoonObstacleInfo* p = obstacle_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.obstacle)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ToTheMoonObstacleInfo*>(
      &::proto::_ToTheMoonObstacleInfo_default_instance_);
}
::proto::ToTheMoonObstacleInfo* ToTheMoonAddObstacleReq::mutable_obstacle() {
  
  if (obstacle_ == NULL) {
    obstacle_ = new ::proto::ToTheMoonObstacleInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonAddObstacleReq.obstacle)
  return obstacle_;
}
::proto::ToTheMoonObstacleInfo* ToTheMoonAddObstacleReq::release_obstacle() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonAddObstacleReq.obstacle)
  
  ::proto::ToTheMoonObstacleInfo* temp = obstacle_;
  obstacle_ = NULL;
  return temp;
}
void ToTheMoonAddObstacleReq::set_allocated_obstacle(::proto::ToTheMoonObstacleInfo* obstacle) {
  delete obstacle_;
  obstacle_ = obstacle;
  if (obstacle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonAddObstacleReq.obstacle)
}

// int32 query_id = 9;
void ToTheMoonAddObstacleReq::clear_query_id() {
  query_id_ = 0;
}
::google::protobuf::int32 ToTheMoonAddObstacleReq::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.query_id)
  return query_id_;
}
void ToTheMoonAddObstacleReq::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleReq.query_id)
}

// uint32 scene_id = 3;
void ToTheMoonAddObstacleReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ToTheMoonAddObstacleReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleReq.scene_id)
  return scene_id_;
}
void ToTheMoonAddObstacleReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleReq.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicSVONode::kIndexFieldNumber;
const int DynamicSVONode::kAreaFieldNumber;
const int DynamicSVONode::kReferPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicSVONode::DynamicSVONode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DynamicSVONode)
}
DynamicSVONode::DynamicSVONode(const DynamicSVONode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_refer_pos()) {
    refer_pos_ = new ::proto::Vector(*from.refer_pos_);
  } else {
    refer_pos_ = NULL;
  }
  ::memcpy(&area_, &from.area_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&area_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:proto.DynamicSVONode)
}

void DynamicSVONode::SharedCtor() {
  ::memset(&refer_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&refer_pos_)) + sizeof(index_));
  _cached_size_ = 0;
}

DynamicSVONode::~DynamicSVONode() {
  // @@protoc_insertion_point(destructor:proto.DynamicSVONode)
  SharedDtor();
}

void DynamicSVONode::SharedDtor() {
  if (this != internal_default_instance()) delete refer_pos_;
}

void DynamicSVONode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicSVONode::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicSVONode& DynamicSVONode::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

DynamicSVONode* DynamicSVONode::New(::google::protobuf::Arena* arena) const {
  DynamicSVONode* n = new DynamicSVONode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DynamicSVONode::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DynamicSVONode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && refer_pos_ != NULL) {
    delete refer_pos_;
  }
  refer_pos_ = NULL;
  ::memset(&area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&area_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

bool DynamicSVONode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DynamicSVONode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector refer_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refer_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 area = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DynamicSVONode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DynamicSVONode)
  return false;
#undef DO_
}

void DynamicSVONode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DynamicSVONode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector refer_pos = 1;
  if (this->has_refer_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->refer_pos_, output);
  }

  // int32 area = 5;
  if (this->area() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->area(), output);
  }

  // int64 index = 8;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DynamicSVONode)
}

::google::protobuf::uint8* DynamicSVONode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DynamicSVONode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector refer_pos = 1;
  if (this->has_refer_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->refer_pos_, deterministic, target);
  }

  // int32 area = 5;
  if (this->area() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->area(), target);
  }

  // int64 index = 8;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DynamicSVONode)
  return target;
}

size_t DynamicSVONode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DynamicSVONode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector refer_pos = 1;
  if (this->has_refer_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->refer_pos_);
  }

  // int32 area = 5;
  if (this->area() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->area());
  }

  // int64 index = 8;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicSVONode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DynamicSVONode)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicSVONode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicSVONode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DynamicSVONode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DynamicSVONode)
    MergeFrom(*source);
  }
}

void DynamicSVONode::MergeFrom(const DynamicSVONode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DynamicSVONode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_refer_pos()) {
    mutable_refer_pos()->::proto::Vector::MergeFrom(from.refer_pos());
  }
  if (from.area() != 0) {
    set_area(from.area());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void DynamicSVONode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DynamicSVONode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicSVONode::CopyFrom(const DynamicSVONode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DynamicSVONode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicSVONode::IsInitialized() const {
  return true;
}

void DynamicSVONode::Swap(DynamicSVONode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicSVONode::InternalSwap(DynamicSVONode* other) {
  using std::swap;
  swap(refer_pos_, other->refer_pos_);
  swap(area_, other->area_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DynamicSVONode::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DynamicSVONode

// int64 index = 8;
void DynamicSVONode::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 DynamicSVONode::index() const {
  // @@protoc_insertion_point(field_get:proto.DynamicSVONode.index)
  return index_;
}
void DynamicSVONode::set_index(::google::protobuf::int64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.DynamicSVONode.index)
}

// int32 area = 5;
void DynamicSVONode::clear_area() {
  area_ = 0;
}
::google::protobuf::int32 DynamicSVONode::area() const {
  // @@protoc_insertion_point(field_get:proto.DynamicSVONode.area)
  return area_;
}
void DynamicSVONode::set_area(::google::protobuf::int32 value) {
  
  area_ = value;
  // @@protoc_insertion_point(field_set:proto.DynamicSVONode.area)
}

// .proto.Vector refer_pos = 1;
bool DynamicSVONode::has_refer_pos() const {
  return this != internal_default_instance() && refer_pos_ != NULL;
}
void DynamicSVONode::clear_refer_pos() {
  if (GetArenaNoVirtual() == NULL && refer_pos_ != NULL) delete refer_pos_;
  refer_pos_ = NULL;
}
const ::proto::Vector& DynamicSVONode::refer_pos() const {
  const ::proto::Vector* p = refer_pos_;
  // @@protoc_insertion_point(field_get:proto.DynamicSVONode.refer_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* DynamicSVONode::mutable_refer_pos() {
  
  if (refer_pos_ == NULL) {
    refer_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.DynamicSVONode.refer_pos)
  return refer_pos_;
}
::proto::Vector* DynamicSVONode::release_refer_pos() {
  // @@protoc_insertion_point(field_release:proto.DynamicSVONode.refer_pos)
  
  ::proto::Vector* temp = refer_pos_;
  refer_pos_ = NULL;
  return temp;
}
void DynamicSVONode::set_allocated_refer_pos(::proto::Vector* refer_pos) {
  delete refer_pos_;
  refer_pos_ = refer_pos;
  if (refer_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DynamicSVONode.refer_pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicLayerNodes::kLevelFieldNumber;
const int DynamicLayerNodes::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicLayerNodes::DynamicLayerNodes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DynamicLayerNodes)
}
DynamicLayerNodes::DynamicLayerNodes(const DynamicLayerNodes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:proto.DynamicLayerNodes)
}

void DynamicLayerNodes::SharedCtor() {
  level_ = 0;
  _cached_size_ = 0;
}

DynamicLayerNodes::~DynamicLayerNodes() {
  // @@protoc_insertion_point(destructor:proto.DynamicLayerNodes)
  SharedDtor();
}

void DynamicLayerNodes::SharedDtor() {
}

void DynamicLayerNodes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicLayerNodes::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicLayerNodes& DynamicLayerNodes::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

DynamicLayerNodes* DynamicLayerNodes::New(::google::protobuf::Arena* arena) const {
  DynamicLayerNodes* n = new DynamicLayerNodes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DynamicLayerNodes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DynamicLayerNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  level_ = 0;
  _internal_metadata_.Clear();
}

bool DynamicLayerNodes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DynamicLayerNodes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.DynamicSVONode nodes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DynamicLayerNodes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DynamicLayerNodes)
  return false;
#undef DO_
}

void DynamicLayerNodes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DynamicLayerNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DynamicSVONode nodes = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->nodes(static_cast<int>(i)), output);
  }

  // int32 level = 10;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DynamicLayerNodes)
}

::google::protobuf::uint8* DynamicLayerNodes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DynamicLayerNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DynamicSVONode nodes = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // int32 level = 10;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DynamicLayerNodes)
  return target;
}

size_t DynamicLayerNodes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DynamicLayerNodes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.DynamicSVONode nodes = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes(static_cast<int>(i)));
    }
  }

  // int32 level = 10;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicLayerNodes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DynamicLayerNodes)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicLayerNodes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicLayerNodes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DynamicLayerNodes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DynamicLayerNodes)
    MergeFrom(*source);
  }
}

void DynamicLayerNodes::MergeFrom(const DynamicLayerNodes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DynamicLayerNodes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void DynamicLayerNodes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DynamicLayerNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicLayerNodes::CopyFrom(const DynamicLayerNodes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DynamicLayerNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicLayerNodes::IsInitialized() const {
  return true;
}

void DynamicLayerNodes::Swap(DynamicLayerNodes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicLayerNodes::InternalSwap(DynamicLayerNodes* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DynamicLayerNodes::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DynamicLayerNodes

// int32 level = 10;
void DynamicLayerNodes::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 DynamicLayerNodes::level() const {
  // @@protoc_insertion_point(field_get:proto.DynamicLayerNodes.level)
  return level_;
}
void DynamicLayerNodes::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.DynamicLayerNodes.level)
}

// repeated .proto.DynamicSVONode nodes = 6;
int DynamicLayerNodes::nodes_size() const {
  return nodes_.size();
}
void DynamicLayerNodes::clear_nodes() {
  nodes_.Clear();
}
const ::proto::DynamicSVONode& DynamicLayerNodes::nodes(int index) const {
  // @@protoc_insertion_point(field_get:proto.DynamicLayerNodes.nodes)
  return nodes_.Get(index);
}
::proto::DynamicSVONode* DynamicLayerNodes::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DynamicLayerNodes.nodes)
  return nodes_.Mutable(index);
}
::proto::DynamicSVONode* DynamicLayerNodes::add_nodes() {
  // @@protoc_insertion_point(field_add:proto.DynamicLayerNodes.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::DynamicSVONode >*
DynamicLayerNodes::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:proto.DynamicLayerNodes.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::DynamicSVONode >&
DynamicLayerNodes::nodes() const {
  // @@protoc_insertion_point(field_list:proto.DynamicLayerNodes.nodes)
  return nodes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicNodes::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicNodes::DynamicNodes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DynamicNodes)
}
DynamicNodes::DynamicNodes(const DynamicNodes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DynamicNodes)
}

void DynamicNodes::SharedCtor() {
  _cached_size_ = 0;
}

DynamicNodes::~DynamicNodes() {
  // @@protoc_insertion_point(destructor:proto.DynamicNodes)
  SharedDtor();
}

void DynamicNodes::SharedDtor() {
}

void DynamicNodes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicNodes::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicNodes& DynamicNodes::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

DynamicNodes* DynamicNodes::New(::google::protobuf::Arena* arena) const {
  DynamicNodes* n = new DynamicNodes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DynamicNodes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DynamicNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _internal_metadata_.Clear();
}

bool DynamicNodes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DynamicNodes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.DynamicLayerNodes nodes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DynamicNodes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DynamicNodes)
  return false;
#undef DO_
}

void DynamicNodes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DynamicNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DynamicLayerNodes nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->nodes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DynamicNodes)
}

::google::protobuf::uint8* DynamicNodes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DynamicNodes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.DynamicLayerNodes nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DynamicNodes)
  return target;
}

size_t DynamicNodes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DynamicNodes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.DynamicLayerNodes nodes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicNodes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DynamicNodes)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicNodes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicNodes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DynamicNodes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DynamicNodes)
    MergeFrom(*source);
  }
}

void DynamicNodes::MergeFrom(const DynamicNodes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DynamicNodes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void DynamicNodes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DynamicNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicNodes::CopyFrom(const DynamicNodes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DynamicNodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicNodes::IsInitialized() const {
  return true;
}

void DynamicNodes::Swap(DynamicNodes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicNodes::InternalSwap(DynamicNodes* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DynamicNodes::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DynamicNodes

// repeated .proto.DynamicLayerNodes nodes = 3;
int DynamicNodes::nodes_size() const {
  return nodes_.size();
}
void DynamicNodes::clear_nodes() {
  nodes_.Clear();
}
const ::proto::DynamicLayerNodes& DynamicNodes::nodes(int index) const {
  // @@protoc_insertion_point(field_get:proto.DynamicNodes.nodes)
  return nodes_.Get(index);
}
::proto::DynamicLayerNodes* DynamicNodes::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DynamicNodes.nodes)
  return nodes_.Mutable(index);
}
::proto::DynamicLayerNodes* DynamicNodes::add_nodes() {
  // @@protoc_insertion_point(field_add:proto.DynamicNodes.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::DynamicLayerNodes >*
DynamicNodes::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:proto.DynamicNodes.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::DynamicLayerNodes >&
DynamicNodes::nodes() const {
  // @@protoc_insertion_point(field_list:proto.DynamicNodes.nodes)
  return nodes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonAddObstacleRsp::kDynamicNodesFieldNumber;
const int ToTheMoonAddObstacleRsp::kQueryIdFieldNumber;
const int ToTheMoonAddObstacleRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonAddObstacleRsp::ToTheMoonAddObstacleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonAddObstacleRsp)
}
ToTheMoonAddObstacleRsp::ToTheMoonAddObstacleRsp(const ToTheMoonAddObstacleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dynamic_nodes()) {
    dynamic_nodes_ = new ::proto::DynamicNodes(*from.dynamic_nodes_);
  } else {
    dynamic_nodes_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(query_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonAddObstacleRsp)
}

void ToTheMoonAddObstacleRsp::SharedCtor() {
  ::memset(&dynamic_nodes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&dynamic_nodes_)) + sizeof(query_id_));
  _cached_size_ = 0;
}

ToTheMoonAddObstacleRsp::~ToTheMoonAddObstacleRsp() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonAddObstacleRsp)
  SharedDtor();
}

void ToTheMoonAddObstacleRsp::SharedDtor() {
  if (this != internal_default_instance()) delete dynamic_nodes_;
}

void ToTheMoonAddObstacleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonAddObstacleRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonAddObstacleRsp& ToTheMoonAddObstacleRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonAddObstacleRsp* ToTheMoonAddObstacleRsp::New(::google::protobuf::Arena* arena) const {
  ToTheMoonAddObstacleRsp* n = new ToTheMoonAddObstacleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonAddObstacleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonAddObstacleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dynamic_nodes_ != NULL) {
    delete dynamic_nodes_;
  }
  dynamic_nodes_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(query_id_));
  _internal_metadata_.Clear();
}

bool ToTheMoonAddObstacleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonAddObstacleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DynamicNodes dynamic_nodes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 query_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonAddObstacleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonAddObstacleRsp)
  return false;
#undef DO_
}

void ToTheMoonAddObstacleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonAddObstacleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DynamicNodes dynamic_nodes = 2;
  if (this->has_dynamic_nodes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dynamic_nodes_, output);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  // int32 query_id = 13;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->query_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonAddObstacleRsp)
}

::google::protobuf::uint8* ToTheMoonAddObstacleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonAddObstacleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DynamicNodes dynamic_nodes = 2;
  if (this->has_dynamic_nodes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dynamic_nodes_, deterministic, target);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  // int32 query_id = 13;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->query_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonAddObstacleRsp)
  return target;
}

size_t ToTheMoonAddObstacleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonAddObstacleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.DynamicNodes dynamic_nodes = 2;
  if (this->has_dynamic_nodes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dynamic_nodes_);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // int32 query_id = 13;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->query_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonAddObstacleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonAddObstacleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonAddObstacleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonAddObstacleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonAddObstacleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonAddObstacleRsp)
    MergeFrom(*source);
  }
}

void ToTheMoonAddObstacleRsp::MergeFrom(const ToTheMoonAddObstacleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonAddObstacleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dynamic_nodes()) {
    mutable_dynamic_nodes()->::proto::DynamicNodes::MergeFrom(from.dynamic_nodes());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
}

void ToTheMoonAddObstacleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonAddObstacleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonAddObstacleRsp::CopyFrom(const ToTheMoonAddObstacleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonAddObstacleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonAddObstacleRsp::IsInitialized() const {
  return true;
}

void ToTheMoonAddObstacleRsp::Swap(ToTheMoonAddObstacleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonAddObstacleRsp::InternalSwap(ToTheMoonAddObstacleRsp* other) {
  using std::swap;
  swap(dynamic_nodes_, other->dynamic_nodes_);
  swap(retcode_, other->retcode_);
  swap(query_id_, other->query_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonAddObstacleRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonAddObstacleRsp

// .proto.DynamicNodes dynamic_nodes = 2;
bool ToTheMoonAddObstacleRsp::has_dynamic_nodes() const {
  return this != internal_default_instance() && dynamic_nodes_ != NULL;
}
void ToTheMoonAddObstacleRsp::clear_dynamic_nodes() {
  if (GetArenaNoVirtual() == NULL && dynamic_nodes_ != NULL) delete dynamic_nodes_;
  dynamic_nodes_ = NULL;
}
const ::proto::DynamicNodes& ToTheMoonAddObstacleRsp::dynamic_nodes() const {
  const ::proto::DynamicNodes* p = dynamic_nodes_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DynamicNodes*>(
      &::proto::_DynamicNodes_default_instance_);
}
::proto::DynamicNodes* ToTheMoonAddObstacleRsp::mutable_dynamic_nodes() {
  
  if (dynamic_nodes_ == NULL) {
    dynamic_nodes_ = new ::proto::DynamicNodes;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
  return dynamic_nodes_;
}
::proto::DynamicNodes* ToTheMoonAddObstacleRsp::release_dynamic_nodes() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
  
  ::proto::DynamicNodes* temp = dynamic_nodes_;
  dynamic_nodes_ = NULL;
  return temp;
}
void ToTheMoonAddObstacleRsp::set_allocated_dynamic_nodes(::proto::DynamicNodes* dynamic_nodes) {
  delete dynamic_nodes_;
  dynamic_nodes_ = dynamic_nodes;
  if (dynamic_nodes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonAddObstacleRsp.dynamic_nodes)
}

// int32 query_id = 13;
void ToTheMoonAddObstacleRsp::clear_query_id() {
  query_id_ = 0;
}
::google::protobuf::int32 ToTheMoonAddObstacleRsp::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleRsp.query_id)
  return query_id_;
}
void ToTheMoonAddObstacleRsp::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleRsp.query_id)
}

// int32 retcode = 11;
void ToTheMoonAddObstacleRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ToTheMoonAddObstacleRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonAddObstacleRsp.retcode)
  return retcode_;
}
void ToTheMoonAddObstacleRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonAddObstacleRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonRemoveObstacleReq::kHandleFieldNumber;
const int ToTheMoonRemoveObstacleReq::kSceneIdFieldNumber;
const int ToTheMoonRemoveObstacleReq::kQueryIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonRemoveObstacleReq::ToTheMoonRemoveObstacleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonRemoveObstacleReq)
}
ToTheMoonRemoveObstacleReq::ToTheMoonRemoveObstacleReq(const ToTheMoonRemoveObstacleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_id_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(query_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonRemoveObstacleReq)
}

void ToTheMoonRemoveObstacleReq::SharedCtor() {
  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(query_id_));
  _cached_size_ = 0;
}

ToTheMoonRemoveObstacleReq::~ToTheMoonRemoveObstacleReq() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonRemoveObstacleReq)
  SharedDtor();
}

void ToTheMoonRemoveObstacleReq::SharedDtor() {
}

void ToTheMoonRemoveObstacleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonRemoveObstacleReq::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonRemoveObstacleReq& ToTheMoonRemoveObstacleReq::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonRemoveObstacleReq* ToTheMoonRemoveObstacleReq::New(::google::protobuf::Arena* arena) const {
  ToTheMoonRemoveObstacleReq* n = new ToTheMoonRemoveObstacleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonRemoveObstacleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonRemoveObstacleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(query_id_));
  _internal_metadata_.Clear();
}

bool ToTheMoonRemoveObstacleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonRemoveObstacleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 query_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 handle = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonRemoveObstacleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonRemoveObstacleReq)
  return false;
#undef DO_
}

void ToTheMoonRemoveObstacleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonRemoveObstacleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->scene_id(), output);
  }

  // int32 query_id = 11;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->query_id(), output);
  }

  // int32 handle = 12;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonRemoveObstacleReq)
}

::google::protobuf::uint8* ToTheMoonRemoveObstacleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonRemoveObstacleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->scene_id(), target);
  }

  // int32 query_id = 11;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->query_id(), target);
  }

  // int32 handle = 12;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->handle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonRemoveObstacleReq)
  return target;
}

size_t ToTheMoonRemoveObstacleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonRemoveObstacleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 handle = 12;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->handle());
  }

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // int32 query_id = 11;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->query_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonRemoveObstacleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonRemoveObstacleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonRemoveObstacleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonRemoveObstacleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonRemoveObstacleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonRemoveObstacleReq)
    MergeFrom(*source);
  }
}

void ToTheMoonRemoveObstacleReq::MergeFrom(const ToTheMoonRemoveObstacleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonRemoveObstacleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle() != 0) {
    set_handle(from.handle());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
}

void ToTheMoonRemoveObstacleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonRemoveObstacleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonRemoveObstacleReq::CopyFrom(const ToTheMoonRemoveObstacleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonRemoveObstacleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonRemoveObstacleReq::IsInitialized() const {
  return true;
}

void ToTheMoonRemoveObstacleReq::Swap(ToTheMoonRemoveObstacleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonRemoveObstacleReq::InternalSwap(ToTheMoonRemoveObstacleReq* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(scene_id_, other->scene_id_);
  swap(query_id_, other->query_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonRemoveObstacleReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonRemoveObstacleReq

// int32 handle = 12;
void ToTheMoonRemoveObstacleReq::clear_handle() {
  handle_ = 0;
}
::google::protobuf::int32 ToTheMoonRemoveObstacleReq::handle() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleReq.handle)
  return handle_;
}
void ToTheMoonRemoveObstacleReq::set_handle(::google::protobuf::int32 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleReq.handle)
}

// uint32 scene_id = 10;
void ToTheMoonRemoveObstacleReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ToTheMoonRemoveObstacleReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleReq.scene_id)
  return scene_id_;
}
void ToTheMoonRemoveObstacleReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleReq.scene_id)
}

// int32 query_id = 11;
void ToTheMoonRemoveObstacleReq::clear_query_id() {
  query_id_ = 0;
}
::google::protobuf::int32 ToTheMoonRemoveObstacleReq::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleReq.query_id)
  return query_id_;
}
void ToTheMoonRemoveObstacleReq::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleReq.query_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonRemoveObstacleRsp::kQueryIdFieldNumber;
const int ToTheMoonRemoveObstacleRsp::kRetcodeFieldNumber;
const int ToTheMoonRemoveObstacleRsp::kDynamicNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonRemoveObstacleRsp::ToTheMoonRemoveObstacleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonRemoveObstacleRsp)
}
ToTheMoonRemoveObstacleRsp::ToTheMoonRemoveObstacleRsp(const ToTheMoonRemoveObstacleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dynamic_nodes()) {
    dynamic_nodes_ = new ::proto::DynamicNodes(*from.dynamic_nodes_);
  } else {
    dynamic_nodes_ = NULL;
  }
  ::memcpy(&query_id_, &from.query_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&query_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonRemoveObstacleRsp)
}

void ToTheMoonRemoveObstacleRsp::SharedCtor() {
  ::memset(&dynamic_nodes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&dynamic_nodes_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ToTheMoonRemoveObstacleRsp::~ToTheMoonRemoveObstacleRsp() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonRemoveObstacleRsp)
  SharedDtor();
}

void ToTheMoonRemoveObstacleRsp::SharedDtor() {
  if (this != internal_default_instance()) delete dynamic_nodes_;
}

void ToTheMoonRemoveObstacleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonRemoveObstacleRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonRemoveObstacleRsp& ToTheMoonRemoveObstacleRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonRemoveObstacleRsp* ToTheMoonRemoveObstacleRsp::New(::google::protobuf::Arena* arena) const {
  ToTheMoonRemoveObstacleRsp* n = new ToTheMoonRemoveObstacleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonRemoveObstacleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonRemoveObstacleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dynamic_nodes_ != NULL) {
    delete dynamic_nodes_;
  }
  dynamic_nodes_ = NULL;
  ::memset(&query_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&query_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ToTheMoonRemoveObstacleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonRemoveObstacleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 query_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DynamicNodes dynamic_nodes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonRemoveObstacleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonRemoveObstacleRsp)
  return false;
#undef DO_
}

void ToTheMoonRemoveObstacleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonRemoveObstacleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 query_id = 3;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->query_id(), output);
  }

  // .proto.DynamicNodes dynamic_nodes = 8;
  if (this->has_dynamic_nodes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->dynamic_nodes_, output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonRemoveObstacleRsp)
}

::google::protobuf::uint8* ToTheMoonRemoveObstacleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonRemoveObstacleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 query_id = 3;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->query_id(), target);
  }

  // .proto.DynamicNodes dynamic_nodes = 8;
  if (this->has_dynamic_nodes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->dynamic_nodes_, deterministic, target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonRemoveObstacleRsp)
  return target;
}

size_t ToTheMoonRemoveObstacleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonRemoveObstacleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.DynamicNodes dynamic_nodes = 8;
  if (this->has_dynamic_nodes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dynamic_nodes_);
  }

  // int32 query_id = 3;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->query_id());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonRemoveObstacleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonRemoveObstacleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonRemoveObstacleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonRemoveObstacleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonRemoveObstacleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonRemoveObstacleRsp)
    MergeFrom(*source);
  }
}

void ToTheMoonRemoveObstacleRsp::MergeFrom(const ToTheMoonRemoveObstacleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonRemoveObstacleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dynamic_nodes()) {
    mutable_dynamic_nodes()->::proto::DynamicNodes::MergeFrom(from.dynamic_nodes());
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ToTheMoonRemoveObstacleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonRemoveObstacleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonRemoveObstacleRsp::CopyFrom(const ToTheMoonRemoveObstacleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonRemoveObstacleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonRemoveObstacleRsp::IsInitialized() const {
  return true;
}

void ToTheMoonRemoveObstacleRsp::Swap(ToTheMoonRemoveObstacleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonRemoveObstacleRsp::InternalSwap(ToTheMoonRemoveObstacleRsp* other) {
  using std::swap;
  swap(dynamic_nodes_, other->dynamic_nodes_);
  swap(query_id_, other->query_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonRemoveObstacleRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonRemoveObstacleRsp

// int32 query_id = 3;
void ToTheMoonRemoveObstacleRsp::clear_query_id() {
  query_id_ = 0;
}
::google::protobuf::int32 ToTheMoonRemoveObstacleRsp::query_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleRsp.query_id)
  return query_id_;
}
void ToTheMoonRemoveObstacleRsp::set_query_id(::google::protobuf::int32 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleRsp.query_id)
}

// int32 retcode = 14;
void ToTheMoonRemoveObstacleRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ToTheMoonRemoveObstacleRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleRsp.retcode)
  return retcode_;
}
void ToTheMoonRemoveObstacleRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonRemoveObstacleRsp.retcode)
}

// .proto.DynamicNodes dynamic_nodes = 8;
bool ToTheMoonRemoveObstacleRsp::has_dynamic_nodes() const {
  return this != internal_default_instance() && dynamic_nodes_ != NULL;
}
void ToTheMoonRemoveObstacleRsp::clear_dynamic_nodes() {
  if (GetArenaNoVirtual() == NULL && dynamic_nodes_ != NULL) delete dynamic_nodes_;
  dynamic_nodes_ = NULL;
}
const ::proto::DynamicNodes& ToTheMoonRemoveObstacleRsp::dynamic_nodes() const {
  const ::proto::DynamicNodes* p = dynamic_nodes_;
  // @@protoc_insertion_point(field_get:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DynamicNodes*>(
      &::proto::_DynamicNodes_default_instance_);
}
::proto::DynamicNodes* ToTheMoonRemoveObstacleRsp::mutable_dynamic_nodes() {
  
  if (dynamic_nodes_ == NULL) {
    dynamic_nodes_ = new ::proto::DynamicNodes;
  }
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
  return dynamic_nodes_;
}
::proto::DynamicNodes* ToTheMoonRemoveObstacleRsp::release_dynamic_nodes() {
  // @@protoc_insertion_point(field_release:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
  
  ::proto::DynamicNodes* temp = dynamic_nodes_;
  dynamic_nodes_ = NULL;
  return temp;
}
void ToTheMoonRemoveObstacleRsp::set_allocated_dynamic_nodes(::proto::DynamicNodes* dynamic_nodes) {
  delete dynamic_nodes_;
  dynamic_nodes_ = dynamic_nodes;
  if (dynamic_nodes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ToTheMoonRemoveObstacleRsp.dynamic_nodes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTheMoonObstaclesModifyNotify::kAddObstaclesFieldNumber;
const int ToTheMoonObstaclesModifyNotify::kRemoveObstacleIdsFieldNumber;
const int ToTheMoonObstaclesModifyNotify::kSceneIdFieldNumber;
const int ToTheMoonObstaclesModifyNotify::kUseEdgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTheMoonObstaclesModifyNotify::ToTheMoonObstaclesModifyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ToTheMoonObstaclesModifyNotify)
}
ToTheMoonObstaclesModifyNotify::ToTheMoonObstaclesModifyNotify(const ToTheMoonObstaclesModifyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      add_obstacles_(from.add_obstacles_),
      remove_obstacle_ids_(from.remove_obstacle_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&use_edge_, &from.use_edge_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&use_edge_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ToTheMoonObstaclesModifyNotify)
}

void ToTheMoonObstaclesModifyNotify::SharedCtor() {
  ::memset(&use_edge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&use_edge_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

ToTheMoonObstaclesModifyNotify::~ToTheMoonObstaclesModifyNotify() {
  // @@protoc_insertion_point(destructor:proto.ToTheMoonObstaclesModifyNotify)
  SharedDtor();
}

void ToTheMoonObstaclesModifyNotify::SharedDtor() {
}

void ToTheMoonObstaclesModifyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToTheMoonObstaclesModifyNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTheMoonObstaclesModifyNotify& ToTheMoonObstaclesModifyNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ToTheMoonObstaclesModifyNotify* ToTheMoonObstaclesModifyNotify::New(::google::protobuf::Arena* arena) const {
  ToTheMoonObstaclesModifyNotify* n = new ToTheMoonObstaclesModifyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToTheMoonObstaclesModifyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ToTheMoonObstaclesModifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  add_obstacles_.Clear();
  remove_obstacle_ids_.Clear();
  ::memset(&use_edge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&use_edge_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool ToTheMoonObstaclesModifyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ToTheMoonObstaclesModifyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_edge = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_edge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ToTheMoonObstacleInfo add_obstacles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_add_obstacles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_obstacle_ids = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_obstacle_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106u, input, this->mutable_remove_obstacle_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ToTheMoonObstaclesModifyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ToTheMoonObstaclesModifyNotify)
  return false;
#undef DO_
}

void ToTheMoonObstaclesModifyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ToTheMoonObstaclesModifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_edge = 1;
  if (this->use_edge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_edge(), output);
  }

  // repeated .proto.ToTheMoonObstacleInfo add_obstacles = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->add_obstacles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->add_obstacles(static_cast<int>(i)), output);
  }

  // repeated int32 remove_obstacle_ids = 13;
  if (this->remove_obstacle_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remove_obstacle_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->remove_obstacle_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->remove_obstacle_ids(i), output);
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ToTheMoonObstaclesModifyNotify)
}

::google::protobuf::uint8* ToTheMoonObstaclesModifyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ToTheMoonObstaclesModifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_edge = 1;
  if (this->use_edge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_edge(), target);
  }

  // repeated .proto.ToTheMoonObstacleInfo add_obstacles = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->add_obstacles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->add_obstacles(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 remove_obstacle_ids = 13;
  if (this->remove_obstacle_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _remove_obstacle_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->remove_obstacle_ids_, target);
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ToTheMoonObstaclesModifyNotify)
  return target;
}

size_t ToTheMoonObstaclesModifyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ToTheMoonObstaclesModifyNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ToTheMoonObstacleInfo add_obstacles = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->add_obstacles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->add_obstacles(static_cast<int>(i)));
    }
  }

  // repeated int32 remove_obstacle_ids = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_obstacle_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remove_obstacle_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool use_edge = 1;
  if (this->use_edge() != 0) {
    total_size += 1 + 1;
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToTheMoonObstaclesModifyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ToTheMoonObstaclesModifyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTheMoonObstaclesModifyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTheMoonObstaclesModifyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ToTheMoonObstaclesModifyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ToTheMoonObstaclesModifyNotify)
    MergeFrom(*source);
  }
}

void ToTheMoonObstaclesModifyNotify::MergeFrom(const ToTheMoonObstaclesModifyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ToTheMoonObstaclesModifyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  add_obstacles_.MergeFrom(from.add_obstacles_);
  remove_obstacle_ids_.MergeFrom(from.remove_obstacle_ids_);
  if (from.use_edge() != 0) {
    set_use_edge(from.use_edge());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ToTheMoonObstaclesModifyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ToTheMoonObstaclesModifyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTheMoonObstaclesModifyNotify::CopyFrom(const ToTheMoonObstaclesModifyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ToTheMoonObstaclesModifyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTheMoonObstaclesModifyNotify::IsInitialized() const {
  return true;
}

void ToTheMoonObstaclesModifyNotify::Swap(ToTheMoonObstaclesModifyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTheMoonObstaclesModifyNotify::InternalSwap(ToTheMoonObstaclesModifyNotify* other) {
  using std::swap;
  add_obstacles_.InternalSwap(&other->add_obstacles_);
  remove_obstacle_ids_.InternalSwap(&other->remove_obstacle_ids_);
  swap(use_edge_, other->use_edge_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToTheMoonObstaclesModifyNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftothemoon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftothemoon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToTheMoonObstaclesModifyNotify

// repeated .proto.ToTheMoonObstacleInfo add_obstacles = 4;
int ToTheMoonObstaclesModifyNotify::add_obstacles_size() const {
  return add_obstacles_.size();
}
void ToTheMoonObstaclesModifyNotify::clear_add_obstacles() {
  add_obstacles_.Clear();
}
const ::proto::ToTheMoonObstacleInfo& ToTheMoonObstaclesModifyNotify::add_obstacles(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_.Get(index);
}
::proto::ToTheMoonObstacleInfo* ToTheMoonObstaclesModifyNotify::mutable_add_obstacles(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_.Mutable(index);
}
::proto::ToTheMoonObstacleInfo* ToTheMoonObstaclesModifyNotify::add_add_obstacles() {
  // @@protoc_insertion_point(field_add:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ToTheMoonObstacleInfo >*
ToTheMoonObstaclesModifyNotify::mutable_add_obstacles() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return &add_obstacles_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ToTheMoonObstacleInfo >&
ToTheMoonObstaclesModifyNotify::add_obstacles() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonObstaclesModifyNotify.add_obstacles)
  return add_obstacles_;
}

// repeated int32 remove_obstacle_ids = 13;
int ToTheMoonObstaclesModifyNotify::remove_obstacle_ids_size() const {
  return remove_obstacle_ids_.size();
}
void ToTheMoonObstaclesModifyNotify::clear_remove_obstacle_ids() {
  remove_obstacle_ids_.Clear();
}
::google::protobuf::int32 ToTheMoonObstaclesModifyNotify::remove_obstacle_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
  return remove_obstacle_ids_.Get(index);
}
void ToTheMoonObstaclesModifyNotify::set_remove_obstacle_ids(int index, ::google::protobuf::int32 value) {
  remove_obstacle_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
}
void ToTheMoonObstaclesModifyNotify::add_remove_obstacle_ids(::google::protobuf::int32 value) {
  remove_obstacle_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ToTheMoonObstaclesModifyNotify::remove_obstacle_ids() const {
  // @@protoc_insertion_point(field_list:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
  return remove_obstacle_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ToTheMoonObstaclesModifyNotify::mutable_remove_obstacle_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.ToTheMoonObstaclesModifyNotify.remove_obstacle_ids)
  return &remove_obstacle_ids_;
}

// uint32 scene_id = 15;
void ToTheMoonObstaclesModifyNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ToTheMoonObstaclesModifyNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.scene_id)
  return scene_id_;
}
void ToTheMoonObstaclesModifyNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstaclesModifyNotify.scene_id)
}

// bool use_edge = 1;
void ToTheMoonObstaclesModifyNotify::clear_use_edge() {
  use_edge_ = false;
}
bool ToTheMoonObstaclesModifyNotify::use_edge() const {
  // @@protoc_insertion_point(field_get:proto.ToTheMoonObstaclesModifyNotify.use_edge)
  return use_edge_;
}
void ToTheMoonObstaclesModifyNotify::set_use_edge(bool value) {
  
  use_edge_ = value;
  // @@protoc_insertion_point(field_set:proto.ToTheMoonObstaclesModifyNotify.use_edge)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
