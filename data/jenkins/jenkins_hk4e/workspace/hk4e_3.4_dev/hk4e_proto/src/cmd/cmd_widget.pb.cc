// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_widget.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_widget.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class AnchorPointDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorPointData>
     _instance;
} _AnchorPointData_default_instance_;
class AnchorPointDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorPointDataNotify>
     _instance;
} _AnchorPointDataNotify_default_instance_;
class AnchorPointOpReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorPointOpReq>
     _instance;
} _AnchorPointOpReq_default_instance_;
class AnchorPointOpRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnchorPointOpRsp>
     _instance;
} _AnchorPointOpRsp_default_instance_;
class LunchBoxData_SlotMaterialMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LunchBoxData::LunchBoxData_SlotMaterialMapEntry>
     _instance;
} _LunchBoxData_SlotMaterialMapEntry_default_instance_;
class LunchBoxDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LunchBoxData>
     _instance;
} _LunchBoxData_default_instance_;
class SetUpLunchBoxWidgetReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetUpLunchBoxWidgetReq>
     _instance;
} _SetUpLunchBoxWidgetReq_default_instance_;
class SetUpLunchBoxWidgetRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetUpLunchBoxWidgetRsp>
     _instance;
} _SetUpLunchBoxWidgetRsp_default_instance_;
class OneoffGatherPointDetectorDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OneoffGatherPointDetectorData>
     _instance;
} _OneoffGatherPointDetectorData_default_instance_;
class ClientCollectorDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientCollectorData>
     _instance;
} _ClientCollectorData_default_instance_;
class TreasureMapDetectorDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TreasureMapDetectorData>
     _instance;
} _TreasureMapDetectorData_default_instance_;
class SkyCrystalDetectorDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkyCrystalDetectorData>
     _instance;
} _SkyCrystalDetectorData_default_instance_;
class SkyCrystalDetectorQuickUseResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkyCrystalDetectorQuickUseResult>
     _instance;
} _SkyCrystalDetectorQuickUseResult_default_instance_;
class WeatherWizardDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WeatherWizardData>
     _instance;
} _WeatherWizardData_default_instance_;
class WidgetCameraInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetCameraInfo>
     _instance;
} _WidgetCameraInfo_default_instance_;
class WidgetThunderBirdFeatherInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetThunderBirdFeatherInfo>
     _instance;
} _WidgetThunderBirdFeatherInfo_default_instance_;
class QuickUseWidgetReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuickUseWidgetReq>
     _instance;
  const ::proto::WidgetCreateLocationInfo* location_info_;
  const ::proto::WidgetCameraInfo* camera_info_;
  const ::proto::WidgetCreatorInfo* creator_info_;
  const ::proto::WidgetThunderBirdFeatherInfo* thunder_bird_feather_info_;
} _QuickUseWidgetReq_default_instance_;
class QuickUseWidgetRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuickUseWidgetRsp>
     _instance;
  const ::proto::OneoffGatherPointDetectorData* detector_data_;
  const ::proto::ClientCollectorData* client_collector_data_;
  const ::proto::SkyCrystalDetectorQuickUseResult* sky_crystal_detector_quick_use_result_;
} _QuickUseWidgetRsp_default_instance_;
class WidgetCoolDownDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetCoolDownData>
     _instance;
} _WidgetCoolDownData_default_instance_;
class WidgetCoolDownNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetCoolDownNotify>
     _instance;
} _WidgetCoolDownNotify_default_instance_;
class WidgetReportReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetReportReq>
     _instance;
} _WidgetReportReq_default_instance_;
class WidgetReportRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetReportRsp>
     _instance;
} _WidgetReportRsp_default_instance_;
class ClientCollectorDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientCollectorDataNotify>
     _instance;
} _ClientCollectorDataNotify_default_instance_;
class OneoffGatherPointDetectorDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OneoffGatherPointDetectorDataNotify>
     _instance;
} _OneoffGatherPointDetectorDataNotify_default_instance_;
class SkyCrystalDetectorDataUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkyCrystalDetectorDataUpdateNotify>
     _instance;
} _SkyCrystalDetectorDataUpdateNotify_default_instance_;
class TreasureMapDetectorDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TreasureMapDetectorDataNotify>
     _instance;
} _TreasureMapDetectorDataNotify_default_instance_;
class WidgetSlotDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetSlotData>
     _instance;
} _WidgetSlotData_default_instance_;
class SetWidgetSlotReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetWidgetSlotReq>
     _instance;
} _SetWidgetSlotReq_default_instance_;
class SetWidgetSlotRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetWidgetSlotRsp>
     _instance;
} _SetWidgetSlotRsp_default_instance_;
class WidgetSlotChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetSlotChangeNotify>
     _instance;
} _WidgetSlotChangeNotify_default_instance_;
class GetWidgetSlotReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetWidgetSlotReq>
     _instance;
} _GetWidgetSlotReq_default_instance_;
class GetWidgetSlotRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetWidgetSlotRsp>
     _instance;
} _GetWidgetSlotRsp_default_instance_;
class AllWidgetDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AllWidgetDataNotify>
     _instance;
} _AllWidgetDataNotify_default_instance_;
class UseWidgetCreateGadgetReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UseWidgetCreateGadgetReq>
     _instance;
} _UseWidgetCreateGadgetReq_default_instance_;
class UseWidgetCreateGadgetRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UseWidgetCreateGadgetRsp>
     _instance;
} _UseWidgetCreateGadgetRsp_default_instance_;
class UseWidgetRetractGadgetReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UseWidgetRetractGadgetReq>
     _instance;
} _UseWidgetRetractGadgetReq_default_instance_;
class UseWidgetRetractGadgetRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UseWidgetRetractGadgetRsp>
     _instance;
} _UseWidgetRetractGadgetRsp_default_instance_;
class WidgetGadgetDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetGadgetData>
     _instance;
} _WidgetGadgetData_default_instance_;
class WidgetGadgetAllDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetGadgetAllDataNotify>
     _instance;
} _WidgetGadgetAllDataNotify_default_instance_;
class WidgetGadgetDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetGadgetDataNotify>
     _instance;
} _WidgetGadgetDataNotify_default_instance_;
class WidgetGadgetDestroyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetGadgetDestroyNotify>
     _instance;
} _WidgetGadgetDestroyNotify_default_instance_;
class WidgetCreateLocationInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetCreateLocationInfo>
     _instance;
} _WidgetCreateLocationInfo_default_instance_;
class WidgetCreatorInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetCreatorInfo>
     _instance;
} _WidgetCreatorInfo_default_instance_;
class WidgetDoBagReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetDoBagReq>
     _instance;
  const ::proto::WidgetCreateLocationInfo* location_info_;
  const ::proto::WidgetCreatorInfo* widget_creator_info_;
} _WidgetDoBagReq_default_instance_;
class WidgetDoBagRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetDoBagRsp>
     _instance;
} _WidgetDoBagRsp_default_instance_;
class WidgetActiveChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetActiveChangeNotify>
     _instance;
} _WidgetActiveChangeNotify_default_instance_;
class WidgetUseAttachAbilityGroupChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetUseAttachAbilityGroupChangeNotify>
     _instance;
} _WidgetUseAttachAbilityGroupChangeNotify_default_instance_;
class WidgetCaptureAnimalReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetCaptureAnimalReq>
     _instance;
} _WidgetCaptureAnimalReq_default_instance_;
class WidgetCaptureAnimalRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetCaptureAnimalRsp>
     _instance;
} _WidgetCaptureAnimalRsp_default_instance_;
class WidgetUpdateExtraCDReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetUpdateExtraCDReq>
     _instance;
} _WidgetUpdateExtraCDReq_default_instance_;
class WidgetUpdateExtraCDRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetUpdateExtraCDRsp>
     _instance;
} _WidgetUpdateExtraCDRsp_default_instance_;
class FireworksReformParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FireworksReformParam>
     _instance;
} _FireworksReformParam_default_instance_;
class FireworksReformDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FireworksReformData>
     _instance;
} _FireworksReformData_default_instance_;
class FireworksReformDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FireworksReformDataNotify>
     _instance;
} _FireworksReformDataNotify_default_instance_;
class ReformFireworksReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReformFireworksReq>
     _instance;
} _ReformFireworksReq_default_instance_;
class ReformFireworksRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReformFireworksRsp>
     _instance;
} _ReformFireworksRsp_default_instance_;
class FireworksLaunchParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FireworksLaunchParam>
     _instance;
} _FireworksLaunchParam_default_instance_;
class FireworksLaunchSchemeDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FireworksLaunchSchemeData>
     _instance;
} _FireworksLaunchSchemeData_default_instance_;
class LaunchFireworksReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaunchFireworksReq>
     _instance;
} _LaunchFireworksReq_default_instance_;
class LaunchFireworksRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaunchFireworksRsp>
     _instance;
} _LaunchFireworksRsp_default_instance_;
class FireworksLaunchDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FireworksLaunchDataNotify>
     _instance;
} _FireworksLaunchDataNotify_default_instance_;
class ChangeWidgetBackgroundActiveStateReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeWidgetBackgroundActiveStateReq>
     _instance;
} _ChangeWidgetBackgroundActiveStateReq_default_instance_;
class ChangeWidgetBackgroundActiveStateRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChangeWidgetBackgroundActiveStateRsp>
     _instance;
} _ChangeWidgetBackgroundActiveStateRsp_default_instance_;
class AllWidgetBackgroundActiveStateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AllWidgetBackgroundActiveStateNotify>
     _instance;
} _AllWidgetBackgroundActiveStateNotify_default_instance_;
class PlayerWidgetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerWidgetInfo>
     _instance;
} _PlayerWidgetInfo_default_instance_;
class RemotePlayerWidgetNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemotePlayerWidgetNotify>
     _instance;
} _RemotePlayerWidgetNotify_default_instance_;
class WidgetWeatherWizardDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WidgetWeatherWizardDataNotify>
     _instance;
} _WidgetWeatherWizardDataNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fwidget_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[67];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointData, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointData, anchor_point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointData, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointData, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointData, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointDataNotify, anchor_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointDataNotify, next_usable_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointOpReq, anchor_point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointOpReq, anchor_point_op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointOpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointOpRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointOpRsp, anchor_point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnchorPointOpRsp, anchor_point_op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LunchBoxData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LunchBoxData, slot_material_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpLunchBoxWidgetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpLunchBoxWidgetReq, lunch_box_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpLunchBoxWidgetRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpLunchBoxWidgetRsp, lunch_box_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetUpLunchBoxWidgetRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, hint_center_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, hint_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, is_all_collected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorData, is_hint_valid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCollectorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCollectorData, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCollectorData, max_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCollectorData, curr_points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorData, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorData, center_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorData, is_region_detected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorData, spot_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorData, radius_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorData, is_hint_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorData, hint_center_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorData, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorData, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorQuickUseResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorQuickUseResult, sky_crystal_detector_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorQuickUseResult, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeatherWizardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeatherWizardData, shield_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCameraInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCameraInfo, target_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetThunderBirdFeatherInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetThunderBirdFeatherInfo, entity_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(QuickUseWidgetReqDefaultTypeInternal, location_info_),
  offsetof(QuickUseWidgetReqDefaultTypeInternal, camera_info_),
  offsetof(QuickUseWidgetReqDefaultTypeInternal, creator_info_),
  offsetof(QuickUseWidgetReqDefaultTypeInternal, thunder_bird_feather_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetReq, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetRsp, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetRsp, retcode_),
  offsetof(QuickUseWidgetRspDefaultTypeInternal, detector_data_),
  offsetof(QuickUseWidgetRspDefaultTypeInternal, client_collector_data_),
  offsetof(QuickUseWidgetRspDefaultTypeInternal, sky_crystal_detector_quick_use_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickUseWidgetRsp, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCoolDownData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCoolDownData, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCoolDownData, cool_down_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCoolDownData, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCoolDownNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCoolDownNotify, normal_cool_down_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCoolDownNotify, group_cool_down_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportReq, weather_wizard_shield_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportReq, is_clear_sky_crystal_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportReq, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportReq, is_client_collect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportReq, is_clear_hint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetReportRsp, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCollectorDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCollectorDataNotify, client_collector_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneoffGatherPointDetectorDataNotify, oneoff_gather_point_detector_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorDataUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkyCrystalDetectorDataUpdateNotify, sky_crystal_detector_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TreasureMapDetectorDataNotify, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotData, cd_over_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotData, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotData, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotData, is_active_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotReq, tag_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotReq, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotReq, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotRsp, tag_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotRsp, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetWidgetSlotRsp, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotChangeNotify, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetSlotChangeNotify, slot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWidgetSlotReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWidgetSlotRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWidgetSlotRsp, slot_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetWidgetSlotRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, weather_wizard_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, oneoff_gather_point_detector_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, normal_cool_down_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, lunch_box_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, sky_crystal_detector_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, client_collector_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, anchor_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, cool_down_group_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, next_anchor_point_usable_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, slot_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetDataNotify, background_active_widget_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetCreateGadgetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetCreateGadgetReq, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetCreateGadgetReq, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetCreateGadgetReq, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetCreateGadgetRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetCreateGadgetRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetCreateGadgetRsp, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetRetractGadgetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetRetractGadgetReq, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetRetractGadgetRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetRetractGadgetRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseWidgetRetractGadgetRsp, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetData, gadget_entity_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetData, gadget_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetAllDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetAllDataNotify, widget_gadget_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetDataNotify, widget_gadget_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetDestroyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetGadgetDestroyNotify, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCreateLocationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCreateLocationInfo, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCreateLocationInfo, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCreatorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCreatorInfo, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCreatorInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCreatorInfo, location_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetDoBagReq, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetDoBagReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetDoBagReq, material_id_),
  offsetof(WidgetDoBagReqDefaultTypeInternal, location_info_),
  offsetof(WidgetDoBagReqDefaultTypeInternal, widget_creator_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetDoBagReq, op_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetDoBagRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetDoBagRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetDoBagRsp, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetActiveChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetActiveChangeNotify, widget_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUseAttachAbilityGroupChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUseAttachAbilityGroupChangeNotify, is_attach_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUseAttachAbilityGroupChangeNotify, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalReq, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalReq, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalReq, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalRsp, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetCaptureAnimalRsp, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDReq, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDReq, extra_cd_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDReq, cd_group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDRsp, material_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDRsp, extra_cd_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDRsp, cool_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetUpdateExtraCDRsp, cd_group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformParam, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformParam, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformData, reform_param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksReformDataNotify, fireworks_reform_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReformFireworksReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReformFireworksReq, fireworks_reform_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReformFireworksRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReformFireworksRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchParam, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchParam, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchSchemeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchSchemeData, scheme_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchSchemeData, fireworks_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchSchemeData, launch_param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaunchFireworksReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaunchFireworksReq, scheme_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaunchFireworksRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaunchFireworksRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchDataNotify, scheme_data_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworksLaunchDataNotify, last_use_scheme_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeWidgetBackgroundActiveStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeWidgetBackgroundActiveStateReq, is_active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeWidgetBackgroundActiveStateReq, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeWidgetBackgroundActiveStateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeWidgetBackgroundActiveStateRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeWidgetBackgroundActiveStateRsp, material_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetBackgroundActiveStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllWidgetBackgroundActiveStateNotify, background_active_widget_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerWidgetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerWidgetInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerWidgetInfo, slot_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemotePlayerWidgetNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemotePlayerWidgetNotify, player_widget_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetWeatherWizardDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WidgetWeatherWizardDataNotify, shield_value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AnchorPointData)},
  { 10, -1, sizeof(AnchorPointDataNotify)},
  { 17, -1, sizeof(AnchorPointOpReq)},
  { 24, -1, sizeof(AnchorPointOpRsp)},
  { 32, -1, sizeof(LunchBoxData)},
  { 38, -1, sizeof(SetUpLunchBoxWidgetReq)},
  { 44, -1, sizeof(SetUpLunchBoxWidgetRsp)},
  { 51, -1, sizeof(OneoffGatherPointDetectorData)},
  { 63, -1, sizeof(ClientCollectorData)},
  { 71, -1, sizeof(TreasureMapDetectorData)},
  { 81, -1, sizeof(SkyCrystalDetectorData)},
  { 90, -1, sizeof(SkyCrystalDetectorQuickUseResult)},
  { 97, -1, sizeof(WeatherWizardData)},
  { 103, -1, sizeof(WidgetCameraInfo)},
  { 109, -1, sizeof(WidgetThunderBirdFeatherInfo)},
  { 115, -1, sizeof(QuickUseWidgetReq)},
  { 125, -1, sizeof(QuickUseWidgetRsp)},
  { 136, -1, sizeof(WidgetCoolDownData)},
  { 144, -1, sizeof(WidgetCoolDownNotify)},
  { 151, -1, sizeof(WidgetReportReq)},
  { 161, -1, sizeof(WidgetReportRsp)},
  { 168, -1, sizeof(ClientCollectorDataNotify)},
  { 174, -1, sizeof(OneoffGatherPointDetectorDataNotify)},
  { 180, -1, sizeof(SkyCrystalDetectorDataUpdateNotify)},
  { 186, -1, sizeof(TreasureMapDetectorDataNotify)},
  { 192, -1, sizeof(WidgetSlotData)},
  { 201, -1, sizeof(SetWidgetSlotReq)},
  { 209, -1, sizeof(SetWidgetSlotRsp)},
  { 218, -1, sizeof(WidgetSlotChangeNotify)},
  { 225, -1, sizeof(GetWidgetSlotReq)},
  { 230, -1, sizeof(GetWidgetSlotRsp)},
  { 237, -1, sizeof(AllWidgetDataNotify)},
  { 253, -1, sizeof(UseWidgetCreateGadgetReq)},
  { 261, -1, sizeof(UseWidgetCreateGadgetRsp)},
  { 268, -1, sizeof(UseWidgetRetractGadgetReq)},
  { 274, -1, sizeof(UseWidgetRetractGadgetRsp)},
  { 281, -1, sizeof(WidgetGadgetData)},
  { 288, -1, sizeof(WidgetGadgetAllDataNotify)},
  { 294, -1, sizeof(WidgetGadgetDataNotify)},
  { 300, -1, sizeof(WidgetGadgetDestroyNotify)},
  { 306, -1, sizeof(WidgetCreateLocationInfo)},
  { 313, -1, sizeof(WidgetCreatorInfo)},
  { 321, -1, sizeof(WidgetDoBagReq)},
  { 330, -1, sizeof(WidgetDoBagRsp)},
  { 337, -1, sizeof(WidgetActiveChangeNotify)},
  { 343, -1, sizeof(WidgetUseAttachAbilityGroupChangeNotify)},
  { 350, -1, sizeof(WidgetCaptureAnimalReq)},
  { 358, -1, sizeof(WidgetCaptureAnimalRsp)},
  { 367, -1, sizeof(WidgetUpdateExtraCDReq)},
  { 375, -1, sizeof(WidgetUpdateExtraCDRsp)},
  { 385, -1, sizeof(FireworksReformParam)},
  { 392, -1, sizeof(FireworksReformData)},
  { 399, -1, sizeof(FireworksReformDataNotify)},
  { 405, -1, sizeof(ReformFireworksReq)},
  { 411, -1, sizeof(ReformFireworksRsp)},
  { 417, -1, sizeof(FireworksLaunchParam)},
  { 424, -1, sizeof(FireworksLaunchSchemeData)},
  { 432, -1, sizeof(LaunchFireworksReq)},
  { 438, -1, sizeof(LaunchFireworksRsp)},
  { 444, -1, sizeof(FireworksLaunchDataNotify)},
  { 451, -1, sizeof(ChangeWidgetBackgroundActiveStateReq)},
  { 458, -1, sizeof(ChangeWidgetBackgroundActiveStateRsp)},
  { 465, -1, sizeof(AllWidgetBackgroundActiveStateNotify)},
  { 471, -1, sizeof(PlayerWidgetInfo)},
  { 478, -1, sizeof(RemotePlayerWidgetNotify)},
  { 484, -1, sizeof(WidgetWeatherWizardDataNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorPointData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorPointDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorPointOpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnchorPointOpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LunchBoxData_SlotMaterialMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LunchBoxData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetUpLunchBoxWidgetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetUpLunchBoxWidgetRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneoffGatherPointDetectorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientCollectorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TreasureMapDetectorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkyCrystalDetectorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkyCrystalDetectorQuickUseResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WeatherWizardData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetCameraInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetThunderBirdFeatherInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuickUseWidgetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuickUseWidgetRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetCoolDownData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetCoolDownNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetReportReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetReportRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientCollectorDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneoffGatherPointDetectorDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkyCrystalDetectorDataUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TreasureMapDetectorDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetSlotData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetWidgetSlotReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetWidgetSlotRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetSlotChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetWidgetSlotReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetWidgetSlotRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllWidgetDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseWidgetCreateGadgetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseWidgetCreateGadgetRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseWidgetRetractGadgetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseWidgetRetractGadgetRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetGadgetData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetGadgetAllDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetGadgetDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetGadgetDestroyNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetCreateLocationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetCreatorInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetDoBagReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetDoBagRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetActiveChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetUseAttachAbilityGroupChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetCaptureAnimalReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetCaptureAnimalRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetUpdateExtraCDReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetUpdateExtraCDRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FireworksReformParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FireworksReformData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FireworksReformDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReformFireworksReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReformFireworksRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FireworksLaunchParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FireworksLaunchSchemeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaunchFireworksReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaunchFireworksRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FireworksLaunchDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeWidgetBackgroundActiveStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChangeWidgetBackgroundActiveStateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllWidgetBackgroundActiveStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerWidgetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemotePlayerWidgetNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WidgetWeatherWizardDataNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_widget.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[4].reflection = LunchBoxData::LunchBoxData_SlotMaterialMapEntry::CreateReflection(file_level_metadata[4].descriptor, _LunchBoxData_SlotMaterialMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 67);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _AnchorPointData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorPointData_default_instance_);_AnchorPointDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorPointDataNotify_default_instance_);_AnchorPointOpReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorPointOpReq_default_instance_);_AnchorPointOpRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnchorPointOpRsp_default_instance_);_LunchBoxData_SlotMaterialMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LunchBoxData_SlotMaterialMapEntry_default_instance_);_LunchBoxData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LunchBoxData_default_instance_);_SetUpLunchBoxWidgetReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetUpLunchBoxWidgetReq_default_instance_);_SetUpLunchBoxWidgetRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetUpLunchBoxWidgetRsp_default_instance_);_OneoffGatherPointDetectorData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OneoffGatherPointDetectorData_default_instance_);_ClientCollectorData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientCollectorData_default_instance_);_TreasureMapDetectorData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TreasureMapDetectorData_default_instance_);_SkyCrystalDetectorData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkyCrystalDetectorData_default_instance_);_SkyCrystalDetectorQuickUseResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkyCrystalDetectorQuickUseResult_default_instance_);_WeatherWizardData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WeatherWizardData_default_instance_);_WidgetCameraInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetCameraInfo_default_instance_);_WidgetThunderBirdFeatherInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetThunderBirdFeatherInfo_default_instance_);_QuickUseWidgetReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuickUseWidgetReq_default_instance_);_QuickUseWidgetRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuickUseWidgetRsp_default_instance_);_WidgetCoolDownData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetCoolDownData_default_instance_);_WidgetCoolDownNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetCoolDownNotify_default_instance_);_WidgetReportReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetReportReq_default_instance_);_WidgetReportRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetReportRsp_default_instance_);_ClientCollectorDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientCollectorDataNotify_default_instance_);_OneoffGatherPointDetectorDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OneoffGatherPointDetectorDataNotify_default_instance_);_SkyCrystalDetectorDataUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkyCrystalDetectorDataUpdateNotify_default_instance_);_TreasureMapDetectorDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TreasureMapDetectorDataNotify_default_instance_);_WidgetSlotData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetSlotData_default_instance_);_SetWidgetSlotReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetWidgetSlotReq_default_instance_);_SetWidgetSlotRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetWidgetSlotRsp_default_instance_);_WidgetSlotChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetSlotChangeNotify_default_instance_);_GetWidgetSlotReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetWidgetSlotReq_default_instance_);_GetWidgetSlotRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetWidgetSlotRsp_default_instance_);_AllWidgetDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AllWidgetDataNotify_default_instance_);_UseWidgetCreateGadgetReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UseWidgetCreateGadgetReq_default_instance_);_UseWidgetCreateGadgetRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UseWidgetCreateGadgetRsp_default_instance_);_UseWidgetRetractGadgetReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UseWidgetRetractGadgetReq_default_instance_);_UseWidgetRetractGadgetRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UseWidgetRetractGadgetRsp_default_instance_);_WidgetGadgetData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetGadgetData_default_instance_);_WidgetGadgetAllDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetGadgetAllDataNotify_default_instance_);_WidgetGadgetDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetGadgetDataNotify_default_instance_);_WidgetGadgetDestroyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetGadgetDestroyNotify_default_instance_);_WidgetCreateLocationInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetCreateLocationInfo_default_instance_);_WidgetCreatorInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetCreatorInfo_default_instance_);_WidgetDoBagReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetDoBagReq_default_instance_);_WidgetDoBagRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetDoBagRsp_default_instance_);_WidgetActiveChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetActiveChangeNotify_default_instance_);_WidgetUseAttachAbilityGroupChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetUseAttachAbilityGroupChangeNotify_default_instance_);_WidgetCaptureAnimalReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetCaptureAnimalReq_default_instance_);_WidgetCaptureAnimalRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetCaptureAnimalRsp_default_instance_);_WidgetUpdateExtraCDReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetUpdateExtraCDReq_default_instance_);_WidgetUpdateExtraCDRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetUpdateExtraCDRsp_default_instance_);_FireworksReformParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FireworksReformParam_default_instance_);_FireworksReformData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FireworksReformData_default_instance_);_FireworksReformDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FireworksReformDataNotify_default_instance_);_ReformFireworksReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReformFireworksReq_default_instance_);_ReformFireworksRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReformFireworksRsp_default_instance_);_FireworksLaunchParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FireworksLaunchParam_default_instance_);_FireworksLaunchSchemeData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FireworksLaunchSchemeData_default_instance_);_LaunchFireworksReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaunchFireworksReq_default_instance_);_LaunchFireworksRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaunchFireworksRsp_default_instance_);_FireworksLaunchDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FireworksLaunchDataNotify_default_instance_);_ChangeWidgetBackgroundActiveStateReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeWidgetBackgroundActiveStateReq_default_instance_);_ChangeWidgetBackgroundActiveStateRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChangeWidgetBackgroundActiveStateRsp_default_instance_);_AllWidgetBackgroundActiveStateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AllWidgetBackgroundActiveStateNotify_default_instance_);_PlayerWidgetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerWidgetInfo_default_instance_);_RemotePlayerWidgetNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemotePlayerWidgetNotify_default_instance_);_WidgetWeatherWizardDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WidgetWeatherWizardDataNotify_default_instance_);_AnchorPointData_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _AnchorPointData_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _LunchBoxData_SlotMaterialMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_LunchBoxData_SlotMaterialMapEntry_default_instance_._instance.get_mutable());
  _LunchBoxData_SlotMaterialMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SetUpLunchBoxWidgetReq_default_instance_._instance.get_mutable()->lunch_box_data_ = const_cast< ::proto::LunchBoxData*>(
      ::proto::LunchBoxData::internal_default_instance());
  _SetUpLunchBoxWidgetRsp_default_instance_._instance.get_mutable()->lunch_box_data_ = const_cast< ::proto::LunchBoxData*>(
      ::proto::LunchBoxData::internal_default_instance());
  _OneoffGatherPointDetectorData_default_instance_._instance.get_mutable()->hint_center_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _TreasureMapDetectorData_default_instance_._instance.get_mutable()->center_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SkyCrystalDetectorData_default_instance_._instance.get_mutable()->hint_center_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SkyCrystalDetectorQuickUseResult_default_instance_._instance.get_mutable()->sky_crystal_detector_data_ = const_cast< ::proto::SkyCrystalDetectorData*>(
      ::proto::SkyCrystalDetectorData::internal_default_instance());
  _QuickUseWidgetReq_default_instance_.location_info_ = const_cast< ::proto::WidgetCreateLocationInfo*>(
      ::proto::WidgetCreateLocationInfo::internal_default_instance());
  _QuickUseWidgetReq_default_instance_.camera_info_ = const_cast< ::proto::WidgetCameraInfo*>(
      ::proto::WidgetCameraInfo::internal_default_instance());
  _QuickUseWidgetReq_default_instance_.creator_info_ = const_cast< ::proto::WidgetCreatorInfo*>(
      ::proto::WidgetCreatorInfo::internal_default_instance());
  _QuickUseWidgetReq_default_instance_.thunder_bird_feather_info_ = const_cast< ::proto::WidgetThunderBirdFeatherInfo*>(
      ::proto::WidgetThunderBirdFeatherInfo::internal_default_instance());
  _QuickUseWidgetRsp_default_instance_.detector_data_ = const_cast< ::proto::OneoffGatherPointDetectorData*>(
      ::proto::OneoffGatherPointDetectorData::internal_default_instance());
  _QuickUseWidgetRsp_default_instance_.client_collector_data_ = const_cast< ::proto::ClientCollectorData*>(
      ::proto::ClientCollectorData::internal_default_instance());
  _QuickUseWidgetRsp_default_instance_.sky_crystal_detector_quick_use_result_ = const_cast< ::proto::SkyCrystalDetectorQuickUseResult*>(
      ::proto::SkyCrystalDetectorQuickUseResult::internal_default_instance());
  _SkyCrystalDetectorDataUpdateNotify_default_instance_._instance.get_mutable()->sky_crystal_detector_data_ = const_cast< ::proto::SkyCrystalDetectorData*>(
      ::proto::SkyCrystalDetectorData::internal_default_instance());
  _TreasureMapDetectorDataNotify_default_instance_._instance.get_mutable()->data_ = const_cast< ::proto::TreasureMapDetectorData*>(
      ::proto::TreasureMapDetectorData::internal_default_instance());
  _WidgetSlotChangeNotify_default_instance_._instance.get_mutable()->slot_ = const_cast< ::proto::WidgetSlotData*>(
      ::proto::WidgetSlotData::internal_default_instance());
  _AllWidgetDataNotify_default_instance_._instance.get_mutable()->weather_wizard_data_ = const_cast< ::proto::WeatherWizardData*>(
      ::proto::WeatherWizardData::internal_default_instance());
  _AllWidgetDataNotify_default_instance_._instance.get_mutable()->lunch_box_data_ = const_cast< ::proto::LunchBoxData*>(
      ::proto::LunchBoxData::internal_default_instance());
  _AllWidgetDataNotify_default_instance_._instance.get_mutable()->sky_crystal_detector_data_ = const_cast< ::proto::SkyCrystalDetectorData*>(
      ::proto::SkyCrystalDetectorData::internal_default_instance());
  _UseWidgetCreateGadgetReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _UseWidgetCreateGadgetReq_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _WidgetGadgetDataNotify_default_instance_._instance.get_mutable()->widget_gadget_data_ = const_cast< ::proto::WidgetGadgetData*>(
      ::proto::WidgetGadgetData::internal_default_instance());
  _WidgetCreateLocationInfo_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _WidgetCreateLocationInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _WidgetCreatorInfo_default_instance_._instance.get_mutable()->location_info_ = const_cast< ::proto::WidgetCreateLocationInfo*>(
      ::proto::WidgetCreateLocationInfo::internal_default_instance());
  _WidgetDoBagReq_default_instance_.location_info_ = const_cast< ::proto::WidgetCreateLocationInfo*>(
      ::proto::WidgetCreateLocationInfo::internal_default_instance());
  _WidgetDoBagReq_default_instance_.widget_creator_info_ = const_cast< ::proto::WidgetCreatorInfo*>(
      ::proto::WidgetCreatorInfo::internal_default_instance());
  _WidgetCaptureAnimalReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _WidgetCaptureAnimalRsp_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _WidgetUpdateExtraCDRsp_default_instance_._instance.get_mutable()->cool_data_ = const_cast< ::proto::WidgetCoolDownData*>(
      ::proto::WidgetCoolDownData::internal_default_instance());
  _ReformFireworksReq_default_instance_._instance.get_mutable()->fireworks_reform_data_ = const_cast< ::proto::FireworksReformData*>(
      ::proto::FireworksReformData::internal_default_instance());
  _LaunchFireworksReq_default_instance_._instance.get_mutable()->scheme_data_ = const_cast< ::proto::FireworksLaunchSchemeData*>(
      ::proto::FireworksLaunchSchemeData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_widget.proto\022\005proto\032\014define.pr"
      "oto\"\206\001\n\017AnchorPointData\022\020\n\010scene_id\030\005 \001("
      "\r\022\027\n\017anchor_point_id\030\t \001(\r\022\020\n\010end_time\030\010"
      " \001(\r\022\032\n\003pos\030\017 \001(\0132\r.proto.Vector\022\032\n\003rot\030"
      "\002 \001(\0132\r.proto.Vector\"d\n\025AnchorPointDataN"
      "otify\0221\n\021anchor_point_list\030\n \003(\0132\026.proto"
      ".AnchorPointData\022\030\n\020next_usable_time\030\016 \001"
      "(\r\"\262\001\n\020AnchorPointOpReq\022\027\n\017anchor_point_"
      "id\030\t \001(\r\022\034\n\024anchor_point_op_type\030\014 \001(\r\"g"
      "\n\021AnchorPointOpType\022\030\n\024ANCHOR_POINT_OP_N"
      "ONE\020\000\022\034\n\030ANCHOR_POINT_OP_TELEPORT\020\001\022\032\n\026A"
      "NCHOR_POINT_OP_REMOVE\020\002\"Z\n\020AnchorPointOp"
      "Rsp\022\017\n\007retcode\030\005 \001(\005\022\027\n\017anchor_point_id\030"
      "\014 \001(\r\022\034\n\024anchor_point_op_type\030\004 \001(\r\"\213\001\n\014"
      "LunchBoxData\022C\n\021slot_material_map\030\003 \003(\0132"
      "(.proto.LunchBoxData.SlotMaterialMapEntr"
      "y\0326\n\024SlotMaterialMapEntry\022\013\n\003key\030\001 \001(\r\022\r"
      "\n\005value\030\002 \001(\r:\0028\001\"E\n\026SetUpLunchBoxWidget"
      "Req\022+\n\016lunch_box_data\030\006 \001(\0132\023.proto.Lunc"
      "hBoxData\"V\n\026SetUpLunchBoxWidgetRsp\022+\n\016lu"
      "nch_box_data\030\003 \001(\0132\023.proto.LunchBoxData\022"
      "\017\n\007retcode\030\r \001(\005\"\307\001\n\035OneoffGatherPointDe"
      "tectorData\022&\n\017hint_center_pos\030\007 \001(\0132\r.pr"
      "oto.Vector\022\023\n\013hint_radius\030\016 \001(\r\022\023\n\013mater"
      "ial_id\030\n \001(\r\022\021\n\tconfig_id\030\006 \001(\r\022\020\n\010group"
      "_id\030\r \001(\r\022\030\n\020is_all_collected\030\004 \001(\010\022\025\n\ri"
      "s_hint_valid\030\017 \001(\010\"S\n\023ClientCollectorDat"
      "a\022\023\n\013material_id\030\n \001(\r\022\022\n\nmax_points\030\010 \001"
      "(\r\022\023\n\013curr_points\030\r \001(\r\"\235\001\n\027TreasureMapD"
      "etectorData\022\021\n\tregion_id\030\004 \001(\r\022!\n\ncenter"
      "_pos\030\007 \001(\0132\r.proto.Vector\022\032\n\022is_region_d"
      "etected\030\006 \001(\010\022 \n\tspot_list\030\n \003(\0132\r.proto"
      ".Vector\022\016\n\006radius\030\016 \001(\r\"|\n\026SkyCrystalDet"
      "ectorData\022\025\n\ris_hint_valid\030\003 \001(\010\022&\n\017hint"
      "_center_pos\030\010 \001(\0132\r.proto.Vector\022\020\n\010grou"
      "p_id\030\006 \001(\r\022\021\n\tconfig_id\030\t \001(\r\"u\n SkyCrys"
      "talDetectorQuickUseResult\022@\n\031sky_crystal"
      "_detector_data\030\t \001(\0132\035.proto.SkyCrystalD"
      "etectorData\022\017\n\007retcode\030\010 \001(\005\")\n\021WeatherW"
      "izardData\022\024\n\014shield_value\030\r \001(\r\",\n\020Widge"
      "tCameraInfo\022\030\n\020target_entity_id\030\004 \001(\r\"6\n"
      "\034WidgetThunderBirdFeatherInfo\022\026\n\016entity_"
      "id_list\030\004 \003(\r\"\206\002\n\021QuickUseWidgetReq\0229\n\rl"
      "ocation_info\030\244\005 \001(\0132\037.proto.WidgetCreate"
      "LocationInfoH\000\022/\n\013camera_info\030\336\003 \001(\0132\027.p"
      "roto.WidgetCameraInfoH\000\0221\n\014creator_info\030"
      "\254\006 \001(\0132\030.proto.WidgetCreatorInfoH\000\022I\n\031th"
      "under_bird_feather_info\030\303\016 \001(\0132#.proto.W"
      "idgetThunderBirdFeatherInfoH\000B\007\n\005param\"\232"
      "\002\n\021QuickUseWidgetRsp\022\023\n\013material_id\030\006 \001("
      "\r\022\017\n\007retcode\030\005 \001(\005\022=\n\rdetector_data\030\003 \001("
      "\0132$.proto.OneoffGatherPointDetectorDataH"
      "\000\022;\n\025client_collector_data\030\017 \001(\0132\032.proto"
      ".ClientCollectorDataH\000\022Z\n%sky_crystal_de"
      "tector_quick_use_result\030\332\247\n \001(\0132\'.proto."
      "SkyCrystalDetectorQuickUseResultH\000B\007\n\005pa"
      "ram\"L\n\022WidgetCoolDownData\022\022\n\nis_success\030"
      "\005 \001(\010\022\026\n\016cool_down_time\030\004 \001(\004\022\n\n\002id\030\017 \001("
      "\r\"\223\001\n\024WidgetCoolDownNotify\022=\n\032normal_coo"
      "l_down_data_list\030\001 \003(\0132\031.proto.WidgetCoo"
      "lDownData\022<\n\031group_cool_down_data_list\030\014"
      " \003(\0132\031.proto.WidgetCoolDownData\"\240\001\n\017Widg"
      "etReportReq\022#\n\033weather_wizard_shield_val"
      "ue\030\007 \001(\r\022!\n\031is_clear_sky_crystal_hint\030\005 "
      "\001(\010\022\023\n\013material_id\030\017 \001(\r\022\031\n\021is_client_co"
      "llect\030\016 \001(\010\022\025\n\ris_clear_hint\030\r \001(\010\"7\n\017Wi"
      "dgetReportRsp\022\017\n\007retcode\030\016 \001(\005\022\023\n\013materi"
      "al_id\030\004 \001(\r\"[\n\031ClientCollectorDataNotify"
      "\022>\n\032client_collector_data_list\030\r \003(\0132\032.p"
      "roto.ClientCollectorData\"{\n#OneoffGather"
      "PointDetectorDataNotify\022T\n&oneoff_gather"
      "_point_detector_data_list\030\003 \003(\0132$.proto."
      "OneoffGatherPointDetectorData\"f\n\"SkyCrys"
      "talDetectorDataUpdateNotify\022@\n\031sky_cryst"
      "al_detector_data\030\t \001(\0132\035.proto.SkyCrysta"
      "lDetectorData\"M\n\035TreasureMapDetectorData"
      "Notify\022,\n\004data\030\002 \001(\0132\036.proto.TreasureMap"
      "DetectorData\"q\n\016WidgetSlotData\022\024\n\014cd_ove"
      "r_time\030\t \001(\r\022!\n\003tag\030\016 \001(\0162\024.proto.Widget"
      "SlotTag\022\023\n\013material_id\030\013 \001(\r\022\021\n\tis_activ"
      "e\030\014 \001(\010\"p\n\020SetWidgetSlotReq\022&\n\010tag_list\030"
      "\017 \003(\0162\024.proto.WidgetSlotTag\022\023\n\013material_"
      "id\030\006 \001(\r\022\037\n\002op\030\002 \001(\0162\023.proto.WidgetSlotO"
      "p\"\201\001\n\020SetWidgetSlotRsp\022&\n\010tag_list\030\017 \003(\016"
      "2\024.proto.WidgetSlotTag\022\017\n\007retcode\030\006 \001(\005\022"
      "\023\n\013material_id\030\001 \001(\r\022\037\n\002op\030\004 \001(\0162\023.proto"
      ".WidgetSlotOp\"^\n\026WidgetSlotChangeNotify\022"
      "\037\n\002op\030\013 \001(\0162\023.proto.WidgetSlotOp\022#\n\004slot"
      "\030\010 \001(\0132\025.proto.WidgetSlotData\"\022\n\020GetWidg"
      "etSlotReq\"M\n\020GetWidgetSlotRsp\022(\n\tslot_li"
      "st\030\r \003(\0132\025.proto.WidgetSlotData\022\017\n\007retco"
      "de\030\t \001(\005\"\371\004\n\023AllWidgetDataNotify\0225\n\023weat"
      "her_wizard_data\030\005 \001(\0132\030.proto.WeatherWiz"
      "ardData\022T\n&oneoff_gather_point_detector_"
      "data_list\030\017 \003(\0132$.proto.OneoffGatherPoin"
      "tDetectorData\022=\n\032normal_cool_down_data_l"
      "ist\030\t \003(\0132\031.proto.WidgetCoolDownData\022+\n\016"
      "lunch_box_data\030\001 \001(\0132\023.proto.LunchBoxDat"
      "a\022@\n\031sky_crystal_detector_data\030\014 \001(\0132\035.p"
      "roto.SkyCrystalDetectorData\022>\n\032client_co"
      "llector_data_list\030\004 \003(\0132\032.proto.ClientCo"
      "llectorData\0221\n\021anchor_point_list\030\003 \003(\0132\026"
      ".proto.AnchorPointData\022<\n\031cool_down_grou"
      "p_data_list\030\r \003(\0132\031.proto.WidgetCoolDown"
      "Data\022%\n\035next_anchor_point_usable_time\030\n "
      "\001(\r\022(\n\tslot_list\030\006 \003(\0132\025.proto.WidgetSlo"
      "tData\022%\n\035background_active_widget_list\030\013"
      " \003(\r\"g\n\030UseWidgetCreateGadgetReq\022\032\n\003pos\030"
      "\017 \001(\0132\r.proto.Vector\022\032\n\003rot\030\014 \001(\0132\r.prot"
      "o.Vector\022\023\n\013material_id\030\004 \001(\r\"@\n\030UseWidg"
      "etCreateGadgetRsp\022\017\n\007retcode\030\017 \001(\005\022\023\n\013ma"
      "terial_id\030\014 \001(\r\".\n\031UseWidgetRetractGadge"
      "tReq\022\021\n\tentity_id\030\003 \001(\r\"\?\n\031UseWidgetRetr"
      "actGadgetRsp\022\017\n\007retcode\030\006 \001(\005\022\021\n\tentity_"
      "id\030\016 \001(\r\"D\n\020WidgetGadgetData\022\035\n\025gadget_e"
      "ntity_id_list\030\001 \003(\r\022\021\n\tgadget_id\030\010 \001(\r\"P"
      "\n\031WidgetGadgetAllDataNotify\0223\n\022widget_ga"
      "dget_data\030\r \003(\0132\027.proto.WidgetGadgetData"
      "\"M\n\026WidgetGadgetDataNotify\0223\n\022widget_gad"
      "get_data\030\014 \001(\0132\027.proto.WidgetGadgetData\""
      ".\n\031WidgetGadgetDestroyNotify\022\021\n\tentity_i"
      "d\030\017 \001(\r\"R\n\030WidgetCreateLocationInfo\022\032\n\003r"
      "ot\030\003 \001(\0132\r.proto.Vector\022\032\n\003pos\030\n \001(\0132\r.p"
      "roto.Vector\"\213\001\n\021WidgetCreatorInfo\022+\n\007op_"
      "type\030\n \001(\0162\032.proto.WidgetCreatorOpType\022\021"
      "\n\tentity_id\030\001 \001(\r\0226\n\rlocation_info\030\014 \001(\013"
      "2\037.proto.WidgetCreateLocationInfo\"\245\001\n\016Wi"
      "dgetDoBagReq\022\023\n\013material_id\030\t \001(\r\0229\n\rloc"
      "ation_info\030\300\006 \001(\0132\037.proto.WidgetCreateLo"
      "cationInfoH\000\0228\n\023widget_creator_info\030\331\013 \001"
      "(\0132\030.proto.WidgetCreatorInfoH\000B\t\n\007op_inf"
      "o\"6\n\016WidgetDoBagRsp\022\017\n\007retcode\030\n \001(\005\022\023\n\013"
      "material_id\030\003 \001(\r\"K\n\030WidgetActiveChangeN"
      "otify\022/\n\020widget_data_list\030\005 \003(\0132\025.proto."
      "WidgetSlotData\"Q\n\'WidgetUseAttachAbility"
      "GroupChangeNotify\022\021\n\tis_attach\030\006 \001(\010\022\023\n\013"
      "material_id\030\013 \001(\r\"\\\n\026WidgetCaptureAnimal"
      "Req\022\032\n\003pos\030\n \001(\0132\r.proto.Vector\022\021\n\tentit"
      "y_id\030\017 \001(\r\022\023\n\013material_id\030\006 \001(\r\"m\n\026Widge"
      "tCaptureAnimalRsp\022\017\n\007retcode\030\t \001(\005\022\021\n\ten"
      "tity_id\030\004 \001(\r\022\023\n\013material_id\030\010 \001(\r\022\032\n\003po"
      "s\030\n \001(\0132\r.proto.Vector\"s\n\026WidgetUpdateEx"
      "traCDReq\022\023\n\013material_id\030\016 \001(\r\0222\n\rextra_c"
      "d_type\030\n \001(\0162\033.proto.WIDGET_EXTRA_CD_TYP"
      "E\022\020\n\010cd_group\030\007 \001(\r\"\262\001\n\026WidgetUpdateExtr"
      "aCDRsp\022\017\n\007retcode\030\016 \001(\005\022\023\n\013material_id\030\013"
      " \001(\r\0222\n\rextra_cd_type\030\006 \001(\0162\033.proto.WIDG"
      "ET_EXTRA_CD_TYPE\022,\n\tcool_data\030\n \001(\0132\031.pr"
      "oto.WidgetCoolDownData\022\020\n\010cd_group\030\017 \001(\r"
      "\"T\n\024FireworksReformParam\022-\n\004type\030\010 \001(\0162\037"
      ".proto.FireworksReformParamType\022\r\n\005value"
      "\030\004 \001(\005\"Y\n\023FireworksReformData\022\n\n\002id\030\r \001("
      "\r\0226\n\021reform_param_list\030\n \003(\0132\033.proto.Fir"
      "eworksReformParam\"[\n\031FireworksReformData"
      "Notify\022>\n\032fireworks_reform_data_list\030\006 \003"
      "(\0132\032.proto.FireworksReformData\"O\n\022Reform"
      "FireworksReq\0229\n\025fireworks_reform_data\030\003 "
      "\001(\0132\032.proto.FireworksReformData\"%\n\022Refor"
      "mFireworksRsp\022\017\n\007retcode\030\010 \001(\005\"T\n\024Firewo"
      "rksLaunchParam\022\r\n\005value\030\005 \001(\005\022-\n\004type\030\004 "
      "\001(\0162\037.proto.FireworksLaunchParamType\"\201\001\n"
      "\031FireworksLaunchSchemeData\022\021\n\tscheme_id\030"
      "\003 \001(\r\022\031\n\021fireworks_id_list\030\002 \003(\r\0226\n\021laun"
      "ch_param_list\030\007 \003(\0132\033.proto.FireworksLau"
      "nchParam\"K\n\022LaunchFireworksReq\0225\n\013scheme"
      "_data\030\r \001(\0132 .proto.FireworksLaunchSchem"
      "eData\"%\n\022LaunchFireworksRsp\022\017\n\007retcode\030\006"
      " \001(\005\"s\n\031FireworksLaunchDataNotify\022:\n\020sch"
      "eme_data_list\030\014 \003(\0132 .proto.FireworksLau"
      "nchSchemeData\022\032\n\022last_use_scheme_id\030\004 \001("
      "\r\"N\n$ChangeWidgetBackgroundActiveStateRe"
      "q\022\021\n\tis_active\030\017 \001(\010\022\023\n\013material_id\030\003 \001("
      "\r\"L\n$ChangeWidgetBackgroundActiveStateRs"
      "p\022\017\n\007retcode\030\010 \001(\005\022\023\n\013material_id\030\006 \001(\r\""
      "M\n$AllWidgetBackgroundActiveStateNotify\022"
      "%\n\035background_active_widget_list\030\003 \003(\r\"I"
      "\n\020PlayerWidgetInfo\022\013\n\003uid\030\016 \001(\r\022(\n\tslot_"
      "list\030\r \003(\0132\025.proto.WidgetSlotData\"T\n\030Rem"
      "otePlayerWidgetNotify\0228\n\027player_widget_i"
      "nfo_list\030\003 \003(\0132\027.proto.PlayerWidgetInfo\""
      "5\n\035WidgetWeatherWizardDataNotify\022\024\n\014shie"
      "ld_value\030\017 \001(\r*_\n\020LunchBoxSlotType\022\027\n\023LU"
      "NCH_BOX_SLOT_NONE\020\000\022\031\n\025LUNCH_BOX_SLOT_RE"
      "VIVE\020\001\022\027\n\023LUNCH_BOX_SLOT_HEAL\020\002*I\n\rWidge"
      "tSlotTag\022\031\n\025WIDGET_SLOT_QUICK_USE\020\000\022\035\n\031W"
      "IDGET_SLOT_ATTACH_AVATAR\020\001*D\n\014WidgetSlot"
      "Op\022\031\n\025WIDGET_SLOT_OP_ATTACH\020\000\022\031\n\025WIDGET_"
      "SLOT_OP_DETACH\020\001*\200\001\n\023WidgetCreatorOpType"
      "\022\034\n\030WIDGET_CREATOR_TYPE_NONE\020\000\022\037\n\033WIDGET"
      "_CREATOR_TYPE_RETRACT\020\001\022*\n&WIDGET_CREATO"
      "R_TYPE_RETRACT_AND_CREATE\020\002*^\n\024WIDGET_EX"
      "TRA_CD_TYPE\022\035\n\031WIDGET_EXTRA_CD_TYPE_NONE"
      "\020\000\022\'\n#WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARE"
      "D\020\001*\352\001\n\030FireworksReformParamType\022\037\n\033FIRE"
      "WORKS_REFORM_PARAM_NONE\020\000\022 \n\034FIREWORKS_R"
      "EFORM_PARAM_COLOR\020\001\022!\n\035FIREWORKS_REFORM_"
      "PARAM_HEIGHT\020\002\022\037\n\033FIREWORKS_REFORM_PARAM"
      "_SIZE\020\003\022\"\n\036FIREWORKS_REFORM_PARAM_DENSIT"
      "Y\020\004\022#\n\037FIREWORKS_REFORM_PARAM_ROTATION\020\005"
      "*\356\001\n\030FireworksLaunchParamType\022\037\n\033FIREWOR"
      "KS_LAUNCH_PARAM_NONE\020\000\022!\n\035FIREWORKS_LAUN"
      "CH_PARAM_REPEAT\020\001\022\"\n\036FIREWORKS_LAUNCH_PA"
      "RAM_INTEVAL\020\002\022 \n\034FIREWORKS_LAUNCH_PARAM_"
      "DELAY\020\003\022(\n$FIREWORKS_LAUNCH_PARAM_ROUND_"
      "INTEVAL\020\004\022\036\n\032FIREWORKS_LAUNCH_PARAM_MAX\020"
      "\005B(Z&github.com/teyvat-helper/hk4e-proto"
      "/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8251);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_widget.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fwidget_2eproto

const ::google::protobuf::EnumDescriptor* AnchorPointOpReq_AnchorPointOpType_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[0];
}
bool AnchorPointOpReq_AnchorPointOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AnchorPointOpReq_AnchorPointOpType AnchorPointOpReq::ANCHOR_POINT_OP_NONE;
const AnchorPointOpReq_AnchorPointOpType AnchorPointOpReq::ANCHOR_POINT_OP_TELEPORT;
const AnchorPointOpReq_AnchorPointOpType AnchorPointOpReq::ANCHOR_POINT_OP_REMOVE;
const AnchorPointOpReq_AnchorPointOpType AnchorPointOpReq::AnchorPointOpType_MIN;
const AnchorPointOpReq_AnchorPointOpType AnchorPointOpReq::AnchorPointOpType_MAX;
const int AnchorPointOpReq::AnchorPointOpType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LunchBoxSlotType_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[1];
}
bool LunchBoxSlotType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WidgetSlotTag_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[2];
}
bool WidgetSlotTag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WidgetSlotOp_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[3];
}
bool WidgetSlotOp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WidgetCreatorOpType_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[4];
}
bool WidgetCreatorOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WIDGET_EXTRA_CD_TYPE_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[5];
}
bool WIDGET_EXTRA_CD_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FireworksReformParamType_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[6];
}
bool FireworksReformParamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FireworksLaunchParamType_descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_enum_descriptors[7];
}
bool FireworksLaunchParamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorPointData::kSceneIdFieldNumber;
const int AnchorPointData::kAnchorPointIdFieldNumber;
const int AnchorPointData::kEndTimeFieldNumber;
const int AnchorPointData::kPosFieldNumber;
const int AnchorPointData::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorPointData::AnchorPointData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AnchorPointData)
}
AnchorPointData::AnchorPointData(const AnchorPointData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&anchor_point_id_, &from.anchor_point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:proto.AnchorPointData)
}

void AnchorPointData::SharedCtor() {
  ::memset(&rot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&rot_)) + sizeof(end_time_));
  _cached_size_ = 0;
}

AnchorPointData::~AnchorPointData() {
  // @@protoc_insertion_point(destructor:proto.AnchorPointData)
  SharedDtor();
}

void AnchorPointData::SharedDtor() {
  if (this != internal_default_instance()) delete rot_;
  if (this != internal_default_instance()) delete pos_;
}

void AnchorPointData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorPointData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorPointData& AnchorPointData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorPointData* AnchorPointData::New(::google::protobuf::Arena* arena) const {
  AnchorPointData* n = new AnchorPointData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorPointData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AnchorPointData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&anchor_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(end_time_));
  _internal_metadata_.Clear();
}

bool AnchorPointData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AnchorPointData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 anchor_point_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anchor_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AnchorPointData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AnchorPointData)
  return false;
#undef DO_
}

void AnchorPointData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AnchorPointData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rot_, output);
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scene_id(), output);
  }

  // uint32 end_time = 8;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->end_time(), output);
  }

  // uint32 anchor_point_id = 9;
  if (this->anchor_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->anchor_point_id(), output);
  }

  // .proto.Vector pos = 15;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AnchorPointData)
}

::google::protobuf::uint8* AnchorPointData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AnchorPointData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rot_, deterministic, target);
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scene_id(), target);
  }

  // uint32 end_time = 8;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->end_time(), target);
  }

  // uint32 anchor_point_id = 9;
  if (this->anchor_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->anchor_point_id(), target);
  }

  // .proto.Vector pos = 15;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AnchorPointData)
  return target;
}

size_t AnchorPointData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AnchorPointData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // .proto.Vector pos = 15;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 anchor_point_id = 9;
  if (this->anchor_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anchor_point_id());
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 end_time = 8;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorPointData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AnchorPointData)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorPointData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorPointData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AnchorPointData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AnchorPointData)
    MergeFrom(*source);
  }
}

void AnchorPointData::MergeFrom(const AnchorPointData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AnchorPointData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.anchor_point_id() != 0) {
    set_anchor_point_id(from.anchor_point_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
}

void AnchorPointData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AnchorPointData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorPointData::CopyFrom(const AnchorPointData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AnchorPointData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorPointData::IsInitialized() const {
  return true;
}

void AnchorPointData::Swap(AnchorPointData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorPointData::InternalSwap(AnchorPointData* other) {
  using std::swap;
  swap(rot_, other->rot_);
  swap(pos_, other->pos_);
  swap(anchor_point_id_, other->anchor_point_id_);
  swap(scene_id_, other->scene_id_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorPointData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorPointData

// uint32 scene_id = 5;
void AnchorPointData::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 AnchorPointData::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointData.scene_id)
  return scene_id_;
}
void AnchorPointData::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointData.scene_id)
}

// uint32 anchor_point_id = 9;
void AnchorPointData::clear_anchor_point_id() {
  anchor_point_id_ = 0u;
}
::google::protobuf::uint32 AnchorPointData::anchor_point_id() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointData.anchor_point_id)
  return anchor_point_id_;
}
void AnchorPointData::set_anchor_point_id(::google::protobuf::uint32 value) {
  
  anchor_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointData.anchor_point_id)
}

// uint32 end_time = 8;
void AnchorPointData::clear_end_time() {
  end_time_ = 0u;
}
::google::protobuf::uint32 AnchorPointData::end_time() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointData.end_time)
  return end_time_;
}
void AnchorPointData::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointData.end_time)
}

// .proto.Vector pos = 15;
bool AnchorPointData::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void AnchorPointData::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& AnchorPointData::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AnchorPointData.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* AnchorPointData::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AnchorPointData.pos)
  return pos_;
}
::proto::Vector* AnchorPointData::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AnchorPointData.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void AnchorPointData::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AnchorPointData.pos)
}

// .proto.Vector rot = 2;
bool AnchorPointData::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void AnchorPointData::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& AnchorPointData::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.AnchorPointData.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* AnchorPointData::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AnchorPointData.rot)
  return rot_;
}
::proto::Vector* AnchorPointData::release_rot() {
  // @@protoc_insertion_point(field_release:proto.AnchorPointData.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void AnchorPointData::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AnchorPointData.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorPointDataNotify::kAnchorPointListFieldNumber;
const int AnchorPointDataNotify::kNextUsableTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorPointDataNotify::AnchorPointDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AnchorPointDataNotify)
}
AnchorPointDataNotify::AnchorPointDataNotify(const AnchorPointDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      anchor_point_list_(from.anchor_point_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_usable_time_ = from.next_usable_time_;
  // @@protoc_insertion_point(copy_constructor:proto.AnchorPointDataNotify)
}

void AnchorPointDataNotify::SharedCtor() {
  next_usable_time_ = 0u;
  _cached_size_ = 0;
}

AnchorPointDataNotify::~AnchorPointDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AnchorPointDataNotify)
  SharedDtor();
}

void AnchorPointDataNotify::SharedDtor() {
}

void AnchorPointDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorPointDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorPointDataNotify& AnchorPointDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorPointDataNotify* AnchorPointDataNotify::New(::google::protobuf::Arena* arena) const {
  AnchorPointDataNotify* n = new AnchorPointDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorPointDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AnchorPointDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  anchor_point_list_.Clear();
  next_usable_time_ = 0u;
  _internal_metadata_.Clear();
}

bool AnchorPointDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AnchorPointDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.AnchorPointData anchor_point_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_anchor_point_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 next_usable_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_usable_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AnchorPointDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AnchorPointDataNotify)
  return false;
#undef DO_
}

void AnchorPointDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AnchorPointDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AnchorPointData anchor_point_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anchor_point_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->anchor_point_list(static_cast<int>(i)), output);
  }

  // uint32 next_usable_time = 14;
  if (this->next_usable_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->next_usable_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AnchorPointDataNotify)
}

::google::protobuf::uint8* AnchorPointDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AnchorPointDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.AnchorPointData anchor_point_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anchor_point_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->anchor_point_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 next_usable_time = 14;
  if (this->next_usable_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->next_usable_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AnchorPointDataNotify)
  return target;
}

size_t AnchorPointDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AnchorPointDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AnchorPointData anchor_point_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->anchor_point_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->anchor_point_list(static_cast<int>(i)));
    }
  }

  // uint32 next_usable_time = 14;
  if (this->next_usable_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->next_usable_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorPointDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AnchorPointDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorPointDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorPointDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AnchorPointDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AnchorPointDataNotify)
    MergeFrom(*source);
  }
}

void AnchorPointDataNotify::MergeFrom(const AnchorPointDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AnchorPointDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  anchor_point_list_.MergeFrom(from.anchor_point_list_);
  if (from.next_usable_time() != 0) {
    set_next_usable_time(from.next_usable_time());
  }
}

void AnchorPointDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AnchorPointDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorPointDataNotify::CopyFrom(const AnchorPointDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AnchorPointDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorPointDataNotify::IsInitialized() const {
  return true;
}

void AnchorPointDataNotify::Swap(AnchorPointDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorPointDataNotify::InternalSwap(AnchorPointDataNotify* other) {
  using std::swap;
  anchor_point_list_.InternalSwap(&other->anchor_point_list_);
  swap(next_usable_time_, other->next_usable_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorPointDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorPointDataNotify

// repeated .proto.AnchorPointData anchor_point_list = 10;
int AnchorPointDataNotify::anchor_point_list_size() const {
  return anchor_point_list_.size();
}
void AnchorPointDataNotify::clear_anchor_point_list() {
  anchor_point_list_.Clear();
}
const ::proto::AnchorPointData& AnchorPointDataNotify::anchor_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointDataNotify.anchor_point_list)
  return anchor_point_list_.Get(index);
}
::proto::AnchorPointData* AnchorPointDataNotify::mutable_anchor_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AnchorPointDataNotify.anchor_point_list)
  return anchor_point_list_.Mutable(index);
}
::proto::AnchorPointData* AnchorPointDataNotify::add_anchor_point_list() {
  // @@protoc_insertion_point(field_add:proto.AnchorPointDataNotify.anchor_point_list)
  return anchor_point_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AnchorPointData >*
AnchorPointDataNotify::mutable_anchor_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AnchorPointDataNotify.anchor_point_list)
  return &anchor_point_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AnchorPointData >&
AnchorPointDataNotify::anchor_point_list() const {
  // @@protoc_insertion_point(field_list:proto.AnchorPointDataNotify.anchor_point_list)
  return anchor_point_list_;
}

// uint32 next_usable_time = 14;
void AnchorPointDataNotify::clear_next_usable_time() {
  next_usable_time_ = 0u;
}
::google::protobuf::uint32 AnchorPointDataNotify::next_usable_time() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointDataNotify.next_usable_time)
  return next_usable_time_;
}
void AnchorPointDataNotify::set_next_usable_time(::google::protobuf::uint32 value) {
  
  next_usable_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointDataNotify.next_usable_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorPointOpReq::kAnchorPointIdFieldNumber;
const int AnchorPointOpReq::kAnchorPointOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorPointOpReq::AnchorPointOpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AnchorPointOpReq)
}
AnchorPointOpReq::AnchorPointOpReq(const AnchorPointOpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&anchor_point_id_, &from.anchor_point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&anchor_point_op_type_) -
    reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(anchor_point_op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.AnchorPointOpReq)
}

void AnchorPointOpReq::SharedCtor() {
  ::memset(&anchor_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&anchor_point_op_type_) -
      reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(anchor_point_op_type_));
  _cached_size_ = 0;
}

AnchorPointOpReq::~AnchorPointOpReq() {
  // @@protoc_insertion_point(destructor:proto.AnchorPointOpReq)
  SharedDtor();
}

void AnchorPointOpReq::SharedDtor() {
}

void AnchorPointOpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorPointOpReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorPointOpReq& AnchorPointOpReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorPointOpReq* AnchorPointOpReq::New(::google::protobuf::Arena* arena) const {
  AnchorPointOpReq* n = new AnchorPointOpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorPointOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AnchorPointOpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&anchor_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&anchor_point_op_type_) -
      reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(anchor_point_op_type_));
  _internal_metadata_.Clear();
}

bool AnchorPointOpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AnchorPointOpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 anchor_point_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anchor_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 anchor_point_op_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anchor_point_op_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AnchorPointOpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AnchorPointOpReq)
  return false;
#undef DO_
}

void AnchorPointOpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AnchorPointOpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 anchor_point_id = 9;
  if (this->anchor_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->anchor_point_id(), output);
  }

  // uint32 anchor_point_op_type = 12;
  if (this->anchor_point_op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->anchor_point_op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AnchorPointOpReq)
}

::google::protobuf::uint8* AnchorPointOpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AnchorPointOpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 anchor_point_id = 9;
  if (this->anchor_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->anchor_point_id(), target);
  }

  // uint32 anchor_point_op_type = 12;
  if (this->anchor_point_op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->anchor_point_op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AnchorPointOpReq)
  return target;
}

size_t AnchorPointOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AnchorPointOpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 anchor_point_id = 9;
  if (this->anchor_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anchor_point_id());
  }

  // uint32 anchor_point_op_type = 12;
  if (this->anchor_point_op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anchor_point_op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorPointOpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AnchorPointOpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorPointOpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorPointOpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AnchorPointOpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AnchorPointOpReq)
    MergeFrom(*source);
  }
}

void AnchorPointOpReq::MergeFrom(const AnchorPointOpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AnchorPointOpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.anchor_point_id() != 0) {
    set_anchor_point_id(from.anchor_point_id());
  }
  if (from.anchor_point_op_type() != 0) {
    set_anchor_point_op_type(from.anchor_point_op_type());
  }
}

void AnchorPointOpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AnchorPointOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorPointOpReq::CopyFrom(const AnchorPointOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AnchorPointOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorPointOpReq::IsInitialized() const {
  return true;
}

void AnchorPointOpReq::Swap(AnchorPointOpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorPointOpReq::InternalSwap(AnchorPointOpReq* other) {
  using std::swap;
  swap(anchor_point_id_, other->anchor_point_id_);
  swap(anchor_point_op_type_, other->anchor_point_op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorPointOpReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorPointOpReq

// uint32 anchor_point_id = 9;
void AnchorPointOpReq::clear_anchor_point_id() {
  anchor_point_id_ = 0u;
}
::google::protobuf::uint32 AnchorPointOpReq::anchor_point_id() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointOpReq.anchor_point_id)
  return anchor_point_id_;
}
void AnchorPointOpReq::set_anchor_point_id(::google::protobuf::uint32 value) {
  
  anchor_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointOpReq.anchor_point_id)
}

// uint32 anchor_point_op_type = 12;
void AnchorPointOpReq::clear_anchor_point_op_type() {
  anchor_point_op_type_ = 0u;
}
::google::protobuf::uint32 AnchorPointOpReq::anchor_point_op_type() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointOpReq.anchor_point_op_type)
  return anchor_point_op_type_;
}
void AnchorPointOpReq::set_anchor_point_op_type(::google::protobuf::uint32 value) {
  
  anchor_point_op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointOpReq.anchor_point_op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnchorPointOpRsp::kRetcodeFieldNumber;
const int AnchorPointOpRsp::kAnchorPointIdFieldNumber;
const int AnchorPointOpRsp::kAnchorPointOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnchorPointOpRsp::AnchorPointOpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AnchorPointOpRsp)
}
AnchorPointOpRsp::AnchorPointOpRsp(const AnchorPointOpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&anchor_point_id_, &from.anchor_point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.AnchorPointOpRsp)
}

void AnchorPointOpRsp::SharedCtor() {
  ::memset(&anchor_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

AnchorPointOpRsp::~AnchorPointOpRsp() {
  // @@protoc_insertion_point(destructor:proto.AnchorPointOpRsp)
  SharedDtor();
}

void AnchorPointOpRsp::SharedDtor() {
}

void AnchorPointOpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnchorPointOpRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnchorPointOpRsp& AnchorPointOpRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnchorPointOpRsp* AnchorPointOpRsp::New(::google::protobuf::Arena* arena) const {
  AnchorPointOpRsp* n = new AnchorPointOpRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnchorPointOpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AnchorPointOpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&anchor_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&anchor_point_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool AnchorPointOpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AnchorPointOpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 anchor_point_op_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anchor_point_op_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 anchor_point_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anchor_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AnchorPointOpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AnchorPointOpRsp)
  return false;
#undef DO_
}

void AnchorPointOpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AnchorPointOpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 anchor_point_op_type = 4;
  if (this->anchor_point_op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->anchor_point_op_type(), output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 anchor_point_id = 12;
  if (this->anchor_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->anchor_point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AnchorPointOpRsp)
}

::google::protobuf::uint8* AnchorPointOpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AnchorPointOpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 anchor_point_op_type = 4;
  if (this->anchor_point_op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->anchor_point_op_type(), target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 anchor_point_id = 12;
  if (this->anchor_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->anchor_point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AnchorPointOpRsp)
  return target;
}

size_t AnchorPointOpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AnchorPointOpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 anchor_point_id = 12;
  if (this->anchor_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anchor_point_id());
  }

  // uint32 anchor_point_op_type = 4;
  if (this->anchor_point_op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anchor_point_op_type());
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnchorPointOpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AnchorPointOpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AnchorPointOpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnchorPointOpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AnchorPointOpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AnchorPointOpRsp)
    MergeFrom(*source);
  }
}

void AnchorPointOpRsp::MergeFrom(const AnchorPointOpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AnchorPointOpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.anchor_point_id() != 0) {
    set_anchor_point_id(from.anchor_point_id());
  }
  if (from.anchor_point_op_type() != 0) {
    set_anchor_point_op_type(from.anchor_point_op_type());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AnchorPointOpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AnchorPointOpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnchorPointOpRsp::CopyFrom(const AnchorPointOpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AnchorPointOpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnchorPointOpRsp::IsInitialized() const {
  return true;
}

void AnchorPointOpRsp::Swap(AnchorPointOpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnchorPointOpRsp::InternalSwap(AnchorPointOpRsp* other) {
  using std::swap;
  swap(anchor_point_id_, other->anchor_point_id_);
  swap(anchor_point_op_type_, other->anchor_point_op_type_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnchorPointOpRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnchorPointOpRsp

// int32 retcode = 5;
void AnchorPointOpRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AnchorPointOpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointOpRsp.retcode)
  return retcode_;
}
void AnchorPointOpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointOpRsp.retcode)
}

// uint32 anchor_point_id = 12;
void AnchorPointOpRsp::clear_anchor_point_id() {
  anchor_point_id_ = 0u;
}
::google::protobuf::uint32 AnchorPointOpRsp::anchor_point_id() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointOpRsp.anchor_point_id)
  return anchor_point_id_;
}
void AnchorPointOpRsp::set_anchor_point_id(::google::protobuf::uint32 value) {
  
  anchor_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointOpRsp.anchor_point_id)
}

// uint32 anchor_point_op_type = 4;
void AnchorPointOpRsp::clear_anchor_point_op_type() {
  anchor_point_op_type_ = 0u;
}
::google::protobuf::uint32 AnchorPointOpRsp::anchor_point_op_type() const {
  // @@protoc_insertion_point(field_get:proto.AnchorPointOpRsp.anchor_point_op_type)
  return anchor_point_op_type_;
}
void AnchorPointOpRsp::set_anchor_point_op_type(::google::protobuf::uint32 value) {
  
  anchor_point_op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AnchorPointOpRsp.anchor_point_op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

LunchBoxData::LunchBoxData_SlotMaterialMapEntry::LunchBoxData_SlotMaterialMapEntry() {}
LunchBoxData::LunchBoxData_SlotMaterialMapEntry::LunchBoxData_SlotMaterialMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata LunchBoxData::LunchBoxData_SlotMaterialMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[4];
}
void LunchBoxData::LunchBoxData_SlotMaterialMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void LunchBoxData::LunchBoxData_SlotMaterialMapEntry::MergeFrom(const LunchBoxData_SlotMaterialMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LunchBoxData::kSlotMaterialMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LunchBoxData::LunchBoxData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LunchBoxData)
}
LunchBoxData::LunchBoxData(const LunchBoxData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_material_map_.MergeFrom(from.slot_material_map_);
  // @@protoc_insertion_point(copy_constructor:proto.LunchBoxData)
}

void LunchBoxData::SharedCtor() {
  _cached_size_ = 0;
}

LunchBoxData::~LunchBoxData() {
  // @@protoc_insertion_point(destructor:proto.LunchBoxData)
  SharedDtor();
}

void LunchBoxData::SharedDtor() {
}

void LunchBoxData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LunchBoxData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LunchBoxData& LunchBoxData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

LunchBoxData* LunchBoxData::New(::google::protobuf::Arena* arena) const {
  LunchBoxData* n = new LunchBoxData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LunchBoxData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LunchBoxData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_material_map_.Clear();
  _internal_metadata_.Clear();
}

bool LunchBoxData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LunchBoxData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> slot_material_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          LunchBoxData_SlotMaterialMapEntry::Parser< ::google::protobuf::internal::MapField<
              LunchBoxData_SlotMaterialMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&slot_material_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LunchBoxData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LunchBoxData)
  return false;
#undef DO_
}

void LunchBoxData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LunchBoxData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> slot_material_map = 3;
  if (!this->slot_material_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->slot_material_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->slot_material_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->slot_material_map().begin();
          it != this->slot_material_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LunchBoxData_SlotMaterialMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(slot_material_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<LunchBoxData_SlotMaterialMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->slot_material_map().begin();
          it != this->slot_material_map().end(); ++it) {
        entry.reset(slot_material_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LunchBoxData)
}

::google::protobuf::uint8* LunchBoxData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LunchBoxData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> slot_material_map = 3;
  if (!this->slot_material_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->slot_material_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->slot_material_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->slot_material_map().begin();
          it != this->slot_material_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LunchBoxData_SlotMaterialMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(slot_material_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<LunchBoxData_SlotMaterialMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->slot_material_map().begin();
          it != this->slot_material_map().end(); ++it) {
        entry.reset(slot_material_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LunchBoxData)
  return target;
}

size_t LunchBoxData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LunchBoxData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> slot_material_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->slot_material_map_size());
  {
    ::google::protobuf::scoped_ptr<LunchBoxData_SlotMaterialMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->slot_material_map().begin();
        it != this->slot_material_map().end(); ++it) {
      entry.reset(slot_material_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LunchBoxData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LunchBoxData)
  GOOGLE_DCHECK_NE(&from, this);
  const LunchBoxData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LunchBoxData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LunchBoxData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LunchBoxData)
    MergeFrom(*source);
  }
}

void LunchBoxData::MergeFrom(const LunchBoxData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LunchBoxData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slot_material_map_.MergeFrom(from.slot_material_map_);
}

void LunchBoxData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LunchBoxData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LunchBoxData::CopyFrom(const LunchBoxData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LunchBoxData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LunchBoxData::IsInitialized() const {
  return true;
}

void LunchBoxData::Swap(LunchBoxData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LunchBoxData::InternalSwap(LunchBoxData* other) {
  using std::swap;
  slot_material_map_.Swap(&other->slot_material_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LunchBoxData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LunchBoxData

// map<uint32, uint32> slot_material_map = 3;
int LunchBoxData::slot_material_map_size() const {
  return slot_material_map_.size();
}
void LunchBoxData::clear_slot_material_map() {
  slot_material_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
LunchBoxData::slot_material_map() const {
  // @@protoc_insertion_point(field_map:proto.LunchBoxData.slot_material_map)
  return slot_material_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
LunchBoxData::mutable_slot_material_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.LunchBoxData.slot_material_map)
  return slot_material_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUpLunchBoxWidgetReq::kLunchBoxDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUpLunchBoxWidgetReq::SetUpLunchBoxWidgetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetUpLunchBoxWidgetReq)
}
SetUpLunchBoxWidgetReq::SetUpLunchBoxWidgetReq(const SetUpLunchBoxWidgetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lunch_box_data()) {
    lunch_box_data_ = new ::proto::LunchBoxData(*from.lunch_box_data_);
  } else {
    lunch_box_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetUpLunchBoxWidgetReq)
}

void SetUpLunchBoxWidgetReq::SharedCtor() {
  lunch_box_data_ = NULL;
  _cached_size_ = 0;
}

SetUpLunchBoxWidgetReq::~SetUpLunchBoxWidgetReq() {
  // @@protoc_insertion_point(destructor:proto.SetUpLunchBoxWidgetReq)
  SharedDtor();
}

void SetUpLunchBoxWidgetReq::SharedDtor() {
  if (this != internal_default_instance()) delete lunch_box_data_;
}

void SetUpLunchBoxWidgetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetUpLunchBoxWidgetReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUpLunchBoxWidgetReq& SetUpLunchBoxWidgetReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetUpLunchBoxWidgetReq* SetUpLunchBoxWidgetReq::New(::google::protobuf::Arena* arena) const {
  SetUpLunchBoxWidgetReq* n = new SetUpLunchBoxWidgetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetUpLunchBoxWidgetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetUpLunchBoxWidgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lunch_box_data_ != NULL) {
    delete lunch_box_data_;
  }
  lunch_box_data_ = NULL;
  _internal_metadata_.Clear();
}

bool SetUpLunchBoxWidgetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetUpLunchBoxWidgetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.LunchBoxData lunch_box_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lunch_box_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetUpLunchBoxWidgetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetUpLunchBoxWidgetReq)
  return false;
#undef DO_
}

void SetUpLunchBoxWidgetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetUpLunchBoxWidgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LunchBoxData lunch_box_data = 6;
  if (this->has_lunch_box_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->lunch_box_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetUpLunchBoxWidgetReq)
}

::google::protobuf::uint8* SetUpLunchBoxWidgetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetUpLunchBoxWidgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LunchBoxData lunch_box_data = 6;
  if (this->has_lunch_box_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->lunch_box_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetUpLunchBoxWidgetReq)
  return target;
}

size_t SetUpLunchBoxWidgetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetUpLunchBoxWidgetReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.LunchBoxData lunch_box_data = 6;
  if (this->has_lunch_box_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lunch_box_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetUpLunchBoxWidgetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetUpLunchBoxWidgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUpLunchBoxWidgetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUpLunchBoxWidgetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetUpLunchBoxWidgetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetUpLunchBoxWidgetReq)
    MergeFrom(*source);
  }
}

void SetUpLunchBoxWidgetReq::MergeFrom(const SetUpLunchBoxWidgetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetUpLunchBoxWidgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lunch_box_data()) {
    mutable_lunch_box_data()->::proto::LunchBoxData::MergeFrom(from.lunch_box_data());
  }
}

void SetUpLunchBoxWidgetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetUpLunchBoxWidgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUpLunchBoxWidgetReq::CopyFrom(const SetUpLunchBoxWidgetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetUpLunchBoxWidgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUpLunchBoxWidgetReq::IsInitialized() const {
  return true;
}

void SetUpLunchBoxWidgetReq::Swap(SetUpLunchBoxWidgetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUpLunchBoxWidgetReq::InternalSwap(SetUpLunchBoxWidgetReq* other) {
  using std::swap;
  swap(lunch_box_data_, other->lunch_box_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetUpLunchBoxWidgetReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetUpLunchBoxWidgetReq

// .proto.LunchBoxData lunch_box_data = 6;
bool SetUpLunchBoxWidgetReq::has_lunch_box_data() const {
  return this != internal_default_instance() && lunch_box_data_ != NULL;
}
void SetUpLunchBoxWidgetReq::clear_lunch_box_data() {
  if (GetArenaNoVirtual() == NULL && lunch_box_data_ != NULL) delete lunch_box_data_;
  lunch_box_data_ = NULL;
}
const ::proto::LunchBoxData& SetUpLunchBoxWidgetReq::lunch_box_data() const {
  const ::proto::LunchBoxData* p = lunch_box_data_;
  // @@protoc_insertion_point(field_get:proto.SetUpLunchBoxWidgetReq.lunch_box_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::LunchBoxData*>(
      &::proto::_LunchBoxData_default_instance_);
}
::proto::LunchBoxData* SetUpLunchBoxWidgetReq::mutable_lunch_box_data() {
  
  if (lunch_box_data_ == NULL) {
    lunch_box_data_ = new ::proto::LunchBoxData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetUpLunchBoxWidgetReq.lunch_box_data)
  return lunch_box_data_;
}
::proto::LunchBoxData* SetUpLunchBoxWidgetReq::release_lunch_box_data() {
  // @@protoc_insertion_point(field_release:proto.SetUpLunchBoxWidgetReq.lunch_box_data)
  
  ::proto::LunchBoxData* temp = lunch_box_data_;
  lunch_box_data_ = NULL;
  return temp;
}
void SetUpLunchBoxWidgetReq::set_allocated_lunch_box_data(::proto::LunchBoxData* lunch_box_data) {
  delete lunch_box_data_;
  lunch_box_data_ = lunch_box_data;
  if (lunch_box_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetUpLunchBoxWidgetReq.lunch_box_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUpLunchBoxWidgetRsp::kLunchBoxDataFieldNumber;
const int SetUpLunchBoxWidgetRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUpLunchBoxWidgetRsp::SetUpLunchBoxWidgetRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetUpLunchBoxWidgetRsp)
}
SetUpLunchBoxWidgetRsp::SetUpLunchBoxWidgetRsp(const SetUpLunchBoxWidgetRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lunch_box_data()) {
    lunch_box_data_ = new ::proto::LunchBoxData(*from.lunch_box_data_);
  } else {
    lunch_box_data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetUpLunchBoxWidgetRsp)
}

void SetUpLunchBoxWidgetRsp::SharedCtor() {
  ::memset(&lunch_box_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&lunch_box_data_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SetUpLunchBoxWidgetRsp::~SetUpLunchBoxWidgetRsp() {
  // @@protoc_insertion_point(destructor:proto.SetUpLunchBoxWidgetRsp)
  SharedDtor();
}

void SetUpLunchBoxWidgetRsp::SharedDtor() {
  if (this != internal_default_instance()) delete lunch_box_data_;
}

void SetUpLunchBoxWidgetRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetUpLunchBoxWidgetRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUpLunchBoxWidgetRsp& SetUpLunchBoxWidgetRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetUpLunchBoxWidgetRsp* SetUpLunchBoxWidgetRsp::New(::google::protobuf::Arena* arena) const {
  SetUpLunchBoxWidgetRsp* n = new SetUpLunchBoxWidgetRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetUpLunchBoxWidgetRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetUpLunchBoxWidgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lunch_box_data_ != NULL) {
    delete lunch_box_data_;
  }
  lunch_box_data_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetUpLunchBoxWidgetRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetUpLunchBoxWidgetRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.LunchBoxData lunch_box_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lunch_box_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetUpLunchBoxWidgetRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetUpLunchBoxWidgetRsp)
  return false;
#undef DO_
}

void SetUpLunchBoxWidgetRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetUpLunchBoxWidgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LunchBoxData lunch_box_data = 3;
  if (this->has_lunch_box_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->lunch_box_data_, output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetUpLunchBoxWidgetRsp)
}

::google::protobuf::uint8* SetUpLunchBoxWidgetRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetUpLunchBoxWidgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LunchBoxData lunch_box_data = 3;
  if (this->has_lunch_box_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->lunch_box_data_, deterministic, target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetUpLunchBoxWidgetRsp)
  return target;
}

size_t SetUpLunchBoxWidgetRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetUpLunchBoxWidgetRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.LunchBoxData lunch_box_data = 3;
  if (this->has_lunch_box_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lunch_box_data_);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetUpLunchBoxWidgetRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetUpLunchBoxWidgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUpLunchBoxWidgetRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUpLunchBoxWidgetRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetUpLunchBoxWidgetRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetUpLunchBoxWidgetRsp)
    MergeFrom(*source);
  }
}

void SetUpLunchBoxWidgetRsp::MergeFrom(const SetUpLunchBoxWidgetRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetUpLunchBoxWidgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lunch_box_data()) {
    mutable_lunch_box_data()->::proto::LunchBoxData::MergeFrom(from.lunch_box_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetUpLunchBoxWidgetRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetUpLunchBoxWidgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUpLunchBoxWidgetRsp::CopyFrom(const SetUpLunchBoxWidgetRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetUpLunchBoxWidgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUpLunchBoxWidgetRsp::IsInitialized() const {
  return true;
}

void SetUpLunchBoxWidgetRsp::Swap(SetUpLunchBoxWidgetRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUpLunchBoxWidgetRsp::InternalSwap(SetUpLunchBoxWidgetRsp* other) {
  using std::swap;
  swap(lunch_box_data_, other->lunch_box_data_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetUpLunchBoxWidgetRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetUpLunchBoxWidgetRsp

// .proto.LunchBoxData lunch_box_data = 3;
bool SetUpLunchBoxWidgetRsp::has_lunch_box_data() const {
  return this != internal_default_instance() && lunch_box_data_ != NULL;
}
void SetUpLunchBoxWidgetRsp::clear_lunch_box_data() {
  if (GetArenaNoVirtual() == NULL && lunch_box_data_ != NULL) delete lunch_box_data_;
  lunch_box_data_ = NULL;
}
const ::proto::LunchBoxData& SetUpLunchBoxWidgetRsp::lunch_box_data() const {
  const ::proto::LunchBoxData* p = lunch_box_data_;
  // @@protoc_insertion_point(field_get:proto.SetUpLunchBoxWidgetRsp.lunch_box_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::LunchBoxData*>(
      &::proto::_LunchBoxData_default_instance_);
}
::proto::LunchBoxData* SetUpLunchBoxWidgetRsp::mutable_lunch_box_data() {
  
  if (lunch_box_data_ == NULL) {
    lunch_box_data_ = new ::proto::LunchBoxData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetUpLunchBoxWidgetRsp.lunch_box_data)
  return lunch_box_data_;
}
::proto::LunchBoxData* SetUpLunchBoxWidgetRsp::release_lunch_box_data() {
  // @@protoc_insertion_point(field_release:proto.SetUpLunchBoxWidgetRsp.lunch_box_data)
  
  ::proto::LunchBoxData* temp = lunch_box_data_;
  lunch_box_data_ = NULL;
  return temp;
}
void SetUpLunchBoxWidgetRsp::set_allocated_lunch_box_data(::proto::LunchBoxData* lunch_box_data) {
  delete lunch_box_data_;
  lunch_box_data_ = lunch_box_data;
  if (lunch_box_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetUpLunchBoxWidgetRsp.lunch_box_data)
}

// int32 retcode = 13;
void SetUpLunchBoxWidgetRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetUpLunchBoxWidgetRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetUpLunchBoxWidgetRsp.retcode)
  return retcode_;
}
void SetUpLunchBoxWidgetRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetUpLunchBoxWidgetRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneoffGatherPointDetectorData::kHintCenterPosFieldNumber;
const int OneoffGatherPointDetectorData::kHintRadiusFieldNumber;
const int OneoffGatherPointDetectorData::kMaterialIdFieldNumber;
const int OneoffGatherPointDetectorData::kConfigIdFieldNumber;
const int OneoffGatherPointDetectorData::kGroupIdFieldNumber;
const int OneoffGatherPointDetectorData::kIsAllCollectedFieldNumber;
const int OneoffGatherPointDetectorData::kIsHintValidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneoffGatherPointDetectorData::OneoffGatherPointDetectorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OneoffGatherPointDetectorData)
}
OneoffGatherPointDetectorData::OneoffGatherPointDetectorData(const OneoffGatherPointDetectorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hint_center_pos()) {
    hint_center_pos_ = new ::proto::Vector(*from.hint_center_pos_);
  } else {
    hint_center_pos_ = NULL;
  }
  ::memcpy(&hint_radius_, &from.hint_radius_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&hint_radius_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:proto.OneoffGatherPointDetectorData)
}

void OneoffGatherPointDetectorData::SharedCtor() {
  ::memset(&hint_center_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&hint_center_pos_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

OneoffGatherPointDetectorData::~OneoffGatherPointDetectorData() {
  // @@protoc_insertion_point(destructor:proto.OneoffGatherPointDetectorData)
  SharedDtor();
}

void OneoffGatherPointDetectorData::SharedDtor() {
  if (this != internal_default_instance()) delete hint_center_pos_;
}

void OneoffGatherPointDetectorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneoffGatherPointDetectorData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneoffGatherPointDetectorData& OneoffGatherPointDetectorData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneoffGatherPointDetectorData* OneoffGatherPointDetectorData::New(::google::protobuf::Arena* arena) const {
  OneoffGatherPointDetectorData* n = new OneoffGatherPointDetectorData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneoffGatherPointDetectorData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OneoffGatherPointDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hint_center_pos_ != NULL) {
    delete hint_center_pos_;
  }
  hint_center_pos_ = NULL;
  ::memset(&hint_radius_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&hint_radius_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool OneoffGatherPointDetectorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OneoffGatherPointDetectorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_all_collected = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_all_collected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector hint_center_pos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hint_center_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hint_radius = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hint_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_hint_valid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_hint_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OneoffGatherPointDetectorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OneoffGatherPointDetectorData)
  return false;
#undef DO_
}

void OneoffGatherPointDetectorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OneoffGatherPointDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_all_collected = 4;
  if (this->is_all_collected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_all_collected(), output);
  }

  // uint32 config_id = 6;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->config_id(), output);
  }

  // .proto.Vector hint_center_pos = 7;
  if (this->has_hint_center_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->hint_center_pos_, output);
  }

  // uint32 material_id = 10;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->material_id(), output);
  }

  // uint32 group_id = 13;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->group_id(), output);
  }

  // uint32 hint_radius = 14;
  if (this->hint_radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->hint_radius(), output);
  }

  // bool is_hint_valid = 15;
  if (this->is_hint_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_hint_valid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OneoffGatherPointDetectorData)
}

::google::protobuf::uint8* OneoffGatherPointDetectorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OneoffGatherPointDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_all_collected = 4;
  if (this->is_all_collected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_all_collected(), target);
  }

  // uint32 config_id = 6;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->config_id(), target);
  }

  // .proto.Vector hint_center_pos = 7;
  if (this->has_hint_center_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->hint_center_pos_, deterministic, target);
  }

  // uint32 material_id = 10;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->material_id(), target);
  }

  // uint32 group_id = 13;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->group_id(), target);
  }

  // uint32 hint_radius = 14;
  if (this->hint_radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->hint_radius(), target);
  }

  // bool is_hint_valid = 15;
  if (this->is_hint_valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_hint_valid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OneoffGatherPointDetectorData)
  return target;
}

size_t OneoffGatherPointDetectorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OneoffGatherPointDetectorData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector hint_center_pos = 7;
  if (this->has_hint_center_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hint_center_pos_);
  }

  // uint32 hint_radius = 14;
  if (this->hint_radius() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hint_radius());
  }

  // uint32 config_id = 6;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // bool is_all_collected = 4;
  if (this->is_all_collected() != 0) {
    total_size += 1 + 1;
  }

  // bool is_hint_valid = 15;
  if (this->is_hint_valid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 material_id = 10;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // uint32 group_id = 13;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneoffGatherPointDetectorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OneoffGatherPointDetectorData)
  GOOGLE_DCHECK_NE(&from, this);
  const OneoffGatherPointDetectorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneoffGatherPointDetectorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OneoffGatherPointDetectorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OneoffGatherPointDetectorData)
    MergeFrom(*source);
  }
}

void OneoffGatherPointDetectorData::MergeFrom(const OneoffGatherPointDetectorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OneoffGatherPointDetectorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hint_center_pos()) {
    mutable_hint_center_pos()->::proto::Vector::MergeFrom(from.hint_center_pos());
  }
  if (from.hint_radius() != 0) {
    set_hint_radius(from.hint_radius());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.is_all_collected() != 0) {
    set_is_all_collected(from.is_all_collected());
  }
  if (from.is_hint_valid() != 0) {
    set_is_hint_valid(from.is_hint_valid());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void OneoffGatherPointDetectorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OneoffGatherPointDetectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneoffGatherPointDetectorData::CopyFrom(const OneoffGatherPointDetectorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OneoffGatherPointDetectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneoffGatherPointDetectorData::IsInitialized() const {
  return true;
}

void OneoffGatherPointDetectorData::Swap(OneoffGatherPointDetectorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneoffGatherPointDetectorData::InternalSwap(OneoffGatherPointDetectorData* other) {
  using std::swap;
  swap(hint_center_pos_, other->hint_center_pos_);
  swap(hint_radius_, other->hint_radius_);
  swap(config_id_, other->config_id_);
  swap(is_all_collected_, other->is_all_collected_);
  swap(is_hint_valid_, other->is_hint_valid_);
  swap(material_id_, other->material_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneoffGatherPointDetectorData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneoffGatherPointDetectorData

// .proto.Vector hint_center_pos = 7;
bool OneoffGatherPointDetectorData::has_hint_center_pos() const {
  return this != internal_default_instance() && hint_center_pos_ != NULL;
}
void OneoffGatherPointDetectorData::clear_hint_center_pos() {
  if (GetArenaNoVirtual() == NULL && hint_center_pos_ != NULL) delete hint_center_pos_;
  hint_center_pos_ = NULL;
}
const ::proto::Vector& OneoffGatherPointDetectorData::hint_center_pos() const {
  const ::proto::Vector* p = hint_center_pos_;
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorData.hint_center_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* OneoffGatherPointDetectorData::mutable_hint_center_pos() {
  
  if (hint_center_pos_ == NULL) {
    hint_center_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.OneoffGatherPointDetectorData.hint_center_pos)
  return hint_center_pos_;
}
::proto::Vector* OneoffGatherPointDetectorData::release_hint_center_pos() {
  // @@protoc_insertion_point(field_release:proto.OneoffGatherPointDetectorData.hint_center_pos)
  
  ::proto::Vector* temp = hint_center_pos_;
  hint_center_pos_ = NULL;
  return temp;
}
void OneoffGatherPointDetectorData::set_allocated_hint_center_pos(::proto::Vector* hint_center_pos) {
  delete hint_center_pos_;
  hint_center_pos_ = hint_center_pos;
  if (hint_center_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OneoffGatherPointDetectorData.hint_center_pos)
}

// uint32 hint_radius = 14;
void OneoffGatherPointDetectorData::clear_hint_radius() {
  hint_radius_ = 0u;
}
::google::protobuf::uint32 OneoffGatherPointDetectorData::hint_radius() const {
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorData.hint_radius)
  return hint_radius_;
}
void OneoffGatherPointDetectorData::set_hint_radius(::google::protobuf::uint32 value) {
  
  hint_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.OneoffGatherPointDetectorData.hint_radius)
}

// uint32 material_id = 10;
void OneoffGatherPointDetectorData::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 OneoffGatherPointDetectorData::material_id() const {
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorData.material_id)
  return material_id_;
}
void OneoffGatherPointDetectorData::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OneoffGatherPointDetectorData.material_id)
}

// uint32 config_id = 6;
void OneoffGatherPointDetectorData::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 OneoffGatherPointDetectorData::config_id() const {
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorData.config_id)
  return config_id_;
}
void OneoffGatherPointDetectorData::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OneoffGatherPointDetectorData.config_id)
}

// uint32 group_id = 13;
void OneoffGatherPointDetectorData::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 OneoffGatherPointDetectorData::group_id() const {
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorData.group_id)
  return group_id_;
}
void OneoffGatherPointDetectorData::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OneoffGatherPointDetectorData.group_id)
}

// bool is_all_collected = 4;
void OneoffGatherPointDetectorData::clear_is_all_collected() {
  is_all_collected_ = false;
}
bool OneoffGatherPointDetectorData::is_all_collected() const {
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorData.is_all_collected)
  return is_all_collected_;
}
void OneoffGatherPointDetectorData::set_is_all_collected(bool value) {
  
  is_all_collected_ = value;
  // @@protoc_insertion_point(field_set:proto.OneoffGatherPointDetectorData.is_all_collected)
}

// bool is_hint_valid = 15;
void OneoffGatherPointDetectorData::clear_is_hint_valid() {
  is_hint_valid_ = false;
}
bool OneoffGatherPointDetectorData::is_hint_valid() const {
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorData.is_hint_valid)
  return is_hint_valid_;
}
void OneoffGatherPointDetectorData::set_is_hint_valid(bool value) {
  
  is_hint_valid_ = value;
  // @@protoc_insertion_point(field_set:proto.OneoffGatherPointDetectorData.is_hint_valid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCollectorData::kMaterialIdFieldNumber;
const int ClientCollectorData::kMaxPointsFieldNumber;
const int ClientCollectorData::kCurrPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCollectorData::ClientCollectorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientCollectorData)
}
ClientCollectorData::ClientCollectorData(const ClientCollectorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&curr_points_, &from.curr_points_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_id_) -
    reinterpret_cast<char*>(&curr_points_)) + sizeof(material_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientCollectorData)
}

void ClientCollectorData::SharedCtor() {
  ::memset(&curr_points_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&curr_points_)) + sizeof(material_id_));
  _cached_size_ = 0;
}

ClientCollectorData::~ClientCollectorData() {
  // @@protoc_insertion_point(destructor:proto.ClientCollectorData)
  SharedDtor();
}

void ClientCollectorData::SharedDtor() {
}

void ClientCollectorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientCollectorData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientCollectorData& ClientCollectorData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientCollectorData* ClientCollectorData::New(::google::protobuf::Arena* arena) const {
  ClientCollectorData* n = new ClientCollectorData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientCollectorData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientCollectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&curr_points_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&curr_points_)) + sizeof(material_id_));
  _internal_metadata_.Clear();
}

bool ClientCollectorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientCollectorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 max_points = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 curr_points = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curr_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientCollectorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientCollectorData)
  return false;
#undef DO_
}

void ClientCollectorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientCollectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_points = 8;
  if (this->max_points() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->max_points(), output);
  }

  // uint32 material_id = 10;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->material_id(), output);
  }

  // uint32 curr_points = 13;
  if (this->curr_points() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->curr_points(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientCollectorData)
}

::google::protobuf::uint8* ClientCollectorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientCollectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_points = 8;
  if (this->max_points() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->max_points(), target);
  }

  // uint32 material_id = 10;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->material_id(), target);
  }

  // uint32 curr_points = 13;
  if (this->curr_points() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->curr_points(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientCollectorData)
  return target;
}

size_t ClientCollectorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientCollectorData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 curr_points = 13;
  if (this->curr_points() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curr_points());
  }

  // uint32 max_points = 8;
  if (this->max_points() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_points());
  }

  // uint32 material_id = 10;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientCollectorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientCollectorData)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCollectorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCollectorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientCollectorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientCollectorData)
    MergeFrom(*source);
  }
}

void ClientCollectorData::MergeFrom(const ClientCollectorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientCollectorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.curr_points() != 0) {
    set_curr_points(from.curr_points());
  }
  if (from.max_points() != 0) {
    set_max_points(from.max_points());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
}

void ClientCollectorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientCollectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCollectorData::CopyFrom(const ClientCollectorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientCollectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCollectorData::IsInitialized() const {
  return true;
}

void ClientCollectorData::Swap(ClientCollectorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCollectorData::InternalSwap(ClientCollectorData* other) {
  using std::swap;
  swap(curr_points_, other->curr_points_);
  swap(max_points_, other->max_points_);
  swap(material_id_, other->material_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientCollectorData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientCollectorData

// uint32 material_id = 10;
void ClientCollectorData::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 ClientCollectorData::material_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientCollectorData.material_id)
  return material_id_;
}
void ClientCollectorData::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCollectorData.material_id)
}

// uint32 max_points = 8;
void ClientCollectorData::clear_max_points() {
  max_points_ = 0u;
}
::google::protobuf::uint32 ClientCollectorData::max_points() const {
  // @@protoc_insertion_point(field_get:proto.ClientCollectorData.max_points)
  return max_points_;
}
void ClientCollectorData::set_max_points(::google::protobuf::uint32 value) {
  
  max_points_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCollectorData.max_points)
}

// uint32 curr_points = 13;
void ClientCollectorData::clear_curr_points() {
  curr_points_ = 0u;
}
::google::protobuf::uint32 ClientCollectorData::curr_points() const {
  // @@protoc_insertion_point(field_get:proto.ClientCollectorData.curr_points)
  return curr_points_;
}
void ClientCollectorData::set_curr_points(::google::protobuf::uint32 value) {
  
  curr_points_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCollectorData.curr_points)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreasureMapDetectorData::kRegionIdFieldNumber;
const int TreasureMapDetectorData::kCenterPosFieldNumber;
const int TreasureMapDetectorData::kIsRegionDetectedFieldNumber;
const int TreasureMapDetectorData::kSpotListFieldNumber;
const int TreasureMapDetectorData::kRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreasureMapDetectorData::TreasureMapDetectorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TreasureMapDetectorData)
}
TreasureMapDetectorData::TreasureMapDetectorData(const TreasureMapDetectorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      spot_list_(from.spot_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center_pos()) {
    center_pos_ = new ::proto::Vector(*from.center_pos_);
  } else {
    center_pos_ = NULL;
  }
  ::memcpy(&region_id_, &from.region_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&radius_) -
    reinterpret_cast<char*>(&region_id_)) + sizeof(radius_));
  // @@protoc_insertion_point(copy_constructor:proto.TreasureMapDetectorData)
}

void TreasureMapDetectorData::SharedCtor() {
  ::memset(&center_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radius_) -
      reinterpret_cast<char*>(&center_pos_)) + sizeof(radius_));
  _cached_size_ = 0;
}

TreasureMapDetectorData::~TreasureMapDetectorData() {
  // @@protoc_insertion_point(destructor:proto.TreasureMapDetectorData)
  SharedDtor();
}

void TreasureMapDetectorData::SharedDtor() {
  if (this != internal_default_instance()) delete center_pos_;
}

void TreasureMapDetectorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreasureMapDetectorData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreasureMapDetectorData& TreasureMapDetectorData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

TreasureMapDetectorData* TreasureMapDetectorData::New(::google::protobuf::Arena* arena) const {
  TreasureMapDetectorData* n = new TreasureMapDetectorData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreasureMapDetectorData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TreasureMapDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spot_list_.Clear();
  if (GetArenaNoVirtual() == NULL && center_pos_ != NULL) {
    delete center_pos_;
  }
  center_pos_ = NULL;
  ::memset(&region_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radius_) -
      reinterpret_cast<char*>(&region_id_)) + sizeof(radius_));
  _internal_metadata_.Clear();
}

bool TreasureMapDetectorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TreasureMapDetectorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 region_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_region_detected = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_region_detected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector center_pos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_center_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Vector spot_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_spot_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 radius = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TreasureMapDetectorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TreasureMapDetectorData)
  return false;
#undef DO_
}

void TreasureMapDetectorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TreasureMapDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 region_id = 4;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->region_id(), output);
  }

  // bool is_region_detected = 6;
  if (this->is_region_detected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_region_detected(), output);
  }

  // .proto.Vector center_pos = 7;
  if (this->has_center_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->center_pos_, output);
  }

  // repeated .proto.Vector spot_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spot_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->spot_list(static_cast<int>(i)), output);
  }

  // uint32 radius = 14;
  if (this->radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->radius(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TreasureMapDetectorData)
}

::google::protobuf::uint8* TreasureMapDetectorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TreasureMapDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 region_id = 4;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->region_id(), target);
  }

  // bool is_region_detected = 6;
  if (this->is_region_detected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_region_detected(), target);
  }

  // .proto.Vector center_pos = 7;
  if (this->has_center_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->center_pos_, deterministic, target);
  }

  // repeated .proto.Vector spot_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spot_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->spot_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 radius = 14;
  if (this->radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->radius(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TreasureMapDetectorData)
  return target;
}

size_t TreasureMapDetectorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TreasureMapDetectorData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Vector spot_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->spot_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->spot_list(static_cast<int>(i)));
    }
  }

  // .proto.Vector center_pos = 7;
  if (this->has_center_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->center_pos_);
  }

  // uint32 region_id = 4;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->region_id());
  }

  // bool is_region_detected = 6;
  if (this->is_region_detected() != 0) {
    total_size += 1 + 1;
  }

  // uint32 radius = 14;
  if (this->radius() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->radius());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreasureMapDetectorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TreasureMapDetectorData)
  GOOGLE_DCHECK_NE(&from, this);
  const TreasureMapDetectorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreasureMapDetectorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TreasureMapDetectorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TreasureMapDetectorData)
    MergeFrom(*source);
  }
}

void TreasureMapDetectorData::MergeFrom(const TreasureMapDetectorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TreasureMapDetectorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spot_list_.MergeFrom(from.spot_list_);
  if (from.has_center_pos()) {
    mutable_center_pos()->::proto::Vector::MergeFrom(from.center_pos());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.is_region_detected() != 0) {
    set_is_region_detected(from.is_region_detected());
  }
  if (from.radius() != 0) {
    set_radius(from.radius());
  }
}

void TreasureMapDetectorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TreasureMapDetectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreasureMapDetectorData::CopyFrom(const TreasureMapDetectorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TreasureMapDetectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasureMapDetectorData::IsInitialized() const {
  return true;
}

void TreasureMapDetectorData::Swap(TreasureMapDetectorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreasureMapDetectorData::InternalSwap(TreasureMapDetectorData* other) {
  using std::swap;
  spot_list_.InternalSwap(&other->spot_list_);
  swap(center_pos_, other->center_pos_);
  swap(region_id_, other->region_id_);
  swap(is_region_detected_, other->is_region_detected_);
  swap(radius_, other->radius_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TreasureMapDetectorData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TreasureMapDetectorData

// uint32 region_id = 4;
void TreasureMapDetectorData::clear_region_id() {
  region_id_ = 0u;
}
::google::protobuf::uint32 TreasureMapDetectorData::region_id() const {
  // @@protoc_insertion_point(field_get:proto.TreasureMapDetectorData.region_id)
  return region_id_;
}
void TreasureMapDetectorData::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TreasureMapDetectorData.region_id)
}

// .proto.Vector center_pos = 7;
bool TreasureMapDetectorData::has_center_pos() const {
  return this != internal_default_instance() && center_pos_ != NULL;
}
void TreasureMapDetectorData::clear_center_pos() {
  if (GetArenaNoVirtual() == NULL && center_pos_ != NULL) delete center_pos_;
  center_pos_ = NULL;
}
const ::proto::Vector& TreasureMapDetectorData::center_pos() const {
  const ::proto::Vector* p = center_pos_;
  // @@protoc_insertion_point(field_get:proto.TreasureMapDetectorData.center_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* TreasureMapDetectorData::mutable_center_pos() {
  
  if (center_pos_ == NULL) {
    center_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.TreasureMapDetectorData.center_pos)
  return center_pos_;
}
::proto::Vector* TreasureMapDetectorData::release_center_pos() {
  // @@protoc_insertion_point(field_release:proto.TreasureMapDetectorData.center_pos)
  
  ::proto::Vector* temp = center_pos_;
  center_pos_ = NULL;
  return temp;
}
void TreasureMapDetectorData::set_allocated_center_pos(::proto::Vector* center_pos) {
  delete center_pos_;
  center_pos_ = center_pos;
  if (center_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TreasureMapDetectorData.center_pos)
}

// bool is_region_detected = 6;
void TreasureMapDetectorData::clear_is_region_detected() {
  is_region_detected_ = false;
}
bool TreasureMapDetectorData::is_region_detected() const {
  // @@protoc_insertion_point(field_get:proto.TreasureMapDetectorData.is_region_detected)
  return is_region_detected_;
}
void TreasureMapDetectorData::set_is_region_detected(bool value) {
  
  is_region_detected_ = value;
  // @@protoc_insertion_point(field_set:proto.TreasureMapDetectorData.is_region_detected)
}

// repeated .proto.Vector spot_list = 10;
int TreasureMapDetectorData::spot_list_size() const {
  return spot_list_.size();
}
void TreasureMapDetectorData::clear_spot_list() {
  spot_list_.Clear();
}
const ::proto::Vector& TreasureMapDetectorData::spot_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TreasureMapDetectorData.spot_list)
  return spot_list_.Get(index);
}
::proto::Vector* TreasureMapDetectorData::mutable_spot_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TreasureMapDetectorData.spot_list)
  return spot_list_.Mutable(index);
}
::proto::Vector* TreasureMapDetectorData::add_spot_list() {
  // @@protoc_insertion_point(field_add:proto.TreasureMapDetectorData.spot_list)
  return spot_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Vector >*
TreasureMapDetectorData::mutable_spot_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TreasureMapDetectorData.spot_list)
  return &spot_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
TreasureMapDetectorData::spot_list() const {
  // @@protoc_insertion_point(field_list:proto.TreasureMapDetectorData.spot_list)
  return spot_list_;
}

// uint32 radius = 14;
void TreasureMapDetectorData::clear_radius() {
  radius_ = 0u;
}
::google::protobuf::uint32 TreasureMapDetectorData::radius() const {
  // @@protoc_insertion_point(field_get:proto.TreasureMapDetectorData.radius)
  return radius_;
}
void TreasureMapDetectorData::set_radius(::google::protobuf::uint32 value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:proto.TreasureMapDetectorData.radius)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkyCrystalDetectorData::kIsHintValidFieldNumber;
const int SkyCrystalDetectorData::kHintCenterPosFieldNumber;
const int SkyCrystalDetectorData::kGroupIdFieldNumber;
const int SkyCrystalDetectorData::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkyCrystalDetectorData::SkyCrystalDetectorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SkyCrystalDetectorData)
}
SkyCrystalDetectorData::SkyCrystalDetectorData(const SkyCrystalDetectorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hint_center_pos()) {
    hint_center_pos_ = new ::proto::Vector(*from.hint_center_pos_);
  } else {
    hint_center_pos_ = NULL;
  }
  ::memcpy(&is_hint_valid_, &from.is_hint_valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_id_) -
    reinterpret_cast<char*>(&is_hint_valid_)) + sizeof(config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SkyCrystalDetectorData)
}

void SkyCrystalDetectorData::SharedCtor() {
  ::memset(&hint_center_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&hint_center_pos_)) + sizeof(config_id_));
  _cached_size_ = 0;
}

SkyCrystalDetectorData::~SkyCrystalDetectorData() {
  // @@protoc_insertion_point(destructor:proto.SkyCrystalDetectorData)
  SharedDtor();
}

void SkyCrystalDetectorData::SharedDtor() {
  if (this != internal_default_instance()) delete hint_center_pos_;
}

void SkyCrystalDetectorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkyCrystalDetectorData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkyCrystalDetectorData& SkyCrystalDetectorData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkyCrystalDetectorData* SkyCrystalDetectorData::New(::google::protobuf::Arena* arena) const {
  SkyCrystalDetectorData* n = new SkyCrystalDetectorData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkyCrystalDetectorData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SkyCrystalDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hint_center_pos_ != NULL) {
    delete hint_center_pos_;
  }
  hint_center_pos_ = NULL;
  ::memset(&is_hint_valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&is_hint_valid_)) + sizeof(config_id_));
  _internal_metadata_.Clear();
}

bool SkyCrystalDetectorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SkyCrystalDetectorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_hint_valid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_hint_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector hint_center_pos = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hint_center_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SkyCrystalDetectorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SkyCrystalDetectorData)
  return false;
#undef DO_
}

void SkyCrystalDetectorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SkyCrystalDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_hint_valid = 3;
  if (this->is_hint_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_hint_valid(), output);
  }

  // uint32 group_id = 6;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->group_id(), output);
  }

  // .proto.Vector hint_center_pos = 8;
  if (this->has_hint_center_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->hint_center_pos_, output);
  }

  // uint32 config_id = 9;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SkyCrystalDetectorData)
}

::google::protobuf::uint8* SkyCrystalDetectorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SkyCrystalDetectorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_hint_valid = 3;
  if (this->is_hint_valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_hint_valid(), target);
  }

  // uint32 group_id = 6;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->group_id(), target);
  }

  // .proto.Vector hint_center_pos = 8;
  if (this->has_hint_center_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->hint_center_pos_, deterministic, target);
  }

  // uint32 config_id = 9;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SkyCrystalDetectorData)
  return target;
}

size_t SkyCrystalDetectorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SkyCrystalDetectorData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector hint_center_pos = 8;
  if (this->has_hint_center_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hint_center_pos_);
  }

  // bool is_hint_valid = 3;
  if (this->is_hint_valid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 group_id = 6;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 config_id = 9;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkyCrystalDetectorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SkyCrystalDetectorData)
  GOOGLE_DCHECK_NE(&from, this);
  const SkyCrystalDetectorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkyCrystalDetectorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SkyCrystalDetectorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SkyCrystalDetectorData)
    MergeFrom(*source);
  }
}

void SkyCrystalDetectorData::MergeFrom(const SkyCrystalDetectorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SkyCrystalDetectorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hint_center_pos()) {
    mutable_hint_center_pos()->::proto::Vector::MergeFrom(from.hint_center_pos());
  }
  if (from.is_hint_valid() != 0) {
    set_is_hint_valid(from.is_hint_valid());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void SkyCrystalDetectorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SkyCrystalDetectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkyCrystalDetectorData::CopyFrom(const SkyCrystalDetectorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SkyCrystalDetectorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkyCrystalDetectorData::IsInitialized() const {
  return true;
}

void SkyCrystalDetectorData::Swap(SkyCrystalDetectorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkyCrystalDetectorData::InternalSwap(SkyCrystalDetectorData* other) {
  using std::swap;
  swap(hint_center_pos_, other->hint_center_pos_);
  swap(is_hint_valid_, other->is_hint_valid_);
  swap(group_id_, other->group_id_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkyCrystalDetectorData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkyCrystalDetectorData

// bool is_hint_valid = 3;
void SkyCrystalDetectorData::clear_is_hint_valid() {
  is_hint_valid_ = false;
}
bool SkyCrystalDetectorData::is_hint_valid() const {
  // @@protoc_insertion_point(field_get:proto.SkyCrystalDetectorData.is_hint_valid)
  return is_hint_valid_;
}
void SkyCrystalDetectorData::set_is_hint_valid(bool value) {
  
  is_hint_valid_ = value;
  // @@protoc_insertion_point(field_set:proto.SkyCrystalDetectorData.is_hint_valid)
}

// .proto.Vector hint_center_pos = 8;
bool SkyCrystalDetectorData::has_hint_center_pos() const {
  return this != internal_default_instance() && hint_center_pos_ != NULL;
}
void SkyCrystalDetectorData::clear_hint_center_pos() {
  if (GetArenaNoVirtual() == NULL && hint_center_pos_ != NULL) delete hint_center_pos_;
  hint_center_pos_ = NULL;
}
const ::proto::Vector& SkyCrystalDetectorData::hint_center_pos() const {
  const ::proto::Vector* p = hint_center_pos_;
  // @@protoc_insertion_point(field_get:proto.SkyCrystalDetectorData.hint_center_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* SkyCrystalDetectorData::mutable_hint_center_pos() {
  
  if (hint_center_pos_ == NULL) {
    hint_center_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SkyCrystalDetectorData.hint_center_pos)
  return hint_center_pos_;
}
::proto::Vector* SkyCrystalDetectorData::release_hint_center_pos() {
  // @@protoc_insertion_point(field_release:proto.SkyCrystalDetectorData.hint_center_pos)
  
  ::proto::Vector* temp = hint_center_pos_;
  hint_center_pos_ = NULL;
  return temp;
}
void SkyCrystalDetectorData::set_allocated_hint_center_pos(::proto::Vector* hint_center_pos) {
  delete hint_center_pos_;
  hint_center_pos_ = hint_center_pos;
  if (hint_center_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SkyCrystalDetectorData.hint_center_pos)
}

// uint32 group_id = 6;
void SkyCrystalDetectorData::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 SkyCrystalDetectorData::group_id() const {
  // @@protoc_insertion_point(field_get:proto.SkyCrystalDetectorData.group_id)
  return group_id_;
}
void SkyCrystalDetectorData::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SkyCrystalDetectorData.group_id)
}

// uint32 config_id = 9;
void SkyCrystalDetectorData::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 SkyCrystalDetectorData::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SkyCrystalDetectorData.config_id)
  return config_id_;
}
void SkyCrystalDetectorData::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SkyCrystalDetectorData.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkyCrystalDetectorQuickUseResult::kSkyCrystalDetectorDataFieldNumber;
const int SkyCrystalDetectorQuickUseResult::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkyCrystalDetectorQuickUseResult::SkyCrystalDetectorQuickUseResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SkyCrystalDetectorQuickUseResult)
}
SkyCrystalDetectorQuickUseResult::SkyCrystalDetectorQuickUseResult(const SkyCrystalDetectorQuickUseResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sky_crystal_detector_data()) {
    sky_crystal_detector_data_ = new ::proto::SkyCrystalDetectorData(*from.sky_crystal_detector_data_);
  } else {
    sky_crystal_detector_data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SkyCrystalDetectorQuickUseResult)
}

void SkyCrystalDetectorQuickUseResult::SharedCtor() {
  ::memset(&sky_crystal_detector_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&sky_crystal_detector_data_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SkyCrystalDetectorQuickUseResult::~SkyCrystalDetectorQuickUseResult() {
  // @@protoc_insertion_point(destructor:proto.SkyCrystalDetectorQuickUseResult)
  SharedDtor();
}

void SkyCrystalDetectorQuickUseResult::SharedDtor() {
  if (this != internal_default_instance()) delete sky_crystal_detector_data_;
}

void SkyCrystalDetectorQuickUseResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkyCrystalDetectorQuickUseResult::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkyCrystalDetectorQuickUseResult& SkyCrystalDetectorQuickUseResult::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkyCrystalDetectorQuickUseResult* SkyCrystalDetectorQuickUseResult::New(::google::protobuf::Arena* arena) const {
  SkyCrystalDetectorQuickUseResult* n = new SkyCrystalDetectorQuickUseResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkyCrystalDetectorQuickUseResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SkyCrystalDetectorQuickUseResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sky_crystal_detector_data_ != NULL) {
    delete sky_crystal_detector_data_;
  }
  sky_crystal_detector_data_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SkyCrystalDetectorQuickUseResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SkyCrystalDetectorQuickUseResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sky_crystal_detector_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SkyCrystalDetectorQuickUseResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SkyCrystalDetectorQuickUseResult)
  return false;
#undef DO_
}

void SkyCrystalDetectorQuickUseResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SkyCrystalDetectorQuickUseResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
  if (this->has_sky_crystal_detector_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->sky_crystal_detector_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SkyCrystalDetectorQuickUseResult)
}

::google::protobuf::uint8* SkyCrystalDetectorQuickUseResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SkyCrystalDetectorQuickUseResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
  if (this->has_sky_crystal_detector_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->sky_crystal_detector_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SkyCrystalDetectorQuickUseResult)
  return target;
}

size_t SkyCrystalDetectorQuickUseResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SkyCrystalDetectorQuickUseResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
  if (this->has_sky_crystal_detector_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sky_crystal_detector_data_);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkyCrystalDetectorQuickUseResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SkyCrystalDetectorQuickUseResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SkyCrystalDetectorQuickUseResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkyCrystalDetectorQuickUseResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SkyCrystalDetectorQuickUseResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SkyCrystalDetectorQuickUseResult)
    MergeFrom(*source);
  }
}

void SkyCrystalDetectorQuickUseResult::MergeFrom(const SkyCrystalDetectorQuickUseResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SkyCrystalDetectorQuickUseResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sky_crystal_detector_data()) {
    mutable_sky_crystal_detector_data()->::proto::SkyCrystalDetectorData::MergeFrom(from.sky_crystal_detector_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SkyCrystalDetectorQuickUseResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SkyCrystalDetectorQuickUseResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkyCrystalDetectorQuickUseResult::CopyFrom(const SkyCrystalDetectorQuickUseResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SkyCrystalDetectorQuickUseResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkyCrystalDetectorQuickUseResult::IsInitialized() const {
  return true;
}

void SkyCrystalDetectorQuickUseResult::Swap(SkyCrystalDetectorQuickUseResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkyCrystalDetectorQuickUseResult::InternalSwap(SkyCrystalDetectorQuickUseResult* other) {
  using std::swap;
  swap(sky_crystal_detector_data_, other->sky_crystal_detector_data_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkyCrystalDetectorQuickUseResult::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkyCrystalDetectorQuickUseResult

// .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
bool SkyCrystalDetectorQuickUseResult::has_sky_crystal_detector_data() const {
  return this != internal_default_instance() && sky_crystal_detector_data_ != NULL;
}
void SkyCrystalDetectorQuickUseResult::clear_sky_crystal_detector_data() {
  if (GetArenaNoVirtual() == NULL && sky_crystal_detector_data_ != NULL) delete sky_crystal_detector_data_;
  sky_crystal_detector_data_ = NULL;
}
const ::proto::SkyCrystalDetectorData& SkyCrystalDetectorQuickUseResult::sky_crystal_detector_data() const {
  const ::proto::SkyCrystalDetectorData* p = sky_crystal_detector_data_;
  // @@protoc_insertion_point(field_get:proto.SkyCrystalDetectorQuickUseResult.sky_crystal_detector_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SkyCrystalDetectorData*>(
      &::proto::_SkyCrystalDetectorData_default_instance_);
}
::proto::SkyCrystalDetectorData* SkyCrystalDetectorQuickUseResult::mutable_sky_crystal_detector_data() {
  
  if (sky_crystal_detector_data_ == NULL) {
    sky_crystal_detector_data_ = new ::proto::SkyCrystalDetectorData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SkyCrystalDetectorQuickUseResult.sky_crystal_detector_data)
  return sky_crystal_detector_data_;
}
::proto::SkyCrystalDetectorData* SkyCrystalDetectorQuickUseResult::release_sky_crystal_detector_data() {
  // @@protoc_insertion_point(field_release:proto.SkyCrystalDetectorQuickUseResult.sky_crystal_detector_data)
  
  ::proto::SkyCrystalDetectorData* temp = sky_crystal_detector_data_;
  sky_crystal_detector_data_ = NULL;
  return temp;
}
void SkyCrystalDetectorQuickUseResult::set_allocated_sky_crystal_detector_data(::proto::SkyCrystalDetectorData* sky_crystal_detector_data) {
  delete sky_crystal_detector_data_;
  sky_crystal_detector_data_ = sky_crystal_detector_data;
  if (sky_crystal_detector_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SkyCrystalDetectorQuickUseResult.sky_crystal_detector_data)
}

// int32 retcode = 8;
void SkyCrystalDetectorQuickUseResult::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SkyCrystalDetectorQuickUseResult::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SkyCrystalDetectorQuickUseResult.retcode)
  return retcode_;
}
void SkyCrystalDetectorQuickUseResult::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SkyCrystalDetectorQuickUseResult.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WeatherWizardData::kShieldValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WeatherWizardData::WeatherWizardData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WeatherWizardData)
}
WeatherWizardData::WeatherWizardData(const WeatherWizardData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shield_value_ = from.shield_value_;
  // @@protoc_insertion_point(copy_constructor:proto.WeatherWizardData)
}

void WeatherWizardData::SharedCtor() {
  shield_value_ = 0u;
  _cached_size_ = 0;
}

WeatherWizardData::~WeatherWizardData() {
  // @@protoc_insertion_point(destructor:proto.WeatherWizardData)
  SharedDtor();
}

void WeatherWizardData::SharedDtor() {
}

void WeatherWizardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WeatherWizardData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WeatherWizardData& WeatherWizardData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WeatherWizardData* WeatherWizardData::New(::google::protobuf::Arena* arena) const {
  WeatherWizardData* n = new WeatherWizardData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WeatherWizardData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WeatherWizardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shield_value_ = 0u;
  _internal_metadata_.Clear();
}

bool WeatherWizardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WeatherWizardData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shield_value = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shield_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WeatherWizardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WeatherWizardData)
  return false;
#undef DO_
}

void WeatherWizardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WeatherWizardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shield_value = 13;
  if (this->shield_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->shield_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WeatherWizardData)
}

::google::protobuf::uint8* WeatherWizardData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WeatherWizardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shield_value = 13;
  if (this->shield_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->shield_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WeatherWizardData)
  return target;
}

size_t WeatherWizardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WeatherWizardData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 shield_value = 13;
  if (this->shield_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shield_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WeatherWizardData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WeatherWizardData)
  GOOGLE_DCHECK_NE(&from, this);
  const WeatherWizardData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WeatherWizardData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WeatherWizardData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WeatherWizardData)
    MergeFrom(*source);
  }
}

void WeatherWizardData::MergeFrom(const WeatherWizardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WeatherWizardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shield_value() != 0) {
    set_shield_value(from.shield_value());
  }
}

void WeatherWizardData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WeatherWizardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeatherWizardData::CopyFrom(const WeatherWizardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WeatherWizardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeatherWizardData::IsInitialized() const {
  return true;
}

void WeatherWizardData::Swap(WeatherWizardData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WeatherWizardData::InternalSwap(WeatherWizardData* other) {
  using std::swap;
  swap(shield_value_, other->shield_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WeatherWizardData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WeatherWizardData

// uint32 shield_value = 13;
void WeatherWizardData::clear_shield_value() {
  shield_value_ = 0u;
}
::google::protobuf::uint32 WeatherWizardData::shield_value() const {
  // @@protoc_insertion_point(field_get:proto.WeatherWizardData.shield_value)
  return shield_value_;
}
void WeatherWizardData::set_shield_value(::google::protobuf::uint32 value) {
  
  shield_value_ = value;
  // @@protoc_insertion_point(field_set:proto.WeatherWizardData.shield_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetCameraInfo::kTargetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetCameraInfo::WidgetCameraInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetCameraInfo)
}
WidgetCameraInfo::WidgetCameraInfo(const WidgetCameraInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_entity_id_ = from.target_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.WidgetCameraInfo)
}

void WidgetCameraInfo::SharedCtor() {
  target_entity_id_ = 0u;
  _cached_size_ = 0;
}

WidgetCameraInfo::~WidgetCameraInfo() {
  // @@protoc_insertion_point(destructor:proto.WidgetCameraInfo)
  SharedDtor();
}

void WidgetCameraInfo::SharedDtor() {
}

void WidgetCameraInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetCameraInfo::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetCameraInfo& WidgetCameraInfo::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetCameraInfo* WidgetCameraInfo::New(::google::protobuf::Arena* arena) const {
  WidgetCameraInfo* n = new WidgetCameraInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetCameraInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetCameraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool WidgetCameraInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetCameraInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetCameraInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetCameraInfo)
  return false;
#undef DO_
}

void WidgetCameraInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetCameraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_entity_id = 4;
  if (this->target_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetCameraInfo)
}

::google::protobuf::uint8* WidgetCameraInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetCameraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_entity_id = 4;
  if (this->target_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetCameraInfo)
  return target;
}

size_t WidgetCameraInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetCameraInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_entity_id = 4;
  if (this->target_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetCameraInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetCameraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetCameraInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetCameraInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetCameraInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetCameraInfo)
    MergeFrom(*source);
  }
}

void WidgetCameraInfo::MergeFrom(const WidgetCameraInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetCameraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_entity_id() != 0) {
    set_target_entity_id(from.target_entity_id());
  }
}

void WidgetCameraInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetCameraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetCameraInfo::CopyFrom(const WidgetCameraInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetCameraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetCameraInfo::IsInitialized() const {
  return true;
}

void WidgetCameraInfo::Swap(WidgetCameraInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetCameraInfo::InternalSwap(WidgetCameraInfo* other) {
  using std::swap;
  swap(target_entity_id_, other->target_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetCameraInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetCameraInfo

// uint32 target_entity_id = 4;
void WidgetCameraInfo::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
::google::protobuf::uint32 WidgetCameraInfo::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCameraInfo.target_entity_id)
  return target_entity_id_;
}
void WidgetCameraInfo::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCameraInfo.target_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetThunderBirdFeatherInfo::kEntityIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetThunderBirdFeatherInfo::WidgetThunderBirdFeatherInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetThunderBirdFeatherInfo)
}
WidgetThunderBirdFeatherInfo::WidgetThunderBirdFeatherInfo(const WidgetThunderBirdFeatherInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_id_list_(from.entity_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WidgetThunderBirdFeatherInfo)
}

void WidgetThunderBirdFeatherInfo::SharedCtor() {
  _cached_size_ = 0;
}

WidgetThunderBirdFeatherInfo::~WidgetThunderBirdFeatherInfo() {
  // @@protoc_insertion_point(destructor:proto.WidgetThunderBirdFeatherInfo)
  SharedDtor();
}

void WidgetThunderBirdFeatherInfo::SharedDtor() {
}

void WidgetThunderBirdFeatherInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetThunderBirdFeatherInfo::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetThunderBirdFeatherInfo& WidgetThunderBirdFeatherInfo::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetThunderBirdFeatherInfo* WidgetThunderBirdFeatherInfo::New(::google::protobuf::Arena* arena) const {
  WidgetThunderBirdFeatherInfo* n = new WidgetThunderBirdFeatherInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetThunderBirdFeatherInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetThunderBirdFeatherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool WidgetThunderBirdFeatherInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetThunderBirdFeatherInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 entity_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_entity_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_entity_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetThunderBirdFeatherInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetThunderBirdFeatherInfo)
  return false;
#undef DO_
}

void WidgetThunderBirdFeatherInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetThunderBirdFeatherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 entity_id_list = 4;
  if (this->entity_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _entity_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->entity_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->entity_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetThunderBirdFeatherInfo)
}

::google::protobuf::uint8* WidgetThunderBirdFeatherInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetThunderBirdFeatherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 entity_id_list = 4;
  if (this->entity_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _entity_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->entity_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetThunderBirdFeatherInfo)
  return target;
}

size_t WidgetThunderBirdFeatherInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetThunderBirdFeatherInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 entity_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->entity_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entity_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetThunderBirdFeatherInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetThunderBirdFeatherInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetThunderBirdFeatherInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetThunderBirdFeatherInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetThunderBirdFeatherInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetThunderBirdFeatherInfo)
    MergeFrom(*source);
  }
}

void WidgetThunderBirdFeatherInfo::MergeFrom(const WidgetThunderBirdFeatherInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetThunderBirdFeatherInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_id_list_.MergeFrom(from.entity_id_list_);
}

void WidgetThunderBirdFeatherInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetThunderBirdFeatherInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetThunderBirdFeatherInfo::CopyFrom(const WidgetThunderBirdFeatherInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetThunderBirdFeatherInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetThunderBirdFeatherInfo::IsInitialized() const {
  return true;
}

void WidgetThunderBirdFeatherInfo::Swap(WidgetThunderBirdFeatherInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetThunderBirdFeatherInfo::InternalSwap(WidgetThunderBirdFeatherInfo* other) {
  using std::swap;
  entity_id_list_.InternalSwap(&other->entity_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetThunderBirdFeatherInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetThunderBirdFeatherInfo

// repeated uint32 entity_id_list = 4;
int WidgetThunderBirdFeatherInfo::entity_id_list_size() const {
  return entity_id_list_.size();
}
void WidgetThunderBirdFeatherInfo::clear_entity_id_list() {
  entity_id_list_.Clear();
}
::google::protobuf::uint32 WidgetThunderBirdFeatherInfo::entity_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WidgetThunderBirdFeatherInfo.entity_id_list)
  return entity_id_list_.Get(index);
}
void WidgetThunderBirdFeatherInfo::set_entity_id_list(int index, ::google::protobuf::uint32 value) {
  entity_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WidgetThunderBirdFeatherInfo.entity_id_list)
}
void WidgetThunderBirdFeatherInfo::add_entity_id_list(::google::protobuf::uint32 value) {
  entity_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WidgetThunderBirdFeatherInfo.entity_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WidgetThunderBirdFeatherInfo::entity_id_list() const {
  // @@protoc_insertion_point(field_list:proto.WidgetThunderBirdFeatherInfo.entity_id_list)
  return entity_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WidgetThunderBirdFeatherInfo::mutable_entity_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WidgetThunderBirdFeatherInfo.entity_id_list)
  return &entity_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuickUseWidgetReq::kLocationInfoFieldNumber;
const int QuickUseWidgetReq::kCameraInfoFieldNumber;
const int QuickUseWidgetReq::kCreatorInfoFieldNumber;
const int QuickUseWidgetReq::kThunderBirdFeatherInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuickUseWidgetReq::QuickUseWidgetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuickUseWidgetReq)
}
QuickUseWidgetReq::QuickUseWidgetReq(const QuickUseWidgetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_param();
  switch (from.param_case()) {
    case kLocationInfo: {
      mutable_location_info()->::proto::WidgetCreateLocationInfo::MergeFrom(from.location_info());
      break;
    }
    case kCameraInfo: {
      mutable_camera_info()->::proto::WidgetCameraInfo::MergeFrom(from.camera_info());
      break;
    }
    case kCreatorInfo: {
      mutable_creator_info()->::proto::WidgetCreatorInfo::MergeFrom(from.creator_info());
      break;
    }
    case kThunderBirdFeatherInfo: {
      mutable_thunder_bird_feather_info()->::proto::WidgetThunderBirdFeatherInfo::MergeFrom(from.thunder_bird_feather_info());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.QuickUseWidgetReq)
}

void QuickUseWidgetReq::SharedCtor() {
  clear_has_param();
  _cached_size_ = 0;
}

QuickUseWidgetReq::~QuickUseWidgetReq() {
  // @@protoc_insertion_point(destructor:proto.QuickUseWidgetReq)
  SharedDtor();
}

void QuickUseWidgetReq::SharedDtor() {
  if (has_param()) {
    clear_param();
  }
}

void QuickUseWidgetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuickUseWidgetReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuickUseWidgetReq& QuickUseWidgetReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuickUseWidgetReq* QuickUseWidgetReq::New(::google::protobuf::Arena* arena) const {
  QuickUseWidgetReq* n = new QuickUseWidgetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuickUseWidgetReq::clear_param() {
// @@protoc_insertion_point(one_of_clear_start:proto.QuickUseWidgetReq)
  switch (param_case()) {
    case kLocationInfo: {
      delete param_.location_info_;
      break;
    }
    case kCameraInfo: {
      delete param_.camera_info_;
      break;
    }
    case kCreatorInfo: {
      delete param_.creator_info_;
      break;
    }
    case kThunderBirdFeatherInfo: {
      delete param_.thunder_bird_feather_info_;
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAM_NOT_SET;
}


void QuickUseWidgetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuickUseWidgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_param();
  _internal_metadata_.Clear();
}

bool QuickUseWidgetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuickUseWidgetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.WidgetCameraInfo camera_info = 478;
      case 478: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 3826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_camera_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetCreateLocationInfo location_info = 676;
      case 676: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 5410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetCreatorInfo creator_info = 812;
      case 812: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 6498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_creator_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1859;
      case 1859: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 14874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thunder_bird_feather_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuickUseWidgetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuickUseWidgetReq)
  return false;
#undef DO_
}

void QuickUseWidgetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuickUseWidgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetCameraInfo camera_info = 478;
  if (has_camera_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      478, *param_.camera_info_, output);
  }

  // .proto.WidgetCreateLocationInfo location_info = 676;
  if (has_location_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      676, *param_.location_info_, output);
  }

  // .proto.WidgetCreatorInfo creator_info = 812;
  if (has_creator_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      812, *param_.creator_info_, output);
  }

  // .proto.WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1859;
  if (has_thunder_bird_feather_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1859, *param_.thunder_bird_feather_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuickUseWidgetReq)
}

::google::protobuf::uint8* QuickUseWidgetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuickUseWidgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetCameraInfo camera_info = 478;
  if (has_camera_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        478, *param_.camera_info_, deterministic, target);
  }

  // .proto.WidgetCreateLocationInfo location_info = 676;
  if (has_location_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        676, *param_.location_info_, deterministic, target);
  }

  // .proto.WidgetCreatorInfo creator_info = 812;
  if (has_creator_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        812, *param_.creator_info_, deterministic, target);
  }

  // .proto.WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1859;
  if (has_thunder_bird_feather_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1859, *param_.thunder_bird_feather_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuickUseWidgetReq)
  return target;
}

size_t QuickUseWidgetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuickUseWidgetReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (param_case()) {
    // .proto.WidgetCreateLocationInfo location_info = 676;
    case kLocationInfo: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *param_.location_info_);
      break;
    }
    // .proto.WidgetCameraInfo camera_info = 478;
    case kCameraInfo: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *param_.camera_info_);
      break;
    }
    // .proto.WidgetCreatorInfo creator_info = 812;
    case kCreatorInfo: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *param_.creator_info_);
      break;
    }
    // .proto.WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1859;
    case kThunderBirdFeatherInfo: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *param_.thunder_bird_feather_info_);
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuickUseWidgetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuickUseWidgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuickUseWidgetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuickUseWidgetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuickUseWidgetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuickUseWidgetReq)
    MergeFrom(*source);
  }
}

void QuickUseWidgetReq::MergeFrom(const QuickUseWidgetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuickUseWidgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.param_case()) {
    case kLocationInfo: {
      mutable_location_info()->::proto::WidgetCreateLocationInfo::MergeFrom(from.location_info());
      break;
    }
    case kCameraInfo: {
      mutable_camera_info()->::proto::WidgetCameraInfo::MergeFrom(from.camera_info());
      break;
    }
    case kCreatorInfo: {
      mutable_creator_info()->::proto::WidgetCreatorInfo::MergeFrom(from.creator_info());
      break;
    }
    case kThunderBirdFeatherInfo: {
      mutable_thunder_bird_feather_info()->::proto::WidgetThunderBirdFeatherInfo::MergeFrom(from.thunder_bird_feather_info());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
}

void QuickUseWidgetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuickUseWidgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuickUseWidgetReq::CopyFrom(const QuickUseWidgetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuickUseWidgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuickUseWidgetReq::IsInitialized() const {
  return true;
}

void QuickUseWidgetReq::Swap(QuickUseWidgetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuickUseWidgetReq::InternalSwap(QuickUseWidgetReq* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuickUseWidgetReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuickUseWidgetReq

// .proto.WidgetCreateLocationInfo location_info = 676;
bool QuickUseWidgetReq::has_location_info() const {
  return param_case() == kLocationInfo;
}
void QuickUseWidgetReq::set_has_location_info() {
  _oneof_case_[0] = kLocationInfo;
}
void QuickUseWidgetReq::clear_location_info() {
  if (has_location_info()) {
    delete param_.location_info_;
    clear_has_param();
  }
}
 const ::proto::WidgetCreateLocationInfo& QuickUseWidgetReq::location_info() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetReq.location_info)
  return has_location_info()
      ? *param_.location_info_
      : ::proto::WidgetCreateLocationInfo::default_instance();
}
::proto::WidgetCreateLocationInfo* QuickUseWidgetReq::mutable_location_info() {
  if (!has_location_info()) {
    clear_param();
    set_has_location_info();
    param_.location_info_ = new ::proto::WidgetCreateLocationInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuickUseWidgetReq.location_info)
  return param_.location_info_;
}
::proto::WidgetCreateLocationInfo* QuickUseWidgetReq::release_location_info() {
  // @@protoc_insertion_point(field_release:proto.QuickUseWidgetReq.location_info)
  if (has_location_info()) {
    clear_has_param();
    ::proto::WidgetCreateLocationInfo* temp = param_.location_info_;
    param_.location_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QuickUseWidgetReq::set_allocated_location_info(::proto::WidgetCreateLocationInfo* location_info) {
  clear_param();
  if (location_info) {
    set_has_location_info();
    param_.location_info_ = location_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuickUseWidgetReq.location_info)
}

// .proto.WidgetCameraInfo camera_info = 478;
bool QuickUseWidgetReq::has_camera_info() const {
  return param_case() == kCameraInfo;
}
void QuickUseWidgetReq::set_has_camera_info() {
  _oneof_case_[0] = kCameraInfo;
}
void QuickUseWidgetReq::clear_camera_info() {
  if (has_camera_info()) {
    delete param_.camera_info_;
    clear_has_param();
  }
}
 const ::proto::WidgetCameraInfo& QuickUseWidgetReq::camera_info() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetReq.camera_info)
  return has_camera_info()
      ? *param_.camera_info_
      : ::proto::WidgetCameraInfo::default_instance();
}
::proto::WidgetCameraInfo* QuickUseWidgetReq::mutable_camera_info() {
  if (!has_camera_info()) {
    clear_param();
    set_has_camera_info();
    param_.camera_info_ = new ::proto::WidgetCameraInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuickUseWidgetReq.camera_info)
  return param_.camera_info_;
}
::proto::WidgetCameraInfo* QuickUseWidgetReq::release_camera_info() {
  // @@protoc_insertion_point(field_release:proto.QuickUseWidgetReq.camera_info)
  if (has_camera_info()) {
    clear_has_param();
    ::proto::WidgetCameraInfo* temp = param_.camera_info_;
    param_.camera_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QuickUseWidgetReq::set_allocated_camera_info(::proto::WidgetCameraInfo* camera_info) {
  clear_param();
  if (camera_info) {
    set_has_camera_info();
    param_.camera_info_ = camera_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuickUseWidgetReq.camera_info)
}

// .proto.WidgetCreatorInfo creator_info = 812;
bool QuickUseWidgetReq::has_creator_info() const {
  return param_case() == kCreatorInfo;
}
void QuickUseWidgetReq::set_has_creator_info() {
  _oneof_case_[0] = kCreatorInfo;
}
void QuickUseWidgetReq::clear_creator_info() {
  if (has_creator_info()) {
    delete param_.creator_info_;
    clear_has_param();
  }
}
 const ::proto::WidgetCreatorInfo& QuickUseWidgetReq::creator_info() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetReq.creator_info)
  return has_creator_info()
      ? *param_.creator_info_
      : ::proto::WidgetCreatorInfo::default_instance();
}
::proto::WidgetCreatorInfo* QuickUseWidgetReq::mutable_creator_info() {
  if (!has_creator_info()) {
    clear_param();
    set_has_creator_info();
    param_.creator_info_ = new ::proto::WidgetCreatorInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuickUseWidgetReq.creator_info)
  return param_.creator_info_;
}
::proto::WidgetCreatorInfo* QuickUseWidgetReq::release_creator_info() {
  // @@protoc_insertion_point(field_release:proto.QuickUseWidgetReq.creator_info)
  if (has_creator_info()) {
    clear_has_param();
    ::proto::WidgetCreatorInfo* temp = param_.creator_info_;
    param_.creator_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QuickUseWidgetReq::set_allocated_creator_info(::proto::WidgetCreatorInfo* creator_info) {
  clear_param();
  if (creator_info) {
    set_has_creator_info();
    param_.creator_info_ = creator_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuickUseWidgetReq.creator_info)
}

// .proto.WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1859;
bool QuickUseWidgetReq::has_thunder_bird_feather_info() const {
  return param_case() == kThunderBirdFeatherInfo;
}
void QuickUseWidgetReq::set_has_thunder_bird_feather_info() {
  _oneof_case_[0] = kThunderBirdFeatherInfo;
}
void QuickUseWidgetReq::clear_thunder_bird_feather_info() {
  if (has_thunder_bird_feather_info()) {
    delete param_.thunder_bird_feather_info_;
    clear_has_param();
  }
}
 const ::proto::WidgetThunderBirdFeatherInfo& QuickUseWidgetReq::thunder_bird_feather_info() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetReq.thunder_bird_feather_info)
  return has_thunder_bird_feather_info()
      ? *param_.thunder_bird_feather_info_
      : ::proto::WidgetThunderBirdFeatherInfo::default_instance();
}
::proto::WidgetThunderBirdFeatherInfo* QuickUseWidgetReq::mutable_thunder_bird_feather_info() {
  if (!has_thunder_bird_feather_info()) {
    clear_param();
    set_has_thunder_bird_feather_info();
    param_.thunder_bird_feather_info_ = new ::proto::WidgetThunderBirdFeatherInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuickUseWidgetReq.thunder_bird_feather_info)
  return param_.thunder_bird_feather_info_;
}
::proto::WidgetThunderBirdFeatherInfo* QuickUseWidgetReq::release_thunder_bird_feather_info() {
  // @@protoc_insertion_point(field_release:proto.QuickUseWidgetReq.thunder_bird_feather_info)
  if (has_thunder_bird_feather_info()) {
    clear_has_param();
    ::proto::WidgetThunderBirdFeatherInfo* temp = param_.thunder_bird_feather_info_;
    param_.thunder_bird_feather_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QuickUseWidgetReq::set_allocated_thunder_bird_feather_info(::proto::WidgetThunderBirdFeatherInfo* thunder_bird_feather_info) {
  clear_param();
  if (thunder_bird_feather_info) {
    set_has_thunder_bird_feather_info();
    param_.thunder_bird_feather_info_ = thunder_bird_feather_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuickUseWidgetReq.thunder_bird_feather_info)
}

bool QuickUseWidgetReq::has_param() const {
  return param_case() != PARAM_NOT_SET;
}
void QuickUseWidgetReq::clear_has_param() {
  _oneof_case_[0] = PARAM_NOT_SET;
}
QuickUseWidgetReq::ParamCase QuickUseWidgetReq::param_case() const {
  return QuickUseWidgetReq::ParamCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuickUseWidgetRsp::kMaterialIdFieldNumber;
const int QuickUseWidgetRsp::kRetcodeFieldNumber;
const int QuickUseWidgetRsp::kDetectorDataFieldNumber;
const int QuickUseWidgetRsp::kClientCollectorDataFieldNumber;
const int QuickUseWidgetRsp::kSkyCrystalDetectorQuickUseResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuickUseWidgetRsp::QuickUseWidgetRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuickUseWidgetRsp)
}
QuickUseWidgetRsp::QuickUseWidgetRsp(const QuickUseWidgetRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(material_id_));
  clear_has_param();
  switch (from.param_case()) {
    case kDetectorData: {
      mutable_detector_data()->::proto::OneoffGatherPointDetectorData::MergeFrom(from.detector_data());
      break;
    }
    case kClientCollectorData: {
      mutable_client_collector_data()->::proto::ClientCollectorData::MergeFrom(from.client_collector_data());
      break;
    }
    case kSkyCrystalDetectorQuickUseResult: {
      mutable_sky_crystal_detector_quick_use_result()->::proto::SkyCrystalDetectorQuickUseResult::MergeFrom(from.sky_crystal_detector_quick_use_result());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.QuickUseWidgetRsp)
}

void QuickUseWidgetRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(material_id_));
  clear_has_param();
  _cached_size_ = 0;
}

QuickUseWidgetRsp::~QuickUseWidgetRsp() {
  // @@protoc_insertion_point(destructor:proto.QuickUseWidgetRsp)
  SharedDtor();
}

void QuickUseWidgetRsp::SharedDtor() {
  if (has_param()) {
    clear_param();
  }
}

void QuickUseWidgetRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuickUseWidgetRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuickUseWidgetRsp& QuickUseWidgetRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuickUseWidgetRsp* QuickUseWidgetRsp::New(::google::protobuf::Arena* arena) const {
  QuickUseWidgetRsp* n = new QuickUseWidgetRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuickUseWidgetRsp::clear_param() {
// @@protoc_insertion_point(one_of_clear_start:proto.QuickUseWidgetRsp)
  switch (param_case()) {
    case kDetectorData: {
      delete param_.detector_data_;
      break;
    }
    case kClientCollectorData: {
      delete param_.client_collector_data_;
      break;
    }
    case kSkyCrystalDetectorQuickUseResult: {
      delete param_.sky_crystal_detector_quick_use_result_;
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAM_NOT_SET;
}


void QuickUseWidgetRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuickUseWidgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(material_id_));
  clear_param();
  _internal_metadata_.Clear();
}

bool QuickUseWidgetRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuickUseWidgetRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1351378u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.OneoffGatherPointDetectorData detector_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detector_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ClientCollectorData client_collector_data = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_collector_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 168922;
      case 168922: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1351378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sky_crystal_detector_quick_use_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuickUseWidgetRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuickUseWidgetRsp)
  return false;
#undef DO_
}

void QuickUseWidgetRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuickUseWidgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OneoffGatherPointDetectorData detector_data = 3;
  if (has_detector_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *param_.detector_data_, output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->material_id(), output);
  }

  // .proto.ClientCollectorData client_collector_data = 15;
  if (has_client_collector_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *param_.client_collector_data_, output);
  }

  // .proto.SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 168922;
  if (has_sky_crystal_detector_quick_use_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      168922, *param_.sky_crystal_detector_quick_use_result_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuickUseWidgetRsp)
}

::google::protobuf::uint8* QuickUseWidgetRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuickUseWidgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OneoffGatherPointDetectorData detector_data = 3;
  if (has_detector_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *param_.detector_data_, deterministic, target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->material_id(), target);
  }

  // .proto.ClientCollectorData client_collector_data = 15;
  if (has_client_collector_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *param_.client_collector_data_, deterministic, target);
  }

  // .proto.SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 168922;
  if (has_sky_crystal_detector_quick_use_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        168922, *param_.sky_crystal_detector_quick_use_result_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuickUseWidgetRsp)
  return target;
}

size_t QuickUseWidgetRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuickUseWidgetRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  switch (param_case()) {
    // .proto.OneoffGatherPointDetectorData detector_data = 3;
    case kDetectorData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *param_.detector_data_);
      break;
    }
    // .proto.ClientCollectorData client_collector_data = 15;
    case kClientCollectorData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *param_.client_collector_data_);
      break;
    }
    // .proto.SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 168922;
    case kSkyCrystalDetectorQuickUseResult: {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *param_.sky_crystal_detector_quick_use_result_);
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuickUseWidgetRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuickUseWidgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuickUseWidgetRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuickUseWidgetRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuickUseWidgetRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuickUseWidgetRsp)
    MergeFrom(*source);
  }
}

void QuickUseWidgetRsp::MergeFrom(const QuickUseWidgetRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuickUseWidgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  switch (from.param_case()) {
    case kDetectorData: {
      mutable_detector_data()->::proto::OneoffGatherPointDetectorData::MergeFrom(from.detector_data());
      break;
    }
    case kClientCollectorData: {
      mutable_client_collector_data()->::proto::ClientCollectorData::MergeFrom(from.client_collector_data());
      break;
    }
    case kSkyCrystalDetectorQuickUseResult: {
      mutable_sky_crystal_detector_quick_use_result()->::proto::SkyCrystalDetectorQuickUseResult::MergeFrom(from.sky_crystal_detector_quick_use_result());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
}

void QuickUseWidgetRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuickUseWidgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuickUseWidgetRsp::CopyFrom(const QuickUseWidgetRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuickUseWidgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuickUseWidgetRsp::IsInitialized() const {
  return true;
}

void QuickUseWidgetRsp::Swap(QuickUseWidgetRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuickUseWidgetRsp::InternalSwap(QuickUseWidgetRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(material_id_, other->material_id_);
  swap(param_, other->param_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuickUseWidgetRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuickUseWidgetRsp

// uint32 material_id = 6;
void QuickUseWidgetRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 QuickUseWidgetRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetRsp.material_id)
  return material_id_;
}
void QuickUseWidgetRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuickUseWidgetRsp.material_id)
}

// int32 retcode = 5;
void QuickUseWidgetRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuickUseWidgetRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetRsp.retcode)
  return retcode_;
}
void QuickUseWidgetRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuickUseWidgetRsp.retcode)
}

// .proto.OneoffGatherPointDetectorData detector_data = 3;
bool QuickUseWidgetRsp::has_detector_data() const {
  return param_case() == kDetectorData;
}
void QuickUseWidgetRsp::set_has_detector_data() {
  _oneof_case_[0] = kDetectorData;
}
void QuickUseWidgetRsp::clear_detector_data() {
  if (has_detector_data()) {
    delete param_.detector_data_;
    clear_has_param();
  }
}
 const ::proto::OneoffGatherPointDetectorData& QuickUseWidgetRsp::detector_data() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetRsp.detector_data)
  return has_detector_data()
      ? *param_.detector_data_
      : ::proto::OneoffGatherPointDetectorData::default_instance();
}
::proto::OneoffGatherPointDetectorData* QuickUseWidgetRsp::mutable_detector_data() {
  if (!has_detector_data()) {
    clear_param();
    set_has_detector_data();
    param_.detector_data_ = new ::proto::OneoffGatherPointDetectorData;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuickUseWidgetRsp.detector_data)
  return param_.detector_data_;
}
::proto::OneoffGatherPointDetectorData* QuickUseWidgetRsp::release_detector_data() {
  // @@protoc_insertion_point(field_release:proto.QuickUseWidgetRsp.detector_data)
  if (has_detector_data()) {
    clear_has_param();
    ::proto::OneoffGatherPointDetectorData* temp = param_.detector_data_;
    param_.detector_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QuickUseWidgetRsp::set_allocated_detector_data(::proto::OneoffGatherPointDetectorData* detector_data) {
  clear_param();
  if (detector_data) {
    set_has_detector_data();
    param_.detector_data_ = detector_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuickUseWidgetRsp.detector_data)
}

// .proto.ClientCollectorData client_collector_data = 15;
bool QuickUseWidgetRsp::has_client_collector_data() const {
  return param_case() == kClientCollectorData;
}
void QuickUseWidgetRsp::set_has_client_collector_data() {
  _oneof_case_[0] = kClientCollectorData;
}
void QuickUseWidgetRsp::clear_client_collector_data() {
  if (has_client_collector_data()) {
    delete param_.client_collector_data_;
    clear_has_param();
  }
}
 const ::proto::ClientCollectorData& QuickUseWidgetRsp::client_collector_data() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetRsp.client_collector_data)
  return has_client_collector_data()
      ? *param_.client_collector_data_
      : ::proto::ClientCollectorData::default_instance();
}
::proto::ClientCollectorData* QuickUseWidgetRsp::mutable_client_collector_data() {
  if (!has_client_collector_data()) {
    clear_param();
    set_has_client_collector_data();
    param_.client_collector_data_ = new ::proto::ClientCollectorData;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuickUseWidgetRsp.client_collector_data)
  return param_.client_collector_data_;
}
::proto::ClientCollectorData* QuickUseWidgetRsp::release_client_collector_data() {
  // @@protoc_insertion_point(field_release:proto.QuickUseWidgetRsp.client_collector_data)
  if (has_client_collector_data()) {
    clear_has_param();
    ::proto::ClientCollectorData* temp = param_.client_collector_data_;
    param_.client_collector_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QuickUseWidgetRsp::set_allocated_client_collector_data(::proto::ClientCollectorData* client_collector_data) {
  clear_param();
  if (client_collector_data) {
    set_has_client_collector_data();
    param_.client_collector_data_ = client_collector_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuickUseWidgetRsp.client_collector_data)
}

// .proto.SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 168922;
bool QuickUseWidgetRsp::has_sky_crystal_detector_quick_use_result() const {
  return param_case() == kSkyCrystalDetectorQuickUseResult;
}
void QuickUseWidgetRsp::set_has_sky_crystal_detector_quick_use_result() {
  _oneof_case_[0] = kSkyCrystalDetectorQuickUseResult;
}
void QuickUseWidgetRsp::clear_sky_crystal_detector_quick_use_result() {
  if (has_sky_crystal_detector_quick_use_result()) {
    delete param_.sky_crystal_detector_quick_use_result_;
    clear_has_param();
  }
}
 const ::proto::SkyCrystalDetectorQuickUseResult& QuickUseWidgetRsp::sky_crystal_detector_quick_use_result() const {
  // @@protoc_insertion_point(field_get:proto.QuickUseWidgetRsp.sky_crystal_detector_quick_use_result)
  return has_sky_crystal_detector_quick_use_result()
      ? *param_.sky_crystal_detector_quick_use_result_
      : ::proto::SkyCrystalDetectorQuickUseResult::default_instance();
}
::proto::SkyCrystalDetectorQuickUseResult* QuickUseWidgetRsp::mutable_sky_crystal_detector_quick_use_result() {
  if (!has_sky_crystal_detector_quick_use_result()) {
    clear_param();
    set_has_sky_crystal_detector_quick_use_result();
    param_.sky_crystal_detector_quick_use_result_ = new ::proto::SkyCrystalDetectorQuickUseResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuickUseWidgetRsp.sky_crystal_detector_quick_use_result)
  return param_.sky_crystal_detector_quick_use_result_;
}
::proto::SkyCrystalDetectorQuickUseResult* QuickUseWidgetRsp::release_sky_crystal_detector_quick_use_result() {
  // @@protoc_insertion_point(field_release:proto.QuickUseWidgetRsp.sky_crystal_detector_quick_use_result)
  if (has_sky_crystal_detector_quick_use_result()) {
    clear_has_param();
    ::proto::SkyCrystalDetectorQuickUseResult* temp = param_.sky_crystal_detector_quick_use_result_;
    param_.sky_crystal_detector_quick_use_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QuickUseWidgetRsp::set_allocated_sky_crystal_detector_quick_use_result(::proto::SkyCrystalDetectorQuickUseResult* sky_crystal_detector_quick_use_result) {
  clear_param();
  if (sky_crystal_detector_quick_use_result) {
    set_has_sky_crystal_detector_quick_use_result();
    param_.sky_crystal_detector_quick_use_result_ = sky_crystal_detector_quick_use_result;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuickUseWidgetRsp.sky_crystal_detector_quick_use_result)
}

bool QuickUseWidgetRsp::has_param() const {
  return param_case() != PARAM_NOT_SET;
}
void QuickUseWidgetRsp::clear_has_param() {
  _oneof_case_[0] = PARAM_NOT_SET;
}
QuickUseWidgetRsp::ParamCase QuickUseWidgetRsp::param_case() const {
  return QuickUseWidgetRsp::ParamCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetCoolDownData::kIsSuccessFieldNumber;
const int WidgetCoolDownData::kCoolDownTimeFieldNumber;
const int WidgetCoolDownData::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetCoolDownData::WidgetCoolDownData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetCoolDownData)
}
WidgetCoolDownData::WidgetCoolDownData(const WidgetCoolDownData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cool_down_time_, &from.cool_down_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&cool_down_time_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetCoolDownData)
}

void WidgetCoolDownData::SharedCtor() {
  ::memset(&cool_down_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&cool_down_time_)) + sizeof(id_));
  _cached_size_ = 0;
}

WidgetCoolDownData::~WidgetCoolDownData() {
  // @@protoc_insertion_point(destructor:proto.WidgetCoolDownData)
  SharedDtor();
}

void WidgetCoolDownData::SharedDtor() {
}

void WidgetCoolDownData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetCoolDownData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetCoolDownData& WidgetCoolDownData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetCoolDownData* WidgetCoolDownData::New(::google::protobuf::Arena* arena) const {
  WidgetCoolDownData* n = new WidgetCoolDownData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetCoolDownData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetCoolDownData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cool_down_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&cool_down_time_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool WidgetCoolDownData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetCoolDownData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 cool_down_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cool_down_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_success = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetCoolDownData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetCoolDownData)
  return false;
#undef DO_
}

void WidgetCoolDownData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetCoolDownData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cool_down_time = 4;
  if (this->cool_down_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->cool_down_time(), output);
  }

  // bool is_success = 5;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_success(), output);
  }

  // uint32 id = 15;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetCoolDownData)
}

::google::protobuf::uint8* WidgetCoolDownData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetCoolDownData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cool_down_time = 4;
  if (this->cool_down_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->cool_down_time(), target);
  }

  // bool is_success = 5;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_success(), target);
  }

  // uint32 id = 15;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetCoolDownData)
  return target;
}

size_t WidgetCoolDownData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetCoolDownData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 cool_down_time = 4;
  if (this->cool_down_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cool_down_time());
  }

  // bool is_success = 5;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 id = 15;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetCoolDownData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetCoolDownData)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetCoolDownData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetCoolDownData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetCoolDownData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetCoolDownData)
    MergeFrom(*source);
  }
}

void WidgetCoolDownData::MergeFrom(const WidgetCoolDownData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetCoolDownData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cool_down_time() != 0) {
    set_cool_down_time(from.cool_down_time());
  }
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void WidgetCoolDownData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetCoolDownData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetCoolDownData::CopyFrom(const WidgetCoolDownData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetCoolDownData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetCoolDownData::IsInitialized() const {
  return true;
}

void WidgetCoolDownData::Swap(WidgetCoolDownData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetCoolDownData::InternalSwap(WidgetCoolDownData* other) {
  using std::swap;
  swap(cool_down_time_, other->cool_down_time_);
  swap(is_success_, other->is_success_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetCoolDownData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetCoolDownData

// bool is_success = 5;
void WidgetCoolDownData::clear_is_success() {
  is_success_ = false;
}
bool WidgetCoolDownData::is_success() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCoolDownData.is_success)
  return is_success_;
}
void WidgetCoolDownData::set_is_success(bool value) {
  
  is_success_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCoolDownData.is_success)
}

// uint64 cool_down_time = 4;
void WidgetCoolDownData::clear_cool_down_time() {
  cool_down_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 WidgetCoolDownData::cool_down_time() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCoolDownData.cool_down_time)
  return cool_down_time_;
}
void WidgetCoolDownData::set_cool_down_time(::google::protobuf::uint64 value) {
  
  cool_down_time_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCoolDownData.cool_down_time)
}

// uint32 id = 15;
void WidgetCoolDownData::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 WidgetCoolDownData::id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCoolDownData.id)
  return id_;
}
void WidgetCoolDownData::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCoolDownData.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetCoolDownNotify::kNormalCoolDownDataListFieldNumber;
const int WidgetCoolDownNotify::kGroupCoolDownDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetCoolDownNotify::WidgetCoolDownNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetCoolDownNotify)
}
WidgetCoolDownNotify::WidgetCoolDownNotify(const WidgetCoolDownNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      normal_cool_down_data_list_(from.normal_cool_down_data_list_),
      group_cool_down_data_list_(from.group_cool_down_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WidgetCoolDownNotify)
}

void WidgetCoolDownNotify::SharedCtor() {
  _cached_size_ = 0;
}

WidgetCoolDownNotify::~WidgetCoolDownNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetCoolDownNotify)
  SharedDtor();
}

void WidgetCoolDownNotify::SharedDtor() {
}

void WidgetCoolDownNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetCoolDownNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetCoolDownNotify& WidgetCoolDownNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetCoolDownNotify* WidgetCoolDownNotify::New(::google::protobuf::Arena* arena) const {
  WidgetCoolDownNotify* n = new WidgetCoolDownNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetCoolDownNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetCoolDownNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  normal_cool_down_data_list_.Clear();
  group_cool_down_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool WidgetCoolDownNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetCoolDownNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_normal_cool_down_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WidgetCoolDownData group_cool_down_data_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group_cool_down_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetCoolDownNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetCoolDownNotify)
  return false;
#undef DO_
}

void WidgetCoolDownNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetCoolDownNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_cool_down_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->normal_cool_down_data_list(static_cast<int>(i)), output);
  }

  // repeated .proto.WidgetCoolDownData group_cool_down_data_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_cool_down_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->group_cool_down_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetCoolDownNotify)
}

::google::protobuf::uint8* WidgetCoolDownNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetCoolDownNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_cool_down_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->normal_cool_down_data_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.WidgetCoolDownData group_cool_down_data_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_cool_down_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->group_cool_down_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetCoolDownNotify)
  return target;
}

size_t WidgetCoolDownNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetCoolDownNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->normal_cool_down_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->normal_cool_down_data_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.WidgetCoolDownData group_cool_down_data_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->group_cool_down_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_cool_down_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetCoolDownNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetCoolDownNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetCoolDownNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetCoolDownNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetCoolDownNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetCoolDownNotify)
    MergeFrom(*source);
  }
}

void WidgetCoolDownNotify::MergeFrom(const WidgetCoolDownNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetCoolDownNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  normal_cool_down_data_list_.MergeFrom(from.normal_cool_down_data_list_);
  group_cool_down_data_list_.MergeFrom(from.group_cool_down_data_list_);
}

void WidgetCoolDownNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetCoolDownNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetCoolDownNotify::CopyFrom(const WidgetCoolDownNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetCoolDownNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetCoolDownNotify::IsInitialized() const {
  return true;
}

void WidgetCoolDownNotify::Swap(WidgetCoolDownNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetCoolDownNotify::InternalSwap(WidgetCoolDownNotify* other) {
  using std::swap;
  normal_cool_down_data_list_.InternalSwap(&other->normal_cool_down_data_list_);
  group_cool_down_data_list_.InternalSwap(&other->group_cool_down_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetCoolDownNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetCoolDownNotify

// repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 1;
int WidgetCoolDownNotify::normal_cool_down_data_list_size() const {
  return normal_cool_down_data_list_.size();
}
void WidgetCoolDownNotify::clear_normal_cool_down_data_list() {
  normal_cool_down_data_list_.Clear();
}
const ::proto::WidgetCoolDownData& WidgetCoolDownNotify::normal_cool_down_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WidgetCoolDownNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_.Get(index);
}
::proto::WidgetCoolDownData* WidgetCoolDownNotify::mutable_normal_cool_down_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WidgetCoolDownNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_.Mutable(index);
}
::proto::WidgetCoolDownData* WidgetCoolDownNotify::add_normal_cool_down_data_list() {
  // @@protoc_insertion_point(field_add:proto.WidgetCoolDownNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >*
WidgetCoolDownNotify::mutable_normal_cool_down_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WidgetCoolDownNotify.normal_cool_down_data_list)
  return &normal_cool_down_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >&
WidgetCoolDownNotify::normal_cool_down_data_list() const {
  // @@protoc_insertion_point(field_list:proto.WidgetCoolDownNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_;
}

// repeated .proto.WidgetCoolDownData group_cool_down_data_list = 12;
int WidgetCoolDownNotify::group_cool_down_data_list_size() const {
  return group_cool_down_data_list_.size();
}
void WidgetCoolDownNotify::clear_group_cool_down_data_list() {
  group_cool_down_data_list_.Clear();
}
const ::proto::WidgetCoolDownData& WidgetCoolDownNotify::group_cool_down_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WidgetCoolDownNotify.group_cool_down_data_list)
  return group_cool_down_data_list_.Get(index);
}
::proto::WidgetCoolDownData* WidgetCoolDownNotify::mutable_group_cool_down_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WidgetCoolDownNotify.group_cool_down_data_list)
  return group_cool_down_data_list_.Mutable(index);
}
::proto::WidgetCoolDownData* WidgetCoolDownNotify::add_group_cool_down_data_list() {
  // @@protoc_insertion_point(field_add:proto.WidgetCoolDownNotify.group_cool_down_data_list)
  return group_cool_down_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >*
WidgetCoolDownNotify::mutable_group_cool_down_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WidgetCoolDownNotify.group_cool_down_data_list)
  return &group_cool_down_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >&
WidgetCoolDownNotify::group_cool_down_data_list() const {
  // @@protoc_insertion_point(field_list:proto.WidgetCoolDownNotify.group_cool_down_data_list)
  return group_cool_down_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetReportReq::kWeatherWizardShieldValueFieldNumber;
const int WidgetReportReq::kIsClearSkyCrystalHintFieldNumber;
const int WidgetReportReq::kMaterialIdFieldNumber;
const int WidgetReportReq::kIsClientCollectFieldNumber;
const int WidgetReportReq::kIsClearHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetReportReq::WidgetReportReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetReportReq)
}
WidgetReportReq::WidgetReportReq(const WidgetReportReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_clear_hint_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(is_clear_hint_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetReportReq)
}

void WidgetReportReq::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_clear_hint_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(is_clear_hint_));
  _cached_size_ = 0;
}

WidgetReportReq::~WidgetReportReq() {
  // @@protoc_insertion_point(destructor:proto.WidgetReportReq)
  SharedDtor();
}

void WidgetReportReq::SharedDtor() {
}

void WidgetReportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetReportReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetReportReq& WidgetReportReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetReportReq* WidgetReportReq::New(::google::protobuf::Arena* arena) const {
  WidgetReportReq* n = new WidgetReportReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetReportReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_clear_hint_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(is_clear_hint_));
  _internal_metadata_.Clear();
}

bool WidgetReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetReportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_clear_sky_crystal_hint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_clear_sky_crystal_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 weather_wizard_shield_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_wizard_shield_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_clear_hint = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_clear_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_client_collect = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_client_collect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetReportReq)
  return false;
#undef DO_
}

void WidgetReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_clear_sky_crystal_hint = 5;
  if (this->is_clear_sky_crystal_hint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_clear_sky_crystal_hint(), output);
  }

  // uint32 weather_wizard_shield_value = 7;
  if (this->weather_wizard_shield_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->weather_wizard_shield_value(), output);
  }

  // bool is_clear_hint = 13;
  if (this->is_clear_hint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_clear_hint(), output);
  }

  // bool is_client_collect = 14;
  if (this->is_client_collect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_client_collect(), output);
  }

  // uint32 material_id = 15;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->material_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetReportReq)
}

::google::protobuf::uint8* WidgetReportReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_clear_sky_crystal_hint = 5;
  if (this->is_clear_sky_crystal_hint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_clear_sky_crystal_hint(), target);
  }

  // uint32 weather_wizard_shield_value = 7;
  if (this->weather_wizard_shield_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->weather_wizard_shield_value(), target);
  }

  // bool is_clear_hint = 13;
  if (this->is_clear_hint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_clear_hint(), target);
  }

  // bool is_client_collect = 14;
  if (this->is_client_collect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_client_collect(), target);
  }

  // uint32 material_id = 15;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->material_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetReportReq)
  return target;
}

size_t WidgetReportReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetReportReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 15;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // uint32 weather_wizard_shield_value = 7;
  if (this->weather_wizard_shield_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_wizard_shield_value());
  }

  // bool is_clear_sky_crystal_hint = 5;
  if (this->is_clear_sky_crystal_hint() != 0) {
    total_size += 1 + 1;
  }

  // bool is_client_collect = 14;
  if (this->is_client_collect() != 0) {
    total_size += 1 + 1;
  }

  // bool is_clear_hint = 13;
  if (this->is_clear_hint() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetReportReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetReportReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetReportReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetReportReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetReportReq)
    MergeFrom(*source);
  }
}

void WidgetReportReq::MergeFrom(const WidgetReportReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.weather_wizard_shield_value() != 0) {
    set_weather_wizard_shield_value(from.weather_wizard_shield_value());
  }
  if (from.is_clear_sky_crystal_hint() != 0) {
    set_is_clear_sky_crystal_hint(from.is_clear_sky_crystal_hint());
  }
  if (from.is_client_collect() != 0) {
    set_is_client_collect(from.is_client_collect());
  }
  if (from.is_clear_hint() != 0) {
    set_is_clear_hint(from.is_clear_hint());
  }
}

void WidgetReportReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetReportReq::CopyFrom(const WidgetReportReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetReportReq::IsInitialized() const {
  return true;
}

void WidgetReportReq::Swap(WidgetReportReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetReportReq::InternalSwap(WidgetReportReq* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(weather_wizard_shield_value_, other->weather_wizard_shield_value_);
  swap(is_clear_sky_crystal_hint_, other->is_clear_sky_crystal_hint_);
  swap(is_client_collect_, other->is_client_collect_);
  swap(is_clear_hint_, other->is_clear_hint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetReportReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetReportReq

// uint32 weather_wizard_shield_value = 7;
void WidgetReportReq::clear_weather_wizard_shield_value() {
  weather_wizard_shield_value_ = 0u;
}
::google::protobuf::uint32 WidgetReportReq::weather_wizard_shield_value() const {
  // @@protoc_insertion_point(field_get:proto.WidgetReportReq.weather_wizard_shield_value)
  return weather_wizard_shield_value_;
}
void WidgetReportReq::set_weather_wizard_shield_value(::google::protobuf::uint32 value) {
  
  weather_wizard_shield_value_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetReportReq.weather_wizard_shield_value)
}

// bool is_clear_sky_crystal_hint = 5;
void WidgetReportReq::clear_is_clear_sky_crystal_hint() {
  is_clear_sky_crystal_hint_ = false;
}
bool WidgetReportReq::is_clear_sky_crystal_hint() const {
  // @@protoc_insertion_point(field_get:proto.WidgetReportReq.is_clear_sky_crystal_hint)
  return is_clear_sky_crystal_hint_;
}
void WidgetReportReq::set_is_clear_sky_crystal_hint(bool value) {
  
  is_clear_sky_crystal_hint_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetReportReq.is_clear_sky_crystal_hint)
}

// uint32 material_id = 15;
void WidgetReportReq::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetReportReq::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetReportReq.material_id)
  return material_id_;
}
void WidgetReportReq::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetReportReq.material_id)
}

// bool is_client_collect = 14;
void WidgetReportReq::clear_is_client_collect() {
  is_client_collect_ = false;
}
bool WidgetReportReq::is_client_collect() const {
  // @@protoc_insertion_point(field_get:proto.WidgetReportReq.is_client_collect)
  return is_client_collect_;
}
void WidgetReportReq::set_is_client_collect(bool value) {
  
  is_client_collect_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetReportReq.is_client_collect)
}

// bool is_clear_hint = 13;
void WidgetReportReq::clear_is_clear_hint() {
  is_clear_hint_ = false;
}
bool WidgetReportReq::is_clear_hint() const {
  // @@protoc_insertion_point(field_get:proto.WidgetReportReq.is_clear_hint)
  return is_clear_hint_;
}
void WidgetReportReq::set_is_clear_hint(bool value) {
  
  is_clear_hint_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetReportReq.is_clear_hint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetReportRsp::kRetcodeFieldNumber;
const int WidgetReportRsp::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetReportRsp::WidgetReportRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetReportRsp)
}
WidgetReportRsp::WidgetReportRsp(const WidgetReportRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetReportRsp)
}

void WidgetReportRsp::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

WidgetReportRsp::~WidgetReportRsp() {
  // @@protoc_insertion_point(destructor:proto.WidgetReportRsp)
  SharedDtor();
}

void WidgetReportRsp::SharedDtor() {
}

void WidgetReportRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetReportRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetReportRsp& WidgetReportRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetReportRsp* WidgetReportRsp::New(::google::protobuf::Arena* arena) const {
  WidgetReportRsp* n = new WidgetReportRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetReportRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetReportRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool WidgetReportRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetReportRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetReportRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetReportRsp)
  return false;
#undef DO_
}

void WidgetReportRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetReportRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 4;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->material_id(), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetReportRsp)
}

::google::protobuf::uint8* WidgetReportRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetReportRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 4;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->material_id(), target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetReportRsp)
  return target;
}

size_t WidgetReportRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetReportRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 4;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetReportRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetReportRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetReportRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetReportRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetReportRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetReportRsp)
    MergeFrom(*source);
  }
}

void WidgetReportRsp::MergeFrom(const WidgetReportRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetReportRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void WidgetReportRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetReportRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetReportRsp::CopyFrom(const WidgetReportRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetReportRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetReportRsp::IsInitialized() const {
  return true;
}

void WidgetReportRsp::Swap(WidgetReportRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetReportRsp::InternalSwap(WidgetReportRsp* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetReportRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetReportRsp

// int32 retcode = 14;
void WidgetReportRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 WidgetReportRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WidgetReportRsp.retcode)
  return retcode_;
}
void WidgetReportRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetReportRsp.retcode)
}

// uint32 material_id = 4;
void WidgetReportRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetReportRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetReportRsp.material_id)
  return material_id_;
}
void WidgetReportRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetReportRsp.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCollectorDataNotify::kClientCollectorDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCollectorDataNotify::ClientCollectorDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientCollectorDataNotify)
}
ClientCollectorDataNotify::ClientCollectorDataNotify(const ClientCollectorDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      client_collector_data_list_(from.client_collector_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ClientCollectorDataNotify)
}

void ClientCollectorDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

ClientCollectorDataNotify::~ClientCollectorDataNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientCollectorDataNotify)
  SharedDtor();
}

void ClientCollectorDataNotify::SharedDtor() {
}

void ClientCollectorDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientCollectorDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientCollectorDataNotify& ClientCollectorDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientCollectorDataNotify* ClientCollectorDataNotify::New(::google::protobuf::Arena* arena) const {
  ClientCollectorDataNotify* n = new ClientCollectorDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientCollectorDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientCollectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_collector_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool ClientCollectorDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientCollectorDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ClientCollectorData client_collector_data_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_client_collector_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientCollectorDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientCollectorDataNotify)
  return false;
#undef DO_
}

void ClientCollectorDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientCollectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ClientCollectorData client_collector_data_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_collector_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->client_collector_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientCollectorDataNotify)
}

::google::protobuf::uint8* ClientCollectorDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientCollectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ClientCollectorData client_collector_data_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_collector_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->client_collector_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientCollectorDataNotify)
  return target;
}

size_t ClientCollectorDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientCollectorDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ClientCollectorData client_collector_data_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->client_collector_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_collector_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientCollectorDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientCollectorDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCollectorDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCollectorDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientCollectorDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientCollectorDataNotify)
    MergeFrom(*source);
  }
}

void ClientCollectorDataNotify::MergeFrom(const ClientCollectorDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientCollectorDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  client_collector_data_list_.MergeFrom(from.client_collector_data_list_);
}

void ClientCollectorDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientCollectorDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCollectorDataNotify::CopyFrom(const ClientCollectorDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientCollectorDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCollectorDataNotify::IsInitialized() const {
  return true;
}

void ClientCollectorDataNotify::Swap(ClientCollectorDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCollectorDataNotify::InternalSwap(ClientCollectorDataNotify* other) {
  using std::swap;
  client_collector_data_list_.InternalSwap(&other->client_collector_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientCollectorDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientCollectorDataNotify

// repeated .proto.ClientCollectorData client_collector_data_list = 13;
int ClientCollectorDataNotify::client_collector_data_list_size() const {
  return client_collector_data_list_.size();
}
void ClientCollectorDataNotify::clear_client_collector_data_list() {
  client_collector_data_list_.Clear();
}
const ::proto::ClientCollectorData& ClientCollectorDataNotify::client_collector_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientCollectorDataNotify.client_collector_data_list)
  return client_collector_data_list_.Get(index);
}
::proto::ClientCollectorData* ClientCollectorDataNotify::mutable_client_collector_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClientCollectorDataNotify.client_collector_data_list)
  return client_collector_data_list_.Mutable(index);
}
::proto::ClientCollectorData* ClientCollectorDataNotify::add_client_collector_data_list() {
  // @@protoc_insertion_point(field_add:proto.ClientCollectorDataNotify.client_collector_data_list)
  return client_collector_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ClientCollectorData >*
ClientCollectorDataNotify::mutable_client_collector_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientCollectorDataNotify.client_collector_data_list)
  return &client_collector_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ClientCollectorData >&
ClientCollectorDataNotify::client_collector_data_list() const {
  // @@protoc_insertion_point(field_list:proto.ClientCollectorDataNotify.client_collector_data_list)
  return client_collector_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneoffGatherPointDetectorDataNotify::kOneoffGatherPointDetectorDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneoffGatherPointDetectorDataNotify::OneoffGatherPointDetectorDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OneoffGatherPointDetectorDataNotify)
}
OneoffGatherPointDetectorDataNotify::OneoffGatherPointDetectorDataNotify(const OneoffGatherPointDetectorDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      oneoff_gather_point_detector_data_list_(from.oneoff_gather_point_detector_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.OneoffGatherPointDetectorDataNotify)
}

void OneoffGatherPointDetectorDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

OneoffGatherPointDetectorDataNotify::~OneoffGatherPointDetectorDataNotify() {
  // @@protoc_insertion_point(destructor:proto.OneoffGatherPointDetectorDataNotify)
  SharedDtor();
}

void OneoffGatherPointDetectorDataNotify::SharedDtor() {
}

void OneoffGatherPointDetectorDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneoffGatherPointDetectorDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneoffGatherPointDetectorDataNotify& OneoffGatherPointDetectorDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneoffGatherPointDetectorDataNotify* OneoffGatherPointDetectorDataNotify::New(::google::protobuf::Arena* arena) const {
  OneoffGatherPointDetectorDataNotify* n = new OneoffGatherPointDetectorDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneoffGatherPointDetectorDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OneoffGatherPointDetectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oneoff_gather_point_detector_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool OneoffGatherPointDetectorDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OneoffGatherPointDetectorDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_oneoff_gather_point_detector_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OneoffGatherPointDetectorDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OneoffGatherPointDetectorDataNotify)
  return false;
#undef DO_
}

void OneoffGatherPointDetectorDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OneoffGatherPointDetectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->oneoff_gather_point_detector_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->oneoff_gather_point_detector_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OneoffGatherPointDetectorDataNotify)
}

::google::protobuf::uint8* OneoffGatherPointDetectorDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OneoffGatherPointDetectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->oneoff_gather_point_detector_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->oneoff_gather_point_detector_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OneoffGatherPointDetectorDataNotify)
  return target;
}

size_t OneoffGatherPointDetectorDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OneoffGatherPointDetectorDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->oneoff_gather_point_detector_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oneoff_gather_point_detector_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneoffGatherPointDetectorDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OneoffGatherPointDetectorDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OneoffGatherPointDetectorDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneoffGatherPointDetectorDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OneoffGatherPointDetectorDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OneoffGatherPointDetectorDataNotify)
    MergeFrom(*source);
  }
}

void OneoffGatherPointDetectorDataNotify::MergeFrom(const OneoffGatherPointDetectorDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OneoffGatherPointDetectorDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  oneoff_gather_point_detector_data_list_.MergeFrom(from.oneoff_gather_point_detector_data_list_);
}

void OneoffGatherPointDetectorDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OneoffGatherPointDetectorDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneoffGatherPointDetectorDataNotify::CopyFrom(const OneoffGatherPointDetectorDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OneoffGatherPointDetectorDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneoffGatherPointDetectorDataNotify::IsInitialized() const {
  return true;
}

void OneoffGatherPointDetectorDataNotify::Swap(OneoffGatherPointDetectorDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneoffGatherPointDetectorDataNotify::InternalSwap(OneoffGatherPointDetectorDataNotify* other) {
  using std::swap;
  oneoff_gather_point_detector_data_list_.InternalSwap(&other->oneoff_gather_point_detector_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneoffGatherPointDetectorDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneoffGatherPointDetectorDataNotify

// repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 3;
int OneoffGatherPointDetectorDataNotify::oneoff_gather_point_detector_data_list_size() const {
  return oneoff_gather_point_detector_data_list_.size();
}
void OneoffGatherPointDetectorDataNotify::clear_oneoff_gather_point_detector_data_list() {
  oneoff_gather_point_detector_data_list_.Clear();
}
const ::proto::OneoffGatherPointDetectorData& OneoffGatherPointDetectorDataNotify::oneoff_gather_point_detector_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.OneoffGatherPointDetectorDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_.Get(index);
}
::proto::OneoffGatherPointDetectorData* OneoffGatherPointDetectorDataNotify::mutable_oneoff_gather_point_detector_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.OneoffGatherPointDetectorDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_.Mutable(index);
}
::proto::OneoffGatherPointDetectorData* OneoffGatherPointDetectorDataNotify::add_oneoff_gather_point_detector_data_list() {
  // @@protoc_insertion_point(field_add:proto.OneoffGatherPointDetectorDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::OneoffGatherPointDetectorData >*
OneoffGatherPointDetectorDataNotify::mutable_oneoff_gather_point_detector_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.OneoffGatherPointDetectorDataNotify.oneoff_gather_point_detector_data_list)
  return &oneoff_gather_point_detector_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::OneoffGatherPointDetectorData >&
OneoffGatherPointDetectorDataNotify::oneoff_gather_point_detector_data_list() const {
  // @@protoc_insertion_point(field_list:proto.OneoffGatherPointDetectorDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkyCrystalDetectorDataUpdateNotify::kSkyCrystalDetectorDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkyCrystalDetectorDataUpdateNotify::SkyCrystalDetectorDataUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SkyCrystalDetectorDataUpdateNotify)
}
SkyCrystalDetectorDataUpdateNotify::SkyCrystalDetectorDataUpdateNotify(const SkyCrystalDetectorDataUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sky_crystal_detector_data()) {
    sky_crystal_detector_data_ = new ::proto::SkyCrystalDetectorData(*from.sky_crystal_detector_data_);
  } else {
    sky_crystal_detector_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SkyCrystalDetectorDataUpdateNotify)
}

void SkyCrystalDetectorDataUpdateNotify::SharedCtor() {
  sky_crystal_detector_data_ = NULL;
  _cached_size_ = 0;
}

SkyCrystalDetectorDataUpdateNotify::~SkyCrystalDetectorDataUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.SkyCrystalDetectorDataUpdateNotify)
  SharedDtor();
}

void SkyCrystalDetectorDataUpdateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete sky_crystal_detector_data_;
}

void SkyCrystalDetectorDataUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkyCrystalDetectorDataUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkyCrystalDetectorDataUpdateNotify& SkyCrystalDetectorDataUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkyCrystalDetectorDataUpdateNotify* SkyCrystalDetectorDataUpdateNotify::New(::google::protobuf::Arena* arena) const {
  SkyCrystalDetectorDataUpdateNotify* n = new SkyCrystalDetectorDataUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkyCrystalDetectorDataUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SkyCrystalDetectorDataUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sky_crystal_detector_data_ != NULL) {
    delete sky_crystal_detector_data_;
  }
  sky_crystal_detector_data_ = NULL;
  _internal_metadata_.Clear();
}

bool SkyCrystalDetectorDataUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SkyCrystalDetectorDataUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sky_crystal_detector_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SkyCrystalDetectorDataUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SkyCrystalDetectorDataUpdateNotify)
  return false;
#undef DO_
}

void SkyCrystalDetectorDataUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SkyCrystalDetectorDataUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
  if (this->has_sky_crystal_detector_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->sky_crystal_detector_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SkyCrystalDetectorDataUpdateNotify)
}

::google::protobuf::uint8* SkyCrystalDetectorDataUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SkyCrystalDetectorDataUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
  if (this->has_sky_crystal_detector_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->sky_crystal_detector_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SkyCrystalDetectorDataUpdateNotify)
  return target;
}

size_t SkyCrystalDetectorDataUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SkyCrystalDetectorDataUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
  if (this->has_sky_crystal_detector_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sky_crystal_detector_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkyCrystalDetectorDataUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SkyCrystalDetectorDataUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SkyCrystalDetectorDataUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkyCrystalDetectorDataUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SkyCrystalDetectorDataUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SkyCrystalDetectorDataUpdateNotify)
    MergeFrom(*source);
  }
}

void SkyCrystalDetectorDataUpdateNotify::MergeFrom(const SkyCrystalDetectorDataUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SkyCrystalDetectorDataUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sky_crystal_detector_data()) {
    mutable_sky_crystal_detector_data()->::proto::SkyCrystalDetectorData::MergeFrom(from.sky_crystal_detector_data());
  }
}

void SkyCrystalDetectorDataUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SkyCrystalDetectorDataUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkyCrystalDetectorDataUpdateNotify::CopyFrom(const SkyCrystalDetectorDataUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SkyCrystalDetectorDataUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkyCrystalDetectorDataUpdateNotify::IsInitialized() const {
  return true;
}

void SkyCrystalDetectorDataUpdateNotify::Swap(SkyCrystalDetectorDataUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkyCrystalDetectorDataUpdateNotify::InternalSwap(SkyCrystalDetectorDataUpdateNotify* other) {
  using std::swap;
  swap(sky_crystal_detector_data_, other->sky_crystal_detector_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkyCrystalDetectorDataUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkyCrystalDetectorDataUpdateNotify

// .proto.SkyCrystalDetectorData sky_crystal_detector_data = 9;
bool SkyCrystalDetectorDataUpdateNotify::has_sky_crystal_detector_data() const {
  return this != internal_default_instance() && sky_crystal_detector_data_ != NULL;
}
void SkyCrystalDetectorDataUpdateNotify::clear_sky_crystal_detector_data() {
  if (GetArenaNoVirtual() == NULL && sky_crystal_detector_data_ != NULL) delete sky_crystal_detector_data_;
  sky_crystal_detector_data_ = NULL;
}
const ::proto::SkyCrystalDetectorData& SkyCrystalDetectorDataUpdateNotify::sky_crystal_detector_data() const {
  const ::proto::SkyCrystalDetectorData* p = sky_crystal_detector_data_;
  // @@protoc_insertion_point(field_get:proto.SkyCrystalDetectorDataUpdateNotify.sky_crystal_detector_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SkyCrystalDetectorData*>(
      &::proto::_SkyCrystalDetectorData_default_instance_);
}
::proto::SkyCrystalDetectorData* SkyCrystalDetectorDataUpdateNotify::mutable_sky_crystal_detector_data() {
  
  if (sky_crystal_detector_data_ == NULL) {
    sky_crystal_detector_data_ = new ::proto::SkyCrystalDetectorData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SkyCrystalDetectorDataUpdateNotify.sky_crystal_detector_data)
  return sky_crystal_detector_data_;
}
::proto::SkyCrystalDetectorData* SkyCrystalDetectorDataUpdateNotify::release_sky_crystal_detector_data() {
  // @@protoc_insertion_point(field_release:proto.SkyCrystalDetectorDataUpdateNotify.sky_crystal_detector_data)
  
  ::proto::SkyCrystalDetectorData* temp = sky_crystal_detector_data_;
  sky_crystal_detector_data_ = NULL;
  return temp;
}
void SkyCrystalDetectorDataUpdateNotify::set_allocated_sky_crystal_detector_data(::proto::SkyCrystalDetectorData* sky_crystal_detector_data) {
  delete sky_crystal_detector_data_;
  sky_crystal_detector_data_ = sky_crystal_detector_data;
  if (sky_crystal_detector_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SkyCrystalDetectorDataUpdateNotify.sky_crystal_detector_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreasureMapDetectorDataNotify::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreasureMapDetectorDataNotify::TreasureMapDetectorDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TreasureMapDetectorDataNotify)
}
TreasureMapDetectorDataNotify::TreasureMapDetectorDataNotify(const TreasureMapDetectorDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::proto::TreasureMapDetectorData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.TreasureMapDetectorDataNotify)
}

void TreasureMapDetectorDataNotify::SharedCtor() {
  data_ = NULL;
  _cached_size_ = 0;
}

TreasureMapDetectorDataNotify::~TreasureMapDetectorDataNotify() {
  // @@protoc_insertion_point(destructor:proto.TreasureMapDetectorDataNotify)
  SharedDtor();
}

void TreasureMapDetectorDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void TreasureMapDetectorDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreasureMapDetectorDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreasureMapDetectorDataNotify& TreasureMapDetectorDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

TreasureMapDetectorDataNotify* TreasureMapDetectorDataNotify::New(::google::protobuf::Arena* arena) const {
  TreasureMapDetectorDataNotify* n = new TreasureMapDetectorDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreasureMapDetectorDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TreasureMapDetectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool TreasureMapDetectorDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TreasureMapDetectorDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.TreasureMapDetectorData data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TreasureMapDetectorDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TreasureMapDetectorDataNotify)
  return false;
#undef DO_
}

void TreasureMapDetectorDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TreasureMapDetectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TreasureMapDetectorData data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TreasureMapDetectorDataNotify)
}

::google::protobuf::uint8* TreasureMapDetectorDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TreasureMapDetectorDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TreasureMapDetectorData data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TreasureMapDetectorDataNotify)
  return target;
}

size_t TreasureMapDetectorDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TreasureMapDetectorDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.TreasureMapDetectorData data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreasureMapDetectorDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TreasureMapDetectorDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TreasureMapDetectorDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreasureMapDetectorDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TreasureMapDetectorDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TreasureMapDetectorDataNotify)
    MergeFrom(*source);
  }
}

void TreasureMapDetectorDataNotify::MergeFrom(const TreasureMapDetectorDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TreasureMapDetectorDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::proto::TreasureMapDetectorData::MergeFrom(from.data());
  }
}

void TreasureMapDetectorDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TreasureMapDetectorDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreasureMapDetectorDataNotify::CopyFrom(const TreasureMapDetectorDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TreasureMapDetectorDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasureMapDetectorDataNotify::IsInitialized() const {
  return true;
}

void TreasureMapDetectorDataNotify::Swap(TreasureMapDetectorDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreasureMapDetectorDataNotify::InternalSwap(TreasureMapDetectorDataNotify* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TreasureMapDetectorDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TreasureMapDetectorDataNotify

// .proto.TreasureMapDetectorData data = 2;
bool TreasureMapDetectorDataNotify::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void TreasureMapDetectorDataNotify::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::proto::TreasureMapDetectorData& TreasureMapDetectorDataNotify::data() const {
  const ::proto::TreasureMapDetectorData* p = data_;
  // @@protoc_insertion_point(field_get:proto.TreasureMapDetectorDataNotify.data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TreasureMapDetectorData*>(
      &::proto::_TreasureMapDetectorData_default_instance_);
}
::proto::TreasureMapDetectorData* TreasureMapDetectorDataNotify::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::proto::TreasureMapDetectorData;
  }
  // @@protoc_insertion_point(field_mutable:proto.TreasureMapDetectorDataNotify.data)
  return data_;
}
::proto::TreasureMapDetectorData* TreasureMapDetectorDataNotify::release_data() {
  // @@protoc_insertion_point(field_release:proto.TreasureMapDetectorDataNotify.data)
  
  ::proto::TreasureMapDetectorData* temp = data_;
  data_ = NULL;
  return temp;
}
void TreasureMapDetectorDataNotify::set_allocated_data(::proto::TreasureMapDetectorData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TreasureMapDetectorDataNotify.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetSlotData::kCdOverTimeFieldNumber;
const int WidgetSlotData::kTagFieldNumber;
const int WidgetSlotData::kMaterialIdFieldNumber;
const int WidgetSlotData::kIsActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetSlotData::WidgetSlotData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetSlotData)
}
WidgetSlotData::WidgetSlotData(const WidgetSlotData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cd_over_time_, &from.cd_over_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&cd_over_time_)) + sizeof(tag_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetSlotData)
}

void WidgetSlotData::SharedCtor() {
  ::memset(&cd_over_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&cd_over_time_)) + sizeof(tag_));
  _cached_size_ = 0;
}

WidgetSlotData::~WidgetSlotData() {
  // @@protoc_insertion_point(destructor:proto.WidgetSlotData)
  SharedDtor();
}

void WidgetSlotData::SharedDtor() {
}

void WidgetSlotData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetSlotData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetSlotData& WidgetSlotData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetSlotData* WidgetSlotData::New(::google::protobuf::Arena* arena) const {
  WidgetSlotData* n = new WidgetSlotData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetSlotData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetSlotData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cd_over_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&cd_over_time_)) + sizeof(tag_));
  _internal_metadata_.Clear();
}

bool WidgetSlotData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetSlotData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cd_over_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_over_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_active = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetSlotTag tag = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tag(static_cast< ::proto::WidgetSlotTag >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetSlotData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetSlotData)
  return false;
#undef DO_
}

void WidgetSlotData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetSlotData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cd_over_time = 9;
  if (this->cd_over_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->cd_over_time(), output);
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->material_id(), output);
  }

  // bool is_active = 12;
  if (this->is_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_active(), output);
  }

  // .proto.WidgetSlotTag tag = 14;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetSlotData)
}

::google::protobuf::uint8* WidgetSlotData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetSlotData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cd_over_time = 9;
  if (this->cd_over_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->cd_over_time(), target);
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->material_id(), target);
  }

  // bool is_active = 12;
  if (this->is_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_active(), target);
  }

  // .proto.WidgetSlotTag tag = 14;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetSlotData)
  return target;
}

size_t WidgetSlotData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetSlotData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cd_over_time = 9;
  if (this->cd_over_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd_over_time());
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // bool is_active = 12;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  // .proto.WidgetSlotTag tag = 14;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetSlotData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetSlotData)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetSlotData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetSlotData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetSlotData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetSlotData)
    MergeFrom(*source);
  }
}

void WidgetSlotData::MergeFrom(const WidgetSlotData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetSlotData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cd_over_time() != 0) {
    set_cd_over_time(from.cd_over_time());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
  if (from.tag() != 0) {
    set_tag(from.tag());
  }
}

void WidgetSlotData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetSlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetSlotData::CopyFrom(const WidgetSlotData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetSlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetSlotData::IsInitialized() const {
  return true;
}

void WidgetSlotData::Swap(WidgetSlotData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetSlotData::InternalSwap(WidgetSlotData* other) {
  using std::swap;
  swap(cd_over_time_, other->cd_over_time_);
  swap(material_id_, other->material_id_);
  swap(is_active_, other->is_active_);
  swap(tag_, other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetSlotData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetSlotData

// uint32 cd_over_time = 9;
void WidgetSlotData::clear_cd_over_time() {
  cd_over_time_ = 0u;
}
::google::protobuf::uint32 WidgetSlotData::cd_over_time() const {
  // @@protoc_insertion_point(field_get:proto.WidgetSlotData.cd_over_time)
  return cd_over_time_;
}
void WidgetSlotData::set_cd_over_time(::google::protobuf::uint32 value) {
  
  cd_over_time_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetSlotData.cd_over_time)
}

// .proto.WidgetSlotTag tag = 14;
void WidgetSlotData::clear_tag() {
  tag_ = 0;
}
::proto::WidgetSlotTag WidgetSlotData::tag() const {
  // @@protoc_insertion_point(field_get:proto.WidgetSlotData.tag)
  return static_cast< ::proto::WidgetSlotTag >(tag_);
}
void WidgetSlotData::set_tag(::proto::WidgetSlotTag value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetSlotData.tag)
}

// uint32 material_id = 11;
void WidgetSlotData::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetSlotData::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetSlotData.material_id)
  return material_id_;
}
void WidgetSlotData::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetSlotData.material_id)
}

// bool is_active = 12;
void WidgetSlotData::clear_is_active() {
  is_active_ = false;
}
bool WidgetSlotData::is_active() const {
  // @@protoc_insertion_point(field_get:proto.WidgetSlotData.is_active)
  return is_active_;
}
void WidgetSlotData::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetSlotData.is_active)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetWidgetSlotReq::kTagListFieldNumber;
const int SetWidgetSlotReq::kMaterialIdFieldNumber;
const int SetWidgetSlotReq::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetWidgetSlotReq::SetWidgetSlotReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetWidgetSlotReq)
}
SetWidgetSlotReq::SetWidgetSlotReq(const SetWidgetSlotReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tag_list_(from.tag_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_, &from.op_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_id_) -
    reinterpret_cast<char*>(&op_)) + sizeof(material_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SetWidgetSlotReq)
}

void SetWidgetSlotReq::SharedCtor() {
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&op_)) + sizeof(material_id_));
  _cached_size_ = 0;
}

SetWidgetSlotReq::~SetWidgetSlotReq() {
  // @@protoc_insertion_point(destructor:proto.SetWidgetSlotReq)
  SharedDtor();
}

void SetWidgetSlotReq::SharedDtor() {
}

void SetWidgetSlotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetWidgetSlotReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetWidgetSlotReq& SetWidgetSlotReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetWidgetSlotReq* SetWidgetSlotReq::New(::google::protobuf::Arena* arena) const {
  SetWidgetSlotReq* n = new SetWidgetSlotReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetWidgetSlotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetWidgetSlotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_list_.Clear();
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&op_)) + sizeof(material_id_));
  _internal_metadata_.Clear();
}

bool SetWidgetSlotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetWidgetSlotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.WidgetSlotOp op = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::proto::WidgetSlotOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WidgetSlotTag tag_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_tag_list(static_cast< ::proto::WidgetSlotTag >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_tag_list(static_cast< ::proto::WidgetSlotTag >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetWidgetSlotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetWidgetSlotReq)
  return false;
#undef DO_
}

void SetWidgetSlotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetWidgetSlotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetSlotOp op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op(), output);
  }

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->material_id(), output);
  }

  // repeated .proto.WidgetSlotTag tag_list = 15;
  if (this->tag_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_tag_list_cached_byte_size_));
  }
  for (int i = 0, n = this->tag_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->tag_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetWidgetSlotReq)
}

::google::protobuf::uint8* SetWidgetSlotReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetWidgetSlotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetSlotOp op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op(), target);
  }

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->material_id(), target);
  }

  // repeated .proto.WidgetSlotTag tag_list = 15;
  if (this->tag_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _tag_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->tag_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetWidgetSlotReq)
  return target;
}

size_t SetWidgetSlotReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetWidgetSlotReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WidgetSlotTag tag_list = 15;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->tag_list_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->tag_list(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tag_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.WidgetSlotOp op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetWidgetSlotReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetWidgetSlotReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetWidgetSlotReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetWidgetSlotReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetWidgetSlotReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetWidgetSlotReq)
    MergeFrom(*source);
  }
}

void SetWidgetSlotReq::MergeFrom(const SetWidgetSlotReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetWidgetSlotReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_list_.MergeFrom(from.tag_list_);
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
}

void SetWidgetSlotReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetWidgetSlotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetWidgetSlotReq::CopyFrom(const SetWidgetSlotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetWidgetSlotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetWidgetSlotReq::IsInitialized() const {
  return true;
}

void SetWidgetSlotReq::Swap(SetWidgetSlotReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetWidgetSlotReq::InternalSwap(SetWidgetSlotReq* other) {
  using std::swap;
  tag_list_.InternalSwap(&other->tag_list_);
  swap(op_, other->op_);
  swap(material_id_, other->material_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetWidgetSlotReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetWidgetSlotReq

// repeated .proto.WidgetSlotTag tag_list = 15;
int SetWidgetSlotReq::tag_list_size() const {
  return tag_list_.size();
}
void SetWidgetSlotReq::clear_tag_list() {
  tag_list_.Clear();
}
::proto::WidgetSlotTag SetWidgetSlotReq::tag_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetWidgetSlotReq.tag_list)
  return static_cast< ::proto::WidgetSlotTag >(tag_list_.Get(index));
}
void SetWidgetSlotReq::set_tag_list(int index, ::proto::WidgetSlotTag value) {
  tag_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SetWidgetSlotReq.tag_list)
}
void SetWidgetSlotReq::add_tag_list(::proto::WidgetSlotTag value) {
  tag_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SetWidgetSlotReq.tag_list)
}
const ::google::protobuf::RepeatedField<int>&
SetWidgetSlotReq::tag_list() const {
  // @@protoc_insertion_point(field_list:proto.SetWidgetSlotReq.tag_list)
  return tag_list_;
}
::google::protobuf::RepeatedField<int>*
SetWidgetSlotReq::mutable_tag_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetWidgetSlotReq.tag_list)
  return &tag_list_;
}

// uint32 material_id = 6;
void SetWidgetSlotReq::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 SetWidgetSlotReq::material_id() const {
  // @@protoc_insertion_point(field_get:proto.SetWidgetSlotReq.material_id)
  return material_id_;
}
void SetWidgetSlotReq::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWidgetSlotReq.material_id)
}

// .proto.WidgetSlotOp op = 2;
void SetWidgetSlotReq::clear_op() {
  op_ = 0;
}
::proto::WidgetSlotOp SetWidgetSlotReq::op() const {
  // @@protoc_insertion_point(field_get:proto.SetWidgetSlotReq.op)
  return static_cast< ::proto::WidgetSlotOp >(op_);
}
void SetWidgetSlotReq::set_op(::proto::WidgetSlotOp value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWidgetSlotReq.op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetWidgetSlotRsp::kTagListFieldNumber;
const int SetWidgetSlotRsp::kRetcodeFieldNumber;
const int SetWidgetSlotRsp::kMaterialIdFieldNumber;
const int SetWidgetSlotRsp::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetWidgetSlotRsp::SetWidgetSlotRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetWidgetSlotRsp)
}
SetWidgetSlotRsp::SetWidgetSlotRsp(const SetWidgetSlotRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tag_list_(from.tag_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.SetWidgetSlotRsp)
}

void SetWidgetSlotRsp::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SetWidgetSlotRsp::~SetWidgetSlotRsp() {
  // @@protoc_insertion_point(destructor:proto.SetWidgetSlotRsp)
  SharedDtor();
}

void SetWidgetSlotRsp::SharedDtor() {
}

void SetWidgetSlotRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetWidgetSlotRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetWidgetSlotRsp& SetWidgetSlotRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetWidgetSlotRsp* SetWidgetSlotRsp::New(::google::protobuf::Arena* arena) const {
  SetWidgetSlotRsp* n = new SetWidgetSlotRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetWidgetSlotRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetWidgetSlotRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_list_.Clear();
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool SetWidgetSlotRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetWidgetSlotRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetSlotOp op = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::proto::WidgetSlotOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WidgetSlotTag tag_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_tag_list(static_cast< ::proto::WidgetSlotTag >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_tag_list(static_cast< ::proto::WidgetSlotTag >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetWidgetSlotRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetWidgetSlotRsp)
  return false;
#undef DO_
}

void SetWidgetSlotRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetWidgetSlotRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 1;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->material_id(), output);
  }

  // .proto.WidgetSlotOp op = 4;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op(), output);
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // repeated .proto.WidgetSlotTag tag_list = 15;
  if (this->tag_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_tag_list_cached_byte_size_));
  }
  for (int i = 0, n = this->tag_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->tag_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetWidgetSlotRsp)
}

::google::protobuf::uint8* SetWidgetSlotRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetWidgetSlotRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 1;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->material_id(), target);
  }

  // .proto.WidgetSlotOp op = 4;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op(), target);
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // repeated .proto.WidgetSlotTag tag_list = 15;
  if (this->tag_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _tag_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->tag_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetWidgetSlotRsp)
  return target;
}

size_t SetWidgetSlotRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetWidgetSlotRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WidgetSlotTag tag_list = 15;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->tag_list_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->tag_list(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tag_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 material_id = 1;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // .proto.WidgetSlotOp op = 4;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetWidgetSlotRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetWidgetSlotRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetWidgetSlotRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetWidgetSlotRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetWidgetSlotRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetWidgetSlotRsp)
    MergeFrom(*source);
  }
}

void SetWidgetSlotRsp::MergeFrom(const SetWidgetSlotRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetWidgetSlotRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_list_.MergeFrom(from.tag_list_);
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetWidgetSlotRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetWidgetSlotRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetWidgetSlotRsp::CopyFrom(const SetWidgetSlotRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetWidgetSlotRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetWidgetSlotRsp::IsInitialized() const {
  return true;
}

void SetWidgetSlotRsp::Swap(SetWidgetSlotRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetWidgetSlotRsp::InternalSwap(SetWidgetSlotRsp* other) {
  using std::swap;
  tag_list_.InternalSwap(&other->tag_list_);
  swap(material_id_, other->material_id_);
  swap(op_, other->op_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetWidgetSlotRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetWidgetSlotRsp

// repeated .proto.WidgetSlotTag tag_list = 15;
int SetWidgetSlotRsp::tag_list_size() const {
  return tag_list_.size();
}
void SetWidgetSlotRsp::clear_tag_list() {
  tag_list_.Clear();
}
::proto::WidgetSlotTag SetWidgetSlotRsp::tag_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetWidgetSlotRsp.tag_list)
  return static_cast< ::proto::WidgetSlotTag >(tag_list_.Get(index));
}
void SetWidgetSlotRsp::set_tag_list(int index, ::proto::WidgetSlotTag value) {
  tag_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SetWidgetSlotRsp.tag_list)
}
void SetWidgetSlotRsp::add_tag_list(::proto::WidgetSlotTag value) {
  tag_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SetWidgetSlotRsp.tag_list)
}
const ::google::protobuf::RepeatedField<int>&
SetWidgetSlotRsp::tag_list() const {
  // @@protoc_insertion_point(field_list:proto.SetWidgetSlotRsp.tag_list)
  return tag_list_;
}
::google::protobuf::RepeatedField<int>*
SetWidgetSlotRsp::mutable_tag_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetWidgetSlotRsp.tag_list)
  return &tag_list_;
}

// int32 retcode = 6;
void SetWidgetSlotRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetWidgetSlotRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetWidgetSlotRsp.retcode)
  return retcode_;
}
void SetWidgetSlotRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWidgetSlotRsp.retcode)
}

// uint32 material_id = 1;
void SetWidgetSlotRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 SetWidgetSlotRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.SetWidgetSlotRsp.material_id)
  return material_id_;
}
void SetWidgetSlotRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWidgetSlotRsp.material_id)
}

// .proto.WidgetSlotOp op = 4;
void SetWidgetSlotRsp::clear_op() {
  op_ = 0;
}
::proto::WidgetSlotOp SetWidgetSlotRsp::op() const {
  // @@protoc_insertion_point(field_get:proto.SetWidgetSlotRsp.op)
  return static_cast< ::proto::WidgetSlotOp >(op_);
}
void SetWidgetSlotRsp::set_op(::proto::WidgetSlotOp value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWidgetSlotRsp.op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetSlotChangeNotify::kOpFieldNumber;
const int WidgetSlotChangeNotify::kSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetSlotChangeNotify::WidgetSlotChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetSlotChangeNotify)
}
WidgetSlotChangeNotify::WidgetSlotChangeNotify(const WidgetSlotChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_slot()) {
    slot_ = new ::proto::WidgetSlotData(*from.slot_);
  } else {
    slot_ = NULL;
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:proto.WidgetSlotChangeNotify)
}

void WidgetSlotChangeNotify::SharedCtor() {
  ::memset(&slot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&slot_)) + sizeof(op_));
  _cached_size_ = 0;
}

WidgetSlotChangeNotify::~WidgetSlotChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetSlotChangeNotify)
  SharedDtor();
}

void WidgetSlotChangeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete slot_;
}

void WidgetSlotChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetSlotChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetSlotChangeNotify& WidgetSlotChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetSlotChangeNotify* WidgetSlotChangeNotify::New(::google::protobuf::Arena* arena) const {
  WidgetSlotChangeNotify* n = new WidgetSlotChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetSlotChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetSlotChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && slot_ != NULL) {
    delete slot_;
  }
  slot_ = NULL;
  op_ = 0;
  _internal_metadata_.Clear();
}

bool WidgetSlotChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetSlotChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.WidgetSlotData slot = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_slot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetSlotOp op = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::proto::WidgetSlotOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetSlotChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetSlotChangeNotify)
  return false;
#undef DO_
}

void WidgetSlotChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetSlotChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetSlotData slot = 8;
  if (this->has_slot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->slot_, output);
  }

  // .proto.WidgetSlotOp op = 11;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->op(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetSlotChangeNotify)
}

::google::protobuf::uint8* WidgetSlotChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetSlotChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetSlotData slot = 8;
  if (this->has_slot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->slot_, deterministic, target);
  }

  // .proto.WidgetSlotOp op = 11;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->op(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetSlotChangeNotify)
  return target;
}

size_t WidgetSlotChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetSlotChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.WidgetSlotData slot = 8;
  if (this->has_slot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->slot_);
  }

  // .proto.WidgetSlotOp op = 11;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetSlotChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetSlotChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetSlotChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetSlotChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetSlotChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetSlotChangeNotify)
    MergeFrom(*source);
  }
}

void WidgetSlotChangeNotify::MergeFrom(const WidgetSlotChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetSlotChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slot()) {
    mutable_slot()->::proto::WidgetSlotData::MergeFrom(from.slot());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void WidgetSlotChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetSlotChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetSlotChangeNotify::CopyFrom(const WidgetSlotChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetSlotChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetSlotChangeNotify::IsInitialized() const {
  return true;
}

void WidgetSlotChangeNotify::Swap(WidgetSlotChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetSlotChangeNotify::InternalSwap(WidgetSlotChangeNotify* other) {
  using std::swap;
  swap(slot_, other->slot_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetSlotChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetSlotChangeNotify

// .proto.WidgetSlotOp op = 11;
void WidgetSlotChangeNotify::clear_op() {
  op_ = 0;
}
::proto::WidgetSlotOp WidgetSlotChangeNotify::op() const {
  // @@protoc_insertion_point(field_get:proto.WidgetSlotChangeNotify.op)
  return static_cast< ::proto::WidgetSlotOp >(op_);
}
void WidgetSlotChangeNotify::set_op(::proto::WidgetSlotOp value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetSlotChangeNotify.op)
}

// .proto.WidgetSlotData slot = 8;
bool WidgetSlotChangeNotify::has_slot() const {
  return this != internal_default_instance() && slot_ != NULL;
}
void WidgetSlotChangeNotify::clear_slot() {
  if (GetArenaNoVirtual() == NULL && slot_ != NULL) delete slot_;
  slot_ = NULL;
}
const ::proto::WidgetSlotData& WidgetSlotChangeNotify::slot() const {
  const ::proto::WidgetSlotData* p = slot_;
  // @@protoc_insertion_point(field_get:proto.WidgetSlotChangeNotify.slot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WidgetSlotData*>(
      &::proto::_WidgetSlotData_default_instance_);
}
::proto::WidgetSlotData* WidgetSlotChangeNotify::mutable_slot() {
  
  if (slot_ == NULL) {
    slot_ = new ::proto::WidgetSlotData;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetSlotChangeNotify.slot)
  return slot_;
}
::proto::WidgetSlotData* WidgetSlotChangeNotify::release_slot() {
  // @@protoc_insertion_point(field_release:proto.WidgetSlotChangeNotify.slot)
  
  ::proto::WidgetSlotData* temp = slot_;
  slot_ = NULL;
  return temp;
}
void WidgetSlotChangeNotify::set_allocated_slot(::proto::WidgetSlotData* slot) {
  delete slot_;
  slot_ = slot;
  if (slot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetSlotChangeNotify.slot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWidgetSlotReq::GetWidgetSlotReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetWidgetSlotReq)
}
GetWidgetSlotReq::GetWidgetSlotReq(const GetWidgetSlotReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetWidgetSlotReq)
}

void GetWidgetSlotReq::SharedCtor() {
  _cached_size_ = 0;
}

GetWidgetSlotReq::~GetWidgetSlotReq() {
  // @@protoc_insertion_point(destructor:proto.GetWidgetSlotReq)
  SharedDtor();
}

void GetWidgetSlotReq::SharedDtor() {
}

void GetWidgetSlotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetWidgetSlotReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWidgetSlotReq& GetWidgetSlotReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetWidgetSlotReq* GetWidgetSlotReq::New(::google::protobuf::Arena* arena) const {
  GetWidgetSlotReq* n = new GetWidgetSlotReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetWidgetSlotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetWidgetSlotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetWidgetSlotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetWidgetSlotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetWidgetSlotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetWidgetSlotReq)
  return false;
#undef DO_
}

void GetWidgetSlotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetWidgetSlotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetWidgetSlotReq)
}

::google::protobuf::uint8* GetWidgetSlotReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetWidgetSlotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetWidgetSlotReq)
  return target;
}

size_t GetWidgetSlotReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetWidgetSlotReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetWidgetSlotReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetWidgetSlotReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWidgetSlotReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWidgetSlotReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetWidgetSlotReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetWidgetSlotReq)
    MergeFrom(*source);
  }
}

void GetWidgetSlotReq::MergeFrom(const GetWidgetSlotReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetWidgetSlotReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetWidgetSlotReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetWidgetSlotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWidgetSlotReq::CopyFrom(const GetWidgetSlotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetWidgetSlotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWidgetSlotReq::IsInitialized() const {
  return true;
}

void GetWidgetSlotReq::Swap(GetWidgetSlotReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWidgetSlotReq::InternalSwap(GetWidgetSlotReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetWidgetSlotReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetWidgetSlotReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetWidgetSlotRsp::kSlotListFieldNumber;
const int GetWidgetSlotRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWidgetSlotRsp::GetWidgetSlotRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetWidgetSlotRsp)
}
GetWidgetSlotRsp::GetWidgetSlotRsp(const GetWidgetSlotRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slot_list_(from.slot_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetWidgetSlotRsp)
}

void GetWidgetSlotRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetWidgetSlotRsp::~GetWidgetSlotRsp() {
  // @@protoc_insertion_point(destructor:proto.GetWidgetSlotRsp)
  SharedDtor();
}

void GetWidgetSlotRsp::SharedDtor() {
}

void GetWidgetSlotRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetWidgetSlotRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWidgetSlotRsp& GetWidgetSlotRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetWidgetSlotRsp* GetWidgetSlotRsp::New(::google::protobuf::Arena* arena) const {
  GetWidgetSlotRsp* n = new GetWidgetSlotRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetWidgetSlotRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetWidgetSlotRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetWidgetSlotRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetWidgetSlotRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WidgetSlotData slot_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetWidgetSlotRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetWidgetSlotRsp)
  return false;
#undef DO_
}

void GetWidgetSlotRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetWidgetSlotRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  // repeated .proto.WidgetSlotData slot_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->slot_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetWidgetSlotRsp)
}

::google::protobuf::uint8* GetWidgetSlotRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetWidgetSlotRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  // repeated .proto.WidgetSlotData slot_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->slot_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetWidgetSlotRsp)
  return target;
}

size_t GetWidgetSlotRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetWidgetSlotRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WidgetSlotData slot_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->slot_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slot_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetWidgetSlotRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetWidgetSlotRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWidgetSlotRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWidgetSlotRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetWidgetSlotRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetWidgetSlotRsp)
    MergeFrom(*source);
  }
}

void GetWidgetSlotRsp::MergeFrom(const GetWidgetSlotRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetWidgetSlotRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slot_list_.MergeFrom(from.slot_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetWidgetSlotRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetWidgetSlotRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWidgetSlotRsp::CopyFrom(const GetWidgetSlotRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetWidgetSlotRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWidgetSlotRsp::IsInitialized() const {
  return true;
}

void GetWidgetSlotRsp::Swap(GetWidgetSlotRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWidgetSlotRsp::InternalSwap(GetWidgetSlotRsp* other) {
  using std::swap;
  slot_list_.InternalSwap(&other->slot_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetWidgetSlotRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetWidgetSlotRsp

// repeated .proto.WidgetSlotData slot_list = 13;
int GetWidgetSlotRsp::slot_list_size() const {
  return slot_list_.size();
}
void GetWidgetSlotRsp::clear_slot_list() {
  slot_list_.Clear();
}
const ::proto::WidgetSlotData& GetWidgetSlotRsp::slot_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetWidgetSlotRsp.slot_list)
  return slot_list_.Get(index);
}
::proto::WidgetSlotData* GetWidgetSlotRsp::mutable_slot_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetWidgetSlotRsp.slot_list)
  return slot_list_.Mutable(index);
}
::proto::WidgetSlotData* GetWidgetSlotRsp::add_slot_list() {
  // @@protoc_insertion_point(field_add:proto.GetWidgetSlotRsp.slot_list)
  return slot_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >*
GetWidgetSlotRsp::mutable_slot_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetWidgetSlotRsp.slot_list)
  return &slot_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >&
GetWidgetSlotRsp::slot_list() const {
  // @@protoc_insertion_point(field_list:proto.GetWidgetSlotRsp.slot_list)
  return slot_list_;
}

// int32 retcode = 9;
void GetWidgetSlotRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetWidgetSlotRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetWidgetSlotRsp.retcode)
  return retcode_;
}
void GetWidgetSlotRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetWidgetSlotRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllWidgetDataNotify::kWeatherWizardDataFieldNumber;
const int AllWidgetDataNotify::kOneoffGatherPointDetectorDataListFieldNumber;
const int AllWidgetDataNotify::kNormalCoolDownDataListFieldNumber;
const int AllWidgetDataNotify::kLunchBoxDataFieldNumber;
const int AllWidgetDataNotify::kSkyCrystalDetectorDataFieldNumber;
const int AllWidgetDataNotify::kClientCollectorDataListFieldNumber;
const int AllWidgetDataNotify::kAnchorPointListFieldNumber;
const int AllWidgetDataNotify::kCoolDownGroupDataListFieldNumber;
const int AllWidgetDataNotify::kNextAnchorPointUsableTimeFieldNumber;
const int AllWidgetDataNotify::kSlotListFieldNumber;
const int AllWidgetDataNotify::kBackgroundActiveWidgetListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllWidgetDataNotify::AllWidgetDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AllWidgetDataNotify)
}
AllWidgetDataNotify::AllWidgetDataNotify(const AllWidgetDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      anchor_point_list_(from.anchor_point_list_),
      client_collector_data_list_(from.client_collector_data_list_),
      slot_list_(from.slot_list_),
      normal_cool_down_data_list_(from.normal_cool_down_data_list_),
      background_active_widget_list_(from.background_active_widget_list_),
      cool_down_group_data_list_(from.cool_down_group_data_list_),
      oneoff_gather_point_detector_data_list_(from.oneoff_gather_point_detector_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lunch_box_data()) {
    lunch_box_data_ = new ::proto::LunchBoxData(*from.lunch_box_data_);
  } else {
    lunch_box_data_ = NULL;
  }
  if (from.has_weather_wizard_data()) {
    weather_wizard_data_ = new ::proto::WeatherWizardData(*from.weather_wizard_data_);
  } else {
    weather_wizard_data_ = NULL;
  }
  if (from.has_sky_crystal_detector_data()) {
    sky_crystal_detector_data_ = new ::proto::SkyCrystalDetectorData(*from.sky_crystal_detector_data_);
  } else {
    sky_crystal_detector_data_ = NULL;
  }
  next_anchor_point_usable_time_ = from.next_anchor_point_usable_time_;
  // @@protoc_insertion_point(copy_constructor:proto.AllWidgetDataNotify)
}

void AllWidgetDataNotify::SharedCtor() {
  ::memset(&lunch_box_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_anchor_point_usable_time_) -
      reinterpret_cast<char*>(&lunch_box_data_)) + sizeof(next_anchor_point_usable_time_));
  _cached_size_ = 0;
}

AllWidgetDataNotify::~AllWidgetDataNotify() {
  // @@protoc_insertion_point(destructor:proto.AllWidgetDataNotify)
  SharedDtor();
}

void AllWidgetDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete lunch_box_data_;
  if (this != internal_default_instance()) delete weather_wizard_data_;
  if (this != internal_default_instance()) delete sky_crystal_detector_data_;
}

void AllWidgetDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllWidgetDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllWidgetDataNotify& AllWidgetDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllWidgetDataNotify* AllWidgetDataNotify::New(::google::protobuf::Arena* arena) const {
  AllWidgetDataNotify* n = new AllWidgetDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllWidgetDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AllWidgetDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  anchor_point_list_.Clear();
  client_collector_data_list_.Clear();
  slot_list_.Clear();
  normal_cool_down_data_list_.Clear();
  background_active_widget_list_.Clear();
  cool_down_group_data_list_.Clear();
  oneoff_gather_point_detector_data_list_.Clear();
  if (GetArenaNoVirtual() == NULL && lunch_box_data_ != NULL) {
    delete lunch_box_data_;
  }
  lunch_box_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && weather_wizard_data_ != NULL) {
    delete weather_wizard_data_;
  }
  weather_wizard_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && sky_crystal_detector_data_ != NULL) {
    delete sky_crystal_detector_data_;
  }
  sky_crystal_detector_data_ = NULL;
  next_anchor_point_usable_time_ = 0u;
  _internal_metadata_.Clear();
}

bool AllWidgetDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AllWidgetDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.LunchBoxData lunch_box_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lunch_box_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AnchorPointData anchor_point_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_anchor_point_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ClientCollectorData client_collector_data_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_client_collector_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WeatherWizardData weather_wizard_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weather_wizard_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WidgetSlotData slot_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_normal_cool_down_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 next_anchor_point_usable_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_anchor_point_usable_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 background_active_widget_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_background_active_widget_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_background_active_widget_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sky_crystal_detector_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WidgetCoolDownData cool_down_group_data_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cool_down_group_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_oneoff_gather_point_detector_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AllWidgetDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AllWidgetDataNotify)
  return false;
#undef DO_
}

void AllWidgetDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AllWidgetDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LunchBoxData lunch_box_data = 1;
  if (this->has_lunch_box_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lunch_box_data_, output);
  }

  // repeated .proto.AnchorPointData anchor_point_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anchor_point_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->anchor_point_list(static_cast<int>(i)), output);
  }

  // repeated .proto.ClientCollectorData client_collector_data_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_collector_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->client_collector_data_list(static_cast<int>(i)), output);
  }

  // .proto.WeatherWizardData weather_wizard_data = 5;
  if (this->has_weather_wizard_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->weather_wizard_data_, output);
  }

  // repeated .proto.WidgetSlotData slot_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->slot_list(static_cast<int>(i)), output);
  }

  // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_cool_down_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->normal_cool_down_data_list(static_cast<int>(i)), output);
  }

  // uint32 next_anchor_point_usable_time = 10;
  if (this->next_anchor_point_usable_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->next_anchor_point_usable_time(), output);
  }

  // repeated uint32 background_active_widget_list = 11;
  if (this->background_active_widget_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _background_active_widget_list_cached_byte_size_));
  }
  for (int i = 0, n = this->background_active_widget_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->background_active_widget_list(i), output);
  }

  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 12;
  if (this->has_sky_crystal_detector_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->sky_crystal_detector_data_, output);
  }

  // repeated .proto.WidgetCoolDownData cool_down_group_data_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cool_down_group_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->cool_down_group_data_list(static_cast<int>(i)), output);
  }

  // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->oneoff_gather_point_detector_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->oneoff_gather_point_detector_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AllWidgetDataNotify)
}

::google::protobuf::uint8* AllWidgetDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AllWidgetDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LunchBoxData lunch_box_data = 1;
  if (this->has_lunch_box_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lunch_box_data_, deterministic, target);
  }

  // repeated .proto.AnchorPointData anchor_point_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anchor_point_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->anchor_point_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ClientCollectorData client_collector_data_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_collector_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->client_collector_data_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.WeatherWizardData weather_wizard_data = 5;
  if (this->has_weather_wizard_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->weather_wizard_data_, deterministic, target);
  }

  // repeated .proto.WidgetSlotData slot_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->slot_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_cool_down_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->normal_cool_down_data_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 next_anchor_point_usable_time = 10;
  if (this->next_anchor_point_usable_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->next_anchor_point_usable_time(), target);
  }

  // repeated uint32 background_active_widget_list = 11;
  if (this->background_active_widget_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _background_active_widget_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->background_active_widget_list_, target);
  }

  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 12;
  if (this->has_sky_crystal_detector_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->sky_crystal_detector_data_, deterministic, target);
  }

  // repeated .proto.WidgetCoolDownData cool_down_group_data_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cool_down_group_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->cool_down_group_data_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->oneoff_gather_point_detector_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->oneoff_gather_point_detector_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AllWidgetDataNotify)
  return target;
}

size_t AllWidgetDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AllWidgetDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AnchorPointData anchor_point_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->anchor_point_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->anchor_point_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.ClientCollectorData client_collector_data_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->client_collector_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client_collector_data_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.WidgetSlotData slot_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->slot_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slot_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->normal_cool_down_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->normal_cool_down_data_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 background_active_widget_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->background_active_widget_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _background_active_widget_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.WidgetCoolDownData cool_down_group_data_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->cool_down_group_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cool_down_group_data_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->oneoff_gather_point_detector_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oneoff_gather_point_detector_data_list(static_cast<int>(i)));
    }
  }

  // .proto.LunchBoxData lunch_box_data = 1;
  if (this->has_lunch_box_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lunch_box_data_);
  }

  // .proto.WeatherWizardData weather_wizard_data = 5;
  if (this->has_weather_wizard_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->weather_wizard_data_);
  }

  // .proto.SkyCrystalDetectorData sky_crystal_detector_data = 12;
  if (this->has_sky_crystal_detector_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sky_crystal_detector_data_);
  }

  // uint32 next_anchor_point_usable_time = 10;
  if (this->next_anchor_point_usable_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->next_anchor_point_usable_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllWidgetDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AllWidgetDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AllWidgetDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllWidgetDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AllWidgetDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AllWidgetDataNotify)
    MergeFrom(*source);
  }
}

void AllWidgetDataNotify::MergeFrom(const AllWidgetDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AllWidgetDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  anchor_point_list_.MergeFrom(from.anchor_point_list_);
  client_collector_data_list_.MergeFrom(from.client_collector_data_list_);
  slot_list_.MergeFrom(from.slot_list_);
  normal_cool_down_data_list_.MergeFrom(from.normal_cool_down_data_list_);
  background_active_widget_list_.MergeFrom(from.background_active_widget_list_);
  cool_down_group_data_list_.MergeFrom(from.cool_down_group_data_list_);
  oneoff_gather_point_detector_data_list_.MergeFrom(from.oneoff_gather_point_detector_data_list_);
  if (from.has_lunch_box_data()) {
    mutable_lunch_box_data()->::proto::LunchBoxData::MergeFrom(from.lunch_box_data());
  }
  if (from.has_weather_wizard_data()) {
    mutable_weather_wizard_data()->::proto::WeatherWizardData::MergeFrom(from.weather_wizard_data());
  }
  if (from.has_sky_crystal_detector_data()) {
    mutable_sky_crystal_detector_data()->::proto::SkyCrystalDetectorData::MergeFrom(from.sky_crystal_detector_data());
  }
  if (from.next_anchor_point_usable_time() != 0) {
    set_next_anchor_point_usable_time(from.next_anchor_point_usable_time());
  }
}

void AllWidgetDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AllWidgetDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllWidgetDataNotify::CopyFrom(const AllWidgetDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AllWidgetDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllWidgetDataNotify::IsInitialized() const {
  return true;
}

void AllWidgetDataNotify::Swap(AllWidgetDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllWidgetDataNotify::InternalSwap(AllWidgetDataNotify* other) {
  using std::swap;
  anchor_point_list_.InternalSwap(&other->anchor_point_list_);
  client_collector_data_list_.InternalSwap(&other->client_collector_data_list_);
  slot_list_.InternalSwap(&other->slot_list_);
  normal_cool_down_data_list_.InternalSwap(&other->normal_cool_down_data_list_);
  background_active_widget_list_.InternalSwap(&other->background_active_widget_list_);
  cool_down_group_data_list_.InternalSwap(&other->cool_down_group_data_list_);
  oneoff_gather_point_detector_data_list_.InternalSwap(&other->oneoff_gather_point_detector_data_list_);
  swap(lunch_box_data_, other->lunch_box_data_);
  swap(weather_wizard_data_, other->weather_wizard_data_);
  swap(sky_crystal_detector_data_, other->sky_crystal_detector_data_);
  swap(next_anchor_point_usable_time_, other->next_anchor_point_usable_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllWidgetDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllWidgetDataNotify

// .proto.WeatherWizardData weather_wizard_data = 5;
bool AllWidgetDataNotify::has_weather_wizard_data() const {
  return this != internal_default_instance() && weather_wizard_data_ != NULL;
}
void AllWidgetDataNotify::clear_weather_wizard_data() {
  if (GetArenaNoVirtual() == NULL && weather_wizard_data_ != NULL) delete weather_wizard_data_;
  weather_wizard_data_ = NULL;
}
const ::proto::WeatherWizardData& AllWidgetDataNotify::weather_wizard_data() const {
  const ::proto::WeatherWizardData* p = weather_wizard_data_;
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.weather_wizard_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WeatherWizardData*>(
      &::proto::_WeatherWizardData_default_instance_);
}
::proto::WeatherWizardData* AllWidgetDataNotify::mutable_weather_wizard_data() {
  
  if (weather_wizard_data_ == NULL) {
    weather_wizard_data_ = new ::proto::WeatherWizardData;
  }
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.weather_wizard_data)
  return weather_wizard_data_;
}
::proto::WeatherWizardData* AllWidgetDataNotify::release_weather_wizard_data() {
  // @@protoc_insertion_point(field_release:proto.AllWidgetDataNotify.weather_wizard_data)
  
  ::proto::WeatherWizardData* temp = weather_wizard_data_;
  weather_wizard_data_ = NULL;
  return temp;
}
void AllWidgetDataNotify::set_allocated_weather_wizard_data(::proto::WeatherWizardData* weather_wizard_data) {
  delete weather_wizard_data_;
  weather_wizard_data_ = weather_wizard_data;
  if (weather_wizard_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AllWidgetDataNotify.weather_wizard_data)
}

// repeated .proto.OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 15;
int AllWidgetDataNotify::oneoff_gather_point_detector_data_list_size() const {
  return oneoff_gather_point_detector_data_list_.size();
}
void AllWidgetDataNotify::clear_oneoff_gather_point_detector_data_list() {
  oneoff_gather_point_detector_data_list_.Clear();
}
const ::proto::OneoffGatherPointDetectorData& AllWidgetDataNotify::oneoff_gather_point_detector_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_.Get(index);
}
::proto::OneoffGatherPointDetectorData* AllWidgetDataNotify::mutable_oneoff_gather_point_detector_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_.Mutable(index);
}
::proto::OneoffGatherPointDetectorData* AllWidgetDataNotify::add_oneoff_gather_point_detector_data_list() {
  // @@protoc_insertion_point(field_add:proto.AllWidgetDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::OneoffGatherPointDetectorData >*
AllWidgetDataNotify::mutable_oneoff_gather_point_detector_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetDataNotify.oneoff_gather_point_detector_data_list)
  return &oneoff_gather_point_detector_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::OneoffGatherPointDetectorData >&
AllWidgetDataNotify::oneoff_gather_point_detector_data_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetDataNotify.oneoff_gather_point_detector_data_list)
  return oneoff_gather_point_detector_data_list_;
}

// repeated .proto.WidgetCoolDownData normal_cool_down_data_list = 9;
int AllWidgetDataNotify::normal_cool_down_data_list_size() const {
  return normal_cool_down_data_list_.size();
}
void AllWidgetDataNotify::clear_normal_cool_down_data_list() {
  normal_cool_down_data_list_.Clear();
}
const ::proto::WidgetCoolDownData& AllWidgetDataNotify::normal_cool_down_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_.Get(index);
}
::proto::WidgetCoolDownData* AllWidgetDataNotify::mutable_normal_cool_down_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_.Mutable(index);
}
::proto::WidgetCoolDownData* AllWidgetDataNotify::add_normal_cool_down_data_list() {
  // @@protoc_insertion_point(field_add:proto.AllWidgetDataNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >*
AllWidgetDataNotify::mutable_normal_cool_down_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetDataNotify.normal_cool_down_data_list)
  return &normal_cool_down_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >&
AllWidgetDataNotify::normal_cool_down_data_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetDataNotify.normal_cool_down_data_list)
  return normal_cool_down_data_list_;
}

// .proto.LunchBoxData lunch_box_data = 1;
bool AllWidgetDataNotify::has_lunch_box_data() const {
  return this != internal_default_instance() && lunch_box_data_ != NULL;
}
void AllWidgetDataNotify::clear_lunch_box_data() {
  if (GetArenaNoVirtual() == NULL && lunch_box_data_ != NULL) delete lunch_box_data_;
  lunch_box_data_ = NULL;
}
const ::proto::LunchBoxData& AllWidgetDataNotify::lunch_box_data() const {
  const ::proto::LunchBoxData* p = lunch_box_data_;
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.lunch_box_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::LunchBoxData*>(
      &::proto::_LunchBoxData_default_instance_);
}
::proto::LunchBoxData* AllWidgetDataNotify::mutable_lunch_box_data() {
  
  if (lunch_box_data_ == NULL) {
    lunch_box_data_ = new ::proto::LunchBoxData;
  }
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.lunch_box_data)
  return lunch_box_data_;
}
::proto::LunchBoxData* AllWidgetDataNotify::release_lunch_box_data() {
  // @@protoc_insertion_point(field_release:proto.AllWidgetDataNotify.lunch_box_data)
  
  ::proto::LunchBoxData* temp = lunch_box_data_;
  lunch_box_data_ = NULL;
  return temp;
}
void AllWidgetDataNotify::set_allocated_lunch_box_data(::proto::LunchBoxData* lunch_box_data) {
  delete lunch_box_data_;
  lunch_box_data_ = lunch_box_data;
  if (lunch_box_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AllWidgetDataNotify.lunch_box_data)
}

// .proto.SkyCrystalDetectorData sky_crystal_detector_data = 12;
bool AllWidgetDataNotify::has_sky_crystal_detector_data() const {
  return this != internal_default_instance() && sky_crystal_detector_data_ != NULL;
}
void AllWidgetDataNotify::clear_sky_crystal_detector_data() {
  if (GetArenaNoVirtual() == NULL && sky_crystal_detector_data_ != NULL) delete sky_crystal_detector_data_;
  sky_crystal_detector_data_ = NULL;
}
const ::proto::SkyCrystalDetectorData& AllWidgetDataNotify::sky_crystal_detector_data() const {
  const ::proto::SkyCrystalDetectorData* p = sky_crystal_detector_data_;
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.sky_crystal_detector_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SkyCrystalDetectorData*>(
      &::proto::_SkyCrystalDetectorData_default_instance_);
}
::proto::SkyCrystalDetectorData* AllWidgetDataNotify::mutable_sky_crystal_detector_data() {
  
  if (sky_crystal_detector_data_ == NULL) {
    sky_crystal_detector_data_ = new ::proto::SkyCrystalDetectorData;
  }
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.sky_crystal_detector_data)
  return sky_crystal_detector_data_;
}
::proto::SkyCrystalDetectorData* AllWidgetDataNotify::release_sky_crystal_detector_data() {
  // @@protoc_insertion_point(field_release:proto.AllWidgetDataNotify.sky_crystal_detector_data)
  
  ::proto::SkyCrystalDetectorData* temp = sky_crystal_detector_data_;
  sky_crystal_detector_data_ = NULL;
  return temp;
}
void AllWidgetDataNotify::set_allocated_sky_crystal_detector_data(::proto::SkyCrystalDetectorData* sky_crystal_detector_data) {
  delete sky_crystal_detector_data_;
  sky_crystal_detector_data_ = sky_crystal_detector_data;
  if (sky_crystal_detector_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AllWidgetDataNotify.sky_crystal_detector_data)
}

// repeated .proto.ClientCollectorData client_collector_data_list = 4;
int AllWidgetDataNotify::client_collector_data_list_size() const {
  return client_collector_data_list_.size();
}
void AllWidgetDataNotify::clear_client_collector_data_list() {
  client_collector_data_list_.Clear();
}
const ::proto::ClientCollectorData& AllWidgetDataNotify::client_collector_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.client_collector_data_list)
  return client_collector_data_list_.Get(index);
}
::proto::ClientCollectorData* AllWidgetDataNotify::mutable_client_collector_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.client_collector_data_list)
  return client_collector_data_list_.Mutable(index);
}
::proto::ClientCollectorData* AllWidgetDataNotify::add_client_collector_data_list() {
  // @@protoc_insertion_point(field_add:proto.AllWidgetDataNotify.client_collector_data_list)
  return client_collector_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ClientCollectorData >*
AllWidgetDataNotify::mutable_client_collector_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetDataNotify.client_collector_data_list)
  return &client_collector_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ClientCollectorData >&
AllWidgetDataNotify::client_collector_data_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetDataNotify.client_collector_data_list)
  return client_collector_data_list_;
}

// repeated .proto.AnchorPointData anchor_point_list = 3;
int AllWidgetDataNotify::anchor_point_list_size() const {
  return anchor_point_list_.size();
}
void AllWidgetDataNotify::clear_anchor_point_list() {
  anchor_point_list_.Clear();
}
const ::proto::AnchorPointData& AllWidgetDataNotify::anchor_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.anchor_point_list)
  return anchor_point_list_.Get(index);
}
::proto::AnchorPointData* AllWidgetDataNotify::mutable_anchor_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.anchor_point_list)
  return anchor_point_list_.Mutable(index);
}
::proto::AnchorPointData* AllWidgetDataNotify::add_anchor_point_list() {
  // @@protoc_insertion_point(field_add:proto.AllWidgetDataNotify.anchor_point_list)
  return anchor_point_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AnchorPointData >*
AllWidgetDataNotify::mutable_anchor_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetDataNotify.anchor_point_list)
  return &anchor_point_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AnchorPointData >&
AllWidgetDataNotify::anchor_point_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetDataNotify.anchor_point_list)
  return anchor_point_list_;
}

// repeated .proto.WidgetCoolDownData cool_down_group_data_list = 13;
int AllWidgetDataNotify::cool_down_group_data_list_size() const {
  return cool_down_group_data_list_.size();
}
void AllWidgetDataNotify::clear_cool_down_group_data_list() {
  cool_down_group_data_list_.Clear();
}
const ::proto::WidgetCoolDownData& AllWidgetDataNotify::cool_down_group_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.cool_down_group_data_list)
  return cool_down_group_data_list_.Get(index);
}
::proto::WidgetCoolDownData* AllWidgetDataNotify::mutable_cool_down_group_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.cool_down_group_data_list)
  return cool_down_group_data_list_.Mutable(index);
}
::proto::WidgetCoolDownData* AllWidgetDataNotify::add_cool_down_group_data_list() {
  // @@protoc_insertion_point(field_add:proto.AllWidgetDataNotify.cool_down_group_data_list)
  return cool_down_group_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >*
AllWidgetDataNotify::mutable_cool_down_group_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetDataNotify.cool_down_group_data_list)
  return &cool_down_group_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetCoolDownData >&
AllWidgetDataNotify::cool_down_group_data_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetDataNotify.cool_down_group_data_list)
  return cool_down_group_data_list_;
}

// uint32 next_anchor_point_usable_time = 10;
void AllWidgetDataNotify::clear_next_anchor_point_usable_time() {
  next_anchor_point_usable_time_ = 0u;
}
::google::protobuf::uint32 AllWidgetDataNotify::next_anchor_point_usable_time() const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.next_anchor_point_usable_time)
  return next_anchor_point_usable_time_;
}
void AllWidgetDataNotify::set_next_anchor_point_usable_time(::google::protobuf::uint32 value) {
  
  next_anchor_point_usable_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AllWidgetDataNotify.next_anchor_point_usable_time)
}

// repeated .proto.WidgetSlotData slot_list = 6;
int AllWidgetDataNotify::slot_list_size() const {
  return slot_list_.size();
}
void AllWidgetDataNotify::clear_slot_list() {
  slot_list_.Clear();
}
const ::proto::WidgetSlotData& AllWidgetDataNotify::slot_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.slot_list)
  return slot_list_.Get(index);
}
::proto::WidgetSlotData* AllWidgetDataNotify::mutable_slot_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllWidgetDataNotify.slot_list)
  return slot_list_.Mutable(index);
}
::proto::WidgetSlotData* AllWidgetDataNotify::add_slot_list() {
  // @@protoc_insertion_point(field_add:proto.AllWidgetDataNotify.slot_list)
  return slot_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >*
AllWidgetDataNotify::mutable_slot_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetDataNotify.slot_list)
  return &slot_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >&
AllWidgetDataNotify::slot_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetDataNotify.slot_list)
  return slot_list_;
}

// repeated uint32 background_active_widget_list = 11;
int AllWidgetDataNotify::background_active_widget_list_size() const {
  return background_active_widget_list_.size();
}
void AllWidgetDataNotify::clear_background_active_widget_list() {
  background_active_widget_list_.Clear();
}
::google::protobuf::uint32 AllWidgetDataNotify::background_active_widget_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetDataNotify.background_active_widget_list)
  return background_active_widget_list_.Get(index);
}
void AllWidgetDataNotify::set_background_active_widget_list(int index, ::google::protobuf::uint32 value) {
  background_active_widget_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AllWidgetDataNotify.background_active_widget_list)
}
void AllWidgetDataNotify::add_background_active_widget_list(::google::protobuf::uint32 value) {
  background_active_widget_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AllWidgetDataNotify.background_active_widget_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllWidgetDataNotify::background_active_widget_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetDataNotify.background_active_widget_list)
  return background_active_widget_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllWidgetDataNotify::mutable_background_active_widget_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetDataNotify.background_active_widget_list)
  return &background_active_widget_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseWidgetCreateGadgetReq::kPosFieldNumber;
const int UseWidgetCreateGadgetReq::kRotFieldNumber;
const int UseWidgetCreateGadgetReq::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseWidgetCreateGadgetReq::UseWidgetCreateGadgetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UseWidgetCreateGadgetReq)
}
UseWidgetCreateGadgetReq::UseWidgetCreateGadgetReq(const UseWidgetCreateGadgetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  material_id_ = from.material_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UseWidgetCreateGadgetReq)
}

void UseWidgetCreateGadgetReq::SharedCtor() {
  ::memset(&rot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&rot_)) + sizeof(material_id_));
  _cached_size_ = 0;
}

UseWidgetCreateGadgetReq::~UseWidgetCreateGadgetReq() {
  // @@protoc_insertion_point(destructor:proto.UseWidgetCreateGadgetReq)
  SharedDtor();
}

void UseWidgetCreateGadgetReq::SharedDtor() {
  if (this != internal_default_instance()) delete rot_;
  if (this != internal_default_instance()) delete pos_;
}

void UseWidgetCreateGadgetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseWidgetCreateGadgetReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseWidgetCreateGadgetReq& UseWidgetCreateGadgetReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseWidgetCreateGadgetReq* UseWidgetCreateGadgetReq::New(::google::protobuf::Arena* arena) const {
  UseWidgetCreateGadgetReq* n = new UseWidgetCreateGadgetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseWidgetCreateGadgetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UseWidgetCreateGadgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  material_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UseWidgetCreateGadgetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UseWidgetCreateGadgetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UseWidgetCreateGadgetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UseWidgetCreateGadgetReq)
  return false;
#undef DO_
}

void UseWidgetCreateGadgetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UseWidgetCreateGadgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 4;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->material_id(), output);
  }

  // .proto.Vector rot = 12;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->rot_, output);
  }

  // .proto.Vector pos = 15;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UseWidgetCreateGadgetReq)
}

::google::protobuf::uint8* UseWidgetCreateGadgetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UseWidgetCreateGadgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 4;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->material_id(), target);
  }

  // .proto.Vector rot = 12;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->rot_, deterministic, target);
  }

  // .proto.Vector pos = 15;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UseWidgetCreateGadgetReq)
  return target;
}

size_t UseWidgetCreateGadgetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UseWidgetCreateGadgetReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector rot = 12;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // .proto.Vector pos = 15;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 material_id = 4;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseWidgetCreateGadgetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UseWidgetCreateGadgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UseWidgetCreateGadgetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseWidgetCreateGadgetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UseWidgetCreateGadgetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UseWidgetCreateGadgetReq)
    MergeFrom(*source);
  }
}

void UseWidgetCreateGadgetReq::MergeFrom(const UseWidgetCreateGadgetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UseWidgetCreateGadgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
}

void UseWidgetCreateGadgetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UseWidgetCreateGadgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseWidgetCreateGadgetReq::CopyFrom(const UseWidgetCreateGadgetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UseWidgetCreateGadgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseWidgetCreateGadgetReq::IsInitialized() const {
  return true;
}

void UseWidgetCreateGadgetReq::Swap(UseWidgetCreateGadgetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseWidgetCreateGadgetReq::InternalSwap(UseWidgetCreateGadgetReq* other) {
  using std::swap;
  swap(rot_, other->rot_);
  swap(pos_, other->pos_);
  swap(material_id_, other->material_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseWidgetCreateGadgetReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseWidgetCreateGadgetReq

// .proto.Vector pos = 15;
bool UseWidgetCreateGadgetReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void UseWidgetCreateGadgetReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& UseWidgetCreateGadgetReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.UseWidgetCreateGadgetReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* UseWidgetCreateGadgetReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.UseWidgetCreateGadgetReq.pos)
  return pos_;
}
::proto::Vector* UseWidgetCreateGadgetReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.UseWidgetCreateGadgetReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void UseWidgetCreateGadgetReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.UseWidgetCreateGadgetReq.pos)
}

// .proto.Vector rot = 12;
bool UseWidgetCreateGadgetReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void UseWidgetCreateGadgetReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& UseWidgetCreateGadgetReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.UseWidgetCreateGadgetReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* UseWidgetCreateGadgetReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.UseWidgetCreateGadgetReq.rot)
  return rot_;
}
::proto::Vector* UseWidgetCreateGadgetReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.UseWidgetCreateGadgetReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void UseWidgetCreateGadgetReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.UseWidgetCreateGadgetReq.rot)
}

// uint32 material_id = 4;
void UseWidgetCreateGadgetReq::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 UseWidgetCreateGadgetReq::material_id() const {
  // @@protoc_insertion_point(field_get:proto.UseWidgetCreateGadgetReq.material_id)
  return material_id_;
}
void UseWidgetCreateGadgetReq::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UseWidgetCreateGadgetReq.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseWidgetCreateGadgetRsp::kRetcodeFieldNumber;
const int UseWidgetCreateGadgetRsp::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseWidgetCreateGadgetRsp::UseWidgetCreateGadgetRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UseWidgetCreateGadgetRsp)
}
UseWidgetCreateGadgetRsp::UseWidgetCreateGadgetRsp(const UseWidgetCreateGadgetRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.UseWidgetCreateGadgetRsp)
}

void UseWidgetCreateGadgetRsp::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

UseWidgetCreateGadgetRsp::~UseWidgetCreateGadgetRsp() {
  // @@protoc_insertion_point(destructor:proto.UseWidgetCreateGadgetRsp)
  SharedDtor();
}

void UseWidgetCreateGadgetRsp::SharedDtor() {
}

void UseWidgetCreateGadgetRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseWidgetCreateGadgetRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseWidgetCreateGadgetRsp& UseWidgetCreateGadgetRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseWidgetCreateGadgetRsp* UseWidgetCreateGadgetRsp::New(::google::protobuf::Arena* arena) const {
  UseWidgetCreateGadgetRsp* n = new UseWidgetCreateGadgetRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseWidgetCreateGadgetRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UseWidgetCreateGadgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool UseWidgetCreateGadgetRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UseWidgetCreateGadgetRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UseWidgetCreateGadgetRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UseWidgetCreateGadgetRsp)
  return false;
#undef DO_
}

void UseWidgetCreateGadgetRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UseWidgetCreateGadgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 12;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->material_id(), output);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UseWidgetCreateGadgetRsp)
}

::google::protobuf::uint8* UseWidgetCreateGadgetRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UseWidgetCreateGadgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 12;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->material_id(), target);
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UseWidgetCreateGadgetRsp)
  return target;
}

size_t UseWidgetCreateGadgetRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UseWidgetCreateGadgetRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 12;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // int32 retcode = 15;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseWidgetCreateGadgetRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UseWidgetCreateGadgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UseWidgetCreateGadgetRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseWidgetCreateGadgetRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UseWidgetCreateGadgetRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UseWidgetCreateGadgetRsp)
    MergeFrom(*source);
  }
}

void UseWidgetCreateGadgetRsp::MergeFrom(const UseWidgetCreateGadgetRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UseWidgetCreateGadgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UseWidgetCreateGadgetRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UseWidgetCreateGadgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseWidgetCreateGadgetRsp::CopyFrom(const UseWidgetCreateGadgetRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UseWidgetCreateGadgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseWidgetCreateGadgetRsp::IsInitialized() const {
  return true;
}

void UseWidgetCreateGadgetRsp::Swap(UseWidgetCreateGadgetRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseWidgetCreateGadgetRsp::InternalSwap(UseWidgetCreateGadgetRsp* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseWidgetCreateGadgetRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseWidgetCreateGadgetRsp

// int32 retcode = 15;
void UseWidgetCreateGadgetRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UseWidgetCreateGadgetRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UseWidgetCreateGadgetRsp.retcode)
  return retcode_;
}
void UseWidgetCreateGadgetRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UseWidgetCreateGadgetRsp.retcode)
}

// uint32 material_id = 12;
void UseWidgetCreateGadgetRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 UseWidgetCreateGadgetRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.UseWidgetCreateGadgetRsp.material_id)
  return material_id_;
}
void UseWidgetCreateGadgetRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UseWidgetCreateGadgetRsp.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseWidgetRetractGadgetReq::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseWidgetRetractGadgetReq::UseWidgetRetractGadgetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UseWidgetRetractGadgetReq)
}
UseWidgetRetractGadgetReq::UseWidgetRetractGadgetReq(const UseWidgetRetractGadgetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UseWidgetRetractGadgetReq)
}

void UseWidgetRetractGadgetReq::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

UseWidgetRetractGadgetReq::~UseWidgetRetractGadgetReq() {
  // @@protoc_insertion_point(destructor:proto.UseWidgetRetractGadgetReq)
  SharedDtor();
}

void UseWidgetRetractGadgetReq::SharedDtor() {
}

void UseWidgetRetractGadgetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseWidgetRetractGadgetReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseWidgetRetractGadgetReq& UseWidgetRetractGadgetReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseWidgetRetractGadgetReq* UseWidgetRetractGadgetReq::New(::google::protobuf::Arena* arena) const {
  UseWidgetRetractGadgetReq* n = new UseWidgetRetractGadgetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseWidgetRetractGadgetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UseWidgetRetractGadgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UseWidgetRetractGadgetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UseWidgetRetractGadgetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UseWidgetRetractGadgetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UseWidgetRetractGadgetReq)
  return false;
#undef DO_
}

void UseWidgetRetractGadgetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UseWidgetRetractGadgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UseWidgetRetractGadgetReq)
}

::google::protobuf::uint8* UseWidgetRetractGadgetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UseWidgetRetractGadgetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UseWidgetRetractGadgetReq)
  return target;
}

size_t UseWidgetRetractGadgetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UseWidgetRetractGadgetReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseWidgetRetractGadgetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UseWidgetRetractGadgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UseWidgetRetractGadgetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseWidgetRetractGadgetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UseWidgetRetractGadgetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UseWidgetRetractGadgetReq)
    MergeFrom(*source);
  }
}

void UseWidgetRetractGadgetReq::MergeFrom(const UseWidgetRetractGadgetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UseWidgetRetractGadgetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void UseWidgetRetractGadgetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UseWidgetRetractGadgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseWidgetRetractGadgetReq::CopyFrom(const UseWidgetRetractGadgetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UseWidgetRetractGadgetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseWidgetRetractGadgetReq::IsInitialized() const {
  return true;
}

void UseWidgetRetractGadgetReq::Swap(UseWidgetRetractGadgetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseWidgetRetractGadgetReq::InternalSwap(UseWidgetRetractGadgetReq* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseWidgetRetractGadgetReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseWidgetRetractGadgetReq

// uint32 entity_id = 3;
void UseWidgetRetractGadgetReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 UseWidgetRetractGadgetReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.UseWidgetRetractGadgetReq.entity_id)
  return entity_id_;
}
void UseWidgetRetractGadgetReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UseWidgetRetractGadgetReq.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseWidgetRetractGadgetRsp::kRetcodeFieldNumber;
const int UseWidgetRetractGadgetRsp::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseWidgetRetractGadgetRsp::UseWidgetRetractGadgetRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UseWidgetRetractGadgetRsp)
}
UseWidgetRetractGadgetRsp::UseWidgetRetractGadgetRsp(const UseWidgetRetractGadgetRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.UseWidgetRetractGadgetRsp)
}

void UseWidgetRetractGadgetRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

UseWidgetRetractGadgetRsp::~UseWidgetRetractGadgetRsp() {
  // @@protoc_insertion_point(destructor:proto.UseWidgetRetractGadgetRsp)
  SharedDtor();
}

void UseWidgetRetractGadgetRsp::SharedDtor() {
}

void UseWidgetRetractGadgetRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseWidgetRetractGadgetRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UseWidgetRetractGadgetRsp& UseWidgetRetractGadgetRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseWidgetRetractGadgetRsp* UseWidgetRetractGadgetRsp::New(::google::protobuf::Arena* arena) const {
  UseWidgetRetractGadgetRsp* n = new UseWidgetRetractGadgetRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseWidgetRetractGadgetRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UseWidgetRetractGadgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool UseWidgetRetractGadgetRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UseWidgetRetractGadgetRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UseWidgetRetractGadgetRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UseWidgetRetractGadgetRsp)
  return false;
#undef DO_
}

void UseWidgetRetractGadgetRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UseWidgetRetractGadgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  // uint32 entity_id = 14;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UseWidgetRetractGadgetRsp)
}

::google::protobuf::uint8* UseWidgetRetractGadgetRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UseWidgetRetractGadgetRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  // uint32 entity_id = 14;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UseWidgetRetractGadgetRsp)
  return target;
}

size_t UseWidgetRetractGadgetRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UseWidgetRetractGadgetRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 14;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseWidgetRetractGadgetRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UseWidgetRetractGadgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UseWidgetRetractGadgetRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseWidgetRetractGadgetRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UseWidgetRetractGadgetRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UseWidgetRetractGadgetRsp)
    MergeFrom(*source);
  }
}

void UseWidgetRetractGadgetRsp::MergeFrom(const UseWidgetRetractGadgetRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UseWidgetRetractGadgetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void UseWidgetRetractGadgetRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UseWidgetRetractGadgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseWidgetRetractGadgetRsp::CopyFrom(const UseWidgetRetractGadgetRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UseWidgetRetractGadgetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseWidgetRetractGadgetRsp::IsInitialized() const {
  return true;
}

void UseWidgetRetractGadgetRsp::Swap(UseWidgetRetractGadgetRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseWidgetRetractGadgetRsp::InternalSwap(UseWidgetRetractGadgetRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseWidgetRetractGadgetRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseWidgetRetractGadgetRsp

// int32 retcode = 6;
void UseWidgetRetractGadgetRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UseWidgetRetractGadgetRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UseWidgetRetractGadgetRsp.retcode)
  return retcode_;
}
void UseWidgetRetractGadgetRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UseWidgetRetractGadgetRsp.retcode)
}

// uint32 entity_id = 14;
void UseWidgetRetractGadgetRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 UseWidgetRetractGadgetRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.UseWidgetRetractGadgetRsp.entity_id)
  return entity_id_;
}
void UseWidgetRetractGadgetRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UseWidgetRetractGadgetRsp.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetGadgetData::kGadgetEntityIdListFieldNumber;
const int WidgetGadgetData::kGadgetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetGadgetData::WidgetGadgetData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetGadgetData)
}
WidgetGadgetData::WidgetGadgetData(const WidgetGadgetData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gadget_entity_id_list_(from.gadget_entity_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gadget_id_ = from.gadget_id_;
  // @@protoc_insertion_point(copy_constructor:proto.WidgetGadgetData)
}

void WidgetGadgetData::SharedCtor() {
  gadget_id_ = 0u;
  _cached_size_ = 0;
}

WidgetGadgetData::~WidgetGadgetData() {
  // @@protoc_insertion_point(destructor:proto.WidgetGadgetData)
  SharedDtor();
}

void WidgetGadgetData::SharedDtor() {
}

void WidgetGadgetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetGadgetData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetGadgetData& WidgetGadgetData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetGadgetData* WidgetGadgetData::New(::google::protobuf::Arena* arena) const {
  WidgetGadgetData* n = new WidgetGadgetData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetGadgetData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetGadgetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gadget_entity_id_list_.Clear();
  gadget_id_ = 0u;
  _internal_metadata_.Clear();
}

bool WidgetGadgetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetGadgetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 gadget_entity_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gadget_entity_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_gadget_entity_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetGadgetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetGadgetData)
  return false;
#undef DO_
}

void WidgetGadgetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetGadgetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 gadget_entity_id_list = 1;
  if (this->gadget_entity_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gadget_entity_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->gadget_entity_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->gadget_entity_id_list(i), output);
  }

  // uint32 gadget_id = 8;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetGadgetData)
}

::google::protobuf::uint8* WidgetGadgetData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetGadgetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 gadget_entity_id_list = 1;
  if (this->gadget_entity_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _gadget_entity_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->gadget_entity_id_list_, target);
  }

  // uint32 gadget_id = 8;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetGadgetData)
  return target;
}

size_t WidgetGadgetData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetGadgetData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 gadget_entity_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->gadget_entity_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gadget_entity_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 gadget_id = 8;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetGadgetData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetGadgetData)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetGadgetData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetGadgetData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetGadgetData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetGadgetData)
    MergeFrom(*source);
  }
}

void WidgetGadgetData::MergeFrom(const WidgetGadgetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetGadgetData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gadget_entity_id_list_.MergeFrom(from.gadget_entity_id_list_);
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
}

void WidgetGadgetData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetGadgetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetGadgetData::CopyFrom(const WidgetGadgetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetGadgetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetGadgetData::IsInitialized() const {
  return true;
}

void WidgetGadgetData::Swap(WidgetGadgetData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetGadgetData::InternalSwap(WidgetGadgetData* other) {
  using std::swap;
  gadget_entity_id_list_.InternalSwap(&other->gadget_entity_id_list_);
  swap(gadget_id_, other->gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetGadgetData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetGadgetData

// repeated uint32 gadget_entity_id_list = 1;
int WidgetGadgetData::gadget_entity_id_list_size() const {
  return gadget_entity_id_list_.size();
}
void WidgetGadgetData::clear_gadget_entity_id_list() {
  gadget_entity_id_list_.Clear();
}
::google::protobuf::uint32 WidgetGadgetData::gadget_entity_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WidgetGadgetData.gadget_entity_id_list)
  return gadget_entity_id_list_.Get(index);
}
void WidgetGadgetData::set_gadget_entity_id_list(int index, ::google::protobuf::uint32 value) {
  gadget_entity_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WidgetGadgetData.gadget_entity_id_list)
}
void WidgetGadgetData::add_gadget_entity_id_list(::google::protobuf::uint32 value) {
  gadget_entity_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WidgetGadgetData.gadget_entity_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WidgetGadgetData::gadget_entity_id_list() const {
  // @@protoc_insertion_point(field_list:proto.WidgetGadgetData.gadget_entity_id_list)
  return gadget_entity_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WidgetGadgetData::mutable_gadget_entity_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WidgetGadgetData.gadget_entity_id_list)
  return &gadget_entity_id_list_;
}

// uint32 gadget_id = 8;
void WidgetGadgetData::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 WidgetGadgetData::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetGadgetData.gadget_id)
  return gadget_id_;
}
void WidgetGadgetData::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetGadgetData.gadget_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetGadgetAllDataNotify::kWidgetGadgetDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetGadgetAllDataNotify::WidgetGadgetAllDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetGadgetAllDataNotify)
}
WidgetGadgetAllDataNotify::WidgetGadgetAllDataNotify(const WidgetGadgetAllDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      widget_gadget_data_(from.widget_gadget_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WidgetGadgetAllDataNotify)
}

void WidgetGadgetAllDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

WidgetGadgetAllDataNotify::~WidgetGadgetAllDataNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetGadgetAllDataNotify)
  SharedDtor();
}

void WidgetGadgetAllDataNotify::SharedDtor() {
}

void WidgetGadgetAllDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetGadgetAllDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetGadgetAllDataNotify& WidgetGadgetAllDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetGadgetAllDataNotify* WidgetGadgetAllDataNotify::New(::google::protobuf::Arena* arena) const {
  WidgetGadgetAllDataNotify* n = new WidgetGadgetAllDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetGadgetAllDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetGadgetAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  widget_gadget_data_.Clear();
  _internal_metadata_.Clear();
}

bool WidgetGadgetAllDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetGadgetAllDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.WidgetGadgetData widget_gadget_data = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_widget_gadget_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetGadgetAllDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetGadgetAllDataNotify)
  return false;
#undef DO_
}

void WidgetGadgetAllDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetGadgetAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetGadgetData widget_gadget_data = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->widget_gadget_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->widget_gadget_data(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetGadgetAllDataNotify)
}

::google::protobuf::uint8* WidgetGadgetAllDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetGadgetAllDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetGadgetData widget_gadget_data = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->widget_gadget_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->widget_gadget_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetGadgetAllDataNotify)
  return target;
}

size_t WidgetGadgetAllDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetGadgetAllDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WidgetGadgetData widget_gadget_data = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->widget_gadget_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->widget_gadget_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetGadgetAllDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetGadgetAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetGadgetAllDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetGadgetAllDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetGadgetAllDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetGadgetAllDataNotify)
    MergeFrom(*source);
  }
}

void WidgetGadgetAllDataNotify::MergeFrom(const WidgetGadgetAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetGadgetAllDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  widget_gadget_data_.MergeFrom(from.widget_gadget_data_);
}

void WidgetGadgetAllDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetGadgetAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetGadgetAllDataNotify::CopyFrom(const WidgetGadgetAllDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetGadgetAllDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetGadgetAllDataNotify::IsInitialized() const {
  return true;
}

void WidgetGadgetAllDataNotify::Swap(WidgetGadgetAllDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetGadgetAllDataNotify::InternalSwap(WidgetGadgetAllDataNotify* other) {
  using std::swap;
  widget_gadget_data_.InternalSwap(&other->widget_gadget_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetGadgetAllDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetGadgetAllDataNotify

// repeated .proto.WidgetGadgetData widget_gadget_data = 13;
int WidgetGadgetAllDataNotify::widget_gadget_data_size() const {
  return widget_gadget_data_.size();
}
void WidgetGadgetAllDataNotify::clear_widget_gadget_data() {
  widget_gadget_data_.Clear();
}
const ::proto::WidgetGadgetData& WidgetGadgetAllDataNotify::widget_gadget_data(int index) const {
  // @@protoc_insertion_point(field_get:proto.WidgetGadgetAllDataNotify.widget_gadget_data)
  return widget_gadget_data_.Get(index);
}
::proto::WidgetGadgetData* WidgetGadgetAllDataNotify::mutable_widget_gadget_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WidgetGadgetAllDataNotify.widget_gadget_data)
  return widget_gadget_data_.Mutable(index);
}
::proto::WidgetGadgetData* WidgetGadgetAllDataNotify::add_widget_gadget_data() {
  // @@protoc_insertion_point(field_add:proto.WidgetGadgetAllDataNotify.widget_gadget_data)
  return widget_gadget_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetGadgetData >*
WidgetGadgetAllDataNotify::mutable_widget_gadget_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.WidgetGadgetAllDataNotify.widget_gadget_data)
  return &widget_gadget_data_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetGadgetData >&
WidgetGadgetAllDataNotify::widget_gadget_data() const {
  // @@protoc_insertion_point(field_list:proto.WidgetGadgetAllDataNotify.widget_gadget_data)
  return widget_gadget_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetGadgetDataNotify::kWidgetGadgetDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetGadgetDataNotify::WidgetGadgetDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetGadgetDataNotify)
}
WidgetGadgetDataNotify::WidgetGadgetDataNotify(const WidgetGadgetDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_widget_gadget_data()) {
    widget_gadget_data_ = new ::proto::WidgetGadgetData(*from.widget_gadget_data_);
  } else {
    widget_gadget_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.WidgetGadgetDataNotify)
}

void WidgetGadgetDataNotify::SharedCtor() {
  widget_gadget_data_ = NULL;
  _cached_size_ = 0;
}

WidgetGadgetDataNotify::~WidgetGadgetDataNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetGadgetDataNotify)
  SharedDtor();
}

void WidgetGadgetDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete widget_gadget_data_;
}

void WidgetGadgetDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetGadgetDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetGadgetDataNotify& WidgetGadgetDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetGadgetDataNotify* WidgetGadgetDataNotify::New(::google::protobuf::Arena* arena) const {
  WidgetGadgetDataNotify* n = new WidgetGadgetDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetGadgetDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetGadgetDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && widget_gadget_data_ != NULL) {
    delete widget_gadget_data_;
  }
  widget_gadget_data_ = NULL;
  _internal_metadata_.Clear();
}

bool WidgetGadgetDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetGadgetDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.WidgetGadgetData widget_gadget_data = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_widget_gadget_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetGadgetDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetGadgetDataNotify)
  return false;
#undef DO_
}

void WidgetGadgetDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetGadgetDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetGadgetData widget_gadget_data = 12;
  if (this->has_widget_gadget_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->widget_gadget_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetGadgetDataNotify)
}

::google::protobuf::uint8* WidgetGadgetDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetGadgetDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WidgetGadgetData widget_gadget_data = 12;
  if (this->has_widget_gadget_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->widget_gadget_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetGadgetDataNotify)
  return target;
}

size_t WidgetGadgetDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetGadgetDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.WidgetGadgetData widget_gadget_data = 12;
  if (this->has_widget_gadget_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->widget_gadget_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetGadgetDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetGadgetDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetGadgetDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetGadgetDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetGadgetDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetGadgetDataNotify)
    MergeFrom(*source);
  }
}

void WidgetGadgetDataNotify::MergeFrom(const WidgetGadgetDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetGadgetDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_widget_gadget_data()) {
    mutable_widget_gadget_data()->::proto::WidgetGadgetData::MergeFrom(from.widget_gadget_data());
  }
}

void WidgetGadgetDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetGadgetDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetGadgetDataNotify::CopyFrom(const WidgetGadgetDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetGadgetDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetGadgetDataNotify::IsInitialized() const {
  return true;
}

void WidgetGadgetDataNotify::Swap(WidgetGadgetDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetGadgetDataNotify::InternalSwap(WidgetGadgetDataNotify* other) {
  using std::swap;
  swap(widget_gadget_data_, other->widget_gadget_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetGadgetDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetGadgetDataNotify

// .proto.WidgetGadgetData widget_gadget_data = 12;
bool WidgetGadgetDataNotify::has_widget_gadget_data() const {
  return this != internal_default_instance() && widget_gadget_data_ != NULL;
}
void WidgetGadgetDataNotify::clear_widget_gadget_data() {
  if (GetArenaNoVirtual() == NULL && widget_gadget_data_ != NULL) delete widget_gadget_data_;
  widget_gadget_data_ = NULL;
}
const ::proto::WidgetGadgetData& WidgetGadgetDataNotify::widget_gadget_data() const {
  const ::proto::WidgetGadgetData* p = widget_gadget_data_;
  // @@protoc_insertion_point(field_get:proto.WidgetGadgetDataNotify.widget_gadget_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WidgetGadgetData*>(
      &::proto::_WidgetGadgetData_default_instance_);
}
::proto::WidgetGadgetData* WidgetGadgetDataNotify::mutable_widget_gadget_data() {
  
  if (widget_gadget_data_ == NULL) {
    widget_gadget_data_ = new ::proto::WidgetGadgetData;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetGadgetDataNotify.widget_gadget_data)
  return widget_gadget_data_;
}
::proto::WidgetGadgetData* WidgetGadgetDataNotify::release_widget_gadget_data() {
  // @@protoc_insertion_point(field_release:proto.WidgetGadgetDataNotify.widget_gadget_data)
  
  ::proto::WidgetGadgetData* temp = widget_gadget_data_;
  widget_gadget_data_ = NULL;
  return temp;
}
void WidgetGadgetDataNotify::set_allocated_widget_gadget_data(::proto::WidgetGadgetData* widget_gadget_data) {
  delete widget_gadget_data_;
  widget_gadget_data_ = widget_gadget_data;
  if (widget_gadget_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetGadgetDataNotify.widget_gadget_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetGadgetDestroyNotify::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetGadgetDestroyNotify::WidgetGadgetDestroyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetGadgetDestroyNotify)
}
WidgetGadgetDestroyNotify::WidgetGadgetDestroyNotify(const WidgetGadgetDestroyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.WidgetGadgetDestroyNotify)
}

void WidgetGadgetDestroyNotify::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

WidgetGadgetDestroyNotify::~WidgetGadgetDestroyNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetGadgetDestroyNotify)
  SharedDtor();
}

void WidgetGadgetDestroyNotify::SharedDtor() {
}

void WidgetGadgetDestroyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetGadgetDestroyNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetGadgetDestroyNotify& WidgetGadgetDestroyNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetGadgetDestroyNotify* WidgetGadgetDestroyNotify::New(::google::protobuf::Arena* arena) const {
  WidgetGadgetDestroyNotify* n = new WidgetGadgetDestroyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetGadgetDestroyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetGadgetDestroyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool WidgetGadgetDestroyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetGadgetDestroyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetGadgetDestroyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetGadgetDestroyNotify)
  return false;
#undef DO_
}

void WidgetGadgetDestroyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetGadgetDestroyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetGadgetDestroyNotify)
}

::google::protobuf::uint8* WidgetGadgetDestroyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetGadgetDestroyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetGadgetDestroyNotify)
  return target;
}

size_t WidgetGadgetDestroyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetGadgetDestroyNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetGadgetDestroyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetGadgetDestroyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetGadgetDestroyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetGadgetDestroyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetGadgetDestroyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetGadgetDestroyNotify)
    MergeFrom(*source);
  }
}

void WidgetGadgetDestroyNotify::MergeFrom(const WidgetGadgetDestroyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetGadgetDestroyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void WidgetGadgetDestroyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetGadgetDestroyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetGadgetDestroyNotify::CopyFrom(const WidgetGadgetDestroyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetGadgetDestroyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetGadgetDestroyNotify::IsInitialized() const {
  return true;
}

void WidgetGadgetDestroyNotify::Swap(WidgetGadgetDestroyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetGadgetDestroyNotify::InternalSwap(WidgetGadgetDestroyNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetGadgetDestroyNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetGadgetDestroyNotify

// uint32 entity_id = 15;
void WidgetGadgetDestroyNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 WidgetGadgetDestroyNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetGadgetDestroyNotify.entity_id)
  return entity_id_;
}
void WidgetGadgetDestroyNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetGadgetDestroyNotify.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetCreateLocationInfo::kRotFieldNumber;
const int WidgetCreateLocationInfo::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetCreateLocationInfo::WidgetCreateLocationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetCreateLocationInfo)
}
WidgetCreateLocationInfo::WidgetCreateLocationInfo(const WidgetCreateLocationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.WidgetCreateLocationInfo)
}

void WidgetCreateLocationInfo::SharedCtor() {
  ::memset(&rot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&rot_)) + sizeof(pos_));
  _cached_size_ = 0;
}

WidgetCreateLocationInfo::~WidgetCreateLocationInfo() {
  // @@protoc_insertion_point(destructor:proto.WidgetCreateLocationInfo)
  SharedDtor();
}

void WidgetCreateLocationInfo::SharedDtor() {
  if (this != internal_default_instance()) delete rot_;
  if (this != internal_default_instance()) delete pos_;
}

void WidgetCreateLocationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetCreateLocationInfo::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetCreateLocationInfo& WidgetCreateLocationInfo::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetCreateLocationInfo* WidgetCreateLocationInfo::New(::google::protobuf::Arena* arena) const {
  WidgetCreateLocationInfo* n = new WidgetCreateLocationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetCreateLocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetCreateLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  _internal_metadata_.Clear();
}

bool WidgetCreateLocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetCreateLocationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector rot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetCreateLocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetCreateLocationInfo)
  return false;
#undef DO_
}

void WidgetCreateLocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetCreateLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rot_, output);
  }

  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetCreateLocationInfo)
}

::google::protobuf::uint8* WidgetCreateLocationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetCreateLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->rot_, deterministic, target);
  }

  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetCreateLocationInfo)
  return target;
}

size_t WidgetCreateLocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetCreateLocationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetCreateLocationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetCreateLocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetCreateLocationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetCreateLocationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetCreateLocationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetCreateLocationInfo)
    MergeFrom(*source);
  }
}

void WidgetCreateLocationInfo::MergeFrom(const WidgetCreateLocationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetCreateLocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
}

void WidgetCreateLocationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetCreateLocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetCreateLocationInfo::CopyFrom(const WidgetCreateLocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetCreateLocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetCreateLocationInfo::IsInitialized() const {
  return true;
}

void WidgetCreateLocationInfo::Swap(WidgetCreateLocationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetCreateLocationInfo::InternalSwap(WidgetCreateLocationInfo* other) {
  using std::swap;
  swap(rot_, other->rot_);
  swap(pos_, other->pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetCreateLocationInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetCreateLocationInfo

// .proto.Vector rot = 3;
bool WidgetCreateLocationInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void WidgetCreateLocationInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& WidgetCreateLocationInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.WidgetCreateLocationInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* WidgetCreateLocationInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetCreateLocationInfo.rot)
  return rot_;
}
::proto::Vector* WidgetCreateLocationInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.WidgetCreateLocationInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void WidgetCreateLocationInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetCreateLocationInfo.rot)
}

// .proto.Vector pos = 10;
bool WidgetCreateLocationInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void WidgetCreateLocationInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& WidgetCreateLocationInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.WidgetCreateLocationInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* WidgetCreateLocationInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetCreateLocationInfo.pos)
  return pos_;
}
::proto::Vector* WidgetCreateLocationInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.WidgetCreateLocationInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void WidgetCreateLocationInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetCreateLocationInfo.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetCreatorInfo::kOpTypeFieldNumber;
const int WidgetCreatorInfo::kEntityIdFieldNumber;
const int WidgetCreatorInfo::kLocationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetCreatorInfo::WidgetCreatorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetCreatorInfo)
}
WidgetCreatorInfo::WidgetCreatorInfo(const WidgetCreatorInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location_info()) {
    location_info_ = new ::proto::WidgetCreateLocationInfo(*from.location_info_);
  } else {
    location_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetCreatorInfo)
}

void WidgetCreatorInfo::SharedCtor() {
  ::memset(&location_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&location_info_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

WidgetCreatorInfo::~WidgetCreatorInfo() {
  // @@protoc_insertion_point(destructor:proto.WidgetCreatorInfo)
  SharedDtor();
}

void WidgetCreatorInfo::SharedDtor() {
  if (this != internal_default_instance()) delete location_info_;
}

void WidgetCreatorInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetCreatorInfo::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetCreatorInfo& WidgetCreatorInfo::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetCreatorInfo* WidgetCreatorInfo::New(::google::protobuf::Arena* arena) const {
  WidgetCreatorInfo* n = new WidgetCreatorInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetCreatorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetCreatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && location_info_ != NULL) {
    delete location_info_;
  }
  location_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool WidgetCreatorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetCreatorInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetCreatorOpType op_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::WidgetCreatorOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetCreateLocationInfo location_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetCreatorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetCreatorInfo)
  return false;
#undef DO_
}

void WidgetCreatorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetCreatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.WidgetCreatorOpType op_type = 10;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->op_type(), output);
  }

  // .proto.WidgetCreateLocationInfo location_info = 12;
  if (this->has_location_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->location_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetCreatorInfo)
}

::google::protobuf::uint8* WidgetCreatorInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetCreatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.WidgetCreatorOpType op_type = 10;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->op_type(), target);
  }

  // .proto.WidgetCreateLocationInfo location_info = 12;
  if (this->has_location_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->location_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetCreatorInfo)
  return target;
}

size_t WidgetCreatorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetCreatorInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.WidgetCreateLocationInfo location_info = 12;
  if (this->has_location_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->location_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // .proto.WidgetCreatorOpType op_type = 10;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetCreatorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetCreatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetCreatorInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetCreatorInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetCreatorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetCreatorInfo)
    MergeFrom(*source);
  }
}

void WidgetCreatorInfo::MergeFrom(const WidgetCreatorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetCreatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_location_info()) {
    mutable_location_info()->::proto::WidgetCreateLocationInfo::MergeFrom(from.location_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void WidgetCreatorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetCreatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetCreatorInfo::CopyFrom(const WidgetCreatorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetCreatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetCreatorInfo::IsInitialized() const {
  return true;
}

void WidgetCreatorInfo::Swap(WidgetCreatorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetCreatorInfo::InternalSwap(WidgetCreatorInfo* other) {
  using std::swap;
  swap(location_info_, other->location_info_);
  swap(entity_id_, other->entity_id_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetCreatorInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetCreatorInfo

// .proto.WidgetCreatorOpType op_type = 10;
void WidgetCreatorInfo::clear_op_type() {
  op_type_ = 0;
}
::proto::WidgetCreatorOpType WidgetCreatorInfo::op_type() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCreatorInfo.op_type)
  return static_cast< ::proto::WidgetCreatorOpType >(op_type_);
}
void WidgetCreatorInfo::set_op_type(::proto::WidgetCreatorOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCreatorInfo.op_type)
}

// uint32 entity_id = 1;
void WidgetCreatorInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 WidgetCreatorInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCreatorInfo.entity_id)
  return entity_id_;
}
void WidgetCreatorInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCreatorInfo.entity_id)
}

// .proto.WidgetCreateLocationInfo location_info = 12;
bool WidgetCreatorInfo::has_location_info() const {
  return this != internal_default_instance() && location_info_ != NULL;
}
void WidgetCreatorInfo::clear_location_info() {
  if (GetArenaNoVirtual() == NULL && location_info_ != NULL) delete location_info_;
  location_info_ = NULL;
}
const ::proto::WidgetCreateLocationInfo& WidgetCreatorInfo::location_info() const {
  const ::proto::WidgetCreateLocationInfo* p = location_info_;
  // @@protoc_insertion_point(field_get:proto.WidgetCreatorInfo.location_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WidgetCreateLocationInfo*>(
      &::proto::_WidgetCreateLocationInfo_default_instance_);
}
::proto::WidgetCreateLocationInfo* WidgetCreatorInfo::mutable_location_info() {
  
  if (location_info_ == NULL) {
    location_info_ = new ::proto::WidgetCreateLocationInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetCreatorInfo.location_info)
  return location_info_;
}
::proto::WidgetCreateLocationInfo* WidgetCreatorInfo::release_location_info() {
  // @@protoc_insertion_point(field_release:proto.WidgetCreatorInfo.location_info)
  
  ::proto::WidgetCreateLocationInfo* temp = location_info_;
  location_info_ = NULL;
  return temp;
}
void WidgetCreatorInfo::set_allocated_location_info(::proto::WidgetCreateLocationInfo* location_info) {
  delete location_info_;
  location_info_ = location_info;
  if (location_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetCreatorInfo.location_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetDoBagReq::kMaterialIdFieldNumber;
const int WidgetDoBagReq::kLocationInfoFieldNumber;
const int WidgetDoBagReq::kWidgetCreatorInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetDoBagReq::WidgetDoBagReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetDoBagReq)
}
WidgetDoBagReq::WidgetDoBagReq(const WidgetDoBagReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  material_id_ = from.material_id_;
  clear_has_op_info();
  switch (from.op_info_case()) {
    case kLocationInfo: {
      mutable_location_info()->::proto::WidgetCreateLocationInfo::MergeFrom(from.location_info());
      break;
    }
    case kWidgetCreatorInfo: {
      mutable_widget_creator_info()->::proto::WidgetCreatorInfo::MergeFrom(from.widget_creator_info());
      break;
    }
    case OP_INFO_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.WidgetDoBagReq)
}

void WidgetDoBagReq::SharedCtor() {
  material_id_ = 0u;
  clear_has_op_info();
  _cached_size_ = 0;
}

WidgetDoBagReq::~WidgetDoBagReq() {
  // @@protoc_insertion_point(destructor:proto.WidgetDoBagReq)
  SharedDtor();
}

void WidgetDoBagReq::SharedDtor() {
  if (has_op_info()) {
    clear_op_info();
  }
}

void WidgetDoBagReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetDoBagReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetDoBagReq& WidgetDoBagReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetDoBagReq* WidgetDoBagReq::New(::google::protobuf::Arena* arena) const {
  WidgetDoBagReq* n = new WidgetDoBagReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetDoBagReq::clear_op_info() {
// @@protoc_insertion_point(one_of_clear_start:proto.WidgetDoBagReq)
  switch (op_info_case()) {
    case kLocationInfo: {
      delete op_info_.location_info_;
      break;
    }
    case kWidgetCreatorInfo: {
      delete op_info_.widget_creator_info_;
      break;
    }
    case OP_INFO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OP_INFO_NOT_SET;
}


void WidgetDoBagReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetDoBagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  material_id_ = 0u;
  clear_op_info();
  _internal_metadata_.Clear();
}

bool WidgetDoBagReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetDoBagReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetCreateLocationInfo location_info = 832;
      case 832: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 6658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetCreatorInfo widget_creator_info = 1497;
      case 1497: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 11978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_widget_creator_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetDoBagReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetDoBagReq)
  return false;
#undef DO_
}

void WidgetDoBagReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetDoBagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 9;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->material_id(), output);
  }

  // .proto.WidgetCreateLocationInfo location_info = 832;
  if (has_location_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      832, *op_info_.location_info_, output);
  }

  // .proto.WidgetCreatorInfo widget_creator_info = 1497;
  if (has_widget_creator_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1497, *op_info_.widget_creator_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetDoBagReq)
}

::google::protobuf::uint8* WidgetDoBagReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetDoBagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 9;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->material_id(), target);
  }

  // .proto.WidgetCreateLocationInfo location_info = 832;
  if (has_location_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        832, *op_info_.location_info_, deterministic, target);
  }

  // .proto.WidgetCreatorInfo widget_creator_info = 1497;
  if (has_widget_creator_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1497, *op_info_.widget_creator_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetDoBagReq)
  return target;
}

size_t WidgetDoBagReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetDoBagReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 9;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  switch (op_info_case()) {
    // .proto.WidgetCreateLocationInfo location_info = 832;
    case kLocationInfo: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *op_info_.location_info_);
      break;
    }
    // .proto.WidgetCreatorInfo widget_creator_info = 1497;
    case kWidgetCreatorInfo: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *op_info_.widget_creator_info_);
      break;
    }
    case OP_INFO_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetDoBagReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetDoBagReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetDoBagReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetDoBagReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetDoBagReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetDoBagReq)
    MergeFrom(*source);
  }
}

void WidgetDoBagReq::MergeFrom(const WidgetDoBagReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetDoBagReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  switch (from.op_info_case()) {
    case kLocationInfo: {
      mutable_location_info()->::proto::WidgetCreateLocationInfo::MergeFrom(from.location_info());
      break;
    }
    case kWidgetCreatorInfo: {
      mutable_widget_creator_info()->::proto::WidgetCreatorInfo::MergeFrom(from.widget_creator_info());
      break;
    }
    case OP_INFO_NOT_SET: {
      break;
    }
  }
}

void WidgetDoBagReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetDoBagReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetDoBagReq::CopyFrom(const WidgetDoBagReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetDoBagReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetDoBagReq::IsInitialized() const {
  return true;
}

void WidgetDoBagReq::Swap(WidgetDoBagReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetDoBagReq::InternalSwap(WidgetDoBagReq* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(op_info_, other->op_info_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetDoBagReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetDoBagReq

// uint32 material_id = 9;
void WidgetDoBagReq::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetDoBagReq::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetDoBagReq.material_id)
  return material_id_;
}
void WidgetDoBagReq::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetDoBagReq.material_id)
}

// .proto.WidgetCreateLocationInfo location_info = 832;
bool WidgetDoBagReq::has_location_info() const {
  return op_info_case() == kLocationInfo;
}
void WidgetDoBagReq::set_has_location_info() {
  _oneof_case_[0] = kLocationInfo;
}
void WidgetDoBagReq::clear_location_info() {
  if (has_location_info()) {
    delete op_info_.location_info_;
    clear_has_op_info();
  }
}
 const ::proto::WidgetCreateLocationInfo& WidgetDoBagReq::location_info() const {
  // @@protoc_insertion_point(field_get:proto.WidgetDoBagReq.location_info)
  return has_location_info()
      ? *op_info_.location_info_
      : ::proto::WidgetCreateLocationInfo::default_instance();
}
::proto::WidgetCreateLocationInfo* WidgetDoBagReq::mutable_location_info() {
  if (!has_location_info()) {
    clear_op_info();
    set_has_location_info();
    op_info_.location_info_ = new ::proto::WidgetCreateLocationInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetDoBagReq.location_info)
  return op_info_.location_info_;
}
::proto::WidgetCreateLocationInfo* WidgetDoBagReq::release_location_info() {
  // @@protoc_insertion_point(field_release:proto.WidgetDoBagReq.location_info)
  if (has_location_info()) {
    clear_has_op_info();
    ::proto::WidgetCreateLocationInfo* temp = op_info_.location_info_;
    op_info_.location_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void WidgetDoBagReq::set_allocated_location_info(::proto::WidgetCreateLocationInfo* location_info) {
  clear_op_info();
  if (location_info) {
    set_has_location_info();
    op_info_.location_info_ = location_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetDoBagReq.location_info)
}

// .proto.WidgetCreatorInfo widget_creator_info = 1497;
bool WidgetDoBagReq::has_widget_creator_info() const {
  return op_info_case() == kWidgetCreatorInfo;
}
void WidgetDoBagReq::set_has_widget_creator_info() {
  _oneof_case_[0] = kWidgetCreatorInfo;
}
void WidgetDoBagReq::clear_widget_creator_info() {
  if (has_widget_creator_info()) {
    delete op_info_.widget_creator_info_;
    clear_has_op_info();
  }
}
 const ::proto::WidgetCreatorInfo& WidgetDoBagReq::widget_creator_info() const {
  // @@protoc_insertion_point(field_get:proto.WidgetDoBagReq.widget_creator_info)
  return has_widget_creator_info()
      ? *op_info_.widget_creator_info_
      : ::proto::WidgetCreatorInfo::default_instance();
}
::proto::WidgetCreatorInfo* WidgetDoBagReq::mutable_widget_creator_info() {
  if (!has_widget_creator_info()) {
    clear_op_info();
    set_has_widget_creator_info();
    op_info_.widget_creator_info_ = new ::proto::WidgetCreatorInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetDoBagReq.widget_creator_info)
  return op_info_.widget_creator_info_;
}
::proto::WidgetCreatorInfo* WidgetDoBagReq::release_widget_creator_info() {
  // @@protoc_insertion_point(field_release:proto.WidgetDoBagReq.widget_creator_info)
  if (has_widget_creator_info()) {
    clear_has_op_info();
    ::proto::WidgetCreatorInfo* temp = op_info_.widget_creator_info_;
    op_info_.widget_creator_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void WidgetDoBagReq::set_allocated_widget_creator_info(::proto::WidgetCreatorInfo* widget_creator_info) {
  clear_op_info();
  if (widget_creator_info) {
    set_has_widget_creator_info();
    op_info_.widget_creator_info_ = widget_creator_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetDoBagReq.widget_creator_info)
}

bool WidgetDoBagReq::has_op_info() const {
  return op_info_case() != OP_INFO_NOT_SET;
}
void WidgetDoBagReq::clear_has_op_info() {
  _oneof_case_[0] = OP_INFO_NOT_SET;
}
WidgetDoBagReq::OpInfoCase WidgetDoBagReq::op_info_case() const {
  return WidgetDoBagReq::OpInfoCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetDoBagRsp::kRetcodeFieldNumber;
const int WidgetDoBagRsp::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetDoBagRsp::WidgetDoBagRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetDoBagRsp)
}
WidgetDoBagRsp::WidgetDoBagRsp(const WidgetDoBagRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetDoBagRsp)
}

void WidgetDoBagRsp::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

WidgetDoBagRsp::~WidgetDoBagRsp() {
  // @@protoc_insertion_point(destructor:proto.WidgetDoBagRsp)
  SharedDtor();
}

void WidgetDoBagRsp::SharedDtor() {
}

void WidgetDoBagRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetDoBagRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetDoBagRsp& WidgetDoBagRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetDoBagRsp* WidgetDoBagRsp::New(::google::protobuf::Arena* arena) const {
  WidgetDoBagRsp* n = new WidgetDoBagRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetDoBagRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetDoBagRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool WidgetDoBagRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetDoBagRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetDoBagRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetDoBagRsp)
  return false;
#undef DO_
}

void WidgetDoBagRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetDoBagRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 3;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->material_id(), output);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetDoBagRsp)
}

::google::protobuf::uint8* WidgetDoBagRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetDoBagRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 3;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->material_id(), target);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetDoBagRsp)
  return target;
}

size_t WidgetDoBagRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetDoBagRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 3;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetDoBagRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetDoBagRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetDoBagRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetDoBagRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetDoBagRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetDoBagRsp)
    MergeFrom(*source);
  }
}

void WidgetDoBagRsp::MergeFrom(const WidgetDoBagRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetDoBagRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void WidgetDoBagRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetDoBagRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetDoBagRsp::CopyFrom(const WidgetDoBagRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetDoBagRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetDoBagRsp::IsInitialized() const {
  return true;
}

void WidgetDoBagRsp::Swap(WidgetDoBagRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetDoBagRsp::InternalSwap(WidgetDoBagRsp* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetDoBagRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetDoBagRsp

// int32 retcode = 10;
void WidgetDoBagRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 WidgetDoBagRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WidgetDoBagRsp.retcode)
  return retcode_;
}
void WidgetDoBagRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetDoBagRsp.retcode)
}

// uint32 material_id = 3;
void WidgetDoBagRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetDoBagRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetDoBagRsp.material_id)
  return material_id_;
}
void WidgetDoBagRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetDoBagRsp.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetActiveChangeNotify::kWidgetDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetActiveChangeNotify::WidgetActiveChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetActiveChangeNotify)
}
WidgetActiveChangeNotify::WidgetActiveChangeNotify(const WidgetActiveChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      widget_data_list_(from.widget_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WidgetActiveChangeNotify)
}

void WidgetActiveChangeNotify::SharedCtor() {
  _cached_size_ = 0;
}

WidgetActiveChangeNotify::~WidgetActiveChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetActiveChangeNotify)
  SharedDtor();
}

void WidgetActiveChangeNotify::SharedDtor() {
}

void WidgetActiveChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetActiveChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetActiveChangeNotify& WidgetActiveChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetActiveChangeNotify* WidgetActiveChangeNotify::New(::google::protobuf::Arena* arena) const {
  WidgetActiveChangeNotify* n = new WidgetActiveChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetActiveChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetActiveChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  widget_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool WidgetActiveChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetActiveChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.WidgetSlotData widget_data_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_widget_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetActiveChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetActiveChangeNotify)
  return false;
#undef DO_
}

void WidgetActiveChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetActiveChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetSlotData widget_data_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->widget_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->widget_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetActiveChangeNotify)
}

::google::protobuf::uint8* WidgetActiveChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetActiveChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetSlotData widget_data_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->widget_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->widget_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetActiveChangeNotify)
  return target;
}

size_t WidgetActiveChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetActiveChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WidgetSlotData widget_data_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->widget_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->widget_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetActiveChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetActiveChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetActiveChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetActiveChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetActiveChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetActiveChangeNotify)
    MergeFrom(*source);
  }
}

void WidgetActiveChangeNotify::MergeFrom(const WidgetActiveChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetActiveChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  widget_data_list_.MergeFrom(from.widget_data_list_);
}

void WidgetActiveChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetActiveChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetActiveChangeNotify::CopyFrom(const WidgetActiveChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetActiveChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetActiveChangeNotify::IsInitialized() const {
  return true;
}

void WidgetActiveChangeNotify::Swap(WidgetActiveChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetActiveChangeNotify::InternalSwap(WidgetActiveChangeNotify* other) {
  using std::swap;
  widget_data_list_.InternalSwap(&other->widget_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetActiveChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetActiveChangeNotify

// repeated .proto.WidgetSlotData widget_data_list = 5;
int WidgetActiveChangeNotify::widget_data_list_size() const {
  return widget_data_list_.size();
}
void WidgetActiveChangeNotify::clear_widget_data_list() {
  widget_data_list_.Clear();
}
const ::proto::WidgetSlotData& WidgetActiveChangeNotify::widget_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WidgetActiveChangeNotify.widget_data_list)
  return widget_data_list_.Get(index);
}
::proto::WidgetSlotData* WidgetActiveChangeNotify::mutable_widget_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WidgetActiveChangeNotify.widget_data_list)
  return widget_data_list_.Mutable(index);
}
::proto::WidgetSlotData* WidgetActiveChangeNotify::add_widget_data_list() {
  // @@protoc_insertion_point(field_add:proto.WidgetActiveChangeNotify.widget_data_list)
  return widget_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >*
WidgetActiveChangeNotify::mutable_widget_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WidgetActiveChangeNotify.widget_data_list)
  return &widget_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >&
WidgetActiveChangeNotify::widget_data_list() const {
  // @@protoc_insertion_point(field_list:proto.WidgetActiveChangeNotify.widget_data_list)
  return widget_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetUseAttachAbilityGroupChangeNotify::kIsAttachFieldNumber;
const int WidgetUseAttachAbilityGroupChangeNotify::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetUseAttachAbilityGroupChangeNotify::WidgetUseAttachAbilityGroupChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetUseAttachAbilityGroupChangeNotify)
}
WidgetUseAttachAbilityGroupChangeNotify::WidgetUseAttachAbilityGroupChangeNotify(const WidgetUseAttachAbilityGroupChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_attach_, &from.is_attach_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_id_) -
    reinterpret_cast<char*>(&is_attach_)) + sizeof(material_id_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetUseAttachAbilityGroupChangeNotify)
}

void WidgetUseAttachAbilityGroupChangeNotify::SharedCtor() {
  ::memset(&is_attach_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&is_attach_)) + sizeof(material_id_));
  _cached_size_ = 0;
}

WidgetUseAttachAbilityGroupChangeNotify::~WidgetUseAttachAbilityGroupChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetUseAttachAbilityGroupChangeNotify)
  SharedDtor();
}

void WidgetUseAttachAbilityGroupChangeNotify::SharedDtor() {
}

void WidgetUseAttachAbilityGroupChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetUseAttachAbilityGroupChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetUseAttachAbilityGroupChangeNotify& WidgetUseAttachAbilityGroupChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetUseAttachAbilityGroupChangeNotify* WidgetUseAttachAbilityGroupChangeNotify::New(::google::protobuf::Arena* arena) const {
  WidgetUseAttachAbilityGroupChangeNotify* n = new WidgetUseAttachAbilityGroupChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetUseAttachAbilityGroupChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_attach_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&is_attach_)) + sizeof(material_id_));
  _internal_metadata_.Clear();
}

bool WidgetUseAttachAbilityGroupChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_attach = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_attach_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetUseAttachAbilityGroupChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetUseAttachAbilityGroupChangeNotify)
  return false;
#undef DO_
}

void WidgetUseAttachAbilityGroupChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_attach = 6;
  if (this->is_attach() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_attach(), output);
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->material_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetUseAttachAbilityGroupChangeNotify)
}

::google::protobuf::uint8* WidgetUseAttachAbilityGroupChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_attach = 6;
  if (this->is_attach() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_attach(), target);
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->material_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetUseAttachAbilityGroupChangeNotify)
  return target;
}

size_t WidgetUseAttachAbilityGroupChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_attach = 6;
  if (this->is_attach() != 0) {
    total_size += 1 + 1;
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetUseAttachAbilityGroupChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetUseAttachAbilityGroupChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetUseAttachAbilityGroupChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetUseAttachAbilityGroupChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetUseAttachAbilityGroupChangeNotify)
    MergeFrom(*source);
  }
}

void WidgetUseAttachAbilityGroupChangeNotify::MergeFrom(const WidgetUseAttachAbilityGroupChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_attach() != 0) {
    set_is_attach(from.is_attach());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
}

void WidgetUseAttachAbilityGroupChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetUseAttachAbilityGroupChangeNotify::CopyFrom(const WidgetUseAttachAbilityGroupChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetUseAttachAbilityGroupChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetUseAttachAbilityGroupChangeNotify::IsInitialized() const {
  return true;
}

void WidgetUseAttachAbilityGroupChangeNotify::Swap(WidgetUseAttachAbilityGroupChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetUseAttachAbilityGroupChangeNotify::InternalSwap(WidgetUseAttachAbilityGroupChangeNotify* other) {
  using std::swap;
  swap(is_attach_, other->is_attach_);
  swap(material_id_, other->material_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetUseAttachAbilityGroupChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetUseAttachAbilityGroupChangeNotify

// bool is_attach = 6;
void WidgetUseAttachAbilityGroupChangeNotify::clear_is_attach() {
  is_attach_ = false;
}
bool WidgetUseAttachAbilityGroupChangeNotify::is_attach() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUseAttachAbilityGroupChangeNotify.is_attach)
  return is_attach_;
}
void WidgetUseAttachAbilityGroupChangeNotify::set_is_attach(bool value) {
  
  is_attach_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUseAttachAbilityGroupChangeNotify.is_attach)
}

// uint32 material_id = 11;
void WidgetUseAttachAbilityGroupChangeNotify::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetUseAttachAbilityGroupChangeNotify::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUseAttachAbilityGroupChangeNotify.material_id)
  return material_id_;
}
void WidgetUseAttachAbilityGroupChangeNotify::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUseAttachAbilityGroupChangeNotify.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetCaptureAnimalReq::kPosFieldNumber;
const int WidgetCaptureAnimalReq::kEntityIdFieldNumber;
const int WidgetCaptureAnimalReq::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetCaptureAnimalReq::WidgetCaptureAnimalReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetCaptureAnimalReq)
}
WidgetCaptureAnimalReq::WidgetCaptureAnimalReq(const WidgetCaptureAnimalReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetCaptureAnimalReq)
}

void WidgetCaptureAnimalReq::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

WidgetCaptureAnimalReq::~WidgetCaptureAnimalReq() {
  // @@protoc_insertion_point(destructor:proto.WidgetCaptureAnimalReq)
  SharedDtor();
}

void WidgetCaptureAnimalReq::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void WidgetCaptureAnimalReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetCaptureAnimalReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetCaptureAnimalReq& WidgetCaptureAnimalReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetCaptureAnimalReq* WidgetCaptureAnimalReq::New(::google::protobuf::Arena* arena) const {
  WidgetCaptureAnimalReq* n = new WidgetCaptureAnimalReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetCaptureAnimalReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetCaptureAnimalReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool WidgetCaptureAnimalReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetCaptureAnimalReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetCaptureAnimalReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetCaptureAnimalReq)
  return false;
#undef DO_
}

void WidgetCaptureAnimalReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetCaptureAnimalReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->material_id(), output);
  }

  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->pos_, output);
  }

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetCaptureAnimalReq)
}

::google::protobuf::uint8* WidgetCaptureAnimalReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetCaptureAnimalReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->material_id(), target);
  }

  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->pos_, deterministic, target);
  }

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetCaptureAnimalReq)
  return target;
}

size_t WidgetCaptureAnimalReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetCaptureAnimalReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // uint32 entity_id = 15;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetCaptureAnimalReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetCaptureAnimalReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetCaptureAnimalReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetCaptureAnimalReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetCaptureAnimalReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetCaptureAnimalReq)
    MergeFrom(*source);
  }
}

void WidgetCaptureAnimalReq::MergeFrom(const WidgetCaptureAnimalReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetCaptureAnimalReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void WidgetCaptureAnimalReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetCaptureAnimalReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetCaptureAnimalReq::CopyFrom(const WidgetCaptureAnimalReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetCaptureAnimalReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetCaptureAnimalReq::IsInitialized() const {
  return true;
}

void WidgetCaptureAnimalReq::Swap(WidgetCaptureAnimalReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetCaptureAnimalReq::InternalSwap(WidgetCaptureAnimalReq* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(material_id_, other->material_id_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetCaptureAnimalReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetCaptureAnimalReq

// .proto.Vector pos = 10;
bool WidgetCaptureAnimalReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void WidgetCaptureAnimalReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& WidgetCaptureAnimalReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.WidgetCaptureAnimalReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* WidgetCaptureAnimalReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetCaptureAnimalReq.pos)
  return pos_;
}
::proto::Vector* WidgetCaptureAnimalReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.WidgetCaptureAnimalReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void WidgetCaptureAnimalReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetCaptureAnimalReq.pos)
}

// uint32 entity_id = 15;
void WidgetCaptureAnimalReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 WidgetCaptureAnimalReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCaptureAnimalReq.entity_id)
  return entity_id_;
}
void WidgetCaptureAnimalReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCaptureAnimalReq.entity_id)
}

// uint32 material_id = 6;
void WidgetCaptureAnimalReq::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetCaptureAnimalReq::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCaptureAnimalReq.material_id)
  return material_id_;
}
void WidgetCaptureAnimalReq::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCaptureAnimalReq.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetCaptureAnimalRsp::kRetcodeFieldNumber;
const int WidgetCaptureAnimalRsp::kEntityIdFieldNumber;
const int WidgetCaptureAnimalRsp::kMaterialIdFieldNumber;
const int WidgetCaptureAnimalRsp::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetCaptureAnimalRsp::WidgetCaptureAnimalRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetCaptureAnimalRsp)
}
WidgetCaptureAnimalRsp::WidgetCaptureAnimalRsp(const WidgetCaptureAnimalRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(material_id_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetCaptureAnimalRsp)
}

void WidgetCaptureAnimalRsp::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(material_id_));
  _cached_size_ = 0;
}

WidgetCaptureAnimalRsp::~WidgetCaptureAnimalRsp() {
  // @@protoc_insertion_point(destructor:proto.WidgetCaptureAnimalRsp)
  SharedDtor();
}

void WidgetCaptureAnimalRsp::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void WidgetCaptureAnimalRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetCaptureAnimalRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetCaptureAnimalRsp& WidgetCaptureAnimalRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetCaptureAnimalRsp* WidgetCaptureAnimalRsp::New(::google::protobuf::Arena* arena) const {
  WidgetCaptureAnimalRsp* n = new WidgetCaptureAnimalRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetCaptureAnimalRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetCaptureAnimalRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(material_id_));
  _internal_metadata_.Clear();
}

bool WidgetCaptureAnimalRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetCaptureAnimalRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetCaptureAnimalRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetCaptureAnimalRsp)
  return false;
#undef DO_
}

void WidgetCaptureAnimalRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetCaptureAnimalRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->entity_id(), output);
  }

  // uint32 material_id = 8;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->material_id(), output);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetCaptureAnimalRsp)
}

::google::protobuf::uint8* WidgetCaptureAnimalRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetCaptureAnimalRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->entity_id(), target);
  }

  // uint32 material_id = 8;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->material_id(), target);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetCaptureAnimalRsp)
  return target;
}

size_t WidgetCaptureAnimalRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetCaptureAnimalRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 10;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 4;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 material_id = 8;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetCaptureAnimalRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetCaptureAnimalRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetCaptureAnimalRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetCaptureAnimalRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetCaptureAnimalRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetCaptureAnimalRsp)
    MergeFrom(*source);
  }
}

void WidgetCaptureAnimalRsp::MergeFrom(const WidgetCaptureAnimalRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetCaptureAnimalRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
}

void WidgetCaptureAnimalRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetCaptureAnimalRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetCaptureAnimalRsp::CopyFrom(const WidgetCaptureAnimalRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetCaptureAnimalRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetCaptureAnimalRsp::IsInitialized() const {
  return true;
}

void WidgetCaptureAnimalRsp::Swap(WidgetCaptureAnimalRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetCaptureAnimalRsp::InternalSwap(WidgetCaptureAnimalRsp* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(material_id_, other->material_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetCaptureAnimalRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetCaptureAnimalRsp

// int32 retcode = 9;
void WidgetCaptureAnimalRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 WidgetCaptureAnimalRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCaptureAnimalRsp.retcode)
  return retcode_;
}
void WidgetCaptureAnimalRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCaptureAnimalRsp.retcode)
}

// uint32 entity_id = 4;
void WidgetCaptureAnimalRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 WidgetCaptureAnimalRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCaptureAnimalRsp.entity_id)
  return entity_id_;
}
void WidgetCaptureAnimalRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCaptureAnimalRsp.entity_id)
}

// uint32 material_id = 8;
void WidgetCaptureAnimalRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetCaptureAnimalRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetCaptureAnimalRsp.material_id)
  return material_id_;
}
void WidgetCaptureAnimalRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetCaptureAnimalRsp.material_id)
}

// .proto.Vector pos = 10;
bool WidgetCaptureAnimalRsp::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void WidgetCaptureAnimalRsp::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& WidgetCaptureAnimalRsp::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.WidgetCaptureAnimalRsp.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* WidgetCaptureAnimalRsp::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetCaptureAnimalRsp.pos)
  return pos_;
}
::proto::Vector* WidgetCaptureAnimalRsp::release_pos() {
  // @@protoc_insertion_point(field_release:proto.WidgetCaptureAnimalRsp.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void WidgetCaptureAnimalRsp::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetCaptureAnimalRsp.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetUpdateExtraCDReq::kMaterialIdFieldNumber;
const int WidgetUpdateExtraCDReq::kExtraCdTypeFieldNumber;
const int WidgetUpdateExtraCDReq::kCdGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetUpdateExtraCDReq::WidgetUpdateExtraCDReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetUpdateExtraCDReq)
}
WidgetUpdateExtraCDReq::WidgetUpdateExtraCDReq(const WidgetUpdateExtraCDReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&extra_cd_type_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(extra_cd_type_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetUpdateExtraCDReq)
}

void WidgetUpdateExtraCDReq::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extra_cd_type_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(extra_cd_type_));
  _cached_size_ = 0;
}

WidgetUpdateExtraCDReq::~WidgetUpdateExtraCDReq() {
  // @@protoc_insertion_point(destructor:proto.WidgetUpdateExtraCDReq)
  SharedDtor();
}

void WidgetUpdateExtraCDReq::SharedDtor() {
}

void WidgetUpdateExtraCDReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetUpdateExtraCDReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetUpdateExtraCDReq& WidgetUpdateExtraCDReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetUpdateExtraCDReq* WidgetUpdateExtraCDReq::New(::google::protobuf::Arena* arena) const {
  WidgetUpdateExtraCDReq* n = new WidgetUpdateExtraCDReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetUpdateExtraCDReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetUpdateExtraCDReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extra_cd_type_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(extra_cd_type_));
  _internal_metadata_.Clear();
}

bool WidgetUpdateExtraCDReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetUpdateExtraCDReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cd_group = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_extra_cd_type(static_cast< ::proto::WIDGET_EXTRA_CD_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetUpdateExtraCDReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetUpdateExtraCDReq)
  return false;
#undef DO_
}

void WidgetUpdateExtraCDReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetUpdateExtraCDReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cd_group = 7;
  if (this->cd_group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cd_group(), output);
  }

  // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 10;
  if (this->extra_cd_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->extra_cd_type(), output);
  }

  // uint32 material_id = 14;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->material_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetUpdateExtraCDReq)
}

::google::protobuf::uint8* WidgetUpdateExtraCDReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetUpdateExtraCDReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cd_group = 7;
  if (this->cd_group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cd_group(), target);
  }

  // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 10;
  if (this->extra_cd_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->extra_cd_type(), target);
  }

  // uint32 material_id = 14;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->material_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetUpdateExtraCDReq)
  return target;
}

size_t WidgetUpdateExtraCDReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetUpdateExtraCDReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 14;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // uint32 cd_group = 7;
  if (this->cd_group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd_group());
  }

  // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 10;
  if (this->extra_cd_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->extra_cd_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetUpdateExtraCDReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetUpdateExtraCDReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetUpdateExtraCDReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetUpdateExtraCDReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetUpdateExtraCDReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetUpdateExtraCDReq)
    MergeFrom(*source);
  }
}

void WidgetUpdateExtraCDReq::MergeFrom(const WidgetUpdateExtraCDReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetUpdateExtraCDReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.cd_group() != 0) {
    set_cd_group(from.cd_group());
  }
  if (from.extra_cd_type() != 0) {
    set_extra_cd_type(from.extra_cd_type());
  }
}

void WidgetUpdateExtraCDReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetUpdateExtraCDReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetUpdateExtraCDReq::CopyFrom(const WidgetUpdateExtraCDReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetUpdateExtraCDReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetUpdateExtraCDReq::IsInitialized() const {
  return true;
}

void WidgetUpdateExtraCDReq::Swap(WidgetUpdateExtraCDReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetUpdateExtraCDReq::InternalSwap(WidgetUpdateExtraCDReq* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(cd_group_, other->cd_group_);
  swap(extra_cd_type_, other->extra_cd_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetUpdateExtraCDReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetUpdateExtraCDReq

// uint32 material_id = 14;
void WidgetUpdateExtraCDReq::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetUpdateExtraCDReq::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDReq.material_id)
  return material_id_;
}
void WidgetUpdateExtraCDReq::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUpdateExtraCDReq.material_id)
}

// .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 10;
void WidgetUpdateExtraCDReq::clear_extra_cd_type() {
  extra_cd_type_ = 0;
}
::proto::WIDGET_EXTRA_CD_TYPE WidgetUpdateExtraCDReq::extra_cd_type() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDReq.extra_cd_type)
  return static_cast< ::proto::WIDGET_EXTRA_CD_TYPE >(extra_cd_type_);
}
void WidgetUpdateExtraCDReq::set_extra_cd_type(::proto::WIDGET_EXTRA_CD_TYPE value) {
  
  extra_cd_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUpdateExtraCDReq.extra_cd_type)
}

// uint32 cd_group = 7;
void WidgetUpdateExtraCDReq::clear_cd_group() {
  cd_group_ = 0u;
}
::google::protobuf::uint32 WidgetUpdateExtraCDReq::cd_group() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDReq.cd_group)
  return cd_group_;
}
void WidgetUpdateExtraCDReq::set_cd_group(::google::protobuf::uint32 value) {
  
  cd_group_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUpdateExtraCDReq.cd_group)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetUpdateExtraCDRsp::kRetcodeFieldNumber;
const int WidgetUpdateExtraCDRsp::kMaterialIdFieldNumber;
const int WidgetUpdateExtraCDRsp::kExtraCdTypeFieldNumber;
const int WidgetUpdateExtraCDRsp::kCoolDataFieldNumber;
const int WidgetUpdateExtraCDRsp::kCdGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetUpdateExtraCDRsp::WidgetUpdateExtraCDRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetUpdateExtraCDRsp)
}
WidgetUpdateExtraCDRsp::WidgetUpdateExtraCDRsp(const WidgetUpdateExtraCDRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cool_data()) {
    cool_data_ = new ::proto::WidgetCoolDownData(*from.cool_data_);
  } else {
    cool_data_ = NULL;
  }
  ::memcpy(&extra_cd_type_, &from.extra_cd_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cd_group_) -
    reinterpret_cast<char*>(&extra_cd_type_)) + sizeof(cd_group_));
  // @@protoc_insertion_point(copy_constructor:proto.WidgetUpdateExtraCDRsp)
}

void WidgetUpdateExtraCDRsp::SharedCtor() {
  ::memset(&cool_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_group_) -
      reinterpret_cast<char*>(&cool_data_)) + sizeof(cd_group_));
  _cached_size_ = 0;
}

WidgetUpdateExtraCDRsp::~WidgetUpdateExtraCDRsp() {
  // @@protoc_insertion_point(destructor:proto.WidgetUpdateExtraCDRsp)
  SharedDtor();
}

void WidgetUpdateExtraCDRsp::SharedDtor() {
  if (this != internal_default_instance()) delete cool_data_;
}

void WidgetUpdateExtraCDRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetUpdateExtraCDRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetUpdateExtraCDRsp& WidgetUpdateExtraCDRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetUpdateExtraCDRsp* WidgetUpdateExtraCDRsp::New(::google::protobuf::Arena* arena) const {
  WidgetUpdateExtraCDRsp* n = new WidgetUpdateExtraCDRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetUpdateExtraCDRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetUpdateExtraCDRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cool_data_ != NULL) {
    delete cool_data_;
  }
  cool_data_ = NULL;
  ::memset(&extra_cd_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_group_) -
      reinterpret_cast<char*>(&extra_cd_type_)) + sizeof(cd_group_));
  _internal_metadata_.Clear();
}

bool WidgetUpdateExtraCDRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetUpdateExtraCDRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_extra_cd_type(static_cast< ::proto::WIDGET_EXTRA_CD_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WidgetCoolDownData cool_data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cool_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 material_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cd_group = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetUpdateExtraCDRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetUpdateExtraCDRsp)
  return false;
#undef DO_
}

void WidgetUpdateExtraCDRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetUpdateExtraCDRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 6;
  if (this->extra_cd_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->extra_cd_type(), output);
  }

  // .proto.WidgetCoolDownData cool_data = 10;
  if (this->has_cool_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->cool_data_, output);
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->material_id(), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  // uint32 cd_group = 15;
  if (this->cd_group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->cd_group(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetUpdateExtraCDRsp)
}

::google::protobuf::uint8* WidgetUpdateExtraCDRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetUpdateExtraCDRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 6;
  if (this->extra_cd_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->extra_cd_type(), target);
  }

  // .proto.WidgetCoolDownData cool_data = 10;
  if (this->has_cool_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->cool_data_, deterministic, target);
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->material_id(), target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  // uint32 cd_group = 15;
  if (this->cd_group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->cd_group(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetUpdateExtraCDRsp)
  return target;
}

size_t WidgetUpdateExtraCDRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetUpdateExtraCDRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.WidgetCoolDownData cool_data = 10;
  if (this->has_cool_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cool_data_);
  }

  // .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 6;
  if (this->extra_cd_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->extra_cd_type());
  }

  // uint32 material_id = 11;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 cd_group = 15;
  if (this->cd_group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd_group());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetUpdateExtraCDRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetUpdateExtraCDRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetUpdateExtraCDRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetUpdateExtraCDRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetUpdateExtraCDRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetUpdateExtraCDRsp)
    MergeFrom(*source);
  }
}

void WidgetUpdateExtraCDRsp::MergeFrom(const WidgetUpdateExtraCDRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetUpdateExtraCDRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cool_data()) {
    mutable_cool_data()->::proto::WidgetCoolDownData::MergeFrom(from.cool_data());
  }
  if (from.extra_cd_type() != 0) {
    set_extra_cd_type(from.extra_cd_type());
  }
  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.cd_group() != 0) {
    set_cd_group(from.cd_group());
  }
}

void WidgetUpdateExtraCDRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetUpdateExtraCDRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetUpdateExtraCDRsp::CopyFrom(const WidgetUpdateExtraCDRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetUpdateExtraCDRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetUpdateExtraCDRsp::IsInitialized() const {
  return true;
}

void WidgetUpdateExtraCDRsp::Swap(WidgetUpdateExtraCDRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetUpdateExtraCDRsp::InternalSwap(WidgetUpdateExtraCDRsp* other) {
  using std::swap;
  swap(cool_data_, other->cool_data_);
  swap(extra_cd_type_, other->extra_cd_type_);
  swap(material_id_, other->material_id_);
  swap(retcode_, other->retcode_);
  swap(cd_group_, other->cd_group_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetUpdateExtraCDRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetUpdateExtraCDRsp

// int32 retcode = 14;
void WidgetUpdateExtraCDRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 WidgetUpdateExtraCDRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDRsp.retcode)
  return retcode_;
}
void WidgetUpdateExtraCDRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUpdateExtraCDRsp.retcode)
}

// uint32 material_id = 11;
void WidgetUpdateExtraCDRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 WidgetUpdateExtraCDRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDRsp.material_id)
  return material_id_;
}
void WidgetUpdateExtraCDRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUpdateExtraCDRsp.material_id)
}

// .proto.WIDGET_EXTRA_CD_TYPE extra_cd_type = 6;
void WidgetUpdateExtraCDRsp::clear_extra_cd_type() {
  extra_cd_type_ = 0;
}
::proto::WIDGET_EXTRA_CD_TYPE WidgetUpdateExtraCDRsp::extra_cd_type() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDRsp.extra_cd_type)
  return static_cast< ::proto::WIDGET_EXTRA_CD_TYPE >(extra_cd_type_);
}
void WidgetUpdateExtraCDRsp::set_extra_cd_type(::proto::WIDGET_EXTRA_CD_TYPE value) {
  
  extra_cd_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUpdateExtraCDRsp.extra_cd_type)
}

// .proto.WidgetCoolDownData cool_data = 10;
bool WidgetUpdateExtraCDRsp::has_cool_data() const {
  return this != internal_default_instance() && cool_data_ != NULL;
}
void WidgetUpdateExtraCDRsp::clear_cool_data() {
  if (GetArenaNoVirtual() == NULL && cool_data_ != NULL) delete cool_data_;
  cool_data_ = NULL;
}
const ::proto::WidgetCoolDownData& WidgetUpdateExtraCDRsp::cool_data() const {
  const ::proto::WidgetCoolDownData* p = cool_data_;
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDRsp.cool_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WidgetCoolDownData*>(
      &::proto::_WidgetCoolDownData_default_instance_);
}
::proto::WidgetCoolDownData* WidgetUpdateExtraCDRsp::mutable_cool_data() {
  
  if (cool_data_ == NULL) {
    cool_data_ = new ::proto::WidgetCoolDownData;
  }
  // @@protoc_insertion_point(field_mutable:proto.WidgetUpdateExtraCDRsp.cool_data)
  return cool_data_;
}
::proto::WidgetCoolDownData* WidgetUpdateExtraCDRsp::release_cool_data() {
  // @@protoc_insertion_point(field_release:proto.WidgetUpdateExtraCDRsp.cool_data)
  
  ::proto::WidgetCoolDownData* temp = cool_data_;
  cool_data_ = NULL;
  return temp;
}
void WidgetUpdateExtraCDRsp::set_allocated_cool_data(::proto::WidgetCoolDownData* cool_data) {
  delete cool_data_;
  cool_data_ = cool_data;
  if (cool_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WidgetUpdateExtraCDRsp.cool_data)
}

// uint32 cd_group = 15;
void WidgetUpdateExtraCDRsp::clear_cd_group() {
  cd_group_ = 0u;
}
::google::protobuf::uint32 WidgetUpdateExtraCDRsp::cd_group() const {
  // @@protoc_insertion_point(field_get:proto.WidgetUpdateExtraCDRsp.cd_group)
  return cd_group_;
}
void WidgetUpdateExtraCDRsp::set_cd_group(::google::protobuf::uint32 value) {
  
  cd_group_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetUpdateExtraCDRsp.cd_group)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FireworksReformParam::kTypeFieldNumber;
const int FireworksReformParam::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FireworksReformParam::FireworksReformParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FireworksReformParam)
}
FireworksReformParam::FireworksReformParam(const FireworksReformParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&value_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:proto.FireworksReformParam)
}

void FireworksReformParam::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_));
  _cached_size_ = 0;
}

FireworksReformParam::~FireworksReformParam() {
  // @@protoc_insertion_point(destructor:proto.FireworksReformParam)
  SharedDtor();
}

void FireworksReformParam::SharedDtor() {
}

void FireworksReformParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworksReformParam::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FireworksReformParam& FireworksReformParam::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FireworksReformParam* FireworksReformParam::New(::google::protobuf::Arena* arena) const {
  FireworksReformParam* n = new FireworksReformParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FireworksReformParam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FireworksReformParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool FireworksReformParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FireworksReformParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FireworksReformParamType type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::proto::FireworksReformParamType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FireworksReformParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FireworksReformParam)
  return false;
#undef DO_
}

void FireworksReformParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FireworksReformParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 4;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->value(), output);
  }

  // .proto.FireworksReformParamType type = 8;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FireworksReformParam)
}

::google::protobuf::uint8* FireworksReformParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FireworksReformParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 4;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->value(), target);
  }

  // .proto.FireworksReformParamType type = 8;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FireworksReformParam)
  return target;
}

size_t FireworksReformParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FireworksReformParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 value = 4;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  // .proto.FireworksReformParamType type = 8;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworksReformParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FireworksReformParam)
  GOOGLE_DCHECK_NE(&from, this);
  const FireworksReformParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FireworksReformParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FireworksReformParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FireworksReformParam)
    MergeFrom(*source);
  }
}

void FireworksReformParam::MergeFrom(const FireworksReformParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FireworksReformParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void FireworksReformParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FireworksReformParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworksReformParam::CopyFrom(const FireworksReformParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FireworksReformParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworksReformParam::IsInitialized() const {
  return true;
}

void FireworksReformParam::Swap(FireworksReformParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FireworksReformParam::InternalSwap(FireworksReformParam* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FireworksReformParam::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FireworksReformParam

// .proto.FireworksReformParamType type = 8;
void FireworksReformParam::clear_type() {
  type_ = 0;
}
::proto::FireworksReformParamType FireworksReformParam::type() const {
  // @@protoc_insertion_point(field_get:proto.FireworksReformParam.type)
  return static_cast< ::proto::FireworksReformParamType >(type_);
}
void FireworksReformParam::set_type(::proto::FireworksReformParamType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.FireworksReformParam.type)
}

// int32 value = 4;
void FireworksReformParam::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 FireworksReformParam::value() const {
  // @@protoc_insertion_point(field_get:proto.FireworksReformParam.value)
  return value_;
}
void FireworksReformParam::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.FireworksReformParam.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FireworksReformData::kIdFieldNumber;
const int FireworksReformData::kReformParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FireworksReformData::FireworksReformData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FireworksReformData)
}
FireworksReformData::FireworksReformData(const FireworksReformData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reform_param_list_(from.reform_param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.FireworksReformData)
}

void FireworksReformData::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

FireworksReformData::~FireworksReformData() {
  // @@protoc_insertion_point(destructor:proto.FireworksReformData)
  SharedDtor();
}

void FireworksReformData::SharedDtor() {
}

void FireworksReformData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworksReformData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FireworksReformData& FireworksReformData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FireworksReformData* FireworksReformData::New(::google::protobuf::Arena* arena) const {
  FireworksReformData* n = new FireworksReformData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FireworksReformData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FireworksReformData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reform_param_list_.Clear();
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool FireworksReformData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FireworksReformData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.FireworksReformParam reform_param_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reform_param_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FireworksReformData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FireworksReformData)
  return false;
#undef DO_
}

void FireworksReformData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FireworksReformData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FireworksReformParam reform_param_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reform_param_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->reform_param_list(static_cast<int>(i)), output);
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FireworksReformData)
}

::google::protobuf::uint8* FireworksReformData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FireworksReformData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FireworksReformParam reform_param_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reform_param_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->reform_param_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FireworksReformData)
  return target;
}

size_t FireworksReformData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FireworksReformData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FireworksReformParam reform_param_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->reform_param_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reform_param_list(static_cast<int>(i)));
    }
  }

  // uint32 id = 13;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworksReformData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FireworksReformData)
  GOOGLE_DCHECK_NE(&from, this);
  const FireworksReformData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FireworksReformData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FireworksReformData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FireworksReformData)
    MergeFrom(*source);
  }
}

void FireworksReformData::MergeFrom(const FireworksReformData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FireworksReformData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reform_param_list_.MergeFrom(from.reform_param_list_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void FireworksReformData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FireworksReformData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworksReformData::CopyFrom(const FireworksReformData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FireworksReformData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworksReformData::IsInitialized() const {
  return true;
}

void FireworksReformData::Swap(FireworksReformData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FireworksReformData::InternalSwap(FireworksReformData* other) {
  using std::swap;
  reform_param_list_.InternalSwap(&other->reform_param_list_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FireworksReformData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FireworksReformData

// uint32 id = 13;
void FireworksReformData::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 FireworksReformData::id() const {
  // @@protoc_insertion_point(field_get:proto.FireworksReformData.id)
  return id_;
}
void FireworksReformData::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.FireworksReformData.id)
}

// repeated .proto.FireworksReformParam reform_param_list = 10;
int FireworksReformData::reform_param_list_size() const {
  return reform_param_list_.size();
}
void FireworksReformData::clear_reform_param_list() {
  reform_param_list_.Clear();
}
const ::proto::FireworksReformParam& FireworksReformData::reform_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FireworksReformData.reform_param_list)
  return reform_param_list_.Get(index);
}
::proto::FireworksReformParam* FireworksReformData::mutable_reform_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FireworksReformData.reform_param_list)
  return reform_param_list_.Mutable(index);
}
::proto::FireworksReformParam* FireworksReformData::add_reform_param_list() {
  // @@protoc_insertion_point(field_add:proto.FireworksReformData.reform_param_list)
  return reform_param_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FireworksReformParam >*
FireworksReformData::mutable_reform_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FireworksReformData.reform_param_list)
  return &reform_param_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FireworksReformParam >&
FireworksReformData::reform_param_list() const {
  // @@protoc_insertion_point(field_list:proto.FireworksReformData.reform_param_list)
  return reform_param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FireworksReformDataNotify::kFireworksReformDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FireworksReformDataNotify::FireworksReformDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FireworksReformDataNotify)
}
FireworksReformDataNotify::FireworksReformDataNotify(const FireworksReformDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fireworks_reform_data_list_(from.fireworks_reform_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FireworksReformDataNotify)
}

void FireworksReformDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

FireworksReformDataNotify::~FireworksReformDataNotify() {
  // @@protoc_insertion_point(destructor:proto.FireworksReformDataNotify)
  SharedDtor();
}

void FireworksReformDataNotify::SharedDtor() {
}

void FireworksReformDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworksReformDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FireworksReformDataNotify& FireworksReformDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FireworksReformDataNotify* FireworksReformDataNotify::New(::google::protobuf::Arena* arena) const {
  FireworksReformDataNotify* n = new FireworksReformDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FireworksReformDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FireworksReformDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fireworks_reform_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool FireworksReformDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FireworksReformDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.FireworksReformData fireworks_reform_data_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fireworks_reform_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FireworksReformDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FireworksReformDataNotify)
  return false;
#undef DO_
}

void FireworksReformDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FireworksReformDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FireworksReformData fireworks_reform_data_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fireworks_reform_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fireworks_reform_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FireworksReformDataNotify)
}

::google::protobuf::uint8* FireworksReformDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FireworksReformDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FireworksReformData fireworks_reform_data_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fireworks_reform_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->fireworks_reform_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FireworksReformDataNotify)
  return target;
}

size_t FireworksReformDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FireworksReformDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FireworksReformData fireworks_reform_data_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->fireworks_reform_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fireworks_reform_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworksReformDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FireworksReformDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FireworksReformDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FireworksReformDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FireworksReformDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FireworksReformDataNotify)
    MergeFrom(*source);
  }
}

void FireworksReformDataNotify::MergeFrom(const FireworksReformDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FireworksReformDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fireworks_reform_data_list_.MergeFrom(from.fireworks_reform_data_list_);
}

void FireworksReformDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FireworksReformDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworksReformDataNotify::CopyFrom(const FireworksReformDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FireworksReformDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworksReformDataNotify::IsInitialized() const {
  return true;
}

void FireworksReformDataNotify::Swap(FireworksReformDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FireworksReformDataNotify::InternalSwap(FireworksReformDataNotify* other) {
  using std::swap;
  fireworks_reform_data_list_.InternalSwap(&other->fireworks_reform_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FireworksReformDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FireworksReformDataNotify

// repeated .proto.FireworksReformData fireworks_reform_data_list = 6;
int FireworksReformDataNotify::fireworks_reform_data_list_size() const {
  return fireworks_reform_data_list_.size();
}
void FireworksReformDataNotify::clear_fireworks_reform_data_list() {
  fireworks_reform_data_list_.Clear();
}
const ::proto::FireworksReformData& FireworksReformDataNotify::fireworks_reform_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FireworksReformDataNotify.fireworks_reform_data_list)
  return fireworks_reform_data_list_.Get(index);
}
::proto::FireworksReformData* FireworksReformDataNotify::mutable_fireworks_reform_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FireworksReformDataNotify.fireworks_reform_data_list)
  return fireworks_reform_data_list_.Mutable(index);
}
::proto::FireworksReformData* FireworksReformDataNotify::add_fireworks_reform_data_list() {
  // @@protoc_insertion_point(field_add:proto.FireworksReformDataNotify.fireworks_reform_data_list)
  return fireworks_reform_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FireworksReformData >*
FireworksReformDataNotify::mutable_fireworks_reform_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FireworksReformDataNotify.fireworks_reform_data_list)
  return &fireworks_reform_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FireworksReformData >&
FireworksReformDataNotify::fireworks_reform_data_list() const {
  // @@protoc_insertion_point(field_list:proto.FireworksReformDataNotify.fireworks_reform_data_list)
  return fireworks_reform_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReformFireworksReq::kFireworksReformDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReformFireworksReq::ReformFireworksReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReformFireworksReq)
}
ReformFireworksReq::ReformFireworksReq(const ReformFireworksReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fireworks_reform_data()) {
    fireworks_reform_data_ = new ::proto::FireworksReformData(*from.fireworks_reform_data_);
  } else {
    fireworks_reform_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ReformFireworksReq)
}

void ReformFireworksReq::SharedCtor() {
  fireworks_reform_data_ = NULL;
  _cached_size_ = 0;
}

ReformFireworksReq::~ReformFireworksReq() {
  // @@protoc_insertion_point(destructor:proto.ReformFireworksReq)
  SharedDtor();
}

void ReformFireworksReq::SharedDtor() {
  if (this != internal_default_instance()) delete fireworks_reform_data_;
}

void ReformFireworksReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReformFireworksReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReformFireworksReq& ReformFireworksReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReformFireworksReq* ReformFireworksReq::New(::google::protobuf::Arena* arena) const {
  ReformFireworksReq* n = new ReformFireworksReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReformFireworksReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReformFireworksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && fireworks_reform_data_ != NULL) {
    delete fireworks_reform_data_;
  }
  fireworks_reform_data_ = NULL;
  _internal_metadata_.Clear();
}

bool ReformFireworksReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReformFireworksReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.FireworksReformData fireworks_reform_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fireworks_reform_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReformFireworksReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReformFireworksReq)
  return false;
#undef DO_
}

void ReformFireworksReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReformFireworksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FireworksReformData fireworks_reform_data = 3;
  if (this->has_fireworks_reform_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fireworks_reform_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReformFireworksReq)
}

::google::protobuf::uint8* ReformFireworksReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReformFireworksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FireworksReformData fireworks_reform_data = 3;
  if (this->has_fireworks_reform_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->fireworks_reform_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReformFireworksReq)
  return target;
}

size_t ReformFireworksReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReformFireworksReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FireworksReformData fireworks_reform_data = 3;
  if (this->has_fireworks_reform_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fireworks_reform_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReformFireworksReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReformFireworksReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReformFireworksReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReformFireworksReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReformFireworksReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReformFireworksReq)
    MergeFrom(*source);
  }
}

void ReformFireworksReq::MergeFrom(const ReformFireworksReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReformFireworksReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fireworks_reform_data()) {
    mutable_fireworks_reform_data()->::proto::FireworksReformData::MergeFrom(from.fireworks_reform_data());
  }
}

void ReformFireworksReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReformFireworksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReformFireworksReq::CopyFrom(const ReformFireworksReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReformFireworksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReformFireworksReq::IsInitialized() const {
  return true;
}

void ReformFireworksReq::Swap(ReformFireworksReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReformFireworksReq::InternalSwap(ReformFireworksReq* other) {
  using std::swap;
  swap(fireworks_reform_data_, other->fireworks_reform_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReformFireworksReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReformFireworksReq

// .proto.FireworksReformData fireworks_reform_data = 3;
bool ReformFireworksReq::has_fireworks_reform_data() const {
  return this != internal_default_instance() && fireworks_reform_data_ != NULL;
}
void ReformFireworksReq::clear_fireworks_reform_data() {
  if (GetArenaNoVirtual() == NULL && fireworks_reform_data_ != NULL) delete fireworks_reform_data_;
  fireworks_reform_data_ = NULL;
}
const ::proto::FireworksReformData& ReformFireworksReq::fireworks_reform_data() const {
  const ::proto::FireworksReformData* p = fireworks_reform_data_;
  // @@protoc_insertion_point(field_get:proto.ReformFireworksReq.fireworks_reform_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FireworksReformData*>(
      &::proto::_FireworksReformData_default_instance_);
}
::proto::FireworksReformData* ReformFireworksReq::mutable_fireworks_reform_data() {
  
  if (fireworks_reform_data_ == NULL) {
    fireworks_reform_data_ = new ::proto::FireworksReformData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ReformFireworksReq.fireworks_reform_data)
  return fireworks_reform_data_;
}
::proto::FireworksReformData* ReformFireworksReq::release_fireworks_reform_data() {
  // @@protoc_insertion_point(field_release:proto.ReformFireworksReq.fireworks_reform_data)
  
  ::proto::FireworksReformData* temp = fireworks_reform_data_;
  fireworks_reform_data_ = NULL;
  return temp;
}
void ReformFireworksReq::set_allocated_fireworks_reform_data(::proto::FireworksReformData* fireworks_reform_data) {
  delete fireworks_reform_data_;
  fireworks_reform_data_ = fireworks_reform_data;
  if (fireworks_reform_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ReformFireworksReq.fireworks_reform_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReformFireworksRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReformFireworksRsp::ReformFireworksRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReformFireworksRsp)
}
ReformFireworksRsp::ReformFireworksRsp(const ReformFireworksRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ReformFireworksRsp)
}

void ReformFireworksRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ReformFireworksRsp::~ReformFireworksRsp() {
  // @@protoc_insertion_point(destructor:proto.ReformFireworksRsp)
  SharedDtor();
}

void ReformFireworksRsp::SharedDtor() {
}

void ReformFireworksRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReformFireworksRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReformFireworksRsp& ReformFireworksRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReformFireworksRsp* ReformFireworksRsp::New(::google::protobuf::Arena* arena) const {
  ReformFireworksRsp* n = new ReformFireworksRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReformFireworksRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReformFireworksRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ReformFireworksRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReformFireworksRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReformFireworksRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReformFireworksRsp)
  return false;
#undef DO_
}

void ReformFireworksRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReformFireworksRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReformFireworksRsp)
}

::google::protobuf::uint8* ReformFireworksRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReformFireworksRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReformFireworksRsp)
  return target;
}

size_t ReformFireworksRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReformFireworksRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReformFireworksRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReformFireworksRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReformFireworksRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReformFireworksRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReformFireworksRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReformFireworksRsp)
    MergeFrom(*source);
  }
}

void ReformFireworksRsp::MergeFrom(const ReformFireworksRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReformFireworksRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ReformFireworksRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReformFireworksRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReformFireworksRsp::CopyFrom(const ReformFireworksRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReformFireworksRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReformFireworksRsp::IsInitialized() const {
  return true;
}

void ReformFireworksRsp::Swap(ReformFireworksRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReformFireworksRsp::InternalSwap(ReformFireworksRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReformFireworksRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReformFireworksRsp

// int32 retcode = 8;
void ReformFireworksRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ReformFireworksRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ReformFireworksRsp.retcode)
  return retcode_;
}
void ReformFireworksRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ReformFireworksRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FireworksLaunchParam::kValueFieldNumber;
const int FireworksLaunchParam::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FireworksLaunchParam::FireworksLaunchParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FireworksLaunchParam)
}
FireworksLaunchParam::FireworksLaunchParam(const FireworksLaunchParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&type_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.FireworksLaunchParam)
}

void FireworksLaunchParam::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&type_)) + sizeof(value_));
  _cached_size_ = 0;
}

FireworksLaunchParam::~FireworksLaunchParam() {
  // @@protoc_insertion_point(destructor:proto.FireworksLaunchParam)
  SharedDtor();
}

void FireworksLaunchParam::SharedDtor() {
}

void FireworksLaunchParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworksLaunchParam::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FireworksLaunchParam& FireworksLaunchParam::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FireworksLaunchParam* FireworksLaunchParam::New(::google::protobuf::Arena* arena) const {
  FireworksLaunchParam* n = new FireworksLaunchParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FireworksLaunchParam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FireworksLaunchParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&type_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool FireworksLaunchParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FireworksLaunchParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.FireworksLaunchParamType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::proto::FireworksLaunchParamType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FireworksLaunchParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FireworksLaunchParam)
  return false;
#undef DO_
}

void FireworksLaunchParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FireworksLaunchParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FireworksLaunchParamType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // int32 value = 5;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FireworksLaunchParam)
}

::google::protobuf::uint8* FireworksLaunchParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FireworksLaunchParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FireworksLaunchParamType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // int32 value = 5;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FireworksLaunchParam)
  return target;
}

size_t FireworksLaunchParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FireworksLaunchParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FireworksLaunchParamType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 value = 5;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworksLaunchParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FireworksLaunchParam)
  GOOGLE_DCHECK_NE(&from, this);
  const FireworksLaunchParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FireworksLaunchParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FireworksLaunchParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FireworksLaunchParam)
    MergeFrom(*source);
  }
}

void FireworksLaunchParam::MergeFrom(const FireworksLaunchParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FireworksLaunchParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void FireworksLaunchParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FireworksLaunchParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworksLaunchParam::CopyFrom(const FireworksLaunchParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FireworksLaunchParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworksLaunchParam::IsInitialized() const {
  return true;
}

void FireworksLaunchParam::Swap(FireworksLaunchParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FireworksLaunchParam::InternalSwap(FireworksLaunchParam* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FireworksLaunchParam::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FireworksLaunchParam

// int32 value = 5;
void FireworksLaunchParam::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 FireworksLaunchParam::value() const {
  // @@protoc_insertion_point(field_get:proto.FireworksLaunchParam.value)
  return value_;
}
void FireworksLaunchParam::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.FireworksLaunchParam.value)
}

// .proto.FireworksLaunchParamType type = 4;
void FireworksLaunchParam::clear_type() {
  type_ = 0;
}
::proto::FireworksLaunchParamType FireworksLaunchParam::type() const {
  // @@protoc_insertion_point(field_get:proto.FireworksLaunchParam.type)
  return static_cast< ::proto::FireworksLaunchParamType >(type_);
}
void FireworksLaunchParam::set_type(::proto::FireworksLaunchParamType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.FireworksLaunchParam.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FireworksLaunchSchemeData::kSchemeIdFieldNumber;
const int FireworksLaunchSchemeData::kFireworksIdListFieldNumber;
const int FireworksLaunchSchemeData::kLaunchParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FireworksLaunchSchemeData::FireworksLaunchSchemeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FireworksLaunchSchemeData)
}
FireworksLaunchSchemeData::FireworksLaunchSchemeData(const FireworksLaunchSchemeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fireworks_id_list_(from.fireworks_id_list_),
      launch_param_list_(from.launch_param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scheme_id_ = from.scheme_id_;
  // @@protoc_insertion_point(copy_constructor:proto.FireworksLaunchSchemeData)
}

void FireworksLaunchSchemeData::SharedCtor() {
  scheme_id_ = 0u;
  _cached_size_ = 0;
}

FireworksLaunchSchemeData::~FireworksLaunchSchemeData() {
  // @@protoc_insertion_point(destructor:proto.FireworksLaunchSchemeData)
  SharedDtor();
}

void FireworksLaunchSchemeData::SharedDtor() {
}

void FireworksLaunchSchemeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworksLaunchSchemeData::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FireworksLaunchSchemeData& FireworksLaunchSchemeData::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FireworksLaunchSchemeData* FireworksLaunchSchemeData::New(::google::protobuf::Arena* arena) const {
  FireworksLaunchSchemeData* n = new FireworksLaunchSchemeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FireworksLaunchSchemeData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FireworksLaunchSchemeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fireworks_id_list_.Clear();
  launch_param_list_.Clear();
  scheme_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FireworksLaunchSchemeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FireworksLaunchSchemeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 fireworks_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fireworks_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_fireworks_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scheme_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scheme_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FireworksLaunchParam launch_param_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_launch_param_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FireworksLaunchSchemeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FireworksLaunchSchemeData)
  return false;
#undef DO_
}

void FireworksLaunchSchemeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FireworksLaunchSchemeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 fireworks_id_list = 2;
  if (this->fireworks_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fireworks_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fireworks_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fireworks_id_list(i), output);
  }

  // uint32 scheme_id = 3;
  if (this->scheme_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scheme_id(), output);
  }

  // repeated .proto.FireworksLaunchParam launch_param_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->launch_param_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->launch_param_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FireworksLaunchSchemeData)
}

::google::protobuf::uint8* FireworksLaunchSchemeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FireworksLaunchSchemeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 fireworks_id_list = 2;
  if (this->fireworks_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fireworks_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fireworks_id_list_, target);
  }

  // uint32 scheme_id = 3;
  if (this->scheme_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scheme_id(), target);
  }

  // repeated .proto.FireworksLaunchParam launch_param_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->launch_param_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->launch_param_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FireworksLaunchSchemeData)
  return target;
}

size_t FireworksLaunchSchemeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FireworksLaunchSchemeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 fireworks_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fireworks_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fireworks_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.FireworksLaunchParam launch_param_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->launch_param_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->launch_param_list(static_cast<int>(i)));
    }
  }

  // uint32 scheme_id = 3;
  if (this->scheme_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scheme_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworksLaunchSchemeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FireworksLaunchSchemeData)
  GOOGLE_DCHECK_NE(&from, this);
  const FireworksLaunchSchemeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FireworksLaunchSchemeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FireworksLaunchSchemeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FireworksLaunchSchemeData)
    MergeFrom(*source);
  }
}

void FireworksLaunchSchemeData::MergeFrom(const FireworksLaunchSchemeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FireworksLaunchSchemeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fireworks_id_list_.MergeFrom(from.fireworks_id_list_);
  launch_param_list_.MergeFrom(from.launch_param_list_);
  if (from.scheme_id() != 0) {
    set_scheme_id(from.scheme_id());
  }
}

void FireworksLaunchSchemeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FireworksLaunchSchemeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworksLaunchSchemeData::CopyFrom(const FireworksLaunchSchemeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FireworksLaunchSchemeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworksLaunchSchemeData::IsInitialized() const {
  return true;
}

void FireworksLaunchSchemeData::Swap(FireworksLaunchSchemeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FireworksLaunchSchemeData::InternalSwap(FireworksLaunchSchemeData* other) {
  using std::swap;
  fireworks_id_list_.InternalSwap(&other->fireworks_id_list_);
  launch_param_list_.InternalSwap(&other->launch_param_list_);
  swap(scheme_id_, other->scheme_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FireworksLaunchSchemeData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FireworksLaunchSchemeData

// uint32 scheme_id = 3;
void FireworksLaunchSchemeData::clear_scheme_id() {
  scheme_id_ = 0u;
}
::google::protobuf::uint32 FireworksLaunchSchemeData::scheme_id() const {
  // @@protoc_insertion_point(field_get:proto.FireworksLaunchSchemeData.scheme_id)
  return scheme_id_;
}
void FireworksLaunchSchemeData::set_scheme_id(::google::protobuf::uint32 value) {
  
  scheme_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FireworksLaunchSchemeData.scheme_id)
}

// repeated uint32 fireworks_id_list = 2;
int FireworksLaunchSchemeData::fireworks_id_list_size() const {
  return fireworks_id_list_.size();
}
void FireworksLaunchSchemeData::clear_fireworks_id_list() {
  fireworks_id_list_.Clear();
}
::google::protobuf::uint32 FireworksLaunchSchemeData::fireworks_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FireworksLaunchSchemeData.fireworks_id_list)
  return fireworks_id_list_.Get(index);
}
void FireworksLaunchSchemeData::set_fireworks_id_list(int index, ::google::protobuf::uint32 value) {
  fireworks_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FireworksLaunchSchemeData.fireworks_id_list)
}
void FireworksLaunchSchemeData::add_fireworks_id_list(::google::protobuf::uint32 value) {
  fireworks_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FireworksLaunchSchemeData.fireworks_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FireworksLaunchSchemeData::fireworks_id_list() const {
  // @@protoc_insertion_point(field_list:proto.FireworksLaunchSchemeData.fireworks_id_list)
  return fireworks_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FireworksLaunchSchemeData::mutable_fireworks_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FireworksLaunchSchemeData.fireworks_id_list)
  return &fireworks_id_list_;
}

// repeated .proto.FireworksLaunchParam launch_param_list = 7;
int FireworksLaunchSchemeData::launch_param_list_size() const {
  return launch_param_list_.size();
}
void FireworksLaunchSchemeData::clear_launch_param_list() {
  launch_param_list_.Clear();
}
const ::proto::FireworksLaunchParam& FireworksLaunchSchemeData::launch_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FireworksLaunchSchemeData.launch_param_list)
  return launch_param_list_.Get(index);
}
::proto::FireworksLaunchParam* FireworksLaunchSchemeData::mutable_launch_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FireworksLaunchSchemeData.launch_param_list)
  return launch_param_list_.Mutable(index);
}
::proto::FireworksLaunchParam* FireworksLaunchSchemeData::add_launch_param_list() {
  // @@protoc_insertion_point(field_add:proto.FireworksLaunchSchemeData.launch_param_list)
  return launch_param_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FireworksLaunchParam >*
FireworksLaunchSchemeData::mutable_launch_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FireworksLaunchSchemeData.launch_param_list)
  return &launch_param_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FireworksLaunchParam >&
FireworksLaunchSchemeData::launch_param_list() const {
  // @@protoc_insertion_point(field_list:proto.FireworksLaunchSchemeData.launch_param_list)
  return launch_param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchFireworksReq::kSchemeDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchFireworksReq::LaunchFireworksReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LaunchFireworksReq)
}
LaunchFireworksReq::LaunchFireworksReq(const LaunchFireworksReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_scheme_data()) {
    scheme_data_ = new ::proto::FireworksLaunchSchemeData(*from.scheme_data_);
  } else {
    scheme_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.LaunchFireworksReq)
}

void LaunchFireworksReq::SharedCtor() {
  scheme_data_ = NULL;
  _cached_size_ = 0;
}

LaunchFireworksReq::~LaunchFireworksReq() {
  // @@protoc_insertion_point(destructor:proto.LaunchFireworksReq)
  SharedDtor();
}

void LaunchFireworksReq::SharedDtor() {
  if (this != internal_default_instance()) delete scheme_data_;
}

void LaunchFireworksReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaunchFireworksReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaunchFireworksReq& LaunchFireworksReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaunchFireworksReq* LaunchFireworksReq::New(::google::protobuf::Arena* arena) const {
  LaunchFireworksReq* n = new LaunchFireworksReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaunchFireworksReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LaunchFireworksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && scheme_data_ != NULL) {
    delete scheme_data_;
  }
  scheme_data_ = NULL;
  _internal_metadata_.Clear();
}

bool LaunchFireworksReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LaunchFireworksReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.FireworksLaunchSchemeData scheme_data = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scheme_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LaunchFireworksReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LaunchFireworksReq)
  return false;
#undef DO_
}

void LaunchFireworksReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LaunchFireworksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FireworksLaunchSchemeData scheme_data = 13;
  if (this->has_scheme_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->scheme_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LaunchFireworksReq)
}

::google::protobuf::uint8* LaunchFireworksReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LaunchFireworksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FireworksLaunchSchemeData scheme_data = 13;
  if (this->has_scheme_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->scheme_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LaunchFireworksReq)
  return target;
}

size_t LaunchFireworksReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LaunchFireworksReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FireworksLaunchSchemeData scheme_data = 13;
  if (this->has_scheme_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->scheme_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaunchFireworksReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LaunchFireworksReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchFireworksReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaunchFireworksReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LaunchFireworksReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LaunchFireworksReq)
    MergeFrom(*source);
  }
}

void LaunchFireworksReq::MergeFrom(const LaunchFireworksReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LaunchFireworksReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scheme_data()) {
    mutable_scheme_data()->::proto::FireworksLaunchSchemeData::MergeFrom(from.scheme_data());
  }
}

void LaunchFireworksReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LaunchFireworksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchFireworksReq::CopyFrom(const LaunchFireworksReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LaunchFireworksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchFireworksReq::IsInitialized() const {
  return true;
}

void LaunchFireworksReq::Swap(LaunchFireworksReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchFireworksReq::InternalSwap(LaunchFireworksReq* other) {
  using std::swap;
  swap(scheme_data_, other->scheme_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaunchFireworksReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaunchFireworksReq

// .proto.FireworksLaunchSchemeData scheme_data = 13;
bool LaunchFireworksReq::has_scheme_data() const {
  return this != internal_default_instance() && scheme_data_ != NULL;
}
void LaunchFireworksReq::clear_scheme_data() {
  if (GetArenaNoVirtual() == NULL && scheme_data_ != NULL) delete scheme_data_;
  scheme_data_ = NULL;
}
const ::proto::FireworksLaunchSchemeData& LaunchFireworksReq::scheme_data() const {
  const ::proto::FireworksLaunchSchemeData* p = scheme_data_;
  // @@protoc_insertion_point(field_get:proto.LaunchFireworksReq.scheme_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FireworksLaunchSchemeData*>(
      &::proto::_FireworksLaunchSchemeData_default_instance_);
}
::proto::FireworksLaunchSchemeData* LaunchFireworksReq::mutable_scheme_data() {
  
  if (scheme_data_ == NULL) {
    scheme_data_ = new ::proto::FireworksLaunchSchemeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.LaunchFireworksReq.scheme_data)
  return scheme_data_;
}
::proto::FireworksLaunchSchemeData* LaunchFireworksReq::release_scheme_data() {
  // @@protoc_insertion_point(field_release:proto.LaunchFireworksReq.scheme_data)
  
  ::proto::FireworksLaunchSchemeData* temp = scheme_data_;
  scheme_data_ = NULL;
  return temp;
}
void LaunchFireworksReq::set_allocated_scheme_data(::proto::FireworksLaunchSchemeData* scheme_data) {
  delete scheme_data_;
  scheme_data_ = scheme_data;
  if (scheme_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.LaunchFireworksReq.scheme_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchFireworksRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchFireworksRsp::LaunchFireworksRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LaunchFireworksRsp)
}
LaunchFireworksRsp::LaunchFireworksRsp(const LaunchFireworksRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.LaunchFireworksRsp)
}

void LaunchFireworksRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

LaunchFireworksRsp::~LaunchFireworksRsp() {
  // @@protoc_insertion_point(destructor:proto.LaunchFireworksRsp)
  SharedDtor();
}

void LaunchFireworksRsp::SharedDtor() {
}

void LaunchFireworksRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaunchFireworksRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaunchFireworksRsp& LaunchFireworksRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaunchFireworksRsp* LaunchFireworksRsp::New(::google::protobuf::Arena* arena) const {
  LaunchFireworksRsp* n = new LaunchFireworksRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaunchFireworksRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LaunchFireworksRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool LaunchFireworksRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LaunchFireworksRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LaunchFireworksRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LaunchFireworksRsp)
  return false;
#undef DO_
}

void LaunchFireworksRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LaunchFireworksRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LaunchFireworksRsp)
}

::google::protobuf::uint8* LaunchFireworksRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LaunchFireworksRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LaunchFireworksRsp)
  return target;
}

size_t LaunchFireworksRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LaunchFireworksRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaunchFireworksRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LaunchFireworksRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LaunchFireworksRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaunchFireworksRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LaunchFireworksRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LaunchFireworksRsp)
    MergeFrom(*source);
  }
}

void LaunchFireworksRsp::MergeFrom(const LaunchFireworksRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LaunchFireworksRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LaunchFireworksRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LaunchFireworksRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaunchFireworksRsp::CopyFrom(const LaunchFireworksRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LaunchFireworksRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchFireworksRsp::IsInitialized() const {
  return true;
}

void LaunchFireworksRsp::Swap(LaunchFireworksRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchFireworksRsp::InternalSwap(LaunchFireworksRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaunchFireworksRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaunchFireworksRsp

// int32 retcode = 6;
void LaunchFireworksRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 LaunchFireworksRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.LaunchFireworksRsp.retcode)
  return retcode_;
}
void LaunchFireworksRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.LaunchFireworksRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FireworksLaunchDataNotify::kSchemeDataListFieldNumber;
const int FireworksLaunchDataNotify::kLastUseSchemeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FireworksLaunchDataNotify::FireworksLaunchDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FireworksLaunchDataNotify)
}
FireworksLaunchDataNotify::FireworksLaunchDataNotify(const FireworksLaunchDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scheme_data_list_(from.scheme_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_use_scheme_id_ = from.last_use_scheme_id_;
  // @@protoc_insertion_point(copy_constructor:proto.FireworksLaunchDataNotify)
}

void FireworksLaunchDataNotify::SharedCtor() {
  last_use_scheme_id_ = 0u;
  _cached_size_ = 0;
}

FireworksLaunchDataNotify::~FireworksLaunchDataNotify() {
  // @@protoc_insertion_point(destructor:proto.FireworksLaunchDataNotify)
  SharedDtor();
}

void FireworksLaunchDataNotify::SharedDtor() {
}

void FireworksLaunchDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworksLaunchDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FireworksLaunchDataNotify& FireworksLaunchDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

FireworksLaunchDataNotify* FireworksLaunchDataNotify::New(::google::protobuf::Arena* arena) const {
  FireworksLaunchDataNotify* n = new FireworksLaunchDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FireworksLaunchDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FireworksLaunchDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scheme_data_list_.Clear();
  last_use_scheme_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FireworksLaunchDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FireworksLaunchDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 last_use_scheme_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_use_scheme_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FireworksLaunchSchemeData scheme_data_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scheme_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FireworksLaunchDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FireworksLaunchDataNotify)
  return false;
#undef DO_
}

void FireworksLaunchDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FireworksLaunchDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_use_scheme_id = 4;
  if (this->last_use_scheme_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->last_use_scheme_id(), output);
  }

  // repeated .proto.FireworksLaunchSchemeData scheme_data_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scheme_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->scheme_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FireworksLaunchDataNotify)
}

::google::protobuf::uint8* FireworksLaunchDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FireworksLaunchDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_use_scheme_id = 4;
  if (this->last_use_scheme_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->last_use_scheme_id(), target);
  }

  // repeated .proto.FireworksLaunchSchemeData scheme_data_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scheme_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->scheme_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FireworksLaunchDataNotify)
  return target;
}

size_t FireworksLaunchDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FireworksLaunchDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FireworksLaunchSchemeData scheme_data_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->scheme_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scheme_data_list(static_cast<int>(i)));
    }
  }

  // uint32 last_use_scheme_id = 4;
  if (this->last_use_scheme_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_use_scheme_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworksLaunchDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FireworksLaunchDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FireworksLaunchDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FireworksLaunchDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FireworksLaunchDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FireworksLaunchDataNotify)
    MergeFrom(*source);
  }
}

void FireworksLaunchDataNotify::MergeFrom(const FireworksLaunchDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FireworksLaunchDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scheme_data_list_.MergeFrom(from.scheme_data_list_);
  if (from.last_use_scheme_id() != 0) {
    set_last_use_scheme_id(from.last_use_scheme_id());
  }
}

void FireworksLaunchDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FireworksLaunchDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworksLaunchDataNotify::CopyFrom(const FireworksLaunchDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FireworksLaunchDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworksLaunchDataNotify::IsInitialized() const {
  return true;
}

void FireworksLaunchDataNotify::Swap(FireworksLaunchDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FireworksLaunchDataNotify::InternalSwap(FireworksLaunchDataNotify* other) {
  using std::swap;
  scheme_data_list_.InternalSwap(&other->scheme_data_list_);
  swap(last_use_scheme_id_, other->last_use_scheme_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FireworksLaunchDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FireworksLaunchDataNotify

// repeated .proto.FireworksLaunchSchemeData scheme_data_list = 12;
int FireworksLaunchDataNotify::scheme_data_list_size() const {
  return scheme_data_list_.size();
}
void FireworksLaunchDataNotify::clear_scheme_data_list() {
  scheme_data_list_.Clear();
}
const ::proto::FireworksLaunchSchemeData& FireworksLaunchDataNotify::scheme_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FireworksLaunchDataNotify.scheme_data_list)
  return scheme_data_list_.Get(index);
}
::proto::FireworksLaunchSchemeData* FireworksLaunchDataNotify::mutable_scheme_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FireworksLaunchDataNotify.scheme_data_list)
  return scheme_data_list_.Mutable(index);
}
::proto::FireworksLaunchSchemeData* FireworksLaunchDataNotify::add_scheme_data_list() {
  // @@protoc_insertion_point(field_add:proto.FireworksLaunchDataNotify.scheme_data_list)
  return scheme_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FireworksLaunchSchemeData >*
FireworksLaunchDataNotify::mutable_scheme_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FireworksLaunchDataNotify.scheme_data_list)
  return &scheme_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FireworksLaunchSchemeData >&
FireworksLaunchDataNotify::scheme_data_list() const {
  // @@protoc_insertion_point(field_list:proto.FireworksLaunchDataNotify.scheme_data_list)
  return scheme_data_list_;
}

// uint32 last_use_scheme_id = 4;
void FireworksLaunchDataNotify::clear_last_use_scheme_id() {
  last_use_scheme_id_ = 0u;
}
::google::protobuf::uint32 FireworksLaunchDataNotify::last_use_scheme_id() const {
  // @@protoc_insertion_point(field_get:proto.FireworksLaunchDataNotify.last_use_scheme_id)
  return last_use_scheme_id_;
}
void FireworksLaunchDataNotify::set_last_use_scheme_id(::google::protobuf::uint32 value) {
  
  last_use_scheme_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FireworksLaunchDataNotify.last_use_scheme_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeWidgetBackgroundActiveStateReq::kIsActiveFieldNumber;
const int ChangeWidgetBackgroundActiveStateReq::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeWidgetBackgroundActiveStateReq::ChangeWidgetBackgroundActiveStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeWidgetBackgroundActiveStateReq)
}
ChangeWidgetBackgroundActiveStateReq::ChangeWidgetBackgroundActiveStateReq(const ChangeWidgetBackgroundActiveStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_active_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(is_active_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeWidgetBackgroundActiveStateReq)
}

void ChangeWidgetBackgroundActiveStateReq::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_active_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(is_active_));
  _cached_size_ = 0;
}

ChangeWidgetBackgroundActiveStateReq::~ChangeWidgetBackgroundActiveStateReq() {
  // @@protoc_insertion_point(destructor:proto.ChangeWidgetBackgroundActiveStateReq)
  SharedDtor();
}

void ChangeWidgetBackgroundActiveStateReq::SharedDtor() {
}

void ChangeWidgetBackgroundActiveStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeWidgetBackgroundActiveStateReq::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeWidgetBackgroundActiveStateReq& ChangeWidgetBackgroundActiveStateReq::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeWidgetBackgroundActiveStateReq* ChangeWidgetBackgroundActiveStateReq::New(::google::protobuf::Arena* arena) const {
  ChangeWidgetBackgroundActiveStateReq* n = new ChangeWidgetBackgroundActiveStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeWidgetBackgroundActiveStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeWidgetBackgroundActiveStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_active_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(is_active_));
  _internal_metadata_.Clear();
}

bool ChangeWidgetBackgroundActiveStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeWidgetBackgroundActiveStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_active = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeWidgetBackgroundActiveStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeWidgetBackgroundActiveStateReq)
  return false;
#undef DO_
}

void ChangeWidgetBackgroundActiveStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeWidgetBackgroundActiveStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 3;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->material_id(), output);
  }

  // bool is_active = 15;
  if (this->is_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_active(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeWidgetBackgroundActiveStateReq)
}

::google::protobuf::uint8* ChangeWidgetBackgroundActiveStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeWidgetBackgroundActiveStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 3;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->material_id(), target);
  }

  // bool is_active = 15;
  if (this->is_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_active(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeWidgetBackgroundActiveStateReq)
  return target;
}

size_t ChangeWidgetBackgroundActiveStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeWidgetBackgroundActiveStateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 3;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // bool is_active = 15;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeWidgetBackgroundActiveStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeWidgetBackgroundActiveStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeWidgetBackgroundActiveStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeWidgetBackgroundActiveStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeWidgetBackgroundActiveStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeWidgetBackgroundActiveStateReq)
    MergeFrom(*source);
  }
}

void ChangeWidgetBackgroundActiveStateReq::MergeFrom(const ChangeWidgetBackgroundActiveStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeWidgetBackgroundActiveStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.is_active() != 0) {
    set_is_active(from.is_active());
  }
}

void ChangeWidgetBackgroundActiveStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeWidgetBackgroundActiveStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeWidgetBackgroundActiveStateReq::CopyFrom(const ChangeWidgetBackgroundActiveStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeWidgetBackgroundActiveStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeWidgetBackgroundActiveStateReq::IsInitialized() const {
  return true;
}

void ChangeWidgetBackgroundActiveStateReq::Swap(ChangeWidgetBackgroundActiveStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeWidgetBackgroundActiveStateReq::InternalSwap(ChangeWidgetBackgroundActiveStateReq* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(is_active_, other->is_active_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeWidgetBackgroundActiveStateReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeWidgetBackgroundActiveStateReq

// bool is_active = 15;
void ChangeWidgetBackgroundActiveStateReq::clear_is_active() {
  is_active_ = false;
}
bool ChangeWidgetBackgroundActiveStateReq::is_active() const {
  // @@protoc_insertion_point(field_get:proto.ChangeWidgetBackgroundActiveStateReq.is_active)
  return is_active_;
}
void ChangeWidgetBackgroundActiveStateReq::set_is_active(bool value) {
  
  is_active_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeWidgetBackgroundActiveStateReq.is_active)
}

// uint32 material_id = 3;
void ChangeWidgetBackgroundActiveStateReq::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 ChangeWidgetBackgroundActiveStateReq::material_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeWidgetBackgroundActiveStateReq.material_id)
  return material_id_;
}
void ChangeWidgetBackgroundActiveStateReq::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeWidgetBackgroundActiveStateReq.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeWidgetBackgroundActiveStateRsp::kRetcodeFieldNumber;
const int ChangeWidgetBackgroundActiveStateRsp::kMaterialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeWidgetBackgroundActiveStateRsp::ChangeWidgetBackgroundActiveStateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChangeWidgetBackgroundActiveStateRsp)
}
ChangeWidgetBackgroundActiveStateRsp::ChangeWidgetBackgroundActiveStateRsp(const ChangeWidgetBackgroundActiveStateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&material_id_, &from.material_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ChangeWidgetBackgroundActiveStateRsp)
}

void ChangeWidgetBackgroundActiveStateRsp::SharedCtor() {
  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ChangeWidgetBackgroundActiveStateRsp::~ChangeWidgetBackgroundActiveStateRsp() {
  // @@protoc_insertion_point(destructor:proto.ChangeWidgetBackgroundActiveStateRsp)
  SharedDtor();
}

void ChangeWidgetBackgroundActiveStateRsp::SharedDtor() {
}

void ChangeWidgetBackgroundActiveStateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeWidgetBackgroundActiveStateRsp::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeWidgetBackgroundActiveStateRsp& ChangeWidgetBackgroundActiveStateRsp::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChangeWidgetBackgroundActiveStateRsp* ChangeWidgetBackgroundActiveStateRsp::New(::google::protobuf::Arena* arena) const {
  ChangeWidgetBackgroundActiveStateRsp* n = new ChangeWidgetBackgroundActiveStateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeWidgetBackgroundActiveStateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&material_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&material_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ChangeWidgetBackgroundActiveStateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 material_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChangeWidgetBackgroundActiveStateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChangeWidgetBackgroundActiveStateRsp)
  return false;
#undef DO_
}

void ChangeWidgetBackgroundActiveStateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->material_id(), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChangeWidgetBackgroundActiveStateRsp)
}

::google::protobuf::uint8* ChangeWidgetBackgroundActiveStateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->material_id(), target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeWidgetBackgroundActiveStateRsp)
  return target;
}

size_t ChangeWidgetBackgroundActiveStateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 material_id = 6;
  if (this->material_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material_id());
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeWidgetBackgroundActiveStateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeWidgetBackgroundActiveStateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeWidgetBackgroundActiveStateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChangeWidgetBackgroundActiveStateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChangeWidgetBackgroundActiveStateRsp)
    MergeFrom(*source);
  }
}

void ChangeWidgetBackgroundActiveStateRsp::MergeFrom(const ChangeWidgetBackgroundActiveStateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.material_id() != 0) {
    set_material_id(from.material_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ChangeWidgetBackgroundActiveStateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeWidgetBackgroundActiveStateRsp::CopyFrom(const ChangeWidgetBackgroundActiveStateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeWidgetBackgroundActiveStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeWidgetBackgroundActiveStateRsp::IsInitialized() const {
  return true;
}

void ChangeWidgetBackgroundActiveStateRsp::Swap(ChangeWidgetBackgroundActiveStateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeWidgetBackgroundActiveStateRsp::InternalSwap(ChangeWidgetBackgroundActiveStateRsp* other) {
  using std::swap;
  swap(material_id_, other->material_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeWidgetBackgroundActiveStateRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeWidgetBackgroundActiveStateRsp

// int32 retcode = 8;
void ChangeWidgetBackgroundActiveStateRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ChangeWidgetBackgroundActiveStateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeWidgetBackgroundActiveStateRsp.retcode)
  return retcode_;
}
void ChangeWidgetBackgroundActiveStateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeWidgetBackgroundActiveStateRsp.retcode)
}

// uint32 material_id = 6;
void ChangeWidgetBackgroundActiveStateRsp::clear_material_id() {
  material_id_ = 0u;
}
::google::protobuf::uint32 ChangeWidgetBackgroundActiveStateRsp::material_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeWidgetBackgroundActiveStateRsp.material_id)
  return material_id_;
}
void ChangeWidgetBackgroundActiveStateRsp::set_material_id(::google::protobuf::uint32 value) {
  
  material_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeWidgetBackgroundActiveStateRsp.material_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllWidgetBackgroundActiveStateNotify::kBackgroundActiveWidgetListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllWidgetBackgroundActiveStateNotify::AllWidgetBackgroundActiveStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AllWidgetBackgroundActiveStateNotify)
}
AllWidgetBackgroundActiveStateNotify::AllWidgetBackgroundActiveStateNotify(const AllWidgetBackgroundActiveStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      background_active_widget_list_(from.background_active_widget_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AllWidgetBackgroundActiveStateNotify)
}

void AllWidgetBackgroundActiveStateNotify::SharedCtor() {
  _cached_size_ = 0;
}

AllWidgetBackgroundActiveStateNotify::~AllWidgetBackgroundActiveStateNotify() {
  // @@protoc_insertion_point(destructor:proto.AllWidgetBackgroundActiveStateNotify)
  SharedDtor();
}

void AllWidgetBackgroundActiveStateNotify::SharedDtor() {
}

void AllWidgetBackgroundActiveStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllWidgetBackgroundActiveStateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllWidgetBackgroundActiveStateNotify& AllWidgetBackgroundActiveStateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllWidgetBackgroundActiveStateNotify* AllWidgetBackgroundActiveStateNotify::New(::google::protobuf::Arena* arena) const {
  AllWidgetBackgroundActiveStateNotify* n = new AllWidgetBackgroundActiveStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllWidgetBackgroundActiveStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AllWidgetBackgroundActiveStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  background_active_widget_list_.Clear();
  _internal_metadata_.Clear();
}

bool AllWidgetBackgroundActiveStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AllWidgetBackgroundActiveStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 background_active_widget_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_background_active_widget_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_background_active_widget_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AllWidgetBackgroundActiveStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AllWidgetBackgroundActiveStateNotify)
  return false;
#undef DO_
}

void AllWidgetBackgroundActiveStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AllWidgetBackgroundActiveStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 background_active_widget_list = 3;
  if (this->background_active_widget_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _background_active_widget_list_cached_byte_size_));
  }
  for (int i = 0, n = this->background_active_widget_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->background_active_widget_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AllWidgetBackgroundActiveStateNotify)
}

::google::protobuf::uint8* AllWidgetBackgroundActiveStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AllWidgetBackgroundActiveStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 background_active_widget_list = 3;
  if (this->background_active_widget_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _background_active_widget_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->background_active_widget_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AllWidgetBackgroundActiveStateNotify)
  return target;
}

size_t AllWidgetBackgroundActiveStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AllWidgetBackgroundActiveStateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 background_active_widget_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->background_active_widget_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _background_active_widget_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllWidgetBackgroundActiveStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AllWidgetBackgroundActiveStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AllWidgetBackgroundActiveStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllWidgetBackgroundActiveStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AllWidgetBackgroundActiveStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AllWidgetBackgroundActiveStateNotify)
    MergeFrom(*source);
  }
}

void AllWidgetBackgroundActiveStateNotify::MergeFrom(const AllWidgetBackgroundActiveStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AllWidgetBackgroundActiveStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  background_active_widget_list_.MergeFrom(from.background_active_widget_list_);
}

void AllWidgetBackgroundActiveStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AllWidgetBackgroundActiveStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllWidgetBackgroundActiveStateNotify::CopyFrom(const AllWidgetBackgroundActiveStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AllWidgetBackgroundActiveStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllWidgetBackgroundActiveStateNotify::IsInitialized() const {
  return true;
}

void AllWidgetBackgroundActiveStateNotify::Swap(AllWidgetBackgroundActiveStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllWidgetBackgroundActiveStateNotify::InternalSwap(AllWidgetBackgroundActiveStateNotify* other) {
  using std::swap;
  background_active_widget_list_.InternalSwap(&other->background_active_widget_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllWidgetBackgroundActiveStateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllWidgetBackgroundActiveStateNotify

// repeated uint32 background_active_widget_list = 3;
int AllWidgetBackgroundActiveStateNotify::background_active_widget_list_size() const {
  return background_active_widget_list_.size();
}
void AllWidgetBackgroundActiveStateNotify::clear_background_active_widget_list() {
  background_active_widget_list_.Clear();
}
::google::protobuf::uint32 AllWidgetBackgroundActiveStateNotify::background_active_widget_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllWidgetBackgroundActiveStateNotify.background_active_widget_list)
  return background_active_widget_list_.Get(index);
}
void AllWidgetBackgroundActiveStateNotify::set_background_active_widget_list(int index, ::google::protobuf::uint32 value) {
  background_active_widget_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AllWidgetBackgroundActiveStateNotify.background_active_widget_list)
}
void AllWidgetBackgroundActiveStateNotify::add_background_active_widget_list(::google::protobuf::uint32 value) {
  background_active_widget_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AllWidgetBackgroundActiveStateNotify.background_active_widget_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllWidgetBackgroundActiveStateNotify::background_active_widget_list() const {
  // @@protoc_insertion_point(field_list:proto.AllWidgetBackgroundActiveStateNotify.background_active_widget_list)
  return background_active_widget_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllWidgetBackgroundActiveStateNotify::mutable_background_active_widget_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllWidgetBackgroundActiveStateNotify.background_active_widget_list)
  return &background_active_widget_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerWidgetInfo::kUidFieldNumber;
const int PlayerWidgetInfo::kSlotListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerWidgetInfo::PlayerWidgetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerWidgetInfo)
}
PlayerWidgetInfo::PlayerWidgetInfo(const PlayerWidgetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slot_list_(from.slot_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerWidgetInfo)
}

void PlayerWidgetInfo::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

PlayerWidgetInfo::~PlayerWidgetInfo() {
  // @@protoc_insertion_point(destructor:proto.PlayerWidgetInfo)
  SharedDtor();
}

void PlayerWidgetInfo::SharedDtor() {
}

void PlayerWidgetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerWidgetInfo::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerWidgetInfo& PlayerWidgetInfo::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerWidgetInfo* PlayerWidgetInfo::New(::google::protobuf::Arena* arena) const {
  PlayerWidgetInfo* n = new PlayerWidgetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerWidgetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerWidgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_list_.Clear();
  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerWidgetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerWidgetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.WidgetSlotData slot_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerWidgetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerWidgetInfo)
  return false;
#undef DO_
}

void PlayerWidgetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerWidgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetSlotData slot_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->slot_list(static_cast<int>(i)), output);
  }

  // uint32 uid = 14;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerWidgetInfo)
}

::google::protobuf::uint8* PlayerWidgetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerWidgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.WidgetSlotData slot_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->slot_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 uid = 14;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerWidgetInfo)
  return target;
}

size_t PlayerWidgetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerWidgetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WidgetSlotData slot_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->slot_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slot_list(static_cast<int>(i)));
    }
  }

  // uint32 uid = 14;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerWidgetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerWidgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerWidgetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerWidgetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerWidgetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerWidgetInfo)
    MergeFrom(*source);
  }
}

void PlayerWidgetInfo::MergeFrom(const PlayerWidgetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerWidgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slot_list_.MergeFrom(from.slot_list_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void PlayerWidgetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerWidgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerWidgetInfo::CopyFrom(const PlayerWidgetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerWidgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerWidgetInfo::IsInitialized() const {
  return true;
}

void PlayerWidgetInfo::Swap(PlayerWidgetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerWidgetInfo::InternalSwap(PlayerWidgetInfo* other) {
  using std::swap;
  slot_list_.InternalSwap(&other->slot_list_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerWidgetInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerWidgetInfo

// uint32 uid = 14;
void PlayerWidgetInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerWidgetInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerWidgetInfo.uid)
  return uid_;
}
void PlayerWidgetInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerWidgetInfo.uid)
}

// repeated .proto.WidgetSlotData slot_list = 13;
int PlayerWidgetInfo::slot_list_size() const {
  return slot_list_.size();
}
void PlayerWidgetInfo::clear_slot_list() {
  slot_list_.Clear();
}
const ::proto::WidgetSlotData& PlayerWidgetInfo::slot_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerWidgetInfo.slot_list)
  return slot_list_.Get(index);
}
::proto::WidgetSlotData* PlayerWidgetInfo::mutable_slot_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerWidgetInfo.slot_list)
  return slot_list_.Mutable(index);
}
::proto::WidgetSlotData* PlayerWidgetInfo::add_slot_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerWidgetInfo.slot_list)
  return slot_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >*
PlayerWidgetInfo::mutable_slot_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerWidgetInfo.slot_list)
  return &slot_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WidgetSlotData >&
PlayerWidgetInfo::slot_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerWidgetInfo.slot_list)
  return slot_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemotePlayerWidgetNotify::kPlayerWidgetInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemotePlayerWidgetNotify::RemotePlayerWidgetNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemotePlayerWidgetNotify)
}
RemotePlayerWidgetNotify::RemotePlayerWidgetNotify(const RemotePlayerWidgetNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_widget_info_list_(from.player_widget_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RemotePlayerWidgetNotify)
}

void RemotePlayerWidgetNotify::SharedCtor() {
  _cached_size_ = 0;
}

RemotePlayerWidgetNotify::~RemotePlayerWidgetNotify() {
  // @@protoc_insertion_point(destructor:proto.RemotePlayerWidgetNotify)
  SharedDtor();
}

void RemotePlayerWidgetNotify::SharedDtor() {
}

void RemotePlayerWidgetNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemotePlayerWidgetNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemotePlayerWidgetNotify& RemotePlayerWidgetNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemotePlayerWidgetNotify* RemotePlayerWidgetNotify::New(::google::protobuf::Arena* arena) const {
  RemotePlayerWidgetNotify* n = new RemotePlayerWidgetNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemotePlayerWidgetNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemotePlayerWidgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_widget_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool RemotePlayerWidgetNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemotePlayerWidgetNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.PlayerWidgetInfo player_widget_info_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_widget_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemotePlayerWidgetNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemotePlayerWidgetNotify)
  return false;
#undef DO_
}

void RemotePlayerWidgetNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemotePlayerWidgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PlayerWidgetInfo player_widget_info_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_widget_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->player_widget_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemotePlayerWidgetNotify)
}

::google::protobuf::uint8* RemotePlayerWidgetNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemotePlayerWidgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PlayerWidgetInfo player_widget_info_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_widget_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->player_widget_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemotePlayerWidgetNotify)
  return target;
}

size_t RemotePlayerWidgetNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemotePlayerWidgetNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PlayerWidgetInfo player_widget_info_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->player_widget_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_widget_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemotePlayerWidgetNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemotePlayerWidgetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RemotePlayerWidgetNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemotePlayerWidgetNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemotePlayerWidgetNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemotePlayerWidgetNotify)
    MergeFrom(*source);
  }
}

void RemotePlayerWidgetNotify::MergeFrom(const RemotePlayerWidgetNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemotePlayerWidgetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_widget_info_list_.MergeFrom(from.player_widget_info_list_);
}

void RemotePlayerWidgetNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemotePlayerWidgetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemotePlayerWidgetNotify::CopyFrom(const RemotePlayerWidgetNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemotePlayerWidgetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemotePlayerWidgetNotify::IsInitialized() const {
  return true;
}

void RemotePlayerWidgetNotify::Swap(RemotePlayerWidgetNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemotePlayerWidgetNotify::InternalSwap(RemotePlayerWidgetNotify* other) {
  using std::swap;
  player_widget_info_list_.InternalSwap(&other->player_widget_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemotePlayerWidgetNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemotePlayerWidgetNotify

// repeated .proto.PlayerWidgetInfo player_widget_info_list = 3;
int RemotePlayerWidgetNotify::player_widget_info_list_size() const {
  return player_widget_info_list_.size();
}
void RemotePlayerWidgetNotify::clear_player_widget_info_list() {
  player_widget_info_list_.Clear();
}
const ::proto::PlayerWidgetInfo& RemotePlayerWidgetNotify::player_widget_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RemotePlayerWidgetNotify.player_widget_info_list)
  return player_widget_info_list_.Get(index);
}
::proto::PlayerWidgetInfo* RemotePlayerWidgetNotify::mutable_player_widget_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RemotePlayerWidgetNotify.player_widget_info_list)
  return player_widget_info_list_.Mutable(index);
}
::proto::PlayerWidgetInfo* RemotePlayerWidgetNotify::add_player_widget_info_list() {
  // @@protoc_insertion_point(field_add:proto.RemotePlayerWidgetNotify.player_widget_info_list)
  return player_widget_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PlayerWidgetInfo >*
RemotePlayerWidgetNotify::mutable_player_widget_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RemotePlayerWidgetNotify.player_widget_info_list)
  return &player_widget_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PlayerWidgetInfo >&
RemotePlayerWidgetNotify::player_widget_info_list() const {
  // @@protoc_insertion_point(field_list:proto.RemotePlayerWidgetNotify.player_widget_info_list)
  return player_widget_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WidgetWeatherWizardDataNotify::kShieldValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WidgetWeatherWizardDataNotify::WidgetWeatherWizardDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WidgetWeatherWizardDataNotify)
}
WidgetWeatherWizardDataNotify::WidgetWeatherWizardDataNotify(const WidgetWeatherWizardDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shield_value_ = from.shield_value_;
  // @@protoc_insertion_point(copy_constructor:proto.WidgetWeatherWizardDataNotify)
}

void WidgetWeatherWizardDataNotify::SharedCtor() {
  shield_value_ = 0u;
  _cached_size_ = 0;
}

WidgetWeatherWizardDataNotify::~WidgetWeatherWizardDataNotify() {
  // @@protoc_insertion_point(destructor:proto.WidgetWeatherWizardDataNotify)
  SharedDtor();
}

void WidgetWeatherWizardDataNotify::SharedDtor() {
}

void WidgetWeatherWizardDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WidgetWeatherWizardDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WidgetWeatherWizardDataNotify& WidgetWeatherWizardDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fwidget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WidgetWeatherWizardDataNotify* WidgetWeatherWizardDataNotify::New(::google::protobuf::Arena* arena) const {
  WidgetWeatherWizardDataNotify* n = new WidgetWeatherWizardDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WidgetWeatherWizardDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WidgetWeatherWizardDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shield_value_ = 0u;
  _internal_metadata_.Clear();
}

bool WidgetWeatherWizardDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WidgetWeatherWizardDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shield_value = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shield_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WidgetWeatherWizardDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WidgetWeatherWizardDataNotify)
  return false;
#undef DO_
}

void WidgetWeatherWizardDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WidgetWeatherWizardDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shield_value = 15;
  if (this->shield_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->shield_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WidgetWeatherWizardDataNotify)
}

::google::protobuf::uint8* WidgetWeatherWizardDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WidgetWeatherWizardDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shield_value = 15;
  if (this->shield_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->shield_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WidgetWeatherWizardDataNotify)
  return target;
}

size_t WidgetWeatherWizardDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WidgetWeatherWizardDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 shield_value = 15;
  if (this->shield_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shield_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WidgetWeatherWizardDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WidgetWeatherWizardDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WidgetWeatherWizardDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WidgetWeatherWizardDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WidgetWeatherWizardDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WidgetWeatherWizardDataNotify)
    MergeFrom(*source);
  }
}

void WidgetWeatherWizardDataNotify::MergeFrom(const WidgetWeatherWizardDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WidgetWeatherWizardDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shield_value() != 0) {
    set_shield_value(from.shield_value());
  }
}

void WidgetWeatherWizardDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WidgetWeatherWizardDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WidgetWeatherWizardDataNotify::CopyFrom(const WidgetWeatherWizardDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WidgetWeatherWizardDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WidgetWeatherWizardDataNotify::IsInitialized() const {
  return true;
}

void WidgetWeatherWizardDataNotify::Swap(WidgetWeatherWizardDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WidgetWeatherWizardDataNotify::InternalSwap(WidgetWeatherWizardDataNotify* other) {
  using std::swap;
  swap(shield_value_, other->shield_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WidgetWeatherWizardDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fwidget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fwidget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WidgetWeatherWizardDataNotify

// uint32 shield_value = 15;
void WidgetWeatherWizardDataNotify::clear_shield_value() {
  shield_value_ = 0u;
}
::google::protobuf::uint32 WidgetWeatherWizardDataNotify::shield_value() const {
  // @@protoc_insertion_point(field_get:proto.WidgetWeatherWizardDataNotify.shield_value)
  return shield_value_;
}
void WidgetWeatherWizardDataNotify::set_shield_value(::google::protobuf::uint32 value) {
  
  shield_value_ = value;
  // @@protoc_insertion_point(field_set:proto.WidgetWeatherWizardDataNotify.shield_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
