// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_ugc.proto

#ifndef PROTOBUF_cmd_2fcmd_5fugc_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fugc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "cmd/cmd_social.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class CheckUgcStateReq;
class CheckUgcStateReqDefaultTypeInternal;
extern CheckUgcStateReqDefaultTypeInternal _CheckUgcStateReq_default_instance_;
class CheckUgcStateRsp;
class CheckUgcStateRspDefaultTypeInternal;
extern CheckUgcStateRspDefaultTypeInternal _CheckUgcStateRsp_default_instance_;
class CheckUgcUpdateReq;
class CheckUgcUpdateReqDefaultTypeInternal;
extern CheckUgcUpdateReqDefaultTypeInternal _CheckUgcUpdateReq_default_instance_;
class CheckUgcUpdateRsp;
class CheckUgcUpdateRspDefaultTypeInternal;
extern CheckUgcUpdateRspDefaultTypeInternal _CheckUgcUpdateRsp_default_instance_;
class GetUgcBriefInfoReq;
class GetUgcBriefInfoReqDefaultTypeInternal;
extern GetUgcBriefInfoReqDefaultTypeInternal _GetUgcBriefInfoReq_default_instance_;
class GetUgcBriefInfoRsp;
class GetUgcBriefInfoRspDefaultTypeInternal;
extern GetUgcBriefInfoRspDefaultTypeInternal _GetUgcBriefInfoRsp_default_instance_;
class GetUgcReq;
class GetUgcReqDefaultTypeInternal;
extern GetUgcReqDefaultTypeInternal _GetUgcReq_default_instance_;
class GetUgcRsp;
class GetUgcRspDefaultTypeInternal;
extern GetUgcRspDefaultTypeInternal _GetUgcRsp_default_instance_;
class PublishUgcReq;
class PublishUgcReqDefaultTypeInternal;
extern PublishUgcReqDefaultTypeInternal _PublishUgcReq_default_instance_;
class PublishUgcRsp;
class PublishUgcRspDefaultTypeInternal;
extern PublishUgcRspDefaultTypeInternal _PublishUgcRsp_default_instance_;
class SaveUgcReq;
class SaveUgcReqDefaultTypeInternal;
extern SaveUgcReqDefaultTypeInternal _SaveUgcReq_default_instance_;
class SaveUgcRsp;
class SaveUgcRspDefaultTypeInternal;
extern SaveUgcRspDefaultTypeInternal _SaveUgcRsp_default_instance_;
class UgcMusicBriefInfo;
class UgcMusicBriefInfoDefaultTypeInternal;
extern UgcMusicBriefInfoDefaultTypeInternal _UgcMusicBriefInfo_default_instance_;
class UgcMusicNote;
class UgcMusicNoteDefaultTypeInternal;
extern UgcMusicNoteDefaultTypeInternal _UgcMusicNote_default_instance_;
class UgcMusicRecord;
class UgcMusicRecordDefaultTypeInternal;
extern UgcMusicRecordDefaultTypeInternal _UgcMusicRecord_default_instance_;
class UgcMusicTrack;
class UgcMusicTrackDefaultTypeInternal;
extern UgcMusicTrackDefaultTypeInternal _UgcMusicTrack_default_instance_;
class UgcNotify;
class UgcNotifyDefaultTypeInternal;
extern UgcNotifyDefaultTypeInternal _UgcNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fugc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fugc_2eproto

enum UgcType {
  UGC_TYPE_NONE = 0,
  UGC_TYPE_MUSIC_GAME = 1,
  UgcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UgcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UgcType_IsValid(int value);
const UgcType UgcType_MIN = UGC_TYPE_NONE;
const UgcType UgcType_MAX = UGC_TYPE_MUSIC_GAME;
const int UgcType_ARRAYSIZE = UgcType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UgcType_descriptor();
inline const ::std::string& UgcType_Name(UgcType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UgcType_descriptor(), value);
}
inline bool UgcType_Parse(
    const ::std::string& name, UgcType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UgcType>(
    UgcType_descriptor(), name, value);
}
enum GetUgcType {
  GET_UGC_NONE = 0,
  GET_UGC_TYPE_MINE = 1,
  GET_UGC_TYPE_PUBLISH = 2,
  GetUgcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetUgcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetUgcType_IsValid(int value);
const GetUgcType GetUgcType_MIN = GET_UGC_NONE;
const GetUgcType GetUgcType_MAX = GET_UGC_TYPE_PUBLISH;
const int GetUgcType_ARRAYSIZE = GetUgcType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetUgcType_descriptor();
inline const ::std::string& GetUgcType_Name(GetUgcType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUgcType_descriptor(), value);
}
inline bool GetUgcType_Parse(
    const ::std::string& name, GetUgcType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUgcType>(
    GetUgcType_descriptor(), name, value);
}
enum RecordUsage {
  UGC_RECORD_USAGE_NONE = 0,
  UGC_RECORD_USAGE_IMPORT = 1,
  UGC_RECORD_USAGE_PLAY = 2,
  UGC_RECORD_USAGE_TRIAL = 3,
  UGC_RECORD_USAGE_COMPARE = 4,
  RecordUsage_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RecordUsage_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RecordUsage_IsValid(int value);
const RecordUsage RecordUsage_MIN = UGC_RECORD_USAGE_NONE;
const RecordUsage RecordUsage_MAX = UGC_RECORD_USAGE_COMPARE;
const int RecordUsage_ARRAYSIZE = RecordUsage_MAX + 1;

const ::google::protobuf::EnumDescriptor* RecordUsage_descriptor();
inline const ::std::string& RecordUsage_Name(RecordUsage value) {
  return ::google::protobuf::internal::NameOfEnum(
    RecordUsage_descriptor(), value);
}
inline bool RecordUsage_Parse(
    const ::std::string& name, RecordUsage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RecordUsage>(
    RecordUsage_descriptor(), name, value);
}
// ===================================================================

class UgcMusicNote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicNote) */ {
 public:
  UgcMusicNote();
  virtual ~UgcMusicNote();

  UgcMusicNote(const UgcMusicNote& from);

  inline UgcMusicNote& operator=(const UgcMusicNote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicNote(UgcMusicNote&& from) noexcept
    : UgcMusicNote() {
    *this = ::std::move(from);
  }

  inline UgcMusicNote& operator=(UgcMusicNote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicNote& default_instance();

  static inline const UgcMusicNote* internal_default_instance() {
    return reinterpret_cast<const UgcMusicNote*>(
               &_UgcMusicNote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UgcMusicNote* other);
  friend void swap(UgcMusicNote& a, UgcMusicNote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicNote* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicNote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicNote& from);
  void MergeFrom(const UgcMusicNote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicNote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 end_time = 5;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 start_time = 12;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 12;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UgcMusicNote)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 start_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcMusicTrack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicTrack) */ {
 public:
  UgcMusicTrack();
  virtual ~UgcMusicTrack();

  UgcMusicTrack(const UgcMusicTrack& from);

  inline UgcMusicTrack& operator=(const UgcMusicTrack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicTrack(UgcMusicTrack&& from) noexcept
    : UgcMusicTrack() {
    *this = ::std::move(from);
  }

  inline UgcMusicTrack& operator=(UgcMusicTrack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicTrack& default_instance();

  static inline const UgcMusicTrack* internal_default_instance() {
    return reinterpret_cast<const UgcMusicTrack*>(
               &_UgcMusicTrack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UgcMusicTrack* other);
  friend void swap(UgcMusicTrack& a, UgcMusicTrack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicTrack* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicTrack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicTrack& from);
  void MergeFrom(const UgcMusicTrack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicTrack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.UgcMusicNote music_note_list = 6;
  int music_note_list_size() const;
  void clear_music_note_list();
  static const int kMusicNoteListFieldNumber = 6;
  const ::proto::UgcMusicNote& music_note_list(int index) const;
  ::proto::UgcMusicNote* mutable_music_note_list(int index);
  ::proto::UgcMusicNote* add_music_note_list();
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote >*
      mutable_music_note_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote >&
      music_note_list() const;

  // @@protoc_insertion_point(class_scope:proto.UgcMusicTrack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote > music_note_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcMusicRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicRecord) */ {
 public:
  UgcMusicRecord();
  virtual ~UgcMusicRecord();

  UgcMusicRecord(const UgcMusicRecord& from);

  inline UgcMusicRecord& operator=(const UgcMusicRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicRecord(UgcMusicRecord&& from) noexcept
    : UgcMusicRecord() {
    *this = ::std::move(from);
  }

  inline UgcMusicRecord& operator=(UgcMusicRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicRecord& default_instance();

  static inline const UgcMusicRecord* internal_default_instance() {
    return reinterpret_cast<const UgcMusicRecord*>(
               &_UgcMusicRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UgcMusicRecord* other);
  friend void swap(UgcMusicRecord& a, UgcMusicRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicRecord& from);
  void MergeFrom(const UgcMusicRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.UgcMusicTrack music_track_list = 4;
  int music_track_list_size() const;
  void clear_music_track_list();
  static const int kMusicTrackListFieldNumber = 4;
  const ::proto::UgcMusicTrack& music_track_list(int index) const;
  ::proto::UgcMusicTrack* mutable_music_track_list(int index);
  ::proto::UgcMusicTrack* add_music_track_list();
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack >*
      mutable_music_track_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack >&
      music_track_list() const;

  // uint32 music_id = 13;
  void clear_music_id();
  static const int kMusicIdFieldNumber = 13;
  ::google::protobuf::uint32 music_id() const;
  void set_music_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UgcMusicRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack > music_track_list_;
  ::google::protobuf::uint32 music_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcMusicBriefInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcMusicBriefInfo) */ {
 public:
  UgcMusicBriefInfo();
  virtual ~UgcMusicBriefInfo();

  UgcMusicBriefInfo(const UgcMusicBriefInfo& from);

  inline UgcMusicBriefInfo& operator=(const UgcMusicBriefInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcMusicBriefInfo(UgcMusicBriefInfo&& from) noexcept
    : UgcMusicBriefInfo() {
    *this = ::std::move(from);
  }

  inline UgcMusicBriefInfo& operator=(UgcMusicBriefInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcMusicBriefInfo& default_instance();

  static inline const UgcMusicBriefInfo* internal_default_instance() {
    return reinterpret_cast<const UgcMusicBriefInfo*>(
               &_UgcMusicBriefInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UgcMusicBriefInfo* other);
  friend void swap(UgcMusicBriefInfo& a, UgcMusicBriefInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcMusicBriefInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcMusicBriefInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcMusicBriefInfo& from);
  void MergeFrom(const UgcMusicBriefInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcMusicBriefInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 before_note_list = 982;
  int before_note_list_size() const;
  void clear_before_note_list();
  static const int kBeforeNoteListFieldNumber = 982;
  ::google::protobuf::uint32 before_note_list(int index) const;
  void set_before_note_list(int index, ::google::protobuf::uint32 value);
  void add_before_note_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      before_note_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_before_note_list();

  // repeated uint32 after_note_list = 1002;
  int after_note_list_size() const;
  void clear_after_note_list();
  static const int kAfterNoteListFieldNumber = 1002;
  ::google::protobuf::uint32 after_note_list(int index) const;
  void set_after_note_list(int index, ::google::protobuf::uint32 value);
  void add_after_note_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      after_note_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_after_note_list();

  // string creator_nickname = 10;
  void clear_creator_nickname();
  static const int kCreatorNicknameFieldNumber = 10;
  const ::std::string& creator_nickname() const;
  void set_creator_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_creator_nickname(::std::string&& value);
  #endif
  void set_creator_nickname(const char* value);
  void set_creator_nickname(const char* value, size_t size);
  ::std::string* mutable_creator_nickname();
  ::std::string* release_creator_nickname();
  void set_allocated_creator_nickname(::std::string* creator_nickname);

  // uint32 music_id = 2;
  void clear_music_id();
  static const int kMusicIdFieldNumber = 2;
  ::google::protobuf::uint32 music_id() const;
  void set_music_id(::google::protobuf::uint32 value);

  // uint32 save_time = 3;
  void clear_save_time();
  static const int kSaveTimeFieldNumber = 3;
  ::google::protobuf::uint32 save_time() const;
  void set_save_time(::google::protobuf::uint32 value);

  // uint64 ugc_guid = 4;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 4;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // uint64 import_from_ugc_guid = 5;
  void clear_import_from_ugc_guid();
  static const int kImportFromUgcGuidFieldNumber = 5;
  ::google::protobuf::uint64 import_from_ugc_guid() const;
  void set_import_from_ugc_guid(::google::protobuf::uint64 value);

  // uint32 self_max_score = 6;
  void clear_self_max_score();
  static const int kSelfMaxScoreFieldNumber = 6;
  ::google::protobuf::uint32 self_max_score() const;
  void set_self_max_score(::google::protobuf::uint32 value);

  // uint32 note_count = 7;
  void clear_note_count();
  static const int kNoteCountFieldNumber = 7;
  ::google::protobuf::uint32 note_count() const;
  void set_note_count(::google::protobuf::uint32 value);

  // bool is_published = 8;
  void clear_is_published();
  static const int kIsPublishedFieldNumber = 8;
  bool is_published() const;
  void set_is_published(bool value);

  // bool is_played = 1;
  void clear_is_played();
  static const int kIsPlayedFieldNumber = 1;
  bool is_played() const;
  void set_is_played(bool value);

  // bool is_psn_platform = 9;
  void clear_is_psn_platform();
  static const int kIsPsnPlatformFieldNumber = 9;
  bool is_psn_platform() const;
  void set_is_psn_platform(bool value);

  // bool is_changed_after_publish = 11;
  void clear_is_changed_after_publish();
  static const int kIsChangedAfterPublishFieldNumber = 11;
  bool is_changed_after_publish() const;
  void set_is_changed_after_publish(bool value);

  // uint32 save_idx = 12;
  void clear_save_idx();
  static const int kSaveIdxFieldNumber = 12;
  ::google::protobuf::uint32 save_idx() const;
  void set_save_idx(::google::protobuf::uint32 value);

  // uint32 publish_time = 13;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 13;
  ::google::protobuf::uint32 publish_time() const;
  void set_publish_time(::google::protobuf::uint32 value);

  // uint32 max_score = 14;
  void clear_max_score();
  static const int kMaxScoreFieldNumber = 14;
  ::google::protobuf::uint32 max_score() const;
  void set_max_score(::google::protobuf::uint32 value);

  // uint32 version = 15;
  void clear_version();
  static const int kVersionFieldNumber = 15;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 real_time_edit_time = 576;
  void clear_real_time_edit_time();
  static const int kRealTimeEditTimeFieldNumber = 576;
  ::google::protobuf::uint32 real_time_edit_time() const;
  void set_real_time_edit_time(::google::protobuf::uint32 value);

  // uint32 save_page_type = 1182;
  void clear_save_page_type();
  static const int kSavePageTypeFieldNumber = 1182;
  ::google::protobuf::uint32 save_page_type() const;
  void set_save_page_type(::google::protobuf::uint32 value);

  // uint32 time_line_edit_time = 1822;
  void clear_time_line_edit_time();
  static const int kTimeLineEditTimeFieldNumber = 1822;
  ::google::protobuf::uint32 time_line_edit_time() const;
  void set_time_line_edit_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UgcMusicBriefInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > before_note_list_;
  mutable int _before_note_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > after_note_list_;
  mutable int _after_note_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr creator_nickname_;
  ::google::protobuf::uint32 music_id_;
  ::google::protobuf::uint32 save_time_;
  ::google::protobuf::uint64 ugc_guid_;
  ::google::protobuf::uint64 import_from_ugc_guid_;
  ::google::protobuf::uint32 self_max_score_;
  ::google::protobuf::uint32 note_count_;
  bool is_published_;
  bool is_played_;
  bool is_psn_platform_;
  bool is_changed_after_publish_;
  ::google::protobuf::uint32 save_idx_;
  ::google::protobuf::uint32 publish_time_;
  ::google::protobuf::uint32 max_score_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 real_time_edit_time_;
  ::google::protobuf::uint32 save_page_type_;
  ::google::protobuf::uint32 time_line_edit_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcReq) */ {
 public:
  GetUgcReq();
  virtual ~GetUgcReq();

  GetUgcReq(const GetUgcReq& from);

  inline GetUgcReq& operator=(const GetUgcReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcReq(GetUgcReq&& from) noexcept
    : GetUgcReq() {
    *this = ::std::move(from);
  }

  inline GetUgcReq& operator=(GetUgcReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcReq& default_instance();

  static inline const GetUgcReq* internal_default_instance() {
    return reinterpret_cast<const GetUgcReq*>(
               &_GetUgcReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetUgcReq* other);
  friend void swap(GetUgcReq& a, GetUgcReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcReq& from);
  void MergeFrom(const GetUgcReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 5;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 5;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.RecordUsage ugc_record_usage = 6;
  void clear_ugc_record_usage();
  static const int kUgcRecordUsageFieldNumber = 6;
  ::proto::RecordUsage ugc_record_usage() const;
  void set_ugc_record_usage(::proto::RecordUsage value);

  // .proto.UgcType ugc_type = 8;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 8;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // bool is_require_brief = 11;
  void clear_is_require_brief();
  static const int kIsRequireBriefFieldNumber = 11;
  bool is_require_brief() const;
  void set_is_require_brief(bool value);

  // .proto.GetUgcType get_ugc_type = 13;
  void clear_get_ugc_type();
  static const int kGetUgcTypeFieldNumber = 13;
  ::proto::GetUgcType get_ugc_type() const;
  void set_get_ugc_type(::proto::GetUgcType value);

  // @@protoc_insertion_point(class_scope:proto.GetUgcReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  int ugc_record_usage_;
  int ugc_type_;
  bool is_require_brief_;
  int get_ugc_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcRsp) */ {
 public:
  GetUgcRsp();
  virtual ~GetUgcRsp();

  GetUgcRsp(const GetUgcRsp& from);

  inline GetUgcRsp& operator=(const GetUgcRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcRsp(GetUgcRsp&& from) noexcept
    : GetUgcRsp() {
    *this = ::std::move(from);
  }

  inline GetUgcRsp& operator=(GetUgcRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcRsp& default_instance();

  enum RecordCase {
    kMusicRecord = 4,
    RECORD_NOT_SET = 0,
  };

  enum BriefCase {
    kMusicBriefInfo = 1819,
    BRIEF_NOT_SET = 0,
  };

  static inline const GetUgcRsp* internal_default_instance() {
    return reinterpret_cast<const GetUgcRsp*>(
               &_GetUgcRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetUgcRsp* other);
  friend void swap(GetUgcRsp& a, GetUgcRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcRsp& from);
  void MergeFrom(const GetUgcRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.RecordUsage ugc_record_usage = 14;
  void clear_ugc_record_usage();
  static const int kUgcRecordUsageFieldNumber = 14;
  ::proto::RecordUsage ugc_record_usage() const;
  void set_ugc_record_usage(::proto::RecordUsage value);

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.UgcType ugc_type = 10;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 10;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // uint64 ugc_guid = 15;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 15;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.UgcMusicRecord music_record = 4;
  bool has_music_record() const;
  void clear_music_record();
  static const int kMusicRecordFieldNumber = 4;
  const ::proto::UgcMusicRecord& music_record() const;
  ::proto::UgcMusicRecord* mutable_music_record();
  ::proto::UgcMusicRecord* release_music_record();
  void set_allocated_music_record(::proto::UgcMusicRecord* music_record);

  // .proto.UgcMusicBriefInfo music_brief_info = 1819;
  bool has_music_brief_info() const;
  void clear_music_brief_info();
  static const int kMusicBriefInfoFieldNumber = 1819;
  const ::proto::UgcMusicBriefInfo& music_brief_info() const;
  ::proto::UgcMusicBriefInfo* mutable_music_brief_info();
  ::proto::UgcMusicBriefInfo* release_music_brief_info();
  void set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info);

  RecordCase record_case() const;
  BriefCase brief_case() const;
  // @@protoc_insertion_point(class_scope:proto.GetUgcRsp)
 private:
  void set_has_music_record();
  void set_has_music_brief_info();

  inline bool has_record() const;
  void clear_record();
  inline void clear_has_record();

  inline bool has_brief() const;
  void clear_brief();
  inline void clear_has_brief();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_record_usage_;
  ::google::protobuf::int32 retcode_;
  int ugc_type_;
  ::google::protobuf::uint64 ugc_guid_;
  union RecordUnion {
    RecordUnion() {}
    ::proto::UgcMusicRecord* music_record_;
  } record_;
  union BriefUnion {
    BriefUnion() {}
    ::proto::UgcMusicBriefInfo* music_brief_info_;
  } brief_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcBriefInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcBriefInfoReq) */ {
 public:
  GetUgcBriefInfoReq();
  virtual ~GetUgcBriefInfoReq();

  GetUgcBriefInfoReq(const GetUgcBriefInfoReq& from);

  inline GetUgcBriefInfoReq& operator=(const GetUgcBriefInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcBriefInfoReq(GetUgcBriefInfoReq&& from) noexcept
    : GetUgcBriefInfoReq() {
    *this = ::std::move(from);
  }

  inline GetUgcBriefInfoReq& operator=(GetUgcBriefInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcBriefInfoReq& default_instance();

  static inline const GetUgcBriefInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetUgcBriefInfoReq*>(
               &_GetUgcBriefInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetUgcBriefInfoReq* other);
  friend void swap(GetUgcBriefInfoReq& a, GetUgcBriefInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcBriefInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcBriefInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcBriefInfoReq& from);
  void MergeFrom(const GetUgcBriefInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcBriefInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 10;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 10;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // uint64 ugc_guid = 7;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 7;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.GetUgcBriefInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  ::google::protobuf::uint64 ugc_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUgcBriefInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUgcBriefInfoRsp) */ {
 public:
  GetUgcBriefInfoRsp();
  virtual ~GetUgcBriefInfoRsp();

  GetUgcBriefInfoRsp(const GetUgcBriefInfoRsp& from);

  inline GetUgcBriefInfoRsp& operator=(const GetUgcBriefInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgcBriefInfoRsp(GetUgcBriefInfoRsp&& from) noexcept
    : GetUgcBriefInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetUgcBriefInfoRsp& operator=(GetUgcBriefInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgcBriefInfoRsp& default_instance();

  enum BriefCase {
    kMusicBriefInfo = 2,
    BRIEF_NOT_SET = 0,
  };

  static inline const GetUgcBriefInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetUgcBriefInfoRsp*>(
               &_GetUgcBriefInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetUgcBriefInfoRsp* other);
  friend void swap(GetUgcBriefInfoRsp& a, GetUgcBriefInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgcBriefInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgcBriefInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgcBriefInfoRsp& from);
  void MergeFrom(const GetUgcBriefInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgcBriefInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 3;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 3;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.UgcType ugc_type = 11;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 11;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // .proto.UgcMusicBriefInfo music_brief_info = 2;
  bool has_music_brief_info() const;
  void clear_music_brief_info();
  static const int kMusicBriefInfoFieldNumber = 2;
  const ::proto::UgcMusicBriefInfo& music_brief_info() const;
  ::proto::UgcMusicBriefInfo* mutable_music_brief_info();
  ::proto::UgcMusicBriefInfo* release_music_brief_info();
  void set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info);

  BriefCase brief_case() const;
  // @@protoc_insertion_point(class_scope:proto.GetUgcBriefInfoRsp)
 private:
  void set_has_music_brief_info();

  inline bool has_brief() const;
  void clear_brief();
  inline void clear_has_brief();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  ::google::protobuf::int32 retcode_;
  int ugc_type_;
  union BriefUnion {
    BriefUnion() {}
    ::proto::UgcMusicBriefInfo* music_brief_info_;
  } brief_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveUgcReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveUgcReq) */ {
 public:
  SaveUgcReq();
  virtual ~SaveUgcReq();

  SaveUgcReq(const SaveUgcReq& from);

  inline SaveUgcReq& operator=(const SaveUgcReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveUgcReq(SaveUgcReq&& from) noexcept
    : SaveUgcReq() {
    *this = ::std::move(from);
  }

  inline SaveUgcReq& operator=(SaveUgcReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveUgcReq& default_instance();

  enum RecordCase {
    kMusicRecord = 2,
    RECORD_NOT_SET = 0,
  };

  enum BriefCase {
    kMusicBriefInfo = 1488,
    BRIEF_NOT_SET = 0,
  };

  static inline const SaveUgcReq* internal_default_instance() {
    return reinterpret_cast<const SaveUgcReq*>(
               &_SaveUgcReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SaveUgcReq* other);
  friend void swap(SaveUgcReq& a, SaveUgcReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveUgcReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveUgcReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveUgcReq& from);
  void MergeFrom(const SaveUgcReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveUgcReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 11;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 11;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // .proto.UgcMusicRecord music_record = 2;
  bool has_music_record() const;
  void clear_music_record();
  static const int kMusicRecordFieldNumber = 2;
  const ::proto::UgcMusicRecord& music_record() const;
  ::proto::UgcMusicRecord* mutable_music_record();
  ::proto::UgcMusicRecord* release_music_record();
  void set_allocated_music_record(::proto::UgcMusicRecord* music_record);

  // .proto.UgcMusicBriefInfo music_brief_info = 1488;
  bool has_music_brief_info() const;
  void clear_music_brief_info();
  static const int kMusicBriefInfoFieldNumber = 1488;
  const ::proto::UgcMusicBriefInfo& music_brief_info() const;
  ::proto::UgcMusicBriefInfo* mutable_music_brief_info();
  ::proto::UgcMusicBriefInfo* release_music_brief_info();
  void set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info);

  RecordCase record_case() const;
  BriefCase brief_case() const;
  // @@protoc_insertion_point(class_scope:proto.SaveUgcReq)
 private:
  void set_has_music_record();
  void set_has_music_brief_info();

  inline bool has_record() const;
  void clear_record();
  inline void clear_has_record();

  inline bool has_brief() const;
  void clear_brief();
  inline void clear_has_brief();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  union RecordUnion {
    RecordUnion() {}
    ::proto::UgcMusicRecord* music_record_;
  } record_;
  union BriefUnion {
    BriefUnion() {}
    ::proto::UgcMusicBriefInfo* music_brief_info_;
  } brief_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveUgcRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveUgcRsp) */ {
 public:
  SaveUgcRsp();
  virtual ~SaveUgcRsp();

  SaveUgcRsp(const SaveUgcRsp& from);

  inline SaveUgcRsp& operator=(const SaveUgcRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveUgcRsp(SaveUgcRsp&& from) noexcept
    : SaveUgcRsp() {
    *this = ::std::move(from);
  }

  inline SaveUgcRsp& operator=(SaveUgcRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveUgcRsp& default_instance();

  static inline const SaveUgcRsp* internal_default_instance() {
    return reinterpret_cast<const SaveUgcRsp*>(
               &_SaveUgcRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SaveUgcRsp* other);
  friend void swap(SaveUgcRsp& a, SaveUgcRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveUgcRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveUgcRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveUgcRsp& from);
  void MergeFrom(const SaveUgcRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveUgcRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 8;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 8;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.UgcType ugc_type = 1;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 1;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SaveUgcRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  int ugc_type_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishUgcReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PublishUgcReq) */ {
 public:
  PublishUgcReq();
  virtual ~PublishUgcReq();

  PublishUgcReq(const PublishUgcReq& from);

  inline PublishUgcReq& operator=(const PublishUgcReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishUgcReq(PublishUgcReq&& from) noexcept
    : PublishUgcReq() {
    *this = ::std::move(from);
  }

  inline PublishUgcReq& operator=(PublishUgcReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishUgcReq& default_instance();

  static inline const PublishUgcReq* internal_default_instance() {
    return reinterpret_cast<const PublishUgcReq*>(
               &_PublishUgcReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PublishUgcReq* other);
  friend void swap(PublishUgcReq& a, PublishUgcReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishUgcReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PublishUgcReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublishUgcReq& from);
  void MergeFrom(const PublishUgcReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublishUgcReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 7;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 7;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // uint64 ugc_guid = 12;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 12;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.PublishUgcReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  ::google::protobuf::uint64 ugc_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishUgcRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PublishUgcRsp) */ {
 public:
  PublishUgcRsp();
  virtual ~PublishUgcRsp();

  PublishUgcRsp(const PublishUgcRsp& from);

  inline PublishUgcRsp& operator=(const PublishUgcRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishUgcRsp(PublishUgcRsp&& from) noexcept
    : PublishUgcRsp() {
    *this = ::std::move(from);
  }

  inline PublishUgcRsp& operator=(PublishUgcRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishUgcRsp& default_instance();

  static inline const PublishUgcRsp* internal_default_instance() {
    return reinterpret_cast<const PublishUgcRsp*>(
               &_PublishUgcRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PublishUgcRsp* other);
  friend void swap(PublishUgcRsp& a, PublishUgcRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishUgcRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PublishUgcRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublishUgcRsp& from);
  void MergeFrom(const PublishUgcRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublishUgcRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ugc_guid = 14;
  void clear_ugc_guid();
  static const int kUgcGuidFieldNumber = 14;
  ::google::protobuf::uint64 ugc_guid() const;
  void set_ugc_guid(::google::protobuf::uint64 value);

  // .proto.UgcType ugc_type = 13;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 13;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // int32 retcode = 15;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 15;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PublishUgcRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ugc_guid_;
  int ugc_type_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcUpdateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcUpdateReq) */ {
 public:
  CheckUgcUpdateReq();
  virtual ~CheckUgcUpdateReq();

  CheckUgcUpdateReq(const CheckUgcUpdateReq& from);

  inline CheckUgcUpdateReq& operator=(const CheckUgcUpdateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcUpdateReq(CheckUgcUpdateReq&& from) noexcept
    : CheckUgcUpdateReq() {
    *this = ::std::move(from);
  }

  inline CheckUgcUpdateReq& operator=(CheckUgcUpdateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcUpdateReq& default_instance();

  static inline const CheckUgcUpdateReq* internal_default_instance() {
    return reinterpret_cast<const CheckUgcUpdateReq*>(
               &_CheckUgcUpdateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CheckUgcUpdateReq* other);
  friend void swap(CheckUgcUpdateReq& a, CheckUgcUpdateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcUpdateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcUpdateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcUpdateReq& from);
  void MergeFrom(const CheckUgcUpdateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcUpdateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.UgcType ugc_type = 13;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 13;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // @@protoc_insertion_point(class_scope:proto.CheckUgcUpdateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ugc_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcUpdateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcUpdateRsp) */ {
 public:
  CheckUgcUpdateRsp();
  virtual ~CheckUgcUpdateRsp();

  CheckUgcUpdateRsp(const CheckUgcUpdateRsp& from);

  inline CheckUgcUpdateRsp& operator=(const CheckUgcUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcUpdateRsp(CheckUgcUpdateRsp&& from) noexcept
    : CheckUgcUpdateRsp() {
    *this = ::std::move(from);
  }

  inline CheckUgcUpdateRsp& operator=(CheckUgcUpdateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcUpdateRsp& default_instance();

  static inline const CheckUgcUpdateRsp* internal_default_instance() {
    return reinterpret_cast<const CheckUgcUpdateRsp*>(
               &_CheckUgcUpdateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CheckUgcUpdateRsp* other);
  friend void swap(CheckUgcUpdateRsp& a, CheckUgcUpdateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcUpdateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcUpdateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcUpdateRsp& from);
  void MergeFrom(const CheckUgcUpdateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcUpdateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 update_ugc_guid_list = 15;
  int update_ugc_guid_list_size() const;
  void clear_update_ugc_guid_list();
  static const int kUpdateUgcGuidListFieldNumber = 15;
  ::google::protobuf::uint64 update_ugc_guid_list(int index) const;
  void set_update_ugc_guid_list(int index, ::google::protobuf::uint64 value);
  void add_update_ugc_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      update_ugc_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_update_ugc_guid_list();

  // int32 retcode = 10;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 10;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.UgcType ugc_type = 12;
  void clear_ugc_type();
  static const int kUgcTypeFieldNumber = 12;
  ::proto::UgcType ugc_type() const;
  void set_ugc_type(::proto::UgcType value);

  // @@protoc_insertion_point(class_scope:proto.CheckUgcUpdateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > update_ugc_guid_list_;
  mutable int _update_ugc_guid_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  int ugc_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UgcNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UgcNotify) */ {
 public:
  UgcNotify();
  virtual ~UgcNotify();

  UgcNotify(const UgcNotify& from);

  inline UgcNotify& operator=(const UgcNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UgcNotify(UgcNotify&& from) noexcept
    : UgcNotify() {
    *this = ::std::move(from);
  }

  inline UgcNotify& operator=(UgcNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UgcNotify& default_instance();

  static inline const UgcNotify* internal_default_instance() {
    return reinterpret_cast<const UgcNotify*>(
               &_UgcNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(UgcNotify* other);
  friend void swap(UgcNotify& a, UgcNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UgcNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UgcNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UgcNotify& from);
  void MergeFrom(const UgcNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UgcNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_ugc_publish_ban = 12;
  void clear_is_ugc_publish_ban();
  static const int kIsUgcPublishBanFieldNumber = 12;
  bool is_ugc_publish_ban() const;
  void set_is_ugc_publish_ban(bool value);

  // bool is_ugc_publish_feature_closed = 8;
  void clear_is_ugc_publish_feature_closed();
  static const int kIsUgcPublishFeatureClosedFieldNumber = 8;
  bool is_ugc_publish_feature_closed() const;
  void set_is_ugc_publish_feature_closed(bool value);

  // bool is_ugc_feature_closed = 15;
  void clear_is_ugc_feature_closed();
  static const int kIsUgcFeatureClosedFieldNumber = 15;
  bool is_ugc_feature_closed() const;
  void set_is_ugc_feature_closed(bool value);

  // @@protoc_insertion_point(class_scope:proto.UgcNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_ugc_publish_ban_;
  bool is_ugc_publish_feature_closed_;
  bool is_ugc_feature_closed_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcStateReq) */ {
 public:
  CheckUgcStateReq();
  virtual ~CheckUgcStateReq();

  CheckUgcStateReq(const CheckUgcStateReq& from);

  inline CheckUgcStateReq& operator=(const CheckUgcStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcStateReq(CheckUgcStateReq&& from) noexcept
    : CheckUgcStateReq() {
    *this = ::std::move(from);
  }

  inline CheckUgcStateReq& operator=(CheckUgcStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcStateReq& default_instance();

  static inline const CheckUgcStateReq* internal_default_instance() {
    return reinterpret_cast<const CheckUgcStateReq*>(
               &_CheckUgcStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CheckUgcStateReq* other);
  friend void swap(CheckUgcStateReq& a, CheckUgcStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcStateReq& from);
  void MergeFrom(const CheckUgcStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.CheckUgcStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckUgcStateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckUgcStateRsp) */ {
 public:
  CheckUgcStateRsp();
  virtual ~CheckUgcStateRsp();

  CheckUgcStateRsp(const CheckUgcStateRsp& from);

  inline CheckUgcStateRsp& operator=(const CheckUgcStateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUgcStateRsp(CheckUgcStateRsp&& from) noexcept
    : CheckUgcStateRsp() {
    *this = ::std::move(from);
  }

  inline CheckUgcStateRsp& operator=(CheckUgcStateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckUgcStateRsp& default_instance();

  static inline const CheckUgcStateRsp* internal_default_instance() {
    return reinterpret_cast<const CheckUgcStateRsp*>(
               &_CheckUgcStateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CheckUgcStateRsp* other);
  friend void swap(CheckUgcStateRsp& a, CheckUgcStateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUgcStateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckUgcStateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckUgcStateRsp& from);
  void MergeFrom(const CheckUgcStateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckUgcStateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckUgcStateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fugc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UgcMusicNote

// uint32 start_time = 12;
inline void UgcMusicNote::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicNote::start_time() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicNote.start_time)
  return start_time_;
}
inline void UgcMusicNote::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicNote.start_time)
}

// uint32 end_time = 5;
inline void UgcMusicNote::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicNote::end_time() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicNote.end_time)
  return end_time_;
}
inline void UgcMusicNote::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicNote.end_time)
}

// -------------------------------------------------------------------

// UgcMusicTrack

// repeated .proto.UgcMusicNote music_note_list = 6;
inline int UgcMusicTrack::music_note_list_size() const {
  return music_note_list_.size();
}
inline void UgcMusicTrack::clear_music_note_list() {
  music_note_list_.Clear();
}
inline const ::proto::UgcMusicNote& UgcMusicTrack::music_note_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicTrack.music_note_list)
  return music_note_list_.Get(index);
}
inline ::proto::UgcMusicNote* UgcMusicTrack::mutable_music_note_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UgcMusicTrack.music_note_list)
  return music_note_list_.Mutable(index);
}
inline ::proto::UgcMusicNote* UgcMusicTrack::add_music_note_list() {
  // @@protoc_insertion_point(field_add:proto.UgcMusicTrack.music_note_list)
  return music_note_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote >*
UgcMusicTrack::mutable_music_note_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UgcMusicTrack.music_note_list)
  return &music_note_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicNote >&
UgcMusicTrack::music_note_list() const {
  // @@protoc_insertion_point(field_list:proto.UgcMusicTrack.music_note_list)
  return music_note_list_;
}

// -------------------------------------------------------------------

// UgcMusicRecord

// repeated .proto.UgcMusicTrack music_track_list = 4;
inline int UgcMusicRecord::music_track_list_size() const {
  return music_track_list_.size();
}
inline void UgcMusicRecord::clear_music_track_list() {
  music_track_list_.Clear();
}
inline const ::proto::UgcMusicTrack& UgcMusicRecord::music_track_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicRecord.music_track_list)
  return music_track_list_.Get(index);
}
inline ::proto::UgcMusicTrack* UgcMusicRecord::mutable_music_track_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UgcMusicRecord.music_track_list)
  return music_track_list_.Mutable(index);
}
inline ::proto::UgcMusicTrack* UgcMusicRecord::add_music_track_list() {
  // @@protoc_insertion_point(field_add:proto.UgcMusicRecord.music_track_list)
  return music_track_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack >*
UgcMusicRecord::mutable_music_track_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UgcMusicRecord.music_track_list)
  return &music_track_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::UgcMusicTrack >&
UgcMusicRecord::music_track_list() const {
  // @@protoc_insertion_point(field_list:proto.UgcMusicRecord.music_track_list)
  return music_track_list_;
}

// uint32 music_id = 13;
inline void UgcMusicRecord::clear_music_id() {
  music_id_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicRecord::music_id() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicRecord.music_id)
  return music_id_;
}
inline void UgcMusicRecord::set_music_id(::google::protobuf::uint32 value) {
  
  music_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicRecord.music_id)
}

// -------------------------------------------------------------------

// UgcMusicBriefInfo

// uint64 import_from_ugc_guid = 5;
inline void UgcMusicBriefInfo::clear_import_from_ugc_guid() {
  import_from_ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UgcMusicBriefInfo::import_from_ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.import_from_ugc_guid)
  return import_from_ugc_guid_;
}
inline void UgcMusicBriefInfo::set_import_from_ugc_guid(::google::protobuf::uint64 value) {
  
  import_from_ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.import_from_ugc_guid)
}

// bool is_published = 8;
inline void UgcMusicBriefInfo::clear_is_published() {
  is_published_ = false;
}
inline bool UgcMusicBriefInfo::is_published() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.is_published)
  return is_published_;
}
inline void UgcMusicBriefInfo::set_is_published(bool value) {
  
  is_published_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.is_published)
}

// bool is_played = 1;
inline void UgcMusicBriefInfo::clear_is_played() {
  is_played_ = false;
}
inline bool UgcMusicBriefInfo::is_played() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.is_played)
  return is_played_;
}
inline void UgcMusicBriefInfo::set_is_played(bool value) {
  
  is_played_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.is_played)
}

// uint32 music_id = 2;
inline void UgcMusicBriefInfo::clear_music_id() {
  music_id_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::music_id() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.music_id)
  return music_id_;
}
inline void UgcMusicBriefInfo::set_music_id(::google::protobuf::uint32 value) {
  
  music_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.music_id)
}

// uint32 save_page_type = 1182;
inline void UgcMusicBriefInfo::clear_save_page_type() {
  save_page_type_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::save_page_type() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.save_page_type)
  return save_page_type_;
}
inline void UgcMusicBriefInfo::set_save_page_type(::google::protobuf::uint32 value) {
  
  save_page_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.save_page_type)
}

// uint32 save_idx = 12;
inline void UgcMusicBriefInfo::clear_save_idx() {
  save_idx_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::save_idx() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.save_idx)
  return save_idx_;
}
inline void UgcMusicBriefInfo::set_save_idx(::google::protobuf::uint32 value) {
  
  save_idx_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.save_idx)
}

// string creator_nickname = 10;
inline void UgcMusicBriefInfo::clear_creator_nickname() {
  creator_nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UgcMusicBriefInfo::creator_nickname() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.creator_nickname)
  return creator_nickname_.GetNoArena();
}
inline void UgcMusicBriefInfo::set_creator_nickname(const ::std::string& value) {
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.creator_nickname)
}
#if LANG_CXX11
inline void UgcMusicBriefInfo::set_creator_nickname(::std::string&& value) {
  
  creator_nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.UgcMusicBriefInfo.creator_nickname)
}
#endif
inline void UgcMusicBriefInfo::set_creator_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UgcMusicBriefInfo.creator_nickname)
}
inline void UgcMusicBriefInfo::set_creator_nickname(const char* value, size_t size) {
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UgcMusicBriefInfo.creator_nickname)
}
inline ::std::string* UgcMusicBriefInfo::mutable_creator_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.UgcMusicBriefInfo.creator_nickname)
  return creator_nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UgcMusicBriefInfo::release_creator_nickname() {
  // @@protoc_insertion_point(field_release:proto.UgcMusicBriefInfo.creator_nickname)
  
  return creator_nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UgcMusicBriefInfo::set_allocated_creator_nickname(::std::string* creator_nickname) {
  if (creator_nickname != NULL) {
    
  } else {
    
  }
  creator_nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator_nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.UgcMusicBriefInfo.creator_nickname)
}

// uint32 version = 15;
inline void UgcMusicBriefInfo::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::version() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.version)
  return version_;
}
inline void UgcMusicBriefInfo::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.version)
}

// uint32 save_time = 3;
inline void UgcMusicBriefInfo::clear_save_time() {
  save_time_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::save_time() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.save_time)
  return save_time_;
}
inline void UgcMusicBriefInfo::set_save_time(::google::protobuf::uint32 value) {
  
  save_time_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.save_time)
}

// repeated uint32 after_note_list = 1002;
inline int UgcMusicBriefInfo::after_note_list_size() const {
  return after_note_list_.size();
}
inline void UgcMusicBriefInfo::clear_after_note_list() {
  after_note_list_.Clear();
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::after_note_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.after_note_list)
  return after_note_list_.Get(index);
}
inline void UgcMusicBriefInfo::set_after_note_list(int index, ::google::protobuf::uint32 value) {
  after_note_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.after_note_list)
}
inline void UgcMusicBriefInfo::add_after_note_list(::google::protobuf::uint32 value) {
  after_note_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UgcMusicBriefInfo.after_note_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UgcMusicBriefInfo::after_note_list() const {
  // @@protoc_insertion_point(field_list:proto.UgcMusicBriefInfo.after_note_list)
  return after_note_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UgcMusicBriefInfo::mutable_after_note_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UgcMusicBriefInfo.after_note_list)
  return &after_note_list_;
}

// repeated uint32 before_note_list = 982;
inline int UgcMusicBriefInfo::before_note_list_size() const {
  return before_note_list_.size();
}
inline void UgcMusicBriefInfo::clear_before_note_list() {
  before_note_list_.Clear();
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::before_note_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.before_note_list)
  return before_note_list_.Get(index);
}
inline void UgcMusicBriefInfo::set_before_note_list(int index, ::google::protobuf::uint32 value) {
  before_note_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.before_note_list)
}
inline void UgcMusicBriefInfo::add_before_note_list(::google::protobuf::uint32 value) {
  before_note_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UgcMusicBriefInfo.before_note_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UgcMusicBriefInfo::before_note_list() const {
  // @@protoc_insertion_point(field_list:proto.UgcMusicBriefInfo.before_note_list)
  return before_note_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UgcMusicBriefInfo::mutable_before_note_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UgcMusicBriefInfo.before_note_list)
  return &before_note_list_;
}

// bool is_psn_platform = 9;
inline void UgcMusicBriefInfo::clear_is_psn_platform() {
  is_psn_platform_ = false;
}
inline bool UgcMusicBriefInfo::is_psn_platform() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.is_psn_platform)
  return is_psn_platform_;
}
inline void UgcMusicBriefInfo::set_is_psn_platform(bool value) {
  
  is_psn_platform_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.is_psn_platform)
}

// uint32 time_line_edit_time = 1822;
inline void UgcMusicBriefInfo::clear_time_line_edit_time() {
  time_line_edit_time_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::time_line_edit_time() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.time_line_edit_time)
  return time_line_edit_time_;
}
inline void UgcMusicBriefInfo::set_time_line_edit_time(::google::protobuf::uint32 value) {
  
  time_line_edit_time_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.time_line_edit_time)
}

// bool is_changed_after_publish = 11;
inline void UgcMusicBriefInfo::clear_is_changed_after_publish() {
  is_changed_after_publish_ = false;
}
inline bool UgcMusicBriefInfo::is_changed_after_publish() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.is_changed_after_publish)
  return is_changed_after_publish_;
}
inline void UgcMusicBriefInfo::set_is_changed_after_publish(bool value) {
  
  is_changed_after_publish_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.is_changed_after_publish)
}

// uint32 publish_time = 13;
inline void UgcMusicBriefInfo::clear_publish_time() {
  publish_time_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::publish_time() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.publish_time)
  return publish_time_;
}
inline void UgcMusicBriefInfo::set_publish_time(::google::protobuf::uint32 value) {
  
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.publish_time)
}

// uint32 max_score = 14;
inline void UgcMusicBriefInfo::clear_max_score() {
  max_score_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::max_score() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.max_score)
  return max_score_;
}
inline void UgcMusicBriefInfo::set_max_score(::google::protobuf::uint32 value) {
  
  max_score_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.max_score)
}

// uint32 real_time_edit_time = 576;
inline void UgcMusicBriefInfo::clear_real_time_edit_time() {
  real_time_edit_time_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::real_time_edit_time() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.real_time_edit_time)
  return real_time_edit_time_;
}
inline void UgcMusicBriefInfo::set_real_time_edit_time(::google::protobuf::uint32 value) {
  
  real_time_edit_time_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.real_time_edit_time)
}

// uint32 note_count = 7;
inline void UgcMusicBriefInfo::clear_note_count() {
  note_count_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::note_count() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.note_count)
  return note_count_;
}
inline void UgcMusicBriefInfo::set_note_count(::google::protobuf::uint32 value) {
  
  note_count_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.note_count)
}

// uint64 ugc_guid = 4;
inline void UgcMusicBriefInfo::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UgcMusicBriefInfo::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.ugc_guid)
  return ugc_guid_;
}
inline void UgcMusicBriefInfo::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.ugc_guid)
}

// uint32 self_max_score = 6;
inline void UgcMusicBriefInfo::clear_self_max_score() {
  self_max_score_ = 0u;
}
inline ::google::protobuf::uint32 UgcMusicBriefInfo::self_max_score() const {
  // @@protoc_insertion_point(field_get:proto.UgcMusicBriefInfo.self_max_score)
  return self_max_score_;
}
inline void UgcMusicBriefInfo::set_self_max_score(::google::protobuf::uint32 value) {
  
  self_max_score_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcMusicBriefInfo.self_max_score)
}

// -------------------------------------------------------------------

// GetUgcReq

// .proto.UgcType ugc_type = 8;
inline void GetUgcReq::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType GetUgcReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void GetUgcReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcReq.ugc_type)
}

// uint64 ugc_guid = 5;
inline void GetUgcReq::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetUgcReq::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcReq.ugc_guid)
  return ugc_guid_;
}
inline void GetUgcReq::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcReq.ugc_guid)
}

// .proto.RecordUsage ugc_record_usage = 6;
inline void GetUgcReq::clear_ugc_record_usage() {
  ugc_record_usage_ = 0;
}
inline ::proto::RecordUsage GetUgcReq::ugc_record_usage() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcReq.ugc_record_usage)
  return static_cast< ::proto::RecordUsage >(ugc_record_usage_);
}
inline void GetUgcReq::set_ugc_record_usage(::proto::RecordUsage value) {
  
  ugc_record_usage_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcReq.ugc_record_usage)
}

// bool is_require_brief = 11;
inline void GetUgcReq::clear_is_require_brief() {
  is_require_brief_ = false;
}
inline bool GetUgcReq::is_require_brief() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcReq.is_require_brief)
  return is_require_brief_;
}
inline void GetUgcReq::set_is_require_brief(bool value) {
  
  is_require_brief_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcReq.is_require_brief)
}

// .proto.GetUgcType get_ugc_type = 13;
inline void GetUgcReq::clear_get_ugc_type() {
  get_ugc_type_ = 0;
}
inline ::proto::GetUgcType GetUgcReq::get_ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcReq.get_ugc_type)
  return static_cast< ::proto::GetUgcType >(get_ugc_type_);
}
inline void GetUgcReq::set_get_ugc_type(::proto::GetUgcType value) {
  
  get_ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcReq.get_ugc_type)
}

// -------------------------------------------------------------------

// GetUgcRsp

// uint64 ugc_guid = 15;
inline void GetUgcRsp::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetUgcRsp::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcRsp.ugc_guid)
  return ugc_guid_;
}
inline void GetUgcRsp::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcRsp.ugc_guid)
}

// .proto.UgcType ugc_type = 10;
inline void GetUgcRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType GetUgcRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void GetUgcRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcRsp.ugc_type)
}

// int32 retcode = 2;
inline void GetUgcRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetUgcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcRsp.retcode)
  return retcode_;
}
inline void GetUgcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcRsp.retcode)
}

// .proto.RecordUsage ugc_record_usage = 14;
inline void GetUgcRsp::clear_ugc_record_usage() {
  ugc_record_usage_ = 0;
}
inline ::proto::RecordUsage GetUgcRsp::ugc_record_usage() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcRsp.ugc_record_usage)
  return static_cast< ::proto::RecordUsage >(ugc_record_usage_);
}
inline void GetUgcRsp::set_ugc_record_usage(::proto::RecordUsage value) {
  
  ugc_record_usage_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcRsp.ugc_record_usage)
}

// .proto.UgcMusicRecord music_record = 4;
inline bool GetUgcRsp::has_music_record() const {
  return record_case() == kMusicRecord;
}
inline void GetUgcRsp::set_has_music_record() {
  _oneof_case_[0] = kMusicRecord;
}
inline void GetUgcRsp::clear_music_record() {
  if (has_music_record()) {
    delete record_.music_record_;
    clear_has_record();
  }
}
inline  const ::proto::UgcMusicRecord& GetUgcRsp::music_record() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcRsp.music_record)
  return has_music_record()
      ? *record_.music_record_
      : ::proto::UgcMusicRecord::default_instance();
}
inline ::proto::UgcMusicRecord* GetUgcRsp::mutable_music_record() {
  if (!has_music_record()) {
    clear_record();
    set_has_music_record();
    record_.music_record_ = new ::proto::UgcMusicRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetUgcRsp.music_record)
  return record_.music_record_;
}
inline ::proto::UgcMusicRecord* GetUgcRsp::release_music_record() {
  // @@protoc_insertion_point(field_release:proto.GetUgcRsp.music_record)
  if (has_music_record()) {
    clear_has_record();
    ::proto::UgcMusicRecord* temp = record_.music_record_;
    record_.music_record_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetUgcRsp::set_allocated_music_record(::proto::UgcMusicRecord* music_record) {
  clear_record();
  if (music_record) {
    set_has_music_record();
    record_.music_record_ = music_record;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetUgcRsp.music_record)
}

// .proto.UgcMusicBriefInfo music_brief_info = 1819;
inline bool GetUgcRsp::has_music_brief_info() const {
  return brief_case() == kMusicBriefInfo;
}
inline void GetUgcRsp::set_has_music_brief_info() {
  _oneof_case_[1] = kMusicBriefInfo;
}
inline void GetUgcRsp::clear_music_brief_info() {
  if (has_music_brief_info()) {
    delete brief_.music_brief_info_;
    clear_has_brief();
  }
}
inline  const ::proto::UgcMusicBriefInfo& GetUgcRsp::music_brief_info() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcRsp.music_brief_info)
  return has_music_brief_info()
      ? *brief_.music_brief_info_
      : ::proto::UgcMusicBriefInfo::default_instance();
}
inline ::proto::UgcMusicBriefInfo* GetUgcRsp::mutable_music_brief_info() {
  if (!has_music_brief_info()) {
    clear_brief();
    set_has_music_brief_info();
    brief_.music_brief_info_ = new ::proto::UgcMusicBriefInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetUgcRsp.music_brief_info)
  return brief_.music_brief_info_;
}
inline ::proto::UgcMusicBriefInfo* GetUgcRsp::release_music_brief_info() {
  // @@protoc_insertion_point(field_release:proto.GetUgcRsp.music_brief_info)
  if (has_music_brief_info()) {
    clear_has_brief();
    ::proto::UgcMusicBriefInfo* temp = brief_.music_brief_info_;
    brief_.music_brief_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetUgcRsp::set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info) {
  clear_brief();
  if (music_brief_info) {
    set_has_music_brief_info();
    brief_.music_brief_info_ = music_brief_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetUgcRsp.music_brief_info)
}

inline bool GetUgcRsp::has_record() const {
  return record_case() != RECORD_NOT_SET;
}
inline void GetUgcRsp::clear_has_record() {
  _oneof_case_[0] = RECORD_NOT_SET;
}
inline bool GetUgcRsp::has_brief() const {
  return brief_case() != BRIEF_NOT_SET;
}
inline void GetUgcRsp::clear_has_brief() {
  _oneof_case_[1] = BRIEF_NOT_SET;
}
inline GetUgcRsp::RecordCase GetUgcRsp::record_case() const {
  return GetUgcRsp::RecordCase(_oneof_case_[0]);
}
inline GetUgcRsp::BriefCase GetUgcRsp::brief_case() const {
  return GetUgcRsp::BriefCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// GetUgcBriefInfoReq

// uint64 ugc_guid = 7;
inline void GetUgcBriefInfoReq::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetUgcBriefInfoReq::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcBriefInfoReq.ugc_guid)
  return ugc_guid_;
}
inline void GetUgcBriefInfoReq::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcBriefInfoReq.ugc_guid)
}

// .proto.UgcType ugc_type = 10;
inline void GetUgcBriefInfoReq::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType GetUgcBriefInfoReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcBriefInfoReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void GetUgcBriefInfoReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcBriefInfoReq.ugc_type)
}

// -------------------------------------------------------------------

// GetUgcBriefInfoRsp

// uint64 ugc_guid = 3;
inline void GetUgcBriefInfoRsp::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetUgcBriefInfoRsp::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcBriefInfoRsp.ugc_guid)
  return ugc_guid_;
}
inline void GetUgcBriefInfoRsp::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcBriefInfoRsp.ugc_guid)
}

// .proto.UgcType ugc_type = 11;
inline void GetUgcBriefInfoRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType GetUgcBriefInfoRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcBriefInfoRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void GetUgcBriefInfoRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcBriefInfoRsp.ugc_type)
}

// int32 retcode = 4;
inline void GetUgcBriefInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetUgcBriefInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcBriefInfoRsp.retcode)
  return retcode_;
}
inline void GetUgcBriefInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUgcBriefInfoRsp.retcode)
}

// .proto.UgcMusicBriefInfo music_brief_info = 2;
inline bool GetUgcBriefInfoRsp::has_music_brief_info() const {
  return brief_case() == kMusicBriefInfo;
}
inline void GetUgcBriefInfoRsp::set_has_music_brief_info() {
  _oneof_case_[0] = kMusicBriefInfo;
}
inline void GetUgcBriefInfoRsp::clear_music_brief_info() {
  if (has_music_brief_info()) {
    delete brief_.music_brief_info_;
    clear_has_brief();
  }
}
inline  const ::proto::UgcMusicBriefInfo& GetUgcBriefInfoRsp::music_brief_info() const {
  // @@protoc_insertion_point(field_get:proto.GetUgcBriefInfoRsp.music_brief_info)
  return has_music_brief_info()
      ? *brief_.music_brief_info_
      : ::proto::UgcMusicBriefInfo::default_instance();
}
inline ::proto::UgcMusicBriefInfo* GetUgcBriefInfoRsp::mutable_music_brief_info() {
  if (!has_music_brief_info()) {
    clear_brief();
    set_has_music_brief_info();
    brief_.music_brief_info_ = new ::proto::UgcMusicBriefInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetUgcBriefInfoRsp.music_brief_info)
  return brief_.music_brief_info_;
}
inline ::proto::UgcMusicBriefInfo* GetUgcBriefInfoRsp::release_music_brief_info() {
  // @@protoc_insertion_point(field_release:proto.GetUgcBriefInfoRsp.music_brief_info)
  if (has_music_brief_info()) {
    clear_has_brief();
    ::proto::UgcMusicBriefInfo* temp = brief_.music_brief_info_;
    brief_.music_brief_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GetUgcBriefInfoRsp::set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info) {
  clear_brief();
  if (music_brief_info) {
    set_has_music_brief_info();
    brief_.music_brief_info_ = music_brief_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetUgcBriefInfoRsp.music_brief_info)
}

inline bool GetUgcBriefInfoRsp::has_brief() const {
  return brief_case() != BRIEF_NOT_SET;
}
inline void GetUgcBriefInfoRsp::clear_has_brief() {
  _oneof_case_[0] = BRIEF_NOT_SET;
}
inline GetUgcBriefInfoRsp::BriefCase GetUgcBriefInfoRsp::brief_case() const {
  return GetUgcBriefInfoRsp::BriefCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SaveUgcReq

// .proto.UgcType ugc_type = 11;
inline void SaveUgcReq::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType SaveUgcReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.SaveUgcReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void SaveUgcReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveUgcReq.ugc_type)
}

// .proto.UgcMusicRecord music_record = 2;
inline bool SaveUgcReq::has_music_record() const {
  return record_case() == kMusicRecord;
}
inline void SaveUgcReq::set_has_music_record() {
  _oneof_case_[0] = kMusicRecord;
}
inline void SaveUgcReq::clear_music_record() {
  if (has_music_record()) {
    delete record_.music_record_;
    clear_has_record();
  }
}
inline  const ::proto::UgcMusicRecord& SaveUgcReq::music_record() const {
  // @@protoc_insertion_point(field_get:proto.SaveUgcReq.music_record)
  return has_music_record()
      ? *record_.music_record_
      : ::proto::UgcMusicRecord::default_instance();
}
inline ::proto::UgcMusicRecord* SaveUgcReq::mutable_music_record() {
  if (!has_music_record()) {
    clear_record();
    set_has_music_record();
    record_.music_record_ = new ::proto::UgcMusicRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.SaveUgcReq.music_record)
  return record_.music_record_;
}
inline ::proto::UgcMusicRecord* SaveUgcReq::release_music_record() {
  // @@protoc_insertion_point(field_release:proto.SaveUgcReq.music_record)
  if (has_music_record()) {
    clear_has_record();
    ::proto::UgcMusicRecord* temp = record_.music_record_;
    record_.music_record_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SaveUgcReq::set_allocated_music_record(::proto::UgcMusicRecord* music_record) {
  clear_record();
  if (music_record) {
    set_has_music_record();
    record_.music_record_ = music_record;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SaveUgcReq.music_record)
}

// .proto.UgcMusicBriefInfo music_brief_info = 1488;
inline bool SaveUgcReq::has_music_brief_info() const {
  return brief_case() == kMusicBriefInfo;
}
inline void SaveUgcReq::set_has_music_brief_info() {
  _oneof_case_[1] = kMusicBriefInfo;
}
inline void SaveUgcReq::clear_music_brief_info() {
  if (has_music_brief_info()) {
    delete brief_.music_brief_info_;
    clear_has_brief();
  }
}
inline  const ::proto::UgcMusicBriefInfo& SaveUgcReq::music_brief_info() const {
  // @@protoc_insertion_point(field_get:proto.SaveUgcReq.music_brief_info)
  return has_music_brief_info()
      ? *brief_.music_brief_info_
      : ::proto::UgcMusicBriefInfo::default_instance();
}
inline ::proto::UgcMusicBriefInfo* SaveUgcReq::mutable_music_brief_info() {
  if (!has_music_brief_info()) {
    clear_brief();
    set_has_music_brief_info();
    brief_.music_brief_info_ = new ::proto::UgcMusicBriefInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SaveUgcReq.music_brief_info)
  return brief_.music_brief_info_;
}
inline ::proto::UgcMusicBriefInfo* SaveUgcReq::release_music_brief_info() {
  // @@protoc_insertion_point(field_release:proto.SaveUgcReq.music_brief_info)
  if (has_music_brief_info()) {
    clear_has_brief();
    ::proto::UgcMusicBriefInfo* temp = brief_.music_brief_info_;
    brief_.music_brief_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SaveUgcReq::set_allocated_music_brief_info(::proto::UgcMusicBriefInfo* music_brief_info) {
  clear_brief();
  if (music_brief_info) {
    set_has_music_brief_info();
    brief_.music_brief_info_ = music_brief_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SaveUgcReq.music_brief_info)
}

inline bool SaveUgcReq::has_record() const {
  return record_case() != RECORD_NOT_SET;
}
inline void SaveUgcReq::clear_has_record() {
  _oneof_case_[0] = RECORD_NOT_SET;
}
inline bool SaveUgcReq::has_brief() const {
  return brief_case() != BRIEF_NOT_SET;
}
inline void SaveUgcReq::clear_has_brief() {
  _oneof_case_[1] = BRIEF_NOT_SET;
}
inline SaveUgcReq::RecordCase SaveUgcReq::record_case() const {
  return SaveUgcReq::RecordCase(_oneof_case_[0]);
}
inline SaveUgcReq::BriefCase SaveUgcReq::brief_case() const {
  return SaveUgcReq::BriefCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// SaveUgcRsp

// int32 retcode = 15;
inline void SaveUgcRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SaveUgcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SaveUgcRsp.retcode)
  return retcode_;
}
inline void SaveUgcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveUgcRsp.retcode)
}

// uint64 ugc_guid = 8;
inline void SaveUgcRsp::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SaveUgcRsp::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.SaveUgcRsp.ugc_guid)
  return ugc_guid_;
}
inline void SaveUgcRsp::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveUgcRsp.ugc_guid)
}

// .proto.UgcType ugc_type = 1;
inline void SaveUgcRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType SaveUgcRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.SaveUgcRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void SaveUgcRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveUgcRsp.ugc_type)
}

// -------------------------------------------------------------------

// PublishUgcReq

// .proto.UgcType ugc_type = 7;
inline void PublishUgcReq::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType PublishUgcReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.PublishUgcReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void PublishUgcReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PublishUgcReq.ugc_type)
}

// uint64 ugc_guid = 12;
inline void PublishUgcReq::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PublishUgcReq::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.PublishUgcReq.ugc_guid)
  return ugc_guid_;
}
inline void PublishUgcReq::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.PublishUgcReq.ugc_guid)
}

// -------------------------------------------------------------------

// PublishUgcRsp

// uint64 ugc_guid = 14;
inline void PublishUgcRsp::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PublishUgcRsp::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.PublishUgcRsp.ugc_guid)
  return ugc_guid_;
}
inline void PublishUgcRsp::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.PublishUgcRsp.ugc_guid)
}

// int32 retcode = 15;
inline void PublishUgcRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PublishUgcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PublishUgcRsp.retcode)
  return retcode_;
}
inline void PublishUgcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PublishUgcRsp.retcode)
}

// .proto.UgcType ugc_type = 13;
inline void PublishUgcRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType PublishUgcRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.PublishUgcRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void PublishUgcRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PublishUgcRsp.ugc_type)
}

// -------------------------------------------------------------------

// CheckUgcUpdateReq

// .proto.UgcType ugc_type = 13;
inline void CheckUgcUpdateReq::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType CheckUgcUpdateReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.CheckUgcUpdateReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void CheckUgcUpdateReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckUgcUpdateReq.ugc_type)
}

// -------------------------------------------------------------------

// CheckUgcUpdateRsp

// repeated uint64 update_ugc_guid_list = 15;
inline int CheckUgcUpdateRsp::update_ugc_guid_list_size() const {
  return update_ugc_guid_list_.size();
}
inline void CheckUgcUpdateRsp::clear_update_ugc_guid_list() {
  update_ugc_guid_list_.Clear();
}
inline ::google::protobuf::uint64 CheckUgcUpdateRsp::update_ugc_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CheckUgcUpdateRsp.update_ugc_guid_list)
  return update_ugc_guid_list_.Get(index);
}
inline void CheckUgcUpdateRsp::set_update_ugc_guid_list(int index, ::google::protobuf::uint64 value) {
  update_ugc_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CheckUgcUpdateRsp.update_ugc_guid_list)
}
inline void CheckUgcUpdateRsp::add_update_ugc_guid_list(::google::protobuf::uint64 value) {
  update_ugc_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CheckUgcUpdateRsp.update_ugc_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CheckUgcUpdateRsp::update_ugc_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.CheckUgcUpdateRsp.update_ugc_guid_list)
  return update_ugc_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CheckUgcUpdateRsp::mutable_update_ugc_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CheckUgcUpdateRsp.update_ugc_guid_list)
  return &update_ugc_guid_list_;
}

// int32 retcode = 10;
inline void CheckUgcUpdateRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CheckUgcUpdateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckUgcUpdateRsp.retcode)
  return retcode_;
}
inline void CheckUgcUpdateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckUgcUpdateRsp.retcode)
}

// .proto.UgcType ugc_type = 12;
inline void CheckUgcUpdateRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
inline ::proto::UgcType CheckUgcUpdateRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.CheckUgcUpdateRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
inline void CheckUgcUpdateRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckUgcUpdateRsp.ugc_type)
}

// -------------------------------------------------------------------

// UgcNotify

// bool is_ugc_publish_ban = 12;
inline void UgcNotify::clear_is_ugc_publish_ban() {
  is_ugc_publish_ban_ = false;
}
inline bool UgcNotify::is_ugc_publish_ban() const {
  // @@protoc_insertion_point(field_get:proto.UgcNotify.is_ugc_publish_ban)
  return is_ugc_publish_ban_;
}
inline void UgcNotify::set_is_ugc_publish_ban(bool value) {
  
  is_ugc_publish_ban_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcNotify.is_ugc_publish_ban)
}

// bool is_ugc_publish_feature_closed = 8;
inline void UgcNotify::clear_is_ugc_publish_feature_closed() {
  is_ugc_publish_feature_closed_ = false;
}
inline bool UgcNotify::is_ugc_publish_feature_closed() const {
  // @@protoc_insertion_point(field_get:proto.UgcNotify.is_ugc_publish_feature_closed)
  return is_ugc_publish_feature_closed_;
}
inline void UgcNotify::set_is_ugc_publish_feature_closed(bool value) {
  
  is_ugc_publish_feature_closed_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcNotify.is_ugc_publish_feature_closed)
}

// bool is_ugc_feature_closed = 15;
inline void UgcNotify::clear_is_ugc_feature_closed() {
  is_ugc_feature_closed_ = false;
}
inline bool UgcNotify::is_ugc_feature_closed() const {
  // @@protoc_insertion_point(field_get:proto.UgcNotify.is_ugc_feature_closed)
  return is_ugc_feature_closed_;
}
inline void UgcNotify::set_is_ugc_feature_closed(bool value) {
  
  is_ugc_feature_closed_ = value;
  // @@protoc_insertion_point(field_set:proto.UgcNotify.is_ugc_feature_closed)
}

// -------------------------------------------------------------------

// CheckUgcStateReq

// -------------------------------------------------------------------

// CheckUgcStateRsp

// int32 retcode = 7;
inline void CheckUgcStateRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CheckUgcStateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckUgcStateRsp.retcode)
  return retcode_;
}
inline void CheckUgcStateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckUgcStateRsp.retcode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::UgcType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UgcType>() {
  return ::proto::UgcType_descriptor();
}
template <> struct is_proto_enum< ::proto::GetUgcType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetUgcType>() {
  return ::proto::GetUgcType_descriptor();
}
template <> struct is_proto_enum< ::proto::RecordUsage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RecordUsage>() {
  return ::proto::RecordUsage_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fugc_2eproto__INCLUDED
