// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_gallery.proto

#ifndef PROTOBUF_cmd_2fcmd_5fgallery_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fgallery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class BackRebornGalleryReq;
class BackRebornGalleryReqDefaultTypeInternal;
extern BackRebornGalleryReqDefaultTypeInternal _BackRebornGalleryReq_default_instance_;
class BackRebornGalleryRsp;
class BackRebornGalleryRspDefaultTypeInternal;
extern BackRebornGalleryRspDefaultTypeInternal _BackRebornGalleryRsp_default_instance_;
class BalloonGallerySettleInfo;
class BalloonGallerySettleInfoDefaultTypeInternal;
extern BalloonGallerySettleInfoDefaultTypeInternal _BalloonGallerySettleInfo_default_instance_;
class BalloonPlayerInfo;
class BalloonPlayerInfoDefaultTypeInternal;
extern BalloonPlayerInfoDefaultTypeInternal _BalloonPlayerInfo_default_instance_;
class BalloonSettleInfo;
class BalloonSettleInfoDefaultTypeInternal;
extern BalloonSettleInfoDefaultTypeInternal _BalloonSettleInfo_default_instance_;
class BounceConjuringGallerySettleInfo;
class BounceConjuringGallerySettleInfoDefaultTypeInternal;
extern BounceConjuringGallerySettleInfoDefaultTypeInternal _BounceConjuringGallerySettleInfo_default_instance_;
class BounceConjuringGallerySettleInfo_GadgetCountMapEntry;
class BounceConjuringGallerySettleInfo_GadgetCountMapEntryDefaultTypeInternal;
extern BounceConjuringGallerySettleInfo_GadgetCountMapEntryDefaultTypeInternal _BounceConjuringGallerySettleInfo_GadgetCountMapEntry_default_instance_;
class BuoyantCombatGallerySettleInfo;
class BuoyantCombatGallerySettleInfoDefaultTypeInternal;
extern BuoyantCombatGallerySettleInfoDefaultTypeInternal _BuoyantCombatGallerySettleInfo_default_instance_;
class CoinCollectGallerySettleNotify;
class CoinCollectGallerySettleNotifyDefaultTypeInternal;
extern CoinCollectGallerySettleNotifyDefaultTypeInternal _CoinCollectGallerySettleNotify_default_instance_;
class FallPlayerBrief;
class FallPlayerBriefDefaultTypeInternal;
extern FallPlayerBriefDefaultTypeInternal _FallPlayerBrief_default_instance_;
class FallPlayerInfo;
class FallPlayerInfoDefaultTypeInternal;
extern FallPlayerInfoDefaultTypeInternal _FallPlayerInfo_default_instance_;
class FallPlayerInfo_BallCatchCountMapEntry;
class FallPlayerInfo_BallCatchCountMapEntryDefaultTypeInternal;
extern FallPlayerInfo_BallCatchCountMapEntryDefaultTypeInternal _FallPlayerInfo_BallCatchCountMapEntry_default_instance_;
class FallSettleInfo;
class FallSettleInfoDefaultTypeInternal;
extern FallSettleInfoDefaultTypeInternal _FallSettleInfo_default_instance_;
class FallSettleInfo_FlowerRingCatchCountMapEntry;
class FallSettleInfo_FlowerRingCatchCountMapEntryDefaultTypeInternal;
extern FallSettleInfo_FlowerRingCatchCountMapEntryDefaultTypeInternal _FallSettleInfo_FlowerRingCatchCountMapEntry_default_instance_;
class FishInfo;
class FishInfoDefaultTypeInternal;
extern FishInfoDefaultTypeInternal _FishInfo_default_instance_;
class FishingGallerySettleInfo;
class FishingGallerySettleInfoDefaultTypeInternal;
extern FishingGallerySettleInfoDefaultTypeInternal _FishingGallerySettleInfo_default_instance_;
class FishingGallerySettleInfo_FishMapEntry;
class FishingGallerySettleInfo_FishMapEntryDefaultTypeInternal;
extern FishingGallerySettleInfo_FishMapEntryDefaultTypeInternal _FishingGallerySettleInfo_FishMapEntry_default_instance_;
class FishingScore;
class FishingScoreDefaultTypeInternal;
extern FishingScoreDefaultTypeInternal _FishingScore_default_instance_;
class FungusCaptureSettleNotify;
class FungusCaptureSettleNotifyDefaultTypeInternal;
extern FungusCaptureSettleNotifyDefaultTypeInternal _FungusCaptureSettleNotify_default_instance_;
class FungusFighterTrainingInfoNotify;
class FungusFighterTrainingInfoNotifyDefaultTypeInternal;
extern FungusFighterTrainingInfoNotifyDefaultTypeInternal _FungusFighterTrainingInfoNotify_default_instance_;
class FungusFighterTrainingSettleInfo;
class FungusFighterTrainingSettleInfoDefaultTypeInternal;
extern FungusFighterTrainingSettleInfoDefaultTypeInternal _FungusFighterTrainingSettleInfo_default_instance_;
class GalleryBalloonScoreNotify;
class GalleryBalloonScoreNotifyDefaultTypeInternal;
extern GalleryBalloonScoreNotifyDefaultTypeInternal _GalleryBalloonScoreNotify_default_instance_;
class GalleryBalloonScoreNotify_UidScoreMapEntry;
class GalleryBalloonScoreNotify_UidScoreMapEntryDefaultTypeInternal;
extern GalleryBalloonScoreNotify_UidScoreMapEntryDefaultTypeInternal _GalleryBalloonScoreNotify_UidScoreMapEntry_default_instance_;
class GalleryBalloonShootNotify;
class GalleryBalloonShootNotifyDefaultTypeInternal;
extern GalleryBalloonShootNotifyDefaultTypeInternal _GalleryBalloonShootNotify_default_instance_;
class GalleryBounceConjuringHitNotify;
class GalleryBounceConjuringHitNotifyDefaultTypeInternal;
extern GalleryBounceConjuringHitNotifyDefaultTypeInternal _GalleryBounceConjuringHitNotify_default_instance_;
class GalleryBrokenFloorFallNotify;
class GalleryBrokenFloorFallNotifyDefaultTypeInternal;
extern GalleryBrokenFloorFallNotifyDefaultTypeInternal _GalleryBrokenFloorFallNotify_default_instance_;
class GalleryBulletHitNotify;
class GalleryBulletHitNotifyDefaultTypeInternal;
extern GalleryBulletHitNotifyDefaultTypeInternal _GalleryBulletHitNotify_default_instance_;
class GalleryCrystalLinkBuffInfoNotify;
class GalleryCrystalLinkBuffInfoNotifyDefaultTypeInternal;
extern GalleryCrystalLinkBuffInfoNotifyDefaultTypeInternal _GalleryCrystalLinkBuffInfoNotify_default_instance_;
class GalleryCrystalLinkKillMonsterNotify;
class GalleryCrystalLinkKillMonsterNotifyDefaultTypeInternal;
extern GalleryCrystalLinkKillMonsterNotifyDefaultTypeInternal _GalleryCrystalLinkKillMonsterNotify_default_instance_;
class GalleryFallCatchNotify;
class GalleryFallCatchNotifyDefaultTypeInternal;
extern GalleryFallCatchNotifyDefaultTypeInternal _GalleryFallCatchNotify_default_instance_;
class GalleryFallCatchNotify_BallCatchCountMapEntry;
class GalleryFallCatchNotify_BallCatchCountMapEntryDefaultTypeInternal;
extern GalleryFallCatchNotify_BallCatchCountMapEntryDefaultTypeInternal _GalleryFallCatchNotify_BallCatchCountMapEntry_default_instance_;
class GalleryFallScoreNotify;
class GalleryFallScoreNotifyDefaultTypeInternal;
extern GalleryFallScoreNotifyDefaultTypeInternal _GalleryFallScoreNotify_default_instance_;
class GalleryFallScoreNotify_UidBriefMapEntry;
class GalleryFallScoreNotify_UidBriefMapEntryDefaultTypeInternal;
extern GalleryFallScoreNotify_UidBriefMapEntryDefaultTypeInternal _GalleryFallScoreNotify_UidBriefMapEntry_default_instance_;
class GalleryFlowerCatchNotify;
class GalleryFlowerCatchNotifyDefaultTypeInternal;
extern GalleryFlowerCatchNotifyDefaultTypeInternal _GalleryFlowerCatchNotify_default_instance_;
class GalleryFlowerStartParam;
class GalleryFlowerStartParamDefaultTypeInternal;
extern GalleryFlowerStartParamDefaultTypeInternal _GalleryFlowerStartParam_default_instance_;
class GalleryIslandPartyDownHillInfoNotify;
class GalleryIslandPartyDownHillInfoNotifyDefaultTypeInternal;
extern GalleryIslandPartyDownHillInfoNotifyDefaultTypeInternal _GalleryIslandPartyDownHillInfoNotify_default_instance_;
class GalleryPreStartNotify;
class GalleryPreStartNotifyDefaultTypeInternal;
extern GalleryPreStartNotifyDefaultTypeInternal _GalleryPreStartNotify_default_instance_;
class GalleryStartNotify;
class GalleryStartNotifyDefaultTypeInternal;
extern GalleryStartNotifyDefaultTypeInternal _GalleryStartNotify_default_instance_;
class GalleryStopNotify;
class GalleryStopNotifyDefaultTypeInternal;
extern GalleryStopNotifyDefaultTypeInternal _GalleryStopNotify_default_instance_;
class GallerySumoKillMonsterNotify;
class GallerySumoKillMonsterNotifyDefaultTypeInternal;
extern GallerySumoKillMonsterNotifyDefaultTypeInternal _GallerySumoKillMonsterNotify_default_instance_;
class GalleryWillStartCountdownNotify;
class GalleryWillStartCountdownNotifyDefaultTypeInternal;
extern GalleryWillStartCountdownNotifyDefaultTypeInternal _GalleryWillStartCountdownNotify_default_instance_;
class GetAllSceneGalleryInfoReq;
class GetAllSceneGalleryInfoReqDefaultTypeInternal;
extern GetAllSceneGalleryInfoReqDefaultTypeInternal _GetAllSceneGalleryInfoReq_default_instance_;
class GetAllSceneGalleryInfoRsp;
class GetAllSceneGalleryInfoRspDefaultTypeInternal;
extern GetAllSceneGalleryInfoRspDefaultTypeInternal _GetAllSceneGalleryInfoRsp_default_instance_;
class HideAndSeekPlayerCapturedNotify;
class HideAndSeekPlayerCapturedNotifyDefaultTypeInternal;
extern HideAndSeekPlayerCapturedNotifyDefaultTypeInternal _HideAndSeekPlayerCapturedNotify_default_instance_;
class HomeGalleryInPlayingNotify;
class HomeGalleryInPlayingNotifyDefaultTypeInternal;
extern HomeGalleryInPlayingNotifyDefaultTypeInternal _HomeGalleryInPlayingNotify_default_instance_;
class InstableSprayGalleryInfoNotify;
class InstableSprayGalleryInfoNotifyDefaultTypeInternal;
extern InstableSprayGalleryInfoNotifyDefaultTypeInternal _InstableSprayGalleryInfoNotify_default_instance_;
class InterruptGalleryReq;
class InterruptGalleryReqDefaultTypeInternal;
extern InterruptGalleryReqDefaultTypeInternal _InterruptGalleryReq_default_instance_;
class InterruptGalleryRsp;
class InterruptGalleryRspDefaultTypeInternal;
extern InterruptGalleryRspDefaultTypeInternal _InterruptGalleryRsp_default_instance_;
class IrodoriMasterGallerySettleInfo;
class IrodoriMasterGallerySettleInfoDefaultTypeInternal;
extern IrodoriMasterGallerySettleInfoDefaultTypeInternal _IrodoriMasterGallerySettleInfo_default_instance_;
class IslandPartyGallerySettleInfo;
class IslandPartyGallerySettleInfoDefaultTypeInternal;
extern IslandPartyGallerySettleInfoDefaultTypeInternal _IslandPartyGallerySettleInfo_default_instance_;
class IslandPartyRaftInfoNotify;
class IslandPartyRaftInfoNotifyDefaultTypeInternal;
extern IslandPartyRaftInfoNotifyDefaultTypeInternal _IslandPartyRaftInfoNotify_default_instance_;
class IslandPartySailInfoNotify;
class IslandPartySailInfoNotifyDefaultTypeInternal;
extern IslandPartySailInfoNotifyDefaultTypeInternal _IslandPartySailInfoNotify_default_instance_;
class LuminanceStoneChallengeGallerySettleInfo;
class LuminanceStoneChallengeGallerySettleInfoDefaultTypeInternal;
extern LuminanceStoneChallengeGallerySettleInfoDefaultTypeInternal _LuminanceStoneChallengeGallerySettleInfo_default_instance_;
class PhotoGallerySettleInfo;
class PhotoGallerySettleInfoDefaultTypeInternal;
extern PhotoGallerySettleInfoDefaultTypeInternal _PhotoGallerySettleInfo_default_instance_;
class RacingGallerySettleInfo;
class RacingGallerySettleInfoDefaultTypeInternal;
extern RacingGallerySettleInfoDefaultTypeInternal _RacingGallerySettleInfo_default_instance_;
class SalvageEscortGallerySettleInfo;
class SalvageEscortGallerySettleInfoDefaultTypeInternal;
extern SalvageEscortGallerySettleInfoDefaultTypeInternal _SalvageEscortGallerySettleInfo_default_instance_;
class SalvagePreventGallerySettleInfo;
class SalvagePreventGallerySettleInfoDefaultTypeInternal;
extern SalvagePreventGallerySettleInfoDefaultTypeInternal _SalvagePreventGallerySettleInfo_default_instance_;
class SceneGalleryBalloonInfo;
class SceneGalleryBalloonInfoDefaultTypeInternal;
extern SceneGalleryBalloonInfoDefaultTypeInternal _SceneGalleryBalloonInfo_default_instance_;
class SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry;
class SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntryDefaultTypeInternal;
extern SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntryDefaultTypeInternal _SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry_default_instance_;
class SceneGalleryBounceConjuringInfo;
class SceneGalleryBounceConjuringInfoDefaultTypeInternal;
extern SceneGalleryBounceConjuringInfoDefaultTypeInternal _SceneGalleryBounceConjuringInfo_default_instance_;
class SceneGalleryBrickBreakerInfo;
class SceneGalleryBrickBreakerInfoDefaultTypeInternal;
extern SceneGalleryBrickBreakerInfoDefaultTypeInternal _SceneGalleryBrickBreakerInfo_default_instance_;
class SceneGalleryBrokenFloorInfo;
class SceneGalleryBrokenFloorInfoDefaultTypeInternal;
extern SceneGalleryBrokenFloorInfoDefaultTypeInternal _SceneGalleryBrokenFloorInfo_default_instance_;
class SceneGalleryBrokenFloorInfo_FallCountMapEntry;
class SceneGalleryBrokenFloorInfo_FallCountMapEntryDefaultTypeInternal;
extern SceneGalleryBrokenFloorInfo_FallCountMapEntryDefaultTypeInternal _SceneGalleryBrokenFloorInfo_FallCountMapEntry_default_instance_;
class SceneGalleryBulletInfo;
class SceneGalleryBulletInfoDefaultTypeInternal;
extern SceneGalleryBulletInfoDefaultTypeInternal _SceneGalleryBulletInfo_default_instance_;
class SceneGalleryBulletInfo_HitCountMapEntry;
class SceneGalleryBulletInfo_HitCountMapEntryDefaultTypeInternal;
extern SceneGalleryBulletInfo_HitCountMapEntryDefaultTypeInternal _SceneGalleryBulletInfo_HitCountMapEntry_default_instance_;
class SceneGalleryBuoyantCombatInfo;
class SceneGalleryBuoyantCombatInfoDefaultTypeInternal;
extern SceneGalleryBuoyantCombatInfoDefaultTypeInternal _SceneGalleryBuoyantCombatInfo_default_instance_;
class SceneGalleryCharAmusementInfo;
class SceneGalleryCharAmusementInfoDefaultTypeInternal;
extern SceneGalleryCharAmusementInfoDefaultTypeInternal _SceneGalleryCharAmusementInfo_default_instance_;
class SceneGalleryCoinCollectInfo;
class SceneGalleryCoinCollectInfoDefaultTypeInternal;
extern SceneGalleryCoinCollectInfoDefaultTypeInternal _SceneGalleryCoinCollectInfo_default_instance_;
class SceneGalleryCrystalLinkInfo;
class SceneGalleryCrystalLinkInfoDefaultTypeInternal;
extern SceneGalleryCrystalLinkInfoDefaultTypeInternal _SceneGalleryCrystalLinkInfo_default_instance_;
class SceneGalleryEffigyChallengeV2Info;
class SceneGalleryEffigyChallengeV2InfoDefaultTypeInternal;
extern SceneGalleryEffigyChallengeV2InfoDefaultTypeInternal _SceneGalleryEffigyChallengeV2Info_default_instance_;
class SceneGalleryFallInfo;
class SceneGalleryFallInfoDefaultTypeInternal;
extern SceneGalleryFallInfoDefaultTypeInternal _SceneGalleryFallInfo_default_instance_;
class SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry;
class SceneGalleryFallInfo_ScenePlayerFallInfoMapEntryDefaultTypeInternal;
extern SceneGalleryFallInfo_ScenePlayerFallInfoMapEntryDefaultTypeInternal _SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry_default_instance_;
class SceneGalleryFlowerInfo;
class SceneGalleryFlowerInfoDefaultTypeInternal;
extern SceneGalleryFlowerInfoDefaultTypeInternal _SceneGalleryFlowerInfo_default_instance_;
class SceneGalleryFungusFighterCaptureInfo;
class SceneGalleryFungusFighterCaptureInfoDefaultTypeInternal;
extern SceneGalleryFungusFighterCaptureInfoDefaultTypeInternal _SceneGalleryFungusFighterCaptureInfo_default_instance_;
class SceneGalleryFungusFighterTrainingInfo;
class SceneGalleryFungusFighterTrainingInfoDefaultTypeInternal;
extern SceneGalleryFungusFighterTrainingInfoDefaultTypeInternal _SceneGalleryFungusFighterTrainingInfo_default_instance_;
class SceneGalleryHandballInfo;
class SceneGalleryHandballInfoDefaultTypeInternal;
extern SceneGalleryHandballInfoDefaultTypeInternal _SceneGalleryHandballInfo_default_instance_;
class SceneGalleryHideAndSeekInfo;
class SceneGalleryHideAndSeekInfoDefaultTypeInternal;
extern SceneGalleryHideAndSeekInfoDefaultTypeInternal _SceneGalleryHideAndSeekInfo_default_instance_;
class SceneGalleryHomeBalloonInfo;
class SceneGalleryHomeBalloonInfoDefaultTypeInternal;
extern SceneGalleryHomeBalloonInfoDefaultTypeInternal _SceneGalleryHomeBalloonInfo_default_instance_;
class SceneGalleryHomeSeekFurnitureInfo;
class SceneGalleryHomeSeekFurnitureInfoDefaultTypeInternal;
extern SceneGalleryHomeSeekFurnitureInfoDefaultTypeInternal _SceneGalleryHomeSeekFurnitureInfo_default_instance_;
class SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry;
class SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntryDefaultTypeInternal;
extern SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntryDefaultTypeInternal _SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry_default_instance_;
class SceneGalleryInfo;
class SceneGalleryInfoDefaultTypeInternal;
extern SceneGalleryInfoDefaultTypeInternal _SceneGalleryInfo_default_instance_;
class SceneGalleryInfoNotify;
class SceneGalleryInfoNotifyDefaultTypeInternal;
extern SceneGalleryInfoNotifyDefaultTypeInternal _SceneGalleryInfoNotify_default_instance_;
class SceneGalleryInstableSprayBuffInfo;
class SceneGalleryInstableSprayBuffInfoDefaultTypeInternal;
extern SceneGalleryInstableSprayBuffInfoDefaultTypeInternal _SceneGalleryInstableSprayBuffInfo_default_instance_;
class SceneGalleryInstaleSprayInfo;
class SceneGalleryInstaleSprayInfoDefaultTypeInternal;
extern SceneGalleryInstaleSprayInfoDefaultTypeInternal _SceneGalleryInstaleSprayInfo_default_instance_;
class SceneGalleryIrodoriMasterInfo;
class SceneGalleryIrodoriMasterInfoDefaultTypeInternal;
extern SceneGalleryIrodoriMasterInfoDefaultTypeInternal _SceneGalleryIrodoriMasterInfo_default_instance_;
class SceneGalleryIslandPartyDownHillInfo;
class SceneGalleryIslandPartyDownHillInfoDefaultTypeInternal;
extern SceneGalleryIslandPartyDownHillInfoDefaultTypeInternal _SceneGalleryIslandPartyDownHillInfo_default_instance_;
class SceneGalleryIslandPartyRaftInfo;
class SceneGalleryIslandPartyRaftInfoDefaultTypeInternal;
extern SceneGalleryIslandPartyRaftInfoDefaultTypeInternal _SceneGalleryIslandPartyRaftInfo_default_instance_;
class SceneGalleryIslandPartySailInfo;
class SceneGalleryIslandPartySailInfoDefaultTypeInternal;
extern SceneGalleryIslandPartySailInfoDefaultTypeInternal _SceneGalleryIslandPartySailInfo_default_instance_;
class SceneGalleryLuminanceStoneChallengeInfo;
class SceneGalleryLuminanceStoneChallengeInfoDefaultTypeInternal;
extern SceneGalleryLuminanceStoneChallengeInfoDefaultTypeInternal _SceneGalleryLuminanceStoneChallengeInfo_default_instance_;
class SceneGalleryMuqadasPotionInfo;
class SceneGalleryMuqadasPotionInfoDefaultTypeInternal;
extern SceneGalleryMuqadasPotionInfoDefaultTypeInternal _SceneGalleryMuqadasPotionInfo_default_instance_;
class SceneGalleryProgressInfo;
class SceneGalleryProgressInfoDefaultTypeInternal;
extern SceneGalleryProgressInfoDefaultTypeInternal _SceneGalleryProgressInfo_default_instance_;
class SceneGallerySalvageEscortInfo;
class SceneGallerySalvageEscortInfoDefaultTypeInternal;
extern SceneGallerySalvageEscortInfoDefaultTypeInternal _SceneGallerySalvageEscortInfo_default_instance_;
class SceneGallerySalvagePreventInfo;
class SceneGallerySalvagePreventInfoDefaultTypeInternal;
extern SceneGallerySalvagePreventInfoDefaultTypeInternal _SceneGallerySalvagePreventInfo_default_instance_;
class SceneGallerySummerTimeV2BoatInfo;
class SceneGallerySummerTimeV2BoatInfoDefaultTypeInternal;
extern SceneGallerySummerTimeV2BoatInfoDefaultTypeInternal _SceneGallerySummerTimeV2BoatInfo_default_instance_;
class SceneGallerySumoInfo;
class SceneGallerySumoInfoDefaultTypeInternal;
extern SceneGallerySumoInfoDefaultTypeInternal _SceneGallerySumoInfo_default_instance_;
class SceneGalleryTeamChainInfo;
class SceneGalleryTeamChainInfoDefaultTypeInternal;
extern SceneGalleryTeamChainInfoDefaultTypeInternal _SceneGalleryTeamChainInfo_default_instance_;
class SceneGalleryTreasureSeelieInfo;
class SceneGalleryTreasureSeelieInfoDefaultTypeInternal;
extern SceneGalleryTreasureSeelieInfoDefaultTypeInternal _SceneGalleryTreasureSeelieInfo_default_instance_;
class SceneGalleryVintageHuntingInfo;
class SceneGalleryVintageHuntingInfoDefaultTypeInternal;
extern SceneGalleryVintageHuntingInfoDefaultTypeInternal _SceneGalleryVintageHuntingInfo_default_instance_;
class SceneGalleryWindFieldInfo;
class SceneGalleryWindFieldInfoDefaultTypeInternal;
extern SceneGalleryWindFieldInfoDefaultTypeInternal _SceneGalleryWindFieldInfo_default_instance_;
class SummerTimeV2BoatGallerySettleInfo;
class SummerTimeV2BoatGallerySettleInfoDefaultTypeInternal;
extern SummerTimeV2BoatGallerySettleInfoDefaultTypeInternal _SummerTimeV2BoatGallerySettleInfo_default_instance_;
class VintageHuntingFirstStageInfo;
class VintageHuntingFirstStageInfoDefaultTypeInternal;
extern VintageHuntingFirstStageInfoDefaultTypeInternal _VintageHuntingFirstStageInfo_default_instance_;
class VintageHuntingSecondStageInfo;
class VintageHuntingSecondStageInfoDefaultTypeInternal;
extern VintageHuntingSecondStageInfoDefaultTypeInternal _VintageHuntingSecondStageInfo_default_instance_;
class VintageHuntingThirdStageInfo;
class VintageHuntingThirdStageInfoDefaultTypeInternal;
extern VintageHuntingThirdStageInfoDefaultTypeInternal _VintageHuntingThirdStageInfo_default_instance_;
class WindFieldGalleryChallengeInfoNotify;
class WindFieldGalleryChallengeInfoNotifyDefaultTypeInternal;
extern WindFieldGalleryChallengeInfoNotifyDefaultTypeInternal _WindFieldGalleryChallengeInfoNotify_default_instance_;
class WindFieldGalleryInfoNotify;
class WindFieldGalleryInfoNotifyDefaultTypeInternal;
extern WindFieldGalleryInfoNotifyDefaultTypeInternal _WindFieldGalleryInfoNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fgallery_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fgallery_2eproto

enum GalleryStageType {
  GALLERY_NONE = 0,
  GALLERY_PRESTART = 1,
  GALLERY_START = 2,
  GalleryStageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GalleryStageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GalleryStageType_IsValid(int value);
const GalleryStageType GalleryStageType_MIN = GALLERY_NONE;
const GalleryStageType GalleryStageType_MAX = GALLERY_START;
const int GalleryStageType_ARRAYSIZE = GalleryStageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GalleryStageType_descriptor();
inline const ::std::string& GalleryStageType_Name(GalleryStageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GalleryStageType_descriptor(), value);
}
inline bool GalleryStageType_Parse(
    const ::std::string& name, GalleryStageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GalleryStageType>(
    GalleryStageType_descriptor(), name, value);
}
enum GalleryStopReason {
  GALLERY_STOP_NONE = 0,
  GALLERY_STOP_TIMEUP = 1,
  GALLERY_STOP_CLIENT_INTERRUPT = 2,
  GALLERY_STOP_LUA_INTERRUPT_SUCCESS = 3,
  GALLERY_STOP_LUA_INTERRUPT_FAIL = 4,
  GALLERY_STOP_OWNER_LEAVE_SCENE = 5,
  GALLERY_STOP_PLAY_INIT_FAILED = 6,
  GALLERY_STOP_OTHER_PLAYER_ENTER = 7,
  GALLERY_STOP_AVATAR_DIE = 8,
  GALLERY_STOP_FINISHED = 9,
  GALLERY_STOP_FUNGUS_ALL_DIE = 10,
  GALLERY_STOP_LIFE_COUNT_ZERO = 11,
  GalleryStopReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GalleryStopReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GalleryStopReason_IsValid(int value);
const GalleryStopReason GalleryStopReason_MIN = GALLERY_STOP_NONE;
const GalleryStopReason GalleryStopReason_MAX = GALLERY_STOP_LIFE_COUNT_ZERO;
const int GalleryStopReason_ARRAYSIZE = GalleryStopReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* GalleryStopReason_descriptor();
inline const ::std::string& GalleryStopReason_Name(GalleryStopReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    GalleryStopReason_descriptor(), value);
}
inline bool GalleryStopReason_Parse(
    const ::std::string& name, GalleryStopReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GalleryStopReason>(
    GalleryStopReason_descriptor(), name, value);
}
enum GalleryStartSource {
  GALLERY_START_BY_NONE = 0,
  GALLERY_START_BY_MATCH = 1,
  GALLERY_START_BY_DRAFT = 2,
  GalleryStartSource_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GalleryStartSource_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GalleryStartSource_IsValid(int value);
const GalleryStartSource GalleryStartSource_MIN = GALLERY_START_BY_NONE;
const GalleryStartSource GalleryStartSource_MAX = GALLERY_START_BY_DRAFT;
const int GalleryStartSource_ARRAYSIZE = GalleryStartSource_MAX + 1;

const ::google::protobuf::EnumDescriptor* GalleryStartSource_descriptor();
inline const ::std::string& GalleryStartSource_Name(GalleryStartSource value) {
  return ::google::protobuf::internal::NameOfEnum(
    GalleryStartSource_descriptor(), value);
}
inline bool GalleryStartSource_Parse(
    const ::std::string& name, GalleryStartSource* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GalleryStartSource>(
    GalleryStartSource_descriptor(), name, value);
}
enum SalvagePreventStopReason {
  SALVAGE_PREVENT_STOP_NONE = 0,
  SALVAGE_PREVENT_STOP_SUCCESS = 1,
  SALVAGE_PREVENT_STOP_ARRIVAL = 2,
  SALVAGE_PREVENT_STOP_INTERRUPT = 3,
  SALVAGE_PREVENT_STOP_LEAVE = 4,
  SALVAGE_PREVENT_STOP_FULL = 5,
  SALVAGE_PREVENT_STOP_AWAY = 6,
  SalvagePreventStopReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SalvagePreventStopReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SalvagePreventStopReason_IsValid(int value);
const SalvagePreventStopReason SalvagePreventStopReason_MIN = SALVAGE_PREVENT_STOP_NONE;
const SalvagePreventStopReason SalvagePreventStopReason_MAX = SALVAGE_PREVENT_STOP_AWAY;
const int SalvagePreventStopReason_ARRAYSIZE = SalvagePreventStopReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* SalvagePreventStopReason_descriptor();
inline const ::std::string& SalvagePreventStopReason_Name(SalvagePreventStopReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    SalvagePreventStopReason_descriptor(), value);
}
inline bool SalvagePreventStopReason_Parse(
    const ::std::string& name, SalvagePreventStopReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SalvagePreventStopReason>(
    SalvagePreventStopReason_descriptor(), name, value);
}
enum SalvageEscortStopReason {
  SALVAGE_ESCORT_STOP_NONE = 0,
  SALVAGE_ESCORT_STOP_SUCCESS = 1,
  SALVAGE_ESCORT_STOP_DUMP = 2,
  SALVAGE_ESCORT_STOP_TIME = 3,
  SALVAGE_ESCORT_STOP_INTERRUPT = 4,
  SALVAGE_ESCORT_STOP_LEAVE = 5,
  SALVAGE_ESCORT_STOP_FULL = 6,
  SalvageEscortStopReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SalvageEscortStopReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SalvageEscortStopReason_IsValid(int value);
const SalvageEscortStopReason SalvageEscortStopReason_MIN = SALVAGE_ESCORT_STOP_NONE;
const SalvageEscortStopReason SalvageEscortStopReason_MAX = SALVAGE_ESCORT_STOP_FULL;
const int SalvageEscortStopReason_ARRAYSIZE = SalvageEscortStopReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* SalvageEscortStopReason_descriptor();
inline const ::std::string& SalvageEscortStopReason_Name(SalvageEscortStopReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    SalvageEscortStopReason_descriptor(), value);
}
inline bool SalvageEscortStopReason_Parse(
    const ::std::string& name, SalvageEscortStopReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SalvageEscortStopReason>(
    SalvageEscortStopReason_descriptor(), name, value);
}
enum IslandPartySailStage {
  ISLAND_PARTY_SAIL_STAGE_NONE = 0,
  ISLAND_PARTY_SAIL_STAGE_SAIL = 1,
  ISLAND_PARTY_SAIL_STAGE_BATTLE = 2,
  IslandPartySailStage_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IslandPartySailStage_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IslandPartySailStage_IsValid(int value);
const IslandPartySailStage IslandPartySailStage_MIN = ISLAND_PARTY_SAIL_STAGE_NONE;
const IslandPartySailStage IslandPartySailStage_MAX = ISLAND_PARTY_SAIL_STAGE_BATTLE;
const int IslandPartySailStage_ARRAYSIZE = IslandPartySailStage_MAX + 1;

const ::google::protobuf::EnumDescriptor* IslandPartySailStage_descriptor();
inline const ::std::string& IslandPartySailStage_Name(IslandPartySailStage value) {
  return ::google::protobuf::internal::NameOfEnum(
    IslandPartySailStage_descriptor(), value);
}
inline bool IslandPartySailStage_Parse(
    const ::std::string& name, IslandPartySailStage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IslandPartySailStage>(
    IslandPartySailStage_descriptor(), name, value);
}
// ===================================================================

class GalleryFlowerStartParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryFlowerStartParam) */ {
 public:
  GalleryFlowerStartParam();
  virtual ~GalleryFlowerStartParam();

  GalleryFlowerStartParam(const GalleryFlowerStartParam& from);

  inline GalleryFlowerStartParam& operator=(const GalleryFlowerStartParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryFlowerStartParam(GalleryFlowerStartParam&& from) noexcept
    : GalleryFlowerStartParam() {
    *this = ::std::move(from);
  }

  inline GalleryFlowerStartParam& operator=(GalleryFlowerStartParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryFlowerStartParam& default_instance();

  static inline const GalleryFlowerStartParam* internal_default_instance() {
    return reinterpret_cast<const GalleryFlowerStartParam*>(
               &_GalleryFlowerStartParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GalleryFlowerStartParam* other);
  friend void swap(GalleryFlowerStartParam& a, GalleryFlowerStartParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryFlowerStartParam* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryFlowerStartParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryFlowerStartParam& from);
  void MergeFrom(const GalleryFlowerStartParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryFlowerStartParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_score = 5;
  void clear_target_score();
  static const int kTargetScoreFieldNumber = 5;
  ::google::protobuf::uint32 target_score() const;
  void set_target_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryFlowerStartParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryStartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryStartNotify) */ {
 public:
  GalleryStartNotify();
  virtual ~GalleryStartNotify();

  GalleryStartNotify(const GalleryStartNotify& from);

  inline GalleryStartNotify& operator=(const GalleryStartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryStartNotify(GalleryStartNotify&& from) noexcept
    : GalleryStartNotify() {
    *this = ::std::move(from);
  }

  inline GalleryStartNotify& operator=(GalleryStartNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryStartNotify& default_instance();

  enum DetailCase {
    kFlowerStartParam = 15,
    DETAIL_NOT_SET = 0,
  };

  static inline const GalleryStartNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryStartNotify*>(
               &_GalleryStartNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GalleryStartNotify* other);
  friend void swap(GalleryStartNotify& a, GalleryStartNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryStartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryStartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryStartNotify& from);
  void MergeFrom(const GalleryStartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryStartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 start_time = 5;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // uint32 end_time = 6;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 gallery_id = 13;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 13;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 owner_uid = 9;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 9;
  ::google::protobuf::uint32 owner_uid() const;
  void set_owner_uid(::google::protobuf::uint32 value);

  // uint32 player_count = 11;
  void clear_player_count();
  static const int kPlayerCountFieldNumber = 11;
  ::google::protobuf::uint32 player_count() const;
  void set_player_count(::google::protobuf::uint32 value);

  // .proto.GalleryFlowerStartParam flower_start_param = 15;
  bool has_flower_start_param() const;
  void clear_flower_start_param();
  static const int kFlowerStartParamFieldNumber = 15;
  const ::proto::GalleryFlowerStartParam& flower_start_param() const;
  ::proto::GalleryFlowerStartParam* mutable_flower_start_param();
  ::proto::GalleryFlowerStartParam* release_flower_start_param();
  void set_allocated_flower_start_param(::proto::GalleryFlowerStartParam* flower_start_param);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.GalleryStartNotify)
 private:
  void set_has_flower_start_param();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 owner_uid_;
  ::google::protobuf::uint32 player_count_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::GalleryFlowerStartParam* flower_start_param_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryBalloonShootNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryBalloonShootNotify) */ {
 public:
  GalleryBalloonShootNotify();
  virtual ~GalleryBalloonShootNotify();

  GalleryBalloonShootNotify(const GalleryBalloonShootNotify& from);

  inline GalleryBalloonShootNotify& operator=(const GalleryBalloonShootNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryBalloonShootNotify(GalleryBalloonShootNotify&& from) noexcept
    : GalleryBalloonShootNotify() {
    *this = ::std::move(from);
  }

  inline GalleryBalloonShootNotify& operator=(GalleryBalloonShootNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryBalloonShootNotify& default_instance();

  static inline const GalleryBalloonShootNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryBalloonShootNotify*>(
               &_GalleryBalloonShootNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GalleryBalloonShootNotify* other);
  friend void swap(GalleryBalloonShootNotify& a, GalleryBalloonShootNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryBalloonShootNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryBalloonShootNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryBalloonShootNotify& from);
  void MergeFrom(const GalleryBalloonShootNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryBalloonShootNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 combo_disable_time = 6;
  void clear_combo_disable_time();
  static const int kComboDisableTimeFieldNumber = 6;
  ::google::protobuf::uint64 combo_disable_time() const;
  void set_combo_disable_time(::google::protobuf::uint64 value);

  // uint32 combo = 14;
  void clear_combo();
  static const int kComboFieldNumber = 14;
  ::google::protobuf::uint32 combo() const;
  void set_combo(::google::protobuf::uint32 value);

  // uint32 gallery_id = 5;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 5;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // int32 add_score = 11;
  void clear_add_score();
  static const int kAddScoreFieldNumber = 11;
  ::google::protobuf::int32 add_score() const;
  void set_add_score(::google::protobuf::int32 value);

  // uint32 trigger_entity_id = 12;
  void clear_trigger_entity_id();
  static const int kTriggerEntityIdFieldNumber = 12;
  ::google::protobuf::uint32 trigger_entity_id() const;
  void set_trigger_entity_id(::google::protobuf::uint32 value);

  // uint32 cur_score = 13;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 13;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryBalloonShootNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 combo_disable_time_;
  ::google::protobuf::uint32 combo_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::int32 add_score_;
  ::google::protobuf::uint32 trigger_entity_id_;
  ::google::protobuf::uint32 cur_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GalleryBalloonScoreNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryBalloonScoreNotify) */ {
 public:
  GalleryBalloonScoreNotify();
  virtual ~GalleryBalloonScoreNotify();

  GalleryBalloonScoreNotify(const GalleryBalloonScoreNotify& from);

  inline GalleryBalloonScoreNotify& operator=(const GalleryBalloonScoreNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryBalloonScoreNotify(GalleryBalloonScoreNotify&& from) noexcept
    : GalleryBalloonScoreNotify() {
    *this = ::std::move(from);
  }

  inline GalleryBalloonScoreNotify& operator=(GalleryBalloonScoreNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryBalloonScoreNotify& default_instance();

  static inline const GalleryBalloonScoreNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryBalloonScoreNotify*>(
               &_GalleryBalloonScoreNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GalleryBalloonScoreNotify* other);
  friend void swap(GalleryBalloonScoreNotify& a, GalleryBalloonScoreNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryBalloonScoreNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryBalloonScoreNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryBalloonScoreNotify& from);
  void MergeFrom(const GalleryBalloonScoreNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryBalloonScoreNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> uid_score_map = 7;
  int uid_score_map_size() const;
  void clear_uid_score_map();
  static const int kUidScoreMapFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      uid_score_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_uid_score_map();

  // uint32 gallery_id = 9;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 9;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryBalloonScoreNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GalleryBalloonScoreNotify_UidScoreMapEntry : public ::google::protobuf::internal::MapEntry<GalleryBalloonScoreNotify_UidScoreMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GalleryBalloonScoreNotify_UidScoreMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GalleryBalloonScoreNotify_UidScoreMapEntry();
    GalleryBalloonScoreNotify_UidScoreMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GalleryBalloonScoreNotify_UidScoreMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GalleryBalloonScoreNotify_UidScoreMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GalleryBalloonScoreNotify_UidScoreMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > uid_score_map_;
  private:
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BalloonSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BalloonSettleInfo) */ {
 public:
  BalloonSettleInfo();
  virtual ~BalloonSettleInfo();

  BalloonSettleInfo(const BalloonSettleInfo& from);

  inline BalloonSettleInfo& operator=(const BalloonSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BalloonSettleInfo(BalloonSettleInfo&& from) noexcept
    : BalloonSettleInfo() {
    *this = ::std::move(from);
  }

  inline BalloonSettleInfo& operator=(BalloonSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BalloonSettleInfo& default_instance();

  static inline const BalloonSettleInfo* internal_default_instance() {
    return reinterpret_cast<const BalloonSettleInfo*>(
               &_BalloonSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(BalloonSettleInfo* other);
  friend void swap(BalloonSettleInfo& a, BalloonSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BalloonSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BalloonSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BalloonSettleInfo& from);
  void MergeFrom(const BalloonSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BalloonSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OnlinePlayerInfo player_info = 2;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 2;
  const ::proto::OnlinePlayerInfo& player_info() const;
  ::proto::OnlinePlayerInfo* mutable_player_info();
  ::proto::OnlinePlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::OnlinePlayerInfo* player_info);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 final_score = 7;
  void clear_final_score();
  static const int kFinalScoreFieldNumber = 7;
  ::google::protobuf::uint32 final_score() const;
  void set_final_score(::google::protobuf::uint32 value);

  // uint32 max_combo = 9;
  void clear_max_combo();
  static const int kMaxComboFieldNumber = 9;
  ::google::protobuf::uint32 max_combo() const;
  void set_max_combo(::google::protobuf::uint32 value);

  // uint32 shoot_count = 12;
  void clear_shoot_count();
  static const int kShootCountFieldNumber = 12;
  ::google::protobuf::uint32 shoot_count() const;
  void set_shoot_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BalloonSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OnlinePlayerInfo* player_info_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 final_score_;
  ::google::protobuf::uint32 max_combo_;
  ::google::protobuf::uint32 shoot_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryStopNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryStopNotify) */ {
 public:
  GalleryStopNotify();
  virtual ~GalleryStopNotify();

  GalleryStopNotify(const GalleryStopNotify& from);

  inline GalleryStopNotify& operator=(const GalleryStopNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryStopNotify(GalleryStopNotify&& from) noexcept
    : GalleryStopNotify() {
    *this = ::std::move(from);
  }

  inline GalleryStopNotify& operator=(GalleryStopNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryStopNotify& default_instance();

  static inline const GalleryStopNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryStopNotify*>(
               &_GalleryStopNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GalleryStopNotify* other);
  friend void swap(GalleryStopNotify& a, GalleryStopNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryStopNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryStopNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryStopNotify& from);
  void MergeFrom(const GalleryStopNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryStopNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 8;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 8;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryStopNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class FallSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FallSettleInfo) */ {
 public:
  FallSettleInfo();
  virtual ~FallSettleInfo();

  FallSettleInfo(const FallSettleInfo& from);

  inline FallSettleInfo& operator=(const FallSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FallSettleInfo(FallSettleInfo&& from) noexcept
    : FallSettleInfo() {
    *this = ::std::move(from);
  }

  inline FallSettleInfo& operator=(FallSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FallSettleInfo& default_instance();

  static inline const FallSettleInfo* internal_default_instance() {
    return reinterpret_cast<const FallSettleInfo*>(
               &_FallSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(FallSettleInfo* other);
  friend void swap(FallSettleInfo& a, FallSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FallSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FallSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FallSettleInfo& from);
  void MergeFrom(const FallSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FallSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> flower_ring_catch_count_map = 3;
  int flower_ring_catch_count_map_size() const;
  void clear_flower_ring_catch_count_map();
  static const int kFlowerRingCatchCountMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      flower_ring_catch_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_flower_ring_catch_count_map();

  // .proto.OnlinePlayerInfo player_info = 13;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 13;
  const ::proto::OnlinePlayerInfo& player_info() const;
  ::proto::OnlinePlayerInfo* mutable_player_info();
  ::proto::OnlinePlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::OnlinePlayerInfo* player_info);

  // uint32 final_score = 1;
  void clear_final_score();
  static const int kFinalScoreFieldNumber = 1;
  ::google::protobuf::uint32 final_score() const;
  void set_final_score(::google::protobuf::uint32 value);

  // uint32 remain_time = 10;
  void clear_remain_time();
  static const int kRemainTimeFieldNumber = 10;
  ::google::protobuf::uint32 remain_time() const;
  void set_remain_time(::google::protobuf::uint32 value);

  // uint32 uid = 14;
  void clear_uid();
  static const int kUidFieldNumber = 14;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 catch_count = 15;
  void clear_catch_count();
  static const int kCatchCountFieldNumber = 15;
  ::google::protobuf::uint32 catch_count() const;
  void set_catch_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FallSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class FallSettleInfo_FlowerRingCatchCountMapEntry : public ::google::protobuf::internal::MapEntry<FallSettleInfo_FlowerRingCatchCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<FallSettleInfo_FlowerRingCatchCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    FallSettleInfo_FlowerRingCatchCountMapEntry();
    FallSettleInfo_FlowerRingCatchCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const FallSettleInfo_FlowerRingCatchCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_FallSettleInfo_FlowerRingCatchCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      FallSettleInfo_FlowerRingCatchCountMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > flower_ring_catch_count_map_;
  private:
  ::proto::OnlinePlayerInfo* player_info_;
  ::google::protobuf::uint32 final_score_;
  ::google::protobuf::uint32 remain_time_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 catch_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GalleryFallCatchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryFallCatchNotify) */ {
 public:
  GalleryFallCatchNotify();
  virtual ~GalleryFallCatchNotify();

  GalleryFallCatchNotify(const GalleryFallCatchNotify& from);

  inline GalleryFallCatchNotify& operator=(const GalleryFallCatchNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryFallCatchNotify(GalleryFallCatchNotify&& from) noexcept
    : GalleryFallCatchNotify() {
    *this = ::std::move(from);
  }

  inline GalleryFallCatchNotify& operator=(GalleryFallCatchNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryFallCatchNotify& default_instance();

  static inline const GalleryFallCatchNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryFallCatchNotify*>(
               &_GalleryFallCatchNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GalleryFallCatchNotify* other);
  friend void swap(GalleryFallCatchNotify& a, GalleryFallCatchNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryFallCatchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryFallCatchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryFallCatchNotify& from);
  void MergeFrom(const GalleryFallCatchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryFallCatchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> ball_catch_count_map = 15;
  int ball_catch_count_map_size() const;
  void clear_ball_catch_count_map();
  static const int kBallCatchCountMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      ball_catch_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_ball_catch_count_map();

  // uint32 add_score = 1;
  void clear_add_score();
  static const int kAddScoreFieldNumber = 1;
  ::google::protobuf::uint32 add_score() const;
  void set_add_score(::google::protobuf::uint32 value);

  // uint32 cur_score = 6;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 6;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // bool is_ground = 12;
  void clear_is_ground();
  static const int kIsGroundFieldNumber = 12;
  bool is_ground() const;
  void set_is_ground(bool value);

  // uint32 gallery_id = 10;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 10;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 time_cost = 11;
  void clear_time_cost();
  static const int kTimeCostFieldNumber = 11;
  ::google::protobuf::uint32 time_cost() const;
  void set_time_cost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryFallCatchNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GalleryFallCatchNotify_BallCatchCountMapEntry : public ::google::protobuf::internal::MapEntry<GalleryFallCatchNotify_BallCatchCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GalleryFallCatchNotify_BallCatchCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GalleryFallCatchNotify_BallCatchCountMapEntry();
    GalleryFallCatchNotify_BallCatchCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GalleryFallCatchNotify_BallCatchCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GalleryFallCatchNotify_BallCatchCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GalleryFallCatchNotify_BallCatchCountMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > ball_catch_count_map_;
  private:
  ::google::protobuf::uint32 add_score_;
  ::google::protobuf::uint32 cur_score_;
  bool is_ground_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 time_cost_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FallPlayerBrief : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FallPlayerBrief) */ {
 public:
  FallPlayerBrief();
  virtual ~FallPlayerBrief();

  FallPlayerBrief(const FallPlayerBrief& from);

  inline FallPlayerBrief& operator=(const FallPlayerBrief& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FallPlayerBrief(FallPlayerBrief&& from) noexcept
    : FallPlayerBrief() {
    *this = ::std::move(from);
  }

  inline FallPlayerBrief& operator=(FallPlayerBrief&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FallPlayerBrief& default_instance();

  static inline const FallPlayerBrief* internal_default_instance() {
    return reinterpret_cast<const FallPlayerBrief*>(
               &_FallPlayerBrief_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(FallPlayerBrief* other);
  friend void swap(FallPlayerBrief& a, FallPlayerBrief& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FallPlayerBrief* New() const PROTOBUF_FINAL { return New(NULL); }

  FallPlayerBrief* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FallPlayerBrief& from);
  void MergeFrom(const FallPlayerBrief& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FallPlayerBrief* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 13;
  void clear_uid();
  static const int kUidFieldNumber = 13;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // bool is_ground = 5;
  void clear_is_ground();
  static const int kIsGroundFieldNumber = 5;
  bool is_ground() const;
  void set_is_ground(bool value);

  // uint32 score = 10;
  void clear_score();
  static const int kScoreFieldNumber = 10;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FallPlayerBrief)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  bool is_ground_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GalleryFallScoreNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryFallScoreNotify) */ {
 public:
  GalleryFallScoreNotify();
  virtual ~GalleryFallScoreNotify();

  GalleryFallScoreNotify(const GalleryFallScoreNotify& from);

  inline GalleryFallScoreNotify& operator=(const GalleryFallScoreNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryFallScoreNotify(GalleryFallScoreNotify&& from) noexcept
    : GalleryFallScoreNotify() {
    *this = ::std::move(from);
  }

  inline GalleryFallScoreNotify& operator=(GalleryFallScoreNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryFallScoreNotify& default_instance();

  static inline const GalleryFallScoreNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryFallScoreNotify*>(
               &_GalleryFallScoreNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GalleryFallScoreNotify* other);
  friend void swap(GalleryFallScoreNotify& a, GalleryFallScoreNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryFallScoreNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryFallScoreNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryFallScoreNotify& from);
  void MergeFrom(const GalleryFallScoreNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryFallScoreNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.FallPlayerBrief> uid_brief_map = 1;
  int uid_brief_map_size() const;
  void clear_uid_brief_map();
  static const int kUidBriefMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerBrief >&
      uid_brief_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerBrief >*
      mutable_uid_brief_map();

  // uint32 gallery_id = 7;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 7;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryFallScoreNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GalleryFallScoreNotify_UidBriefMapEntry : public ::google::protobuf::internal::MapEntry<GalleryFallScoreNotify_UidBriefMapEntry, 
      ::google::protobuf::uint32, ::proto::FallPlayerBrief,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GalleryFallScoreNotify_UidBriefMapEntry, 
      ::google::protobuf::uint32, ::proto::FallPlayerBrief,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GalleryFallScoreNotify_UidBriefMapEntry();
    GalleryFallScoreNotify_UidBriefMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GalleryFallScoreNotify_UidBriefMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GalleryFallScoreNotify_UidBriefMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GalleryFallScoreNotify_UidBriefMapEntry,
      ::google::protobuf::uint32, ::proto::FallPlayerBrief,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > uid_brief_map_;
  private:
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BalloonPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BalloonPlayerInfo) */ {
 public:
  BalloonPlayerInfo();
  virtual ~BalloonPlayerInfo();

  BalloonPlayerInfo(const BalloonPlayerInfo& from);

  inline BalloonPlayerInfo& operator=(const BalloonPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BalloonPlayerInfo(BalloonPlayerInfo&& from) noexcept
    : BalloonPlayerInfo() {
    *this = ::std::move(from);
  }

  inline BalloonPlayerInfo& operator=(BalloonPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BalloonPlayerInfo& default_instance();

  static inline const BalloonPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const BalloonPlayerInfo*>(
               &_BalloonPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(BalloonPlayerInfo* other);
  friend void swap(BalloonPlayerInfo& a, BalloonPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BalloonPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BalloonPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BalloonPlayerInfo& from);
  void MergeFrom(const BalloonPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BalloonPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cur_score = 2;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 2;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // uint32 combo = 11;
  void clear_combo();
  static const int kComboFieldNumber = 11;
  ::google::protobuf::uint32 combo() const;
  void set_combo(::google::protobuf::uint32 value);

  // uint32 combo_disable_time = 14;
  void clear_combo_disable_time();
  static const int kComboDisableTimeFieldNumber = 14;
  ::google::protobuf::uint32 combo_disable_time() const;
  void set_combo_disable_time(::google::protobuf::uint32 value);

  // uint32 uid = 15;
  void clear_uid();
  static const int kUidFieldNumber = 15;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BalloonPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cur_score_;
  ::google::protobuf::uint32 combo_;
  ::google::protobuf::uint32 combo_disable_time_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class FallPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FallPlayerInfo) */ {
 public:
  FallPlayerInfo();
  virtual ~FallPlayerInfo();

  FallPlayerInfo(const FallPlayerInfo& from);

  inline FallPlayerInfo& operator=(const FallPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FallPlayerInfo(FallPlayerInfo&& from) noexcept
    : FallPlayerInfo() {
    *this = ::std::move(from);
  }

  inline FallPlayerInfo& operator=(FallPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FallPlayerInfo& default_instance();

  static inline const FallPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const FallPlayerInfo*>(
               &_FallPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(FallPlayerInfo* other);
  friend void swap(FallPlayerInfo& a, FallPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FallPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FallPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FallPlayerInfo& from);
  void MergeFrom(const FallPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FallPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> ball_catch_count_map = 6;
  int ball_catch_count_map_size() const;
  void clear_ball_catch_count_map();
  static const int kBallCatchCountMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      ball_catch_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_ball_catch_count_map();

  // uint32 cur_score = 7;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 7;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // uint32 uid = 9;
  void clear_uid();
  static const int kUidFieldNumber = 9;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 time_cost = 11;
  void clear_time_cost();
  static const int kTimeCostFieldNumber = 11;
  ::google::protobuf::uint32 time_cost() const;
  void set_time_cost(::google::protobuf::uint32 value);

  // bool is_ground = 15;
  void clear_is_ground();
  static const int kIsGroundFieldNumber = 15;
  bool is_ground() const;
  void set_is_ground(bool value);

  // @@protoc_insertion_point(class_scope:proto.FallPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class FallPlayerInfo_BallCatchCountMapEntry : public ::google::protobuf::internal::MapEntry<FallPlayerInfo_BallCatchCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<FallPlayerInfo_BallCatchCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    FallPlayerInfo_BallCatchCountMapEntry();
    FallPlayerInfo_BallCatchCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const FallPlayerInfo_BallCatchCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_FallPlayerInfo_BallCatchCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      FallPlayerInfo_BallCatchCountMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > ball_catch_count_map_;
  private:
  ::google::protobuf::uint32 cur_score_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 time_cost_;
  bool is_ground_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneGalleryBalloonInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryBalloonInfo) */ {
 public:
  SceneGalleryBalloonInfo();
  virtual ~SceneGalleryBalloonInfo();

  SceneGalleryBalloonInfo(const SceneGalleryBalloonInfo& from);

  inline SceneGalleryBalloonInfo& operator=(const SceneGalleryBalloonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryBalloonInfo(SceneGalleryBalloonInfo&& from) noexcept
    : SceneGalleryBalloonInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryBalloonInfo& operator=(SceneGalleryBalloonInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryBalloonInfo& default_instance();

  static inline const SceneGalleryBalloonInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryBalloonInfo*>(
               &_SceneGalleryBalloonInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(SceneGalleryBalloonInfo* other);
  friend void swap(SceneGalleryBalloonInfo& a, SceneGalleryBalloonInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryBalloonInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryBalloonInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryBalloonInfo& from);
  void MergeFrom(const SceneGalleryBalloonInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryBalloonInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.BalloonPlayerInfo> scene_player_balloon_info_map = 14;
  int scene_player_balloon_info_map_size() const;
  void clear_scene_player_balloon_info_map();
  static const int kScenePlayerBalloonInfoMapFieldNumber = 14;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BalloonPlayerInfo >&
      scene_player_balloon_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BalloonPlayerInfo >*
      mutable_scene_player_balloon_info_map();

  // uint32 end_time = 5;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryBalloonInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry : public ::google::protobuf::internal::MapEntry<SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BalloonPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BalloonPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry();
    SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneGalleryBalloonInfo_ScenePlayerBalloonInfoMapEntry,
      ::google::protobuf::uint32, ::proto::BalloonPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > scene_player_balloon_info_map_;
  private:
  ::google::protobuf::uint32 end_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneGalleryFallInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryFallInfo) */ {
 public:
  SceneGalleryFallInfo();
  virtual ~SceneGalleryFallInfo();

  SceneGalleryFallInfo(const SceneGalleryFallInfo& from);

  inline SceneGalleryFallInfo& operator=(const SceneGalleryFallInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryFallInfo(SceneGalleryFallInfo&& from) noexcept
    : SceneGalleryFallInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryFallInfo& operator=(SceneGalleryFallInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryFallInfo& default_instance();

  static inline const SceneGalleryFallInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryFallInfo*>(
               &_SceneGalleryFallInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SceneGalleryFallInfo* other);
  friend void swap(SceneGalleryFallInfo& a, SceneGalleryFallInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryFallInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryFallInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryFallInfo& from);
  void MergeFrom(const SceneGalleryFallInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryFallInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.FallPlayerInfo> scene_player_fall_info_map = 12;
  int scene_player_fall_info_map_size() const;
  void clear_scene_player_fall_info_map();
  static const int kScenePlayerFallInfoMapFieldNumber = 12;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerInfo >&
      scene_player_fall_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerInfo >*
      mutable_scene_player_fall_info_map();

  // uint32 end_time = 2;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryFallInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry : public ::google::protobuf::internal::MapEntry<SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::FallPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::FallPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry();
    SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneGalleryFallInfo_ScenePlayerFallInfoMapEntry,
      ::google::protobuf::uint32, ::proto::FallPlayerInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > scene_player_fall_info_map_;
  private:
  ::google::protobuf::uint32 end_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryFlowerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryFlowerInfo) */ {
 public:
  SceneGalleryFlowerInfo();
  virtual ~SceneGalleryFlowerInfo();

  SceneGalleryFlowerInfo(const SceneGalleryFlowerInfo& from);

  inline SceneGalleryFlowerInfo& operator=(const SceneGalleryFlowerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryFlowerInfo(SceneGalleryFlowerInfo&& from) noexcept
    : SceneGalleryFlowerInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryFlowerInfo& operator=(SceneGalleryFlowerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryFlowerInfo& default_instance();

  static inline const SceneGalleryFlowerInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryFlowerInfo*>(
               &_SceneGalleryFlowerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SceneGalleryFlowerInfo* other);
  friend void swap(SceneGalleryFlowerInfo& a, SceneGalleryFlowerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryFlowerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryFlowerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryFlowerInfo& from);
  void MergeFrom(const SceneGalleryFlowerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryFlowerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_score = 13;
  void clear_target_score();
  static const int kTargetScoreFieldNumber = 13;
  ::google::protobuf::uint32 target_score() const;
  void set_target_score(::google::protobuf::uint32 value);

  // uint32 end_time = 7;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 cur_score = 9;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 9;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryFlowerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_score_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 cur_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneGalleryBulletInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryBulletInfo) */ {
 public:
  SceneGalleryBulletInfo();
  virtual ~SceneGalleryBulletInfo();

  SceneGalleryBulletInfo(const SceneGalleryBulletInfo& from);

  inline SceneGalleryBulletInfo& operator=(const SceneGalleryBulletInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryBulletInfo(SceneGalleryBulletInfo&& from) noexcept
    : SceneGalleryBulletInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryBulletInfo& operator=(SceneGalleryBulletInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryBulletInfo& default_instance();

  static inline const SceneGalleryBulletInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryBulletInfo*>(
               &_SceneGalleryBulletInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SceneGalleryBulletInfo* other);
  friend void swap(SceneGalleryBulletInfo& a, SceneGalleryBulletInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryBulletInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryBulletInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryBulletInfo& from);
  void MergeFrom(const SceneGalleryBulletInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryBulletInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> hit_count_map = 10;
  int hit_count_map_size() const;
  void clear_hit_count_map();
  static const int kHitCountMapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      hit_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_hit_count_map();

  // uint32 end_time = 1;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 1;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryBulletInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneGalleryBulletInfo_HitCountMapEntry : public ::google::protobuf::internal::MapEntry<SceneGalleryBulletInfo_HitCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneGalleryBulletInfo_HitCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneGalleryBulletInfo_HitCountMapEntry();
    SceneGalleryBulletInfo_HitCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneGalleryBulletInfo_HitCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneGalleryBulletInfo_HitCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneGalleryBulletInfo_HitCountMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > hit_count_map_;
  private:
  ::google::protobuf::uint32 end_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneGalleryBrokenFloorInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryBrokenFloorInfo) */ {
 public:
  SceneGalleryBrokenFloorInfo();
  virtual ~SceneGalleryBrokenFloorInfo();

  SceneGalleryBrokenFloorInfo(const SceneGalleryBrokenFloorInfo& from);

  inline SceneGalleryBrokenFloorInfo& operator=(const SceneGalleryBrokenFloorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryBrokenFloorInfo(SceneGalleryBrokenFloorInfo&& from) noexcept
    : SceneGalleryBrokenFloorInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryBrokenFloorInfo& operator=(SceneGalleryBrokenFloorInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryBrokenFloorInfo& default_instance();

  static inline const SceneGalleryBrokenFloorInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryBrokenFloorInfo*>(
               &_SceneGalleryBrokenFloorInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(SceneGalleryBrokenFloorInfo* other);
  friend void swap(SceneGalleryBrokenFloorInfo& a, SceneGalleryBrokenFloorInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryBrokenFloorInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryBrokenFloorInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryBrokenFloorInfo& from);
  void MergeFrom(const SceneGalleryBrokenFloorInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryBrokenFloorInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> fall_count_map = 3;
  int fall_count_map_size() const;
  void clear_fall_count_map();
  static const int kFallCountMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      fall_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_fall_count_map();

  // uint32 end_time = 9;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 9;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryBrokenFloorInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneGalleryBrokenFloorInfo_FallCountMapEntry : public ::google::protobuf::internal::MapEntry<SceneGalleryBrokenFloorInfo_FallCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneGalleryBrokenFloorInfo_FallCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneGalleryBrokenFloorInfo_FallCountMapEntry();
    SceneGalleryBrokenFloorInfo_FallCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneGalleryBrokenFloorInfo_FallCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneGalleryBrokenFloorInfo_FallCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneGalleryBrokenFloorInfo_FallCountMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > fall_count_map_;
  private:
  ::google::protobuf::uint32 end_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryHideAndSeekInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryHideAndSeekInfo) */ {
 public:
  SceneGalleryHideAndSeekInfo();
  virtual ~SceneGalleryHideAndSeekInfo();

  SceneGalleryHideAndSeekInfo(const SceneGalleryHideAndSeekInfo& from);

  inline SceneGalleryHideAndSeekInfo& operator=(const SceneGalleryHideAndSeekInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryHideAndSeekInfo(SceneGalleryHideAndSeekInfo&& from) noexcept
    : SceneGalleryHideAndSeekInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryHideAndSeekInfo& operator=(SceneGalleryHideAndSeekInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryHideAndSeekInfo& default_instance();

  static inline const SceneGalleryHideAndSeekInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryHideAndSeekInfo*>(
               &_SceneGalleryHideAndSeekInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SceneGalleryHideAndSeekInfo* other);
  friend void swap(SceneGalleryHideAndSeekInfo& a, SceneGalleryHideAndSeekInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryHideAndSeekInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryHideAndSeekInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryHideAndSeekInfo& from);
  void MergeFrom(const SceneGalleryHideAndSeekInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryHideAndSeekInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 caught_uid_list = 4;
  int caught_uid_list_size() const;
  void clear_caught_uid_list();
  static const int kCaughtUidListFieldNumber = 4;
  ::google::protobuf::uint32 caught_uid_list(int index) const;
  void set_caught_uid_list(int index, ::google::protobuf::uint32 value);
  void add_caught_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      caught_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_caught_uid_list();

  // repeated uint32 visible_uid_list = 13;
  int visible_uid_list_size() const;
  void clear_visible_uid_list();
  static const int kVisibleUidListFieldNumber = 13;
  ::google::protobuf::uint32 visible_uid_list(int index) const;
  void set_visible_uid_list(int index, ::google::protobuf::uint32 value);
  void add_visible_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      visible_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_visible_uid_list();

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryHideAndSeekInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > caught_uid_list_;
  mutable int _caught_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > visible_uid_list_;
  mutable int _visible_uid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryBuoyantCombatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryBuoyantCombatInfo) */ {
 public:
  SceneGalleryBuoyantCombatInfo();
  virtual ~SceneGalleryBuoyantCombatInfo();

  SceneGalleryBuoyantCombatInfo(const SceneGalleryBuoyantCombatInfo& from);

  inline SceneGalleryBuoyantCombatInfo& operator=(const SceneGalleryBuoyantCombatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryBuoyantCombatInfo(SceneGalleryBuoyantCombatInfo&& from) noexcept
    : SceneGalleryBuoyantCombatInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryBuoyantCombatInfo& operator=(SceneGalleryBuoyantCombatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryBuoyantCombatInfo& default_instance();

  static inline const SceneGalleryBuoyantCombatInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryBuoyantCombatInfo*>(
               &_SceneGalleryBuoyantCombatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SceneGalleryBuoyantCombatInfo* other);
  friend void swap(SceneGalleryBuoyantCombatInfo& a, SceneGalleryBuoyantCombatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryBuoyantCombatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryBuoyantCombatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryBuoyantCombatInfo& from);
  void MergeFrom(const SceneGalleryBuoyantCombatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryBuoyantCombatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 kill_special_monster_count = 1;
  void clear_kill_special_monster_count();
  static const int kKillSpecialMonsterCountFieldNumber = 1;
  ::google::protobuf::uint32 kill_special_monster_count() const;
  void set_kill_special_monster_count(::google::protobuf::uint32 value);

  // uint32 score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 kill_monster_count = 14;
  void clear_kill_monster_count();
  static const int kKillMonsterCountFieldNumber = 14;
  ::google::protobuf::uint32 kill_monster_count() const;
  void set_kill_monster_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryBuoyantCombatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 kill_special_monster_count_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kill_monster_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryProgressInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryProgressInfo) */ {
 public:
  SceneGalleryProgressInfo();
  virtual ~SceneGalleryProgressInfo();

  SceneGalleryProgressInfo(const SceneGalleryProgressInfo& from);

  inline SceneGalleryProgressInfo& operator=(const SceneGalleryProgressInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryProgressInfo(SceneGalleryProgressInfo&& from) noexcept
    : SceneGalleryProgressInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryProgressInfo& operator=(SceneGalleryProgressInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryProgressInfo& default_instance();

  static inline const SceneGalleryProgressInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryProgressInfo*>(
               &_SceneGalleryProgressInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SceneGalleryProgressInfo* other);
  friend void swap(SceneGalleryProgressInfo& a, SceneGalleryProgressInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryProgressInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryProgressInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryProgressInfo& from);
  void MergeFrom(const SceneGalleryProgressInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryProgressInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 progress_stage_list = 8;
  int progress_stage_list_size() const;
  void clear_progress_stage_list();
  static const int kProgressStageListFieldNumber = 8;
  ::google::protobuf::uint32 progress_stage_list(int index) const;
  void set_progress_stage_list(int index, ::google::protobuf::uint32 value);
  void add_progress_stage_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      progress_stage_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_progress_stage_list();

  // string key = 11;
  void clear_key();
  static const int kKeyFieldNumber = 11;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // uint32 progress = 5;
  void clear_progress();
  static const int kProgressFieldNumber = 5;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // uint32 ui_form = 12;
  void clear_ui_form();
  static const int kUiFormFieldNumber = 12;
  ::google::protobuf::uint32 ui_form() const;
  void set_ui_form(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryProgressInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > progress_stage_list_;
  mutable int _progress_stage_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 ui_form_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryBounceConjuringInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryBounceConjuringInfo) */ {
 public:
  SceneGalleryBounceConjuringInfo();
  virtual ~SceneGalleryBounceConjuringInfo();

  SceneGalleryBounceConjuringInfo(const SceneGalleryBounceConjuringInfo& from);

  inline SceneGalleryBounceConjuringInfo& operator=(const SceneGalleryBounceConjuringInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryBounceConjuringInfo(SceneGalleryBounceConjuringInfo&& from) noexcept
    : SceneGalleryBounceConjuringInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryBounceConjuringInfo& operator=(SceneGalleryBounceConjuringInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryBounceConjuringInfo& default_instance();

  static inline const SceneGalleryBounceConjuringInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryBounceConjuringInfo*>(
               &_SceneGalleryBounceConjuringInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SceneGalleryBounceConjuringInfo* other);
  friend void swap(SceneGalleryBounceConjuringInfo& a, SceneGalleryBounceConjuringInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryBounceConjuringInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryBounceConjuringInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryBounceConjuringInfo& from);
  void MergeFrom(const SceneGalleryBounceConjuringInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryBounceConjuringInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 total_destroyed_machine_count = 4;
  void clear_total_destroyed_machine_count();
  static const int kTotalDestroyedMachineCountFieldNumber = 4;
  ::google::protobuf::uint32 total_destroyed_machine_count() const;
  void set_total_destroyed_machine_count(::google::protobuf::uint32 value);

  // uint32 total_score = 6;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 6;
  ::google::protobuf::uint32 total_score() const;
  void set_total_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryBounceConjuringInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 total_destroyed_machine_count_;
  ::google::protobuf::uint32 total_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryHandballInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryHandballInfo) */ {
 public:
  SceneGalleryHandballInfo();
  virtual ~SceneGalleryHandballInfo();

  SceneGalleryHandballInfo(const SceneGalleryHandballInfo& from);

  inline SceneGalleryHandballInfo& operator=(const SceneGalleryHandballInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryHandballInfo(SceneGalleryHandballInfo&& from) noexcept
    : SceneGalleryHandballInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryHandballInfo& operator=(SceneGalleryHandballInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryHandballInfo& default_instance();

  static inline const SceneGalleryHandballInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryHandballInfo*>(
               &_SceneGalleryHandballInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(SceneGalleryHandballInfo* other);
  friend void swap(SceneGalleryHandballInfo& a, SceneGalleryHandballInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryHandballInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryHandballInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryHandballInfo& from);
  void MergeFrom(const SceneGalleryHandballInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryHandballInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.PlaceInfo ball_place_info = 9;
  bool has_ball_place_info() const;
  void clear_ball_place_info();
  static const int kBallPlaceInfoFieldNumber = 9;
  const ::proto::PlaceInfo& ball_place_info() const;
  ::proto::PlaceInfo* mutable_ball_place_info();
  ::proto::PlaceInfo* release_ball_place_info();
  void set_allocated_ball_place_info(::proto::PlaceInfo* ball_place_info);

  // bool is_have_ball = 15;
  void clear_is_have_ball();
  static const int kIsHaveBallFieldNumber = 15;
  bool is_have_ball() const;
  void set_is_have_ball(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryHandballInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlaceInfo* ball_place_info_;
  bool is_have_ball_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGallerySumoInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGallerySumoInfo) */ {
 public:
  SceneGallerySumoInfo();
  virtual ~SceneGallerySumoInfo();

  SceneGallerySumoInfo(const SceneGallerySumoInfo& from);

  inline SceneGallerySumoInfo& operator=(const SceneGallerySumoInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGallerySumoInfo(SceneGallerySumoInfo&& from) noexcept
    : SceneGallerySumoInfo() {
    *this = ::std::move(from);
  }

  inline SceneGallerySumoInfo& operator=(SceneGallerySumoInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGallerySumoInfo& default_instance();

  static inline const SceneGallerySumoInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGallerySumoInfo*>(
               &_SceneGallerySumoInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SceneGallerySumoInfo* other);
  friend void swap(SceneGallerySumoInfo& a, SceneGallerySumoInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGallerySumoInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGallerySumoInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGallerySumoInfo& from);
  void MergeFrom(const SceneGallerySumoInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGallerySumoInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 kill_normal_mosnter_num = 15;
  void clear_kill_normal_mosnter_num();
  static const int kKillNormalMosnterNumFieldNumber = 15;
  ::google::protobuf::uint32 kill_normal_mosnter_num() const;
  void set_kill_normal_mosnter_num(::google::protobuf::uint32 value);

  // uint32 score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 kill_elite_monster_num = 14;
  void clear_kill_elite_monster_num();
  static const int kKillEliteMonsterNumFieldNumber = 14;
  ::google::protobuf::uint32 kill_elite_monster_num() const;
  void set_kill_elite_monster_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGallerySumoInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 kill_normal_mosnter_num_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kill_elite_monster_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGallerySalvagePreventInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGallerySalvagePreventInfo) */ {
 public:
  SceneGallerySalvagePreventInfo();
  virtual ~SceneGallerySalvagePreventInfo();

  SceneGallerySalvagePreventInfo(const SceneGallerySalvagePreventInfo& from);

  inline SceneGallerySalvagePreventInfo& operator=(const SceneGallerySalvagePreventInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGallerySalvagePreventInfo(SceneGallerySalvagePreventInfo&& from) noexcept
    : SceneGallerySalvagePreventInfo() {
    *this = ::std::move(from);
  }

  inline SceneGallerySalvagePreventInfo& operator=(SceneGallerySalvagePreventInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGallerySalvagePreventInfo& default_instance();

  static inline const SceneGallerySalvagePreventInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGallerySalvagePreventInfo*>(
               &_SceneGallerySalvagePreventInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(SceneGallerySalvagePreventInfo* other);
  friend void swap(SceneGallerySalvagePreventInfo& a, SceneGallerySalvagePreventInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGallerySalvagePreventInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGallerySalvagePreventInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGallerySalvagePreventInfo& from);
  void MergeFrom(const SceneGallerySalvagePreventInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGallerySalvagePreventInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 monster_count = 7;
  void clear_monster_count();
  static const int kMonsterCountFieldNumber = 7;
  ::google::protobuf::uint32 monster_count() const;
  void set_monster_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGallerySalvagePreventInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 monster_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGallerySalvageEscortInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGallerySalvageEscortInfo) */ {
 public:
  SceneGallerySalvageEscortInfo();
  virtual ~SceneGallerySalvageEscortInfo();

  SceneGallerySalvageEscortInfo(const SceneGallerySalvageEscortInfo& from);

  inline SceneGallerySalvageEscortInfo& operator=(const SceneGallerySalvageEscortInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGallerySalvageEscortInfo(SceneGallerySalvageEscortInfo&& from) noexcept
    : SceneGallerySalvageEscortInfo() {
    *this = ::std::move(from);
  }

  inline SceneGallerySalvageEscortInfo& operator=(SceneGallerySalvageEscortInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGallerySalvageEscortInfo& default_instance();

  static inline const SceneGallerySalvageEscortInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGallerySalvageEscortInfo*>(
               &_SceneGallerySalvageEscortInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(SceneGallerySalvageEscortInfo* other);
  friend void swap(SceneGallerySalvageEscortInfo& a, SceneGallerySalvageEscortInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGallerySalvageEscortInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGallerySalvageEscortInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGallerySalvageEscortInfo& from);
  void MergeFrom(const SceneGallerySalvageEscortInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGallerySalvageEscortInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 max_monster_count = 3;
  void clear_max_monster_count();
  static const int kMaxMonsterCountFieldNumber = 3;
  ::google::protobuf::uint32 max_monster_count() const;
  void set_max_monster_count(::google::protobuf::uint32 value);

  // uint32 box_count = 7;
  void clear_box_count();
  static const int kBoxCountFieldNumber = 7;
  ::google::protobuf::uint32 box_count() const;
  void set_box_count(::google::protobuf::uint32 value);

  // uint32 monster_count = 11;
  void clear_monster_count();
  static const int kMonsterCountFieldNumber = 11;
  ::google::protobuf::uint32 monster_count() const;
  void set_monster_count(::google::protobuf::uint32 value);

  // uint32 max_box_count = 14;
  void clear_max_box_count();
  static const int kMaxBoxCountFieldNumber = 14;
  ::google::protobuf::uint32 max_box_count() const;
  void set_max_box_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGallerySalvageEscortInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 max_monster_count_;
  ::google::protobuf::uint32 box_count_;
  ::google::protobuf::uint32 monster_count_;
  ::google::protobuf::uint32 max_box_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryCrystalLinkInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryCrystalLinkInfo) */ {
 public:
  SceneGalleryCrystalLinkInfo();
  virtual ~SceneGalleryCrystalLinkInfo();

  SceneGalleryCrystalLinkInfo(const SceneGalleryCrystalLinkInfo& from);

  inline SceneGalleryCrystalLinkInfo& operator=(const SceneGalleryCrystalLinkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryCrystalLinkInfo(SceneGalleryCrystalLinkInfo&& from) noexcept
    : SceneGalleryCrystalLinkInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryCrystalLinkInfo& operator=(SceneGalleryCrystalLinkInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryCrystalLinkInfo& default_instance();

  static inline const SceneGalleryCrystalLinkInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryCrystalLinkInfo*>(
               &_SceneGalleryCrystalLinkInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SceneGalleryCrystalLinkInfo* other);
  friend void swap(SceneGalleryCrystalLinkInfo& a, SceneGalleryCrystalLinkInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryCrystalLinkInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryCrystalLinkInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryCrystalLinkInfo& from);
  void MergeFrom(const SceneGalleryCrystalLinkInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryCrystalLinkInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 score = 10;
  void clear_score();
  static const int kScoreFieldNumber = 10;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryCrystalLinkInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryIrodoriMasterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryIrodoriMasterInfo) */ {
 public:
  SceneGalleryIrodoriMasterInfo();
  virtual ~SceneGalleryIrodoriMasterInfo();

  SceneGalleryIrodoriMasterInfo(const SceneGalleryIrodoriMasterInfo& from);

  inline SceneGalleryIrodoriMasterInfo& operator=(const SceneGalleryIrodoriMasterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryIrodoriMasterInfo(SceneGalleryIrodoriMasterInfo&& from) noexcept
    : SceneGalleryIrodoriMasterInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryIrodoriMasterInfo& operator=(SceneGalleryIrodoriMasterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryIrodoriMasterInfo& default_instance();

  static inline const SceneGalleryIrodoriMasterInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryIrodoriMasterInfo*>(
               &_SceneGalleryIrodoriMasterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SceneGalleryIrodoriMasterInfo* other);
  friend void swap(SceneGalleryIrodoriMasterInfo& a, SceneGalleryIrodoriMasterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryIrodoriMasterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryIrodoriMasterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryIrodoriMasterInfo& from);
  void MergeFrom(const SceneGalleryIrodoriMasterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryIrodoriMasterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 difficulty = 1;
  void clear_difficulty();
  static const int kDifficultyFieldNumber = 1;
  ::google::protobuf::uint32 difficulty() const;
  void set_difficulty(::google::protobuf::uint32 value);

  // bool is_cg_viewed = 5;
  void clear_is_cg_viewed();
  static const int kIsCgViewedFieldNumber = 5;
  bool is_cg_viewed() const;
  void set_is_cg_viewed(bool value);

  // uint32 level_id = 8;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 8;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryIrodoriMasterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 difficulty_;
  bool is_cg_viewed_;
  ::google::protobuf::uint32 level_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryHomeBalloonInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryHomeBalloonInfo) */ {
 public:
  SceneGalleryHomeBalloonInfo();
  virtual ~SceneGalleryHomeBalloonInfo();

  SceneGalleryHomeBalloonInfo(const SceneGalleryHomeBalloonInfo& from);

  inline SceneGalleryHomeBalloonInfo& operator=(const SceneGalleryHomeBalloonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryHomeBalloonInfo(SceneGalleryHomeBalloonInfo&& from) noexcept
    : SceneGalleryHomeBalloonInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryHomeBalloonInfo& operator=(SceneGalleryHomeBalloonInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryHomeBalloonInfo& default_instance();

  static inline const SceneGalleryHomeBalloonInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryHomeBalloonInfo*>(
               &_SceneGalleryHomeBalloonInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(SceneGalleryHomeBalloonInfo* other);
  friend void swap(SceneGalleryHomeBalloonInfo& a, SceneGalleryHomeBalloonInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryHomeBalloonInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryHomeBalloonInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryHomeBalloonInfo& from);
  void MergeFrom(const SceneGalleryHomeBalloonInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryHomeBalloonInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 score = 7;
  void clear_score();
  static const int kScoreFieldNumber = 7;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryHomeBalloonInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryLuminanceStoneChallengeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryLuminanceStoneChallengeInfo) */ {
 public:
  SceneGalleryLuminanceStoneChallengeInfo();
  virtual ~SceneGalleryLuminanceStoneChallengeInfo();

  SceneGalleryLuminanceStoneChallengeInfo(const SceneGalleryLuminanceStoneChallengeInfo& from);

  inline SceneGalleryLuminanceStoneChallengeInfo& operator=(const SceneGalleryLuminanceStoneChallengeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryLuminanceStoneChallengeInfo(SceneGalleryLuminanceStoneChallengeInfo&& from) noexcept
    : SceneGalleryLuminanceStoneChallengeInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryLuminanceStoneChallengeInfo& operator=(SceneGalleryLuminanceStoneChallengeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryLuminanceStoneChallengeInfo& default_instance();

  static inline const SceneGalleryLuminanceStoneChallengeInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryLuminanceStoneChallengeInfo*>(
               &_SceneGalleryLuminanceStoneChallengeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(SceneGalleryLuminanceStoneChallengeInfo* other);
  friend void swap(SceneGalleryLuminanceStoneChallengeInfo& a, SceneGalleryLuminanceStoneChallengeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryLuminanceStoneChallengeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryLuminanceStoneChallengeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryLuminanceStoneChallengeInfo& from);
  void MergeFrom(const SceneGalleryLuminanceStoneChallengeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryLuminanceStoneChallengeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 clean_mud_count = 2;
  void clear_clean_mud_count();
  static const int kCleanMudCountFieldNumber = 2;
  ::google::protobuf::uint32 clean_mud_count() const;
  void set_clean_mud_count(::google::protobuf::uint32 value);

  // uint32 score = 3;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 kill_monster_count = 5;
  void clear_kill_monster_count();
  static const int kKillMonsterCountFieldNumber = 5;
  ::google::protobuf::uint32 kill_monster_count() const;
  void set_kill_monster_count(::google::protobuf::uint32 value);

  // uint32 kill_special_monster_count = 6;
  void clear_kill_special_monster_count();
  static const int kKillSpecialMonsterCountFieldNumber = 6;
  ::google::protobuf::uint32 kill_special_monster_count() const;
  void set_kill_special_monster_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryLuminanceStoneChallengeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 clean_mud_count_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kill_monster_count_;
  ::google::protobuf::uint32 kill_special_monster_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneGalleryHomeSeekFurnitureInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryHomeSeekFurnitureInfo) */ {
 public:
  SceneGalleryHomeSeekFurnitureInfo();
  virtual ~SceneGalleryHomeSeekFurnitureInfo();

  SceneGalleryHomeSeekFurnitureInfo(const SceneGalleryHomeSeekFurnitureInfo& from);

  inline SceneGalleryHomeSeekFurnitureInfo& operator=(const SceneGalleryHomeSeekFurnitureInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryHomeSeekFurnitureInfo(SceneGalleryHomeSeekFurnitureInfo&& from) noexcept
    : SceneGalleryHomeSeekFurnitureInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryHomeSeekFurnitureInfo& operator=(SceneGalleryHomeSeekFurnitureInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryHomeSeekFurnitureInfo& default_instance();

  static inline const SceneGalleryHomeSeekFurnitureInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryHomeSeekFurnitureInfo*>(
               &_SceneGalleryHomeSeekFurnitureInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(SceneGalleryHomeSeekFurnitureInfo* other);
  friend void swap(SceneGalleryHomeSeekFurnitureInfo& a, SceneGalleryHomeSeekFurnitureInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryHomeSeekFurnitureInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryHomeSeekFurnitureInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryHomeSeekFurnitureInfo& from);
  void MergeFrom(const SceneGalleryHomeSeekFurnitureInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryHomeSeekFurnitureInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> player_score_map = 8;
  int player_score_map_size() const;
  void clear_player_score_map();
  static const int kPlayerScoreMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      player_score_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_player_score_map();

  // uint32 cur_tide_duration_time = 12;
  void clear_cur_tide_duration_time();
  static const int kCurTideDurationTimeFieldNumber = 12;
  ::google::protobuf::uint32 cur_tide_duration_time() const;
  void set_cur_tide_duration_time(::google::protobuf::uint32 value);

  // uint32 cur_tide_left_num = 6;
  void clear_cur_tide_left_num();
  static const int kCurTideLeftNumFieldNumber = 6;
  ::google::protobuf::uint32 cur_tide_left_num() const;
  void set_cur_tide_left_num(::google::protobuf::uint32 value);

  // uint32 cur_tide_total_num = 9;
  void clear_cur_tide_total_num();
  static const int kCurTideTotalNumFieldNumber = 9;
  ::google::protobuf::uint32 cur_tide_total_num() const;
  void set_cur_tide_total_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryHomeSeekFurnitureInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry : public ::google::protobuf::internal::MapEntry<SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry();
    SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneGalleryHomeSeekFurnitureInfo_PlayerScoreMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > player_score_map_;
  private:
  ::google::protobuf::uint32 cur_tide_duration_time_;
  ::google::protobuf::uint32 cur_tide_left_num_;
  ::google::protobuf::uint32 cur_tide_total_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryIslandPartyDownHillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryIslandPartyDownHillInfo) */ {
 public:
  SceneGalleryIslandPartyDownHillInfo();
  virtual ~SceneGalleryIslandPartyDownHillInfo();

  SceneGalleryIslandPartyDownHillInfo(const SceneGalleryIslandPartyDownHillInfo& from);

  inline SceneGalleryIslandPartyDownHillInfo& operator=(const SceneGalleryIslandPartyDownHillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryIslandPartyDownHillInfo(SceneGalleryIslandPartyDownHillInfo&& from) noexcept
    : SceneGalleryIslandPartyDownHillInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryIslandPartyDownHillInfo& operator=(SceneGalleryIslandPartyDownHillInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryIslandPartyDownHillInfo& default_instance();

  static inline const SceneGalleryIslandPartyDownHillInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryIslandPartyDownHillInfo*>(
               &_SceneGalleryIslandPartyDownHillInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(SceneGalleryIslandPartyDownHillInfo* other);
  friend void swap(SceneGalleryIslandPartyDownHillInfo& a, SceneGalleryIslandPartyDownHillInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryIslandPartyDownHillInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryIslandPartyDownHillInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryIslandPartyDownHillInfo& from);
  void MergeFrom(const SceneGalleryIslandPartyDownHillInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryIslandPartyDownHillInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 max_kill_monster_count = 5;
  void clear_max_kill_monster_count();
  static const int kMaxKillMonsterCountFieldNumber = 5;
  ::google::protobuf::uint32 max_kill_monster_count() const;
  void set_max_kill_monster_count(::google::protobuf::uint32 value);

  // uint32 coin = 13;
  void clear_coin();
  static const int kCoinFieldNumber = 13;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // uint32 total_kill_monster_count = 14;
  void clear_total_kill_monster_count();
  static const int kTotalKillMonsterCountFieldNumber = 14;
  ::google::protobuf::uint32 total_kill_monster_count() const;
  void set_total_kill_monster_count(::google::protobuf::uint32 value);

  // .proto.GalleryStartSource start_source = 15;
  void clear_start_source();
  static const int kStartSourceFieldNumber = 15;
  ::proto::GalleryStartSource start_source() const;
  void set_start_source(::proto::GalleryStartSource value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryIslandPartyDownHillInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 max_kill_monster_count_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 total_kill_monster_count_;
  int start_source_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGallerySummerTimeV2BoatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGallerySummerTimeV2BoatInfo) */ {
 public:
  SceneGallerySummerTimeV2BoatInfo();
  virtual ~SceneGallerySummerTimeV2BoatInfo();

  SceneGallerySummerTimeV2BoatInfo(const SceneGallerySummerTimeV2BoatInfo& from);

  inline SceneGallerySummerTimeV2BoatInfo& operator=(const SceneGallerySummerTimeV2BoatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGallerySummerTimeV2BoatInfo(SceneGallerySummerTimeV2BoatInfo&& from) noexcept
    : SceneGallerySummerTimeV2BoatInfo() {
    *this = ::std::move(from);
  }

  inline SceneGallerySummerTimeV2BoatInfo& operator=(SceneGallerySummerTimeV2BoatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGallerySummerTimeV2BoatInfo& default_instance();

  static inline const SceneGallerySummerTimeV2BoatInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGallerySummerTimeV2BoatInfo*>(
               &_SceneGallerySummerTimeV2BoatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(SceneGallerySummerTimeV2BoatInfo* other);
  friend void swap(SceneGallerySummerTimeV2BoatInfo& a, SceneGallerySummerTimeV2BoatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGallerySummerTimeV2BoatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGallerySummerTimeV2BoatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGallerySummerTimeV2BoatInfo& from);
  void MergeFrom(const SceneGallerySummerTimeV2BoatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGallerySummerTimeV2BoatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 param3 = 3;
  void clear_param3();
  static const int kParam3FieldNumber = 3;
  ::google::protobuf::uint32 param3() const;
  void set_param3(::google::protobuf::uint32 value);

  // uint32 param2 = 7;
  void clear_param2();
  static const int kParam2FieldNumber = 7;
  ::google::protobuf::uint32 param2() const;
  void set_param2(::google::protobuf::uint32 value);

  // uint32 used_time = 11;
  void clear_used_time();
  static const int kUsedTimeFieldNumber = 11;
  ::google::protobuf::uint32 used_time() const;
  void set_used_time(::google::protobuf::uint32 value);

  // uint32 param1 = 15;
  void clear_param1();
  static const int kParam1FieldNumber = 15;
  ::google::protobuf::uint32 param1() const;
  void set_param1(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGallerySummerTimeV2BoatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 param3_;
  ::google::protobuf::uint32 param2_;
  ::google::protobuf::uint32 used_time_;
  ::google::protobuf::uint32 param1_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryIslandPartyRaftInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryIslandPartyRaftInfo) */ {
 public:
  SceneGalleryIslandPartyRaftInfo();
  virtual ~SceneGalleryIslandPartyRaftInfo();

  SceneGalleryIslandPartyRaftInfo(const SceneGalleryIslandPartyRaftInfo& from);

  inline SceneGalleryIslandPartyRaftInfo& operator=(const SceneGalleryIslandPartyRaftInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryIslandPartyRaftInfo(SceneGalleryIslandPartyRaftInfo&& from) noexcept
    : SceneGalleryIslandPartyRaftInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryIslandPartyRaftInfo& operator=(SceneGalleryIslandPartyRaftInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryIslandPartyRaftInfo& default_instance();

  static inline const SceneGalleryIslandPartyRaftInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryIslandPartyRaftInfo*>(
               &_SceneGalleryIslandPartyRaftInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(SceneGalleryIslandPartyRaftInfo* other);
  friend void swap(SceneGalleryIslandPartyRaftInfo& a, SceneGalleryIslandPartyRaftInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryIslandPartyRaftInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryIslandPartyRaftInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryIslandPartyRaftInfo& from);
  void MergeFrom(const SceneGalleryIslandPartyRaftInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryIslandPartyRaftInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 component = 1;
  void clear_component();
  static const int kComponentFieldNumber = 1;
  ::google::protobuf::uint32 component() const;
  void set_component(::google::protobuf::uint32 value);

  // uint32 raft_entity_id = 4;
  void clear_raft_entity_id();
  static const int kRaftEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 raft_entity_id() const;
  void set_raft_entity_id(::google::protobuf::uint32 value);

  // uint32 coin = 6;
  void clear_coin();
  static const int kCoinFieldNumber = 6;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // .proto.GalleryStartSource start_source = 7;
  void clear_start_source();
  static const int kStartSourceFieldNumber = 7;
  ::proto::GalleryStartSource start_source() const;
  void set_start_source(::proto::GalleryStartSource value);

  // uint32 point_id = 12;
  void clear_point_id();
  static const int kPointIdFieldNumber = 12;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 fuel = 15;
  void clear_fuel();
  static const int kFuelFieldNumber = 15;
  ::google::protobuf::uint32 fuel() const;
  void set_fuel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryIslandPartyRaftInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 component_;
  ::google::protobuf::uint32 raft_entity_id_;
  ::google::protobuf::uint32 coin_;
  int start_source_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 fuel_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryIslandPartySailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryIslandPartySailInfo) */ {
 public:
  SceneGalleryIslandPartySailInfo();
  virtual ~SceneGalleryIslandPartySailInfo();

  SceneGalleryIslandPartySailInfo(const SceneGalleryIslandPartySailInfo& from);

  inline SceneGalleryIslandPartySailInfo& operator=(const SceneGalleryIslandPartySailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryIslandPartySailInfo(SceneGalleryIslandPartySailInfo&& from) noexcept
    : SceneGalleryIslandPartySailInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryIslandPartySailInfo& operator=(SceneGalleryIslandPartySailInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryIslandPartySailInfo& default_instance();

  static inline const SceneGalleryIslandPartySailInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryIslandPartySailInfo*>(
               &_SceneGalleryIslandPartySailInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(SceneGalleryIslandPartySailInfo* other);
  friend void swap(SceneGalleryIslandPartySailInfo& a, SceneGalleryIslandPartySailInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryIslandPartySailInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryIslandPartySailInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryIslandPartySailInfo& from);
  void MergeFrom(const SceneGalleryIslandPartySailInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryIslandPartySailInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GalleryStartSource start_source = 1;
  void clear_start_source();
  static const int kStartSourceFieldNumber = 1;
  ::proto::GalleryStartSource start_source() const;
  void set_start_source(::proto::GalleryStartSource value);

  // uint32 max_kill_progress = 8;
  void clear_max_kill_progress();
  static const int kMaxKillProgressFieldNumber = 8;
  ::google::protobuf::uint32 max_kill_progress() const;
  void set_max_kill_progress(::google::protobuf::uint32 value);

  // uint32 coin = 15;
  void clear_coin();
  static const int kCoinFieldNumber = 15;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // uint32 clean_progress = 10;
  void clear_clean_progress();
  static const int kCleanProgressFieldNumber = 10;
  ::google::protobuf::uint32 clean_progress() const;
  void set_clean_progress(::google::protobuf::uint32 value);

  // uint32 kill_progress = 11;
  void clear_kill_progress();
  static const int kKillProgressFieldNumber = 11;
  ::google::protobuf::uint32 kill_progress() const;
  void set_kill_progress(::google::protobuf::uint32 value);

  // .proto.IslandPartySailStage stage = 12;
  void clear_stage();
  static const int kStageFieldNumber = 12;
  ::proto::IslandPartySailStage stage() const;
  void set_stage(::proto::IslandPartySailStage value);

  // uint32 max_clean_progress = 14;
  void clear_max_clean_progress();
  static const int kMaxCleanProgressFieldNumber = 14;
  ::google::protobuf::uint32 max_clean_progress() const;
  void set_max_clean_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryIslandPartySailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int start_source_;
  ::google::protobuf::uint32 max_kill_progress_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 clean_progress_;
  ::google::protobuf::uint32 kill_progress_;
  int stage_;
  ::google::protobuf::uint32 max_clean_progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryInstableSprayBuffInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryInstableSprayBuffInfo) */ {
 public:
  SceneGalleryInstableSprayBuffInfo();
  virtual ~SceneGalleryInstableSprayBuffInfo();

  SceneGalleryInstableSprayBuffInfo(const SceneGalleryInstableSprayBuffInfo& from);

  inline SceneGalleryInstableSprayBuffInfo& operator=(const SceneGalleryInstableSprayBuffInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryInstableSprayBuffInfo(SceneGalleryInstableSprayBuffInfo&& from) noexcept
    : SceneGalleryInstableSprayBuffInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryInstableSprayBuffInfo& operator=(SceneGalleryInstableSprayBuffInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryInstableSprayBuffInfo& default_instance();

  static inline const SceneGalleryInstableSprayBuffInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryInstableSprayBuffInfo*>(
               &_SceneGalleryInstableSprayBuffInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SceneGalleryInstableSprayBuffInfo* other);
  friend void swap(SceneGalleryInstableSprayBuffInfo& a, SceneGalleryInstableSprayBuffInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryInstableSprayBuffInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryInstableSprayBuffInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryInstableSprayBuffInfo& from);
  void MergeFrom(const SceneGalleryInstableSprayBuffInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryInstableSprayBuffInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 buff_max_time = 4;
  void clear_buff_max_time();
  static const int kBuffMaxTimeFieldNumber = 4;
  ::google::protobuf::uint64 buff_max_time() const;
  void set_buff_max_time(::google::protobuf::uint64 value);

  // uint32 buff_id = 6;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 6;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // uint64 buff_end_time = 9;
  void clear_buff_end_time();
  static const int kBuffEndTimeFieldNumber = 9;
  ::google::protobuf::uint64 buff_end_time() const;
  void set_buff_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryInstableSprayBuffInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 buff_max_time_;
  ::google::protobuf::uint32 buff_id_;
  ::google::protobuf::uint64 buff_end_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryInstaleSprayInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryInstaleSprayInfo) */ {
 public:
  SceneGalleryInstaleSprayInfo();
  virtual ~SceneGalleryInstaleSprayInfo();

  SceneGalleryInstaleSprayInfo(const SceneGalleryInstaleSprayInfo& from);

  inline SceneGalleryInstaleSprayInfo& operator=(const SceneGalleryInstaleSprayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryInstaleSprayInfo(SceneGalleryInstaleSprayInfo&& from) noexcept
    : SceneGalleryInstaleSprayInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryInstaleSprayInfo& operator=(SceneGalleryInstaleSprayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryInstaleSprayInfo& default_instance();

  static inline const SceneGalleryInstaleSprayInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryInstaleSprayInfo*>(
               &_SceneGalleryInstaleSprayInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(SceneGalleryInstaleSprayInfo* other);
  friend void swap(SceneGalleryInstaleSprayInfo& a, SceneGalleryInstaleSprayInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryInstaleSprayInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryInstaleSprayInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryInstaleSprayInfo& from);
  void MergeFrom(const SceneGalleryInstaleSprayInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryInstaleSprayInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneGalleryInstableSprayBuffInfo buff_info_list = 12;
  int buff_info_list_size() const;
  void clear_buff_info_list();
  static const int kBuffInfoListFieldNumber = 12;
  const ::proto::SceneGalleryInstableSprayBuffInfo& buff_info_list(int index) const;
  ::proto::SceneGalleryInstableSprayBuffInfo* mutable_buff_info_list(int index);
  ::proto::SceneGalleryInstableSprayBuffInfo* add_buff_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInstableSprayBuffInfo >*
      mutable_buff_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInstableSprayBuffInfo >&
      buff_info_list() const;

  // uint32 score = 5;
  void clear_score();
  static const int kScoreFieldNumber = 5;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryInstaleSprayInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInstableSprayBuffInfo > buff_info_list_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryTreasureSeelieInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryTreasureSeelieInfo) */ {
 public:
  SceneGalleryTreasureSeelieInfo();
  virtual ~SceneGalleryTreasureSeelieInfo();

  SceneGalleryTreasureSeelieInfo(const SceneGalleryTreasureSeelieInfo& from);

  inline SceneGalleryTreasureSeelieInfo& operator=(const SceneGalleryTreasureSeelieInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryTreasureSeelieInfo(SceneGalleryTreasureSeelieInfo&& from) noexcept
    : SceneGalleryTreasureSeelieInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryTreasureSeelieInfo& operator=(SceneGalleryTreasureSeelieInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryTreasureSeelieInfo& default_instance();

  static inline const SceneGalleryTreasureSeelieInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryTreasureSeelieInfo*>(
               &_SceneGalleryTreasureSeelieInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(SceneGalleryTreasureSeelieInfo* other);
  friend void swap(SceneGalleryTreasureSeelieInfo& a, SceneGalleryTreasureSeelieInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryTreasureSeelieInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryTreasureSeelieInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryTreasureSeelieInfo& from);
  void MergeFrom(const SceneGalleryTreasureSeelieInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryTreasureSeelieInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 goal = 14;
  void clear_goal();
  static const int kGoalFieldNumber = 14;
  ::google::protobuf::uint32 goal() const;
  void set_goal(::google::protobuf::uint32 value);

  // uint32 progress = 15;
  void clear_progress();
  static const int kProgressFieldNumber = 15;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryTreasureSeelieInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 goal_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryWindFieldInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryWindFieldInfo) */ {
 public:
  SceneGalleryWindFieldInfo();
  virtual ~SceneGalleryWindFieldInfo();

  SceneGalleryWindFieldInfo(const SceneGalleryWindFieldInfo& from);

  inline SceneGalleryWindFieldInfo& operator=(const SceneGalleryWindFieldInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryWindFieldInfo(SceneGalleryWindFieldInfo&& from) noexcept
    : SceneGalleryWindFieldInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryWindFieldInfo& operator=(SceneGalleryWindFieldInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryWindFieldInfo& default_instance();

  static inline const SceneGalleryWindFieldInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryWindFieldInfo*>(
               &_SceneGalleryWindFieldInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SceneGalleryWindFieldInfo* other);
  friend void swap(SceneGalleryWindFieldInfo& a, SceneGalleryWindFieldInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryWindFieldInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryWindFieldInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryWindFieldInfo& from);
  void MergeFrom(const SceneGalleryWindFieldInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryWindFieldInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 coin_num = 1;
  void clear_coin_num();
  static const int kCoinNumFieldNumber = 1;
  ::google::protobuf::uint32 coin_num() const;
  void set_coin_num(::google::protobuf::uint32 value);

  // uint32 challenge_total_time = 4;
  void clear_challenge_total_time();
  static const int kChallengeTotalTimeFieldNumber = 4;
  ::google::protobuf::uint32 challenge_total_time() const;
  void set_challenge_total_time(::google::protobuf::uint32 value);

  // uint32 killed_monster_num = 5;
  void clear_killed_monster_num();
  static const int kKilledMonsterNumFieldNumber = 5;
  ::google::protobuf::uint32 killed_monster_num() const;
  void set_killed_monster_num(::google::protobuf::uint32 value);

  // uint32 challenge_ball_cur_count = 9;
  void clear_challenge_ball_cur_count();
  static const int kChallengeBallCurCountFieldNumber = 9;
  ::google::protobuf::uint32 challenge_ball_cur_count() const;
  void set_challenge_ball_cur_count(::google::protobuf::uint32 value);

  // uint32 element_ball_num = 10;
  void clear_element_ball_num();
  static const int kElementBallNumFieldNumber = 10;
  ::google::protobuf::uint32 element_ball_num() const;
  void set_element_ball_num(::google::protobuf::uint32 value);

  // uint32 challenge_ball_max_count = 12;
  void clear_challenge_ball_max_count();
  static const int kChallengeBallMaxCountFieldNumber = 12;
  ::google::protobuf::uint32 challenge_ball_max_count() const;
  void set_challenge_ball_max_count(::google::protobuf::uint32 value);

  // uint32 challenge_timestamp = 13;
  void clear_challenge_timestamp();
  static const int kChallengeTimestampFieldNumber = 13;
  ::google::protobuf::uint32 challenge_timestamp() const;
  void set_challenge_timestamp(::google::protobuf::uint32 value);

  // uint32 show_id = 15;
  void clear_show_id();
  static const int kShowIdFieldNumber = 15;
  ::google::protobuf::uint32 show_id() const;
  void set_show_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryWindFieldInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 coin_num_;
  ::google::protobuf::uint32 challenge_total_time_;
  ::google::protobuf::uint32 killed_monster_num_;
  ::google::protobuf::uint32 challenge_ball_cur_count_;
  ::google::protobuf::uint32 element_ball_num_;
  ::google::protobuf::uint32 challenge_ball_max_count_;
  ::google::protobuf::uint32 challenge_timestamp_;
  ::google::protobuf::uint32 show_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryFungusFighterTrainingInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryFungusFighterTrainingInfo) */ {
 public:
  SceneGalleryFungusFighterTrainingInfo();
  virtual ~SceneGalleryFungusFighterTrainingInfo();

  SceneGalleryFungusFighterTrainingInfo(const SceneGalleryFungusFighterTrainingInfo& from);

  inline SceneGalleryFungusFighterTrainingInfo& operator=(const SceneGalleryFungusFighterTrainingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryFungusFighterTrainingInfo(SceneGalleryFungusFighterTrainingInfo&& from) noexcept
    : SceneGalleryFungusFighterTrainingInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryFungusFighterTrainingInfo& operator=(SceneGalleryFungusFighterTrainingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryFungusFighterTrainingInfo& default_instance();

  static inline const SceneGalleryFungusFighterTrainingInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryFungusFighterTrainingInfo*>(
               &_SceneGalleryFungusFighterTrainingInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(SceneGalleryFungusFighterTrainingInfo* other);
  friend void swap(SceneGalleryFungusFighterTrainingInfo& a, SceneGalleryFungusFighterTrainingInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryFungusFighterTrainingInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryFungusFighterTrainingInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryFungusFighterTrainingInfo& from);
  void MergeFrom(const SceneGalleryFungusFighterTrainingInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryFungusFighterTrainingInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 buff_id = 1;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 1;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // uint32 max_monster_count = 4;
  void clear_max_monster_count();
  static const int kMaxMonsterCountFieldNumber = 4;
  ::google::protobuf::uint32 max_monster_count() const;
  void set_max_monster_count(::google::protobuf::uint32 value);

  // uint32 rest_skill_count = 5;
  void clear_rest_skill_count();
  static const int kRestSkillCountFieldNumber = 5;
  ::google::protobuf::uint32 rest_skill_count() const;
  void set_rest_skill_count(::google::protobuf::uint32 value);

  // uint32 killed_monster_count = 9;
  void clear_killed_monster_count();
  static const int kKilledMonsterCountFieldNumber = 9;
  ::google::protobuf::uint32 killed_monster_count() const;
  void set_killed_monster_count(::google::protobuf::uint32 value);

  // uint32 buff_last_time = 14;
  void clear_buff_last_time();
  static const int kBuffLastTimeFieldNumber = 14;
  ::google::protobuf::uint32 buff_last_time() const;
  void set_buff_last_time(::google::protobuf::uint32 value);

  // uint32 max_skill_count = 10;
  void clear_max_skill_count();
  static const int kMaxSkillCountFieldNumber = 10;
  ::google::protobuf::uint32 max_skill_count() const;
  void set_max_skill_count(::google::protobuf::uint32 value);

  // uint32 buff_start_time = 13;
  void clear_buff_start_time();
  static const int kBuffStartTimeFieldNumber = 13;
  ::google::protobuf::uint32 buff_start_time() const;
  void set_buff_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryFungusFighterTrainingInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 buff_id_;
  ::google::protobuf::uint32 max_monster_count_;
  ::google::protobuf::uint32 rest_skill_count_;
  ::google::protobuf::uint32 killed_monster_count_;
  ::google::protobuf::uint32 buff_last_time_;
  ::google::protobuf::uint32 max_skill_count_;
  ::google::protobuf::uint32 buff_start_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryFungusFighterCaptureInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryFungusFighterCaptureInfo) */ {
 public:
  SceneGalleryFungusFighterCaptureInfo();
  virtual ~SceneGalleryFungusFighterCaptureInfo();

  SceneGalleryFungusFighterCaptureInfo(const SceneGalleryFungusFighterCaptureInfo& from);

  inline SceneGalleryFungusFighterCaptureInfo& operator=(const SceneGalleryFungusFighterCaptureInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryFungusFighterCaptureInfo(SceneGalleryFungusFighterCaptureInfo&& from) noexcept
    : SceneGalleryFungusFighterCaptureInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryFungusFighterCaptureInfo& operator=(SceneGalleryFungusFighterCaptureInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryFungusFighterCaptureInfo& default_instance();

  static inline const SceneGalleryFungusFighterCaptureInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryFungusFighterCaptureInfo*>(
               &_SceneGalleryFungusFighterCaptureInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(SceneGalleryFungusFighterCaptureInfo* other);
  friend void swap(SceneGalleryFungusFighterCaptureInfo& a, SceneGalleryFungusFighterCaptureInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryFungusFighterCaptureInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryFungusFighterCaptureInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryFungusFighterCaptureInfo& from);
  void MergeFrom(const SceneGalleryFungusFighterCaptureInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryFungusFighterCaptureInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_hide_progress = 13;
  void clear_is_hide_progress();
  static const int kIsHideProgressFieldNumber = 13;
  bool is_hide_progress() const;
  void set_is_hide_progress(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryFungusFighterCaptureInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_hide_progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryEffigyChallengeV2Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryEffigyChallengeV2Info) */ {
 public:
  SceneGalleryEffigyChallengeV2Info();
  virtual ~SceneGalleryEffigyChallengeV2Info();

  SceneGalleryEffigyChallengeV2Info(const SceneGalleryEffigyChallengeV2Info& from);

  inline SceneGalleryEffigyChallengeV2Info& operator=(const SceneGalleryEffigyChallengeV2Info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryEffigyChallengeV2Info(SceneGalleryEffigyChallengeV2Info&& from) noexcept
    : SceneGalleryEffigyChallengeV2Info() {
    *this = ::std::move(from);
  }

  inline SceneGalleryEffigyChallengeV2Info& operator=(SceneGalleryEffigyChallengeV2Info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryEffigyChallengeV2Info& default_instance();

  static inline const SceneGalleryEffigyChallengeV2Info* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryEffigyChallengeV2Info*>(
               &_SceneGalleryEffigyChallengeV2Info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(SceneGalleryEffigyChallengeV2Info* other);
  friend void swap(SceneGalleryEffigyChallengeV2Info& a, SceneGalleryEffigyChallengeV2Info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryEffigyChallengeV2Info* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryEffigyChallengeV2Info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryEffigyChallengeV2Info& from);
  void MergeFrom(const SceneGalleryEffigyChallengeV2Info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryEffigyChallengeV2Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 total_target_kill_cnt = 15;
  void clear_total_target_kill_cnt();
  static const int kTotalTargetKillCntFieldNumber = 15;
  ::google::protobuf::uint32 total_target_kill_cnt() const;
  void set_total_target_kill_cnt(::google::protobuf::uint32 value);

  // uint32 t_remain_use_time = 6;
  void clear_t_remain_use_time();
  static const int kTRemainUseTimeFieldNumber = 6;
  ::google::protobuf::uint32 t_remain_use_time() const;
  void set_t_remain_use_time(::google::protobuf::uint32 value);

  // uint32 boss_violent_level = 9;
  void clear_boss_violent_level();
  static const int kBossViolentLevelFieldNumber = 9;
  ::google::protobuf::uint32 boss_violent_level() const;
  void set_boss_violent_level(::google::protobuf::uint32 value);

  // uint32 killed_monster_cnt = 10;
  void clear_killed_monster_cnt();
  static const int kKilledMonsterCntFieldNumber = 10;
  ::google::protobuf::uint32 killed_monster_cnt() const;
  void set_killed_monster_cnt(::google::protobuf::uint32 value);

  // uint32 scene_start_time = 14;
  void clear_scene_start_time();
  static const int kSceneStartTimeFieldNumber = 14;
  ::google::protobuf::uint32 scene_start_time() const;
  void set_scene_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryEffigyChallengeV2Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 total_target_kill_cnt_;
  ::google::protobuf::uint32 t_remain_use_time_;
  ::google::protobuf::uint32 boss_violent_level_;
  ::google::protobuf::uint32 killed_monster_cnt_;
  ::google::protobuf::uint32 scene_start_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryCharAmusementInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryCharAmusementInfo) */ {
 public:
  SceneGalleryCharAmusementInfo();
  virtual ~SceneGalleryCharAmusementInfo();

  SceneGalleryCharAmusementInfo(const SceneGalleryCharAmusementInfo& from);

  inline SceneGalleryCharAmusementInfo& operator=(const SceneGalleryCharAmusementInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryCharAmusementInfo(SceneGalleryCharAmusementInfo&& from) noexcept
    : SceneGalleryCharAmusementInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryCharAmusementInfo& operator=(SceneGalleryCharAmusementInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryCharAmusementInfo& default_instance();

  static inline const SceneGalleryCharAmusementInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryCharAmusementInfo*>(
               &_SceneGalleryCharAmusementInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(SceneGalleryCharAmusementInfo* other);
  friend void swap(SceneGalleryCharAmusementInfo& a, SceneGalleryCharAmusementInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryCharAmusementInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryCharAmusementInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryCharAmusementInfo& from);
  void MergeFrom(const SceneGalleryCharAmusementInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryCharAmusementInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_last_level = 2;
  void clear_is_last_level();
  static const int kIsLastLevelFieldNumber = 2;
  bool is_last_level() const;
  void set_is_last_level(bool value);

  // bool is_finish = 10;
  void clear_is_finish();
  static const int kIsFinishFieldNumber = 10;
  bool is_finish() const;
  void set_is_finish(bool value);

  // bool is_success = 1;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 1;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 max_score = 9;
  void clear_max_score();
  static const int kMaxScoreFieldNumber = 9;
  ::google::protobuf::uint32 max_score() const;
  void set_max_score(::google::protobuf::uint32 value);

  // uint32 cur_score = 14;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 14;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryCharAmusementInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_last_level_;
  bool is_finish_;
  bool is_success_;
  ::google::protobuf::uint32 max_score_;
  ::google::protobuf::uint32 cur_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryBrickBreakerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryBrickBreakerInfo) */ {
 public:
  SceneGalleryBrickBreakerInfo();
  virtual ~SceneGalleryBrickBreakerInfo();

  SceneGalleryBrickBreakerInfo(const SceneGalleryBrickBreakerInfo& from);

  inline SceneGalleryBrickBreakerInfo& operator=(const SceneGalleryBrickBreakerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryBrickBreakerInfo(SceneGalleryBrickBreakerInfo&& from) noexcept
    : SceneGalleryBrickBreakerInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryBrickBreakerInfo& operator=(SceneGalleryBrickBreakerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryBrickBreakerInfo& default_instance();

  static inline const SceneGalleryBrickBreakerInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryBrickBreakerInfo*>(
               &_SceneGalleryBrickBreakerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(SceneGalleryBrickBreakerInfo* other);
  friend void swap(SceneGalleryBrickBreakerInfo& a, SceneGalleryBrickBreakerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryBrickBreakerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryBrickBreakerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryBrickBreakerInfo& from);
  void MergeFrom(const SceneGalleryBrickBreakerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryBrickBreakerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 combo = 1;
  void clear_combo();
  static const int kComboFieldNumber = 1;
  ::google::protobuf::uint32 combo() const;
  void set_combo(::google::protobuf::uint32 value);

  // uint32 fever = 2;
  void clear_fever();
  static const int kFeverFieldNumber = 2;
  ::google::protobuf::uint32 fever() const;
  void set_fever(::google::protobuf::uint32 value);

  // uint32 life_count = 4;
  void clear_life_count();
  static const int kLifeCountFieldNumber = 4;
  ::google::protobuf::uint32 life_count() const;
  void set_life_count(::google::protobuf::uint32 value);

  // uint32 score = 10;
  void clear_score();
  static const int kScoreFieldNumber = 10;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryBrickBreakerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 combo_;
  ::google::protobuf::uint32 fever_;
  ::google::protobuf::uint32 life_count_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryCoinCollectInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryCoinCollectInfo) */ {
 public:
  SceneGalleryCoinCollectInfo();
  virtual ~SceneGalleryCoinCollectInfo();

  SceneGalleryCoinCollectInfo(const SceneGalleryCoinCollectInfo& from);

  inline SceneGalleryCoinCollectInfo& operator=(const SceneGalleryCoinCollectInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryCoinCollectInfo(SceneGalleryCoinCollectInfo&& from) noexcept
    : SceneGalleryCoinCollectInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryCoinCollectInfo& operator=(SceneGalleryCoinCollectInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryCoinCollectInfo& default_instance();

  static inline const SceneGalleryCoinCollectInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryCoinCollectInfo*>(
               &_SceneGalleryCoinCollectInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(SceneGalleryCoinCollectInfo* other);
  friend void swap(SceneGalleryCoinCollectInfo& a, SceneGalleryCoinCollectInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryCoinCollectInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryCoinCollectInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryCoinCollectInfo& from);
  void MergeFrom(const SceneGalleryCoinCollectInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryCoinCollectInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 coin_collect_num = 2;
  void clear_coin_collect_num();
  static const int kCoinCollectNumFieldNumber = 2;
  ::google::protobuf::uint32 coin_collect_num() const;
  void set_coin_collect_num(::google::protobuf::uint32 value);

  // uint32 coin_total_num = 4;
  void clear_coin_total_num();
  static const int kCoinTotalNumFieldNumber = 4;
  ::google::protobuf::uint32 coin_total_num() const;
  void set_coin_total_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryCoinCollectInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 coin_collect_num_;
  ::google::protobuf::uint32 coin_total_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryTeamChainInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryTeamChainInfo) */ {
 public:
  SceneGalleryTeamChainInfo();
  virtual ~SceneGalleryTeamChainInfo();

  SceneGalleryTeamChainInfo(const SceneGalleryTeamChainInfo& from);

  inline SceneGalleryTeamChainInfo& operator=(const SceneGalleryTeamChainInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryTeamChainInfo(SceneGalleryTeamChainInfo&& from) noexcept
    : SceneGalleryTeamChainInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryTeamChainInfo& operator=(SceneGalleryTeamChainInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryTeamChainInfo& default_instance();

  static inline const SceneGalleryTeamChainInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryTeamChainInfo*>(
               &_SceneGalleryTeamChainInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(SceneGalleryTeamChainInfo* other);
  friend void swap(SceneGalleryTeamChainInfo& a, SceneGalleryTeamChainInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryTeamChainInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryTeamChainInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryTeamChainInfo& from);
  void MergeFrom(const SceneGalleryTeamChainInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryTeamChainInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cur_gallery_idx = 3;
  void clear_cur_gallery_idx();
  static const int kCurGalleryIdxFieldNumber = 3;
  ::google::protobuf::uint32 cur_gallery_idx() const;
  void set_cur_gallery_idx(::google::protobuf::uint32 value);

  // uint32 cur_total_score = 7;
  void clear_cur_total_score();
  static const int kCurTotalScoreFieldNumber = 7;
  ::google::protobuf::uint32 cur_total_score() const;
  void set_cur_total_score(::google::protobuf::uint32 value);

  // uint32 gallery_score_end_time = 14;
  void clear_gallery_score_end_time();
  static const int kGalleryScoreEndTimeFieldNumber = 14;
  ::google::protobuf::uint32 gallery_score_end_time() const;
  void set_gallery_score_end_time(::google::protobuf::uint32 value);

  // uint32 total_target_kill_cnt = 10;
  void clear_total_target_kill_cnt();
  static const int kTotalTargetKillCntFieldNumber = 10;
  ::google::protobuf::uint32 total_target_kill_cnt() const;
  void set_total_target_kill_cnt(::google::protobuf::uint32 value);

  // uint32 killed_monster_cnt = 12;
  void clear_killed_monster_cnt();
  static const int kKilledMonsterCntFieldNumber = 12;
  ::google::protobuf::uint32 killed_monster_cnt() const;
  void set_killed_monster_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryTeamChainInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cur_gallery_idx_;
  ::google::protobuf::uint32 cur_total_score_;
  ::google::protobuf::uint32 gallery_score_end_time_;
  ::google::protobuf::uint32 total_target_kill_cnt_;
  ::google::protobuf::uint32 killed_monster_cnt_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryInfo) */ {
 public:
  SceneGalleryInfo();
  virtual ~SceneGalleryInfo();

  SceneGalleryInfo(const SceneGalleryInfo& from);

  inline SceneGalleryInfo& operator=(const SceneGalleryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryInfo(SceneGalleryInfo&& from) noexcept
    : SceneGalleryInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryInfo& operator=(SceneGalleryInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryInfo& default_instance();

  enum InfoCase {
    kBalloonInfo = 14,
    kFallInfo = 7,
    kFlowerInfo = 8,
    kBulletInfo = 13,
    kBrokenFloorInfo = 10,
    kHideAndSeekInfo = 6,
    kBuoyantCombatInfo = 1384,
    kBounceConjuringInfo = 708,
    kHandballInfo = 1997,
    kSumoInfo = 811,
    kSalvagePreventInfo = 1700,
    kSalvageEscortInfo = 759,
    kHomeBalloonInfo = 1034,
    kCrystalLinkInfo = 2004,
    kIrodoriMasterInfo = 1953,
    kLuminanceStoneChallengeInfo = 106,
    kHomeSeekFurnitureInfo = 1456,
    kIslandPartyDownHillInfo = 462,
    kSummerTimeV2BoatInfo = 296,
    kIslandPartyRaftInfo = 1805,
    kIslandPartySailInfo = 1133,
    kInstableSprayInfo = 1196,
    kMuqadasPotionInfo = 865,
    kTreasureSeelieInfo = 1525,
    kVintageHuntingInfo = 254,
    kWindFieldInfo = 1080,
    kFungusFighterTrainingInfo = 1328,
    kEffigyChallengeInfo = 882,
    kFungusFighterCaptureInfo = 422,
    kCharAmusementInfo = 1086,
    kBrickBreakerInfo = 1425,
    kCoinCollectInfo = 1574,
    kTeamChainInfo = 1495,
    INFO_NOT_SET = 0,
  };

  static inline const SceneGalleryInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryInfo*>(
               &_SceneGalleryInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(SceneGalleryInfo* other);
  friend void swap(SceneGalleryInfo& a, SceneGalleryInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryInfo& from);
  void MergeFrom(const SceneGalleryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneGalleryProgressInfo progress_info_list = 4;
  int progress_info_list_size() const;
  void clear_progress_info_list();
  static const int kProgressInfoListFieldNumber = 4;
  const ::proto::SceneGalleryProgressInfo& progress_info_list(int index) const;
  ::proto::SceneGalleryProgressInfo* mutable_progress_info_list(int index);
  ::proto::SceneGalleryProgressInfo* add_progress_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryProgressInfo >*
      mutable_progress_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryProgressInfo >&
      progress_info_list() const;

  // uint32 player_count = 1;
  void clear_player_count();
  static const int kPlayerCountFieldNumber = 1;
  ::google::protobuf::uint32 player_count() const;
  void set_player_count(::google::protobuf::uint32 value);

  // uint32 gallery_id = 2;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 2;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 start_time = 3;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // .proto.GalleryStageType stage = 5;
  void clear_stage();
  static const int kStageFieldNumber = 5;
  ::proto::GalleryStageType stage() const;
  void set_stage(::proto::GalleryStageType value);

  // uint32 pre_start_end_time = 15;
  void clear_pre_start_end_time();
  static const int kPreStartEndTimeFieldNumber = 15;
  ::google::protobuf::uint32 pre_start_end_time() const;
  void set_pre_start_end_time(::google::protobuf::uint32 value);

  // uint32 owner_uid = 9;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 9;
  ::google::protobuf::uint32 owner_uid() const;
  void set_owner_uid(::google::protobuf::uint32 value);

  // uint32 end_time = 11;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 11;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // .proto.SceneGalleryBalloonInfo balloon_info = 14;
  bool has_balloon_info() const;
  void clear_balloon_info();
  static const int kBalloonInfoFieldNumber = 14;
  const ::proto::SceneGalleryBalloonInfo& balloon_info() const;
  ::proto::SceneGalleryBalloonInfo* mutable_balloon_info();
  ::proto::SceneGalleryBalloonInfo* release_balloon_info();
  void set_allocated_balloon_info(::proto::SceneGalleryBalloonInfo* balloon_info);

  // .proto.SceneGalleryFallInfo fall_info = 7;
  bool has_fall_info() const;
  void clear_fall_info();
  static const int kFallInfoFieldNumber = 7;
  const ::proto::SceneGalleryFallInfo& fall_info() const;
  ::proto::SceneGalleryFallInfo* mutable_fall_info();
  ::proto::SceneGalleryFallInfo* release_fall_info();
  void set_allocated_fall_info(::proto::SceneGalleryFallInfo* fall_info);

  // .proto.SceneGalleryFlowerInfo flower_info = 8;
  bool has_flower_info() const;
  void clear_flower_info();
  static const int kFlowerInfoFieldNumber = 8;
  const ::proto::SceneGalleryFlowerInfo& flower_info() const;
  ::proto::SceneGalleryFlowerInfo* mutable_flower_info();
  ::proto::SceneGalleryFlowerInfo* release_flower_info();
  void set_allocated_flower_info(::proto::SceneGalleryFlowerInfo* flower_info);

  // .proto.SceneGalleryBulletInfo bullet_info = 13;
  bool has_bullet_info() const;
  void clear_bullet_info();
  static const int kBulletInfoFieldNumber = 13;
  const ::proto::SceneGalleryBulletInfo& bullet_info() const;
  ::proto::SceneGalleryBulletInfo* mutable_bullet_info();
  ::proto::SceneGalleryBulletInfo* release_bullet_info();
  void set_allocated_bullet_info(::proto::SceneGalleryBulletInfo* bullet_info);

  // .proto.SceneGalleryBrokenFloorInfo broken_floor_info = 10;
  bool has_broken_floor_info() const;
  void clear_broken_floor_info();
  static const int kBrokenFloorInfoFieldNumber = 10;
  const ::proto::SceneGalleryBrokenFloorInfo& broken_floor_info() const;
  ::proto::SceneGalleryBrokenFloorInfo* mutable_broken_floor_info();
  ::proto::SceneGalleryBrokenFloorInfo* release_broken_floor_info();
  void set_allocated_broken_floor_info(::proto::SceneGalleryBrokenFloorInfo* broken_floor_info);

  // .proto.SceneGalleryHideAndSeekInfo hide_and_seek_info = 6;
  bool has_hide_and_seek_info() const;
  void clear_hide_and_seek_info();
  static const int kHideAndSeekInfoFieldNumber = 6;
  const ::proto::SceneGalleryHideAndSeekInfo& hide_and_seek_info() const;
  ::proto::SceneGalleryHideAndSeekInfo* mutable_hide_and_seek_info();
  ::proto::SceneGalleryHideAndSeekInfo* release_hide_and_seek_info();
  void set_allocated_hide_and_seek_info(::proto::SceneGalleryHideAndSeekInfo* hide_and_seek_info);

  // .proto.SceneGalleryBuoyantCombatInfo buoyant_combat_info = 1384;
  bool has_buoyant_combat_info() const;
  void clear_buoyant_combat_info();
  static const int kBuoyantCombatInfoFieldNumber = 1384;
  const ::proto::SceneGalleryBuoyantCombatInfo& buoyant_combat_info() const;
  ::proto::SceneGalleryBuoyantCombatInfo* mutable_buoyant_combat_info();
  ::proto::SceneGalleryBuoyantCombatInfo* release_buoyant_combat_info();
  void set_allocated_buoyant_combat_info(::proto::SceneGalleryBuoyantCombatInfo* buoyant_combat_info);

  // .proto.SceneGalleryBounceConjuringInfo bounce_conjuring_info = 708;
  bool has_bounce_conjuring_info() const;
  void clear_bounce_conjuring_info();
  static const int kBounceConjuringInfoFieldNumber = 708;
  const ::proto::SceneGalleryBounceConjuringInfo& bounce_conjuring_info() const;
  ::proto::SceneGalleryBounceConjuringInfo* mutable_bounce_conjuring_info();
  ::proto::SceneGalleryBounceConjuringInfo* release_bounce_conjuring_info();
  void set_allocated_bounce_conjuring_info(::proto::SceneGalleryBounceConjuringInfo* bounce_conjuring_info);

  // .proto.SceneGalleryHandballInfo handball_info = 1997;
  bool has_handball_info() const;
  void clear_handball_info();
  static const int kHandballInfoFieldNumber = 1997;
  const ::proto::SceneGalleryHandballInfo& handball_info() const;
  ::proto::SceneGalleryHandballInfo* mutable_handball_info();
  ::proto::SceneGalleryHandballInfo* release_handball_info();
  void set_allocated_handball_info(::proto::SceneGalleryHandballInfo* handball_info);

  // .proto.SceneGallerySumoInfo sumo_info = 811;
  bool has_sumo_info() const;
  void clear_sumo_info();
  static const int kSumoInfoFieldNumber = 811;
  const ::proto::SceneGallerySumoInfo& sumo_info() const;
  ::proto::SceneGallerySumoInfo* mutable_sumo_info();
  ::proto::SceneGallerySumoInfo* release_sumo_info();
  void set_allocated_sumo_info(::proto::SceneGallerySumoInfo* sumo_info);

  // .proto.SceneGallerySalvagePreventInfo salvage_prevent_info = 1700;
  bool has_salvage_prevent_info() const;
  void clear_salvage_prevent_info();
  static const int kSalvagePreventInfoFieldNumber = 1700;
  const ::proto::SceneGallerySalvagePreventInfo& salvage_prevent_info() const;
  ::proto::SceneGallerySalvagePreventInfo* mutable_salvage_prevent_info();
  ::proto::SceneGallerySalvagePreventInfo* release_salvage_prevent_info();
  void set_allocated_salvage_prevent_info(::proto::SceneGallerySalvagePreventInfo* salvage_prevent_info);

  // .proto.SceneGallerySalvageEscortInfo salvage_escort_info = 759;
  bool has_salvage_escort_info() const;
  void clear_salvage_escort_info();
  static const int kSalvageEscortInfoFieldNumber = 759;
  const ::proto::SceneGallerySalvageEscortInfo& salvage_escort_info() const;
  ::proto::SceneGallerySalvageEscortInfo* mutable_salvage_escort_info();
  ::proto::SceneGallerySalvageEscortInfo* release_salvage_escort_info();
  void set_allocated_salvage_escort_info(::proto::SceneGallerySalvageEscortInfo* salvage_escort_info);

  // .proto.SceneGalleryHomeBalloonInfo home_balloon_info = 1034;
  bool has_home_balloon_info() const;
  void clear_home_balloon_info();
  static const int kHomeBalloonInfoFieldNumber = 1034;
  const ::proto::SceneGalleryHomeBalloonInfo& home_balloon_info() const;
  ::proto::SceneGalleryHomeBalloonInfo* mutable_home_balloon_info();
  ::proto::SceneGalleryHomeBalloonInfo* release_home_balloon_info();
  void set_allocated_home_balloon_info(::proto::SceneGalleryHomeBalloonInfo* home_balloon_info);

  // .proto.SceneGalleryCrystalLinkInfo crystal_link_info = 2004;
  bool has_crystal_link_info() const;
  void clear_crystal_link_info();
  static const int kCrystalLinkInfoFieldNumber = 2004;
  const ::proto::SceneGalleryCrystalLinkInfo& crystal_link_info() const;
  ::proto::SceneGalleryCrystalLinkInfo* mutable_crystal_link_info();
  ::proto::SceneGalleryCrystalLinkInfo* release_crystal_link_info();
  void set_allocated_crystal_link_info(::proto::SceneGalleryCrystalLinkInfo* crystal_link_info);

  // .proto.SceneGalleryIrodoriMasterInfo irodori_master_info = 1953;
  bool has_irodori_master_info() const;
  void clear_irodori_master_info();
  static const int kIrodoriMasterInfoFieldNumber = 1953;
  const ::proto::SceneGalleryIrodoriMasterInfo& irodori_master_info() const;
  ::proto::SceneGalleryIrodoriMasterInfo* mutable_irodori_master_info();
  ::proto::SceneGalleryIrodoriMasterInfo* release_irodori_master_info();
  void set_allocated_irodori_master_info(::proto::SceneGalleryIrodoriMasterInfo* irodori_master_info);

  // .proto.SceneGalleryLuminanceStoneChallengeInfo luminance_stone_challenge_info = 106;
  bool has_luminance_stone_challenge_info() const;
  void clear_luminance_stone_challenge_info();
  static const int kLuminanceStoneChallengeInfoFieldNumber = 106;
  const ::proto::SceneGalleryLuminanceStoneChallengeInfo& luminance_stone_challenge_info() const;
  ::proto::SceneGalleryLuminanceStoneChallengeInfo* mutable_luminance_stone_challenge_info();
  ::proto::SceneGalleryLuminanceStoneChallengeInfo* release_luminance_stone_challenge_info();
  void set_allocated_luminance_stone_challenge_info(::proto::SceneGalleryLuminanceStoneChallengeInfo* luminance_stone_challenge_info);

  // .proto.SceneGalleryHomeSeekFurnitureInfo home_seek_furniture_info = 1456;
  bool has_home_seek_furniture_info() const;
  void clear_home_seek_furniture_info();
  static const int kHomeSeekFurnitureInfoFieldNumber = 1456;
  const ::proto::SceneGalleryHomeSeekFurnitureInfo& home_seek_furniture_info() const;
  ::proto::SceneGalleryHomeSeekFurnitureInfo* mutable_home_seek_furniture_info();
  ::proto::SceneGalleryHomeSeekFurnitureInfo* release_home_seek_furniture_info();
  void set_allocated_home_seek_furniture_info(::proto::SceneGalleryHomeSeekFurnitureInfo* home_seek_furniture_info);

  // .proto.SceneGalleryIslandPartyDownHillInfo island_party_down_hill_info = 462;
  bool has_island_party_down_hill_info() const;
  void clear_island_party_down_hill_info();
  static const int kIslandPartyDownHillInfoFieldNumber = 462;
  const ::proto::SceneGalleryIslandPartyDownHillInfo& island_party_down_hill_info() const;
  ::proto::SceneGalleryIslandPartyDownHillInfo* mutable_island_party_down_hill_info();
  ::proto::SceneGalleryIslandPartyDownHillInfo* release_island_party_down_hill_info();
  void set_allocated_island_party_down_hill_info(::proto::SceneGalleryIslandPartyDownHillInfo* island_party_down_hill_info);

  // .proto.SceneGallerySummerTimeV2BoatInfo summer_time_v2_boat_info = 296;
  bool has_summer_time_v2_boat_info() const;
  void clear_summer_time_v2_boat_info();
  static const int kSummerTimeV2BoatInfoFieldNumber = 296;
  const ::proto::SceneGallerySummerTimeV2BoatInfo& summer_time_v2_boat_info() const;
  ::proto::SceneGallerySummerTimeV2BoatInfo* mutable_summer_time_v2_boat_info();
  ::proto::SceneGallerySummerTimeV2BoatInfo* release_summer_time_v2_boat_info();
  void set_allocated_summer_time_v2_boat_info(::proto::SceneGallerySummerTimeV2BoatInfo* summer_time_v2_boat_info);

  // .proto.SceneGalleryIslandPartyRaftInfo island_party_raft_info = 1805;
  bool has_island_party_raft_info() const;
  void clear_island_party_raft_info();
  static const int kIslandPartyRaftInfoFieldNumber = 1805;
  const ::proto::SceneGalleryIslandPartyRaftInfo& island_party_raft_info() const;
  ::proto::SceneGalleryIslandPartyRaftInfo* mutable_island_party_raft_info();
  ::proto::SceneGalleryIslandPartyRaftInfo* release_island_party_raft_info();
  void set_allocated_island_party_raft_info(::proto::SceneGalleryIslandPartyRaftInfo* island_party_raft_info);

  // .proto.SceneGalleryIslandPartySailInfo island_party_sail_info = 1133;
  bool has_island_party_sail_info() const;
  void clear_island_party_sail_info();
  static const int kIslandPartySailInfoFieldNumber = 1133;
  const ::proto::SceneGalleryIslandPartySailInfo& island_party_sail_info() const;
  ::proto::SceneGalleryIslandPartySailInfo* mutable_island_party_sail_info();
  ::proto::SceneGalleryIslandPartySailInfo* release_island_party_sail_info();
  void set_allocated_island_party_sail_info(::proto::SceneGalleryIslandPartySailInfo* island_party_sail_info);

  // .proto.SceneGalleryInstaleSprayInfo instable_spray_info = 1196;
  bool has_instable_spray_info() const;
  void clear_instable_spray_info();
  static const int kInstableSprayInfoFieldNumber = 1196;
  const ::proto::SceneGalleryInstaleSprayInfo& instable_spray_info() const;
  ::proto::SceneGalleryInstaleSprayInfo* mutable_instable_spray_info();
  ::proto::SceneGalleryInstaleSprayInfo* release_instable_spray_info();
  void set_allocated_instable_spray_info(::proto::SceneGalleryInstaleSprayInfo* instable_spray_info);

  // .proto.SceneGalleryMuqadasPotionInfo muqadas_potion_info = 865;
  bool has_muqadas_potion_info() const;
  void clear_muqadas_potion_info();
  static const int kMuqadasPotionInfoFieldNumber = 865;
  const ::proto::SceneGalleryMuqadasPotionInfo& muqadas_potion_info() const;
  ::proto::SceneGalleryMuqadasPotionInfo* mutable_muqadas_potion_info();
  ::proto::SceneGalleryMuqadasPotionInfo* release_muqadas_potion_info();
  void set_allocated_muqadas_potion_info(::proto::SceneGalleryMuqadasPotionInfo* muqadas_potion_info);

  // .proto.SceneGalleryTreasureSeelieInfo treasure_seelie_info = 1525;
  bool has_treasure_seelie_info() const;
  void clear_treasure_seelie_info();
  static const int kTreasureSeelieInfoFieldNumber = 1525;
  const ::proto::SceneGalleryTreasureSeelieInfo& treasure_seelie_info() const;
  ::proto::SceneGalleryTreasureSeelieInfo* mutable_treasure_seelie_info();
  ::proto::SceneGalleryTreasureSeelieInfo* release_treasure_seelie_info();
  void set_allocated_treasure_seelie_info(::proto::SceneGalleryTreasureSeelieInfo* treasure_seelie_info);

  // .proto.SceneGalleryVintageHuntingInfo vintage_hunting_info = 254;
  bool has_vintage_hunting_info() const;
  void clear_vintage_hunting_info();
  static const int kVintageHuntingInfoFieldNumber = 254;
  const ::proto::SceneGalleryVintageHuntingInfo& vintage_hunting_info() const;
  ::proto::SceneGalleryVintageHuntingInfo* mutable_vintage_hunting_info();
  ::proto::SceneGalleryVintageHuntingInfo* release_vintage_hunting_info();
  void set_allocated_vintage_hunting_info(::proto::SceneGalleryVintageHuntingInfo* vintage_hunting_info);

  // .proto.SceneGalleryWindFieldInfo wind_field_info = 1080;
  bool has_wind_field_info() const;
  void clear_wind_field_info();
  static const int kWindFieldInfoFieldNumber = 1080;
  const ::proto::SceneGalleryWindFieldInfo& wind_field_info() const;
  ::proto::SceneGalleryWindFieldInfo* mutable_wind_field_info();
  ::proto::SceneGalleryWindFieldInfo* release_wind_field_info();
  void set_allocated_wind_field_info(::proto::SceneGalleryWindFieldInfo* wind_field_info);

  // .proto.SceneGalleryFungusFighterTrainingInfo fungus_fighter_training_info = 1328;
  bool has_fungus_fighter_training_info() const;
  void clear_fungus_fighter_training_info();
  static const int kFungusFighterTrainingInfoFieldNumber = 1328;
  const ::proto::SceneGalleryFungusFighterTrainingInfo& fungus_fighter_training_info() const;
  ::proto::SceneGalleryFungusFighterTrainingInfo* mutable_fungus_fighter_training_info();
  ::proto::SceneGalleryFungusFighterTrainingInfo* release_fungus_fighter_training_info();
  void set_allocated_fungus_fighter_training_info(::proto::SceneGalleryFungusFighterTrainingInfo* fungus_fighter_training_info);

  // .proto.SceneGalleryEffigyChallengeV2Info effigy_challenge_info = 882;
  bool has_effigy_challenge_info() const;
  void clear_effigy_challenge_info();
  static const int kEffigyChallengeInfoFieldNumber = 882;
  const ::proto::SceneGalleryEffigyChallengeV2Info& effigy_challenge_info() const;
  ::proto::SceneGalleryEffigyChallengeV2Info* mutable_effigy_challenge_info();
  ::proto::SceneGalleryEffigyChallengeV2Info* release_effigy_challenge_info();
  void set_allocated_effigy_challenge_info(::proto::SceneGalleryEffigyChallengeV2Info* effigy_challenge_info);

  // .proto.SceneGalleryFungusFighterCaptureInfo fungus_fighter_capture_info = 422;
  bool has_fungus_fighter_capture_info() const;
  void clear_fungus_fighter_capture_info();
  static const int kFungusFighterCaptureInfoFieldNumber = 422;
  const ::proto::SceneGalleryFungusFighterCaptureInfo& fungus_fighter_capture_info() const;
  ::proto::SceneGalleryFungusFighterCaptureInfo* mutable_fungus_fighter_capture_info();
  ::proto::SceneGalleryFungusFighterCaptureInfo* release_fungus_fighter_capture_info();
  void set_allocated_fungus_fighter_capture_info(::proto::SceneGalleryFungusFighterCaptureInfo* fungus_fighter_capture_info);

  // .proto.SceneGalleryCharAmusementInfo char_amusement_info = 1086;
  bool has_char_amusement_info() const;
  void clear_char_amusement_info();
  static const int kCharAmusementInfoFieldNumber = 1086;
  const ::proto::SceneGalleryCharAmusementInfo& char_amusement_info() const;
  ::proto::SceneGalleryCharAmusementInfo* mutable_char_amusement_info();
  ::proto::SceneGalleryCharAmusementInfo* release_char_amusement_info();
  void set_allocated_char_amusement_info(::proto::SceneGalleryCharAmusementInfo* char_amusement_info);

  // .proto.SceneGalleryBrickBreakerInfo brick_breaker_info = 1425;
  bool has_brick_breaker_info() const;
  void clear_brick_breaker_info();
  static const int kBrickBreakerInfoFieldNumber = 1425;
  const ::proto::SceneGalleryBrickBreakerInfo& brick_breaker_info() const;
  ::proto::SceneGalleryBrickBreakerInfo* mutable_brick_breaker_info();
  ::proto::SceneGalleryBrickBreakerInfo* release_brick_breaker_info();
  void set_allocated_brick_breaker_info(::proto::SceneGalleryBrickBreakerInfo* brick_breaker_info);

  // .proto.SceneGalleryCoinCollectInfo coin_collect_info = 1574;
  bool has_coin_collect_info() const;
  void clear_coin_collect_info();
  static const int kCoinCollectInfoFieldNumber = 1574;
  const ::proto::SceneGalleryCoinCollectInfo& coin_collect_info() const;
  ::proto::SceneGalleryCoinCollectInfo* mutable_coin_collect_info();
  ::proto::SceneGalleryCoinCollectInfo* release_coin_collect_info();
  void set_allocated_coin_collect_info(::proto::SceneGalleryCoinCollectInfo* coin_collect_info);

  // .proto.SceneGalleryTeamChainInfo team_chain_info = 1495;
  bool has_team_chain_info() const;
  void clear_team_chain_info();
  static const int kTeamChainInfoFieldNumber = 1495;
  const ::proto::SceneGalleryTeamChainInfo& team_chain_info() const;
  ::proto::SceneGalleryTeamChainInfo* mutable_team_chain_info();
  ::proto::SceneGalleryTeamChainInfo* release_team_chain_info();
  void set_allocated_team_chain_info(::proto::SceneGalleryTeamChainInfo* team_chain_info);

  InfoCase info_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneGalleryInfo)
 private:
  void set_has_balloon_info();
  void set_has_fall_info();
  void set_has_flower_info();
  void set_has_bullet_info();
  void set_has_broken_floor_info();
  void set_has_hide_and_seek_info();
  void set_has_buoyant_combat_info();
  void set_has_bounce_conjuring_info();
  void set_has_handball_info();
  void set_has_sumo_info();
  void set_has_salvage_prevent_info();
  void set_has_salvage_escort_info();
  void set_has_home_balloon_info();
  void set_has_crystal_link_info();
  void set_has_irodori_master_info();
  void set_has_luminance_stone_challenge_info();
  void set_has_home_seek_furniture_info();
  void set_has_island_party_down_hill_info();
  void set_has_summer_time_v2_boat_info();
  void set_has_island_party_raft_info();
  void set_has_island_party_sail_info();
  void set_has_instable_spray_info();
  void set_has_muqadas_potion_info();
  void set_has_treasure_seelie_info();
  void set_has_vintage_hunting_info();
  void set_has_wind_field_info();
  void set_has_fungus_fighter_training_info();
  void set_has_effigy_challenge_info();
  void set_has_fungus_fighter_capture_info();
  void set_has_char_amusement_info();
  void set_has_brick_breaker_info();
  void set_has_coin_collect_info();
  void set_has_team_chain_info();

  inline bool has_info() const;
  void clear_info();
  inline void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryProgressInfo > progress_info_list_;
  ::google::protobuf::uint32 player_count_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 start_time_;
  int stage_;
  ::google::protobuf::uint32 pre_start_end_time_;
  ::google::protobuf::uint32 owner_uid_;
  ::google::protobuf::uint32 end_time_;
  union InfoUnion {
    InfoUnion() {}
    ::proto::SceneGalleryBalloonInfo* balloon_info_;
    ::proto::SceneGalleryFallInfo* fall_info_;
    ::proto::SceneGalleryFlowerInfo* flower_info_;
    ::proto::SceneGalleryBulletInfo* bullet_info_;
    ::proto::SceneGalleryBrokenFloorInfo* broken_floor_info_;
    ::proto::SceneGalleryHideAndSeekInfo* hide_and_seek_info_;
    ::proto::SceneGalleryBuoyantCombatInfo* buoyant_combat_info_;
    ::proto::SceneGalleryBounceConjuringInfo* bounce_conjuring_info_;
    ::proto::SceneGalleryHandballInfo* handball_info_;
    ::proto::SceneGallerySumoInfo* sumo_info_;
    ::proto::SceneGallerySalvagePreventInfo* salvage_prevent_info_;
    ::proto::SceneGallerySalvageEscortInfo* salvage_escort_info_;
    ::proto::SceneGalleryHomeBalloonInfo* home_balloon_info_;
    ::proto::SceneGalleryCrystalLinkInfo* crystal_link_info_;
    ::proto::SceneGalleryIrodoriMasterInfo* irodori_master_info_;
    ::proto::SceneGalleryLuminanceStoneChallengeInfo* luminance_stone_challenge_info_;
    ::proto::SceneGalleryHomeSeekFurnitureInfo* home_seek_furniture_info_;
    ::proto::SceneGalleryIslandPartyDownHillInfo* island_party_down_hill_info_;
    ::proto::SceneGallerySummerTimeV2BoatInfo* summer_time_v2_boat_info_;
    ::proto::SceneGalleryIslandPartyRaftInfo* island_party_raft_info_;
    ::proto::SceneGalleryIslandPartySailInfo* island_party_sail_info_;
    ::proto::SceneGalleryInstaleSprayInfo* instable_spray_info_;
    ::proto::SceneGalleryMuqadasPotionInfo* muqadas_potion_info_;
    ::proto::SceneGalleryTreasureSeelieInfo* treasure_seelie_info_;
    ::proto::SceneGalleryVintageHuntingInfo* vintage_hunting_info_;
    ::proto::SceneGalleryWindFieldInfo* wind_field_info_;
    ::proto::SceneGalleryFungusFighterTrainingInfo* fungus_fighter_training_info_;
    ::proto::SceneGalleryEffigyChallengeV2Info* effigy_challenge_info_;
    ::proto::SceneGalleryFungusFighterCaptureInfo* fungus_fighter_capture_info_;
    ::proto::SceneGalleryCharAmusementInfo* char_amusement_info_;
    ::proto::SceneGalleryBrickBreakerInfo* brick_breaker_info_;
    ::proto::SceneGalleryCoinCollectInfo* coin_collect_info_;
    ::proto::SceneGalleryTeamChainInfo* team_chain_info_;
  } info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAllSceneGalleryInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetAllSceneGalleryInfoReq) */ {
 public:
  GetAllSceneGalleryInfoReq();
  virtual ~GetAllSceneGalleryInfoReq();

  GetAllSceneGalleryInfoReq(const GetAllSceneGalleryInfoReq& from);

  inline GetAllSceneGalleryInfoReq& operator=(const GetAllSceneGalleryInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAllSceneGalleryInfoReq(GetAllSceneGalleryInfoReq&& from) noexcept
    : GetAllSceneGalleryInfoReq() {
    *this = ::std::move(from);
  }

  inline GetAllSceneGalleryInfoReq& operator=(GetAllSceneGalleryInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllSceneGalleryInfoReq& default_instance();

  static inline const GetAllSceneGalleryInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetAllSceneGalleryInfoReq*>(
               &_GetAllSceneGalleryInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(GetAllSceneGalleryInfoReq* other);
  friend void swap(GetAllSceneGalleryInfoReq& a, GetAllSceneGalleryInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAllSceneGalleryInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAllSceneGalleryInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAllSceneGalleryInfoReq& from);
  void MergeFrom(const GetAllSceneGalleryInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAllSceneGalleryInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetAllSceneGalleryInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAllSceneGalleryInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetAllSceneGalleryInfoRsp) */ {
 public:
  GetAllSceneGalleryInfoRsp();
  virtual ~GetAllSceneGalleryInfoRsp();

  GetAllSceneGalleryInfoRsp(const GetAllSceneGalleryInfoRsp& from);

  inline GetAllSceneGalleryInfoRsp& operator=(const GetAllSceneGalleryInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAllSceneGalleryInfoRsp(GetAllSceneGalleryInfoRsp&& from) noexcept
    : GetAllSceneGalleryInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetAllSceneGalleryInfoRsp& operator=(GetAllSceneGalleryInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllSceneGalleryInfoRsp& default_instance();

  static inline const GetAllSceneGalleryInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetAllSceneGalleryInfoRsp*>(
               &_GetAllSceneGalleryInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(GetAllSceneGalleryInfoRsp* other);
  friend void swap(GetAllSceneGalleryInfoRsp& a, GetAllSceneGalleryInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAllSceneGalleryInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAllSceneGalleryInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAllSceneGalleryInfoRsp& from);
  void MergeFrom(const GetAllSceneGalleryInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAllSceneGalleryInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneGalleryInfo gallery_info_list = 12;
  int gallery_info_list_size() const;
  void clear_gallery_info_list();
  static const int kGalleryInfoListFieldNumber = 12;
  const ::proto::SceneGalleryInfo& gallery_info_list(int index) const;
  ::proto::SceneGalleryInfo* mutable_gallery_info_list(int index);
  ::proto::SceneGalleryInfo* add_gallery_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInfo >*
      mutable_gallery_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInfo >&
      gallery_info_list() const;

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetAllSceneGalleryInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInfo > gallery_info_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryFlowerCatchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryFlowerCatchNotify) */ {
 public:
  GalleryFlowerCatchNotify();
  virtual ~GalleryFlowerCatchNotify();

  GalleryFlowerCatchNotify(const GalleryFlowerCatchNotify& from);

  inline GalleryFlowerCatchNotify& operator=(const GalleryFlowerCatchNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryFlowerCatchNotify(GalleryFlowerCatchNotify&& from) noexcept
    : GalleryFlowerCatchNotify() {
    *this = ::std::move(from);
  }

  inline GalleryFlowerCatchNotify& operator=(GalleryFlowerCatchNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryFlowerCatchNotify& default_instance();

  static inline const GalleryFlowerCatchNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryFlowerCatchNotify*>(
               &_GalleryFlowerCatchNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(GalleryFlowerCatchNotify* other);
  friend void swap(GalleryFlowerCatchNotify& a, GalleryFlowerCatchNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryFlowerCatchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryFlowerCatchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryFlowerCatchNotify& from);
  void MergeFrom(const GalleryFlowerCatchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryFlowerCatchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 add_score = 14;
  void clear_add_score();
  static const int kAddScoreFieldNumber = 14;
  ::google::protobuf::uint32 add_score() const;
  void set_add_score(::google::protobuf::uint32 value);

  // uint32 gallery_id = 5;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 5;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 cur_score = 12;
  void clear_cur_score();
  static const int kCurScoreFieldNumber = 12;
  ::google::protobuf::uint32 cur_score() const;
  void set_cur_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryFlowerCatchNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 add_score_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 cur_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryPreStartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryPreStartNotify) */ {
 public:
  GalleryPreStartNotify();
  virtual ~GalleryPreStartNotify();

  GalleryPreStartNotify(const GalleryPreStartNotify& from);

  inline GalleryPreStartNotify& operator=(const GalleryPreStartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryPreStartNotify(GalleryPreStartNotify&& from) noexcept
    : GalleryPreStartNotify() {
    *this = ::std::move(from);
  }

  inline GalleryPreStartNotify& operator=(GalleryPreStartNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryPreStartNotify& default_instance();

  static inline const GalleryPreStartNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryPreStartNotify*>(
               &_GalleryPreStartNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(GalleryPreStartNotify* other);
  friend void swap(GalleryPreStartNotify& a, GalleryPreStartNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryPreStartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryPreStartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryPreStartNotify& from);
  void MergeFrom(const GalleryPreStartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryPreStartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 pre_start_end_time = 9;
  void clear_pre_start_end_time();
  static const int kPreStartEndTimeFieldNumber = 9;
  ::google::protobuf::uint32 pre_start_end_time() const;
  void set_pre_start_end_time(::google::protobuf::uint32 value);

  // uint32 gallery_id = 10;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 10;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryPreStartNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 pre_start_end_time_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryBulletHitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryBulletHitNotify) */ {
 public:
  GalleryBulletHitNotify();
  virtual ~GalleryBulletHitNotify();

  GalleryBulletHitNotify(const GalleryBulletHitNotify& from);

  inline GalleryBulletHitNotify& operator=(const GalleryBulletHitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryBulletHitNotify(GalleryBulletHitNotify&& from) noexcept
    : GalleryBulletHitNotify() {
    *this = ::std::move(from);
  }

  inline GalleryBulletHitNotify& operator=(GalleryBulletHitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryBulletHitNotify& default_instance();

  static inline const GalleryBulletHitNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryBulletHitNotify*>(
               &_GalleryBulletHitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(GalleryBulletHitNotify* other);
  friend void swap(GalleryBulletHitNotify& a, GalleryBulletHitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryBulletHitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryBulletHitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryBulletHitNotify& from);
  void MergeFrom(const GalleryBulletHitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryBulletHitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 12;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 12;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 hit_count = 14;
  void clear_hit_count();
  static const int kHitCountFieldNumber = 14;
  ::google::protobuf::uint32 hit_count() const;
  void set_hit_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryBulletHitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 hit_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryBrokenFloorFallNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryBrokenFloorFallNotify) */ {
 public:
  GalleryBrokenFloorFallNotify();
  virtual ~GalleryBrokenFloorFallNotify();

  GalleryBrokenFloorFallNotify(const GalleryBrokenFloorFallNotify& from);

  inline GalleryBrokenFloorFallNotify& operator=(const GalleryBrokenFloorFallNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryBrokenFloorFallNotify(GalleryBrokenFloorFallNotify&& from) noexcept
    : GalleryBrokenFloorFallNotify() {
    *this = ::std::move(from);
  }

  inline GalleryBrokenFloorFallNotify& operator=(GalleryBrokenFloorFallNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryBrokenFloorFallNotify& default_instance();

  static inline const GalleryBrokenFloorFallNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryBrokenFloorFallNotify*>(
               &_GalleryBrokenFloorFallNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(GalleryBrokenFloorFallNotify* other);
  friend void swap(GalleryBrokenFloorFallNotify& a, GalleryBrokenFloorFallNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryBrokenFloorFallNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryBrokenFloorFallNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryBrokenFloorFallNotify& from);
  void MergeFrom(const GalleryBrokenFloorFallNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryBrokenFloorFallNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fall_count = 3;
  void clear_fall_count();
  static const int kFallCountFieldNumber = 3;
  ::google::protobuf::uint32 fall_count() const;
  void set_fall_count(::google::protobuf::uint32 value);

  // uint32 gallery_id = 5;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 5;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryBrokenFloorFallNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fall_count_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterruptGalleryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InterruptGalleryReq) */ {
 public:
  InterruptGalleryReq();
  virtual ~InterruptGalleryReq();

  InterruptGalleryReq(const InterruptGalleryReq& from);

  inline InterruptGalleryReq& operator=(const InterruptGalleryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterruptGalleryReq(InterruptGalleryReq&& from) noexcept
    : InterruptGalleryReq() {
    *this = ::std::move(from);
  }

  inline InterruptGalleryReq& operator=(InterruptGalleryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterruptGalleryReq& default_instance();

  static inline const InterruptGalleryReq* internal_default_instance() {
    return reinterpret_cast<const InterruptGalleryReq*>(
               &_InterruptGalleryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(InterruptGalleryReq* other);
  friend void swap(InterruptGalleryReq& a, InterruptGalleryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterruptGalleryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  InterruptGalleryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InterruptGalleryReq& from);
  void MergeFrom(const InterruptGalleryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InterruptGalleryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 13;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 13;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InterruptGalleryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterruptGalleryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InterruptGalleryRsp) */ {
 public:
  InterruptGalleryRsp();
  virtual ~InterruptGalleryRsp();

  InterruptGalleryRsp(const InterruptGalleryRsp& from);

  inline InterruptGalleryRsp& operator=(const InterruptGalleryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterruptGalleryRsp(InterruptGalleryRsp&& from) noexcept
    : InterruptGalleryRsp() {
    *this = ::std::move(from);
  }

  inline InterruptGalleryRsp& operator=(InterruptGalleryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterruptGalleryRsp& default_instance();

  static inline const InterruptGalleryRsp* internal_default_instance() {
    return reinterpret_cast<const InterruptGalleryRsp*>(
               &_InterruptGalleryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(InterruptGalleryRsp* other);
  friend void swap(InterruptGalleryRsp& a, InterruptGalleryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterruptGalleryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  InterruptGalleryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InterruptGalleryRsp& from);
  void MergeFrom(const InterruptGalleryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InterruptGalleryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 9;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 9;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // int32 retcode = 12;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 12;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.InterruptGalleryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryInfoNotify) */ {
 public:
  SceneGalleryInfoNotify();
  virtual ~SceneGalleryInfoNotify();

  SceneGalleryInfoNotify(const SceneGalleryInfoNotify& from);

  inline SceneGalleryInfoNotify& operator=(const SceneGalleryInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryInfoNotify(SceneGalleryInfoNotify&& from) noexcept
    : SceneGalleryInfoNotify() {
    *this = ::std::move(from);
  }

  inline SceneGalleryInfoNotify& operator=(SceneGalleryInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryInfoNotify& default_instance();

  static inline const SceneGalleryInfoNotify* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryInfoNotify*>(
               &_SceneGalleryInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(SceneGalleryInfoNotify* other);
  friend void swap(SceneGalleryInfoNotify& a, SceneGalleryInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryInfoNotify& from);
  void MergeFrom(const SceneGalleryInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.SceneGalleryInfo gallery_info = 4;
  bool has_gallery_info() const;
  void clear_gallery_info();
  static const int kGalleryInfoFieldNumber = 4;
  const ::proto::SceneGalleryInfo& gallery_info() const;
  ::proto::SceneGalleryInfo* mutable_gallery_info();
  ::proto::SceneGalleryInfo* release_gallery_info();
  void set_allocated_gallery_info(::proto::SceneGalleryInfo* gallery_info);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::SceneGalleryInfo* gallery_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BuoyantCombatGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BuoyantCombatGallerySettleInfo) */ {
 public:
  BuoyantCombatGallerySettleInfo();
  virtual ~BuoyantCombatGallerySettleInfo();

  BuoyantCombatGallerySettleInfo(const BuoyantCombatGallerySettleInfo& from);

  inline BuoyantCombatGallerySettleInfo& operator=(const BuoyantCombatGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuoyantCombatGallerySettleInfo(BuoyantCombatGallerySettleInfo&& from) noexcept
    : BuoyantCombatGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline BuoyantCombatGallerySettleInfo& operator=(BuoyantCombatGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuoyantCombatGallerySettleInfo& default_instance();

  static inline const BuoyantCombatGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const BuoyantCombatGallerySettleInfo*>(
               &_BuoyantCombatGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(BuoyantCombatGallerySettleInfo* other);
  friend void swap(BuoyantCombatGallerySettleInfo& a, BuoyantCombatGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuoyantCombatGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BuoyantCombatGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuoyantCombatGallerySettleInfo& from);
  void MergeFrom(const BuoyantCombatGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuoyantCombatGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 kill_target_count = 1;
  void clear_kill_target_count();
  static const int kKillTargetCountFieldNumber = 1;
  ::google::protobuf::uint32 kill_target_count() const;
  void set_kill_target_count(::google::protobuf::uint32 value);

  // uint32 gallery_id = 2;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 2;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 kill_special_monster_count = 4;
  void clear_kill_special_monster_count();
  static const int kKillSpecialMonsterCountFieldNumber = 4;
  ::google::protobuf::uint32 kill_special_monster_count() const;
  void set_kill_special_monster_count(::google::protobuf::uint32 value);

  // uint32 kill_monster_count = 9;
  void clear_kill_monster_count();
  static const int kKillMonsterCountFieldNumber = 9;
  ::google::protobuf::uint32 kill_monster_count() const;
  void set_kill_monster_count(::google::protobuf::uint32 value);

  // uint32 final_score = 15;
  void clear_final_score();
  static const int kFinalScoreFieldNumber = 15;
  ::google::protobuf::uint32 final_score() const;
  void set_final_score(::google::protobuf::uint32 value);

  // uint32 gallery_multiple = 11;
  void clear_gallery_multiple();
  static const int kGalleryMultipleFieldNumber = 11;
  ::google::protobuf::uint32 gallery_multiple() const;
  void set_gallery_multiple(::google::protobuf::uint32 value);

  // uint32 gallery_level = 12;
  void clear_gallery_level();
  static const int kGalleryLevelFieldNumber = 12;
  ::google::protobuf::uint32 gallery_level() const;
  void set_gallery_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BuoyantCombatGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 kill_target_count_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 kill_special_monster_count_;
  ::google::protobuf::uint32 kill_monster_count_;
  ::google::protobuf::uint32 final_score_;
  ::google::protobuf::uint32 gallery_multiple_;
  ::google::protobuf::uint32 gallery_level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class BounceConjuringGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BounceConjuringGallerySettleInfo) */ {
 public:
  BounceConjuringGallerySettleInfo();
  virtual ~BounceConjuringGallerySettleInfo();

  BounceConjuringGallerySettleInfo(const BounceConjuringGallerySettleInfo& from);

  inline BounceConjuringGallerySettleInfo& operator=(const BounceConjuringGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BounceConjuringGallerySettleInfo(BounceConjuringGallerySettleInfo&& from) noexcept
    : BounceConjuringGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline BounceConjuringGallerySettleInfo& operator=(BounceConjuringGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BounceConjuringGallerySettleInfo& default_instance();

  static inline const BounceConjuringGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const BounceConjuringGallerySettleInfo*>(
               &_BounceConjuringGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(BounceConjuringGallerySettleInfo* other);
  friend void swap(BounceConjuringGallerySettleInfo& a, BounceConjuringGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BounceConjuringGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BounceConjuringGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BounceConjuringGallerySettleInfo& from);
  void MergeFrom(const BounceConjuringGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BounceConjuringGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .proto.ExhibitionDisplayInfo card_list = 7;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 7;
  const ::proto::ExhibitionDisplayInfo& card_list(int index) const;
  ::proto::ExhibitionDisplayInfo* mutable_card_list(int index);
  ::proto::ExhibitionDisplayInfo* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
      card_list() const;

  // map<uint32, uint32> gadget_count_map = 15;
  int gadget_count_map_size() const;
  void clear_gadget_count_map();
  static const int kGadgetCountMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      gadget_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_gadget_count_map();

  // .proto.OnlinePlayerInfo player_info = 14;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 14;
  const ::proto::OnlinePlayerInfo& player_info() const;
  ::proto::OnlinePlayerInfo* mutable_player_info();
  ::proto::OnlinePlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::OnlinePlayerInfo* player_info);

  // uint32 normal_hit_count = 4;
  void clear_normal_hit_count();
  static const int kNormalHitCountFieldNumber = 4;
  ::google::protobuf::uint32 normal_hit_count() const;
  void set_normal_hit_count(::google::protobuf::uint32 value);

  // uint32 destroyed_machine_count = 5;
  void clear_destroyed_machine_count();
  static const int kDestroyedMachineCountFieldNumber = 5;
  ::google::protobuf::uint32 destroyed_machine_count() const;
  void set_destroyed_machine_count(::google::protobuf::uint32 value);

  // uint32 fever_count = 6;
  void clear_fever_count();
  static const int kFeverCountFieldNumber = 6;
  ::google::protobuf::uint32 fever_count() const;
  void set_fever_count(::google::protobuf::uint32 value);

  // uint32 perfect_hit_count = 8;
  void clear_perfect_hit_count();
  static const int kPerfectHitCountFieldNumber = 8;
  ::google::protobuf::uint32 perfect_hit_count() const;
  void set_perfect_hit_count(::google::protobuf::uint32 value);

  // float damage = 11;
  void clear_damage();
  static const int kDamageFieldNumber = 11;
  float damage() const;
  void set_damage(float value);

  // uint32 score = 12;
  void clear_score();
  static const int kScoreFieldNumber = 12;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BounceConjuringGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo > card_list_;
  public:
  class BounceConjuringGallerySettleInfo_GadgetCountMapEntry : public ::google::protobuf::internal::MapEntry<BounceConjuringGallerySettleInfo_GadgetCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<BounceConjuringGallerySettleInfo_GadgetCountMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    BounceConjuringGallerySettleInfo_GadgetCountMapEntry();
    BounceConjuringGallerySettleInfo_GadgetCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const BounceConjuringGallerySettleInfo_GadgetCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_BounceConjuringGallerySettleInfo_GadgetCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      BounceConjuringGallerySettleInfo_GadgetCountMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > gadget_count_map_;
  private:
  ::proto::OnlinePlayerInfo* player_info_;
  ::google::protobuf::uint32 normal_hit_count_;
  ::google::protobuf::uint32 destroyed_machine_count_;
  ::google::protobuf::uint32 fever_count_;
  ::google::protobuf::uint32 perfect_hit_count_;
  float damage_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryBounceConjuringHitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryBounceConjuringHitNotify) */ {
 public:
  GalleryBounceConjuringHitNotify();
  virtual ~GalleryBounceConjuringHitNotify();

  GalleryBounceConjuringHitNotify(const GalleryBounceConjuringHitNotify& from);

  inline GalleryBounceConjuringHitNotify& operator=(const GalleryBounceConjuringHitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryBounceConjuringHitNotify(GalleryBounceConjuringHitNotify&& from) noexcept
    : GalleryBounceConjuringHitNotify() {
    *this = ::std::move(from);
  }

  inline GalleryBounceConjuringHitNotify& operator=(GalleryBounceConjuringHitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryBounceConjuringHitNotify& default_instance();

  static inline const GalleryBounceConjuringHitNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryBounceConjuringHitNotify*>(
               &_GalleryBounceConjuringHitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(GalleryBounceConjuringHitNotify* other);
  friend void swap(GalleryBounceConjuringHitNotify& a, GalleryBounceConjuringHitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryBounceConjuringHitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryBounceConjuringHitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryBounceConjuringHitNotify& from);
  void MergeFrom(const GalleryBounceConjuringHitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryBounceConjuringHitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 10;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 10;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // bool is_perfect = 5;
  void clear_is_perfect();
  static const int kIsPerfectFieldNumber = 5;
  bool is_perfect() const;
  void set_is_perfect(bool value);

  // uint32 add_score = 8;
  void clear_add_score();
  static const int kAddScoreFieldNumber = 8;
  ::google::protobuf::uint32 add_score() const;
  void set_add_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryBounceConjuringHitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  bool is_perfect_;
  ::google::protobuf::uint32 add_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GallerySumoKillMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GallerySumoKillMonsterNotify) */ {
 public:
  GallerySumoKillMonsterNotify();
  virtual ~GallerySumoKillMonsterNotify();

  GallerySumoKillMonsterNotify(const GallerySumoKillMonsterNotify& from);

  inline GallerySumoKillMonsterNotify& operator=(const GallerySumoKillMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GallerySumoKillMonsterNotify(GallerySumoKillMonsterNotify&& from) noexcept
    : GallerySumoKillMonsterNotify() {
    *this = ::std::move(from);
  }

  inline GallerySumoKillMonsterNotify& operator=(GallerySumoKillMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GallerySumoKillMonsterNotify& default_instance();

  static inline const GallerySumoKillMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const GallerySumoKillMonsterNotify*>(
               &_GallerySumoKillMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(GallerySumoKillMonsterNotify* other);
  friend void swap(GallerySumoKillMonsterNotify& a, GallerySumoKillMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GallerySumoKillMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GallerySumoKillMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GallerySumoKillMonsterNotify& from);
  void MergeFrom(const GallerySumoKillMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GallerySumoKillMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 kill_normal_mosnter_num = 4;
  void clear_kill_normal_mosnter_num();
  static const int kKillNormalMosnterNumFieldNumber = 4;
  ::google::protobuf::uint32 kill_normal_mosnter_num() const;
  void set_kill_normal_mosnter_num(::google::protobuf::uint32 value);

  // uint32 score = 7;
  void clear_score();
  static const int kScoreFieldNumber = 7;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 gallery_id = 11;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 11;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 kill_elite_monster_num = 14;
  void clear_kill_elite_monster_num();
  static const int kKillEliteMonsterNumFieldNumber = 14;
  ::google::protobuf::uint32 kill_elite_monster_num() const;
  void set_kill_elite_monster_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GallerySumoKillMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 kill_normal_mosnter_num_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 kill_elite_monster_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryCrystalLinkKillMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryCrystalLinkKillMonsterNotify) */ {
 public:
  GalleryCrystalLinkKillMonsterNotify();
  virtual ~GalleryCrystalLinkKillMonsterNotify();

  GalleryCrystalLinkKillMonsterNotify(const GalleryCrystalLinkKillMonsterNotify& from);

  inline GalleryCrystalLinkKillMonsterNotify& operator=(const GalleryCrystalLinkKillMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryCrystalLinkKillMonsterNotify(GalleryCrystalLinkKillMonsterNotify&& from) noexcept
    : GalleryCrystalLinkKillMonsterNotify() {
    *this = ::std::move(from);
  }

  inline GalleryCrystalLinkKillMonsterNotify& operator=(GalleryCrystalLinkKillMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryCrystalLinkKillMonsterNotify& default_instance();

  static inline const GalleryCrystalLinkKillMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryCrystalLinkKillMonsterNotify*>(
               &_GalleryCrystalLinkKillMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(GalleryCrystalLinkKillMonsterNotify* other);
  friend void swap(GalleryCrystalLinkKillMonsterNotify& a, GalleryCrystalLinkKillMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryCrystalLinkKillMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryCrystalLinkKillMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryCrystalLinkKillMonsterNotify& from);
  void MergeFrom(const GalleryCrystalLinkKillMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryCrystalLinkKillMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 score = 7;
  void clear_score();
  static const int kScoreFieldNumber = 7;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 gallery_id = 9;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 9;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryCrystalLinkKillMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryCrystalLinkBuffInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryCrystalLinkBuffInfoNotify) */ {
 public:
  GalleryCrystalLinkBuffInfoNotify();
  virtual ~GalleryCrystalLinkBuffInfoNotify();

  GalleryCrystalLinkBuffInfoNotify(const GalleryCrystalLinkBuffInfoNotify& from);

  inline GalleryCrystalLinkBuffInfoNotify& operator=(const GalleryCrystalLinkBuffInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryCrystalLinkBuffInfoNotify(GalleryCrystalLinkBuffInfoNotify&& from) noexcept
    : GalleryCrystalLinkBuffInfoNotify() {
    *this = ::std::move(from);
  }

  inline GalleryCrystalLinkBuffInfoNotify& operator=(GalleryCrystalLinkBuffInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryCrystalLinkBuffInfoNotify& default_instance();

  static inline const GalleryCrystalLinkBuffInfoNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryCrystalLinkBuffInfoNotify*>(
               &_GalleryCrystalLinkBuffInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(GalleryCrystalLinkBuffInfoNotify* other);
  friend void swap(GalleryCrystalLinkBuffInfoNotify& a, GalleryCrystalLinkBuffInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryCrystalLinkBuffInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryCrystalLinkBuffInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryCrystalLinkBuffInfoNotify& from);
  void MergeFrom(const GalleryCrystalLinkBuffInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryCrystalLinkBuffInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 buff_id = 14;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 14;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // bool is_buff_valid = 11;
  void clear_is_buff_valid();
  static const int kIsBuffValidFieldNumber = 11;
  bool is_buff_valid() const;
  void set_is_buff_valid(bool value);

  // uint32 gallery_id = 13;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 13;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryCrystalLinkBuffInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 buff_id_;
  bool is_buff_valid_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FishInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FishInfo) */ {
 public:
  FishInfo();
  virtual ~FishInfo();

  FishInfo(const FishInfo& from);

  inline FishInfo& operator=(const FishInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FishInfo(FishInfo&& from) noexcept
    : FishInfo() {
    *this = ::std::move(from);
  }

  inline FishInfo& operator=(FishInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FishInfo& default_instance();

  static inline const FishInfo* internal_default_instance() {
    return reinterpret_cast<const FishInfo*>(
               &_FishInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(FishInfo* other);
  friend void swap(FishInfo& a, FishInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FishInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FishInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FishInfo& from);
  void MergeFrom(const FishInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FishInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 free_count = 11;
  void clear_free_count();
  static const int kFreeCountFieldNumber = 11;
  ::google::protobuf::uint32 free_count() const;
  void set_free_count(::google::protobuf::uint32 value);

  // uint32 into_bag_count = 12;
  void clear_into_bag_count();
  static const int kIntoBagCountFieldNumber = 12;
  ::google::protobuf::uint32 into_bag_count() const;
  void set_into_bag_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FishInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 free_count_;
  ::google::protobuf::uint32 into_bag_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FishingScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FishingScore) */ {
 public:
  FishingScore();
  virtual ~FishingScore();

  FishingScore(const FishingScore& from);

  inline FishingScore& operator=(const FishingScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FishingScore(FishingScore&& from) noexcept
    : FishingScore() {
    *this = ::std::move(from);
  }

  inline FishingScore& operator=(FishingScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FishingScore& default_instance();

  static inline const FishingScore* internal_default_instance() {
    return reinterpret_cast<const FishingScore*>(
               &_FishingScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(FishingScore* other);
  friend void swap(FishingScore& a, FishingScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FishingScore* New() const PROTOBUF_FINAL { return New(NULL); }

  FishingScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FishingScore& from);
  void MergeFrom(const FishingScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FishingScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fishing_score = 2;
  void clear_fishing_score();
  static const int kFishingScoreFieldNumber = 2;
  ::google::protobuf::uint32 fishing_score() const;
  void set_fishing_score(::google::protobuf::uint32 value);

  // bool is_new_record = 4;
  void clear_is_new_record();
  static const int kIsNewRecordFieldNumber = 4;
  bool is_new_record() const;
  void set_is_new_record(bool value);

  // @@protoc_insertion_point(class_scope:proto.FishingScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fishing_score_;
  bool is_new_record_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class FishingGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FishingGallerySettleInfo) */ {
 public:
  FishingGallerySettleInfo();
  virtual ~FishingGallerySettleInfo();

  FishingGallerySettleInfo(const FishingGallerySettleInfo& from);

  inline FishingGallerySettleInfo& operator=(const FishingGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FishingGallerySettleInfo(FishingGallerySettleInfo&& from) noexcept
    : FishingGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline FishingGallerySettleInfo& operator=(FishingGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FishingGallerySettleInfo& default_instance();

  static inline const FishingGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const FishingGallerySettleInfo*>(
               &_FishingGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(FishingGallerySettleInfo* other);
  friend void swap(FishingGallerySettleInfo& a, FishingGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FishingGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FishingGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FishingGallerySettleInfo& from);
  void MergeFrom(const FishingGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FishingGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.FishInfo> fish_map = 11;
  int fish_map_size() const;
  void clear_fish_map();
  static const int kFishMapFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FishInfo >&
      fish_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FishInfo >*
      mutable_fish_map();

  // repeated .proto.FishingScore fishing_score_list = 15;
  int fishing_score_list_size() const;
  void clear_fishing_score_list();
  static const int kFishingScoreListFieldNumber = 15;
  const ::proto::FishingScore& fishing_score_list(int index) const;
  ::proto::FishingScore* mutable_fishing_score_list(int index);
  ::proto::FishingScore* add_fishing_score_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FishingScore >*
      mutable_fishing_score_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FishingScore >&
      fishing_score_list() const;

  // @@protoc_insertion_point(class_scope:proto.FishingGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class FishingGallerySettleInfo_FishMapEntry : public ::google::protobuf::internal::MapEntry<FishingGallerySettleInfo_FishMapEntry, 
      ::google::protobuf::uint32, ::proto::FishInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<FishingGallerySettleInfo_FishMapEntry, 
      ::google::protobuf::uint32, ::proto::FishInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    FishingGallerySettleInfo_FishMapEntry();
    FishingGallerySettleInfo_FishMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const FishingGallerySettleInfo_FishMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_FishingGallerySettleInfo_FishMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      FishingGallerySettleInfo_FishMapEntry,
      ::google::protobuf::uint32, ::proto::FishInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > fish_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::FishingScore > fishing_score_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RacingGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RacingGallerySettleInfo) */ {
 public:
  RacingGallerySettleInfo();
  virtual ~RacingGallerySettleInfo();

  RacingGallerySettleInfo(const RacingGallerySettleInfo& from);

  inline RacingGallerySettleInfo& operator=(const RacingGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RacingGallerySettleInfo(RacingGallerySettleInfo&& from) noexcept
    : RacingGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline RacingGallerySettleInfo& operator=(RacingGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RacingGallerySettleInfo& default_instance();

  static inline const RacingGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const RacingGallerySettleInfo*>(
               &_RacingGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(RacingGallerySettleInfo* other);
  friend void swap(RacingGallerySettleInfo& a, RacingGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RacingGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RacingGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RacingGallerySettleInfo& from);
  void MergeFrom(const RacingGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RacingGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 use_time = 1;
  void clear_use_time();
  static const int kUseTimeFieldNumber = 1;
  ::google::protobuf::uint32 use_time() const;
  void set_use_time(::google::protobuf::uint32 value);

  // .proto.GalleryStopReason reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::proto::GalleryStopReason reason() const;
  void set_reason(::proto::GalleryStopReason value);

  // uint32 winner_uid = 6;
  void clear_winner_uid();
  static const int kWinnerUidFieldNumber = 6;
  ::google::protobuf::uint32 winner_uid() const;
  void set_winner_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RacingGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 use_time_;
  int reason_;
  ::google::protobuf::uint32 winner_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SalvagePreventGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SalvagePreventGallerySettleInfo) */ {
 public:
  SalvagePreventGallerySettleInfo();
  virtual ~SalvagePreventGallerySettleInfo();

  SalvagePreventGallerySettleInfo(const SalvagePreventGallerySettleInfo& from);

  inline SalvagePreventGallerySettleInfo& operator=(const SalvagePreventGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SalvagePreventGallerySettleInfo(SalvagePreventGallerySettleInfo&& from) noexcept
    : SalvagePreventGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline SalvagePreventGallerySettleInfo& operator=(SalvagePreventGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SalvagePreventGallerySettleInfo& default_instance();

  static inline const SalvagePreventGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const SalvagePreventGallerySettleInfo*>(
               &_SalvagePreventGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(SalvagePreventGallerySettleInfo* other);
  friend void swap(SalvagePreventGallerySettleInfo& a, SalvagePreventGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SalvagePreventGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SalvagePreventGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SalvagePreventGallerySettleInfo& from);
  void MergeFrom(const SalvagePreventGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SalvagePreventGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.SalvagePreventStopReason reason = 7;
  void clear_reason();
  static const int kReasonFieldNumber = 7;
  ::proto::SalvagePreventStopReason reason() const;
  void set_reason(::proto::SalvagePreventStopReason value);

  // uint32 time_remain = 8;
  void clear_time_remain();
  static const int kTimeRemainFieldNumber = 8;
  ::google::protobuf::uint32 time_remain() const;
  void set_time_remain(::google::protobuf::uint32 value);

  // uint32 final_score = 13;
  void clear_final_score();
  static const int kFinalScoreFieldNumber = 13;
  ::google::protobuf::uint32 final_score() const;
  void set_final_score(::google::protobuf::uint32 value);

  // uint32 monster_count = 15;
  void clear_monster_count();
  static const int kMonsterCountFieldNumber = 15;
  ::google::protobuf::uint32 monster_count() const;
  void set_monster_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SalvagePreventGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  ::google::protobuf::uint32 time_remain_;
  ::google::protobuf::uint32 final_score_;
  ::google::protobuf::uint32 monster_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SalvageEscortGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SalvageEscortGallerySettleInfo) */ {
 public:
  SalvageEscortGallerySettleInfo();
  virtual ~SalvageEscortGallerySettleInfo();

  SalvageEscortGallerySettleInfo(const SalvageEscortGallerySettleInfo& from);

  inline SalvageEscortGallerySettleInfo& operator=(const SalvageEscortGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SalvageEscortGallerySettleInfo(SalvageEscortGallerySettleInfo&& from) noexcept
    : SalvageEscortGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline SalvageEscortGallerySettleInfo& operator=(SalvageEscortGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SalvageEscortGallerySettleInfo& default_instance();

  static inline const SalvageEscortGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const SalvageEscortGallerySettleInfo*>(
               &_SalvageEscortGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(SalvageEscortGallerySettleInfo* other);
  friend void swap(SalvageEscortGallerySettleInfo& a, SalvageEscortGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SalvageEscortGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SalvageEscortGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SalvageEscortGallerySettleInfo& from);
  void MergeFrom(const SalvageEscortGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SalvageEscortGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.SalvageEscortStopReason reason = 7;
  void clear_reason();
  static const int kReasonFieldNumber = 7;
  ::proto::SalvageEscortStopReason reason() const;
  void set_reason(::proto::SalvageEscortStopReason value);

  // uint32 time_remain = 14;
  void clear_time_remain();
  static const int kTimeRemainFieldNumber = 14;
  ::google::protobuf::uint32 time_remain() const;
  void set_time_remain(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SalvageEscortGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  ::google::protobuf::uint32 time_remain_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BalloonGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BalloonGallerySettleInfo) */ {
 public:
  BalloonGallerySettleInfo();
  virtual ~BalloonGallerySettleInfo();

  BalloonGallerySettleInfo(const BalloonGallerySettleInfo& from);

  inline BalloonGallerySettleInfo& operator=(const BalloonGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BalloonGallerySettleInfo(BalloonGallerySettleInfo&& from) noexcept
    : BalloonGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline BalloonGallerySettleInfo& operator=(BalloonGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BalloonGallerySettleInfo& default_instance();

  static inline const BalloonGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const BalloonGallerySettleInfo*>(
               &_BalloonGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(BalloonGallerySettleInfo* other);
  friend void swap(BalloonGallerySettleInfo& a, BalloonGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BalloonGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BalloonGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BalloonGallerySettleInfo& from);
  void MergeFrom(const BalloonGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BalloonGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 owner_uid = 6;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 6;
  ::google::protobuf::uint32 owner_uid() const;
  void set_owner_uid(::google::protobuf::uint32 value);

  // uint32 score = 8;
  void clear_score();
  static const int kScoreFieldNumber = 8;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 hit_count = 10;
  void clear_hit_count();
  static const int kHitCountFieldNumber = 10;
  ::google::protobuf::uint32 hit_count() const;
  void set_hit_count(::google::protobuf::uint32 value);

  // .proto.GalleryStopReason reason = 14;
  void clear_reason();
  static const int kReasonFieldNumber = 14;
  ::proto::GalleryStopReason reason() const;
  void set_reason(::proto::GalleryStopReason value);

  // @@protoc_insertion_point(class_scope:proto.BalloonGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 owner_uid_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 hit_count_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IrodoriMasterGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IrodoriMasterGallerySettleInfo) */ {
 public:
  IrodoriMasterGallerySettleInfo();
  virtual ~IrodoriMasterGallerySettleInfo();

  IrodoriMasterGallerySettleInfo(const IrodoriMasterGallerySettleInfo& from);

  inline IrodoriMasterGallerySettleInfo& operator=(const IrodoriMasterGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IrodoriMasterGallerySettleInfo(IrodoriMasterGallerySettleInfo&& from) noexcept
    : IrodoriMasterGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline IrodoriMasterGallerySettleInfo& operator=(IrodoriMasterGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IrodoriMasterGallerySettleInfo& default_instance();

  static inline const IrodoriMasterGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const IrodoriMasterGallerySettleInfo*>(
               &_IrodoriMasterGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(IrodoriMasterGallerySettleInfo* other);
  friend void swap(IrodoriMasterGallerySettleInfo& a, IrodoriMasterGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IrodoriMasterGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  IrodoriMasterGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IrodoriMasterGallerySettleInfo& from);
  void MergeFrom(const IrodoriMasterGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IrodoriMasterGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 level_id = 4;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 4;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // uint32 difficult = 6;
  void clear_difficult();
  static const int kDifficultFieldNumber = 6;
  ::google::protobuf::uint32 difficult() const;
  void set_difficult(::google::protobuf::uint32 value);

  // .proto.GalleryStopReason reason = 15;
  void clear_reason();
  static const int kReasonFieldNumber = 15;
  ::proto::GalleryStopReason reason() const;
  void set_reason(::proto::GalleryStopReason value);

  // bool is_finish = 11;
  void clear_is_finish();
  static const int kIsFinishFieldNumber = 11;
  bool is_finish() const;
  void set_is_finish(bool value);

  // uint32 finish_time = 14;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 14;
  ::google::protobuf::uint32 finish_time() const;
  void set_finish_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.IrodoriMasterGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_id_;
  ::google::protobuf::uint32 difficult_;
  int reason_;
  bool is_finish_;
  ::google::protobuf::uint32 finish_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhotoGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PhotoGallerySettleInfo) */ {
 public:
  PhotoGallerySettleInfo();
  virtual ~PhotoGallerySettleInfo();

  PhotoGallerySettleInfo(const PhotoGallerySettleInfo& from);

  inline PhotoGallerySettleInfo& operator=(const PhotoGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhotoGallerySettleInfo(PhotoGallerySettleInfo&& from) noexcept
    : PhotoGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline PhotoGallerySettleInfo& operator=(PhotoGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PhotoGallerySettleInfo& default_instance();

  static inline const PhotoGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const PhotoGallerySettleInfo*>(
               &_PhotoGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(PhotoGallerySettleInfo* other);
  friend void swap(PhotoGallerySettleInfo& a, PhotoGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhotoGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PhotoGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhotoGallerySettleInfo& from);
  void MergeFrom(const PhotoGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhotoGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GalleryStopReason reason = 7;
  void clear_reason();
  static const int kReasonFieldNumber = 7;
  ::proto::GalleryStopReason reason() const;
  void set_reason(::proto::GalleryStopReason value);

  // @@protoc_insertion_point(class_scope:proto.PhotoGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LuminanceStoneChallengeGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LuminanceStoneChallengeGallerySettleInfo) */ {
 public:
  LuminanceStoneChallengeGallerySettleInfo();
  virtual ~LuminanceStoneChallengeGallerySettleInfo();

  LuminanceStoneChallengeGallerySettleInfo(const LuminanceStoneChallengeGallerySettleInfo& from);

  inline LuminanceStoneChallengeGallerySettleInfo& operator=(const LuminanceStoneChallengeGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LuminanceStoneChallengeGallerySettleInfo(LuminanceStoneChallengeGallerySettleInfo&& from) noexcept
    : LuminanceStoneChallengeGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline LuminanceStoneChallengeGallerySettleInfo& operator=(LuminanceStoneChallengeGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LuminanceStoneChallengeGallerySettleInfo& default_instance();

  static inline const LuminanceStoneChallengeGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const LuminanceStoneChallengeGallerySettleInfo*>(
               &_LuminanceStoneChallengeGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(LuminanceStoneChallengeGallerySettleInfo* other);
  friend void swap(LuminanceStoneChallengeGallerySettleInfo& a, LuminanceStoneChallengeGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LuminanceStoneChallengeGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LuminanceStoneChallengeGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LuminanceStoneChallengeGallerySettleInfo& from);
  void MergeFrom(const LuminanceStoneChallengeGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LuminanceStoneChallengeGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 2;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 2;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 kill_special_monster_count = 8;
  void clear_kill_special_monster_count();
  static const int kKillSpecialMonsterCountFieldNumber = 8;
  ::google::protobuf::uint32 kill_special_monster_count() const;
  void set_kill_special_monster_count(::google::protobuf::uint32 value);

  // uint32 clean_mud_count = 10;
  void clear_clean_mud_count();
  static const int kCleanMudCountFieldNumber = 10;
  ::google::protobuf::uint32 clean_mud_count() const;
  void set_clean_mud_count(::google::protobuf::uint32 value);

  // .proto.GalleryStopReason reason = 11;
  void clear_reason();
  static const int kReasonFieldNumber = 11;
  ::proto::GalleryStopReason reason() const;
  void set_reason(::proto::GalleryStopReason value);

  // uint32 kill_monster_count = 12;
  void clear_kill_monster_count();
  static const int kKillMonsterCountFieldNumber = 12;
  ::google::protobuf::uint32 kill_monster_count() const;
  void set_kill_monster_count(::google::protobuf::uint32 value);

  // uint32 final_score = 13;
  void clear_final_score();
  static const int kFinalScoreFieldNumber = 13;
  ::google::protobuf::uint32 final_score() const;
  void set_final_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LuminanceStoneChallengeGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 kill_special_monster_count_;
  ::google::protobuf::uint32 clean_mud_count_;
  int reason_;
  ::google::protobuf::uint32 kill_monster_count_;
  ::google::protobuf::uint32 final_score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeGalleryInPlayingNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeGalleryInPlayingNotify) */ {
 public:
  HomeGalleryInPlayingNotify();
  virtual ~HomeGalleryInPlayingNotify();

  HomeGalleryInPlayingNotify(const HomeGalleryInPlayingNotify& from);

  inline HomeGalleryInPlayingNotify& operator=(const HomeGalleryInPlayingNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeGalleryInPlayingNotify(HomeGalleryInPlayingNotify&& from) noexcept
    : HomeGalleryInPlayingNotify() {
    *this = ::std::move(from);
  }

  inline HomeGalleryInPlayingNotify& operator=(HomeGalleryInPlayingNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeGalleryInPlayingNotify& default_instance();

  static inline const HomeGalleryInPlayingNotify* internal_default_instance() {
    return reinterpret_cast<const HomeGalleryInPlayingNotify*>(
               &_HomeGalleryInPlayingNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(HomeGalleryInPlayingNotify* other);
  friend void swap(HomeGalleryInPlayingNotify& a, HomeGalleryInPlayingNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeGalleryInPlayingNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeGalleryInPlayingNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeGalleryInPlayingNotify& from);
  void MergeFrom(const HomeGalleryInPlayingNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeGalleryInPlayingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 13;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 13;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeGalleryInPlayingNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SummerTimeV2BoatGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SummerTimeV2BoatGallerySettleInfo) */ {
 public:
  SummerTimeV2BoatGallerySettleInfo();
  virtual ~SummerTimeV2BoatGallerySettleInfo();

  SummerTimeV2BoatGallerySettleInfo(const SummerTimeV2BoatGallerySettleInfo& from);

  inline SummerTimeV2BoatGallerySettleInfo& operator=(const SummerTimeV2BoatGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SummerTimeV2BoatGallerySettleInfo(SummerTimeV2BoatGallerySettleInfo&& from) noexcept
    : SummerTimeV2BoatGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline SummerTimeV2BoatGallerySettleInfo& operator=(SummerTimeV2BoatGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SummerTimeV2BoatGallerySettleInfo& default_instance();

  static inline const SummerTimeV2BoatGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const SummerTimeV2BoatGallerySettleInfo*>(
               &_SummerTimeV2BoatGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(SummerTimeV2BoatGallerySettleInfo* other);
  friend void swap(SummerTimeV2BoatGallerySettleInfo& a, SummerTimeV2BoatGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SummerTimeV2BoatGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SummerTimeV2BoatGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SummerTimeV2BoatGallerySettleInfo& from);
  void MergeFrom(const SummerTimeV2BoatGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SummerTimeV2BoatGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 1;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 1;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 param2 = 2;
  void clear_param2();
  static const int kParam2FieldNumber = 2;
  ::google::protobuf::uint32 param2() const;
  void set_param2(::google::protobuf::uint32 value);

  // .proto.GalleryStopReason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::proto::GalleryStopReason reason() const;
  void set_reason(::proto::GalleryStopReason value);

  // uint32 param3 = 6;
  void clear_param3();
  static const int kParam3FieldNumber = 6;
  ::google::protobuf::uint32 param3() const;
  void set_param3(::google::protobuf::uint32 value);

  // uint32 param1 = 7;
  void clear_param1();
  static const int kParam1FieldNumber = 7;
  ::google::protobuf::uint32 param1() const;
  void set_param1(::google::protobuf::uint32 value);

  // uint32 used_time = 12;
  void clear_used_time();
  static const int kUsedTimeFieldNumber = 12;
  ::google::protobuf::uint32 used_time() const;
  void set_used_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SummerTimeV2BoatGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 param2_;
  int reason_;
  ::google::protobuf::uint32 param3_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::uint32 used_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryIslandPartyDownHillInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryIslandPartyDownHillInfoNotify) */ {
 public:
  GalleryIslandPartyDownHillInfoNotify();
  virtual ~GalleryIslandPartyDownHillInfoNotify();

  GalleryIslandPartyDownHillInfoNotify(const GalleryIslandPartyDownHillInfoNotify& from);

  inline GalleryIslandPartyDownHillInfoNotify& operator=(const GalleryIslandPartyDownHillInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryIslandPartyDownHillInfoNotify(GalleryIslandPartyDownHillInfoNotify&& from) noexcept
    : GalleryIslandPartyDownHillInfoNotify() {
    *this = ::std::move(from);
  }

  inline GalleryIslandPartyDownHillInfoNotify& operator=(GalleryIslandPartyDownHillInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryIslandPartyDownHillInfoNotify& default_instance();

  static inline const GalleryIslandPartyDownHillInfoNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryIslandPartyDownHillInfoNotify*>(
               &_GalleryIslandPartyDownHillInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(GalleryIslandPartyDownHillInfoNotify* other);
  friend void swap(GalleryIslandPartyDownHillInfoNotify& a, GalleryIslandPartyDownHillInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryIslandPartyDownHillInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryIslandPartyDownHillInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryIslandPartyDownHillInfoNotify& from);
  void MergeFrom(const GalleryIslandPartyDownHillInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryIslandPartyDownHillInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 total_kill_monster_count = 11;
  void clear_total_kill_monster_count();
  static const int kTotalKillMonsterCountFieldNumber = 11;
  ::google::protobuf::uint32 total_kill_monster_count() const;
  void set_total_kill_monster_count(::google::protobuf::uint32 value);

  // uint32 gallery_id = 2;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 2;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // uint32 coin = 9;
  void clear_coin();
  static const int kCoinFieldNumber = 9;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryIslandPartyDownHillInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 total_kill_monster_count_;
  ::google::protobuf::uint32 gallery_id_;
  ::google::protobuf::uint32 coin_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IslandPartyRaftInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IslandPartyRaftInfoNotify) */ {
 public:
  IslandPartyRaftInfoNotify();
  virtual ~IslandPartyRaftInfoNotify();

  IslandPartyRaftInfoNotify(const IslandPartyRaftInfoNotify& from);

  inline IslandPartyRaftInfoNotify& operator=(const IslandPartyRaftInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IslandPartyRaftInfoNotify(IslandPartyRaftInfoNotify&& from) noexcept
    : IslandPartyRaftInfoNotify() {
    *this = ::std::move(from);
  }

  inline IslandPartyRaftInfoNotify& operator=(IslandPartyRaftInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IslandPartyRaftInfoNotify& default_instance();

  static inline const IslandPartyRaftInfoNotify* internal_default_instance() {
    return reinterpret_cast<const IslandPartyRaftInfoNotify*>(
               &_IslandPartyRaftInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(IslandPartyRaftInfoNotify* other);
  friend void swap(IslandPartyRaftInfoNotify& a, IslandPartyRaftInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IslandPartyRaftInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  IslandPartyRaftInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IslandPartyRaftInfoNotify& from);
  void MergeFrom(const IslandPartyRaftInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IslandPartyRaftInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fuel = 3;
  void clear_fuel();
  static const int kFuelFieldNumber = 3;
  ::google::protobuf::uint32 fuel() const;
  void set_fuel(::google::protobuf::uint32 value);

  // uint32 point_id = 7;
  void clear_point_id();
  static const int kPointIdFieldNumber = 7;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 component = 13;
  void clear_component();
  static const int kComponentFieldNumber = 13;
  ::google::protobuf::uint32 component() const;
  void set_component(::google::protobuf::uint32 value);

  // uint32 coin = 15;
  void clear_coin();
  static const int kCoinFieldNumber = 15;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.IslandPartyRaftInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fuel_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 component_;
  ::google::protobuf::uint32 coin_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IslandPartySailInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IslandPartySailInfoNotify) */ {
 public:
  IslandPartySailInfoNotify();
  virtual ~IslandPartySailInfoNotify();

  IslandPartySailInfoNotify(const IslandPartySailInfoNotify& from);

  inline IslandPartySailInfoNotify& operator=(const IslandPartySailInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IslandPartySailInfoNotify(IslandPartySailInfoNotify&& from) noexcept
    : IslandPartySailInfoNotify() {
    *this = ::std::move(from);
  }

  inline IslandPartySailInfoNotify& operator=(IslandPartySailInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IslandPartySailInfoNotify& default_instance();

  static inline const IslandPartySailInfoNotify* internal_default_instance() {
    return reinterpret_cast<const IslandPartySailInfoNotify*>(
               &_IslandPartySailInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(IslandPartySailInfoNotify* other);
  friend void swap(IslandPartySailInfoNotify& a, IslandPartySailInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IslandPartySailInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  IslandPartySailInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IslandPartySailInfoNotify& from);
  void MergeFrom(const IslandPartySailInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IslandPartySailInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 kill_monster_count = 4;
  void clear_kill_monster_count();
  static const int kKillMonsterCountFieldNumber = 4;
  ::google::protobuf::uint32 kill_monster_count() const;
  void set_kill_monster_count(::google::protobuf::uint32 value);

  // .proto.IslandPartySailStage stage = 8;
  void clear_stage();
  static const int kStageFieldNumber = 8;
  ::proto::IslandPartySailStage stage() const;
  void set_stage(::proto::IslandPartySailStage value);

  // uint32 coin = 10;
  void clear_coin();
  static const int kCoinFieldNumber = 10;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // uint32 progress = 15;
  void clear_progress();
  static const int kProgressFieldNumber = 15;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.IslandPartySailInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 kill_monster_count_;
  int stage_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IslandPartyGallerySettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.IslandPartyGallerySettleInfo) */ {
 public:
  IslandPartyGallerySettleInfo();
  virtual ~IslandPartyGallerySettleInfo();

  IslandPartyGallerySettleInfo(const IslandPartyGallerySettleInfo& from);

  inline IslandPartyGallerySettleInfo& operator=(const IslandPartyGallerySettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IslandPartyGallerySettleInfo(IslandPartyGallerySettleInfo&& from) noexcept
    : IslandPartyGallerySettleInfo() {
    *this = ::std::move(from);
  }

  inline IslandPartyGallerySettleInfo& operator=(IslandPartyGallerySettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IslandPartyGallerySettleInfo& default_instance();

  static inline const IslandPartyGallerySettleInfo* internal_default_instance() {
    return reinterpret_cast<const IslandPartyGallerySettleInfo*>(
               &_IslandPartyGallerySettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(IslandPartyGallerySettleInfo* other);
  friend void swap(IslandPartyGallerySettleInfo& a, IslandPartyGallerySettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IslandPartyGallerySettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  IslandPartyGallerySettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IslandPartyGallerySettleInfo& from);
  void MergeFrom(const IslandPartyGallerySettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IslandPartyGallerySettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ExhibitionDisplayInfo card_list = 11;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 11;
  const ::proto::ExhibitionDisplayInfo& card_list(int index) const;
  ::proto::ExhibitionDisplayInfo* mutable_card_list(int index);
  ::proto::ExhibitionDisplayInfo* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
      card_list() const;

  // .proto.OnlinePlayerInfo player_info = 13;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 13;
  const ::proto::OnlinePlayerInfo& player_info() const;
  ::proto::OnlinePlayerInfo* mutable_player_info();
  ::proto::OnlinePlayerInfo* release_player_info();
  void set_allocated_player_info(::proto::OnlinePlayerInfo* player_info);

  // @@protoc_insertion_point(class_scope:proto.IslandPartyGallerySettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo > card_list_;
  ::proto::OnlinePlayerInfo* player_info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackRebornGalleryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BackRebornGalleryReq) */ {
 public:
  BackRebornGalleryReq();
  virtual ~BackRebornGalleryReq();

  BackRebornGalleryReq(const BackRebornGalleryReq& from);

  inline BackRebornGalleryReq& operator=(const BackRebornGalleryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackRebornGalleryReq(BackRebornGalleryReq&& from) noexcept
    : BackRebornGalleryReq() {
    *this = ::std::move(from);
  }

  inline BackRebornGalleryReq& operator=(BackRebornGalleryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackRebornGalleryReq& default_instance();

  static inline const BackRebornGalleryReq* internal_default_instance() {
    return reinterpret_cast<const BackRebornGalleryReq*>(
               &_BackRebornGalleryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(BackRebornGalleryReq* other);
  friend void swap(BackRebornGalleryReq& a, BackRebornGalleryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackRebornGalleryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BackRebornGalleryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackRebornGalleryReq& from);
  void MergeFrom(const BackRebornGalleryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackRebornGalleryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gallery_id = 15;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 15;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BackRebornGalleryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackRebornGalleryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BackRebornGalleryRsp) */ {
 public:
  BackRebornGalleryRsp();
  virtual ~BackRebornGalleryRsp();

  BackRebornGalleryRsp(const BackRebornGalleryRsp& from);

  inline BackRebornGalleryRsp& operator=(const BackRebornGalleryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackRebornGalleryRsp(BackRebornGalleryRsp&& from) noexcept
    : BackRebornGalleryRsp() {
    *this = ::std::move(from);
  }

  inline BackRebornGalleryRsp& operator=(BackRebornGalleryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackRebornGalleryRsp& default_instance();

  static inline const BackRebornGalleryRsp* internal_default_instance() {
    return reinterpret_cast<const BackRebornGalleryRsp*>(
               &_BackRebornGalleryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(BackRebornGalleryRsp* other);
  friend void swap(BackRebornGalleryRsp& a, BackRebornGalleryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackRebornGalleryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BackRebornGalleryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackRebornGalleryRsp& from);
  void MergeFrom(const BackRebornGalleryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackRebornGalleryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 gallery_id = 9;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 9;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BackRebornGalleryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GalleryWillStartCountdownNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GalleryWillStartCountdownNotify) */ {
 public:
  GalleryWillStartCountdownNotify();
  virtual ~GalleryWillStartCountdownNotify();

  GalleryWillStartCountdownNotify(const GalleryWillStartCountdownNotify& from);

  inline GalleryWillStartCountdownNotify& operator=(const GalleryWillStartCountdownNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GalleryWillStartCountdownNotify(GalleryWillStartCountdownNotify&& from) noexcept
    : GalleryWillStartCountdownNotify() {
    *this = ::std::move(from);
  }

  inline GalleryWillStartCountdownNotify& operator=(GalleryWillStartCountdownNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GalleryWillStartCountdownNotify& default_instance();

  static inline const GalleryWillStartCountdownNotify* internal_default_instance() {
    return reinterpret_cast<const GalleryWillStartCountdownNotify*>(
               &_GalleryWillStartCountdownNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(GalleryWillStartCountdownNotify* other);
  friend void swap(GalleryWillStartCountdownNotify& a, GalleryWillStartCountdownNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GalleryWillStartCountdownNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GalleryWillStartCountdownNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GalleryWillStartCountdownNotify& from);
  void MergeFrom(const GalleryWillStartCountdownNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GalleryWillStartCountdownNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_end = 7;
  void clear_is_end();
  static const int kIsEndFieldNumber = 7;
  bool is_end() const;
  void set_is_end(bool value);

  // .proto.GalleryStartSource start_source = 11;
  void clear_start_source();
  static const int kStartSourceFieldNumber = 11;
  ::proto::GalleryStartSource start_source() const;
  void set_start_source(::proto::GalleryStartSource value);

  // uint32 end_time = 12;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 12;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 gallery_id = 14;
  void clear_gallery_id();
  static const int kGalleryIdFieldNumber = 14;
  ::google::protobuf::uint32 gallery_id() const;
  void set_gallery_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GalleryWillStartCountdownNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_end_;
  int start_source_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 gallery_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstableSprayGalleryInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InstableSprayGalleryInfoNotify) */ {
 public:
  InstableSprayGalleryInfoNotify();
  virtual ~InstableSprayGalleryInfoNotify();

  InstableSprayGalleryInfoNotify(const InstableSprayGalleryInfoNotify& from);

  inline InstableSprayGalleryInfoNotify& operator=(const InstableSprayGalleryInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstableSprayGalleryInfoNotify(InstableSprayGalleryInfoNotify&& from) noexcept
    : InstableSprayGalleryInfoNotify() {
    *this = ::std::move(from);
  }

  inline InstableSprayGalleryInfoNotify& operator=(InstableSprayGalleryInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstableSprayGalleryInfoNotify& default_instance();

  static inline const InstableSprayGalleryInfoNotify* internal_default_instance() {
    return reinterpret_cast<const InstableSprayGalleryInfoNotify*>(
               &_InstableSprayGalleryInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(InstableSprayGalleryInfoNotify* other);
  friend void swap(InstableSprayGalleryInfoNotify& a, InstableSprayGalleryInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstableSprayGalleryInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  InstableSprayGalleryInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InstableSprayGalleryInfoNotify& from);
  void MergeFrom(const InstableSprayGalleryInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InstableSprayGalleryInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 score = 3;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InstableSprayGalleryInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryMuqadasPotionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryMuqadasPotionInfo) */ {
 public:
  SceneGalleryMuqadasPotionInfo();
  virtual ~SceneGalleryMuqadasPotionInfo();

  SceneGalleryMuqadasPotionInfo(const SceneGalleryMuqadasPotionInfo& from);

  inline SceneGalleryMuqadasPotionInfo& operator=(const SceneGalleryMuqadasPotionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryMuqadasPotionInfo(SceneGalleryMuqadasPotionInfo&& from) noexcept
    : SceneGalleryMuqadasPotionInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryMuqadasPotionInfo& operator=(SceneGalleryMuqadasPotionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryMuqadasPotionInfo& default_instance();

  static inline const SceneGalleryMuqadasPotionInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryMuqadasPotionInfo*>(
               &_SceneGalleryMuqadasPotionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(SceneGalleryMuqadasPotionInfo* other);
  friend void swap(SceneGalleryMuqadasPotionInfo& a, SceneGalleryMuqadasPotionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryMuqadasPotionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryMuqadasPotionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryMuqadasPotionInfo& from);
  void MergeFrom(const SceneGalleryMuqadasPotionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryMuqadasPotionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 capture_weakness_count = 4;
  void clear_capture_weakness_count();
  static const int kCaptureWeaknessCountFieldNumber = 4;
  ::google::protobuf::uint32 capture_weakness_count() const;
  void set_capture_weakness_count(::google::protobuf::uint32 value);

  // uint32 score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 skill_use_limit = 9;
  void clear_skill_use_limit();
  static const int kSkillUseLimitFieldNumber = 9;
  ::google::protobuf::uint32 skill_use_limit() const;
  void set_skill_use_limit(::google::protobuf::uint32 value);

  // uint32 skill_energy = 10;
  void clear_skill_energy();
  static const int kSkillEnergyFieldNumber = 10;
  ::google::protobuf::uint32 skill_energy() const;
  void set_skill_energy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGalleryMuqadasPotionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 capture_weakness_count_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 skill_use_limit_;
  ::google::protobuf::uint32 skill_energy_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VintageHuntingFirstStageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VintageHuntingFirstStageInfo) */ {
 public:
  VintageHuntingFirstStageInfo();
  virtual ~VintageHuntingFirstStageInfo();

  VintageHuntingFirstStageInfo(const VintageHuntingFirstStageInfo& from);

  inline VintageHuntingFirstStageInfo& operator=(const VintageHuntingFirstStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VintageHuntingFirstStageInfo(VintageHuntingFirstStageInfo&& from) noexcept
    : VintageHuntingFirstStageInfo() {
    *this = ::std::move(from);
  }

  inline VintageHuntingFirstStageInfo& operator=(VintageHuntingFirstStageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VintageHuntingFirstStageInfo& default_instance();

  static inline const VintageHuntingFirstStageInfo* internal_default_instance() {
    return reinterpret_cast<const VintageHuntingFirstStageInfo*>(
               &_VintageHuntingFirstStageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(VintageHuntingFirstStageInfo* other);
  friend void swap(VintageHuntingFirstStageInfo& a, VintageHuntingFirstStageInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VintageHuntingFirstStageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VintageHuntingFirstStageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VintageHuntingFirstStageInfo& from);
  void MergeFrom(const VintageHuntingFirstStageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VintageHuntingFirstStageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 brutal_cnt = 7;
  void clear_brutal_cnt();
  static const int kBrutalCntFieldNumber = 7;
  ::google::protobuf::uint32 brutal_cnt() const;
  void set_brutal_cnt(::google::protobuf::uint32 value);

  // uint32 elite_cnt = 11;
  void clear_elite_cnt();
  static const int kEliteCntFieldNumber = 11;
  ::google::protobuf::uint32 elite_cnt() const;
  void set_elite_cnt(::google::protobuf::uint32 value);

  // uint32 score = 14;
  void clear_score();
  static const int kScoreFieldNumber = 14;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 timid_cnt = 15;
  void clear_timid_cnt();
  static const int kTimidCntFieldNumber = 15;
  ::google::protobuf::uint32 timid_cnt() const;
  void set_timid_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.VintageHuntingFirstStageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 brutal_cnt_;
  ::google::protobuf::uint32 elite_cnt_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 timid_cnt_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VintageHuntingSecondStageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VintageHuntingSecondStageInfo) */ {
 public:
  VintageHuntingSecondStageInfo();
  virtual ~VintageHuntingSecondStageInfo();

  VintageHuntingSecondStageInfo(const VintageHuntingSecondStageInfo& from);

  inline VintageHuntingSecondStageInfo& operator=(const VintageHuntingSecondStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VintageHuntingSecondStageInfo(VintageHuntingSecondStageInfo&& from) noexcept
    : VintageHuntingSecondStageInfo() {
    *this = ::std::move(from);
  }

  inline VintageHuntingSecondStageInfo& operator=(VintageHuntingSecondStageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VintageHuntingSecondStageInfo& default_instance();

  static inline const VintageHuntingSecondStageInfo* internal_default_instance() {
    return reinterpret_cast<const VintageHuntingSecondStageInfo*>(
               &_VintageHuntingSecondStageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(VintageHuntingSecondStageInfo* other);
  friend void swap(VintageHuntingSecondStageInfo& a, VintageHuntingSecondStageInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VintageHuntingSecondStageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VintageHuntingSecondStageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VintageHuntingSecondStageInfo& from);
  void MergeFrom(const VintageHuntingSecondStageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VintageHuntingSecondStageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 capture_animal_num = 13;
  void clear_capture_animal_num();
  static const int kCaptureAnimalNumFieldNumber = 13;
  ::google::protobuf::uint32 capture_animal_num() const;
  void set_capture_animal_num(::google::protobuf::uint32 value);

  // uint32 left_num = 3;
  void clear_left_num();
  static const int kLeftNumFieldNumber = 3;
  ::google::protobuf::uint32 left_num() const;
  void set_left_num(::google::protobuf::uint32 value);

  // uint32 total_num = 11;
  void clear_total_num();
  static const int kTotalNumFieldNumber = 11;
  ::google::protobuf::uint32 total_num() const;
  void set_total_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.VintageHuntingSecondStageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 capture_animal_num_;
  ::google::protobuf::uint32 left_num_;
  ::google::protobuf::uint32 total_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VintageHuntingThirdStageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VintageHuntingThirdStageInfo) */ {
 public:
  VintageHuntingThirdStageInfo();
  virtual ~VintageHuntingThirdStageInfo();

  VintageHuntingThirdStageInfo(const VintageHuntingThirdStageInfo& from);

  inline VintageHuntingThirdStageInfo& operator=(const VintageHuntingThirdStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VintageHuntingThirdStageInfo(VintageHuntingThirdStageInfo&& from) noexcept
    : VintageHuntingThirdStageInfo() {
    *this = ::std::move(from);
  }

  inline VintageHuntingThirdStageInfo& operator=(VintageHuntingThirdStageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VintageHuntingThirdStageInfo& default_instance();

  static inline const VintageHuntingThirdStageInfo* internal_default_instance() {
    return reinterpret_cast<const VintageHuntingThirdStageInfo*>(
               &_VintageHuntingThirdStageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(VintageHuntingThirdStageInfo* other);
  friend void swap(VintageHuntingThirdStageInfo& a, VintageHuntingThirdStageInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VintageHuntingThirdStageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VintageHuntingThirdStageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VintageHuntingThirdStageInfo& from);
  void MergeFrom(const VintageHuntingThirdStageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VintageHuntingThirdStageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.VintageHuntingThirdStageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGalleryVintageHuntingInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGalleryVintageHuntingInfo) */ {
 public:
  SceneGalleryVintageHuntingInfo();
  virtual ~SceneGalleryVintageHuntingInfo();

  SceneGalleryVintageHuntingInfo(const SceneGalleryVintageHuntingInfo& from);

  inline SceneGalleryVintageHuntingInfo& operator=(const SceneGalleryVintageHuntingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGalleryVintageHuntingInfo(SceneGalleryVintageHuntingInfo&& from) noexcept
    : SceneGalleryVintageHuntingInfo() {
    *this = ::std::move(from);
  }

  inline SceneGalleryVintageHuntingInfo& operator=(SceneGalleryVintageHuntingInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGalleryVintageHuntingInfo& default_instance();

  enum InfoCase {
    kFirstStageInfo = 2,
    kSecondStageInfo = 15,
    kThirdStageInfo = 12,
    INFO_NOT_SET = 0,
  };

  static inline const SceneGalleryVintageHuntingInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGalleryVintageHuntingInfo*>(
               &_SceneGalleryVintageHuntingInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(SceneGalleryVintageHuntingInfo* other);
  friend void swap(SceneGalleryVintageHuntingInfo& a, SceneGalleryVintageHuntingInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGalleryVintageHuntingInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGalleryVintageHuntingInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGalleryVintageHuntingInfo& from);
  void MergeFrom(const SceneGalleryVintageHuntingInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGalleryVintageHuntingInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 stage_id = 7;
  void clear_stage_id();
  static const int kStageIdFieldNumber = 7;
  ::google::protobuf::uint32 stage_id() const;
  void set_stage_id(::google::protobuf::uint32 value);

  // .proto.VintageHuntingFirstStageInfo first_stage_info = 2;
  bool has_first_stage_info() const;
  void clear_first_stage_info();
  static const int kFirstStageInfoFieldNumber = 2;
  const ::proto::VintageHuntingFirstStageInfo& first_stage_info() const;
  ::proto::VintageHuntingFirstStageInfo* mutable_first_stage_info();
  ::proto::VintageHuntingFirstStageInfo* release_first_stage_info();
  void set_allocated_first_stage_info(::proto::VintageHuntingFirstStageInfo* first_stage_info);

  // .proto.VintageHuntingSecondStageInfo second_stage_info = 15;
  bool has_second_stage_info() const;
  void clear_second_stage_info();
  static const int kSecondStageInfoFieldNumber = 15;
  const ::proto::VintageHuntingSecondStageInfo& second_stage_info() const;
  ::proto::VintageHuntingSecondStageInfo* mutable_second_stage_info();
  ::proto::VintageHuntingSecondStageInfo* release_second_stage_info();
  void set_allocated_second_stage_info(::proto::VintageHuntingSecondStageInfo* second_stage_info);

  // .proto.VintageHuntingThirdStageInfo third_stage_info = 12;
  bool has_third_stage_info() const;
  void clear_third_stage_info();
  static const int kThirdStageInfoFieldNumber = 12;
  const ::proto::VintageHuntingThirdStageInfo& third_stage_info() const;
  ::proto::VintageHuntingThirdStageInfo* mutable_third_stage_info();
  ::proto::VintageHuntingThirdStageInfo* release_third_stage_info();
  void set_allocated_third_stage_info(::proto::VintageHuntingThirdStageInfo* third_stage_info);

  InfoCase info_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneGalleryVintageHuntingInfo)
 private:
  void set_has_first_stage_info();
  void set_has_second_stage_info();
  void set_has_third_stage_info();

  inline bool has_info() const;
  void clear_info();
  inline void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 stage_id_;
  union InfoUnion {
    InfoUnion() {}
    ::proto::VintageHuntingFirstStageInfo* first_stage_info_;
    ::proto::VintageHuntingSecondStageInfo* second_stage_info_;
    ::proto::VintageHuntingThirdStageInfo* third_stage_info_;
  } info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WindFieldGalleryInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WindFieldGalleryInfoNotify) */ {
 public:
  WindFieldGalleryInfoNotify();
  virtual ~WindFieldGalleryInfoNotify();

  WindFieldGalleryInfoNotify(const WindFieldGalleryInfoNotify& from);

  inline WindFieldGalleryInfoNotify& operator=(const WindFieldGalleryInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WindFieldGalleryInfoNotify(WindFieldGalleryInfoNotify&& from) noexcept
    : WindFieldGalleryInfoNotify() {
    *this = ::std::move(from);
  }

  inline WindFieldGalleryInfoNotify& operator=(WindFieldGalleryInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WindFieldGalleryInfoNotify& default_instance();

  static inline const WindFieldGalleryInfoNotify* internal_default_instance() {
    return reinterpret_cast<const WindFieldGalleryInfoNotify*>(
               &_WindFieldGalleryInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(WindFieldGalleryInfoNotify* other);
  friend void swap(WindFieldGalleryInfoNotify& a, WindFieldGalleryInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WindFieldGalleryInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WindFieldGalleryInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WindFieldGalleryInfoNotify& from);
  void MergeFrom(const WindFieldGalleryInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WindFieldGalleryInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 challenge_ball_max_count = 1;
  void clear_challenge_ball_max_count();
  static const int kChallengeBallMaxCountFieldNumber = 1;
  ::google::protobuf::uint32 challenge_ball_max_count() const;
  void set_challenge_ball_max_count(::google::protobuf::uint32 value);

  // uint32 show_id = 3;
  void clear_show_id();
  static const int kShowIdFieldNumber = 3;
  ::google::protobuf::uint32 show_id() const;
  void set_show_id(::google::protobuf::uint32 value);

  // uint32 challenge_timestamp = 4;
  void clear_challenge_timestamp();
  static const int kChallengeTimestampFieldNumber = 4;
  ::google::protobuf::uint32 challenge_timestamp() const;
  void set_challenge_timestamp(::google::protobuf::uint32 value);

  // uint32 challenge_total_time = 5;
  void clear_challenge_total_time();
  static const int kChallengeTotalTimeFieldNumber = 5;
  ::google::protobuf::uint32 challenge_total_time() const;
  void set_challenge_total_time(::google::protobuf::uint32 value);

  // uint32 killed_monster_num = 7;
  void clear_killed_monster_num();
  static const int kKilledMonsterNumFieldNumber = 7;
  ::google::protobuf::uint32 killed_monster_num() const;
  void set_killed_monster_num(::google::protobuf::uint32 value);

  // uint32 coin_num = 9;
  void clear_coin_num();
  static const int kCoinNumFieldNumber = 9;
  ::google::protobuf::uint32 coin_num() const;
  void set_coin_num(::google::protobuf::uint32 value);

  // uint32 challenge_ball_cur_count = 10;
  void clear_challenge_ball_cur_count();
  static const int kChallengeBallCurCountFieldNumber = 10;
  ::google::protobuf::uint32 challenge_ball_cur_count() const;
  void set_challenge_ball_cur_count(::google::protobuf::uint32 value);

  // uint32 element_ball_num = 14;
  void clear_element_ball_num();
  static const int kElementBallNumFieldNumber = 14;
  ::google::protobuf::uint32 element_ball_num() const;
  void set_element_ball_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WindFieldGalleryInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 challenge_ball_max_count_;
  ::google::protobuf::uint32 show_id_;
  ::google::protobuf::uint32 challenge_timestamp_;
  ::google::protobuf::uint32 challenge_total_time_;
  ::google::protobuf::uint32 killed_monster_num_;
  ::google::protobuf::uint32 coin_num_;
  ::google::protobuf::uint32 challenge_ball_cur_count_;
  ::google::protobuf::uint32 element_ball_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WindFieldGalleryChallengeInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WindFieldGalleryChallengeInfoNotify) */ {
 public:
  WindFieldGalleryChallengeInfoNotify();
  virtual ~WindFieldGalleryChallengeInfoNotify();

  WindFieldGalleryChallengeInfoNotify(const WindFieldGalleryChallengeInfoNotify& from);

  inline WindFieldGalleryChallengeInfoNotify& operator=(const WindFieldGalleryChallengeInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WindFieldGalleryChallengeInfoNotify(WindFieldGalleryChallengeInfoNotify&& from) noexcept
    : WindFieldGalleryChallengeInfoNotify() {
    *this = ::std::move(from);
  }

  inline WindFieldGalleryChallengeInfoNotify& operator=(WindFieldGalleryChallengeInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WindFieldGalleryChallengeInfoNotify& default_instance();

  static inline const WindFieldGalleryChallengeInfoNotify* internal_default_instance() {
    return reinterpret_cast<const WindFieldGalleryChallengeInfoNotify*>(
               &_WindFieldGalleryChallengeInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(WindFieldGalleryChallengeInfoNotify* other);
  friend void swap(WindFieldGalleryChallengeInfoNotify& a, WindFieldGalleryChallengeInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WindFieldGalleryChallengeInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WindFieldGalleryChallengeInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WindFieldGalleryChallengeInfoNotify& from);
  void MergeFrom(const WindFieldGalleryChallengeInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WindFieldGalleryChallengeInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 challenge_ball_cur_count = 1;
  void clear_challenge_ball_cur_count();
  static const int kChallengeBallCurCountFieldNumber = 1;
  ::google::protobuf::uint32 challenge_ball_cur_count() const;
  void set_challenge_ball_cur_count(::google::protobuf::uint32 value);

  // uint32 challenge_timestamp = 6;
  void clear_challenge_timestamp();
  static const int kChallengeTimestampFieldNumber = 6;
  ::google::protobuf::uint32 challenge_timestamp() const;
  void set_challenge_timestamp(::google::protobuf::uint32 value);

  // bool is_start = 8;
  void clear_is_start();
  static const int kIsStartFieldNumber = 8;
  bool is_start() const;
  void set_is_start(bool value);

  // bool is_success = 7;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 7;
  bool is_success() const;
  void set_is_success(bool value);

  // uint32 challenge_ball_max_count = 11;
  void clear_challenge_ball_max_count();
  static const int kChallengeBallMaxCountFieldNumber = 11;
  ::google::protobuf::uint32 challenge_ball_max_count() const;
  void set_challenge_ball_max_count(::google::protobuf::uint32 value);

  // uint32 show_id = 12;
  void clear_show_id();
  static const int kShowIdFieldNumber = 12;
  ::google::protobuf::uint32 show_id() const;
  void set_show_id(::google::protobuf::uint32 value);

  // uint32 challenge_total_time = 13;
  void clear_challenge_total_time();
  static const int kChallengeTotalTimeFieldNumber = 13;
  ::google::protobuf::uint32 challenge_total_time() const;
  void set_challenge_total_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WindFieldGalleryChallengeInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 challenge_ball_cur_count_;
  ::google::protobuf::uint32 challenge_timestamp_;
  bool is_start_;
  bool is_success_;
  ::google::protobuf::uint32 challenge_ball_max_count_;
  ::google::protobuf::uint32 show_id_;
  ::google::protobuf::uint32 challenge_total_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FungusFighterTrainingInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FungusFighterTrainingInfoNotify) */ {
 public:
  FungusFighterTrainingInfoNotify();
  virtual ~FungusFighterTrainingInfoNotify();

  FungusFighterTrainingInfoNotify(const FungusFighterTrainingInfoNotify& from);

  inline FungusFighterTrainingInfoNotify& operator=(const FungusFighterTrainingInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FungusFighterTrainingInfoNotify(FungusFighterTrainingInfoNotify&& from) noexcept
    : FungusFighterTrainingInfoNotify() {
    *this = ::std::move(from);
  }

  inline FungusFighterTrainingInfoNotify& operator=(FungusFighterTrainingInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FungusFighterTrainingInfoNotify& default_instance();

  static inline const FungusFighterTrainingInfoNotify* internal_default_instance() {
    return reinterpret_cast<const FungusFighterTrainingInfoNotify*>(
               &_FungusFighterTrainingInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(FungusFighterTrainingInfoNotify* other);
  friend void swap(FungusFighterTrainingInfoNotify& a, FungusFighterTrainingInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FungusFighterTrainingInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  FungusFighterTrainingInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FungusFighterTrainingInfoNotify& from);
  void MergeFrom(const FungusFighterTrainingInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FungusFighterTrainingInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 buff_start_time = 3;
  void clear_buff_start_time();
  static const int kBuffStartTimeFieldNumber = 3;
  ::google::protobuf::uint32 buff_start_time() const;
  void set_buff_start_time(::google::protobuf::uint32 value);

  // uint32 buff_last_time = 4;
  void clear_buff_last_time();
  static const int kBuffLastTimeFieldNumber = 4;
  ::google::protobuf::uint32 buff_last_time() const;
  void set_buff_last_time(::google::protobuf::uint32 value);

  // uint32 rest_skill_count = 6;
  void clear_rest_skill_count();
  static const int kRestSkillCountFieldNumber = 6;
  ::google::protobuf::uint32 rest_skill_count() const;
  void set_rest_skill_count(::google::protobuf::uint32 value);

  // uint32 max_skill_count = 7;
  void clear_max_skill_count();
  static const int kMaxSkillCountFieldNumber = 7;
  ::google::protobuf::uint32 max_skill_count() const;
  void set_max_skill_count(::google::protobuf::uint32 value);

  // uint32 killed_monster_count = 15;
  void clear_killed_monster_count();
  static const int kKilledMonsterCountFieldNumber = 15;
  ::google::protobuf::uint32 killed_monster_count() const;
  void set_killed_monster_count(::google::protobuf::uint32 value);

  // uint32 max_monster_count = 8;
  void clear_max_monster_count();
  static const int kMaxMonsterCountFieldNumber = 8;
  ::google::protobuf::uint32 max_monster_count() const;
  void set_max_monster_count(::google::protobuf::uint32 value);

  // uint32 buff_id = 14;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 14;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FungusFighterTrainingInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 buff_start_time_;
  ::google::protobuf::uint32 buff_last_time_;
  ::google::protobuf::uint32 rest_skill_count_;
  ::google::protobuf::uint32 max_skill_count_;
  ::google::protobuf::uint32 killed_monster_count_;
  ::google::protobuf::uint32 max_monster_count_;
  ::google::protobuf::uint32 buff_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FungusFighterTrainingSettleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FungusFighterTrainingSettleInfo) */ {
 public:
  FungusFighterTrainingSettleInfo();
  virtual ~FungusFighterTrainingSettleInfo();

  FungusFighterTrainingSettleInfo(const FungusFighterTrainingSettleInfo& from);

  inline FungusFighterTrainingSettleInfo& operator=(const FungusFighterTrainingSettleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FungusFighterTrainingSettleInfo(FungusFighterTrainingSettleInfo&& from) noexcept
    : FungusFighterTrainingSettleInfo() {
    *this = ::std::move(from);
  }

  inline FungusFighterTrainingSettleInfo& operator=(FungusFighterTrainingSettleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FungusFighterTrainingSettleInfo& default_instance();

  static inline const FungusFighterTrainingSettleInfo* internal_default_instance() {
    return reinterpret_cast<const FungusFighterTrainingSettleInfo*>(
               &_FungusFighterTrainingSettleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(FungusFighterTrainingSettleInfo* other);
  friend void swap(FungusFighterTrainingSettleInfo& a, FungusFighterTrainingSettleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FungusFighterTrainingSettleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FungusFighterTrainingSettleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FungusFighterTrainingSettleInfo& from);
  void MergeFrom(const FungusFighterTrainingSettleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FungusFighterTrainingSettleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string transaction = 1;
  void clear_transaction();
  static const int kTransactionFieldNumber = 1;
  const ::std::string& transaction() const;
  void set_transaction(const ::std::string& value);
  #if LANG_CXX11
  void set_transaction(::std::string&& value);
  #endif
  void set_transaction(const char* value);
  void set_transaction(const char* value, size_t size);
  ::std::string* mutable_transaction();
  ::std::string* release_transaction();
  void set_allocated_transaction(::std::string* transaction);

  // .proto.GalleryStopReason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::proto::GalleryStopReason reason() const;
  void set_reason(::proto::GalleryStopReason value);

  // uint32 used_time = 15;
  void clear_used_time();
  static const int kUsedTimeFieldNumber = 15;
  ::google::protobuf::uint32 used_time() const;
  void set_used_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FungusFighterTrainingSettleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
  int reason_;
  ::google::protobuf::uint32 used_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FungusCaptureSettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FungusCaptureSettleNotify) */ {
 public:
  FungusCaptureSettleNotify();
  virtual ~FungusCaptureSettleNotify();

  FungusCaptureSettleNotify(const FungusCaptureSettleNotify& from);

  inline FungusCaptureSettleNotify& operator=(const FungusCaptureSettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FungusCaptureSettleNotify(FungusCaptureSettleNotify&& from) noexcept
    : FungusCaptureSettleNotify() {
    *this = ::std::move(from);
  }

  inline FungusCaptureSettleNotify& operator=(FungusCaptureSettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FungusCaptureSettleNotify& default_instance();

  static inline const FungusCaptureSettleNotify* internal_default_instance() {
    return reinterpret_cast<const FungusCaptureSettleNotify*>(
               &_FungusCaptureSettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(FungusCaptureSettleNotify* other);
  friend void swap(FungusCaptureSettleNotify& a, FungusCaptureSettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FungusCaptureSettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  FungusCaptureSettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FungusCaptureSettleNotify& from);
  void MergeFrom(const FungusCaptureSettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FungusCaptureSettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_success = 2;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 2;
  bool is_success() const;
  void set_is_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.FungusCaptureSettleNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_success_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideAndSeekPlayerCapturedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HideAndSeekPlayerCapturedNotify) */ {
 public:
  HideAndSeekPlayerCapturedNotify();
  virtual ~HideAndSeekPlayerCapturedNotify();

  HideAndSeekPlayerCapturedNotify(const HideAndSeekPlayerCapturedNotify& from);

  inline HideAndSeekPlayerCapturedNotify& operator=(const HideAndSeekPlayerCapturedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HideAndSeekPlayerCapturedNotify(HideAndSeekPlayerCapturedNotify&& from) noexcept
    : HideAndSeekPlayerCapturedNotify() {
    *this = ::std::move(from);
  }

  inline HideAndSeekPlayerCapturedNotify& operator=(HideAndSeekPlayerCapturedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HideAndSeekPlayerCapturedNotify& default_instance();

  static inline const HideAndSeekPlayerCapturedNotify* internal_default_instance() {
    return reinterpret_cast<const HideAndSeekPlayerCapturedNotify*>(
               &_HideAndSeekPlayerCapturedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(HideAndSeekPlayerCapturedNotify* other);
  friend void swap(HideAndSeekPlayerCapturedNotify& a, HideAndSeekPlayerCapturedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HideAndSeekPlayerCapturedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HideAndSeekPlayerCapturedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideAndSeekPlayerCapturedNotify& from);
  void MergeFrom(const HideAndSeekPlayerCapturedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideAndSeekPlayerCapturedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ghost_skill_id = 12;
  void clear_ghost_skill_id();
  static const int kGhostSkillIdFieldNumber = 12;
  ::google::protobuf::uint32 ghost_skill_id() const;
  void set_ghost_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HideAndSeekPlayerCapturedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ghost_skill_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoinCollectGallerySettleNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoinCollectGallerySettleNotify) */ {
 public:
  CoinCollectGallerySettleNotify();
  virtual ~CoinCollectGallerySettleNotify();

  CoinCollectGallerySettleNotify(const CoinCollectGallerySettleNotify& from);

  inline CoinCollectGallerySettleNotify& operator=(const CoinCollectGallerySettleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoinCollectGallerySettleNotify(CoinCollectGallerySettleNotify&& from) noexcept
    : CoinCollectGallerySettleNotify() {
    *this = ::std::move(from);
  }

  inline CoinCollectGallerySettleNotify& operator=(CoinCollectGallerySettleNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinCollectGallerySettleNotify& default_instance();

  static inline const CoinCollectGallerySettleNotify* internal_default_instance() {
    return reinterpret_cast<const CoinCollectGallerySettleNotify*>(
               &_CoinCollectGallerySettleNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(CoinCollectGallerySettleNotify* other);
  friend void swap(CoinCollectGallerySettleNotify& a, CoinCollectGallerySettleNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoinCollectGallerySettleNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoinCollectGallerySettleNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoinCollectGallerySettleNotify& from);
  void MergeFrom(const CoinCollectGallerySettleNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoinCollectGallerySettleNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 coin_collect_time = 4;
  void clear_coin_collect_time();
  static const int kCoinCollectTimeFieldNumber = 4;
  ::google::protobuf::uint32 coin_collect_time() const;
  void set_coin_collect_time(::google::protobuf::uint32 value);

  // uint32 multistage_play_index = 6;
  void clear_multistage_play_index();
  static const int kMultistagePlayIndexFieldNumber = 6;
  ::google::protobuf::uint32 multistage_play_index() const;
  void set_multistage_play_index(::google::protobuf::uint32 value);

  // uint32 coin_total_num = 7;
  void clear_coin_total_num();
  static const int kCoinTotalNumFieldNumber = 7;
  ::google::protobuf::uint32 coin_total_num() const;
  void set_coin_total_num(::google::protobuf::uint32 value);

  // uint32 level_id = 9;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 9;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // bool is_new_record = 10;
  void clear_is_new_record();
  static const int kIsNewRecordFieldNumber = 10;
  bool is_new_record() const;
  void set_is_new_record(bool value);

  // uint32 coin_collect_num = 11;
  void clear_coin_collect_num();
  static const int kCoinCollectNumFieldNumber = 11;
  ::google::protobuf::uint32 coin_collect_num() const;
  void set_coin_collect_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CoinCollectGallerySettleNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 coin_collect_time_;
  ::google::protobuf::uint32 multistage_play_index_;
  ::google::protobuf::uint32 coin_total_num_;
  ::google::protobuf::uint32 level_id_;
  bool is_new_record_;
  ::google::protobuf::uint32 coin_collect_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgallery_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GalleryFlowerStartParam

// uint32 target_score = 5;
inline void GalleryFlowerStartParam::clear_target_score() {
  target_score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFlowerStartParam::target_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFlowerStartParam.target_score)
  return target_score_;
}
inline void GalleryFlowerStartParam::set_target_score(::google::protobuf::uint32 value) {
  
  target_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFlowerStartParam.target_score)
}

// -------------------------------------------------------------------

// GalleryStartNotify

// uint32 end_time = 6;
inline void GalleryStartNotify::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 GalleryStartNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.GalleryStartNotify.end_time)
  return end_time_;
}
inline void GalleryStartNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryStartNotify.end_time)
}

// uint32 player_count = 11;
inline void GalleryStartNotify::clear_player_count() {
  player_count_ = 0u;
}
inline ::google::protobuf::uint32 GalleryStartNotify::player_count() const {
  // @@protoc_insertion_point(field_get:proto.GalleryStartNotify.player_count)
  return player_count_;
}
inline void GalleryStartNotify::set_player_count(::google::protobuf::uint32 value) {
  
  player_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryStartNotify.player_count)
}

// uint32 owner_uid = 9;
inline void GalleryStartNotify::clear_owner_uid() {
  owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 GalleryStartNotify::owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.GalleryStartNotify.owner_uid)
  return owner_uid_;
}
inline void GalleryStartNotify::set_owner_uid(::google::protobuf::uint32 value) {
  
  owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryStartNotify.owner_uid)
}

// uint32 gallery_id = 13;
inline void GalleryStartNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryStartNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryStartNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryStartNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryStartNotify.gallery_id)
}

// uint32 start_time = 5;
inline void GalleryStartNotify::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 GalleryStartNotify::start_time() const {
  // @@protoc_insertion_point(field_get:proto.GalleryStartNotify.start_time)
  return start_time_;
}
inline void GalleryStartNotify::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryStartNotify.start_time)
}

// .proto.GalleryFlowerStartParam flower_start_param = 15;
inline bool GalleryStartNotify::has_flower_start_param() const {
  return detail_case() == kFlowerStartParam;
}
inline void GalleryStartNotify::set_has_flower_start_param() {
  _oneof_case_[0] = kFlowerStartParam;
}
inline void GalleryStartNotify::clear_flower_start_param() {
  if (has_flower_start_param()) {
    delete detail_.flower_start_param_;
    clear_has_detail();
  }
}
inline  const ::proto::GalleryFlowerStartParam& GalleryStartNotify::flower_start_param() const {
  // @@protoc_insertion_point(field_get:proto.GalleryStartNotify.flower_start_param)
  return has_flower_start_param()
      ? *detail_.flower_start_param_
      : ::proto::GalleryFlowerStartParam::default_instance();
}
inline ::proto::GalleryFlowerStartParam* GalleryStartNotify::mutable_flower_start_param() {
  if (!has_flower_start_param()) {
    clear_detail();
    set_has_flower_start_param();
    detail_.flower_start_param_ = new ::proto::GalleryFlowerStartParam;
  }
  // @@protoc_insertion_point(field_mutable:proto.GalleryStartNotify.flower_start_param)
  return detail_.flower_start_param_;
}
inline ::proto::GalleryFlowerStartParam* GalleryStartNotify::release_flower_start_param() {
  // @@protoc_insertion_point(field_release:proto.GalleryStartNotify.flower_start_param)
  if (has_flower_start_param()) {
    clear_has_detail();
    ::proto::GalleryFlowerStartParam* temp = detail_.flower_start_param_;
    detail_.flower_start_param_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GalleryStartNotify::set_allocated_flower_start_param(::proto::GalleryFlowerStartParam* flower_start_param) {
  clear_detail();
  if (flower_start_param) {
    set_has_flower_start_param();
    detail_.flower_start_param_ = flower_start_param;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GalleryStartNotify.flower_start_param)
}

inline bool GalleryStartNotify::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void GalleryStartNotify::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline GalleryStartNotify::DetailCase GalleryStartNotify::detail_case() const {
  return GalleryStartNotify::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GalleryBalloonShootNotify

// uint32 trigger_entity_id = 12;
inline void GalleryBalloonShootNotify::clear_trigger_entity_id() {
  trigger_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBalloonShootNotify::trigger_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBalloonShootNotify.trigger_entity_id)
  return trigger_entity_id_;
}
inline void GalleryBalloonShootNotify::set_trigger_entity_id(::google::protobuf::uint32 value) {
  
  trigger_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBalloonShootNotify.trigger_entity_id)
}

// uint32 gallery_id = 5;
inline void GalleryBalloonShootNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBalloonShootNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBalloonShootNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryBalloonShootNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBalloonShootNotify.gallery_id)
}

// uint32 combo = 14;
inline void GalleryBalloonShootNotify::clear_combo() {
  combo_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBalloonShootNotify::combo() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBalloonShootNotify.combo)
  return combo_;
}
inline void GalleryBalloonShootNotify::set_combo(::google::protobuf::uint32 value) {
  
  combo_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBalloonShootNotify.combo)
}

// uint64 combo_disable_time = 6;
inline void GalleryBalloonShootNotify::clear_combo_disable_time() {
  combo_disable_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GalleryBalloonShootNotify::combo_disable_time() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBalloonShootNotify.combo_disable_time)
  return combo_disable_time_;
}
inline void GalleryBalloonShootNotify::set_combo_disable_time(::google::protobuf::uint64 value) {
  
  combo_disable_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBalloonShootNotify.combo_disable_time)
}

// int32 add_score = 11;
inline void GalleryBalloonShootNotify::clear_add_score() {
  add_score_ = 0;
}
inline ::google::protobuf::int32 GalleryBalloonShootNotify::add_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBalloonShootNotify.add_score)
  return add_score_;
}
inline void GalleryBalloonShootNotify::set_add_score(::google::protobuf::int32 value) {
  
  add_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBalloonShootNotify.add_score)
}

// uint32 cur_score = 13;
inline void GalleryBalloonShootNotify::clear_cur_score() {
  cur_score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBalloonShootNotify::cur_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBalloonShootNotify.cur_score)
  return cur_score_;
}
inline void GalleryBalloonShootNotify::set_cur_score(::google::protobuf::uint32 value) {
  
  cur_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBalloonShootNotify.cur_score)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GalleryBalloonScoreNotify

// uint32 gallery_id = 9;
inline void GalleryBalloonScoreNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBalloonScoreNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBalloonScoreNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryBalloonScoreNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBalloonScoreNotify.gallery_id)
}

// map<uint32, uint32> uid_score_map = 7;
inline int GalleryBalloonScoreNotify::uid_score_map_size() const {
  return uid_score_map_.size();
}
inline void GalleryBalloonScoreNotify::clear_uid_score_map() {
  uid_score_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GalleryBalloonScoreNotify::uid_score_map() const {
  // @@protoc_insertion_point(field_map:proto.GalleryBalloonScoreNotify.uid_score_map)
  return uid_score_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GalleryBalloonScoreNotify::mutable_uid_score_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GalleryBalloonScoreNotify.uid_score_map)
  return uid_score_map_.MutableMap();
}

// -------------------------------------------------------------------

// BalloonSettleInfo

// uint32 uid = 3;
inline void BalloonSettleInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 BalloonSettleInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.BalloonSettleInfo.uid)
  return uid_;
}
inline void BalloonSettleInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonSettleInfo.uid)
}

// uint32 shoot_count = 12;
inline void BalloonSettleInfo::clear_shoot_count() {
  shoot_count_ = 0u;
}
inline ::google::protobuf::uint32 BalloonSettleInfo::shoot_count() const {
  // @@protoc_insertion_point(field_get:proto.BalloonSettleInfo.shoot_count)
  return shoot_count_;
}
inline void BalloonSettleInfo::set_shoot_count(::google::protobuf::uint32 value) {
  
  shoot_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonSettleInfo.shoot_count)
}

// uint32 max_combo = 9;
inline void BalloonSettleInfo::clear_max_combo() {
  max_combo_ = 0u;
}
inline ::google::protobuf::uint32 BalloonSettleInfo::max_combo() const {
  // @@protoc_insertion_point(field_get:proto.BalloonSettleInfo.max_combo)
  return max_combo_;
}
inline void BalloonSettleInfo::set_max_combo(::google::protobuf::uint32 value) {
  
  max_combo_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonSettleInfo.max_combo)
}

// uint32 final_score = 7;
inline void BalloonSettleInfo::clear_final_score() {
  final_score_ = 0u;
}
inline ::google::protobuf::uint32 BalloonSettleInfo::final_score() const {
  // @@protoc_insertion_point(field_get:proto.BalloonSettleInfo.final_score)
  return final_score_;
}
inline void BalloonSettleInfo::set_final_score(::google::protobuf::uint32 value) {
  
  final_score_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonSettleInfo.final_score)
}

// .proto.OnlinePlayerInfo player_info = 2;
inline bool BalloonSettleInfo::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void BalloonSettleInfo::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& BalloonSettleInfo::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.BalloonSettleInfo.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* BalloonSettleInfo::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.BalloonSettleInfo.player_info)
  return player_info_;
}
inline ::proto::OnlinePlayerInfo* BalloonSettleInfo::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.BalloonSettleInfo.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void BalloonSettleInfo::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BalloonSettleInfo.player_info)
}

// -------------------------------------------------------------------

// GalleryStopNotify

// uint32 gallery_id = 8;
inline void GalleryStopNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryStopNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryStopNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryStopNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryStopNotify.gallery_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FallSettleInfo

// uint32 catch_count = 15;
inline void FallSettleInfo::clear_catch_count() {
  catch_count_ = 0u;
}
inline ::google::protobuf::uint32 FallSettleInfo::catch_count() const {
  // @@protoc_insertion_point(field_get:proto.FallSettleInfo.catch_count)
  return catch_count_;
}
inline void FallSettleInfo::set_catch_count(::google::protobuf::uint32 value) {
  
  catch_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FallSettleInfo.catch_count)
}

// .proto.OnlinePlayerInfo player_info = 13;
inline bool FallSettleInfo::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void FallSettleInfo::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& FallSettleInfo::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.FallSettleInfo.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* FallSettleInfo::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.FallSettleInfo.player_info)
  return player_info_;
}
inline ::proto::OnlinePlayerInfo* FallSettleInfo::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.FallSettleInfo.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void FallSettleInfo::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FallSettleInfo.player_info)
}

// uint32 uid = 14;
inline void FallSettleInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 FallSettleInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.FallSettleInfo.uid)
  return uid_;
}
inline void FallSettleInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FallSettleInfo.uid)
}

// map<uint32, uint32> flower_ring_catch_count_map = 3;
inline int FallSettleInfo::flower_ring_catch_count_map_size() const {
  return flower_ring_catch_count_map_.size();
}
inline void FallSettleInfo::clear_flower_ring_catch_count_map() {
  flower_ring_catch_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
FallSettleInfo::flower_ring_catch_count_map() const {
  // @@protoc_insertion_point(field_map:proto.FallSettleInfo.flower_ring_catch_count_map)
  return flower_ring_catch_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
FallSettleInfo::mutable_flower_ring_catch_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.FallSettleInfo.flower_ring_catch_count_map)
  return flower_ring_catch_count_map_.MutableMap();
}

// uint32 remain_time = 10;
inline void FallSettleInfo::clear_remain_time() {
  remain_time_ = 0u;
}
inline ::google::protobuf::uint32 FallSettleInfo::remain_time() const {
  // @@protoc_insertion_point(field_get:proto.FallSettleInfo.remain_time)
  return remain_time_;
}
inline void FallSettleInfo::set_remain_time(::google::protobuf::uint32 value) {
  
  remain_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FallSettleInfo.remain_time)
}

// uint32 final_score = 1;
inline void FallSettleInfo::clear_final_score() {
  final_score_ = 0u;
}
inline ::google::protobuf::uint32 FallSettleInfo::final_score() const {
  // @@protoc_insertion_point(field_get:proto.FallSettleInfo.final_score)
  return final_score_;
}
inline void FallSettleInfo::set_final_score(::google::protobuf::uint32 value) {
  
  final_score_ = value;
  // @@protoc_insertion_point(field_set:proto.FallSettleInfo.final_score)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GalleryFallCatchNotify

// uint32 cur_score = 6;
inline void GalleryFallCatchNotify::clear_cur_score() {
  cur_score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFallCatchNotify::cur_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFallCatchNotify.cur_score)
  return cur_score_;
}
inline void GalleryFallCatchNotify::set_cur_score(::google::protobuf::uint32 value) {
  
  cur_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFallCatchNotify.cur_score)
}

// uint32 time_cost = 11;
inline void GalleryFallCatchNotify::clear_time_cost() {
  time_cost_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFallCatchNotify::time_cost() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFallCatchNotify.time_cost)
  return time_cost_;
}
inline void GalleryFallCatchNotify::set_time_cost(::google::protobuf::uint32 value) {
  
  time_cost_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFallCatchNotify.time_cost)
}

// map<uint32, uint32> ball_catch_count_map = 15;
inline int GalleryFallCatchNotify::ball_catch_count_map_size() const {
  return ball_catch_count_map_.size();
}
inline void GalleryFallCatchNotify::clear_ball_catch_count_map() {
  ball_catch_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GalleryFallCatchNotify::ball_catch_count_map() const {
  // @@protoc_insertion_point(field_map:proto.GalleryFallCatchNotify.ball_catch_count_map)
  return ball_catch_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GalleryFallCatchNotify::mutable_ball_catch_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GalleryFallCatchNotify.ball_catch_count_map)
  return ball_catch_count_map_.MutableMap();
}

// uint32 add_score = 1;
inline void GalleryFallCatchNotify::clear_add_score() {
  add_score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFallCatchNotify::add_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFallCatchNotify.add_score)
  return add_score_;
}
inline void GalleryFallCatchNotify::set_add_score(::google::protobuf::uint32 value) {
  
  add_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFallCatchNotify.add_score)
}

// bool is_ground = 12;
inline void GalleryFallCatchNotify::clear_is_ground() {
  is_ground_ = false;
}
inline bool GalleryFallCatchNotify::is_ground() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFallCatchNotify.is_ground)
  return is_ground_;
}
inline void GalleryFallCatchNotify::set_is_ground(bool value) {
  
  is_ground_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFallCatchNotify.is_ground)
}

// uint32 gallery_id = 10;
inline void GalleryFallCatchNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFallCatchNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFallCatchNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryFallCatchNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFallCatchNotify.gallery_id)
}

// -------------------------------------------------------------------

// FallPlayerBrief

// uint32 uid = 13;
inline void FallPlayerBrief::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 FallPlayerBrief::uid() const {
  // @@protoc_insertion_point(field_get:proto.FallPlayerBrief.uid)
  return uid_;
}
inline void FallPlayerBrief::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FallPlayerBrief.uid)
}

// bool is_ground = 5;
inline void FallPlayerBrief::clear_is_ground() {
  is_ground_ = false;
}
inline bool FallPlayerBrief::is_ground() const {
  // @@protoc_insertion_point(field_get:proto.FallPlayerBrief.is_ground)
  return is_ground_;
}
inline void FallPlayerBrief::set_is_ground(bool value) {
  
  is_ground_ = value;
  // @@protoc_insertion_point(field_set:proto.FallPlayerBrief.is_ground)
}

// uint32 score = 10;
inline void FallPlayerBrief::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 FallPlayerBrief::score() const {
  // @@protoc_insertion_point(field_get:proto.FallPlayerBrief.score)
  return score_;
}
inline void FallPlayerBrief::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.FallPlayerBrief.score)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GalleryFallScoreNotify

// uint32 gallery_id = 7;
inline void GalleryFallScoreNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFallScoreNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFallScoreNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryFallScoreNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFallScoreNotify.gallery_id)
}

// map<uint32, .proto.FallPlayerBrief> uid_brief_map = 1;
inline int GalleryFallScoreNotify::uid_brief_map_size() const {
  return uid_brief_map_.size();
}
inline void GalleryFallScoreNotify::clear_uid_brief_map() {
  uid_brief_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerBrief >&
GalleryFallScoreNotify::uid_brief_map() const {
  // @@protoc_insertion_point(field_map:proto.GalleryFallScoreNotify.uid_brief_map)
  return uid_brief_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerBrief >*
GalleryFallScoreNotify::mutable_uid_brief_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GalleryFallScoreNotify.uid_brief_map)
  return uid_brief_map_.MutableMap();
}

// -------------------------------------------------------------------

// BalloonPlayerInfo

// uint32 uid = 15;
inline void BalloonPlayerInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 BalloonPlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.BalloonPlayerInfo.uid)
  return uid_;
}
inline void BalloonPlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonPlayerInfo.uid)
}

// uint32 cur_score = 2;
inline void BalloonPlayerInfo::clear_cur_score() {
  cur_score_ = 0u;
}
inline ::google::protobuf::uint32 BalloonPlayerInfo::cur_score() const {
  // @@protoc_insertion_point(field_get:proto.BalloonPlayerInfo.cur_score)
  return cur_score_;
}
inline void BalloonPlayerInfo::set_cur_score(::google::protobuf::uint32 value) {
  
  cur_score_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonPlayerInfo.cur_score)
}

// uint32 combo_disable_time = 14;
inline void BalloonPlayerInfo::clear_combo_disable_time() {
  combo_disable_time_ = 0u;
}
inline ::google::protobuf::uint32 BalloonPlayerInfo::combo_disable_time() const {
  // @@protoc_insertion_point(field_get:proto.BalloonPlayerInfo.combo_disable_time)
  return combo_disable_time_;
}
inline void BalloonPlayerInfo::set_combo_disable_time(::google::protobuf::uint32 value) {
  
  combo_disable_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonPlayerInfo.combo_disable_time)
}

// uint32 combo = 11;
inline void BalloonPlayerInfo::clear_combo() {
  combo_ = 0u;
}
inline ::google::protobuf::uint32 BalloonPlayerInfo::combo() const {
  // @@protoc_insertion_point(field_get:proto.BalloonPlayerInfo.combo)
  return combo_;
}
inline void BalloonPlayerInfo::set_combo(::google::protobuf::uint32 value) {
  
  combo_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonPlayerInfo.combo)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FallPlayerInfo

// uint32 time_cost = 11;
inline void FallPlayerInfo::clear_time_cost() {
  time_cost_ = 0u;
}
inline ::google::protobuf::uint32 FallPlayerInfo::time_cost() const {
  // @@protoc_insertion_point(field_get:proto.FallPlayerInfo.time_cost)
  return time_cost_;
}
inline void FallPlayerInfo::set_time_cost(::google::protobuf::uint32 value) {
  
  time_cost_ = value;
  // @@protoc_insertion_point(field_set:proto.FallPlayerInfo.time_cost)
}

// uint32 uid = 9;
inline void FallPlayerInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 FallPlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.FallPlayerInfo.uid)
  return uid_;
}
inline void FallPlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FallPlayerInfo.uid)
}

// map<uint32, uint32> ball_catch_count_map = 6;
inline int FallPlayerInfo::ball_catch_count_map_size() const {
  return ball_catch_count_map_.size();
}
inline void FallPlayerInfo::clear_ball_catch_count_map() {
  ball_catch_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
FallPlayerInfo::ball_catch_count_map() const {
  // @@protoc_insertion_point(field_map:proto.FallPlayerInfo.ball_catch_count_map)
  return ball_catch_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
FallPlayerInfo::mutable_ball_catch_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.FallPlayerInfo.ball_catch_count_map)
  return ball_catch_count_map_.MutableMap();
}

// uint32 cur_score = 7;
inline void FallPlayerInfo::clear_cur_score() {
  cur_score_ = 0u;
}
inline ::google::protobuf::uint32 FallPlayerInfo::cur_score() const {
  // @@protoc_insertion_point(field_get:proto.FallPlayerInfo.cur_score)
  return cur_score_;
}
inline void FallPlayerInfo::set_cur_score(::google::protobuf::uint32 value) {
  
  cur_score_ = value;
  // @@protoc_insertion_point(field_set:proto.FallPlayerInfo.cur_score)
}

// bool is_ground = 15;
inline void FallPlayerInfo::clear_is_ground() {
  is_ground_ = false;
}
inline bool FallPlayerInfo::is_ground() const {
  // @@protoc_insertion_point(field_get:proto.FallPlayerInfo.is_ground)
  return is_ground_;
}
inline void FallPlayerInfo::set_is_ground(bool value) {
  
  is_ground_ = value;
  // @@protoc_insertion_point(field_set:proto.FallPlayerInfo.is_ground)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneGalleryBalloonInfo

// map<uint32, .proto.BalloonPlayerInfo> scene_player_balloon_info_map = 14;
inline int SceneGalleryBalloonInfo::scene_player_balloon_info_map_size() const {
  return scene_player_balloon_info_map_.size();
}
inline void SceneGalleryBalloonInfo::clear_scene_player_balloon_info_map() {
  scene_player_balloon_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BalloonPlayerInfo >&
SceneGalleryBalloonInfo::scene_player_balloon_info_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneGalleryBalloonInfo.scene_player_balloon_info_map)
  return scene_player_balloon_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BalloonPlayerInfo >*
SceneGalleryBalloonInfo::mutable_scene_player_balloon_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneGalleryBalloonInfo.scene_player_balloon_info_map)
  return scene_player_balloon_info_map_.MutableMap();
}

// uint32 end_time = 5;
inline void SceneGalleryBalloonInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBalloonInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBalloonInfo.end_time)
  return end_time_;
}
inline void SceneGalleryBalloonInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBalloonInfo.end_time)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneGalleryFallInfo

// map<uint32, .proto.FallPlayerInfo> scene_player_fall_info_map = 12;
inline int SceneGalleryFallInfo::scene_player_fall_info_map_size() const {
  return scene_player_fall_info_map_.size();
}
inline void SceneGalleryFallInfo::clear_scene_player_fall_info_map() {
  scene_player_fall_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerInfo >&
SceneGalleryFallInfo::scene_player_fall_info_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneGalleryFallInfo.scene_player_fall_info_map)
  return scene_player_fall_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FallPlayerInfo >*
SceneGalleryFallInfo::mutable_scene_player_fall_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneGalleryFallInfo.scene_player_fall_info_map)
  return scene_player_fall_info_map_.MutableMap();
}

// uint32 end_time = 2;
inline void SceneGalleryFallInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFallInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFallInfo.end_time)
  return end_time_;
}
inline void SceneGalleryFallInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFallInfo.end_time)
}

// -------------------------------------------------------------------

// SceneGalleryFlowerInfo

// uint32 end_time = 7;
inline void SceneGalleryFlowerInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFlowerInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFlowerInfo.end_time)
  return end_time_;
}
inline void SceneGalleryFlowerInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFlowerInfo.end_time)
}

// uint32 target_score = 13;
inline void SceneGalleryFlowerInfo::clear_target_score() {
  target_score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFlowerInfo::target_score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFlowerInfo.target_score)
  return target_score_;
}
inline void SceneGalleryFlowerInfo::set_target_score(::google::protobuf::uint32 value) {
  
  target_score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFlowerInfo.target_score)
}

// uint32 cur_score = 9;
inline void SceneGalleryFlowerInfo::clear_cur_score() {
  cur_score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFlowerInfo::cur_score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFlowerInfo.cur_score)
  return cur_score_;
}
inline void SceneGalleryFlowerInfo::set_cur_score(::google::protobuf::uint32 value) {
  
  cur_score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFlowerInfo.cur_score)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneGalleryBulletInfo

// uint32 end_time = 1;
inline void SceneGalleryBulletInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBulletInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBulletInfo.end_time)
  return end_time_;
}
inline void SceneGalleryBulletInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBulletInfo.end_time)
}

// map<uint32, uint32> hit_count_map = 10;
inline int SceneGalleryBulletInfo::hit_count_map_size() const {
  return hit_count_map_.size();
}
inline void SceneGalleryBulletInfo::clear_hit_count_map() {
  hit_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneGalleryBulletInfo::hit_count_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneGalleryBulletInfo.hit_count_map)
  return hit_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneGalleryBulletInfo::mutable_hit_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneGalleryBulletInfo.hit_count_map)
  return hit_count_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneGalleryBrokenFloorInfo

// map<uint32, uint32> fall_count_map = 3;
inline int SceneGalleryBrokenFloorInfo::fall_count_map_size() const {
  return fall_count_map_.size();
}
inline void SceneGalleryBrokenFloorInfo::clear_fall_count_map() {
  fall_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneGalleryBrokenFloorInfo::fall_count_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneGalleryBrokenFloorInfo.fall_count_map)
  return fall_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneGalleryBrokenFloorInfo::mutable_fall_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneGalleryBrokenFloorInfo.fall_count_map)
  return fall_count_map_.MutableMap();
}

// uint32 end_time = 9;
inline void SceneGalleryBrokenFloorInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBrokenFloorInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBrokenFloorInfo.end_time)
  return end_time_;
}
inline void SceneGalleryBrokenFloorInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBrokenFloorInfo.end_time)
}

// -------------------------------------------------------------------

// SceneGalleryHideAndSeekInfo

// repeated uint32 visible_uid_list = 13;
inline int SceneGalleryHideAndSeekInfo::visible_uid_list_size() const {
  return visible_uid_list_.size();
}
inline void SceneGalleryHideAndSeekInfo::clear_visible_uid_list() {
  visible_uid_list_.Clear();
}
inline ::google::protobuf::uint32 SceneGalleryHideAndSeekInfo::visible_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHideAndSeekInfo.visible_uid_list)
  return visible_uid_list_.Get(index);
}
inline void SceneGalleryHideAndSeekInfo::set_visible_uid_list(int index, ::google::protobuf::uint32 value) {
  visible_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneGalleryHideAndSeekInfo.visible_uid_list)
}
inline void SceneGalleryHideAndSeekInfo::add_visible_uid_list(::google::protobuf::uint32 value) {
  visible_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneGalleryHideAndSeekInfo.visible_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneGalleryHideAndSeekInfo::visible_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneGalleryHideAndSeekInfo.visible_uid_list)
  return visible_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneGalleryHideAndSeekInfo::mutable_visible_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneGalleryHideAndSeekInfo.visible_uid_list)
  return &visible_uid_list_;
}

// repeated uint32 caught_uid_list = 4;
inline int SceneGalleryHideAndSeekInfo::caught_uid_list_size() const {
  return caught_uid_list_.size();
}
inline void SceneGalleryHideAndSeekInfo::clear_caught_uid_list() {
  caught_uid_list_.Clear();
}
inline ::google::protobuf::uint32 SceneGalleryHideAndSeekInfo::caught_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHideAndSeekInfo.caught_uid_list)
  return caught_uid_list_.Get(index);
}
inline void SceneGalleryHideAndSeekInfo::set_caught_uid_list(int index, ::google::protobuf::uint32 value) {
  caught_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneGalleryHideAndSeekInfo.caught_uid_list)
}
inline void SceneGalleryHideAndSeekInfo::add_caught_uid_list(::google::protobuf::uint32 value) {
  caught_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneGalleryHideAndSeekInfo.caught_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneGalleryHideAndSeekInfo::caught_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneGalleryHideAndSeekInfo.caught_uid_list)
  return caught_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneGalleryHideAndSeekInfo::mutable_caught_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneGalleryHideAndSeekInfo.caught_uid_list)
  return &caught_uid_list_;
}

// -------------------------------------------------------------------

// SceneGalleryBuoyantCombatInfo

// uint32 score = 6;
inline void SceneGalleryBuoyantCombatInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBuoyantCombatInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBuoyantCombatInfo.score)
  return score_;
}
inline void SceneGalleryBuoyantCombatInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBuoyantCombatInfo.score)
}

// uint32 kill_special_monster_count = 1;
inline void SceneGalleryBuoyantCombatInfo::clear_kill_special_monster_count() {
  kill_special_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBuoyantCombatInfo::kill_special_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBuoyantCombatInfo.kill_special_monster_count)
  return kill_special_monster_count_;
}
inline void SceneGalleryBuoyantCombatInfo::set_kill_special_monster_count(::google::protobuf::uint32 value) {
  
  kill_special_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBuoyantCombatInfo.kill_special_monster_count)
}

// uint32 kill_monster_count = 14;
inline void SceneGalleryBuoyantCombatInfo::clear_kill_monster_count() {
  kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBuoyantCombatInfo::kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBuoyantCombatInfo.kill_monster_count)
  return kill_monster_count_;
}
inline void SceneGalleryBuoyantCombatInfo::set_kill_monster_count(::google::protobuf::uint32 value) {
  
  kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBuoyantCombatInfo.kill_monster_count)
}

// -------------------------------------------------------------------

// SceneGalleryProgressInfo

// repeated uint32 progress_stage_list = 8;
inline int SceneGalleryProgressInfo::progress_stage_list_size() const {
  return progress_stage_list_.size();
}
inline void SceneGalleryProgressInfo::clear_progress_stage_list() {
  progress_stage_list_.Clear();
}
inline ::google::protobuf::uint32 SceneGalleryProgressInfo::progress_stage_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryProgressInfo.progress_stage_list)
  return progress_stage_list_.Get(index);
}
inline void SceneGalleryProgressInfo::set_progress_stage_list(int index, ::google::protobuf::uint32 value) {
  progress_stage_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneGalleryProgressInfo.progress_stage_list)
}
inline void SceneGalleryProgressInfo::add_progress_stage_list(::google::protobuf::uint32 value) {
  progress_stage_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneGalleryProgressInfo.progress_stage_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneGalleryProgressInfo::progress_stage_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneGalleryProgressInfo.progress_stage_list)
  return progress_stage_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneGalleryProgressInfo::mutable_progress_stage_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneGalleryProgressInfo.progress_stage_list)
  return &progress_stage_list_;
}

// string key = 11;
inline void SceneGalleryProgressInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SceneGalleryProgressInfo::key() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryProgressInfo.key)
  return key_.GetNoArena();
}
inline void SceneGalleryProgressInfo::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SceneGalleryProgressInfo.key)
}
#if LANG_CXX11
inline void SceneGalleryProgressInfo::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SceneGalleryProgressInfo.key)
}
#endif
inline void SceneGalleryProgressInfo::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SceneGalleryProgressInfo.key)
}
inline void SceneGalleryProgressInfo::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SceneGalleryProgressInfo.key)
}
inline ::std::string* SceneGalleryProgressInfo::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryProgressInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SceneGalleryProgressInfo::release_key() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryProgressInfo.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SceneGalleryProgressInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryProgressInfo.key)
}

// uint32 progress = 5;
inline void SceneGalleryProgressInfo::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryProgressInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryProgressInfo.progress)
  return progress_;
}
inline void SceneGalleryProgressInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryProgressInfo.progress)
}

// uint32 ui_form = 12;
inline void SceneGalleryProgressInfo::clear_ui_form() {
  ui_form_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryProgressInfo::ui_form() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryProgressInfo.ui_form)
  return ui_form_;
}
inline void SceneGalleryProgressInfo::set_ui_form(::google::protobuf::uint32 value) {
  
  ui_form_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryProgressInfo.ui_form)
}

// -------------------------------------------------------------------

// SceneGalleryBounceConjuringInfo

// uint32 total_destroyed_machine_count = 4;
inline void SceneGalleryBounceConjuringInfo::clear_total_destroyed_machine_count() {
  total_destroyed_machine_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBounceConjuringInfo::total_destroyed_machine_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBounceConjuringInfo.total_destroyed_machine_count)
  return total_destroyed_machine_count_;
}
inline void SceneGalleryBounceConjuringInfo::set_total_destroyed_machine_count(::google::protobuf::uint32 value) {
  
  total_destroyed_machine_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBounceConjuringInfo.total_destroyed_machine_count)
}

// uint32 total_score = 6;
inline void SceneGalleryBounceConjuringInfo::clear_total_score() {
  total_score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBounceConjuringInfo::total_score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBounceConjuringInfo.total_score)
  return total_score_;
}
inline void SceneGalleryBounceConjuringInfo::set_total_score(::google::protobuf::uint32 value) {
  
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBounceConjuringInfo.total_score)
}

// -------------------------------------------------------------------

// SceneGalleryHandballInfo

// .proto.PlaceInfo ball_place_info = 9;
inline bool SceneGalleryHandballInfo::has_ball_place_info() const {
  return this != internal_default_instance() && ball_place_info_ != NULL;
}
inline void SceneGalleryHandballInfo::clear_ball_place_info() {
  if (GetArenaNoVirtual() == NULL && ball_place_info_ != NULL) delete ball_place_info_;
  ball_place_info_ = NULL;
}
inline const ::proto::PlaceInfo& SceneGalleryHandballInfo::ball_place_info() const {
  const ::proto::PlaceInfo* p = ball_place_info_;
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHandballInfo.ball_place_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlaceInfo*>(
      &::proto::_PlaceInfo_default_instance_);
}
inline ::proto::PlaceInfo* SceneGalleryHandballInfo::mutable_ball_place_info() {
  
  if (ball_place_info_ == NULL) {
    ball_place_info_ = new ::proto::PlaceInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryHandballInfo.ball_place_info)
  return ball_place_info_;
}
inline ::proto::PlaceInfo* SceneGalleryHandballInfo::release_ball_place_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryHandballInfo.ball_place_info)
  
  ::proto::PlaceInfo* temp = ball_place_info_;
  ball_place_info_ = NULL;
  return temp;
}
inline void SceneGalleryHandballInfo::set_allocated_ball_place_info(::proto::PlaceInfo* ball_place_info) {
  delete ball_place_info_;
  ball_place_info_ = ball_place_info;
  if (ball_place_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryHandballInfo.ball_place_info)
}

// bool is_have_ball = 15;
inline void SceneGalleryHandballInfo::clear_is_have_ball() {
  is_have_ball_ = false;
}
inline bool SceneGalleryHandballInfo::is_have_ball() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHandballInfo.is_have_ball)
  return is_have_ball_;
}
inline void SceneGalleryHandballInfo::set_is_have_ball(bool value) {
  
  is_have_ball_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryHandballInfo.is_have_ball)
}

// -------------------------------------------------------------------

// SceneGallerySumoInfo

// uint32 score = 2;
inline void SceneGallerySumoInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySumoInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySumoInfo.score)
  return score_;
}
inline void SceneGallerySumoInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySumoInfo.score)
}

// uint32 kill_normal_mosnter_num = 15;
inline void SceneGallerySumoInfo::clear_kill_normal_mosnter_num() {
  kill_normal_mosnter_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySumoInfo::kill_normal_mosnter_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySumoInfo.kill_normal_mosnter_num)
  return kill_normal_mosnter_num_;
}
inline void SceneGallerySumoInfo::set_kill_normal_mosnter_num(::google::protobuf::uint32 value) {
  
  kill_normal_mosnter_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySumoInfo.kill_normal_mosnter_num)
}

// uint32 kill_elite_monster_num = 14;
inline void SceneGallerySumoInfo::clear_kill_elite_monster_num() {
  kill_elite_monster_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySumoInfo::kill_elite_monster_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySumoInfo.kill_elite_monster_num)
  return kill_elite_monster_num_;
}
inline void SceneGallerySumoInfo::set_kill_elite_monster_num(::google::protobuf::uint32 value) {
  
  kill_elite_monster_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySumoInfo.kill_elite_monster_num)
}

// -------------------------------------------------------------------

// SceneGallerySalvagePreventInfo

// uint32 monster_count = 7;
inline void SceneGallerySalvagePreventInfo::clear_monster_count() {
  monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySalvagePreventInfo::monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySalvagePreventInfo.monster_count)
  return monster_count_;
}
inline void SceneGallerySalvagePreventInfo::set_monster_count(::google::protobuf::uint32 value) {
  
  monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySalvagePreventInfo.monster_count)
}

// -------------------------------------------------------------------

// SceneGallerySalvageEscortInfo

// uint32 max_box_count = 14;
inline void SceneGallerySalvageEscortInfo::clear_max_box_count() {
  max_box_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySalvageEscortInfo::max_box_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySalvageEscortInfo.max_box_count)
  return max_box_count_;
}
inline void SceneGallerySalvageEscortInfo::set_max_box_count(::google::protobuf::uint32 value) {
  
  max_box_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySalvageEscortInfo.max_box_count)
}

// uint32 max_monster_count = 3;
inline void SceneGallerySalvageEscortInfo::clear_max_monster_count() {
  max_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySalvageEscortInfo::max_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySalvageEscortInfo.max_monster_count)
  return max_monster_count_;
}
inline void SceneGallerySalvageEscortInfo::set_max_monster_count(::google::protobuf::uint32 value) {
  
  max_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySalvageEscortInfo.max_monster_count)
}

// uint32 box_count = 7;
inline void SceneGallerySalvageEscortInfo::clear_box_count() {
  box_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySalvageEscortInfo::box_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySalvageEscortInfo.box_count)
  return box_count_;
}
inline void SceneGallerySalvageEscortInfo::set_box_count(::google::protobuf::uint32 value) {
  
  box_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySalvageEscortInfo.box_count)
}

// uint32 monster_count = 11;
inline void SceneGallerySalvageEscortInfo::clear_monster_count() {
  monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySalvageEscortInfo::monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySalvageEscortInfo.monster_count)
  return monster_count_;
}
inline void SceneGallerySalvageEscortInfo::set_monster_count(::google::protobuf::uint32 value) {
  
  monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySalvageEscortInfo.monster_count)
}

// -------------------------------------------------------------------

// SceneGalleryCrystalLinkInfo

// uint32 score = 10;
inline void SceneGalleryCrystalLinkInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryCrystalLinkInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCrystalLinkInfo.score)
  return score_;
}
inline void SceneGalleryCrystalLinkInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCrystalLinkInfo.score)
}

// -------------------------------------------------------------------

// SceneGalleryIrodoriMasterInfo

// uint32 level_id = 8;
inline void SceneGalleryIrodoriMasterInfo::clear_level_id() {
  level_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIrodoriMasterInfo::level_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIrodoriMasterInfo.level_id)
  return level_id_;
}
inline void SceneGalleryIrodoriMasterInfo::set_level_id(::google::protobuf::uint32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIrodoriMasterInfo.level_id)
}

// uint32 difficulty = 1;
inline void SceneGalleryIrodoriMasterInfo::clear_difficulty() {
  difficulty_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIrodoriMasterInfo::difficulty() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIrodoriMasterInfo.difficulty)
  return difficulty_;
}
inline void SceneGalleryIrodoriMasterInfo::set_difficulty(::google::protobuf::uint32 value) {
  
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIrodoriMasterInfo.difficulty)
}

// bool is_cg_viewed = 5;
inline void SceneGalleryIrodoriMasterInfo::clear_is_cg_viewed() {
  is_cg_viewed_ = false;
}
inline bool SceneGalleryIrodoriMasterInfo::is_cg_viewed() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIrodoriMasterInfo.is_cg_viewed)
  return is_cg_viewed_;
}
inline void SceneGalleryIrodoriMasterInfo::set_is_cg_viewed(bool value) {
  
  is_cg_viewed_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIrodoriMasterInfo.is_cg_viewed)
}

// -------------------------------------------------------------------

// SceneGalleryHomeBalloonInfo

// uint32 score = 7;
inline void SceneGalleryHomeBalloonInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryHomeBalloonInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHomeBalloonInfo.score)
  return score_;
}
inline void SceneGalleryHomeBalloonInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryHomeBalloonInfo.score)
}

// -------------------------------------------------------------------

// SceneGalleryLuminanceStoneChallengeInfo

// uint32 kill_monster_count = 5;
inline void SceneGalleryLuminanceStoneChallengeInfo::clear_kill_monster_count() {
  kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryLuminanceStoneChallengeInfo::kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryLuminanceStoneChallengeInfo.kill_monster_count)
  return kill_monster_count_;
}
inline void SceneGalleryLuminanceStoneChallengeInfo::set_kill_monster_count(::google::protobuf::uint32 value) {
  
  kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryLuminanceStoneChallengeInfo.kill_monster_count)
}

// uint32 score = 3;
inline void SceneGalleryLuminanceStoneChallengeInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryLuminanceStoneChallengeInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryLuminanceStoneChallengeInfo.score)
  return score_;
}
inline void SceneGalleryLuminanceStoneChallengeInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryLuminanceStoneChallengeInfo.score)
}

// uint32 clean_mud_count = 2;
inline void SceneGalleryLuminanceStoneChallengeInfo::clear_clean_mud_count() {
  clean_mud_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryLuminanceStoneChallengeInfo::clean_mud_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryLuminanceStoneChallengeInfo.clean_mud_count)
  return clean_mud_count_;
}
inline void SceneGalleryLuminanceStoneChallengeInfo::set_clean_mud_count(::google::protobuf::uint32 value) {
  
  clean_mud_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryLuminanceStoneChallengeInfo.clean_mud_count)
}

// uint32 kill_special_monster_count = 6;
inline void SceneGalleryLuminanceStoneChallengeInfo::clear_kill_special_monster_count() {
  kill_special_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryLuminanceStoneChallengeInfo::kill_special_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryLuminanceStoneChallengeInfo.kill_special_monster_count)
  return kill_special_monster_count_;
}
inline void SceneGalleryLuminanceStoneChallengeInfo::set_kill_special_monster_count(::google::protobuf::uint32 value) {
  
  kill_special_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryLuminanceStoneChallengeInfo.kill_special_monster_count)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneGalleryHomeSeekFurnitureInfo

// uint32 cur_tide_left_num = 6;
inline void SceneGalleryHomeSeekFurnitureInfo::clear_cur_tide_left_num() {
  cur_tide_left_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryHomeSeekFurnitureInfo::cur_tide_left_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHomeSeekFurnitureInfo.cur_tide_left_num)
  return cur_tide_left_num_;
}
inline void SceneGalleryHomeSeekFurnitureInfo::set_cur_tide_left_num(::google::protobuf::uint32 value) {
  
  cur_tide_left_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryHomeSeekFurnitureInfo.cur_tide_left_num)
}

// map<uint32, uint32> player_score_map = 8;
inline int SceneGalleryHomeSeekFurnitureInfo::player_score_map_size() const {
  return player_score_map_.size();
}
inline void SceneGalleryHomeSeekFurnitureInfo::clear_player_score_map() {
  player_score_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneGalleryHomeSeekFurnitureInfo::player_score_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneGalleryHomeSeekFurnitureInfo.player_score_map)
  return player_score_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneGalleryHomeSeekFurnitureInfo::mutable_player_score_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneGalleryHomeSeekFurnitureInfo.player_score_map)
  return player_score_map_.MutableMap();
}

// uint32 cur_tide_duration_time = 12;
inline void SceneGalleryHomeSeekFurnitureInfo::clear_cur_tide_duration_time() {
  cur_tide_duration_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryHomeSeekFurnitureInfo::cur_tide_duration_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHomeSeekFurnitureInfo.cur_tide_duration_time)
  return cur_tide_duration_time_;
}
inline void SceneGalleryHomeSeekFurnitureInfo::set_cur_tide_duration_time(::google::protobuf::uint32 value) {
  
  cur_tide_duration_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryHomeSeekFurnitureInfo.cur_tide_duration_time)
}

// uint32 cur_tide_total_num = 9;
inline void SceneGalleryHomeSeekFurnitureInfo::clear_cur_tide_total_num() {
  cur_tide_total_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryHomeSeekFurnitureInfo::cur_tide_total_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryHomeSeekFurnitureInfo.cur_tide_total_num)
  return cur_tide_total_num_;
}
inline void SceneGalleryHomeSeekFurnitureInfo::set_cur_tide_total_num(::google::protobuf::uint32 value) {
  
  cur_tide_total_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryHomeSeekFurnitureInfo.cur_tide_total_num)
}

// -------------------------------------------------------------------

// SceneGalleryIslandPartyDownHillInfo

// uint32 total_kill_monster_count = 14;
inline void SceneGalleryIslandPartyDownHillInfo::clear_total_kill_monster_count() {
  total_kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyDownHillInfo::total_kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyDownHillInfo.total_kill_monster_count)
  return total_kill_monster_count_;
}
inline void SceneGalleryIslandPartyDownHillInfo::set_total_kill_monster_count(::google::protobuf::uint32 value) {
  
  total_kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyDownHillInfo.total_kill_monster_count)
}

// .proto.GalleryStartSource start_source = 15;
inline void SceneGalleryIslandPartyDownHillInfo::clear_start_source() {
  start_source_ = 0;
}
inline ::proto::GalleryStartSource SceneGalleryIslandPartyDownHillInfo::start_source() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyDownHillInfo.start_source)
  return static_cast< ::proto::GalleryStartSource >(start_source_);
}
inline void SceneGalleryIslandPartyDownHillInfo::set_start_source(::proto::GalleryStartSource value) {
  
  start_source_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyDownHillInfo.start_source)
}

// uint32 max_kill_monster_count = 5;
inline void SceneGalleryIslandPartyDownHillInfo::clear_max_kill_monster_count() {
  max_kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyDownHillInfo::max_kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyDownHillInfo.max_kill_monster_count)
  return max_kill_monster_count_;
}
inline void SceneGalleryIslandPartyDownHillInfo::set_max_kill_monster_count(::google::protobuf::uint32 value) {
  
  max_kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyDownHillInfo.max_kill_monster_count)
}

// uint32 coin = 13;
inline void SceneGalleryIslandPartyDownHillInfo::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyDownHillInfo::coin() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyDownHillInfo.coin)
  return coin_;
}
inline void SceneGalleryIslandPartyDownHillInfo::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyDownHillInfo.coin)
}

// -------------------------------------------------------------------

// SceneGallerySummerTimeV2BoatInfo

// uint32 param1 = 15;
inline void SceneGallerySummerTimeV2BoatInfo::clear_param1() {
  param1_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySummerTimeV2BoatInfo::param1() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySummerTimeV2BoatInfo.param1)
  return param1_;
}
inline void SceneGallerySummerTimeV2BoatInfo::set_param1(::google::protobuf::uint32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySummerTimeV2BoatInfo.param1)
}

// uint32 param3 = 3;
inline void SceneGallerySummerTimeV2BoatInfo::clear_param3() {
  param3_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySummerTimeV2BoatInfo::param3() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySummerTimeV2BoatInfo.param3)
  return param3_;
}
inline void SceneGallerySummerTimeV2BoatInfo::set_param3(::google::protobuf::uint32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySummerTimeV2BoatInfo.param3)
}

// uint32 used_time = 11;
inline void SceneGallerySummerTimeV2BoatInfo::clear_used_time() {
  used_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySummerTimeV2BoatInfo::used_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySummerTimeV2BoatInfo.used_time)
  return used_time_;
}
inline void SceneGallerySummerTimeV2BoatInfo::set_used_time(::google::protobuf::uint32 value) {
  
  used_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySummerTimeV2BoatInfo.used_time)
}

// uint32 param2 = 7;
inline void SceneGallerySummerTimeV2BoatInfo::clear_param2() {
  param2_ = 0u;
}
inline ::google::protobuf::uint32 SceneGallerySummerTimeV2BoatInfo::param2() const {
  // @@protoc_insertion_point(field_get:proto.SceneGallerySummerTimeV2BoatInfo.param2)
  return param2_;
}
inline void SceneGallerySummerTimeV2BoatInfo::set_param2(::google::protobuf::uint32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGallerySummerTimeV2BoatInfo.param2)
}

// -------------------------------------------------------------------

// SceneGalleryIslandPartyRaftInfo

// uint32 coin = 6;
inline void SceneGalleryIslandPartyRaftInfo::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyRaftInfo::coin() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyRaftInfo.coin)
  return coin_;
}
inline void SceneGalleryIslandPartyRaftInfo::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyRaftInfo.coin)
}

// .proto.GalleryStartSource start_source = 7;
inline void SceneGalleryIslandPartyRaftInfo::clear_start_source() {
  start_source_ = 0;
}
inline ::proto::GalleryStartSource SceneGalleryIslandPartyRaftInfo::start_source() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyRaftInfo.start_source)
  return static_cast< ::proto::GalleryStartSource >(start_source_);
}
inline void SceneGalleryIslandPartyRaftInfo::set_start_source(::proto::GalleryStartSource value) {
  
  start_source_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyRaftInfo.start_source)
}

// uint32 component = 1;
inline void SceneGalleryIslandPartyRaftInfo::clear_component() {
  component_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyRaftInfo::component() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyRaftInfo.component)
  return component_;
}
inline void SceneGalleryIslandPartyRaftInfo::set_component(::google::protobuf::uint32 value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyRaftInfo.component)
}

// uint32 fuel = 15;
inline void SceneGalleryIslandPartyRaftInfo::clear_fuel() {
  fuel_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyRaftInfo::fuel() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyRaftInfo.fuel)
  return fuel_;
}
inline void SceneGalleryIslandPartyRaftInfo::set_fuel(::google::protobuf::uint32 value) {
  
  fuel_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyRaftInfo.fuel)
}

// uint32 point_id = 12;
inline void SceneGalleryIslandPartyRaftInfo::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyRaftInfo::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyRaftInfo.point_id)
  return point_id_;
}
inline void SceneGalleryIslandPartyRaftInfo::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyRaftInfo.point_id)
}

// uint32 raft_entity_id = 4;
inline void SceneGalleryIslandPartyRaftInfo::clear_raft_entity_id() {
  raft_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartyRaftInfo::raft_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartyRaftInfo.raft_entity_id)
  return raft_entity_id_;
}
inline void SceneGalleryIslandPartyRaftInfo::set_raft_entity_id(::google::protobuf::uint32 value) {
  
  raft_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartyRaftInfo.raft_entity_id)
}

// -------------------------------------------------------------------

// SceneGalleryIslandPartySailInfo

// uint32 max_clean_progress = 14;
inline void SceneGalleryIslandPartySailInfo::clear_max_clean_progress() {
  max_clean_progress_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartySailInfo::max_clean_progress() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartySailInfo.max_clean_progress)
  return max_clean_progress_;
}
inline void SceneGalleryIslandPartySailInfo::set_max_clean_progress(::google::protobuf::uint32 value) {
  
  max_clean_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartySailInfo.max_clean_progress)
}

// uint32 clean_progress = 10;
inline void SceneGalleryIslandPartySailInfo::clear_clean_progress() {
  clean_progress_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartySailInfo::clean_progress() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartySailInfo.clean_progress)
  return clean_progress_;
}
inline void SceneGalleryIslandPartySailInfo::set_clean_progress(::google::protobuf::uint32 value) {
  
  clean_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartySailInfo.clean_progress)
}

// .proto.GalleryStartSource start_source = 1;
inline void SceneGalleryIslandPartySailInfo::clear_start_source() {
  start_source_ = 0;
}
inline ::proto::GalleryStartSource SceneGalleryIslandPartySailInfo::start_source() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartySailInfo.start_source)
  return static_cast< ::proto::GalleryStartSource >(start_source_);
}
inline void SceneGalleryIslandPartySailInfo::set_start_source(::proto::GalleryStartSource value) {
  
  start_source_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartySailInfo.start_source)
}

// uint32 kill_progress = 11;
inline void SceneGalleryIslandPartySailInfo::clear_kill_progress() {
  kill_progress_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartySailInfo::kill_progress() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartySailInfo.kill_progress)
  return kill_progress_;
}
inline void SceneGalleryIslandPartySailInfo::set_kill_progress(::google::protobuf::uint32 value) {
  
  kill_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartySailInfo.kill_progress)
}

// uint32 coin = 15;
inline void SceneGalleryIslandPartySailInfo::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartySailInfo::coin() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartySailInfo.coin)
  return coin_;
}
inline void SceneGalleryIslandPartySailInfo::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartySailInfo.coin)
}

// .proto.IslandPartySailStage stage = 12;
inline void SceneGalleryIslandPartySailInfo::clear_stage() {
  stage_ = 0;
}
inline ::proto::IslandPartySailStage SceneGalleryIslandPartySailInfo::stage() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartySailInfo.stage)
  return static_cast< ::proto::IslandPartySailStage >(stage_);
}
inline void SceneGalleryIslandPartySailInfo::set_stage(::proto::IslandPartySailStage value) {
  
  stage_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartySailInfo.stage)
}

// uint32 max_kill_progress = 8;
inline void SceneGalleryIslandPartySailInfo::clear_max_kill_progress() {
  max_kill_progress_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryIslandPartySailInfo::max_kill_progress() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryIslandPartySailInfo.max_kill_progress)
  return max_kill_progress_;
}
inline void SceneGalleryIslandPartySailInfo::set_max_kill_progress(::google::protobuf::uint32 value) {
  
  max_kill_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryIslandPartySailInfo.max_kill_progress)
}

// -------------------------------------------------------------------

// SceneGalleryInstableSprayBuffInfo

// uint32 buff_id = 6;
inline void SceneGalleryInstableSprayBuffInfo::clear_buff_id() {
  buff_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInstableSprayBuffInfo::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInstableSprayBuffInfo.buff_id)
  return buff_id_;
}
inline void SceneGalleryInstableSprayBuffInfo::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInstableSprayBuffInfo.buff_id)
}

// uint64 buff_end_time = 9;
inline void SceneGalleryInstableSprayBuffInfo::clear_buff_end_time() {
  buff_end_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneGalleryInstableSprayBuffInfo::buff_end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInstableSprayBuffInfo.buff_end_time)
  return buff_end_time_;
}
inline void SceneGalleryInstableSprayBuffInfo::set_buff_end_time(::google::protobuf::uint64 value) {
  
  buff_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInstableSprayBuffInfo.buff_end_time)
}

// uint64 buff_max_time = 4;
inline void SceneGalleryInstableSprayBuffInfo::clear_buff_max_time() {
  buff_max_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneGalleryInstableSprayBuffInfo::buff_max_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInstableSprayBuffInfo.buff_max_time)
  return buff_max_time_;
}
inline void SceneGalleryInstableSprayBuffInfo::set_buff_max_time(::google::protobuf::uint64 value) {
  
  buff_max_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInstableSprayBuffInfo.buff_max_time)
}

// -------------------------------------------------------------------

// SceneGalleryInstaleSprayInfo

// uint32 score = 5;
inline void SceneGalleryInstaleSprayInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInstaleSprayInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInstaleSprayInfo.score)
  return score_;
}
inline void SceneGalleryInstaleSprayInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInstaleSprayInfo.score)
}

// repeated .proto.SceneGalleryInstableSprayBuffInfo buff_info_list = 12;
inline int SceneGalleryInstaleSprayInfo::buff_info_list_size() const {
  return buff_info_list_.size();
}
inline void SceneGalleryInstaleSprayInfo::clear_buff_info_list() {
  buff_info_list_.Clear();
}
inline const ::proto::SceneGalleryInstableSprayBuffInfo& SceneGalleryInstaleSprayInfo::buff_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInstaleSprayInfo.buff_info_list)
  return buff_info_list_.Get(index);
}
inline ::proto::SceneGalleryInstableSprayBuffInfo* SceneGalleryInstaleSprayInfo::mutable_buff_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInstaleSprayInfo.buff_info_list)
  return buff_info_list_.Mutable(index);
}
inline ::proto::SceneGalleryInstableSprayBuffInfo* SceneGalleryInstaleSprayInfo::add_buff_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneGalleryInstaleSprayInfo.buff_info_list)
  return buff_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInstableSprayBuffInfo >*
SceneGalleryInstaleSprayInfo::mutable_buff_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneGalleryInstaleSprayInfo.buff_info_list)
  return &buff_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInstableSprayBuffInfo >&
SceneGalleryInstaleSprayInfo::buff_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneGalleryInstaleSprayInfo.buff_info_list)
  return buff_info_list_;
}

// -------------------------------------------------------------------

// SceneGalleryTreasureSeelieInfo

// uint32 progress = 15;
inline void SceneGalleryTreasureSeelieInfo::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryTreasureSeelieInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryTreasureSeelieInfo.progress)
  return progress_;
}
inline void SceneGalleryTreasureSeelieInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryTreasureSeelieInfo.progress)
}

// uint32 goal = 14;
inline void SceneGalleryTreasureSeelieInfo::clear_goal() {
  goal_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryTreasureSeelieInfo::goal() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryTreasureSeelieInfo.goal)
  return goal_;
}
inline void SceneGalleryTreasureSeelieInfo::set_goal(::google::protobuf::uint32 value) {
  
  goal_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryTreasureSeelieInfo.goal)
}

// -------------------------------------------------------------------

// SceneGalleryWindFieldInfo

// uint32 killed_monster_num = 5;
inline void SceneGalleryWindFieldInfo::clear_killed_monster_num() {
  killed_monster_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::killed_monster_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.killed_monster_num)
  return killed_monster_num_;
}
inline void SceneGalleryWindFieldInfo::set_killed_monster_num(::google::protobuf::uint32 value) {
  
  killed_monster_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.killed_monster_num)
}

// uint32 challenge_ball_max_count = 12;
inline void SceneGalleryWindFieldInfo::clear_challenge_ball_max_count() {
  challenge_ball_max_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::challenge_ball_max_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.challenge_ball_max_count)
  return challenge_ball_max_count_;
}
inline void SceneGalleryWindFieldInfo::set_challenge_ball_max_count(::google::protobuf::uint32 value) {
  
  challenge_ball_max_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.challenge_ball_max_count)
}

// uint32 show_id = 15;
inline void SceneGalleryWindFieldInfo::clear_show_id() {
  show_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::show_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.show_id)
  return show_id_;
}
inline void SceneGalleryWindFieldInfo::set_show_id(::google::protobuf::uint32 value) {
  
  show_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.show_id)
}

// uint32 challenge_total_time = 4;
inline void SceneGalleryWindFieldInfo::clear_challenge_total_time() {
  challenge_total_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::challenge_total_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.challenge_total_time)
  return challenge_total_time_;
}
inline void SceneGalleryWindFieldInfo::set_challenge_total_time(::google::protobuf::uint32 value) {
  
  challenge_total_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.challenge_total_time)
}

// uint32 challenge_ball_cur_count = 9;
inline void SceneGalleryWindFieldInfo::clear_challenge_ball_cur_count() {
  challenge_ball_cur_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::challenge_ball_cur_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.challenge_ball_cur_count)
  return challenge_ball_cur_count_;
}
inline void SceneGalleryWindFieldInfo::set_challenge_ball_cur_count(::google::protobuf::uint32 value) {
  
  challenge_ball_cur_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.challenge_ball_cur_count)
}

// uint32 coin_num = 1;
inline void SceneGalleryWindFieldInfo::clear_coin_num() {
  coin_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::coin_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.coin_num)
  return coin_num_;
}
inline void SceneGalleryWindFieldInfo::set_coin_num(::google::protobuf::uint32 value) {
  
  coin_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.coin_num)
}

// uint32 challenge_timestamp = 13;
inline void SceneGalleryWindFieldInfo::clear_challenge_timestamp() {
  challenge_timestamp_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::challenge_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.challenge_timestamp)
  return challenge_timestamp_;
}
inline void SceneGalleryWindFieldInfo::set_challenge_timestamp(::google::protobuf::uint32 value) {
  
  challenge_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.challenge_timestamp)
}

// uint32 element_ball_num = 10;
inline void SceneGalleryWindFieldInfo::clear_element_ball_num() {
  element_ball_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryWindFieldInfo::element_ball_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryWindFieldInfo.element_ball_num)
  return element_ball_num_;
}
inline void SceneGalleryWindFieldInfo::set_element_ball_num(::google::protobuf::uint32 value) {
  
  element_ball_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryWindFieldInfo.element_ball_num)
}

// -------------------------------------------------------------------

// SceneGalleryFungusFighterTrainingInfo

// uint32 max_monster_count = 4;
inline void SceneGalleryFungusFighterTrainingInfo::clear_max_monster_count() {
  max_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFungusFighterTrainingInfo::max_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterTrainingInfo.max_monster_count)
  return max_monster_count_;
}
inline void SceneGalleryFungusFighterTrainingInfo::set_max_monster_count(::google::protobuf::uint32 value) {
  
  max_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterTrainingInfo.max_monster_count)
}

// uint32 killed_monster_count = 9;
inline void SceneGalleryFungusFighterTrainingInfo::clear_killed_monster_count() {
  killed_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFungusFighterTrainingInfo::killed_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterTrainingInfo.killed_monster_count)
  return killed_monster_count_;
}
inline void SceneGalleryFungusFighterTrainingInfo::set_killed_monster_count(::google::protobuf::uint32 value) {
  
  killed_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterTrainingInfo.killed_monster_count)
}

// uint32 buff_start_time = 13;
inline void SceneGalleryFungusFighterTrainingInfo::clear_buff_start_time() {
  buff_start_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFungusFighterTrainingInfo::buff_start_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterTrainingInfo.buff_start_time)
  return buff_start_time_;
}
inline void SceneGalleryFungusFighterTrainingInfo::set_buff_start_time(::google::protobuf::uint32 value) {
  
  buff_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterTrainingInfo.buff_start_time)
}

// uint32 buff_id = 1;
inline void SceneGalleryFungusFighterTrainingInfo::clear_buff_id() {
  buff_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFungusFighterTrainingInfo::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterTrainingInfo.buff_id)
  return buff_id_;
}
inline void SceneGalleryFungusFighterTrainingInfo::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterTrainingInfo.buff_id)
}

// uint32 max_skill_count = 10;
inline void SceneGalleryFungusFighterTrainingInfo::clear_max_skill_count() {
  max_skill_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFungusFighterTrainingInfo::max_skill_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterTrainingInfo.max_skill_count)
  return max_skill_count_;
}
inline void SceneGalleryFungusFighterTrainingInfo::set_max_skill_count(::google::protobuf::uint32 value) {
  
  max_skill_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterTrainingInfo.max_skill_count)
}

// uint32 buff_last_time = 14;
inline void SceneGalleryFungusFighterTrainingInfo::clear_buff_last_time() {
  buff_last_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFungusFighterTrainingInfo::buff_last_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterTrainingInfo.buff_last_time)
  return buff_last_time_;
}
inline void SceneGalleryFungusFighterTrainingInfo::set_buff_last_time(::google::protobuf::uint32 value) {
  
  buff_last_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterTrainingInfo.buff_last_time)
}

// uint32 rest_skill_count = 5;
inline void SceneGalleryFungusFighterTrainingInfo::clear_rest_skill_count() {
  rest_skill_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryFungusFighterTrainingInfo::rest_skill_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterTrainingInfo.rest_skill_count)
  return rest_skill_count_;
}
inline void SceneGalleryFungusFighterTrainingInfo::set_rest_skill_count(::google::protobuf::uint32 value) {
  
  rest_skill_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterTrainingInfo.rest_skill_count)
}

// -------------------------------------------------------------------

// SceneGalleryFungusFighterCaptureInfo

// bool is_hide_progress = 13;
inline void SceneGalleryFungusFighterCaptureInfo::clear_is_hide_progress() {
  is_hide_progress_ = false;
}
inline bool SceneGalleryFungusFighterCaptureInfo::is_hide_progress() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryFungusFighterCaptureInfo.is_hide_progress)
  return is_hide_progress_;
}
inline void SceneGalleryFungusFighterCaptureInfo::set_is_hide_progress(bool value) {
  
  is_hide_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryFungusFighterCaptureInfo.is_hide_progress)
}

// -------------------------------------------------------------------

// SceneGalleryEffigyChallengeV2Info

// uint32 killed_monster_cnt = 10;
inline void SceneGalleryEffigyChallengeV2Info::clear_killed_monster_cnt() {
  killed_monster_cnt_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryEffigyChallengeV2Info::killed_monster_cnt() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryEffigyChallengeV2Info.killed_monster_cnt)
  return killed_monster_cnt_;
}
inline void SceneGalleryEffigyChallengeV2Info::set_killed_monster_cnt(::google::protobuf::uint32 value) {
  
  killed_monster_cnt_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryEffigyChallengeV2Info.killed_monster_cnt)
}

// uint32 total_target_kill_cnt = 15;
inline void SceneGalleryEffigyChallengeV2Info::clear_total_target_kill_cnt() {
  total_target_kill_cnt_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryEffigyChallengeV2Info::total_target_kill_cnt() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryEffigyChallengeV2Info.total_target_kill_cnt)
  return total_target_kill_cnt_;
}
inline void SceneGalleryEffigyChallengeV2Info::set_total_target_kill_cnt(::google::protobuf::uint32 value) {
  
  total_target_kill_cnt_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryEffigyChallengeV2Info.total_target_kill_cnt)
}

// uint32 scene_start_time = 14;
inline void SceneGalleryEffigyChallengeV2Info::clear_scene_start_time() {
  scene_start_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryEffigyChallengeV2Info::scene_start_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryEffigyChallengeV2Info.scene_start_time)
  return scene_start_time_;
}
inline void SceneGalleryEffigyChallengeV2Info::set_scene_start_time(::google::protobuf::uint32 value) {
  
  scene_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryEffigyChallengeV2Info.scene_start_time)
}

// uint32 t_remain_use_time = 6;
inline void SceneGalleryEffigyChallengeV2Info::clear_t_remain_use_time() {
  t_remain_use_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryEffigyChallengeV2Info::t_remain_use_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryEffigyChallengeV2Info.t_remain_use_time)
  return t_remain_use_time_;
}
inline void SceneGalleryEffigyChallengeV2Info::set_t_remain_use_time(::google::protobuf::uint32 value) {
  
  t_remain_use_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryEffigyChallengeV2Info.t_remain_use_time)
}

// uint32 boss_violent_level = 9;
inline void SceneGalleryEffigyChallengeV2Info::clear_boss_violent_level() {
  boss_violent_level_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryEffigyChallengeV2Info::boss_violent_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryEffigyChallengeV2Info.boss_violent_level)
  return boss_violent_level_;
}
inline void SceneGalleryEffigyChallengeV2Info::set_boss_violent_level(::google::protobuf::uint32 value) {
  
  boss_violent_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryEffigyChallengeV2Info.boss_violent_level)
}

// -------------------------------------------------------------------

// SceneGalleryCharAmusementInfo

// bool is_last_level = 2;
inline void SceneGalleryCharAmusementInfo::clear_is_last_level() {
  is_last_level_ = false;
}
inline bool SceneGalleryCharAmusementInfo::is_last_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCharAmusementInfo.is_last_level)
  return is_last_level_;
}
inline void SceneGalleryCharAmusementInfo::set_is_last_level(bool value) {
  
  is_last_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCharAmusementInfo.is_last_level)
}

// uint32 max_score = 9;
inline void SceneGalleryCharAmusementInfo::clear_max_score() {
  max_score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryCharAmusementInfo::max_score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCharAmusementInfo.max_score)
  return max_score_;
}
inline void SceneGalleryCharAmusementInfo::set_max_score(::google::protobuf::uint32 value) {
  
  max_score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCharAmusementInfo.max_score)
}

// uint32 cur_score = 14;
inline void SceneGalleryCharAmusementInfo::clear_cur_score() {
  cur_score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryCharAmusementInfo::cur_score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCharAmusementInfo.cur_score)
  return cur_score_;
}
inline void SceneGalleryCharAmusementInfo::set_cur_score(::google::protobuf::uint32 value) {
  
  cur_score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCharAmusementInfo.cur_score)
}

// bool is_finish = 10;
inline void SceneGalleryCharAmusementInfo::clear_is_finish() {
  is_finish_ = false;
}
inline bool SceneGalleryCharAmusementInfo::is_finish() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCharAmusementInfo.is_finish)
  return is_finish_;
}
inline void SceneGalleryCharAmusementInfo::set_is_finish(bool value) {
  
  is_finish_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCharAmusementInfo.is_finish)
}

// bool is_success = 1;
inline void SceneGalleryCharAmusementInfo::clear_is_success() {
  is_success_ = false;
}
inline bool SceneGalleryCharAmusementInfo::is_success() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCharAmusementInfo.is_success)
  return is_success_;
}
inline void SceneGalleryCharAmusementInfo::set_is_success(bool value) {
  
  is_success_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCharAmusementInfo.is_success)
}

// -------------------------------------------------------------------

// SceneGalleryBrickBreakerInfo

// uint32 score = 10;
inline void SceneGalleryBrickBreakerInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBrickBreakerInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBrickBreakerInfo.score)
  return score_;
}
inline void SceneGalleryBrickBreakerInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBrickBreakerInfo.score)
}

// uint32 life_count = 4;
inline void SceneGalleryBrickBreakerInfo::clear_life_count() {
  life_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBrickBreakerInfo::life_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBrickBreakerInfo.life_count)
  return life_count_;
}
inline void SceneGalleryBrickBreakerInfo::set_life_count(::google::protobuf::uint32 value) {
  
  life_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBrickBreakerInfo.life_count)
}

// uint32 fever = 2;
inline void SceneGalleryBrickBreakerInfo::clear_fever() {
  fever_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBrickBreakerInfo::fever() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBrickBreakerInfo.fever)
  return fever_;
}
inline void SceneGalleryBrickBreakerInfo::set_fever(::google::protobuf::uint32 value) {
  
  fever_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBrickBreakerInfo.fever)
}

// uint32 combo = 1;
inline void SceneGalleryBrickBreakerInfo::clear_combo() {
  combo_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryBrickBreakerInfo::combo() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryBrickBreakerInfo.combo)
  return combo_;
}
inline void SceneGalleryBrickBreakerInfo::set_combo(::google::protobuf::uint32 value) {
  
  combo_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryBrickBreakerInfo.combo)
}

// -------------------------------------------------------------------

// SceneGalleryCoinCollectInfo

// uint32 coin_total_num = 4;
inline void SceneGalleryCoinCollectInfo::clear_coin_total_num() {
  coin_total_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryCoinCollectInfo::coin_total_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCoinCollectInfo.coin_total_num)
  return coin_total_num_;
}
inline void SceneGalleryCoinCollectInfo::set_coin_total_num(::google::protobuf::uint32 value) {
  
  coin_total_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCoinCollectInfo.coin_total_num)
}

// uint32 coin_collect_num = 2;
inline void SceneGalleryCoinCollectInfo::clear_coin_collect_num() {
  coin_collect_num_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryCoinCollectInfo::coin_collect_num() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryCoinCollectInfo.coin_collect_num)
  return coin_collect_num_;
}
inline void SceneGalleryCoinCollectInfo::set_coin_collect_num(::google::protobuf::uint32 value) {
  
  coin_collect_num_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryCoinCollectInfo.coin_collect_num)
}

// -------------------------------------------------------------------

// SceneGalleryTeamChainInfo

// uint32 gallery_score_end_time = 14;
inline void SceneGalleryTeamChainInfo::clear_gallery_score_end_time() {
  gallery_score_end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryTeamChainInfo::gallery_score_end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryTeamChainInfo.gallery_score_end_time)
  return gallery_score_end_time_;
}
inline void SceneGalleryTeamChainInfo::set_gallery_score_end_time(::google::protobuf::uint32 value) {
  
  gallery_score_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryTeamChainInfo.gallery_score_end_time)
}

// uint32 cur_total_score = 7;
inline void SceneGalleryTeamChainInfo::clear_cur_total_score() {
  cur_total_score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryTeamChainInfo::cur_total_score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryTeamChainInfo.cur_total_score)
  return cur_total_score_;
}
inline void SceneGalleryTeamChainInfo::set_cur_total_score(::google::protobuf::uint32 value) {
  
  cur_total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryTeamChainInfo.cur_total_score)
}

// uint32 cur_gallery_idx = 3;
inline void SceneGalleryTeamChainInfo::clear_cur_gallery_idx() {
  cur_gallery_idx_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryTeamChainInfo::cur_gallery_idx() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryTeamChainInfo.cur_gallery_idx)
  return cur_gallery_idx_;
}
inline void SceneGalleryTeamChainInfo::set_cur_gallery_idx(::google::protobuf::uint32 value) {
  
  cur_gallery_idx_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryTeamChainInfo.cur_gallery_idx)
}

// uint32 total_target_kill_cnt = 10;
inline void SceneGalleryTeamChainInfo::clear_total_target_kill_cnt() {
  total_target_kill_cnt_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryTeamChainInfo::total_target_kill_cnt() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryTeamChainInfo.total_target_kill_cnt)
  return total_target_kill_cnt_;
}
inline void SceneGalleryTeamChainInfo::set_total_target_kill_cnt(::google::protobuf::uint32 value) {
  
  total_target_kill_cnt_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryTeamChainInfo.total_target_kill_cnt)
}

// uint32 killed_monster_cnt = 12;
inline void SceneGalleryTeamChainInfo::clear_killed_monster_cnt() {
  killed_monster_cnt_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryTeamChainInfo::killed_monster_cnt() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryTeamChainInfo.killed_monster_cnt)
  return killed_monster_cnt_;
}
inline void SceneGalleryTeamChainInfo::set_killed_monster_cnt(::google::protobuf::uint32 value) {
  
  killed_monster_cnt_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryTeamChainInfo.killed_monster_cnt)
}

// -------------------------------------------------------------------

// SceneGalleryInfo

// .proto.GalleryStageType stage = 5;
inline void SceneGalleryInfo::clear_stage() {
  stage_ = 0;
}
inline ::proto::GalleryStageType SceneGalleryInfo::stage() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.stage)
  return static_cast< ::proto::GalleryStageType >(stage_);
}
inline void SceneGalleryInfo::set_stage(::proto::GalleryStageType value) {
  
  stage_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInfo.stage)
}

// repeated .proto.SceneGalleryProgressInfo progress_info_list = 4;
inline int SceneGalleryInfo::progress_info_list_size() const {
  return progress_info_list_.size();
}
inline void SceneGalleryInfo::clear_progress_info_list() {
  progress_info_list_.Clear();
}
inline const ::proto::SceneGalleryProgressInfo& SceneGalleryInfo::progress_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.progress_info_list)
  return progress_info_list_.Get(index);
}
inline ::proto::SceneGalleryProgressInfo* SceneGalleryInfo::mutable_progress_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.progress_info_list)
  return progress_info_list_.Mutable(index);
}
inline ::proto::SceneGalleryProgressInfo* SceneGalleryInfo::add_progress_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneGalleryInfo.progress_info_list)
  return progress_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryProgressInfo >*
SceneGalleryInfo::mutable_progress_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneGalleryInfo.progress_info_list)
  return &progress_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryProgressInfo >&
SceneGalleryInfo::progress_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneGalleryInfo.progress_info_list)
  return progress_info_list_;
}

// uint32 gallery_id = 2;
inline void SceneGalleryInfo::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInfo::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.gallery_id)
  return gallery_id_;
}
inline void SceneGalleryInfo::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInfo.gallery_id)
}

// uint32 start_time = 3;
inline void SceneGalleryInfo::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInfo::start_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.start_time)
  return start_time_;
}
inline void SceneGalleryInfo::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInfo.start_time)
}

// uint32 end_time = 11;
inline void SceneGalleryInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.end_time)
  return end_time_;
}
inline void SceneGalleryInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInfo.end_time)
}

// uint32 owner_uid = 9;
inline void SceneGalleryInfo::clear_owner_uid() {
  owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInfo::owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.owner_uid)
  return owner_uid_;
}
inline void SceneGalleryInfo::set_owner_uid(::google::protobuf::uint32 value) {
  
  owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInfo.owner_uid)
}

// uint32 player_count = 1;
inline void SceneGalleryInfo::clear_player_count() {
  player_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInfo::player_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.player_count)
  return player_count_;
}
inline void SceneGalleryInfo::set_player_count(::google::protobuf::uint32 value) {
  
  player_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInfo.player_count)
}

// uint32 pre_start_end_time = 15;
inline void SceneGalleryInfo::clear_pre_start_end_time() {
  pre_start_end_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryInfo::pre_start_end_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.pre_start_end_time)
  return pre_start_end_time_;
}
inline void SceneGalleryInfo::set_pre_start_end_time(::google::protobuf::uint32 value) {
  
  pre_start_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryInfo.pre_start_end_time)
}

// .proto.SceneGalleryBalloonInfo balloon_info = 14;
inline bool SceneGalleryInfo::has_balloon_info() const {
  return info_case() == kBalloonInfo;
}
inline void SceneGalleryInfo::set_has_balloon_info() {
  _oneof_case_[0] = kBalloonInfo;
}
inline void SceneGalleryInfo::clear_balloon_info() {
  if (has_balloon_info()) {
    delete info_.balloon_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryBalloonInfo& SceneGalleryInfo::balloon_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.balloon_info)
  return has_balloon_info()
      ? *info_.balloon_info_
      : ::proto::SceneGalleryBalloonInfo::default_instance();
}
inline ::proto::SceneGalleryBalloonInfo* SceneGalleryInfo::mutable_balloon_info() {
  if (!has_balloon_info()) {
    clear_info();
    set_has_balloon_info();
    info_.balloon_info_ = new ::proto::SceneGalleryBalloonInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.balloon_info)
  return info_.balloon_info_;
}
inline ::proto::SceneGalleryBalloonInfo* SceneGalleryInfo::release_balloon_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.balloon_info)
  if (has_balloon_info()) {
    clear_has_info();
    ::proto::SceneGalleryBalloonInfo* temp = info_.balloon_info_;
    info_.balloon_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_balloon_info(::proto::SceneGalleryBalloonInfo* balloon_info) {
  clear_info();
  if (balloon_info) {
    set_has_balloon_info();
    info_.balloon_info_ = balloon_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.balloon_info)
}

// .proto.SceneGalleryFallInfo fall_info = 7;
inline bool SceneGalleryInfo::has_fall_info() const {
  return info_case() == kFallInfo;
}
inline void SceneGalleryInfo::set_has_fall_info() {
  _oneof_case_[0] = kFallInfo;
}
inline void SceneGalleryInfo::clear_fall_info() {
  if (has_fall_info()) {
    delete info_.fall_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryFallInfo& SceneGalleryInfo::fall_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.fall_info)
  return has_fall_info()
      ? *info_.fall_info_
      : ::proto::SceneGalleryFallInfo::default_instance();
}
inline ::proto::SceneGalleryFallInfo* SceneGalleryInfo::mutable_fall_info() {
  if (!has_fall_info()) {
    clear_info();
    set_has_fall_info();
    info_.fall_info_ = new ::proto::SceneGalleryFallInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.fall_info)
  return info_.fall_info_;
}
inline ::proto::SceneGalleryFallInfo* SceneGalleryInfo::release_fall_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.fall_info)
  if (has_fall_info()) {
    clear_has_info();
    ::proto::SceneGalleryFallInfo* temp = info_.fall_info_;
    info_.fall_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_fall_info(::proto::SceneGalleryFallInfo* fall_info) {
  clear_info();
  if (fall_info) {
    set_has_fall_info();
    info_.fall_info_ = fall_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.fall_info)
}

// .proto.SceneGalleryFlowerInfo flower_info = 8;
inline bool SceneGalleryInfo::has_flower_info() const {
  return info_case() == kFlowerInfo;
}
inline void SceneGalleryInfo::set_has_flower_info() {
  _oneof_case_[0] = kFlowerInfo;
}
inline void SceneGalleryInfo::clear_flower_info() {
  if (has_flower_info()) {
    delete info_.flower_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryFlowerInfo& SceneGalleryInfo::flower_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.flower_info)
  return has_flower_info()
      ? *info_.flower_info_
      : ::proto::SceneGalleryFlowerInfo::default_instance();
}
inline ::proto::SceneGalleryFlowerInfo* SceneGalleryInfo::mutable_flower_info() {
  if (!has_flower_info()) {
    clear_info();
    set_has_flower_info();
    info_.flower_info_ = new ::proto::SceneGalleryFlowerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.flower_info)
  return info_.flower_info_;
}
inline ::proto::SceneGalleryFlowerInfo* SceneGalleryInfo::release_flower_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.flower_info)
  if (has_flower_info()) {
    clear_has_info();
    ::proto::SceneGalleryFlowerInfo* temp = info_.flower_info_;
    info_.flower_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_flower_info(::proto::SceneGalleryFlowerInfo* flower_info) {
  clear_info();
  if (flower_info) {
    set_has_flower_info();
    info_.flower_info_ = flower_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.flower_info)
}

// .proto.SceneGalleryBulletInfo bullet_info = 13;
inline bool SceneGalleryInfo::has_bullet_info() const {
  return info_case() == kBulletInfo;
}
inline void SceneGalleryInfo::set_has_bullet_info() {
  _oneof_case_[0] = kBulletInfo;
}
inline void SceneGalleryInfo::clear_bullet_info() {
  if (has_bullet_info()) {
    delete info_.bullet_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryBulletInfo& SceneGalleryInfo::bullet_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.bullet_info)
  return has_bullet_info()
      ? *info_.bullet_info_
      : ::proto::SceneGalleryBulletInfo::default_instance();
}
inline ::proto::SceneGalleryBulletInfo* SceneGalleryInfo::mutable_bullet_info() {
  if (!has_bullet_info()) {
    clear_info();
    set_has_bullet_info();
    info_.bullet_info_ = new ::proto::SceneGalleryBulletInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.bullet_info)
  return info_.bullet_info_;
}
inline ::proto::SceneGalleryBulletInfo* SceneGalleryInfo::release_bullet_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.bullet_info)
  if (has_bullet_info()) {
    clear_has_info();
    ::proto::SceneGalleryBulletInfo* temp = info_.bullet_info_;
    info_.bullet_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_bullet_info(::proto::SceneGalleryBulletInfo* bullet_info) {
  clear_info();
  if (bullet_info) {
    set_has_bullet_info();
    info_.bullet_info_ = bullet_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.bullet_info)
}

// .proto.SceneGalleryBrokenFloorInfo broken_floor_info = 10;
inline bool SceneGalleryInfo::has_broken_floor_info() const {
  return info_case() == kBrokenFloorInfo;
}
inline void SceneGalleryInfo::set_has_broken_floor_info() {
  _oneof_case_[0] = kBrokenFloorInfo;
}
inline void SceneGalleryInfo::clear_broken_floor_info() {
  if (has_broken_floor_info()) {
    delete info_.broken_floor_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryBrokenFloorInfo& SceneGalleryInfo::broken_floor_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.broken_floor_info)
  return has_broken_floor_info()
      ? *info_.broken_floor_info_
      : ::proto::SceneGalleryBrokenFloorInfo::default_instance();
}
inline ::proto::SceneGalleryBrokenFloorInfo* SceneGalleryInfo::mutable_broken_floor_info() {
  if (!has_broken_floor_info()) {
    clear_info();
    set_has_broken_floor_info();
    info_.broken_floor_info_ = new ::proto::SceneGalleryBrokenFloorInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.broken_floor_info)
  return info_.broken_floor_info_;
}
inline ::proto::SceneGalleryBrokenFloorInfo* SceneGalleryInfo::release_broken_floor_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.broken_floor_info)
  if (has_broken_floor_info()) {
    clear_has_info();
    ::proto::SceneGalleryBrokenFloorInfo* temp = info_.broken_floor_info_;
    info_.broken_floor_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_broken_floor_info(::proto::SceneGalleryBrokenFloorInfo* broken_floor_info) {
  clear_info();
  if (broken_floor_info) {
    set_has_broken_floor_info();
    info_.broken_floor_info_ = broken_floor_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.broken_floor_info)
}

// .proto.SceneGalleryHideAndSeekInfo hide_and_seek_info = 6;
inline bool SceneGalleryInfo::has_hide_and_seek_info() const {
  return info_case() == kHideAndSeekInfo;
}
inline void SceneGalleryInfo::set_has_hide_and_seek_info() {
  _oneof_case_[0] = kHideAndSeekInfo;
}
inline void SceneGalleryInfo::clear_hide_and_seek_info() {
  if (has_hide_and_seek_info()) {
    delete info_.hide_and_seek_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryHideAndSeekInfo& SceneGalleryInfo::hide_and_seek_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.hide_and_seek_info)
  return has_hide_and_seek_info()
      ? *info_.hide_and_seek_info_
      : ::proto::SceneGalleryHideAndSeekInfo::default_instance();
}
inline ::proto::SceneGalleryHideAndSeekInfo* SceneGalleryInfo::mutable_hide_and_seek_info() {
  if (!has_hide_and_seek_info()) {
    clear_info();
    set_has_hide_and_seek_info();
    info_.hide_and_seek_info_ = new ::proto::SceneGalleryHideAndSeekInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.hide_and_seek_info)
  return info_.hide_and_seek_info_;
}
inline ::proto::SceneGalleryHideAndSeekInfo* SceneGalleryInfo::release_hide_and_seek_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.hide_and_seek_info)
  if (has_hide_and_seek_info()) {
    clear_has_info();
    ::proto::SceneGalleryHideAndSeekInfo* temp = info_.hide_and_seek_info_;
    info_.hide_and_seek_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_hide_and_seek_info(::proto::SceneGalleryHideAndSeekInfo* hide_and_seek_info) {
  clear_info();
  if (hide_and_seek_info) {
    set_has_hide_and_seek_info();
    info_.hide_and_seek_info_ = hide_and_seek_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.hide_and_seek_info)
}

// .proto.SceneGalleryBuoyantCombatInfo buoyant_combat_info = 1384;
inline bool SceneGalleryInfo::has_buoyant_combat_info() const {
  return info_case() == kBuoyantCombatInfo;
}
inline void SceneGalleryInfo::set_has_buoyant_combat_info() {
  _oneof_case_[0] = kBuoyantCombatInfo;
}
inline void SceneGalleryInfo::clear_buoyant_combat_info() {
  if (has_buoyant_combat_info()) {
    delete info_.buoyant_combat_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryBuoyantCombatInfo& SceneGalleryInfo::buoyant_combat_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.buoyant_combat_info)
  return has_buoyant_combat_info()
      ? *info_.buoyant_combat_info_
      : ::proto::SceneGalleryBuoyantCombatInfo::default_instance();
}
inline ::proto::SceneGalleryBuoyantCombatInfo* SceneGalleryInfo::mutable_buoyant_combat_info() {
  if (!has_buoyant_combat_info()) {
    clear_info();
    set_has_buoyant_combat_info();
    info_.buoyant_combat_info_ = new ::proto::SceneGalleryBuoyantCombatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.buoyant_combat_info)
  return info_.buoyant_combat_info_;
}
inline ::proto::SceneGalleryBuoyantCombatInfo* SceneGalleryInfo::release_buoyant_combat_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.buoyant_combat_info)
  if (has_buoyant_combat_info()) {
    clear_has_info();
    ::proto::SceneGalleryBuoyantCombatInfo* temp = info_.buoyant_combat_info_;
    info_.buoyant_combat_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_buoyant_combat_info(::proto::SceneGalleryBuoyantCombatInfo* buoyant_combat_info) {
  clear_info();
  if (buoyant_combat_info) {
    set_has_buoyant_combat_info();
    info_.buoyant_combat_info_ = buoyant_combat_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.buoyant_combat_info)
}

// .proto.SceneGalleryBounceConjuringInfo bounce_conjuring_info = 708;
inline bool SceneGalleryInfo::has_bounce_conjuring_info() const {
  return info_case() == kBounceConjuringInfo;
}
inline void SceneGalleryInfo::set_has_bounce_conjuring_info() {
  _oneof_case_[0] = kBounceConjuringInfo;
}
inline void SceneGalleryInfo::clear_bounce_conjuring_info() {
  if (has_bounce_conjuring_info()) {
    delete info_.bounce_conjuring_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryBounceConjuringInfo& SceneGalleryInfo::bounce_conjuring_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.bounce_conjuring_info)
  return has_bounce_conjuring_info()
      ? *info_.bounce_conjuring_info_
      : ::proto::SceneGalleryBounceConjuringInfo::default_instance();
}
inline ::proto::SceneGalleryBounceConjuringInfo* SceneGalleryInfo::mutable_bounce_conjuring_info() {
  if (!has_bounce_conjuring_info()) {
    clear_info();
    set_has_bounce_conjuring_info();
    info_.bounce_conjuring_info_ = new ::proto::SceneGalleryBounceConjuringInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.bounce_conjuring_info)
  return info_.bounce_conjuring_info_;
}
inline ::proto::SceneGalleryBounceConjuringInfo* SceneGalleryInfo::release_bounce_conjuring_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.bounce_conjuring_info)
  if (has_bounce_conjuring_info()) {
    clear_has_info();
    ::proto::SceneGalleryBounceConjuringInfo* temp = info_.bounce_conjuring_info_;
    info_.bounce_conjuring_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_bounce_conjuring_info(::proto::SceneGalleryBounceConjuringInfo* bounce_conjuring_info) {
  clear_info();
  if (bounce_conjuring_info) {
    set_has_bounce_conjuring_info();
    info_.bounce_conjuring_info_ = bounce_conjuring_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.bounce_conjuring_info)
}

// .proto.SceneGalleryHandballInfo handball_info = 1997;
inline bool SceneGalleryInfo::has_handball_info() const {
  return info_case() == kHandballInfo;
}
inline void SceneGalleryInfo::set_has_handball_info() {
  _oneof_case_[0] = kHandballInfo;
}
inline void SceneGalleryInfo::clear_handball_info() {
  if (has_handball_info()) {
    delete info_.handball_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryHandballInfo& SceneGalleryInfo::handball_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.handball_info)
  return has_handball_info()
      ? *info_.handball_info_
      : ::proto::SceneGalleryHandballInfo::default_instance();
}
inline ::proto::SceneGalleryHandballInfo* SceneGalleryInfo::mutable_handball_info() {
  if (!has_handball_info()) {
    clear_info();
    set_has_handball_info();
    info_.handball_info_ = new ::proto::SceneGalleryHandballInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.handball_info)
  return info_.handball_info_;
}
inline ::proto::SceneGalleryHandballInfo* SceneGalleryInfo::release_handball_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.handball_info)
  if (has_handball_info()) {
    clear_has_info();
    ::proto::SceneGalleryHandballInfo* temp = info_.handball_info_;
    info_.handball_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_handball_info(::proto::SceneGalleryHandballInfo* handball_info) {
  clear_info();
  if (handball_info) {
    set_has_handball_info();
    info_.handball_info_ = handball_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.handball_info)
}

// .proto.SceneGallerySumoInfo sumo_info = 811;
inline bool SceneGalleryInfo::has_sumo_info() const {
  return info_case() == kSumoInfo;
}
inline void SceneGalleryInfo::set_has_sumo_info() {
  _oneof_case_[0] = kSumoInfo;
}
inline void SceneGalleryInfo::clear_sumo_info() {
  if (has_sumo_info()) {
    delete info_.sumo_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGallerySumoInfo& SceneGalleryInfo::sumo_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.sumo_info)
  return has_sumo_info()
      ? *info_.sumo_info_
      : ::proto::SceneGallerySumoInfo::default_instance();
}
inline ::proto::SceneGallerySumoInfo* SceneGalleryInfo::mutable_sumo_info() {
  if (!has_sumo_info()) {
    clear_info();
    set_has_sumo_info();
    info_.sumo_info_ = new ::proto::SceneGallerySumoInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.sumo_info)
  return info_.sumo_info_;
}
inline ::proto::SceneGallerySumoInfo* SceneGalleryInfo::release_sumo_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.sumo_info)
  if (has_sumo_info()) {
    clear_has_info();
    ::proto::SceneGallerySumoInfo* temp = info_.sumo_info_;
    info_.sumo_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_sumo_info(::proto::SceneGallerySumoInfo* sumo_info) {
  clear_info();
  if (sumo_info) {
    set_has_sumo_info();
    info_.sumo_info_ = sumo_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.sumo_info)
}

// .proto.SceneGallerySalvagePreventInfo salvage_prevent_info = 1700;
inline bool SceneGalleryInfo::has_salvage_prevent_info() const {
  return info_case() == kSalvagePreventInfo;
}
inline void SceneGalleryInfo::set_has_salvage_prevent_info() {
  _oneof_case_[0] = kSalvagePreventInfo;
}
inline void SceneGalleryInfo::clear_salvage_prevent_info() {
  if (has_salvage_prevent_info()) {
    delete info_.salvage_prevent_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGallerySalvagePreventInfo& SceneGalleryInfo::salvage_prevent_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.salvage_prevent_info)
  return has_salvage_prevent_info()
      ? *info_.salvage_prevent_info_
      : ::proto::SceneGallerySalvagePreventInfo::default_instance();
}
inline ::proto::SceneGallerySalvagePreventInfo* SceneGalleryInfo::mutable_salvage_prevent_info() {
  if (!has_salvage_prevent_info()) {
    clear_info();
    set_has_salvage_prevent_info();
    info_.salvage_prevent_info_ = new ::proto::SceneGallerySalvagePreventInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.salvage_prevent_info)
  return info_.salvage_prevent_info_;
}
inline ::proto::SceneGallerySalvagePreventInfo* SceneGalleryInfo::release_salvage_prevent_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.salvage_prevent_info)
  if (has_salvage_prevent_info()) {
    clear_has_info();
    ::proto::SceneGallerySalvagePreventInfo* temp = info_.salvage_prevent_info_;
    info_.salvage_prevent_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_salvage_prevent_info(::proto::SceneGallerySalvagePreventInfo* salvage_prevent_info) {
  clear_info();
  if (salvage_prevent_info) {
    set_has_salvage_prevent_info();
    info_.salvage_prevent_info_ = salvage_prevent_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.salvage_prevent_info)
}

// .proto.SceneGallerySalvageEscortInfo salvage_escort_info = 759;
inline bool SceneGalleryInfo::has_salvage_escort_info() const {
  return info_case() == kSalvageEscortInfo;
}
inline void SceneGalleryInfo::set_has_salvage_escort_info() {
  _oneof_case_[0] = kSalvageEscortInfo;
}
inline void SceneGalleryInfo::clear_salvage_escort_info() {
  if (has_salvage_escort_info()) {
    delete info_.salvage_escort_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGallerySalvageEscortInfo& SceneGalleryInfo::salvage_escort_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.salvage_escort_info)
  return has_salvage_escort_info()
      ? *info_.salvage_escort_info_
      : ::proto::SceneGallerySalvageEscortInfo::default_instance();
}
inline ::proto::SceneGallerySalvageEscortInfo* SceneGalleryInfo::mutable_salvage_escort_info() {
  if (!has_salvage_escort_info()) {
    clear_info();
    set_has_salvage_escort_info();
    info_.salvage_escort_info_ = new ::proto::SceneGallerySalvageEscortInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.salvage_escort_info)
  return info_.salvage_escort_info_;
}
inline ::proto::SceneGallerySalvageEscortInfo* SceneGalleryInfo::release_salvage_escort_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.salvage_escort_info)
  if (has_salvage_escort_info()) {
    clear_has_info();
    ::proto::SceneGallerySalvageEscortInfo* temp = info_.salvage_escort_info_;
    info_.salvage_escort_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_salvage_escort_info(::proto::SceneGallerySalvageEscortInfo* salvage_escort_info) {
  clear_info();
  if (salvage_escort_info) {
    set_has_salvage_escort_info();
    info_.salvage_escort_info_ = salvage_escort_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.salvage_escort_info)
}

// .proto.SceneGalleryHomeBalloonInfo home_balloon_info = 1034;
inline bool SceneGalleryInfo::has_home_balloon_info() const {
  return info_case() == kHomeBalloonInfo;
}
inline void SceneGalleryInfo::set_has_home_balloon_info() {
  _oneof_case_[0] = kHomeBalloonInfo;
}
inline void SceneGalleryInfo::clear_home_balloon_info() {
  if (has_home_balloon_info()) {
    delete info_.home_balloon_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryHomeBalloonInfo& SceneGalleryInfo::home_balloon_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.home_balloon_info)
  return has_home_balloon_info()
      ? *info_.home_balloon_info_
      : ::proto::SceneGalleryHomeBalloonInfo::default_instance();
}
inline ::proto::SceneGalleryHomeBalloonInfo* SceneGalleryInfo::mutable_home_balloon_info() {
  if (!has_home_balloon_info()) {
    clear_info();
    set_has_home_balloon_info();
    info_.home_balloon_info_ = new ::proto::SceneGalleryHomeBalloonInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.home_balloon_info)
  return info_.home_balloon_info_;
}
inline ::proto::SceneGalleryHomeBalloonInfo* SceneGalleryInfo::release_home_balloon_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.home_balloon_info)
  if (has_home_balloon_info()) {
    clear_has_info();
    ::proto::SceneGalleryHomeBalloonInfo* temp = info_.home_balloon_info_;
    info_.home_balloon_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_home_balloon_info(::proto::SceneGalleryHomeBalloonInfo* home_balloon_info) {
  clear_info();
  if (home_balloon_info) {
    set_has_home_balloon_info();
    info_.home_balloon_info_ = home_balloon_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.home_balloon_info)
}

// .proto.SceneGalleryCrystalLinkInfo crystal_link_info = 2004;
inline bool SceneGalleryInfo::has_crystal_link_info() const {
  return info_case() == kCrystalLinkInfo;
}
inline void SceneGalleryInfo::set_has_crystal_link_info() {
  _oneof_case_[0] = kCrystalLinkInfo;
}
inline void SceneGalleryInfo::clear_crystal_link_info() {
  if (has_crystal_link_info()) {
    delete info_.crystal_link_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryCrystalLinkInfo& SceneGalleryInfo::crystal_link_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.crystal_link_info)
  return has_crystal_link_info()
      ? *info_.crystal_link_info_
      : ::proto::SceneGalleryCrystalLinkInfo::default_instance();
}
inline ::proto::SceneGalleryCrystalLinkInfo* SceneGalleryInfo::mutable_crystal_link_info() {
  if (!has_crystal_link_info()) {
    clear_info();
    set_has_crystal_link_info();
    info_.crystal_link_info_ = new ::proto::SceneGalleryCrystalLinkInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.crystal_link_info)
  return info_.crystal_link_info_;
}
inline ::proto::SceneGalleryCrystalLinkInfo* SceneGalleryInfo::release_crystal_link_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.crystal_link_info)
  if (has_crystal_link_info()) {
    clear_has_info();
    ::proto::SceneGalleryCrystalLinkInfo* temp = info_.crystal_link_info_;
    info_.crystal_link_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_crystal_link_info(::proto::SceneGalleryCrystalLinkInfo* crystal_link_info) {
  clear_info();
  if (crystal_link_info) {
    set_has_crystal_link_info();
    info_.crystal_link_info_ = crystal_link_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.crystal_link_info)
}

// .proto.SceneGalleryIrodoriMasterInfo irodori_master_info = 1953;
inline bool SceneGalleryInfo::has_irodori_master_info() const {
  return info_case() == kIrodoriMasterInfo;
}
inline void SceneGalleryInfo::set_has_irodori_master_info() {
  _oneof_case_[0] = kIrodoriMasterInfo;
}
inline void SceneGalleryInfo::clear_irodori_master_info() {
  if (has_irodori_master_info()) {
    delete info_.irodori_master_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryIrodoriMasterInfo& SceneGalleryInfo::irodori_master_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.irodori_master_info)
  return has_irodori_master_info()
      ? *info_.irodori_master_info_
      : ::proto::SceneGalleryIrodoriMasterInfo::default_instance();
}
inline ::proto::SceneGalleryIrodoriMasterInfo* SceneGalleryInfo::mutable_irodori_master_info() {
  if (!has_irodori_master_info()) {
    clear_info();
    set_has_irodori_master_info();
    info_.irodori_master_info_ = new ::proto::SceneGalleryIrodoriMasterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.irodori_master_info)
  return info_.irodori_master_info_;
}
inline ::proto::SceneGalleryIrodoriMasterInfo* SceneGalleryInfo::release_irodori_master_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.irodori_master_info)
  if (has_irodori_master_info()) {
    clear_has_info();
    ::proto::SceneGalleryIrodoriMasterInfo* temp = info_.irodori_master_info_;
    info_.irodori_master_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_irodori_master_info(::proto::SceneGalleryIrodoriMasterInfo* irodori_master_info) {
  clear_info();
  if (irodori_master_info) {
    set_has_irodori_master_info();
    info_.irodori_master_info_ = irodori_master_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.irodori_master_info)
}

// .proto.SceneGalleryLuminanceStoneChallengeInfo luminance_stone_challenge_info = 106;
inline bool SceneGalleryInfo::has_luminance_stone_challenge_info() const {
  return info_case() == kLuminanceStoneChallengeInfo;
}
inline void SceneGalleryInfo::set_has_luminance_stone_challenge_info() {
  _oneof_case_[0] = kLuminanceStoneChallengeInfo;
}
inline void SceneGalleryInfo::clear_luminance_stone_challenge_info() {
  if (has_luminance_stone_challenge_info()) {
    delete info_.luminance_stone_challenge_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryLuminanceStoneChallengeInfo& SceneGalleryInfo::luminance_stone_challenge_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.luminance_stone_challenge_info)
  return has_luminance_stone_challenge_info()
      ? *info_.luminance_stone_challenge_info_
      : ::proto::SceneGalleryLuminanceStoneChallengeInfo::default_instance();
}
inline ::proto::SceneGalleryLuminanceStoneChallengeInfo* SceneGalleryInfo::mutable_luminance_stone_challenge_info() {
  if (!has_luminance_stone_challenge_info()) {
    clear_info();
    set_has_luminance_stone_challenge_info();
    info_.luminance_stone_challenge_info_ = new ::proto::SceneGalleryLuminanceStoneChallengeInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.luminance_stone_challenge_info)
  return info_.luminance_stone_challenge_info_;
}
inline ::proto::SceneGalleryLuminanceStoneChallengeInfo* SceneGalleryInfo::release_luminance_stone_challenge_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.luminance_stone_challenge_info)
  if (has_luminance_stone_challenge_info()) {
    clear_has_info();
    ::proto::SceneGalleryLuminanceStoneChallengeInfo* temp = info_.luminance_stone_challenge_info_;
    info_.luminance_stone_challenge_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_luminance_stone_challenge_info(::proto::SceneGalleryLuminanceStoneChallengeInfo* luminance_stone_challenge_info) {
  clear_info();
  if (luminance_stone_challenge_info) {
    set_has_luminance_stone_challenge_info();
    info_.luminance_stone_challenge_info_ = luminance_stone_challenge_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.luminance_stone_challenge_info)
}

// .proto.SceneGalleryHomeSeekFurnitureInfo home_seek_furniture_info = 1456;
inline bool SceneGalleryInfo::has_home_seek_furniture_info() const {
  return info_case() == kHomeSeekFurnitureInfo;
}
inline void SceneGalleryInfo::set_has_home_seek_furniture_info() {
  _oneof_case_[0] = kHomeSeekFurnitureInfo;
}
inline void SceneGalleryInfo::clear_home_seek_furniture_info() {
  if (has_home_seek_furniture_info()) {
    delete info_.home_seek_furniture_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryHomeSeekFurnitureInfo& SceneGalleryInfo::home_seek_furniture_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.home_seek_furniture_info)
  return has_home_seek_furniture_info()
      ? *info_.home_seek_furniture_info_
      : ::proto::SceneGalleryHomeSeekFurnitureInfo::default_instance();
}
inline ::proto::SceneGalleryHomeSeekFurnitureInfo* SceneGalleryInfo::mutable_home_seek_furniture_info() {
  if (!has_home_seek_furniture_info()) {
    clear_info();
    set_has_home_seek_furniture_info();
    info_.home_seek_furniture_info_ = new ::proto::SceneGalleryHomeSeekFurnitureInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.home_seek_furniture_info)
  return info_.home_seek_furniture_info_;
}
inline ::proto::SceneGalleryHomeSeekFurnitureInfo* SceneGalleryInfo::release_home_seek_furniture_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.home_seek_furniture_info)
  if (has_home_seek_furniture_info()) {
    clear_has_info();
    ::proto::SceneGalleryHomeSeekFurnitureInfo* temp = info_.home_seek_furniture_info_;
    info_.home_seek_furniture_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_home_seek_furniture_info(::proto::SceneGalleryHomeSeekFurnitureInfo* home_seek_furniture_info) {
  clear_info();
  if (home_seek_furniture_info) {
    set_has_home_seek_furniture_info();
    info_.home_seek_furniture_info_ = home_seek_furniture_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.home_seek_furniture_info)
}

// .proto.SceneGalleryIslandPartyDownHillInfo island_party_down_hill_info = 462;
inline bool SceneGalleryInfo::has_island_party_down_hill_info() const {
  return info_case() == kIslandPartyDownHillInfo;
}
inline void SceneGalleryInfo::set_has_island_party_down_hill_info() {
  _oneof_case_[0] = kIslandPartyDownHillInfo;
}
inline void SceneGalleryInfo::clear_island_party_down_hill_info() {
  if (has_island_party_down_hill_info()) {
    delete info_.island_party_down_hill_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryIslandPartyDownHillInfo& SceneGalleryInfo::island_party_down_hill_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.island_party_down_hill_info)
  return has_island_party_down_hill_info()
      ? *info_.island_party_down_hill_info_
      : ::proto::SceneGalleryIslandPartyDownHillInfo::default_instance();
}
inline ::proto::SceneGalleryIslandPartyDownHillInfo* SceneGalleryInfo::mutable_island_party_down_hill_info() {
  if (!has_island_party_down_hill_info()) {
    clear_info();
    set_has_island_party_down_hill_info();
    info_.island_party_down_hill_info_ = new ::proto::SceneGalleryIslandPartyDownHillInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.island_party_down_hill_info)
  return info_.island_party_down_hill_info_;
}
inline ::proto::SceneGalleryIslandPartyDownHillInfo* SceneGalleryInfo::release_island_party_down_hill_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.island_party_down_hill_info)
  if (has_island_party_down_hill_info()) {
    clear_has_info();
    ::proto::SceneGalleryIslandPartyDownHillInfo* temp = info_.island_party_down_hill_info_;
    info_.island_party_down_hill_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_island_party_down_hill_info(::proto::SceneGalleryIslandPartyDownHillInfo* island_party_down_hill_info) {
  clear_info();
  if (island_party_down_hill_info) {
    set_has_island_party_down_hill_info();
    info_.island_party_down_hill_info_ = island_party_down_hill_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.island_party_down_hill_info)
}

// .proto.SceneGallerySummerTimeV2BoatInfo summer_time_v2_boat_info = 296;
inline bool SceneGalleryInfo::has_summer_time_v2_boat_info() const {
  return info_case() == kSummerTimeV2BoatInfo;
}
inline void SceneGalleryInfo::set_has_summer_time_v2_boat_info() {
  _oneof_case_[0] = kSummerTimeV2BoatInfo;
}
inline void SceneGalleryInfo::clear_summer_time_v2_boat_info() {
  if (has_summer_time_v2_boat_info()) {
    delete info_.summer_time_v2_boat_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGallerySummerTimeV2BoatInfo& SceneGalleryInfo::summer_time_v2_boat_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.summer_time_v2_boat_info)
  return has_summer_time_v2_boat_info()
      ? *info_.summer_time_v2_boat_info_
      : ::proto::SceneGallerySummerTimeV2BoatInfo::default_instance();
}
inline ::proto::SceneGallerySummerTimeV2BoatInfo* SceneGalleryInfo::mutable_summer_time_v2_boat_info() {
  if (!has_summer_time_v2_boat_info()) {
    clear_info();
    set_has_summer_time_v2_boat_info();
    info_.summer_time_v2_boat_info_ = new ::proto::SceneGallerySummerTimeV2BoatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.summer_time_v2_boat_info)
  return info_.summer_time_v2_boat_info_;
}
inline ::proto::SceneGallerySummerTimeV2BoatInfo* SceneGalleryInfo::release_summer_time_v2_boat_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.summer_time_v2_boat_info)
  if (has_summer_time_v2_boat_info()) {
    clear_has_info();
    ::proto::SceneGallerySummerTimeV2BoatInfo* temp = info_.summer_time_v2_boat_info_;
    info_.summer_time_v2_boat_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_summer_time_v2_boat_info(::proto::SceneGallerySummerTimeV2BoatInfo* summer_time_v2_boat_info) {
  clear_info();
  if (summer_time_v2_boat_info) {
    set_has_summer_time_v2_boat_info();
    info_.summer_time_v2_boat_info_ = summer_time_v2_boat_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.summer_time_v2_boat_info)
}

// .proto.SceneGalleryIslandPartyRaftInfo island_party_raft_info = 1805;
inline bool SceneGalleryInfo::has_island_party_raft_info() const {
  return info_case() == kIslandPartyRaftInfo;
}
inline void SceneGalleryInfo::set_has_island_party_raft_info() {
  _oneof_case_[0] = kIslandPartyRaftInfo;
}
inline void SceneGalleryInfo::clear_island_party_raft_info() {
  if (has_island_party_raft_info()) {
    delete info_.island_party_raft_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryIslandPartyRaftInfo& SceneGalleryInfo::island_party_raft_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.island_party_raft_info)
  return has_island_party_raft_info()
      ? *info_.island_party_raft_info_
      : ::proto::SceneGalleryIslandPartyRaftInfo::default_instance();
}
inline ::proto::SceneGalleryIslandPartyRaftInfo* SceneGalleryInfo::mutable_island_party_raft_info() {
  if (!has_island_party_raft_info()) {
    clear_info();
    set_has_island_party_raft_info();
    info_.island_party_raft_info_ = new ::proto::SceneGalleryIslandPartyRaftInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.island_party_raft_info)
  return info_.island_party_raft_info_;
}
inline ::proto::SceneGalleryIslandPartyRaftInfo* SceneGalleryInfo::release_island_party_raft_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.island_party_raft_info)
  if (has_island_party_raft_info()) {
    clear_has_info();
    ::proto::SceneGalleryIslandPartyRaftInfo* temp = info_.island_party_raft_info_;
    info_.island_party_raft_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_island_party_raft_info(::proto::SceneGalleryIslandPartyRaftInfo* island_party_raft_info) {
  clear_info();
  if (island_party_raft_info) {
    set_has_island_party_raft_info();
    info_.island_party_raft_info_ = island_party_raft_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.island_party_raft_info)
}

// .proto.SceneGalleryIslandPartySailInfo island_party_sail_info = 1133;
inline bool SceneGalleryInfo::has_island_party_sail_info() const {
  return info_case() == kIslandPartySailInfo;
}
inline void SceneGalleryInfo::set_has_island_party_sail_info() {
  _oneof_case_[0] = kIslandPartySailInfo;
}
inline void SceneGalleryInfo::clear_island_party_sail_info() {
  if (has_island_party_sail_info()) {
    delete info_.island_party_sail_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryIslandPartySailInfo& SceneGalleryInfo::island_party_sail_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.island_party_sail_info)
  return has_island_party_sail_info()
      ? *info_.island_party_sail_info_
      : ::proto::SceneGalleryIslandPartySailInfo::default_instance();
}
inline ::proto::SceneGalleryIslandPartySailInfo* SceneGalleryInfo::mutable_island_party_sail_info() {
  if (!has_island_party_sail_info()) {
    clear_info();
    set_has_island_party_sail_info();
    info_.island_party_sail_info_ = new ::proto::SceneGalleryIslandPartySailInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.island_party_sail_info)
  return info_.island_party_sail_info_;
}
inline ::proto::SceneGalleryIslandPartySailInfo* SceneGalleryInfo::release_island_party_sail_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.island_party_sail_info)
  if (has_island_party_sail_info()) {
    clear_has_info();
    ::proto::SceneGalleryIslandPartySailInfo* temp = info_.island_party_sail_info_;
    info_.island_party_sail_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_island_party_sail_info(::proto::SceneGalleryIslandPartySailInfo* island_party_sail_info) {
  clear_info();
  if (island_party_sail_info) {
    set_has_island_party_sail_info();
    info_.island_party_sail_info_ = island_party_sail_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.island_party_sail_info)
}

// .proto.SceneGalleryInstaleSprayInfo instable_spray_info = 1196;
inline bool SceneGalleryInfo::has_instable_spray_info() const {
  return info_case() == kInstableSprayInfo;
}
inline void SceneGalleryInfo::set_has_instable_spray_info() {
  _oneof_case_[0] = kInstableSprayInfo;
}
inline void SceneGalleryInfo::clear_instable_spray_info() {
  if (has_instable_spray_info()) {
    delete info_.instable_spray_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryInstaleSprayInfo& SceneGalleryInfo::instable_spray_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.instable_spray_info)
  return has_instable_spray_info()
      ? *info_.instable_spray_info_
      : ::proto::SceneGalleryInstaleSprayInfo::default_instance();
}
inline ::proto::SceneGalleryInstaleSprayInfo* SceneGalleryInfo::mutable_instable_spray_info() {
  if (!has_instable_spray_info()) {
    clear_info();
    set_has_instable_spray_info();
    info_.instable_spray_info_ = new ::proto::SceneGalleryInstaleSprayInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.instable_spray_info)
  return info_.instable_spray_info_;
}
inline ::proto::SceneGalleryInstaleSprayInfo* SceneGalleryInfo::release_instable_spray_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.instable_spray_info)
  if (has_instable_spray_info()) {
    clear_has_info();
    ::proto::SceneGalleryInstaleSprayInfo* temp = info_.instable_spray_info_;
    info_.instable_spray_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_instable_spray_info(::proto::SceneGalleryInstaleSprayInfo* instable_spray_info) {
  clear_info();
  if (instable_spray_info) {
    set_has_instable_spray_info();
    info_.instable_spray_info_ = instable_spray_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.instable_spray_info)
}

// .proto.SceneGalleryMuqadasPotionInfo muqadas_potion_info = 865;
inline bool SceneGalleryInfo::has_muqadas_potion_info() const {
  return info_case() == kMuqadasPotionInfo;
}
inline void SceneGalleryInfo::set_has_muqadas_potion_info() {
  _oneof_case_[0] = kMuqadasPotionInfo;
}
inline void SceneGalleryInfo::clear_muqadas_potion_info() {
  if (has_muqadas_potion_info()) {
    delete info_.muqadas_potion_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryMuqadasPotionInfo& SceneGalleryInfo::muqadas_potion_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.muqadas_potion_info)
  return has_muqadas_potion_info()
      ? *info_.muqadas_potion_info_
      : ::proto::SceneGalleryMuqadasPotionInfo::default_instance();
}
inline ::proto::SceneGalleryMuqadasPotionInfo* SceneGalleryInfo::mutable_muqadas_potion_info() {
  if (!has_muqadas_potion_info()) {
    clear_info();
    set_has_muqadas_potion_info();
    info_.muqadas_potion_info_ = new ::proto::SceneGalleryMuqadasPotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.muqadas_potion_info)
  return info_.muqadas_potion_info_;
}
inline ::proto::SceneGalleryMuqadasPotionInfo* SceneGalleryInfo::release_muqadas_potion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.muqadas_potion_info)
  if (has_muqadas_potion_info()) {
    clear_has_info();
    ::proto::SceneGalleryMuqadasPotionInfo* temp = info_.muqadas_potion_info_;
    info_.muqadas_potion_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_muqadas_potion_info(::proto::SceneGalleryMuqadasPotionInfo* muqadas_potion_info) {
  clear_info();
  if (muqadas_potion_info) {
    set_has_muqadas_potion_info();
    info_.muqadas_potion_info_ = muqadas_potion_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.muqadas_potion_info)
}

// .proto.SceneGalleryTreasureSeelieInfo treasure_seelie_info = 1525;
inline bool SceneGalleryInfo::has_treasure_seelie_info() const {
  return info_case() == kTreasureSeelieInfo;
}
inline void SceneGalleryInfo::set_has_treasure_seelie_info() {
  _oneof_case_[0] = kTreasureSeelieInfo;
}
inline void SceneGalleryInfo::clear_treasure_seelie_info() {
  if (has_treasure_seelie_info()) {
    delete info_.treasure_seelie_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryTreasureSeelieInfo& SceneGalleryInfo::treasure_seelie_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.treasure_seelie_info)
  return has_treasure_seelie_info()
      ? *info_.treasure_seelie_info_
      : ::proto::SceneGalleryTreasureSeelieInfo::default_instance();
}
inline ::proto::SceneGalleryTreasureSeelieInfo* SceneGalleryInfo::mutable_treasure_seelie_info() {
  if (!has_treasure_seelie_info()) {
    clear_info();
    set_has_treasure_seelie_info();
    info_.treasure_seelie_info_ = new ::proto::SceneGalleryTreasureSeelieInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.treasure_seelie_info)
  return info_.treasure_seelie_info_;
}
inline ::proto::SceneGalleryTreasureSeelieInfo* SceneGalleryInfo::release_treasure_seelie_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.treasure_seelie_info)
  if (has_treasure_seelie_info()) {
    clear_has_info();
    ::proto::SceneGalleryTreasureSeelieInfo* temp = info_.treasure_seelie_info_;
    info_.treasure_seelie_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_treasure_seelie_info(::proto::SceneGalleryTreasureSeelieInfo* treasure_seelie_info) {
  clear_info();
  if (treasure_seelie_info) {
    set_has_treasure_seelie_info();
    info_.treasure_seelie_info_ = treasure_seelie_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.treasure_seelie_info)
}

// .proto.SceneGalleryVintageHuntingInfo vintage_hunting_info = 254;
inline bool SceneGalleryInfo::has_vintage_hunting_info() const {
  return info_case() == kVintageHuntingInfo;
}
inline void SceneGalleryInfo::set_has_vintage_hunting_info() {
  _oneof_case_[0] = kVintageHuntingInfo;
}
inline void SceneGalleryInfo::clear_vintage_hunting_info() {
  if (has_vintage_hunting_info()) {
    delete info_.vintage_hunting_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryVintageHuntingInfo& SceneGalleryInfo::vintage_hunting_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.vintage_hunting_info)
  return has_vintage_hunting_info()
      ? *info_.vintage_hunting_info_
      : ::proto::SceneGalleryVintageHuntingInfo::default_instance();
}
inline ::proto::SceneGalleryVintageHuntingInfo* SceneGalleryInfo::mutable_vintage_hunting_info() {
  if (!has_vintage_hunting_info()) {
    clear_info();
    set_has_vintage_hunting_info();
    info_.vintage_hunting_info_ = new ::proto::SceneGalleryVintageHuntingInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.vintage_hunting_info)
  return info_.vintage_hunting_info_;
}
inline ::proto::SceneGalleryVintageHuntingInfo* SceneGalleryInfo::release_vintage_hunting_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.vintage_hunting_info)
  if (has_vintage_hunting_info()) {
    clear_has_info();
    ::proto::SceneGalleryVintageHuntingInfo* temp = info_.vintage_hunting_info_;
    info_.vintage_hunting_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_vintage_hunting_info(::proto::SceneGalleryVintageHuntingInfo* vintage_hunting_info) {
  clear_info();
  if (vintage_hunting_info) {
    set_has_vintage_hunting_info();
    info_.vintage_hunting_info_ = vintage_hunting_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.vintage_hunting_info)
}

// .proto.SceneGalleryWindFieldInfo wind_field_info = 1080;
inline bool SceneGalleryInfo::has_wind_field_info() const {
  return info_case() == kWindFieldInfo;
}
inline void SceneGalleryInfo::set_has_wind_field_info() {
  _oneof_case_[0] = kWindFieldInfo;
}
inline void SceneGalleryInfo::clear_wind_field_info() {
  if (has_wind_field_info()) {
    delete info_.wind_field_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryWindFieldInfo& SceneGalleryInfo::wind_field_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.wind_field_info)
  return has_wind_field_info()
      ? *info_.wind_field_info_
      : ::proto::SceneGalleryWindFieldInfo::default_instance();
}
inline ::proto::SceneGalleryWindFieldInfo* SceneGalleryInfo::mutable_wind_field_info() {
  if (!has_wind_field_info()) {
    clear_info();
    set_has_wind_field_info();
    info_.wind_field_info_ = new ::proto::SceneGalleryWindFieldInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.wind_field_info)
  return info_.wind_field_info_;
}
inline ::proto::SceneGalleryWindFieldInfo* SceneGalleryInfo::release_wind_field_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.wind_field_info)
  if (has_wind_field_info()) {
    clear_has_info();
    ::proto::SceneGalleryWindFieldInfo* temp = info_.wind_field_info_;
    info_.wind_field_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_wind_field_info(::proto::SceneGalleryWindFieldInfo* wind_field_info) {
  clear_info();
  if (wind_field_info) {
    set_has_wind_field_info();
    info_.wind_field_info_ = wind_field_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.wind_field_info)
}

// .proto.SceneGalleryFungusFighterTrainingInfo fungus_fighter_training_info = 1328;
inline bool SceneGalleryInfo::has_fungus_fighter_training_info() const {
  return info_case() == kFungusFighterTrainingInfo;
}
inline void SceneGalleryInfo::set_has_fungus_fighter_training_info() {
  _oneof_case_[0] = kFungusFighterTrainingInfo;
}
inline void SceneGalleryInfo::clear_fungus_fighter_training_info() {
  if (has_fungus_fighter_training_info()) {
    delete info_.fungus_fighter_training_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryFungusFighterTrainingInfo& SceneGalleryInfo::fungus_fighter_training_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.fungus_fighter_training_info)
  return has_fungus_fighter_training_info()
      ? *info_.fungus_fighter_training_info_
      : ::proto::SceneGalleryFungusFighterTrainingInfo::default_instance();
}
inline ::proto::SceneGalleryFungusFighterTrainingInfo* SceneGalleryInfo::mutable_fungus_fighter_training_info() {
  if (!has_fungus_fighter_training_info()) {
    clear_info();
    set_has_fungus_fighter_training_info();
    info_.fungus_fighter_training_info_ = new ::proto::SceneGalleryFungusFighterTrainingInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.fungus_fighter_training_info)
  return info_.fungus_fighter_training_info_;
}
inline ::proto::SceneGalleryFungusFighterTrainingInfo* SceneGalleryInfo::release_fungus_fighter_training_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.fungus_fighter_training_info)
  if (has_fungus_fighter_training_info()) {
    clear_has_info();
    ::proto::SceneGalleryFungusFighterTrainingInfo* temp = info_.fungus_fighter_training_info_;
    info_.fungus_fighter_training_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_fungus_fighter_training_info(::proto::SceneGalleryFungusFighterTrainingInfo* fungus_fighter_training_info) {
  clear_info();
  if (fungus_fighter_training_info) {
    set_has_fungus_fighter_training_info();
    info_.fungus_fighter_training_info_ = fungus_fighter_training_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.fungus_fighter_training_info)
}

// .proto.SceneGalleryEffigyChallengeV2Info effigy_challenge_info = 882;
inline bool SceneGalleryInfo::has_effigy_challenge_info() const {
  return info_case() == kEffigyChallengeInfo;
}
inline void SceneGalleryInfo::set_has_effigy_challenge_info() {
  _oneof_case_[0] = kEffigyChallengeInfo;
}
inline void SceneGalleryInfo::clear_effigy_challenge_info() {
  if (has_effigy_challenge_info()) {
    delete info_.effigy_challenge_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryEffigyChallengeV2Info& SceneGalleryInfo::effigy_challenge_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.effigy_challenge_info)
  return has_effigy_challenge_info()
      ? *info_.effigy_challenge_info_
      : ::proto::SceneGalleryEffigyChallengeV2Info::default_instance();
}
inline ::proto::SceneGalleryEffigyChallengeV2Info* SceneGalleryInfo::mutable_effigy_challenge_info() {
  if (!has_effigy_challenge_info()) {
    clear_info();
    set_has_effigy_challenge_info();
    info_.effigy_challenge_info_ = new ::proto::SceneGalleryEffigyChallengeV2Info;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.effigy_challenge_info)
  return info_.effigy_challenge_info_;
}
inline ::proto::SceneGalleryEffigyChallengeV2Info* SceneGalleryInfo::release_effigy_challenge_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.effigy_challenge_info)
  if (has_effigy_challenge_info()) {
    clear_has_info();
    ::proto::SceneGalleryEffigyChallengeV2Info* temp = info_.effigy_challenge_info_;
    info_.effigy_challenge_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_effigy_challenge_info(::proto::SceneGalleryEffigyChallengeV2Info* effigy_challenge_info) {
  clear_info();
  if (effigy_challenge_info) {
    set_has_effigy_challenge_info();
    info_.effigy_challenge_info_ = effigy_challenge_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.effigy_challenge_info)
}

// .proto.SceneGalleryFungusFighterCaptureInfo fungus_fighter_capture_info = 422;
inline bool SceneGalleryInfo::has_fungus_fighter_capture_info() const {
  return info_case() == kFungusFighterCaptureInfo;
}
inline void SceneGalleryInfo::set_has_fungus_fighter_capture_info() {
  _oneof_case_[0] = kFungusFighterCaptureInfo;
}
inline void SceneGalleryInfo::clear_fungus_fighter_capture_info() {
  if (has_fungus_fighter_capture_info()) {
    delete info_.fungus_fighter_capture_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryFungusFighterCaptureInfo& SceneGalleryInfo::fungus_fighter_capture_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.fungus_fighter_capture_info)
  return has_fungus_fighter_capture_info()
      ? *info_.fungus_fighter_capture_info_
      : ::proto::SceneGalleryFungusFighterCaptureInfo::default_instance();
}
inline ::proto::SceneGalleryFungusFighterCaptureInfo* SceneGalleryInfo::mutable_fungus_fighter_capture_info() {
  if (!has_fungus_fighter_capture_info()) {
    clear_info();
    set_has_fungus_fighter_capture_info();
    info_.fungus_fighter_capture_info_ = new ::proto::SceneGalleryFungusFighterCaptureInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.fungus_fighter_capture_info)
  return info_.fungus_fighter_capture_info_;
}
inline ::proto::SceneGalleryFungusFighterCaptureInfo* SceneGalleryInfo::release_fungus_fighter_capture_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.fungus_fighter_capture_info)
  if (has_fungus_fighter_capture_info()) {
    clear_has_info();
    ::proto::SceneGalleryFungusFighterCaptureInfo* temp = info_.fungus_fighter_capture_info_;
    info_.fungus_fighter_capture_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_fungus_fighter_capture_info(::proto::SceneGalleryFungusFighterCaptureInfo* fungus_fighter_capture_info) {
  clear_info();
  if (fungus_fighter_capture_info) {
    set_has_fungus_fighter_capture_info();
    info_.fungus_fighter_capture_info_ = fungus_fighter_capture_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.fungus_fighter_capture_info)
}

// .proto.SceneGalleryCharAmusementInfo char_amusement_info = 1086;
inline bool SceneGalleryInfo::has_char_amusement_info() const {
  return info_case() == kCharAmusementInfo;
}
inline void SceneGalleryInfo::set_has_char_amusement_info() {
  _oneof_case_[0] = kCharAmusementInfo;
}
inline void SceneGalleryInfo::clear_char_amusement_info() {
  if (has_char_amusement_info()) {
    delete info_.char_amusement_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryCharAmusementInfo& SceneGalleryInfo::char_amusement_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.char_amusement_info)
  return has_char_amusement_info()
      ? *info_.char_amusement_info_
      : ::proto::SceneGalleryCharAmusementInfo::default_instance();
}
inline ::proto::SceneGalleryCharAmusementInfo* SceneGalleryInfo::mutable_char_amusement_info() {
  if (!has_char_amusement_info()) {
    clear_info();
    set_has_char_amusement_info();
    info_.char_amusement_info_ = new ::proto::SceneGalleryCharAmusementInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.char_amusement_info)
  return info_.char_amusement_info_;
}
inline ::proto::SceneGalleryCharAmusementInfo* SceneGalleryInfo::release_char_amusement_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.char_amusement_info)
  if (has_char_amusement_info()) {
    clear_has_info();
    ::proto::SceneGalleryCharAmusementInfo* temp = info_.char_amusement_info_;
    info_.char_amusement_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_char_amusement_info(::proto::SceneGalleryCharAmusementInfo* char_amusement_info) {
  clear_info();
  if (char_amusement_info) {
    set_has_char_amusement_info();
    info_.char_amusement_info_ = char_amusement_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.char_amusement_info)
}

// .proto.SceneGalleryBrickBreakerInfo brick_breaker_info = 1425;
inline bool SceneGalleryInfo::has_brick_breaker_info() const {
  return info_case() == kBrickBreakerInfo;
}
inline void SceneGalleryInfo::set_has_brick_breaker_info() {
  _oneof_case_[0] = kBrickBreakerInfo;
}
inline void SceneGalleryInfo::clear_brick_breaker_info() {
  if (has_brick_breaker_info()) {
    delete info_.brick_breaker_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryBrickBreakerInfo& SceneGalleryInfo::brick_breaker_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.brick_breaker_info)
  return has_brick_breaker_info()
      ? *info_.brick_breaker_info_
      : ::proto::SceneGalleryBrickBreakerInfo::default_instance();
}
inline ::proto::SceneGalleryBrickBreakerInfo* SceneGalleryInfo::mutable_brick_breaker_info() {
  if (!has_brick_breaker_info()) {
    clear_info();
    set_has_brick_breaker_info();
    info_.brick_breaker_info_ = new ::proto::SceneGalleryBrickBreakerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.brick_breaker_info)
  return info_.brick_breaker_info_;
}
inline ::proto::SceneGalleryBrickBreakerInfo* SceneGalleryInfo::release_brick_breaker_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.brick_breaker_info)
  if (has_brick_breaker_info()) {
    clear_has_info();
    ::proto::SceneGalleryBrickBreakerInfo* temp = info_.brick_breaker_info_;
    info_.brick_breaker_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_brick_breaker_info(::proto::SceneGalleryBrickBreakerInfo* brick_breaker_info) {
  clear_info();
  if (brick_breaker_info) {
    set_has_brick_breaker_info();
    info_.brick_breaker_info_ = brick_breaker_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.brick_breaker_info)
}

// .proto.SceneGalleryCoinCollectInfo coin_collect_info = 1574;
inline bool SceneGalleryInfo::has_coin_collect_info() const {
  return info_case() == kCoinCollectInfo;
}
inline void SceneGalleryInfo::set_has_coin_collect_info() {
  _oneof_case_[0] = kCoinCollectInfo;
}
inline void SceneGalleryInfo::clear_coin_collect_info() {
  if (has_coin_collect_info()) {
    delete info_.coin_collect_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryCoinCollectInfo& SceneGalleryInfo::coin_collect_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.coin_collect_info)
  return has_coin_collect_info()
      ? *info_.coin_collect_info_
      : ::proto::SceneGalleryCoinCollectInfo::default_instance();
}
inline ::proto::SceneGalleryCoinCollectInfo* SceneGalleryInfo::mutable_coin_collect_info() {
  if (!has_coin_collect_info()) {
    clear_info();
    set_has_coin_collect_info();
    info_.coin_collect_info_ = new ::proto::SceneGalleryCoinCollectInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.coin_collect_info)
  return info_.coin_collect_info_;
}
inline ::proto::SceneGalleryCoinCollectInfo* SceneGalleryInfo::release_coin_collect_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.coin_collect_info)
  if (has_coin_collect_info()) {
    clear_has_info();
    ::proto::SceneGalleryCoinCollectInfo* temp = info_.coin_collect_info_;
    info_.coin_collect_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_coin_collect_info(::proto::SceneGalleryCoinCollectInfo* coin_collect_info) {
  clear_info();
  if (coin_collect_info) {
    set_has_coin_collect_info();
    info_.coin_collect_info_ = coin_collect_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.coin_collect_info)
}

// .proto.SceneGalleryTeamChainInfo team_chain_info = 1495;
inline bool SceneGalleryInfo::has_team_chain_info() const {
  return info_case() == kTeamChainInfo;
}
inline void SceneGalleryInfo::set_has_team_chain_info() {
  _oneof_case_[0] = kTeamChainInfo;
}
inline void SceneGalleryInfo::clear_team_chain_info() {
  if (has_team_chain_info()) {
    delete info_.team_chain_info_;
    clear_has_info();
  }
}
inline  const ::proto::SceneGalleryTeamChainInfo& SceneGalleryInfo::team_chain_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfo.team_chain_info)
  return has_team_chain_info()
      ? *info_.team_chain_info_
      : ::proto::SceneGalleryTeamChainInfo::default_instance();
}
inline ::proto::SceneGalleryTeamChainInfo* SceneGalleryInfo::mutable_team_chain_info() {
  if (!has_team_chain_info()) {
    clear_info();
    set_has_team_chain_info();
    info_.team_chain_info_ = new ::proto::SceneGalleryTeamChainInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfo.team_chain_info)
  return info_.team_chain_info_;
}
inline ::proto::SceneGalleryTeamChainInfo* SceneGalleryInfo::release_team_chain_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfo.team_chain_info)
  if (has_team_chain_info()) {
    clear_has_info();
    ::proto::SceneGalleryTeamChainInfo* temp = info_.team_chain_info_;
    info_.team_chain_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryInfo::set_allocated_team_chain_info(::proto::SceneGalleryTeamChainInfo* team_chain_info) {
  clear_info();
  if (team_chain_info) {
    set_has_team_chain_info();
    info_.team_chain_info_ = team_chain_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfo.team_chain_info)
}

inline bool SceneGalleryInfo::has_info() const {
  return info_case() != INFO_NOT_SET;
}
inline void SceneGalleryInfo::clear_has_info() {
  _oneof_case_[0] = INFO_NOT_SET;
}
inline SceneGalleryInfo::InfoCase SceneGalleryInfo::info_case() const {
  return SceneGalleryInfo::InfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetAllSceneGalleryInfoReq

// -------------------------------------------------------------------

// GetAllSceneGalleryInfoRsp

// repeated .proto.SceneGalleryInfo gallery_info_list = 12;
inline int GetAllSceneGalleryInfoRsp::gallery_info_list_size() const {
  return gallery_info_list_.size();
}
inline void GetAllSceneGalleryInfoRsp::clear_gallery_info_list() {
  gallery_info_list_.Clear();
}
inline const ::proto::SceneGalleryInfo& GetAllSceneGalleryInfoRsp::gallery_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetAllSceneGalleryInfoRsp.gallery_info_list)
  return gallery_info_list_.Get(index);
}
inline ::proto::SceneGalleryInfo* GetAllSceneGalleryInfoRsp::mutable_gallery_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetAllSceneGalleryInfoRsp.gallery_info_list)
  return gallery_info_list_.Mutable(index);
}
inline ::proto::SceneGalleryInfo* GetAllSceneGalleryInfoRsp::add_gallery_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetAllSceneGalleryInfoRsp.gallery_info_list)
  return gallery_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInfo >*
GetAllSceneGalleryInfoRsp::mutable_gallery_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetAllSceneGalleryInfoRsp.gallery_info_list)
  return &gallery_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneGalleryInfo >&
GetAllSceneGalleryInfoRsp::gallery_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetAllSceneGalleryInfoRsp.gallery_info_list)
  return gallery_info_list_;
}

// int32 retcode = 2;
inline void GetAllSceneGalleryInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetAllSceneGalleryInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetAllSceneGalleryInfoRsp.retcode)
  return retcode_;
}
inline void GetAllSceneGalleryInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetAllSceneGalleryInfoRsp.retcode)
}

// -------------------------------------------------------------------

// GalleryFlowerCatchNotify

// uint32 cur_score = 12;
inline void GalleryFlowerCatchNotify::clear_cur_score() {
  cur_score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFlowerCatchNotify::cur_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFlowerCatchNotify.cur_score)
  return cur_score_;
}
inline void GalleryFlowerCatchNotify::set_cur_score(::google::protobuf::uint32 value) {
  
  cur_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFlowerCatchNotify.cur_score)
}

// uint32 add_score = 14;
inline void GalleryFlowerCatchNotify::clear_add_score() {
  add_score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFlowerCatchNotify::add_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFlowerCatchNotify.add_score)
  return add_score_;
}
inline void GalleryFlowerCatchNotify::set_add_score(::google::protobuf::uint32 value) {
  
  add_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFlowerCatchNotify.add_score)
}

// uint32 gallery_id = 5;
inline void GalleryFlowerCatchNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryFlowerCatchNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryFlowerCatchNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryFlowerCatchNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryFlowerCatchNotify.gallery_id)
}

// -------------------------------------------------------------------

// GalleryPreStartNotify

// uint32 gallery_id = 10;
inline void GalleryPreStartNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryPreStartNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryPreStartNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryPreStartNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryPreStartNotify.gallery_id)
}

// uint32 pre_start_end_time = 9;
inline void GalleryPreStartNotify::clear_pre_start_end_time() {
  pre_start_end_time_ = 0u;
}
inline ::google::protobuf::uint32 GalleryPreStartNotify::pre_start_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GalleryPreStartNotify.pre_start_end_time)
  return pre_start_end_time_;
}
inline void GalleryPreStartNotify::set_pre_start_end_time(::google::protobuf::uint32 value) {
  
  pre_start_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryPreStartNotify.pre_start_end_time)
}

// -------------------------------------------------------------------

// GalleryBulletHitNotify

// uint32 hit_count = 14;
inline void GalleryBulletHitNotify::clear_hit_count() {
  hit_count_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBulletHitNotify::hit_count() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBulletHitNotify.hit_count)
  return hit_count_;
}
inline void GalleryBulletHitNotify::set_hit_count(::google::protobuf::uint32 value) {
  
  hit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBulletHitNotify.hit_count)
}

// uint32 gallery_id = 12;
inline void GalleryBulletHitNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBulletHitNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBulletHitNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryBulletHitNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBulletHitNotify.gallery_id)
}

// -------------------------------------------------------------------

// GalleryBrokenFloorFallNotify

// uint32 fall_count = 3;
inline void GalleryBrokenFloorFallNotify::clear_fall_count() {
  fall_count_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBrokenFloorFallNotify::fall_count() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBrokenFloorFallNotify.fall_count)
  return fall_count_;
}
inline void GalleryBrokenFloorFallNotify::set_fall_count(::google::protobuf::uint32 value) {
  
  fall_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBrokenFloorFallNotify.fall_count)
}

// uint32 gallery_id = 5;
inline void GalleryBrokenFloorFallNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBrokenFloorFallNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBrokenFloorFallNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryBrokenFloorFallNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBrokenFloorFallNotify.gallery_id)
}

// -------------------------------------------------------------------

// InterruptGalleryReq

// uint32 gallery_id = 13;
inline void InterruptGalleryReq::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 InterruptGalleryReq::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.InterruptGalleryReq.gallery_id)
  return gallery_id_;
}
inline void InterruptGalleryReq::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InterruptGalleryReq.gallery_id)
}

// -------------------------------------------------------------------

// InterruptGalleryRsp

// int32 retcode = 12;
inline void InterruptGalleryRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 InterruptGalleryRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.InterruptGalleryRsp.retcode)
  return retcode_;
}
inline void InterruptGalleryRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.InterruptGalleryRsp.retcode)
}

// uint32 gallery_id = 9;
inline void InterruptGalleryRsp::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 InterruptGalleryRsp::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.InterruptGalleryRsp.gallery_id)
  return gallery_id_;
}
inline void InterruptGalleryRsp::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InterruptGalleryRsp.gallery_id)
}

// -------------------------------------------------------------------

// SceneGalleryInfoNotify

// .proto.SceneGalleryInfo gallery_info = 4;
inline bool SceneGalleryInfoNotify::has_gallery_info() const {
  return this != internal_default_instance() && gallery_info_ != NULL;
}
inline void SceneGalleryInfoNotify::clear_gallery_info() {
  if (GetArenaNoVirtual() == NULL && gallery_info_ != NULL) delete gallery_info_;
  gallery_info_ = NULL;
}
inline const ::proto::SceneGalleryInfo& SceneGalleryInfoNotify::gallery_info() const {
  const ::proto::SceneGalleryInfo* p = gallery_info_;
  // @@protoc_insertion_point(field_get:proto.SceneGalleryInfoNotify.gallery_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneGalleryInfo*>(
      &::proto::_SceneGalleryInfo_default_instance_);
}
inline ::proto::SceneGalleryInfo* SceneGalleryInfoNotify::mutable_gallery_info() {
  
  if (gallery_info_ == NULL) {
    gallery_info_ = new ::proto::SceneGalleryInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryInfoNotify.gallery_info)
  return gallery_info_;
}
inline ::proto::SceneGalleryInfo* SceneGalleryInfoNotify::release_gallery_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryInfoNotify.gallery_info)
  
  ::proto::SceneGalleryInfo* temp = gallery_info_;
  gallery_info_ = NULL;
  return temp;
}
inline void SceneGalleryInfoNotify::set_allocated_gallery_info(::proto::SceneGalleryInfo* gallery_info) {
  delete gallery_info_;
  gallery_info_ = gallery_info;
  if (gallery_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryInfoNotify.gallery_info)
}

// -------------------------------------------------------------------

// BuoyantCombatGallerySettleInfo

// uint32 gallery_level = 12;
inline void BuoyantCombatGallerySettleInfo::clear_gallery_level() {
  gallery_level_ = 0u;
}
inline ::google::protobuf::uint32 BuoyantCombatGallerySettleInfo::gallery_level() const {
  // @@protoc_insertion_point(field_get:proto.BuoyantCombatGallerySettleInfo.gallery_level)
  return gallery_level_;
}
inline void BuoyantCombatGallerySettleInfo::set_gallery_level(::google::protobuf::uint32 value) {
  
  gallery_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BuoyantCombatGallerySettleInfo.gallery_level)
}

// uint32 final_score = 15;
inline void BuoyantCombatGallerySettleInfo::clear_final_score() {
  final_score_ = 0u;
}
inline ::google::protobuf::uint32 BuoyantCombatGallerySettleInfo::final_score() const {
  // @@protoc_insertion_point(field_get:proto.BuoyantCombatGallerySettleInfo.final_score)
  return final_score_;
}
inline void BuoyantCombatGallerySettleInfo::set_final_score(::google::protobuf::uint32 value) {
  
  final_score_ = value;
  // @@protoc_insertion_point(field_set:proto.BuoyantCombatGallerySettleInfo.final_score)
}

// uint32 kill_monster_count = 9;
inline void BuoyantCombatGallerySettleInfo::clear_kill_monster_count() {
  kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 BuoyantCombatGallerySettleInfo::kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.BuoyantCombatGallerySettleInfo.kill_monster_count)
  return kill_monster_count_;
}
inline void BuoyantCombatGallerySettleInfo::set_kill_monster_count(::google::protobuf::uint32 value) {
  
  kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BuoyantCombatGallerySettleInfo.kill_monster_count)
}

// uint32 kill_target_count = 1;
inline void BuoyantCombatGallerySettleInfo::clear_kill_target_count() {
  kill_target_count_ = 0u;
}
inline ::google::protobuf::uint32 BuoyantCombatGallerySettleInfo::kill_target_count() const {
  // @@protoc_insertion_point(field_get:proto.BuoyantCombatGallerySettleInfo.kill_target_count)
  return kill_target_count_;
}
inline void BuoyantCombatGallerySettleInfo::set_kill_target_count(::google::protobuf::uint32 value) {
  
  kill_target_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BuoyantCombatGallerySettleInfo.kill_target_count)
}

// uint32 kill_special_monster_count = 4;
inline void BuoyantCombatGallerySettleInfo::clear_kill_special_monster_count() {
  kill_special_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 BuoyantCombatGallerySettleInfo::kill_special_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.BuoyantCombatGallerySettleInfo.kill_special_monster_count)
  return kill_special_monster_count_;
}
inline void BuoyantCombatGallerySettleInfo::set_kill_special_monster_count(::google::protobuf::uint32 value) {
  
  kill_special_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BuoyantCombatGallerySettleInfo.kill_special_monster_count)
}

// uint32 gallery_id = 2;
inline void BuoyantCombatGallerySettleInfo::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 BuoyantCombatGallerySettleInfo::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.BuoyantCombatGallerySettleInfo.gallery_id)
  return gallery_id_;
}
inline void BuoyantCombatGallerySettleInfo::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BuoyantCombatGallerySettleInfo.gallery_id)
}

// uint32 gallery_multiple = 11;
inline void BuoyantCombatGallerySettleInfo::clear_gallery_multiple() {
  gallery_multiple_ = 0u;
}
inline ::google::protobuf::uint32 BuoyantCombatGallerySettleInfo::gallery_multiple() const {
  // @@protoc_insertion_point(field_get:proto.BuoyantCombatGallerySettleInfo.gallery_multiple)
  return gallery_multiple_;
}
inline void BuoyantCombatGallerySettleInfo::set_gallery_multiple(::google::protobuf::uint32 value) {
  
  gallery_multiple_ = value;
  // @@protoc_insertion_point(field_set:proto.BuoyantCombatGallerySettleInfo.gallery_multiple)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BounceConjuringGallerySettleInfo

// .proto.OnlinePlayerInfo player_info = 14;
inline bool BounceConjuringGallerySettleInfo::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void BounceConjuringGallerySettleInfo::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& BounceConjuringGallerySettleInfo::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* BounceConjuringGallerySettleInfo::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.BounceConjuringGallerySettleInfo.player_info)
  return player_info_;
}
inline ::proto::OnlinePlayerInfo* BounceConjuringGallerySettleInfo::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.BounceConjuringGallerySettleInfo.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void BounceConjuringGallerySettleInfo::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BounceConjuringGallerySettleInfo.player_info)
}

// uint32 destroyed_machine_count = 5;
inline void BounceConjuringGallerySettleInfo::clear_destroyed_machine_count() {
  destroyed_machine_count_ = 0u;
}
inline ::google::protobuf::uint32 BounceConjuringGallerySettleInfo::destroyed_machine_count() const {
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.destroyed_machine_count)
  return destroyed_machine_count_;
}
inline void BounceConjuringGallerySettleInfo::set_destroyed_machine_count(::google::protobuf::uint32 value) {
  
  destroyed_machine_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BounceConjuringGallerySettleInfo.destroyed_machine_count)
}

// uint32 fever_count = 6;
inline void BounceConjuringGallerySettleInfo::clear_fever_count() {
  fever_count_ = 0u;
}
inline ::google::protobuf::uint32 BounceConjuringGallerySettleInfo::fever_count() const {
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.fever_count)
  return fever_count_;
}
inline void BounceConjuringGallerySettleInfo::set_fever_count(::google::protobuf::uint32 value) {
  
  fever_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BounceConjuringGallerySettleInfo.fever_count)
}

// uint32 normal_hit_count = 4;
inline void BounceConjuringGallerySettleInfo::clear_normal_hit_count() {
  normal_hit_count_ = 0u;
}
inline ::google::protobuf::uint32 BounceConjuringGallerySettleInfo::normal_hit_count() const {
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.normal_hit_count)
  return normal_hit_count_;
}
inline void BounceConjuringGallerySettleInfo::set_normal_hit_count(::google::protobuf::uint32 value) {
  
  normal_hit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BounceConjuringGallerySettleInfo.normal_hit_count)
}

// float damage = 11;
inline void BounceConjuringGallerySettleInfo::clear_damage() {
  damage_ = 0;
}
inline float BounceConjuringGallerySettleInfo::damage() const {
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.damage)
  return damage_;
}
inline void BounceConjuringGallerySettleInfo::set_damage(float value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.BounceConjuringGallerySettleInfo.damage)
}

// map<uint32, uint32> gadget_count_map = 15;
inline int BounceConjuringGallerySettleInfo::gadget_count_map_size() const {
  return gadget_count_map_.size();
}
inline void BounceConjuringGallerySettleInfo::clear_gadget_count_map() {
  gadget_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
BounceConjuringGallerySettleInfo::gadget_count_map() const {
  // @@protoc_insertion_point(field_map:proto.BounceConjuringGallerySettleInfo.gadget_count_map)
  return gadget_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
BounceConjuringGallerySettleInfo::mutable_gadget_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BounceConjuringGallerySettleInfo.gadget_count_map)
  return gadget_count_map_.MutableMap();
}

// uint32 score = 12;
inline void BounceConjuringGallerySettleInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 BounceConjuringGallerySettleInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.score)
  return score_;
}
inline void BounceConjuringGallerySettleInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.BounceConjuringGallerySettleInfo.score)
}

// uint32 perfect_hit_count = 8;
inline void BounceConjuringGallerySettleInfo::clear_perfect_hit_count() {
  perfect_hit_count_ = 0u;
}
inline ::google::protobuf::uint32 BounceConjuringGallerySettleInfo::perfect_hit_count() const {
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.perfect_hit_count)
  return perfect_hit_count_;
}
inline void BounceConjuringGallerySettleInfo::set_perfect_hit_count(::google::protobuf::uint32 value) {
  
  perfect_hit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BounceConjuringGallerySettleInfo.perfect_hit_count)
}

// repeated .proto.ExhibitionDisplayInfo card_list = 7;
inline int BounceConjuringGallerySettleInfo::card_list_size() const {
  return card_list_.size();
}
inline void BounceConjuringGallerySettleInfo::clear_card_list() {
  card_list_.Clear();
}
inline const ::proto::ExhibitionDisplayInfo& BounceConjuringGallerySettleInfo::card_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BounceConjuringGallerySettleInfo.card_list)
  return card_list_.Get(index);
}
inline ::proto::ExhibitionDisplayInfo* BounceConjuringGallerySettleInfo::mutable_card_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BounceConjuringGallerySettleInfo.card_list)
  return card_list_.Mutable(index);
}
inline ::proto::ExhibitionDisplayInfo* BounceConjuringGallerySettleInfo::add_card_list() {
  // @@protoc_insertion_point(field_add:proto.BounceConjuringGallerySettleInfo.card_list)
  return card_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
BounceConjuringGallerySettleInfo::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BounceConjuringGallerySettleInfo.card_list)
  return &card_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
BounceConjuringGallerySettleInfo::card_list() const {
  // @@protoc_insertion_point(field_list:proto.BounceConjuringGallerySettleInfo.card_list)
  return card_list_;
}

// -------------------------------------------------------------------

// GalleryBounceConjuringHitNotify

// uint32 add_score = 8;
inline void GalleryBounceConjuringHitNotify::clear_add_score() {
  add_score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBounceConjuringHitNotify::add_score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBounceConjuringHitNotify.add_score)
  return add_score_;
}
inline void GalleryBounceConjuringHitNotify::set_add_score(::google::protobuf::uint32 value) {
  
  add_score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBounceConjuringHitNotify.add_score)
}

// bool is_perfect = 5;
inline void GalleryBounceConjuringHitNotify::clear_is_perfect() {
  is_perfect_ = false;
}
inline bool GalleryBounceConjuringHitNotify::is_perfect() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBounceConjuringHitNotify.is_perfect)
  return is_perfect_;
}
inline void GalleryBounceConjuringHitNotify::set_is_perfect(bool value) {
  
  is_perfect_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBounceConjuringHitNotify.is_perfect)
}

// uint32 gallery_id = 10;
inline void GalleryBounceConjuringHitNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryBounceConjuringHitNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryBounceConjuringHitNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryBounceConjuringHitNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryBounceConjuringHitNotify.gallery_id)
}

// -------------------------------------------------------------------

// GallerySumoKillMonsterNotify

// uint32 kill_normal_mosnter_num = 4;
inline void GallerySumoKillMonsterNotify::clear_kill_normal_mosnter_num() {
  kill_normal_mosnter_num_ = 0u;
}
inline ::google::protobuf::uint32 GallerySumoKillMonsterNotify::kill_normal_mosnter_num() const {
  // @@protoc_insertion_point(field_get:proto.GallerySumoKillMonsterNotify.kill_normal_mosnter_num)
  return kill_normal_mosnter_num_;
}
inline void GallerySumoKillMonsterNotify::set_kill_normal_mosnter_num(::google::protobuf::uint32 value) {
  
  kill_normal_mosnter_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GallerySumoKillMonsterNotify.kill_normal_mosnter_num)
}

// uint32 score = 7;
inline void GallerySumoKillMonsterNotify::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 GallerySumoKillMonsterNotify::score() const {
  // @@protoc_insertion_point(field_get:proto.GallerySumoKillMonsterNotify.score)
  return score_;
}
inline void GallerySumoKillMonsterNotify::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.GallerySumoKillMonsterNotify.score)
}

// uint32 kill_elite_monster_num = 14;
inline void GallerySumoKillMonsterNotify::clear_kill_elite_monster_num() {
  kill_elite_monster_num_ = 0u;
}
inline ::google::protobuf::uint32 GallerySumoKillMonsterNotify::kill_elite_monster_num() const {
  // @@protoc_insertion_point(field_get:proto.GallerySumoKillMonsterNotify.kill_elite_monster_num)
  return kill_elite_monster_num_;
}
inline void GallerySumoKillMonsterNotify::set_kill_elite_monster_num(::google::protobuf::uint32 value) {
  
  kill_elite_monster_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GallerySumoKillMonsterNotify.kill_elite_monster_num)
}

// uint32 gallery_id = 11;
inline void GallerySumoKillMonsterNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GallerySumoKillMonsterNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GallerySumoKillMonsterNotify.gallery_id)
  return gallery_id_;
}
inline void GallerySumoKillMonsterNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GallerySumoKillMonsterNotify.gallery_id)
}

// -------------------------------------------------------------------

// GalleryCrystalLinkKillMonsterNotify

// uint32 score = 7;
inline void GalleryCrystalLinkKillMonsterNotify::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 GalleryCrystalLinkKillMonsterNotify::score() const {
  // @@protoc_insertion_point(field_get:proto.GalleryCrystalLinkKillMonsterNotify.score)
  return score_;
}
inline void GalleryCrystalLinkKillMonsterNotify::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryCrystalLinkKillMonsterNotify.score)
}

// uint32 gallery_id = 9;
inline void GalleryCrystalLinkKillMonsterNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryCrystalLinkKillMonsterNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryCrystalLinkKillMonsterNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryCrystalLinkKillMonsterNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryCrystalLinkKillMonsterNotify.gallery_id)
}

// -------------------------------------------------------------------

// GalleryCrystalLinkBuffInfoNotify

// uint32 gallery_id = 13;
inline void GalleryCrystalLinkBuffInfoNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryCrystalLinkBuffInfoNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryCrystalLinkBuffInfoNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryCrystalLinkBuffInfoNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryCrystalLinkBuffInfoNotify.gallery_id)
}

// bool is_buff_valid = 11;
inline void GalleryCrystalLinkBuffInfoNotify::clear_is_buff_valid() {
  is_buff_valid_ = false;
}
inline bool GalleryCrystalLinkBuffInfoNotify::is_buff_valid() const {
  // @@protoc_insertion_point(field_get:proto.GalleryCrystalLinkBuffInfoNotify.is_buff_valid)
  return is_buff_valid_;
}
inline void GalleryCrystalLinkBuffInfoNotify::set_is_buff_valid(bool value) {
  
  is_buff_valid_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryCrystalLinkBuffInfoNotify.is_buff_valid)
}

// uint32 buff_id = 14;
inline void GalleryCrystalLinkBuffInfoNotify::clear_buff_id() {
  buff_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryCrystalLinkBuffInfoNotify::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryCrystalLinkBuffInfoNotify.buff_id)
  return buff_id_;
}
inline void GalleryCrystalLinkBuffInfoNotify::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryCrystalLinkBuffInfoNotify.buff_id)
}

// -------------------------------------------------------------------

// FishInfo

// uint32 free_count = 11;
inline void FishInfo::clear_free_count() {
  free_count_ = 0u;
}
inline ::google::protobuf::uint32 FishInfo::free_count() const {
  // @@protoc_insertion_point(field_get:proto.FishInfo.free_count)
  return free_count_;
}
inline void FishInfo::set_free_count(::google::protobuf::uint32 value) {
  
  free_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FishInfo.free_count)
}

// uint32 into_bag_count = 12;
inline void FishInfo::clear_into_bag_count() {
  into_bag_count_ = 0u;
}
inline ::google::protobuf::uint32 FishInfo::into_bag_count() const {
  // @@protoc_insertion_point(field_get:proto.FishInfo.into_bag_count)
  return into_bag_count_;
}
inline void FishInfo::set_into_bag_count(::google::protobuf::uint32 value) {
  
  into_bag_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FishInfo.into_bag_count)
}

// -------------------------------------------------------------------

// FishingScore

// uint32 fishing_score = 2;
inline void FishingScore::clear_fishing_score() {
  fishing_score_ = 0u;
}
inline ::google::protobuf::uint32 FishingScore::fishing_score() const {
  // @@protoc_insertion_point(field_get:proto.FishingScore.fishing_score)
  return fishing_score_;
}
inline void FishingScore::set_fishing_score(::google::protobuf::uint32 value) {
  
  fishing_score_ = value;
  // @@protoc_insertion_point(field_set:proto.FishingScore.fishing_score)
}

// bool is_new_record = 4;
inline void FishingScore::clear_is_new_record() {
  is_new_record_ = false;
}
inline bool FishingScore::is_new_record() const {
  // @@protoc_insertion_point(field_get:proto.FishingScore.is_new_record)
  return is_new_record_;
}
inline void FishingScore::set_is_new_record(bool value) {
  
  is_new_record_ = value;
  // @@protoc_insertion_point(field_set:proto.FishingScore.is_new_record)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FishingGallerySettleInfo

// map<uint32, .proto.FishInfo> fish_map = 11;
inline int FishingGallerySettleInfo::fish_map_size() const {
  return fish_map_.size();
}
inline void FishingGallerySettleInfo::clear_fish_map() {
  fish_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FishInfo >&
FishingGallerySettleInfo::fish_map() const {
  // @@protoc_insertion_point(field_map:proto.FishingGallerySettleInfo.fish_map)
  return fish_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::FishInfo >*
FishingGallerySettleInfo::mutable_fish_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.FishingGallerySettleInfo.fish_map)
  return fish_map_.MutableMap();
}

// repeated .proto.FishingScore fishing_score_list = 15;
inline int FishingGallerySettleInfo::fishing_score_list_size() const {
  return fishing_score_list_.size();
}
inline void FishingGallerySettleInfo::clear_fishing_score_list() {
  fishing_score_list_.Clear();
}
inline const ::proto::FishingScore& FishingGallerySettleInfo::fishing_score_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FishingGallerySettleInfo.fishing_score_list)
  return fishing_score_list_.Get(index);
}
inline ::proto::FishingScore* FishingGallerySettleInfo::mutable_fishing_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FishingGallerySettleInfo.fishing_score_list)
  return fishing_score_list_.Mutable(index);
}
inline ::proto::FishingScore* FishingGallerySettleInfo::add_fishing_score_list() {
  // @@protoc_insertion_point(field_add:proto.FishingGallerySettleInfo.fishing_score_list)
  return fishing_score_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FishingScore >*
FishingGallerySettleInfo::mutable_fishing_score_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FishingGallerySettleInfo.fishing_score_list)
  return &fishing_score_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FishingScore >&
FishingGallerySettleInfo::fishing_score_list() const {
  // @@protoc_insertion_point(field_list:proto.FishingGallerySettleInfo.fishing_score_list)
  return fishing_score_list_;
}

// -------------------------------------------------------------------

// RacingGallerySettleInfo

// uint32 winner_uid = 6;
inline void RacingGallerySettleInfo::clear_winner_uid() {
  winner_uid_ = 0u;
}
inline ::google::protobuf::uint32 RacingGallerySettleInfo::winner_uid() const {
  // @@protoc_insertion_point(field_get:proto.RacingGallerySettleInfo.winner_uid)
  return winner_uid_;
}
inline void RacingGallerySettleInfo::set_winner_uid(::google::protobuf::uint32 value) {
  
  winner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.RacingGallerySettleInfo.winner_uid)
}

// .proto.GalleryStopReason reason = 4;
inline void RacingGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::GalleryStopReason RacingGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.RacingGallerySettleInfo.reason)
  return static_cast< ::proto::GalleryStopReason >(reason_);
}
inline void RacingGallerySettleInfo::set_reason(::proto::GalleryStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.RacingGallerySettleInfo.reason)
}

// uint32 use_time = 1;
inline void RacingGallerySettleInfo::clear_use_time() {
  use_time_ = 0u;
}
inline ::google::protobuf::uint32 RacingGallerySettleInfo::use_time() const {
  // @@protoc_insertion_point(field_get:proto.RacingGallerySettleInfo.use_time)
  return use_time_;
}
inline void RacingGallerySettleInfo::set_use_time(::google::protobuf::uint32 value) {
  
  use_time_ = value;
  // @@protoc_insertion_point(field_set:proto.RacingGallerySettleInfo.use_time)
}

// -------------------------------------------------------------------

// SalvagePreventGallerySettleInfo

// uint32 time_remain = 8;
inline void SalvagePreventGallerySettleInfo::clear_time_remain() {
  time_remain_ = 0u;
}
inline ::google::protobuf::uint32 SalvagePreventGallerySettleInfo::time_remain() const {
  // @@protoc_insertion_point(field_get:proto.SalvagePreventGallerySettleInfo.time_remain)
  return time_remain_;
}
inline void SalvagePreventGallerySettleInfo::set_time_remain(::google::protobuf::uint32 value) {
  
  time_remain_ = value;
  // @@protoc_insertion_point(field_set:proto.SalvagePreventGallerySettleInfo.time_remain)
}

// .proto.SalvagePreventStopReason reason = 7;
inline void SalvagePreventGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::SalvagePreventStopReason SalvagePreventGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.SalvagePreventGallerySettleInfo.reason)
  return static_cast< ::proto::SalvagePreventStopReason >(reason_);
}
inline void SalvagePreventGallerySettleInfo::set_reason(::proto::SalvagePreventStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SalvagePreventGallerySettleInfo.reason)
}

// uint32 final_score = 13;
inline void SalvagePreventGallerySettleInfo::clear_final_score() {
  final_score_ = 0u;
}
inline ::google::protobuf::uint32 SalvagePreventGallerySettleInfo::final_score() const {
  // @@protoc_insertion_point(field_get:proto.SalvagePreventGallerySettleInfo.final_score)
  return final_score_;
}
inline void SalvagePreventGallerySettleInfo::set_final_score(::google::protobuf::uint32 value) {
  
  final_score_ = value;
  // @@protoc_insertion_point(field_set:proto.SalvagePreventGallerySettleInfo.final_score)
}

// uint32 monster_count = 15;
inline void SalvagePreventGallerySettleInfo::clear_monster_count() {
  monster_count_ = 0u;
}
inline ::google::protobuf::uint32 SalvagePreventGallerySettleInfo::monster_count() const {
  // @@protoc_insertion_point(field_get:proto.SalvagePreventGallerySettleInfo.monster_count)
  return monster_count_;
}
inline void SalvagePreventGallerySettleInfo::set_monster_count(::google::protobuf::uint32 value) {
  
  monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SalvagePreventGallerySettleInfo.monster_count)
}

// -------------------------------------------------------------------

// SalvageEscortGallerySettleInfo

// uint32 time_remain = 14;
inline void SalvageEscortGallerySettleInfo::clear_time_remain() {
  time_remain_ = 0u;
}
inline ::google::protobuf::uint32 SalvageEscortGallerySettleInfo::time_remain() const {
  // @@protoc_insertion_point(field_get:proto.SalvageEscortGallerySettleInfo.time_remain)
  return time_remain_;
}
inline void SalvageEscortGallerySettleInfo::set_time_remain(::google::protobuf::uint32 value) {
  
  time_remain_ = value;
  // @@protoc_insertion_point(field_set:proto.SalvageEscortGallerySettleInfo.time_remain)
}

// .proto.SalvageEscortStopReason reason = 7;
inline void SalvageEscortGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::SalvageEscortStopReason SalvageEscortGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.SalvageEscortGallerySettleInfo.reason)
  return static_cast< ::proto::SalvageEscortStopReason >(reason_);
}
inline void SalvageEscortGallerySettleInfo::set_reason(::proto::SalvageEscortStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SalvageEscortGallerySettleInfo.reason)
}

// -------------------------------------------------------------------

// BalloonGallerySettleInfo

// uint32 score = 8;
inline void BalloonGallerySettleInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 BalloonGallerySettleInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.BalloonGallerySettleInfo.score)
  return score_;
}
inline void BalloonGallerySettleInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonGallerySettleInfo.score)
}

// .proto.GalleryStopReason reason = 14;
inline void BalloonGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::GalleryStopReason BalloonGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.BalloonGallerySettleInfo.reason)
  return static_cast< ::proto::GalleryStopReason >(reason_);
}
inline void BalloonGallerySettleInfo::set_reason(::proto::GalleryStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonGallerySettleInfo.reason)
}

// uint32 hit_count = 10;
inline void BalloonGallerySettleInfo::clear_hit_count() {
  hit_count_ = 0u;
}
inline ::google::protobuf::uint32 BalloonGallerySettleInfo::hit_count() const {
  // @@protoc_insertion_point(field_get:proto.BalloonGallerySettleInfo.hit_count)
  return hit_count_;
}
inline void BalloonGallerySettleInfo::set_hit_count(::google::protobuf::uint32 value) {
  
  hit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonGallerySettleInfo.hit_count)
}

// uint32 owner_uid = 6;
inline void BalloonGallerySettleInfo::clear_owner_uid() {
  owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 BalloonGallerySettleInfo::owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.BalloonGallerySettleInfo.owner_uid)
  return owner_uid_;
}
inline void BalloonGallerySettleInfo::set_owner_uid(::google::protobuf::uint32 value) {
  
  owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BalloonGallerySettleInfo.owner_uid)
}

// -------------------------------------------------------------------

// IrodoriMasterGallerySettleInfo

// .proto.GalleryStopReason reason = 15;
inline void IrodoriMasterGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::GalleryStopReason IrodoriMasterGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.IrodoriMasterGallerySettleInfo.reason)
  return static_cast< ::proto::GalleryStopReason >(reason_);
}
inline void IrodoriMasterGallerySettleInfo::set_reason(::proto::GalleryStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.IrodoriMasterGallerySettleInfo.reason)
}

// bool is_finish = 11;
inline void IrodoriMasterGallerySettleInfo::clear_is_finish() {
  is_finish_ = false;
}
inline bool IrodoriMasterGallerySettleInfo::is_finish() const {
  // @@protoc_insertion_point(field_get:proto.IrodoriMasterGallerySettleInfo.is_finish)
  return is_finish_;
}
inline void IrodoriMasterGallerySettleInfo::set_is_finish(bool value) {
  
  is_finish_ = value;
  // @@protoc_insertion_point(field_set:proto.IrodoriMasterGallerySettleInfo.is_finish)
}

// uint32 finish_time = 14;
inline void IrodoriMasterGallerySettleInfo::clear_finish_time() {
  finish_time_ = 0u;
}
inline ::google::protobuf::uint32 IrodoriMasterGallerySettleInfo::finish_time() const {
  // @@protoc_insertion_point(field_get:proto.IrodoriMasterGallerySettleInfo.finish_time)
  return finish_time_;
}
inline void IrodoriMasterGallerySettleInfo::set_finish_time(::google::protobuf::uint32 value) {
  
  finish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.IrodoriMasterGallerySettleInfo.finish_time)
}

// uint32 difficult = 6;
inline void IrodoriMasterGallerySettleInfo::clear_difficult() {
  difficult_ = 0u;
}
inline ::google::protobuf::uint32 IrodoriMasterGallerySettleInfo::difficult() const {
  // @@protoc_insertion_point(field_get:proto.IrodoriMasterGallerySettleInfo.difficult)
  return difficult_;
}
inline void IrodoriMasterGallerySettleInfo::set_difficult(::google::protobuf::uint32 value) {
  
  difficult_ = value;
  // @@protoc_insertion_point(field_set:proto.IrodoriMasterGallerySettleInfo.difficult)
}

// uint32 level_id = 4;
inline void IrodoriMasterGallerySettleInfo::clear_level_id() {
  level_id_ = 0u;
}
inline ::google::protobuf::uint32 IrodoriMasterGallerySettleInfo::level_id() const {
  // @@protoc_insertion_point(field_get:proto.IrodoriMasterGallerySettleInfo.level_id)
  return level_id_;
}
inline void IrodoriMasterGallerySettleInfo::set_level_id(::google::protobuf::uint32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:proto.IrodoriMasterGallerySettleInfo.level_id)
}

// -------------------------------------------------------------------

// PhotoGallerySettleInfo

// .proto.GalleryStopReason reason = 7;
inline void PhotoGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::GalleryStopReason PhotoGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.PhotoGallerySettleInfo.reason)
  return static_cast< ::proto::GalleryStopReason >(reason_);
}
inline void PhotoGallerySettleInfo::set_reason(::proto::GalleryStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PhotoGallerySettleInfo.reason)
}

// -------------------------------------------------------------------

// LuminanceStoneChallengeGallerySettleInfo

// uint32 kill_monster_count = 12;
inline void LuminanceStoneChallengeGallerySettleInfo::clear_kill_monster_count() {
  kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 LuminanceStoneChallengeGallerySettleInfo::kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.LuminanceStoneChallengeGallerySettleInfo.kill_monster_count)
  return kill_monster_count_;
}
inline void LuminanceStoneChallengeGallerySettleInfo::set_kill_monster_count(::google::protobuf::uint32 value) {
  
  kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.LuminanceStoneChallengeGallerySettleInfo.kill_monster_count)
}

// uint32 kill_special_monster_count = 8;
inline void LuminanceStoneChallengeGallerySettleInfo::clear_kill_special_monster_count() {
  kill_special_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 LuminanceStoneChallengeGallerySettleInfo::kill_special_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.LuminanceStoneChallengeGallerySettleInfo.kill_special_monster_count)
  return kill_special_monster_count_;
}
inline void LuminanceStoneChallengeGallerySettleInfo::set_kill_special_monster_count(::google::protobuf::uint32 value) {
  
  kill_special_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.LuminanceStoneChallengeGallerySettleInfo.kill_special_monster_count)
}

// uint32 clean_mud_count = 10;
inline void LuminanceStoneChallengeGallerySettleInfo::clear_clean_mud_count() {
  clean_mud_count_ = 0u;
}
inline ::google::protobuf::uint32 LuminanceStoneChallengeGallerySettleInfo::clean_mud_count() const {
  // @@protoc_insertion_point(field_get:proto.LuminanceStoneChallengeGallerySettleInfo.clean_mud_count)
  return clean_mud_count_;
}
inline void LuminanceStoneChallengeGallerySettleInfo::set_clean_mud_count(::google::protobuf::uint32 value) {
  
  clean_mud_count_ = value;
  // @@protoc_insertion_point(field_set:proto.LuminanceStoneChallengeGallerySettleInfo.clean_mud_count)
}

// uint32 gallery_id = 2;
inline void LuminanceStoneChallengeGallerySettleInfo::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 LuminanceStoneChallengeGallerySettleInfo::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.LuminanceStoneChallengeGallerySettleInfo.gallery_id)
  return gallery_id_;
}
inline void LuminanceStoneChallengeGallerySettleInfo::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LuminanceStoneChallengeGallerySettleInfo.gallery_id)
}

// .proto.GalleryStopReason reason = 11;
inline void LuminanceStoneChallengeGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::GalleryStopReason LuminanceStoneChallengeGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.LuminanceStoneChallengeGallerySettleInfo.reason)
  return static_cast< ::proto::GalleryStopReason >(reason_);
}
inline void LuminanceStoneChallengeGallerySettleInfo::set_reason(::proto::GalleryStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.LuminanceStoneChallengeGallerySettleInfo.reason)
}

// uint32 final_score = 13;
inline void LuminanceStoneChallengeGallerySettleInfo::clear_final_score() {
  final_score_ = 0u;
}
inline ::google::protobuf::uint32 LuminanceStoneChallengeGallerySettleInfo::final_score() const {
  // @@protoc_insertion_point(field_get:proto.LuminanceStoneChallengeGallerySettleInfo.final_score)
  return final_score_;
}
inline void LuminanceStoneChallengeGallerySettleInfo::set_final_score(::google::protobuf::uint32 value) {
  
  final_score_ = value;
  // @@protoc_insertion_point(field_set:proto.LuminanceStoneChallengeGallerySettleInfo.final_score)
}

// -------------------------------------------------------------------

// HomeGalleryInPlayingNotify

// uint32 gallery_id = 13;
inline void HomeGalleryInPlayingNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeGalleryInPlayingNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeGalleryInPlayingNotify.gallery_id)
  return gallery_id_;
}
inline void HomeGalleryInPlayingNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeGalleryInPlayingNotify.gallery_id)
}

// -------------------------------------------------------------------

// SummerTimeV2BoatGallerySettleInfo

// uint32 param1 = 7;
inline void SummerTimeV2BoatGallerySettleInfo::clear_param1() {
  param1_ = 0u;
}
inline ::google::protobuf::uint32 SummerTimeV2BoatGallerySettleInfo::param1() const {
  // @@protoc_insertion_point(field_get:proto.SummerTimeV2BoatGallerySettleInfo.param1)
  return param1_;
}
inline void SummerTimeV2BoatGallerySettleInfo::set_param1(::google::protobuf::uint32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.SummerTimeV2BoatGallerySettleInfo.param1)
}

// uint32 param2 = 2;
inline void SummerTimeV2BoatGallerySettleInfo::clear_param2() {
  param2_ = 0u;
}
inline ::google::protobuf::uint32 SummerTimeV2BoatGallerySettleInfo::param2() const {
  // @@protoc_insertion_point(field_get:proto.SummerTimeV2BoatGallerySettleInfo.param2)
  return param2_;
}
inline void SummerTimeV2BoatGallerySettleInfo::set_param2(::google::protobuf::uint32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.SummerTimeV2BoatGallerySettleInfo.param2)
}

// .proto.GalleryStopReason reason = 3;
inline void SummerTimeV2BoatGallerySettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::GalleryStopReason SummerTimeV2BoatGallerySettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.SummerTimeV2BoatGallerySettleInfo.reason)
  return static_cast< ::proto::GalleryStopReason >(reason_);
}
inline void SummerTimeV2BoatGallerySettleInfo::set_reason(::proto::GalleryStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SummerTimeV2BoatGallerySettleInfo.reason)
}

// uint32 param3 = 6;
inline void SummerTimeV2BoatGallerySettleInfo::clear_param3() {
  param3_ = 0u;
}
inline ::google::protobuf::uint32 SummerTimeV2BoatGallerySettleInfo::param3() const {
  // @@protoc_insertion_point(field_get:proto.SummerTimeV2BoatGallerySettleInfo.param3)
  return param3_;
}
inline void SummerTimeV2BoatGallerySettleInfo::set_param3(::google::protobuf::uint32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.SummerTimeV2BoatGallerySettleInfo.param3)
}

// uint32 used_time = 12;
inline void SummerTimeV2BoatGallerySettleInfo::clear_used_time() {
  used_time_ = 0u;
}
inline ::google::protobuf::uint32 SummerTimeV2BoatGallerySettleInfo::used_time() const {
  // @@protoc_insertion_point(field_get:proto.SummerTimeV2BoatGallerySettleInfo.used_time)
  return used_time_;
}
inline void SummerTimeV2BoatGallerySettleInfo::set_used_time(::google::protobuf::uint32 value) {
  
  used_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SummerTimeV2BoatGallerySettleInfo.used_time)
}

// uint32 gallery_id = 1;
inline void SummerTimeV2BoatGallerySettleInfo::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 SummerTimeV2BoatGallerySettleInfo::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.SummerTimeV2BoatGallerySettleInfo.gallery_id)
  return gallery_id_;
}
inline void SummerTimeV2BoatGallerySettleInfo::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SummerTimeV2BoatGallerySettleInfo.gallery_id)
}

// -------------------------------------------------------------------

// GalleryIslandPartyDownHillInfoNotify

// uint32 gallery_id = 2;
inline void GalleryIslandPartyDownHillInfoNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryIslandPartyDownHillInfoNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryIslandPartyDownHillInfoNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryIslandPartyDownHillInfoNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryIslandPartyDownHillInfoNotify.gallery_id)
}

// uint32 coin = 9;
inline void GalleryIslandPartyDownHillInfoNotify::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 GalleryIslandPartyDownHillInfoNotify::coin() const {
  // @@protoc_insertion_point(field_get:proto.GalleryIslandPartyDownHillInfoNotify.coin)
  return coin_;
}
inline void GalleryIslandPartyDownHillInfoNotify::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryIslandPartyDownHillInfoNotify.coin)
}

// uint32 total_kill_monster_count = 11;
inline void GalleryIslandPartyDownHillInfoNotify::clear_total_kill_monster_count() {
  total_kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 GalleryIslandPartyDownHillInfoNotify::total_kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.GalleryIslandPartyDownHillInfoNotify.total_kill_monster_count)
  return total_kill_monster_count_;
}
inline void GalleryIslandPartyDownHillInfoNotify::set_total_kill_monster_count(::google::protobuf::uint32 value) {
  
  total_kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryIslandPartyDownHillInfoNotify.total_kill_monster_count)
}

// -------------------------------------------------------------------

// IslandPartyRaftInfoNotify

// uint32 point_id = 7;
inline void IslandPartyRaftInfoNotify::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 IslandPartyRaftInfoNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartyRaftInfoNotify.point_id)
  return point_id_;
}
inline void IslandPartyRaftInfoNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartyRaftInfoNotify.point_id)
}

// uint32 coin = 15;
inline void IslandPartyRaftInfoNotify::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 IslandPartyRaftInfoNotify::coin() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartyRaftInfoNotify.coin)
  return coin_;
}
inline void IslandPartyRaftInfoNotify::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartyRaftInfoNotify.coin)
}

// uint32 fuel = 3;
inline void IslandPartyRaftInfoNotify::clear_fuel() {
  fuel_ = 0u;
}
inline ::google::protobuf::uint32 IslandPartyRaftInfoNotify::fuel() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartyRaftInfoNotify.fuel)
  return fuel_;
}
inline void IslandPartyRaftInfoNotify::set_fuel(::google::protobuf::uint32 value) {
  
  fuel_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartyRaftInfoNotify.fuel)
}

// uint32 component = 13;
inline void IslandPartyRaftInfoNotify::clear_component() {
  component_ = 0u;
}
inline ::google::protobuf::uint32 IslandPartyRaftInfoNotify::component() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartyRaftInfoNotify.component)
  return component_;
}
inline void IslandPartyRaftInfoNotify::set_component(::google::protobuf::uint32 value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartyRaftInfoNotify.component)
}

// -------------------------------------------------------------------

// IslandPartySailInfoNotify

// uint32 coin = 10;
inline void IslandPartySailInfoNotify::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 IslandPartySailInfoNotify::coin() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartySailInfoNotify.coin)
  return coin_;
}
inline void IslandPartySailInfoNotify::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartySailInfoNotify.coin)
}

// .proto.IslandPartySailStage stage = 8;
inline void IslandPartySailInfoNotify::clear_stage() {
  stage_ = 0;
}
inline ::proto::IslandPartySailStage IslandPartySailInfoNotify::stage() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartySailInfoNotify.stage)
  return static_cast< ::proto::IslandPartySailStage >(stage_);
}
inline void IslandPartySailInfoNotify::set_stage(::proto::IslandPartySailStage value) {
  
  stage_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartySailInfoNotify.stage)
}

// uint32 kill_monster_count = 4;
inline void IslandPartySailInfoNotify::clear_kill_monster_count() {
  kill_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 IslandPartySailInfoNotify::kill_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartySailInfoNotify.kill_monster_count)
  return kill_monster_count_;
}
inline void IslandPartySailInfoNotify::set_kill_monster_count(::google::protobuf::uint32 value) {
  
  kill_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartySailInfoNotify.kill_monster_count)
}

// uint32 progress = 15;
inline void IslandPartySailInfoNotify::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 IslandPartySailInfoNotify::progress() const {
  // @@protoc_insertion_point(field_get:proto.IslandPartySailInfoNotify.progress)
  return progress_;
}
inline void IslandPartySailInfoNotify::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.IslandPartySailInfoNotify.progress)
}

// -------------------------------------------------------------------

// IslandPartyGallerySettleInfo

// .proto.OnlinePlayerInfo player_info = 13;
inline bool IslandPartyGallerySettleInfo::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void IslandPartyGallerySettleInfo::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& IslandPartyGallerySettleInfo::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.IslandPartyGallerySettleInfo.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* IslandPartyGallerySettleInfo::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.IslandPartyGallerySettleInfo.player_info)
  return player_info_;
}
inline ::proto::OnlinePlayerInfo* IslandPartyGallerySettleInfo::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.IslandPartyGallerySettleInfo.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void IslandPartyGallerySettleInfo::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.IslandPartyGallerySettleInfo.player_info)
}

// repeated .proto.ExhibitionDisplayInfo card_list = 11;
inline int IslandPartyGallerySettleInfo::card_list_size() const {
  return card_list_.size();
}
inline void IslandPartyGallerySettleInfo::clear_card_list() {
  card_list_.Clear();
}
inline const ::proto::ExhibitionDisplayInfo& IslandPartyGallerySettleInfo::card_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.IslandPartyGallerySettleInfo.card_list)
  return card_list_.Get(index);
}
inline ::proto::ExhibitionDisplayInfo* IslandPartyGallerySettleInfo::mutable_card_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.IslandPartyGallerySettleInfo.card_list)
  return card_list_.Mutable(index);
}
inline ::proto::ExhibitionDisplayInfo* IslandPartyGallerySettleInfo::add_card_list() {
  // @@protoc_insertion_point(field_add:proto.IslandPartyGallerySettleInfo.card_list)
  return card_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >*
IslandPartyGallerySettleInfo::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.IslandPartyGallerySettleInfo.card_list)
  return &card_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ExhibitionDisplayInfo >&
IslandPartyGallerySettleInfo::card_list() const {
  // @@protoc_insertion_point(field_list:proto.IslandPartyGallerySettleInfo.card_list)
  return card_list_;
}

// -------------------------------------------------------------------

// BackRebornGalleryReq

// uint32 gallery_id = 15;
inline void BackRebornGalleryReq::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 BackRebornGalleryReq::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.BackRebornGalleryReq.gallery_id)
  return gallery_id_;
}
inline void BackRebornGalleryReq::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BackRebornGalleryReq.gallery_id)
}

// -------------------------------------------------------------------

// BackRebornGalleryRsp

// uint32 gallery_id = 9;
inline void BackRebornGalleryRsp::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 BackRebornGalleryRsp::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.BackRebornGalleryRsp.gallery_id)
  return gallery_id_;
}
inline void BackRebornGalleryRsp::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BackRebornGalleryRsp.gallery_id)
}

// int32 retcode = 5;
inline void BackRebornGalleryRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 BackRebornGalleryRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BackRebornGalleryRsp.retcode)
  return retcode_;
}
inline void BackRebornGalleryRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BackRebornGalleryRsp.retcode)
}

// -------------------------------------------------------------------

// GalleryWillStartCountdownNotify

// .proto.GalleryStartSource start_source = 11;
inline void GalleryWillStartCountdownNotify::clear_start_source() {
  start_source_ = 0;
}
inline ::proto::GalleryStartSource GalleryWillStartCountdownNotify::start_source() const {
  // @@protoc_insertion_point(field_get:proto.GalleryWillStartCountdownNotify.start_source)
  return static_cast< ::proto::GalleryStartSource >(start_source_);
}
inline void GalleryWillStartCountdownNotify::set_start_source(::proto::GalleryStartSource value) {
  
  start_source_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryWillStartCountdownNotify.start_source)
}

// uint32 end_time = 12;
inline void GalleryWillStartCountdownNotify::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 GalleryWillStartCountdownNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.GalleryWillStartCountdownNotify.end_time)
  return end_time_;
}
inline void GalleryWillStartCountdownNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryWillStartCountdownNotify.end_time)
}

// bool is_end = 7;
inline void GalleryWillStartCountdownNotify::clear_is_end() {
  is_end_ = false;
}
inline bool GalleryWillStartCountdownNotify::is_end() const {
  // @@protoc_insertion_point(field_get:proto.GalleryWillStartCountdownNotify.is_end)
  return is_end_;
}
inline void GalleryWillStartCountdownNotify::set_is_end(bool value) {
  
  is_end_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryWillStartCountdownNotify.is_end)
}

// uint32 gallery_id = 14;
inline void GalleryWillStartCountdownNotify::clear_gallery_id() {
  gallery_id_ = 0u;
}
inline ::google::protobuf::uint32 GalleryWillStartCountdownNotify::gallery_id() const {
  // @@protoc_insertion_point(field_get:proto.GalleryWillStartCountdownNotify.gallery_id)
  return gallery_id_;
}
inline void GalleryWillStartCountdownNotify::set_gallery_id(::google::protobuf::uint32 value) {
  
  gallery_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GalleryWillStartCountdownNotify.gallery_id)
}

// -------------------------------------------------------------------

// InstableSprayGalleryInfoNotify

// uint32 score = 3;
inline void InstableSprayGalleryInfoNotify::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 InstableSprayGalleryInfoNotify::score() const {
  // @@protoc_insertion_point(field_get:proto.InstableSprayGalleryInfoNotify.score)
  return score_;
}
inline void InstableSprayGalleryInfoNotify::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.InstableSprayGalleryInfoNotify.score)
}

// -------------------------------------------------------------------

// SceneGalleryMuqadasPotionInfo

// uint32 score = 6;
inline void SceneGalleryMuqadasPotionInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryMuqadasPotionInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryMuqadasPotionInfo.score)
  return score_;
}
inline void SceneGalleryMuqadasPotionInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryMuqadasPotionInfo.score)
}

// uint32 capture_weakness_count = 4;
inline void SceneGalleryMuqadasPotionInfo::clear_capture_weakness_count() {
  capture_weakness_count_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryMuqadasPotionInfo::capture_weakness_count() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryMuqadasPotionInfo.capture_weakness_count)
  return capture_weakness_count_;
}
inline void SceneGalleryMuqadasPotionInfo::set_capture_weakness_count(::google::protobuf::uint32 value) {
  
  capture_weakness_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryMuqadasPotionInfo.capture_weakness_count)
}

// uint32 skill_energy = 10;
inline void SceneGalleryMuqadasPotionInfo::clear_skill_energy() {
  skill_energy_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryMuqadasPotionInfo::skill_energy() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryMuqadasPotionInfo.skill_energy)
  return skill_energy_;
}
inline void SceneGalleryMuqadasPotionInfo::set_skill_energy(::google::protobuf::uint32 value) {
  
  skill_energy_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryMuqadasPotionInfo.skill_energy)
}

// uint32 skill_use_limit = 9;
inline void SceneGalleryMuqadasPotionInfo::clear_skill_use_limit() {
  skill_use_limit_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryMuqadasPotionInfo::skill_use_limit() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryMuqadasPotionInfo.skill_use_limit)
  return skill_use_limit_;
}
inline void SceneGalleryMuqadasPotionInfo::set_skill_use_limit(::google::protobuf::uint32 value) {
  
  skill_use_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryMuqadasPotionInfo.skill_use_limit)
}

// -------------------------------------------------------------------

// VintageHuntingFirstStageInfo

// uint32 timid_cnt = 15;
inline void VintageHuntingFirstStageInfo::clear_timid_cnt() {
  timid_cnt_ = 0u;
}
inline ::google::protobuf::uint32 VintageHuntingFirstStageInfo::timid_cnt() const {
  // @@protoc_insertion_point(field_get:proto.VintageHuntingFirstStageInfo.timid_cnt)
  return timid_cnt_;
}
inline void VintageHuntingFirstStageInfo::set_timid_cnt(::google::protobuf::uint32 value) {
  
  timid_cnt_ = value;
  // @@protoc_insertion_point(field_set:proto.VintageHuntingFirstStageInfo.timid_cnt)
}

// uint32 brutal_cnt = 7;
inline void VintageHuntingFirstStageInfo::clear_brutal_cnt() {
  brutal_cnt_ = 0u;
}
inline ::google::protobuf::uint32 VintageHuntingFirstStageInfo::brutal_cnt() const {
  // @@protoc_insertion_point(field_get:proto.VintageHuntingFirstStageInfo.brutal_cnt)
  return brutal_cnt_;
}
inline void VintageHuntingFirstStageInfo::set_brutal_cnt(::google::protobuf::uint32 value) {
  
  brutal_cnt_ = value;
  // @@protoc_insertion_point(field_set:proto.VintageHuntingFirstStageInfo.brutal_cnt)
}

// uint32 score = 14;
inline void VintageHuntingFirstStageInfo::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 VintageHuntingFirstStageInfo::score() const {
  // @@protoc_insertion_point(field_get:proto.VintageHuntingFirstStageInfo.score)
  return score_;
}
inline void VintageHuntingFirstStageInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.VintageHuntingFirstStageInfo.score)
}

// uint32 elite_cnt = 11;
inline void VintageHuntingFirstStageInfo::clear_elite_cnt() {
  elite_cnt_ = 0u;
}
inline ::google::protobuf::uint32 VintageHuntingFirstStageInfo::elite_cnt() const {
  // @@protoc_insertion_point(field_get:proto.VintageHuntingFirstStageInfo.elite_cnt)
  return elite_cnt_;
}
inline void VintageHuntingFirstStageInfo::set_elite_cnt(::google::protobuf::uint32 value) {
  
  elite_cnt_ = value;
  // @@protoc_insertion_point(field_set:proto.VintageHuntingFirstStageInfo.elite_cnt)
}

// -------------------------------------------------------------------

// VintageHuntingSecondStageInfo

// uint32 total_num = 11;
inline void VintageHuntingSecondStageInfo::clear_total_num() {
  total_num_ = 0u;
}
inline ::google::protobuf::uint32 VintageHuntingSecondStageInfo::total_num() const {
  // @@protoc_insertion_point(field_get:proto.VintageHuntingSecondStageInfo.total_num)
  return total_num_;
}
inline void VintageHuntingSecondStageInfo::set_total_num(::google::protobuf::uint32 value) {
  
  total_num_ = value;
  // @@protoc_insertion_point(field_set:proto.VintageHuntingSecondStageInfo.total_num)
}

// uint32 capture_animal_num = 13;
inline void VintageHuntingSecondStageInfo::clear_capture_animal_num() {
  capture_animal_num_ = 0u;
}
inline ::google::protobuf::uint32 VintageHuntingSecondStageInfo::capture_animal_num() const {
  // @@protoc_insertion_point(field_get:proto.VintageHuntingSecondStageInfo.capture_animal_num)
  return capture_animal_num_;
}
inline void VintageHuntingSecondStageInfo::set_capture_animal_num(::google::protobuf::uint32 value) {
  
  capture_animal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.VintageHuntingSecondStageInfo.capture_animal_num)
}

// uint32 left_num = 3;
inline void VintageHuntingSecondStageInfo::clear_left_num() {
  left_num_ = 0u;
}
inline ::google::protobuf::uint32 VintageHuntingSecondStageInfo::left_num() const {
  // @@protoc_insertion_point(field_get:proto.VintageHuntingSecondStageInfo.left_num)
  return left_num_;
}
inline void VintageHuntingSecondStageInfo::set_left_num(::google::protobuf::uint32 value) {
  
  left_num_ = value;
  // @@protoc_insertion_point(field_set:proto.VintageHuntingSecondStageInfo.left_num)
}

// -------------------------------------------------------------------

// VintageHuntingThirdStageInfo

// -------------------------------------------------------------------

// SceneGalleryVintageHuntingInfo

// uint32 stage_id = 7;
inline void SceneGalleryVintageHuntingInfo::clear_stage_id() {
  stage_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGalleryVintageHuntingInfo::stage_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryVintageHuntingInfo.stage_id)
  return stage_id_;
}
inline void SceneGalleryVintageHuntingInfo::set_stage_id(::google::protobuf::uint32 value) {
  
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGalleryVintageHuntingInfo.stage_id)
}

// .proto.VintageHuntingFirstStageInfo first_stage_info = 2;
inline bool SceneGalleryVintageHuntingInfo::has_first_stage_info() const {
  return info_case() == kFirstStageInfo;
}
inline void SceneGalleryVintageHuntingInfo::set_has_first_stage_info() {
  _oneof_case_[0] = kFirstStageInfo;
}
inline void SceneGalleryVintageHuntingInfo::clear_first_stage_info() {
  if (has_first_stage_info()) {
    delete info_.first_stage_info_;
    clear_has_info();
  }
}
inline  const ::proto::VintageHuntingFirstStageInfo& SceneGalleryVintageHuntingInfo::first_stage_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryVintageHuntingInfo.first_stage_info)
  return has_first_stage_info()
      ? *info_.first_stage_info_
      : ::proto::VintageHuntingFirstStageInfo::default_instance();
}
inline ::proto::VintageHuntingFirstStageInfo* SceneGalleryVintageHuntingInfo::mutable_first_stage_info() {
  if (!has_first_stage_info()) {
    clear_info();
    set_has_first_stage_info();
    info_.first_stage_info_ = new ::proto::VintageHuntingFirstStageInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryVintageHuntingInfo.first_stage_info)
  return info_.first_stage_info_;
}
inline ::proto::VintageHuntingFirstStageInfo* SceneGalleryVintageHuntingInfo::release_first_stage_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryVintageHuntingInfo.first_stage_info)
  if (has_first_stage_info()) {
    clear_has_info();
    ::proto::VintageHuntingFirstStageInfo* temp = info_.first_stage_info_;
    info_.first_stage_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryVintageHuntingInfo::set_allocated_first_stage_info(::proto::VintageHuntingFirstStageInfo* first_stage_info) {
  clear_info();
  if (first_stage_info) {
    set_has_first_stage_info();
    info_.first_stage_info_ = first_stage_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryVintageHuntingInfo.first_stage_info)
}

// .proto.VintageHuntingSecondStageInfo second_stage_info = 15;
inline bool SceneGalleryVintageHuntingInfo::has_second_stage_info() const {
  return info_case() == kSecondStageInfo;
}
inline void SceneGalleryVintageHuntingInfo::set_has_second_stage_info() {
  _oneof_case_[0] = kSecondStageInfo;
}
inline void SceneGalleryVintageHuntingInfo::clear_second_stage_info() {
  if (has_second_stage_info()) {
    delete info_.second_stage_info_;
    clear_has_info();
  }
}
inline  const ::proto::VintageHuntingSecondStageInfo& SceneGalleryVintageHuntingInfo::second_stage_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryVintageHuntingInfo.second_stage_info)
  return has_second_stage_info()
      ? *info_.second_stage_info_
      : ::proto::VintageHuntingSecondStageInfo::default_instance();
}
inline ::proto::VintageHuntingSecondStageInfo* SceneGalleryVintageHuntingInfo::mutable_second_stage_info() {
  if (!has_second_stage_info()) {
    clear_info();
    set_has_second_stage_info();
    info_.second_stage_info_ = new ::proto::VintageHuntingSecondStageInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryVintageHuntingInfo.second_stage_info)
  return info_.second_stage_info_;
}
inline ::proto::VintageHuntingSecondStageInfo* SceneGalleryVintageHuntingInfo::release_second_stage_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryVintageHuntingInfo.second_stage_info)
  if (has_second_stage_info()) {
    clear_has_info();
    ::proto::VintageHuntingSecondStageInfo* temp = info_.second_stage_info_;
    info_.second_stage_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryVintageHuntingInfo::set_allocated_second_stage_info(::proto::VintageHuntingSecondStageInfo* second_stage_info) {
  clear_info();
  if (second_stage_info) {
    set_has_second_stage_info();
    info_.second_stage_info_ = second_stage_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryVintageHuntingInfo.second_stage_info)
}

// .proto.VintageHuntingThirdStageInfo third_stage_info = 12;
inline bool SceneGalleryVintageHuntingInfo::has_third_stage_info() const {
  return info_case() == kThirdStageInfo;
}
inline void SceneGalleryVintageHuntingInfo::set_has_third_stage_info() {
  _oneof_case_[0] = kThirdStageInfo;
}
inline void SceneGalleryVintageHuntingInfo::clear_third_stage_info() {
  if (has_third_stage_info()) {
    delete info_.third_stage_info_;
    clear_has_info();
  }
}
inline  const ::proto::VintageHuntingThirdStageInfo& SceneGalleryVintageHuntingInfo::third_stage_info() const {
  // @@protoc_insertion_point(field_get:proto.SceneGalleryVintageHuntingInfo.third_stage_info)
  return has_third_stage_info()
      ? *info_.third_stage_info_
      : ::proto::VintageHuntingThirdStageInfo::default_instance();
}
inline ::proto::VintageHuntingThirdStageInfo* SceneGalleryVintageHuntingInfo::mutable_third_stage_info() {
  if (!has_third_stage_info()) {
    clear_info();
    set_has_third_stage_info();
    info_.third_stage_info_ = new ::proto::VintageHuntingThirdStageInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGalleryVintageHuntingInfo.third_stage_info)
  return info_.third_stage_info_;
}
inline ::proto::VintageHuntingThirdStageInfo* SceneGalleryVintageHuntingInfo::release_third_stage_info() {
  // @@protoc_insertion_point(field_release:proto.SceneGalleryVintageHuntingInfo.third_stage_info)
  if (has_third_stage_info()) {
    clear_has_info();
    ::proto::VintageHuntingThirdStageInfo* temp = info_.third_stage_info_;
    info_.third_stage_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGalleryVintageHuntingInfo::set_allocated_third_stage_info(::proto::VintageHuntingThirdStageInfo* third_stage_info) {
  clear_info();
  if (third_stage_info) {
    set_has_third_stage_info();
    info_.third_stage_info_ = third_stage_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGalleryVintageHuntingInfo.third_stage_info)
}

inline bool SceneGalleryVintageHuntingInfo::has_info() const {
  return info_case() != INFO_NOT_SET;
}
inline void SceneGalleryVintageHuntingInfo::clear_has_info() {
  _oneof_case_[0] = INFO_NOT_SET;
}
inline SceneGalleryVintageHuntingInfo::InfoCase SceneGalleryVintageHuntingInfo::info_case() const {
  return SceneGalleryVintageHuntingInfo::InfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// WindFieldGalleryInfoNotify

// uint32 show_id = 3;
inline void WindFieldGalleryInfoNotify::clear_show_id() {
  show_id_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::show_id() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.show_id)
  return show_id_;
}
inline void WindFieldGalleryInfoNotify::set_show_id(::google::protobuf::uint32 value) {
  
  show_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.show_id)
}

// uint32 killed_monster_num = 7;
inline void WindFieldGalleryInfoNotify::clear_killed_monster_num() {
  killed_monster_num_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::killed_monster_num() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.killed_monster_num)
  return killed_monster_num_;
}
inline void WindFieldGalleryInfoNotify::set_killed_monster_num(::google::protobuf::uint32 value) {
  
  killed_monster_num_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.killed_monster_num)
}

// uint32 coin_num = 9;
inline void WindFieldGalleryInfoNotify::clear_coin_num() {
  coin_num_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::coin_num() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.coin_num)
  return coin_num_;
}
inline void WindFieldGalleryInfoNotify::set_coin_num(::google::protobuf::uint32 value) {
  
  coin_num_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.coin_num)
}

// uint32 challenge_ball_max_count = 1;
inline void WindFieldGalleryInfoNotify::clear_challenge_ball_max_count() {
  challenge_ball_max_count_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::challenge_ball_max_count() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.challenge_ball_max_count)
  return challenge_ball_max_count_;
}
inline void WindFieldGalleryInfoNotify::set_challenge_ball_max_count(::google::protobuf::uint32 value) {
  
  challenge_ball_max_count_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.challenge_ball_max_count)
}

// uint32 challenge_total_time = 5;
inline void WindFieldGalleryInfoNotify::clear_challenge_total_time() {
  challenge_total_time_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::challenge_total_time() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.challenge_total_time)
  return challenge_total_time_;
}
inline void WindFieldGalleryInfoNotify::set_challenge_total_time(::google::protobuf::uint32 value) {
  
  challenge_total_time_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.challenge_total_time)
}

// uint32 challenge_ball_cur_count = 10;
inline void WindFieldGalleryInfoNotify::clear_challenge_ball_cur_count() {
  challenge_ball_cur_count_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::challenge_ball_cur_count() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.challenge_ball_cur_count)
  return challenge_ball_cur_count_;
}
inline void WindFieldGalleryInfoNotify::set_challenge_ball_cur_count(::google::protobuf::uint32 value) {
  
  challenge_ball_cur_count_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.challenge_ball_cur_count)
}

// uint32 challenge_timestamp = 4;
inline void WindFieldGalleryInfoNotify::clear_challenge_timestamp() {
  challenge_timestamp_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::challenge_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.challenge_timestamp)
  return challenge_timestamp_;
}
inline void WindFieldGalleryInfoNotify::set_challenge_timestamp(::google::protobuf::uint32 value) {
  
  challenge_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.challenge_timestamp)
}

// uint32 element_ball_num = 14;
inline void WindFieldGalleryInfoNotify::clear_element_ball_num() {
  element_ball_num_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryInfoNotify::element_ball_num() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryInfoNotify.element_ball_num)
  return element_ball_num_;
}
inline void WindFieldGalleryInfoNotify::set_element_ball_num(::google::protobuf::uint32 value) {
  
  element_ball_num_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryInfoNotify.element_ball_num)
}

// -------------------------------------------------------------------

// WindFieldGalleryChallengeInfoNotify

// uint32 challenge_timestamp = 6;
inline void WindFieldGalleryChallengeInfoNotify::clear_challenge_timestamp() {
  challenge_timestamp_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryChallengeInfoNotify::challenge_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryChallengeInfoNotify.challenge_timestamp)
  return challenge_timestamp_;
}
inline void WindFieldGalleryChallengeInfoNotify::set_challenge_timestamp(::google::protobuf::uint32 value) {
  
  challenge_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryChallengeInfoNotify.challenge_timestamp)
}

// bool is_start = 8;
inline void WindFieldGalleryChallengeInfoNotify::clear_is_start() {
  is_start_ = false;
}
inline bool WindFieldGalleryChallengeInfoNotify::is_start() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryChallengeInfoNotify.is_start)
  return is_start_;
}
inline void WindFieldGalleryChallengeInfoNotify::set_is_start(bool value) {
  
  is_start_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryChallengeInfoNotify.is_start)
}

// uint32 show_id = 12;
inline void WindFieldGalleryChallengeInfoNotify::clear_show_id() {
  show_id_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryChallengeInfoNotify::show_id() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryChallengeInfoNotify.show_id)
  return show_id_;
}
inline void WindFieldGalleryChallengeInfoNotify::set_show_id(::google::protobuf::uint32 value) {
  
  show_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryChallengeInfoNotify.show_id)
}

// bool is_success = 7;
inline void WindFieldGalleryChallengeInfoNotify::clear_is_success() {
  is_success_ = false;
}
inline bool WindFieldGalleryChallengeInfoNotify::is_success() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryChallengeInfoNotify.is_success)
  return is_success_;
}
inline void WindFieldGalleryChallengeInfoNotify::set_is_success(bool value) {
  
  is_success_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryChallengeInfoNotify.is_success)
}

// uint32 challenge_total_time = 13;
inline void WindFieldGalleryChallengeInfoNotify::clear_challenge_total_time() {
  challenge_total_time_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryChallengeInfoNotify::challenge_total_time() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryChallengeInfoNotify.challenge_total_time)
  return challenge_total_time_;
}
inline void WindFieldGalleryChallengeInfoNotify::set_challenge_total_time(::google::protobuf::uint32 value) {
  
  challenge_total_time_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryChallengeInfoNotify.challenge_total_time)
}

// uint32 challenge_ball_max_count = 11;
inline void WindFieldGalleryChallengeInfoNotify::clear_challenge_ball_max_count() {
  challenge_ball_max_count_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryChallengeInfoNotify::challenge_ball_max_count() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryChallengeInfoNotify.challenge_ball_max_count)
  return challenge_ball_max_count_;
}
inline void WindFieldGalleryChallengeInfoNotify::set_challenge_ball_max_count(::google::protobuf::uint32 value) {
  
  challenge_ball_max_count_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryChallengeInfoNotify.challenge_ball_max_count)
}

// uint32 challenge_ball_cur_count = 1;
inline void WindFieldGalleryChallengeInfoNotify::clear_challenge_ball_cur_count() {
  challenge_ball_cur_count_ = 0u;
}
inline ::google::protobuf::uint32 WindFieldGalleryChallengeInfoNotify::challenge_ball_cur_count() const {
  // @@protoc_insertion_point(field_get:proto.WindFieldGalleryChallengeInfoNotify.challenge_ball_cur_count)
  return challenge_ball_cur_count_;
}
inline void WindFieldGalleryChallengeInfoNotify::set_challenge_ball_cur_count(::google::protobuf::uint32 value) {
  
  challenge_ball_cur_count_ = value;
  // @@protoc_insertion_point(field_set:proto.WindFieldGalleryChallengeInfoNotify.challenge_ball_cur_count)
}

// -------------------------------------------------------------------

// FungusFighterTrainingInfoNotify

// uint32 buff_start_time = 3;
inline void FungusFighterTrainingInfoNotify::clear_buff_start_time() {
  buff_start_time_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingInfoNotify::buff_start_time() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingInfoNotify.buff_start_time)
  return buff_start_time_;
}
inline void FungusFighterTrainingInfoNotify::set_buff_start_time(::google::protobuf::uint32 value) {
  
  buff_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingInfoNotify.buff_start_time)
}

// uint32 max_skill_count = 7;
inline void FungusFighterTrainingInfoNotify::clear_max_skill_count() {
  max_skill_count_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingInfoNotify::max_skill_count() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingInfoNotify.max_skill_count)
  return max_skill_count_;
}
inline void FungusFighterTrainingInfoNotify::set_max_skill_count(::google::protobuf::uint32 value) {
  
  max_skill_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingInfoNotify.max_skill_count)
}

// uint32 max_monster_count = 8;
inline void FungusFighterTrainingInfoNotify::clear_max_monster_count() {
  max_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingInfoNotify::max_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingInfoNotify.max_monster_count)
  return max_monster_count_;
}
inline void FungusFighterTrainingInfoNotify::set_max_monster_count(::google::protobuf::uint32 value) {
  
  max_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingInfoNotify.max_monster_count)
}

// uint32 buff_id = 14;
inline void FungusFighterTrainingInfoNotify::clear_buff_id() {
  buff_id_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingInfoNotify::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingInfoNotify.buff_id)
  return buff_id_;
}
inline void FungusFighterTrainingInfoNotify::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingInfoNotify.buff_id)
}

// uint32 buff_last_time = 4;
inline void FungusFighterTrainingInfoNotify::clear_buff_last_time() {
  buff_last_time_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingInfoNotify::buff_last_time() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingInfoNotify.buff_last_time)
  return buff_last_time_;
}
inline void FungusFighterTrainingInfoNotify::set_buff_last_time(::google::protobuf::uint32 value) {
  
  buff_last_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingInfoNotify.buff_last_time)
}

// uint32 rest_skill_count = 6;
inline void FungusFighterTrainingInfoNotify::clear_rest_skill_count() {
  rest_skill_count_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingInfoNotify::rest_skill_count() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingInfoNotify.rest_skill_count)
  return rest_skill_count_;
}
inline void FungusFighterTrainingInfoNotify::set_rest_skill_count(::google::protobuf::uint32 value) {
  
  rest_skill_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingInfoNotify.rest_skill_count)
}

// uint32 killed_monster_count = 15;
inline void FungusFighterTrainingInfoNotify::clear_killed_monster_count() {
  killed_monster_count_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingInfoNotify::killed_monster_count() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingInfoNotify.killed_monster_count)
  return killed_monster_count_;
}
inline void FungusFighterTrainingInfoNotify::set_killed_monster_count(::google::protobuf::uint32 value) {
  
  killed_monster_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingInfoNotify.killed_monster_count)
}

// -------------------------------------------------------------------

// FungusFighterTrainingSettleInfo

// uint32 used_time = 15;
inline void FungusFighterTrainingSettleInfo::clear_used_time() {
  used_time_ = 0u;
}
inline ::google::protobuf::uint32 FungusFighterTrainingSettleInfo::used_time() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingSettleInfo.used_time)
  return used_time_;
}
inline void FungusFighterTrainingSettleInfo::set_used_time(::google::protobuf::uint32 value) {
  
  used_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingSettleInfo.used_time)
}

// .proto.GalleryStopReason reason = 3;
inline void FungusFighterTrainingSettleInfo::clear_reason() {
  reason_ = 0;
}
inline ::proto::GalleryStopReason FungusFighterTrainingSettleInfo::reason() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingSettleInfo.reason)
  return static_cast< ::proto::GalleryStopReason >(reason_);
}
inline void FungusFighterTrainingSettleInfo::set_reason(::proto::GalleryStopReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingSettleInfo.reason)
}

// string transaction = 1;
inline void FungusFighterTrainingSettleInfo::clear_transaction() {
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FungusFighterTrainingSettleInfo::transaction() const {
  // @@protoc_insertion_point(field_get:proto.FungusFighterTrainingSettleInfo.transaction)
  return transaction_.GetNoArena();
}
inline void FungusFighterTrainingSettleInfo::set_transaction(const ::std::string& value) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FungusFighterTrainingSettleInfo.transaction)
}
#if LANG_CXX11
inline void FungusFighterTrainingSettleInfo::set_transaction(::std::string&& value) {
  
  transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FungusFighterTrainingSettleInfo.transaction)
}
#endif
inline void FungusFighterTrainingSettleInfo::set_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FungusFighterTrainingSettleInfo.transaction)
}
inline void FungusFighterTrainingSettleInfo::set_transaction(const char* value, size_t size) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FungusFighterTrainingSettleInfo.transaction)
}
inline ::std::string* FungusFighterTrainingSettleInfo::mutable_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.FungusFighterTrainingSettleInfo.transaction)
  return transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FungusFighterTrainingSettleInfo::release_transaction() {
  // @@protoc_insertion_point(field_release:proto.FungusFighterTrainingSettleInfo.transaction)
  
  return transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FungusFighterTrainingSettleInfo::set_allocated_transaction(::std::string* transaction) {
  if (transaction != NULL) {
    
  } else {
    
  }
  transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.FungusFighterTrainingSettleInfo.transaction)
}

// -------------------------------------------------------------------

// FungusCaptureSettleNotify

// bool is_success = 2;
inline void FungusCaptureSettleNotify::clear_is_success() {
  is_success_ = false;
}
inline bool FungusCaptureSettleNotify::is_success() const {
  // @@protoc_insertion_point(field_get:proto.FungusCaptureSettleNotify.is_success)
  return is_success_;
}
inline void FungusCaptureSettleNotify::set_is_success(bool value) {
  
  is_success_ = value;
  // @@protoc_insertion_point(field_set:proto.FungusCaptureSettleNotify.is_success)
}

// -------------------------------------------------------------------

// HideAndSeekPlayerCapturedNotify

// uint32 ghost_skill_id = 12;
inline void HideAndSeekPlayerCapturedNotify::clear_ghost_skill_id() {
  ghost_skill_id_ = 0u;
}
inline ::google::protobuf::uint32 HideAndSeekPlayerCapturedNotify::ghost_skill_id() const {
  // @@protoc_insertion_point(field_get:proto.HideAndSeekPlayerCapturedNotify.ghost_skill_id)
  return ghost_skill_id_;
}
inline void HideAndSeekPlayerCapturedNotify::set_ghost_skill_id(::google::protobuf::uint32 value) {
  
  ghost_skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HideAndSeekPlayerCapturedNotify.ghost_skill_id)
}

// -------------------------------------------------------------------

// CoinCollectGallerySettleNotify

// uint32 coin_collect_num = 11;
inline void CoinCollectGallerySettleNotify::clear_coin_collect_num() {
  coin_collect_num_ = 0u;
}
inline ::google::protobuf::uint32 CoinCollectGallerySettleNotify::coin_collect_num() const {
  // @@protoc_insertion_point(field_get:proto.CoinCollectGallerySettleNotify.coin_collect_num)
  return coin_collect_num_;
}
inline void CoinCollectGallerySettleNotify::set_coin_collect_num(::google::protobuf::uint32 value) {
  
  coin_collect_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CoinCollectGallerySettleNotify.coin_collect_num)
}

// uint32 coin_total_num = 7;
inline void CoinCollectGallerySettleNotify::clear_coin_total_num() {
  coin_total_num_ = 0u;
}
inline ::google::protobuf::uint32 CoinCollectGallerySettleNotify::coin_total_num() const {
  // @@protoc_insertion_point(field_get:proto.CoinCollectGallerySettleNotify.coin_total_num)
  return coin_total_num_;
}
inline void CoinCollectGallerySettleNotify::set_coin_total_num(::google::protobuf::uint32 value) {
  
  coin_total_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CoinCollectGallerySettleNotify.coin_total_num)
}

// uint32 level_id = 9;
inline void CoinCollectGallerySettleNotify::clear_level_id() {
  level_id_ = 0u;
}
inline ::google::protobuf::uint32 CoinCollectGallerySettleNotify::level_id() const {
  // @@protoc_insertion_point(field_get:proto.CoinCollectGallerySettleNotify.level_id)
  return level_id_;
}
inline void CoinCollectGallerySettleNotify::set_level_id(::google::protobuf::uint32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CoinCollectGallerySettleNotify.level_id)
}

// uint32 coin_collect_time = 4;
inline void CoinCollectGallerySettleNotify::clear_coin_collect_time() {
  coin_collect_time_ = 0u;
}
inline ::google::protobuf::uint32 CoinCollectGallerySettleNotify::coin_collect_time() const {
  // @@protoc_insertion_point(field_get:proto.CoinCollectGallerySettleNotify.coin_collect_time)
  return coin_collect_time_;
}
inline void CoinCollectGallerySettleNotify::set_coin_collect_time(::google::protobuf::uint32 value) {
  
  coin_collect_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CoinCollectGallerySettleNotify.coin_collect_time)
}

// uint32 multistage_play_index = 6;
inline void CoinCollectGallerySettleNotify::clear_multistage_play_index() {
  multistage_play_index_ = 0u;
}
inline ::google::protobuf::uint32 CoinCollectGallerySettleNotify::multistage_play_index() const {
  // @@protoc_insertion_point(field_get:proto.CoinCollectGallerySettleNotify.multistage_play_index)
  return multistage_play_index_;
}
inline void CoinCollectGallerySettleNotify::set_multistage_play_index(::google::protobuf::uint32 value) {
  
  multistage_play_index_ = value;
  // @@protoc_insertion_point(field_set:proto.CoinCollectGallerySettleNotify.multistage_play_index)
}

// bool is_new_record = 10;
inline void CoinCollectGallerySettleNotify::clear_is_new_record() {
  is_new_record_ = false;
}
inline bool CoinCollectGallerySettleNotify::is_new_record() const {
  // @@protoc_insertion_point(field_get:proto.CoinCollectGallerySettleNotify.is_new_record)
  return is_new_record_;
}
inline void CoinCollectGallerySettleNotify::set_is_new_record(bool value) {
  
  is_new_record_ = value;
  // @@protoc_insertion_point(field_set:proto.CoinCollectGallerySettleNotify.is_new_record)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GalleryStageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GalleryStageType>() {
  return ::proto::GalleryStageType_descriptor();
}
template <> struct is_proto_enum< ::proto::GalleryStopReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GalleryStopReason>() {
  return ::proto::GalleryStopReason_descriptor();
}
template <> struct is_proto_enum< ::proto::GalleryStartSource> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GalleryStartSource>() {
  return ::proto::GalleryStartSource_descriptor();
}
template <> struct is_proto_enum< ::proto::SalvagePreventStopReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SalvagePreventStopReason>() {
  return ::proto::SalvagePreventStopReason_descriptor();
}
template <> struct is_proto_enum< ::proto::SalvageEscortStopReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SalvageEscortStopReason>() {
  return ::proto::SalvageEscortStopReason_descriptor();
}
template <> struct is_proto_enum< ::proto::IslandPartySailStage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::IslandPartySailStage>() {
  return ::proto::IslandPartySailStage_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fgallery_2eproto__INCLUDED
