// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_tower.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_tower.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class TowerTeamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerTeam>
     _instance;
} _TowerTeam_default_instance_;
class TowerLevelRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerLevelRecord>
     _instance;
} _TowerLevelRecord_default_instance_;
class TowerFloorRecord_PassedLevelMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerFloorRecord::TowerFloorRecord_PassedLevelMapEntry>
     _instance;
} _TowerFloorRecord_PassedLevelMapEntry_default_instance_;
class TowerFloorRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerFloorRecord>
     _instance;
} _TowerFloorRecord_default_instance_;
class TowerCurLevelRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerCurLevelRecord>
     _instance;
} _TowerCurLevelRecord_default_instance_;
class TowerBriefDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerBriefDataNotify>
     _instance;
} _TowerBriefDataNotify_default_instance_;
class TowerFloorRecordChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerFloorRecordChangeNotify>
     _instance;
} _TowerFloorRecordChangeNotify_default_instance_;
class TowerCurLevelRecordChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerCurLevelRecordChangeNotify>
     _instance;
} _TowerCurLevelRecordChangeNotify_default_instance_;
class TowerDailyRewardProgressChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerDailyRewardProgressChangeNotify>
     _instance;
} _TowerDailyRewardProgressChangeNotify_default_instance_;
class TowerTeamSelectReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerTeamSelectReq>
     _instance;
} _TowerTeamSelectReq_default_instance_;
class TowerTeamSelectRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerTeamSelectRsp>
     _instance;
} _TowerTeamSelectRsp_default_instance_;
class TowerAllDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerAllDataReq>
     _instance;
} _TowerAllDataReq_default_instance_;
class TowerMonthlyBriefDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerMonthlyBrief>
     _instance;
} _TowerMonthlyBrief_default_instance_;
class TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerAllDataRsp::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry>
     _instance;
} _TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_;
class TowerAllDataRsp_FloorOpenTimeMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerAllDataRsp::TowerAllDataRsp_FloorOpenTimeMapEntry>
     _instance;
} _TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_;
class TowerAllDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerAllDataRsp>
     _instance;
} _TowerAllDataRsp_default_instance_;
class TowerEnterLevelReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerEnterLevelReq>
     _instance;
} _TowerEnterLevelReq_default_instance_;
class TowerEnterLevelRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerEnterLevelRsp>
     _instance;
} _TowerEnterLevelRsp_default_instance_;
class TowerBuffSelectReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerBuffSelectReq>
     _instance;
} _TowerBuffSelectReq_default_instance_;
class TowerBuffSelectRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerBuffSelectRsp>
     _instance;
} _TowerBuffSelectRsp_default_instance_;
class TowerSurrenderReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerSurrenderReq>
     _instance;
} _TowerSurrenderReq_default_instance_;
class TowerSurrenderRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerSurrenderRsp>
     _instance;
} _TowerSurrenderRsp_default_instance_;
class TowerGetFloorStarRewardReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerGetFloorStarRewardReq>
     _instance;
} _TowerGetFloorStarRewardReq_default_instance_;
class TowerGetFloorStarRewardRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerGetFloorStarRewardRsp>
     _instance;
} _TowerGetFloorStarRewardRsp_default_instance_;
class TowerLevelEndNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerLevelEndNotify>
     _instance;
} _TowerLevelEndNotify_default_instance_;
class TowerLevelStarCondDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerLevelStarCondData>
     _instance;
} _TowerLevelStarCondData_default_instance_;
class TowerLevelStarCondNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerLevelStarCondNotify>
     _instance;
} _TowerLevelStarCondNotify_default_instance_;
class TowerMiddleLevelChangeTeamNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerMiddleLevelChangeTeamNotify>
     _instance;
} _TowerMiddleLevelChangeTeamNotify_default_instance_;
class TowerFightRecordPairDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerFightRecordPair>
     _instance;
} _TowerFightRecordPair_default_instance_;
class TowerMonthlyCombatRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerMonthlyCombatRecord>
     _instance;
} _TowerMonthlyCombatRecord_default_instance_;
class TowerMonthlyDetailDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerMonthlyDetail>
     _instance;
} _TowerMonthlyDetail_default_instance_;
class TowerRecordHandbookReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerRecordHandbookReq>
     _instance;
} _TowerRecordHandbookReq_default_instance_;
class TowerRecordHandbookRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TowerRecordHandbookRsp>
     _instance;
} _TowerRecordHandbookRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5ftower_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[33];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeam, tower_team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeam, avatar_guid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelRecord, satisfied_cond_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelRecord, level_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecord, floor_star_reward_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecord, passed_level_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecord, floor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecord, passed_level_record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecord, tower_team_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecord, is_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecord, buff_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecord, is_upper_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecord, cur_level_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecord, cur_floor_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, total_star_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, last_floor_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, schedule_start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, next_schedule_change_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, is_finished_entrance_floor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, last_level_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBriefDataNotify, tower_schedule_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecordChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecordChangeNotify, is_finished_entrance_floor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFloorRecordChangeNotify, tower_floor_record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecordChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerCurLevelRecordChangeNotify, cur_level_record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerDailyRewardProgressChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerDailyRewardProgressChangeNotify, daily_floor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerDailyRewardProgressChangeNotify, daily_level_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeamSelectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeamSelectReq, tower_team_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeamSelectReq, floor_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeamSelectRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerTeamSelectRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataReq, is_interact_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyBrief, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyBrief, tower_schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyBrief, best_floor_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyBrief, best_level_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyBrief, total_star_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, tower_schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, daily_level_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, skip_floor_granted_reward_item_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, is_first_interact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, is_finished_entrance_floor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, tower_floor_record_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, daily_floor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, commemorative_reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, last_schedule_monthly_brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, next_schedule_change_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, valid_tower_record_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, skip_to_floor_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, floor_open_time_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, cur_level_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, schedule_start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerAllDataRsp, monthly_brief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerEnterLevelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerEnterLevelReq, enter_point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerEnterLevelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerEnterLevelRsp, tower_buff_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerEnterLevelRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerEnterLevelRsp, level_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerEnterLevelRsp, floor_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuffSelectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuffSelectReq, tower_buff_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuffSelectRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuffSelectRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuffSelectRsp, tower_buff_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerSurrenderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerSurrenderRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerSurrenderRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerGetFloorStarRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerGetFloorStarRewardReq, floor_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerGetFloorStarRewardRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerGetFloorStarRewardRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerGetFloorStarRewardRsp, floor_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelEndNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelEndNotify, next_floor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelEndNotify, reward_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelEndNotify, continue_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelEndNotify, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelEndNotify, finished_star_cond_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondData, is_fail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondData, cond_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondData, is_pause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondData, star_cond_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondNotify, level_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondNotify, floor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerLevelStarCondNotify, cond_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMiddleLevelChangeTeamNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFightRecordPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFightRecordPair, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerFightRecordPair, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyCombatRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyCombatRecord, most_kill_avatar_pair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyCombatRecord, most_cast_normal_skill_avatar_pair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyCombatRecord, most_reveal_avatar_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyCombatRecord, most_cast_energy_skill_avatar_pair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyCombatRecord, highest_dps_avatr_pair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyCombatRecord, most_take_damage_avatar_pair_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyDetail, monthly_combat_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerMonthlyDetail, monthly_brief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerRecordHandbookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerRecordHandbookRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerRecordHandbookRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerRecordHandbookRsp, monthly_detail_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(TowerTeam)},
  { 7, -1, sizeof(TowerLevelRecord)},
  { 14, -1, sizeof(TowerFloorRecord)},
  { 23, -1, sizeof(TowerCurLevelRecord)},
  { 34, -1, sizeof(TowerBriefDataNotify)},
  { 46, -1, sizeof(TowerFloorRecordChangeNotify)},
  { 53, -1, sizeof(TowerCurLevelRecordChangeNotify)},
  { 59, -1, sizeof(TowerDailyRewardProgressChangeNotify)},
  { 66, -1, sizeof(TowerTeamSelectReq)},
  { 73, -1, sizeof(TowerTeamSelectRsp)},
  { 79, -1, sizeof(TowerAllDataReq)},
  { 85, -1, sizeof(TowerMonthlyBrief)},
  { 94, -1, sizeof(TowerAllDataRsp)},
  { 116, -1, sizeof(TowerEnterLevelReq)},
  { 122, -1, sizeof(TowerEnterLevelRsp)},
  { 131, -1, sizeof(TowerBuffSelectReq)},
  { 137, -1, sizeof(TowerBuffSelectRsp)},
  { 144, -1, sizeof(TowerSurrenderReq)},
  { 149, -1, sizeof(TowerSurrenderRsp)},
  { 155, -1, sizeof(TowerGetFloorStarRewardReq)},
  { 161, -1, sizeof(TowerGetFloorStarRewardRsp)},
  { 168, -1, sizeof(TowerLevelEndNotify)},
  { 178, -1, sizeof(TowerLevelStarCondData)},
  { 187, -1, sizeof(TowerLevelStarCondNotify)},
  { 195, -1, sizeof(TowerMiddleLevelChangeTeamNotify)},
  { 200, -1, sizeof(TowerFightRecordPair)},
  { 207, -1, sizeof(TowerMonthlyCombatRecord)},
  { 218, -1, sizeof(TowerMonthlyDetail)},
  { 225, -1, sizeof(TowerRecordHandbookReq)},
  { 230, -1, sizeof(TowerRecordHandbookRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerTeam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerLevelRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerFloorRecord_PassedLevelMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerFloorRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerCurLevelRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerBriefDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerFloorRecordChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerCurLevelRecordChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerDailyRewardProgressChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerTeamSelectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerTeamSelectRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerAllDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerMonthlyBrief_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerAllDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerEnterLevelReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerEnterLevelRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerBuffSelectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerBuffSelectRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerSurrenderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerSurrenderRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerGetFloorStarRewardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerGetFloorStarRewardRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerLevelEndNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerLevelStarCondData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerLevelStarCondNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerMiddleLevelChangeTeamNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerFightRecordPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerMonthlyCombatRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerMonthlyDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerRecordHandbookReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TowerRecordHandbookRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_tower.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[2].reflection = TowerFloorRecord::TowerFloorRecord_PassedLevelMapEntry::CreateReflection(file_level_metadata[2].descriptor, _TowerFloorRecord_PassedLevelMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[13].reflection = TowerAllDataRsp::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry::CreateReflection(file_level_metadata[13].descriptor, _TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[14].reflection = TowerAllDataRsp::TowerAllDataRsp_FloorOpenTimeMapEntry::CreateReflection(file_level_metadata[14].descriptor, _TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 33);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _TowerTeam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerTeam_default_instance_);_TowerLevelRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerLevelRecord_default_instance_);_TowerFloorRecord_PassedLevelMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerFloorRecord_PassedLevelMapEntry_default_instance_);_TowerFloorRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerFloorRecord_default_instance_);_TowerCurLevelRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerCurLevelRecord_default_instance_);_TowerBriefDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerBriefDataNotify_default_instance_);_TowerFloorRecordChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerFloorRecordChangeNotify_default_instance_);_TowerCurLevelRecordChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerCurLevelRecordChangeNotify_default_instance_);_TowerDailyRewardProgressChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerDailyRewardProgressChangeNotify_default_instance_);_TowerTeamSelectReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerTeamSelectReq_default_instance_);_TowerTeamSelectRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerTeamSelectRsp_default_instance_);_TowerAllDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerAllDataReq_default_instance_);_TowerMonthlyBrief_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerMonthlyBrief_default_instance_);_TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_);_TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_);_TowerAllDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerAllDataRsp_default_instance_);_TowerEnterLevelReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerEnterLevelReq_default_instance_);_TowerEnterLevelRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerEnterLevelRsp_default_instance_);_TowerBuffSelectReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerBuffSelectReq_default_instance_);_TowerBuffSelectRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerBuffSelectRsp_default_instance_);_TowerSurrenderReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerSurrenderReq_default_instance_);_TowerSurrenderRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerSurrenderRsp_default_instance_);_TowerGetFloorStarRewardReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerGetFloorStarRewardReq_default_instance_);_TowerGetFloorStarRewardRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerGetFloorStarRewardRsp_default_instance_);_TowerLevelEndNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerLevelEndNotify_default_instance_);_TowerLevelStarCondData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerLevelStarCondData_default_instance_);_TowerLevelStarCondNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerLevelStarCondNotify_default_instance_);_TowerMiddleLevelChangeTeamNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerMiddleLevelChangeTeamNotify_default_instance_);_TowerFightRecordPair_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerFightRecordPair_default_instance_);_TowerMonthlyCombatRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerMonthlyCombatRecord_default_instance_);_TowerMonthlyDetail_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerMonthlyDetail_default_instance_);_TowerRecordHandbookReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerRecordHandbookReq_default_instance_);_TowerRecordHandbookRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TowerRecordHandbookRsp_default_instance_);_TowerFloorRecord_PassedLevelMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_TowerFloorRecord_PassedLevelMapEntry_default_instance_._instance.get_mutable());
  _TowerFloorRecord_PassedLevelMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _TowerCurLevelRecordChangeNotify_default_instance_._instance.get_mutable()->cur_level_record_ = const_cast< ::proto::TowerCurLevelRecord*>(
      ::proto::TowerCurLevelRecord::internal_default_instance());
  _TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_._instance.get_mutable());
  _TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_._instance.get_mutable());
  _TowerAllDataRsp_FloorOpenTimeMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _TowerAllDataRsp_default_instance_._instance.get_mutable()->last_schedule_monthly_brief_ = const_cast< ::proto::TowerMonthlyBrief*>(
      ::proto::TowerMonthlyBrief::internal_default_instance());
  _TowerAllDataRsp_default_instance_._instance.get_mutable()->cur_level_record_ = const_cast< ::proto::TowerCurLevelRecord*>(
      ::proto::TowerCurLevelRecord::internal_default_instance());
  _TowerAllDataRsp_default_instance_._instance.get_mutable()->monthly_brief_ = const_cast< ::proto::TowerMonthlyBrief*>(
      ::proto::TowerMonthlyBrief::internal_default_instance());
  _TowerMonthlyCombatRecord_default_instance_._instance.get_mutable()->most_kill_avatar_pair_ = const_cast< ::proto::TowerFightRecordPair*>(
      ::proto::TowerFightRecordPair::internal_default_instance());
  _TowerMonthlyCombatRecord_default_instance_._instance.get_mutable()->most_cast_normal_skill_avatar_pair_ = const_cast< ::proto::TowerFightRecordPair*>(
      ::proto::TowerFightRecordPair::internal_default_instance());
  _TowerMonthlyCombatRecord_default_instance_._instance.get_mutable()->most_cast_energy_skill_avatar_pair_ = const_cast< ::proto::TowerFightRecordPair*>(
      ::proto::TowerFightRecordPair::internal_default_instance());
  _TowerMonthlyCombatRecord_default_instance_._instance.get_mutable()->highest_dps_avatr_pair_ = const_cast< ::proto::TowerFightRecordPair*>(
      ::proto::TowerFightRecordPair::internal_default_instance());
  _TowerMonthlyCombatRecord_default_instance_._instance.get_mutable()->most_take_damage_avatar_pair_ = const_cast< ::proto::TowerFightRecordPair*>(
      ::proto::TowerFightRecordPair::internal_default_instance());
  _TowerMonthlyDetail_default_instance_._instance.get_mutable()->monthly_combat_record_ = const_cast< ::proto::TowerMonthlyCombatRecord*>(
      ::proto::TowerMonthlyCombatRecord::internal_default_instance());
  _TowerMonthlyDetail_default_instance_._instance.get_mutable()->monthly_brief_ = const_cast< ::proto::TowerMonthlyBrief*>(
      ::proto::TowerMonthlyBrief::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023cmd/cmd_tower.proto\022\005proto\032\014define.pro"
      "to\"<\n\tTowerTeam\022\025\n\rtower_team_id\030\003 \001(\r\022\030"
      "\n\020avatar_guid_list\030\016 \003(\004\"A\n\020TowerLevelRe"
      "cord\022\033\n\023satisfied_cond_list\030\r \003(\r\022\020\n\010lev"
      "el_id\030\n \001(\r\"\201\002\n\020TowerFloorRecord\022\"\n\032floo"
      "r_star_reward_progress\030\017 \001(\r\022E\n\020passed_l"
      "evel_map\030\010 \003(\0132+.proto.TowerFloorRecord."
      "PassedLevelMapEntry\022\020\n\010floor_id\030\014 \001(\r\0229\n"
      "\030passed_level_record_list\030\002 \003(\0132\027.proto."
      "TowerLevelRecord\0325\n\023PassedLevelMapEntry\022"
      "\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\256\001\n\023Towe"
      "rCurLevelRecord\022)\n\017tower_team_list\030\010 \003(\013"
      "2\020.proto.TowerTeam\022\020\n\010is_empty\030\006 \001(\010\022\024\n\014"
      "buff_id_list\030\004 \003(\r\022\025\n\ris_upper_part\030\002 \001("
      "\010\022\027\n\017cur_level_index\030\001 \001(\r\022\024\n\014cur_floor_"
      "id\030\017 \001(\r\"\341\001\n\024TowerBriefDataNotify\022\026\n\016tot"
      "al_star_num\030\013 \001(\r\022\030\n\020last_floor_index\030\010 "
      "\001(\r\022\033\n\023schedule_start_time\030\017 \001(\r\022!\n\031next"
      "_schedule_change_time\030\006 \001(\r\022\"\n\032is_finish"
      "ed_entrance_floor\030\016 \001(\010\022\030\n\020last_level_in"
      "dex\030\004 \001(\r\022\031\n\021tower_schedule_id\030\005 \001(\r\"|\n\034"
      "TowerFloorRecordChangeNotify\022\"\n\032is_finis"
      "hed_entrance_floor\030\013 \001(\010\0228\n\027tower_floor_"
      "record_list\030\010 \003(\0132\027.proto.TowerFloorReco"
      "rd\"W\n\037TowerCurLevelRecordChangeNotify\0224\n"
      "\020cur_level_record\030\n \001(\0132\032.proto.TowerCur"
      "LevelRecord\"Y\n$TowerDailyRewardProgressC"
      "hangeNotify\022\026\n\016daily_floor_id\030\017 \001(\r\022\031\n\021d"
      "aily_level_index\030\t \001(\r\"Q\n\022TowerTeamSelec"
      "tReq\022)\n\017tower_team_list\030\013 \003(\0132\020.proto.To"
      "werTeam\022\020\n\010floor_id\030\n \001(\r\"%\n\022TowerTeamSe"
      "lectRsp\022\017\n\007retcode\030\010 \001(\005\"&\n\017TowerAllData"
      "Req\022\023\n\013is_interact\030\002 \001(\010\"|\n\021TowerMonthly"
      "Brief\022\031\n\021tower_schedule_id\030\017 \001(\r\022\030\n\020best"
      "_floor_index\030\006 \001(\r\022\030\n\020best_level_index\030\003"
      " \001(\r\022\030\n\020total_star_count\030\014 \001(\r\"\340\006\n\017Tower"
      "AllDataRsp\022\031\n\021tower_schedule_id\030\n \001(\r\022\031\n"
      "\021daily_level_index\030\t \001(\r\022e\n\"skip_floor_g"
      "ranted_reward_item_map\030\014 \003(\01329.proto.Tow"
      "erAllDataRsp.SkipFloorGrantedRewardItemM"
      "apEntry\022\031\n\021is_first_interact\030\003 \001(\010\022\"\n\032is"
      "_finished_entrance_floor\030\001 \001(\010\0228\n\027tower_"
      "floor_record_list\030\005 \003(\0132\027.proto.TowerFlo"
      "orRecord\022\026\n\016daily_floor_id\030\013 \001(\r\022\037\n\027comm"
      "emorative_reward_id\030\r \001(\r\022>\n\033last_schedu"
      "le_monthly_brief\030\306\t \001(\0132\030.proto.TowerMon"
      "thlyBrief\022!\n\031next_schedule_change_time\030\006"
      " \001(\r\022\036\n\026valid_tower_record_num\030\007 \001(\r\022\033\n\023"
      "skip_to_floor_index\030\002 \001(\r\022I\n\023floor_open_"
      "time_map\030\004 \003(\0132,.proto.TowerAllDataRsp.F"
      "loorOpenTimeMapEntry\0224\n\020cur_level_record"
      "\030\017 \001(\0132\032.proto.TowerCurLevelRecord\022\017\n\007re"
      "tcode\030\010 \001(\005\022\034\n\023schedule_start_time\030\222\007 \001("
      "\r\022/\n\rmonthly_brief\030\016 \001(\0132\030.proto.TowerMo"
      "nthlyBrief\032D\n\"SkipFloorGrantedRewardItem"
      "MapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001"
      "\0327\n\025FloorOpenTimeMapEntry\022\013\n\003key\030\001 \001(\r\022\r"
      "\n\005value\030\002 \001(\r:\0028\001\",\n\022TowerEnterLevelReq\022"
      "\026\n\016enter_point_id\030\003 \001(\r\"h\n\022TowerEnterLev"
      "elRsp\022\032\n\022tower_buff_id_list\030\n \003(\r\022\017\n\007ret"
      "code\030\001 \001(\005\022\023\n\013level_index\030\016 \001(\r\022\020\n\010floor"
      "_id\030\005 \001(\r\"+\n\022TowerBuffSelectReq\022\025\n\rtower"
      "_buff_id\030\005 \001(\r\"<\n\022TowerBuffSelectRsp\022\017\n\007"
      "retcode\030\013 \001(\005\022\025\n\rtower_buff_id\030\r \001(\r\"\023\n\021"
      "TowerSurrenderReq\"$\n\021TowerSurrenderRsp\022\017"
      "\n\007retcode\030\t \001(\005\".\n\032TowerGetFloorStarRewa"
      "rdReq\022\020\n\010floor_id\030\017 \001(\r\"\?\n\032TowerGetFloor"
      "StarRewardRsp\022\017\n\007retcode\030\013 \001(\005\022\020\n\010floor_"
      "id\030\t \001(\r\"\262\002\n\023TowerLevelEndNotify\022\025\n\rnext"
      "_floor_id\030\004 \001(\r\022*\n\020reward_item_list\030\014 \003("
      "\0132\020.proto.ItemParam\022\026\n\016continue_state\030\017 "
      "\001(\r\022\022\n\nis_success\030\005 \001(\010\022\037\n\027finished_star"
      "_cond_list\030\006 \003(\r\"\212\001\n\021ContinueStateType\022#"
      "\n\037CONTINUE_STATE_CAN_NOT_CONTINUE\020\000\022\'\n#C"
      "ONTINUE_STATE_CAN_ENTER_NEXT_LEVEL\020\001\022\'\n#"
      "CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR\020\002\"h\n"
      "\026TowerLevelStarCondData\022\017\n\007is_fail\030\017 \001(\010"
      "\022\022\n\ncond_value\030\t \001(\r\022\020\n\010is_pause\030\r \001(\010\022\027"
      "\n\017star_cond_index\030\006 \001(\r\"x\n\030TowerLevelSta"
      "rCondNotify\022\023\n\013level_index\030\016 \001(\r\022\020\n\010floo"
      "r_id\030\013 \001(\r\0225\n\016cond_data_list\030\t \003(\0132\035.pro"
      "to.TowerLevelStarCondData\"\"\n TowerMiddle"
      "LevelChangeTeamNotify\"7\n\024TowerFightRecor"
      "dPair\022\021\n\tavatar_id\030\001 \001(\r\022\014\n\004data\030\003 \001(\r\"\246"
      "\003\n\030TowerMonthlyCombatRecord\022:\n\025most_kill"
      "_avatar_pair\030\016 \001(\0132\033.proto.TowerFightRec"
      "ordPair\022G\n\"most_cast_normal_skill_avatar"
      "_pair\030\010 \001(\0132\033.proto.TowerFightRecordPair"
      "\022<\n\027most_reveal_avatar_list\030\006 \003(\0132\033.prot"
      "o.TowerFightRecordPair\022G\n\"most_cast_ener"
      "gy_skill_avatar_pair\030\004 \001(\0132\033.proto.Tower"
      "FightRecordPair\022;\n\026highest_dps_avatr_pai"
      "r\030\014 \001(\0132\033.proto.TowerFightRecordPair\022A\n\034"
      "most_take_damage_avatar_pair\030\t \001(\0132\033.pro"
      "to.TowerFightRecordPair\"\205\001\n\022TowerMonthly"
      "Detail\022>\n\025monthly_combat_record\030\002 \001(\0132\037."
      "proto.TowerMonthlyCombatRecord\022/\n\rmonthl"
      "y_brief\030\014 \001(\0132\030.proto.TowerMonthlyBrief\""
      "\030\n\026TowerRecordHandbookReq\"a\n\026TowerRecord"
      "HandbookRsp\022\017\n\007retcode\030\007 \001(\005\0226\n\023monthly_"
      "detail_list\030\016 \003(\0132\031.proto.TowerMonthlyDe"
      "tailB(Z&github.com/teyvat-helper/hk4e-pr"
      "oto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4094);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_tower.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5ftower_2eproto

const ::google::protobuf::EnumDescriptor* TowerLevelEndNotify_ContinueStateType_descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_enum_descriptors[0];
}
bool TowerLevelEndNotify_ContinueStateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TowerLevelEndNotify_ContinueStateType TowerLevelEndNotify::CONTINUE_STATE_CAN_NOT_CONTINUE;
const TowerLevelEndNotify_ContinueStateType TowerLevelEndNotify::CONTINUE_STATE_CAN_ENTER_NEXT_LEVEL;
const TowerLevelEndNotify_ContinueStateType TowerLevelEndNotify::CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR;
const TowerLevelEndNotify_ContinueStateType TowerLevelEndNotify::ContinueStateType_MIN;
const TowerLevelEndNotify_ContinueStateType TowerLevelEndNotify::ContinueStateType_MAX;
const int TowerLevelEndNotify::ContinueStateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerTeam::kTowerTeamIdFieldNumber;
const int TowerTeam::kAvatarGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerTeam::TowerTeam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerTeam)
}
TowerTeam::TowerTeam(const TowerTeam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_guid_list_(from.avatar_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tower_team_id_ = from.tower_team_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerTeam)
}

void TowerTeam::SharedCtor() {
  tower_team_id_ = 0u;
  _cached_size_ = 0;
}

TowerTeam::~TowerTeam() {
  // @@protoc_insertion_point(destructor:proto.TowerTeam)
  SharedDtor();
}

void TowerTeam::SharedDtor() {
}

void TowerTeam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerTeam::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerTeam& TowerTeam::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerTeam* TowerTeam::New(::google::protobuf::Arena* arena) const {
  TowerTeam* n = new TowerTeam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerTeam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_list_.Clear();
  tower_team_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TowerTeam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerTeam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 tower_team_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 avatar_guid_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 114u, input, this->mutable_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerTeam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerTeam)
  return false;
#undef DO_
}

void TowerTeam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerTeam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tower_team_id = 3;
  if (this->tower_team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tower_team_id(), output);
  }

  // repeated uint64 avatar_guid_list = 14;
  if (this->avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerTeam)
}

::google::protobuf::uint8* TowerTeam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerTeam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tower_team_id = 3;
  if (this->tower_team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tower_team_id(), target);
  }

  // repeated uint64 avatar_guid_list = 14;
  if (this->avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerTeam)
  return target;
}

size_t TowerTeam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerTeam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_guid_list = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 tower_team_id = 3;
  if (this->tower_team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_team_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerTeam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerTeam)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerTeam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerTeam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerTeam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerTeam)
    MergeFrom(*source);
  }
}

void TowerTeam::MergeFrom(const TowerTeam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerTeam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_guid_list_.MergeFrom(from.avatar_guid_list_);
  if (from.tower_team_id() != 0) {
    set_tower_team_id(from.tower_team_id());
  }
}

void TowerTeam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerTeam::CopyFrom(const TowerTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerTeam::IsInitialized() const {
  return true;
}

void TowerTeam::Swap(TowerTeam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerTeam::InternalSwap(TowerTeam* other) {
  using std::swap;
  avatar_guid_list_.InternalSwap(&other->avatar_guid_list_);
  swap(tower_team_id_, other->tower_team_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerTeam::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerTeam

// uint32 tower_team_id = 3;
void TowerTeam::clear_tower_team_id() {
  tower_team_id_ = 0u;
}
::google::protobuf::uint32 TowerTeam::tower_team_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerTeam.tower_team_id)
  return tower_team_id_;
}
void TowerTeam::set_tower_team_id(::google::protobuf::uint32 value) {
  
  tower_team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerTeam.tower_team_id)
}

// repeated uint64 avatar_guid_list = 14;
int TowerTeam::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
void TowerTeam::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
::google::protobuf::uint64 TowerTeam::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerTeam.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
void TowerTeam::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerTeam.avatar_guid_list)
}
void TowerTeam::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerTeam.avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TowerTeam::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerTeam.avatar_guid_list)
  return avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TowerTeam::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerTeam.avatar_guid_list)
  return &avatar_guid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerLevelRecord::kSatisfiedCondListFieldNumber;
const int TowerLevelRecord::kLevelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerLevelRecord::TowerLevelRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerLevelRecord)
}
TowerLevelRecord::TowerLevelRecord(const TowerLevelRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      satisfied_cond_list_(from.satisfied_cond_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_id_ = from.level_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerLevelRecord)
}

void TowerLevelRecord::SharedCtor() {
  level_id_ = 0u;
  _cached_size_ = 0;
}

TowerLevelRecord::~TowerLevelRecord() {
  // @@protoc_insertion_point(destructor:proto.TowerLevelRecord)
  SharedDtor();
}

void TowerLevelRecord::SharedDtor() {
}

void TowerLevelRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerLevelRecord::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerLevelRecord& TowerLevelRecord::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerLevelRecord* TowerLevelRecord::New(::google::protobuf::Arena* arena) const {
  TowerLevelRecord* n = new TowerLevelRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerLevelRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerLevelRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  satisfied_cond_list_.Clear();
  level_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TowerLevelRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerLevelRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 satisfied_cond_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_satisfied_cond_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106u, input, this->mutable_satisfied_cond_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerLevelRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerLevelRecord)
  return false;
#undef DO_
}

void TowerLevelRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerLevelRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level_id = 10;
  if (this->level_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->level_id(), output);
  }

  // repeated uint32 satisfied_cond_list = 13;
  if (this->satisfied_cond_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _satisfied_cond_list_cached_byte_size_));
  }
  for (int i = 0, n = this->satisfied_cond_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->satisfied_cond_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerLevelRecord)
}

::google::protobuf::uint8* TowerLevelRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerLevelRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level_id = 10;
  if (this->level_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->level_id(), target);
  }

  // repeated uint32 satisfied_cond_list = 13;
  if (this->satisfied_cond_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _satisfied_cond_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->satisfied_cond_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerLevelRecord)
  return target;
}

size_t TowerLevelRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerLevelRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 satisfied_cond_list = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->satisfied_cond_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _satisfied_cond_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 level_id = 10;
  if (this->level_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerLevelRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerLevelRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerLevelRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerLevelRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerLevelRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerLevelRecord)
    MergeFrom(*source);
  }
}

void TowerLevelRecord::MergeFrom(const TowerLevelRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerLevelRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  satisfied_cond_list_.MergeFrom(from.satisfied_cond_list_);
  if (from.level_id() != 0) {
    set_level_id(from.level_id());
  }
}

void TowerLevelRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerLevelRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerLevelRecord::CopyFrom(const TowerLevelRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerLevelRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerLevelRecord::IsInitialized() const {
  return true;
}

void TowerLevelRecord::Swap(TowerLevelRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerLevelRecord::InternalSwap(TowerLevelRecord* other) {
  using std::swap;
  satisfied_cond_list_.InternalSwap(&other->satisfied_cond_list_);
  swap(level_id_, other->level_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerLevelRecord::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerLevelRecord

// repeated uint32 satisfied_cond_list = 13;
int TowerLevelRecord::satisfied_cond_list_size() const {
  return satisfied_cond_list_.size();
}
void TowerLevelRecord::clear_satisfied_cond_list() {
  satisfied_cond_list_.Clear();
}
::google::protobuf::uint32 TowerLevelRecord::satisfied_cond_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelRecord.satisfied_cond_list)
  return satisfied_cond_list_.Get(index);
}
void TowerLevelRecord::set_satisfied_cond_list(int index, ::google::protobuf::uint32 value) {
  satisfied_cond_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerLevelRecord.satisfied_cond_list)
}
void TowerLevelRecord::add_satisfied_cond_list(::google::protobuf::uint32 value) {
  satisfied_cond_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerLevelRecord.satisfied_cond_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerLevelRecord::satisfied_cond_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelRecord.satisfied_cond_list)
  return satisfied_cond_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerLevelRecord::mutable_satisfied_cond_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelRecord.satisfied_cond_list)
  return &satisfied_cond_list_;
}

// uint32 level_id = 10;
void TowerLevelRecord::clear_level_id() {
  level_id_ = 0u;
}
::google::protobuf::uint32 TowerLevelRecord::level_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelRecord.level_id)
  return level_id_;
}
void TowerLevelRecord::set_level_id(::google::protobuf::uint32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelRecord.level_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

TowerFloorRecord::TowerFloorRecord_PassedLevelMapEntry::TowerFloorRecord_PassedLevelMapEntry() {}
TowerFloorRecord::TowerFloorRecord_PassedLevelMapEntry::TowerFloorRecord_PassedLevelMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata TowerFloorRecord::TowerFloorRecord_PassedLevelMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[2];
}
void TowerFloorRecord::TowerFloorRecord_PassedLevelMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void TowerFloorRecord::TowerFloorRecord_PassedLevelMapEntry::MergeFrom(const TowerFloorRecord_PassedLevelMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerFloorRecord::kFloorStarRewardProgressFieldNumber;
const int TowerFloorRecord::kPassedLevelMapFieldNumber;
const int TowerFloorRecord::kFloorIdFieldNumber;
const int TowerFloorRecord::kPassedLevelRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerFloorRecord::TowerFloorRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerFloorRecord)
}
TowerFloorRecord::TowerFloorRecord(const TowerFloorRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      passed_level_record_list_(from.passed_level_record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passed_level_map_.MergeFrom(from.passed_level_map_);
  ::memcpy(&floor_id_, &from.floor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&floor_star_reward_progress_) -
    reinterpret_cast<char*>(&floor_id_)) + sizeof(floor_star_reward_progress_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerFloorRecord)
}

void TowerFloorRecord::SharedCtor() {
  ::memset(&floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&floor_star_reward_progress_) -
      reinterpret_cast<char*>(&floor_id_)) + sizeof(floor_star_reward_progress_));
  _cached_size_ = 0;
}

TowerFloorRecord::~TowerFloorRecord() {
  // @@protoc_insertion_point(destructor:proto.TowerFloorRecord)
  SharedDtor();
}

void TowerFloorRecord::SharedDtor() {
}

void TowerFloorRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerFloorRecord::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerFloorRecord& TowerFloorRecord::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerFloorRecord* TowerFloorRecord::New(::google::protobuf::Arena* arena) const {
  TowerFloorRecord* n = new TowerFloorRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerFloorRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerFloorRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  passed_level_record_list_.Clear();
  passed_level_map_.Clear();
  ::memset(&floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&floor_star_reward_progress_) -
      reinterpret_cast<char*>(&floor_id_)) + sizeof(floor_star_reward_progress_));
  _internal_metadata_.Clear();
}

bool TowerFloorRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerFloorRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.TowerLevelRecord passed_level_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_passed_level_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> passed_level_map = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          TowerFloorRecord_PassedLevelMapEntry::Parser< ::google::protobuf::internal::MapField<
              TowerFloorRecord_PassedLevelMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&passed_level_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 floor_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 floor_star_reward_progress = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_star_reward_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerFloorRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerFloorRecord)
  return false;
#undef DO_
}

void TowerFloorRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerFloorRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TowerLevelRecord passed_level_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->passed_level_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->passed_level_record_list(static_cast<int>(i)), output);
  }

  // map<uint32, uint32> passed_level_map = 8;
  if (!this->passed_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->passed_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->passed_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->passed_level_map().begin();
          it != this->passed_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TowerFloorRecord_PassedLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(passed_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<TowerFloorRecord_PassedLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->passed_level_map().begin();
          it != this->passed_level_map().end(); ++it) {
        entry.reset(passed_level_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    }
  }

  // uint32 floor_id = 12;
  if (this->floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->floor_id(), output);
  }

  // uint32 floor_star_reward_progress = 15;
  if (this->floor_star_reward_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->floor_star_reward_progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerFloorRecord)
}

::google::protobuf::uint8* TowerFloorRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerFloorRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TowerLevelRecord passed_level_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->passed_level_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->passed_level_record_list(static_cast<int>(i)), deterministic, target);
  }

  // map<uint32, uint32> passed_level_map = 8;
  if (!this->passed_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->passed_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->passed_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->passed_level_map().begin();
          it != this->passed_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TowerFloorRecord_PassedLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(passed_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<TowerFloorRecord_PassedLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->passed_level_map().begin();
          it != this->passed_level_map().end(); ++it) {
        entry.reset(passed_level_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 floor_id = 12;
  if (this->floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->floor_id(), target);
  }

  // uint32 floor_star_reward_progress = 15;
  if (this->floor_star_reward_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->floor_star_reward_progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerFloorRecord)
  return target;
}

size_t TowerFloorRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerFloorRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TowerLevelRecord passed_level_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->passed_level_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->passed_level_record_list(static_cast<int>(i)));
    }
  }

  // map<uint32, uint32> passed_level_map = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->passed_level_map_size());
  {
    ::google::protobuf::scoped_ptr<TowerFloorRecord_PassedLevelMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->passed_level_map().begin();
        it != this->passed_level_map().end(); ++it) {
      entry.reset(passed_level_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 floor_id = 12;
  if (this->floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor_id());
  }

  // uint32 floor_star_reward_progress = 15;
  if (this->floor_star_reward_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor_star_reward_progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerFloorRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerFloorRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerFloorRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerFloorRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerFloorRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerFloorRecord)
    MergeFrom(*source);
  }
}

void TowerFloorRecord::MergeFrom(const TowerFloorRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerFloorRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  passed_level_record_list_.MergeFrom(from.passed_level_record_list_);
  passed_level_map_.MergeFrom(from.passed_level_map_);
  if (from.floor_id() != 0) {
    set_floor_id(from.floor_id());
  }
  if (from.floor_star_reward_progress() != 0) {
    set_floor_star_reward_progress(from.floor_star_reward_progress());
  }
}

void TowerFloorRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerFloorRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerFloorRecord::CopyFrom(const TowerFloorRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerFloorRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerFloorRecord::IsInitialized() const {
  return true;
}

void TowerFloorRecord::Swap(TowerFloorRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerFloorRecord::InternalSwap(TowerFloorRecord* other) {
  using std::swap;
  passed_level_record_list_.InternalSwap(&other->passed_level_record_list_);
  passed_level_map_.Swap(&other->passed_level_map_);
  swap(floor_id_, other->floor_id_);
  swap(floor_star_reward_progress_, other->floor_star_reward_progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerFloorRecord::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerFloorRecord

// uint32 floor_star_reward_progress = 15;
void TowerFloorRecord::clear_floor_star_reward_progress() {
  floor_star_reward_progress_ = 0u;
}
::google::protobuf::uint32 TowerFloorRecord::floor_star_reward_progress() const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecord.floor_star_reward_progress)
  return floor_star_reward_progress_;
}
void TowerFloorRecord::set_floor_star_reward_progress(::google::protobuf::uint32 value) {
  
  floor_star_reward_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFloorRecord.floor_star_reward_progress)
}

// map<uint32, uint32> passed_level_map = 8;
int TowerFloorRecord::passed_level_map_size() const {
  return passed_level_map_.size();
}
void TowerFloorRecord::clear_passed_level_map() {
  passed_level_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
TowerFloorRecord::passed_level_map() const {
  // @@protoc_insertion_point(field_map:proto.TowerFloorRecord.passed_level_map)
  return passed_level_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
TowerFloorRecord::mutable_passed_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.TowerFloorRecord.passed_level_map)
  return passed_level_map_.MutableMap();
}

// uint32 floor_id = 12;
void TowerFloorRecord::clear_floor_id() {
  floor_id_ = 0u;
}
::google::protobuf::uint32 TowerFloorRecord::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecord.floor_id)
  return floor_id_;
}
void TowerFloorRecord::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFloorRecord.floor_id)
}

// repeated .proto.TowerLevelRecord passed_level_record_list = 2;
int TowerFloorRecord::passed_level_record_list_size() const {
  return passed_level_record_list_.size();
}
void TowerFloorRecord::clear_passed_level_record_list() {
  passed_level_record_list_.Clear();
}
const ::proto::TowerLevelRecord& TowerFloorRecord::passed_level_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_.Get(index);
}
::proto::TowerLevelRecord* TowerFloorRecord::mutable_passed_level_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_.Mutable(index);
}
::proto::TowerLevelRecord* TowerFloorRecord::add_passed_level_record_list() {
  // @@protoc_insertion_point(field_add:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerLevelRecord >*
TowerFloorRecord::mutable_passed_level_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerFloorRecord.passed_level_record_list)
  return &passed_level_record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelRecord >&
TowerFloorRecord::passed_level_record_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerFloorRecord.passed_level_record_list)
  return passed_level_record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerCurLevelRecord::kTowerTeamListFieldNumber;
const int TowerCurLevelRecord::kIsEmptyFieldNumber;
const int TowerCurLevelRecord::kBuffIdListFieldNumber;
const int TowerCurLevelRecord::kIsUpperPartFieldNumber;
const int TowerCurLevelRecord::kCurLevelIndexFieldNumber;
const int TowerCurLevelRecord::kCurFloorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerCurLevelRecord::TowerCurLevelRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerCurLevelRecord)
}
TowerCurLevelRecord::TowerCurLevelRecord(const TowerCurLevelRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      buff_id_list_(from.buff_id_list_),
      tower_team_list_(from.tower_team_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cur_level_index_, &from.cur_level_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_floor_id_) -
    reinterpret_cast<char*>(&cur_level_index_)) + sizeof(cur_floor_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerCurLevelRecord)
}

void TowerCurLevelRecord::SharedCtor() {
  ::memset(&cur_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_floor_id_) -
      reinterpret_cast<char*>(&cur_level_index_)) + sizeof(cur_floor_id_));
  _cached_size_ = 0;
}

TowerCurLevelRecord::~TowerCurLevelRecord() {
  // @@protoc_insertion_point(destructor:proto.TowerCurLevelRecord)
  SharedDtor();
}

void TowerCurLevelRecord::SharedDtor() {
}

void TowerCurLevelRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerCurLevelRecord::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerCurLevelRecord& TowerCurLevelRecord::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerCurLevelRecord* TowerCurLevelRecord::New(::google::protobuf::Arena* arena) const {
  TowerCurLevelRecord* n = new TowerCurLevelRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerCurLevelRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerCurLevelRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buff_id_list_.Clear();
  tower_team_list_.Clear();
  ::memset(&cur_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_floor_id_) -
      reinterpret_cast<char*>(&cur_level_index_)) + sizeof(cur_floor_id_));
  _internal_metadata_.Clear();
}

bool TowerCurLevelRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerCurLevelRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cur_level_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_upper_part = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_upper_part_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 buff_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buff_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_buff_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_empty = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_empty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.TowerTeam tower_team_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tower_team_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_floor_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerCurLevelRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerCurLevelRecord)
  return false;
#undef DO_
}

void TowerCurLevelRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerCurLevelRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_level_index = 1;
  if (this->cur_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_level_index(), output);
  }

  // bool is_upper_part = 2;
  if (this->is_upper_part() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_upper_part(), output);
  }

  // repeated uint32 buff_id_list = 4;
  if (this->buff_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _buff_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->buff_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->buff_id_list(i), output);
  }

  // bool is_empty = 6;
  if (this->is_empty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_empty(), output);
  }

  // repeated .proto.TowerTeam tower_team_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_team_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->tower_team_list(static_cast<int>(i)), output);
  }

  // uint32 cur_floor_id = 15;
  if (this->cur_floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->cur_floor_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerCurLevelRecord)
}

::google::protobuf::uint8* TowerCurLevelRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerCurLevelRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_level_index = 1;
  if (this->cur_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_level_index(), target);
  }

  // bool is_upper_part = 2;
  if (this->is_upper_part() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_upper_part(), target);
  }

  // repeated uint32 buff_id_list = 4;
  if (this->buff_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _buff_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->buff_id_list_, target);
  }

  // bool is_empty = 6;
  if (this->is_empty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_empty(), target);
  }

  // repeated .proto.TowerTeam tower_team_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_team_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->tower_team_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 cur_floor_id = 15;
  if (this->cur_floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->cur_floor_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerCurLevelRecord)
  return target;
}

size_t TowerCurLevelRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerCurLevelRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 buff_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->buff_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buff_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.TowerTeam tower_team_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->tower_team_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower_team_list(static_cast<int>(i)));
    }
  }

  // uint32 cur_level_index = 1;
  if (this->cur_level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_level_index());
  }

  // bool is_empty = 6;
  if (this->is_empty() != 0) {
    total_size += 1 + 1;
  }

  // bool is_upper_part = 2;
  if (this->is_upper_part() != 0) {
    total_size += 1 + 1;
  }

  // uint32 cur_floor_id = 15;
  if (this->cur_floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_floor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerCurLevelRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerCurLevelRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerCurLevelRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerCurLevelRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerCurLevelRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerCurLevelRecord)
    MergeFrom(*source);
  }
}

void TowerCurLevelRecord::MergeFrom(const TowerCurLevelRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerCurLevelRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buff_id_list_.MergeFrom(from.buff_id_list_);
  tower_team_list_.MergeFrom(from.tower_team_list_);
  if (from.cur_level_index() != 0) {
    set_cur_level_index(from.cur_level_index());
  }
  if (from.is_empty() != 0) {
    set_is_empty(from.is_empty());
  }
  if (from.is_upper_part() != 0) {
    set_is_upper_part(from.is_upper_part());
  }
  if (from.cur_floor_id() != 0) {
    set_cur_floor_id(from.cur_floor_id());
  }
}

void TowerCurLevelRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerCurLevelRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerCurLevelRecord::CopyFrom(const TowerCurLevelRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerCurLevelRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerCurLevelRecord::IsInitialized() const {
  return true;
}

void TowerCurLevelRecord::Swap(TowerCurLevelRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerCurLevelRecord::InternalSwap(TowerCurLevelRecord* other) {
  using std::swap;
  buff_id_list_.InternalSwap(&other->buff_id_list_);
  tower_team_list_.InternalSwap(&other->tower_team_list_);
  swap(cur_level_index_, other->cur_level_index_);
  swap(is_empty_, other->is_empty_);
  swap(is_upper_part_, other->is_upper_part_);
  swap(cur_floor_id_, other->cur_floor_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerCurLevelRecord::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerCurLevelRecord

// repeated .proto.TowerTeam tower_team_list = 8;
int TowerCurLevelRecord::tower_team_list_size() const {
  return tower_team_list_.size();
}
void TowerCurLevelRecord::clear_tower_team_list() {
  tower_team_list_.Clear();
}
const ::proto::TowerTeam& TowerCurLevelRecord::tower_team_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_.Get(index);
}
::proto::TowerTeam* TowerCurLevelRecord::mutable_tower_team_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_.Mutable(index);
}
::proto::TowerTeam* TowerCurLevelRecord::add_tower_team_list() {
  // @@protoc_insertion_point(field_add:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >*
TowerCurLevelRecord::mutable_tower_team_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerCurLevelRecord.tower_team_list)
  return &tower_team_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >&
TowerCurLevelRecord::tower_team_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerCurLevelRecord.tower_team_list)
  return tower_team_list_;
}

// bool is_empty = 6;
void TowerCurLevelRecord::clear_is_empty() {
  is_empty_ = false;
}
bool TowerCurLevelRecord::is_empty() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.is_empty)
  return is_empty_;
}
void TowerCurLevelRecord::set_is_empty(bool value) {
  
  is_empty_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.is_empty)
}

// repeated uint32 buff_id_list = 4;
int TowerCurLevelRecord::buff_id_list_size() const {
  return buff_id_list_.size();
}
void TowerCurLevelRecord::clear_buff_id_list() {
  buff_id_list_.Clear();
}
::google::protobuf::uint32 TowerCurLevelRecord::buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.buff_id_list)
  return buff_id_list_.Get(index);
}
void TowerCurLevelRecord::set_buff_id_list(int index, ::google::protobuf::uint32 value) {
  buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.buff_id_list)
}
void TowerCurLevelRecord::add_buff_id_list(::google::protobuf::uint32 value) {
  buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerCurLevelRecord.buff_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerCurLevelRecord::buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerCurLevelRecord.buff_id_list)
  return buff_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerCurLevelRecord::mutable_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerCurLevelRecord.buff_id_list)
  return &buff_id_list_;
}

// bool is_upper_part = 2;
void TowerCurLevelRecord::clear_is_upper_part() {
  is_upper_part_ = false;
}
bool TowerCurLevelRecord::is_upper_part() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.is_upper_part)
  return is_upper_part_;
}
void TowerCurLevelRecord::set_is_upper_part(bool value) {
  
  is_upper_part_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.is_upper_part)
}

// uint32 cur_level_index = 1;
void TowerCurLevelRecord::clear_cur_level_index() {
  cur_level_index_ = 0u;
}
::google::protobuf::uint32 TowerCurLevelRecord::cur_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.cur_level_index)
  return cur_level_index_;
}
void TowerCurLevelRecord::set_cur_level_index(::google::protobuf::uint32 value) {
  
  cur_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.cur_level_index)
}

// uint32 cur_floor_id = 15;
void TowerCurLevelRecord::clear_cur_floor_id() {
  cur_floor_id_ = 0u;
}
::google::protobuf::uint32 TowerCurLevelRecord::cur_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecord.cur_floor_id)
  return cur_floor_id_;
}
void TowerCurLevelRecord::set_cur_floor_id(::google::protobuf::uint32 value) {
  
  cur_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerCurLevelRecord.cur_floor_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerBriefDataNotify::kTotalStarNumFieldNumber;
const int TowerBriefDataNotify::kLastFloorIndexFieldNumber;
const int TowerBriefDataNotify::kScheduleStartTimeFieldNumber;
const int TowerBriefDataNotify::kNextScheduleChangeTimeFieldNumber;
const int TowerBriefDataNotify::kIsFinishedEntranceFloorFieldNumber;
const int TowerBriefDataNotify::kLastLevelIndexFieldNumber;
const int TowerBriefDataNotify::kTowerScheduleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerBriefDataNotify::TowerBriefDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerBriefDataNotify)
}
TowerBriefDataNotify::TowerBriefDataNotify(const TowerBriefDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_level_index_, &from.last_level_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_finished_entrance_floor_) -
    reinterpret_cast<char*>(&last_level_index_)) + sizeof(is_finished_entrance_floor_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerBriefDataNotify)
}

void TowerBriefDataNotify::SharedCtor() {
  ::memset(&last_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finished_entrance_floor_) -
      reinterpret_cast<char*>(&last_level_index_)) + sizeof(is_finished_entrance_floor_));
  _cached_size_ = 0;
}

TowerBriefDataNotify::~TowerBriefDataNotify() {
  // @@protoc_insertion_point(destructor:proto.TowerBriefDataNotify)
  SharedDtor();
}

void TowerBriefDataNotify::SharedDtor() {
}

void TowerBriefDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerBriefDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerBriefDataNotify& TowerBriefDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerBriefDataNotify* TowerBriefDataNotify::New(::google::protobuf::Arena* arena) const {
  TowerBriefDataNotify* n = new TowerBriefDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerBriefDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerBriefDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&last_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finished_entrance_floor_) -
      reinterpret_cast<char*>(&last_level_index_)) + sizeof(is_finished_entrance_floor_));
  _internal_metadata_.Clear();
}

bool TowerBriefDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerBriefDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 last_level_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tower_schedule_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 next_schedule_change_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_schedule_change_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_floor_index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_floor_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_star_num = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_star_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished_entrance_floor = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_entrance_floor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_start_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerBriefDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerBriefDataNotify)
  return false;
#undef DO_
}

void TowerBriefDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerBriefDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_level_index = 4;
  if (this->last_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->last_level_index(), output);
  }

  // uint32 tower_schedule_id = 5;
  if (this->tower_schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->tower_schedule_id(), output);
  }

  // uint32 next_schedule_change_time = 6;
  if (this->next_schedule_change_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->next_schedule_change_time(), output);
  }

  // uint32 last_floor_index = 8;
  if (this->last_floor_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->last_floor_index(), output);
  }

  // uint32 total_star_num = 11;
  if (this->total_star_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->total_star_num(), output);
  }

  // bool is_finished_entrance_floor = 14;
  if (this->is_finished_entrance_floor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_finished_entrance_floor(), output);
  }

  // uint32 schedule_start_time = 15;
  if (this->schedule_start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->schedule_start_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerBriefDataNotify)
}

::google::protobuf::uint8* TowerBriefDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerBriefDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_level_index = 4;
  if (this->last_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->last_level_index(), target);
  }

  // uint32 tower_schedule_id = 5;
  if (this->tower_schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->tower_schedule_id(), target);
  }

  // uint32 next_schedule_change_time = 6;
  if (this->next_schedule_change_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->next_schedule_change_time(), target);
  }

  // uint32 last_floor_index = 8;
  if (this->last_floor_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->last_floor_index(), target);
  }

  // uint32 total_star_num = 11;
  if (this->total_star_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->total_star_num(), target);
  }

  // bool is_finished_entrance_floor = 14;
  if (this->is_finished_entrance_floor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_finished_entrance_floor(), target);
  }

  // uint32 schedule_start_time = 15;
  if (this->schedule_start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->schedule_start_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerBriefDataNotify)
  return target;
}

size_t TowerBriefDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerBriefDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 last_level_index = 4;
  if (this->last_level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_level_index());
  }

  // uint32 tower_schedule_id = 5;
  if (this->tower_schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_schedule_id());
  }

  // uint32 next_schedule_change_time = 6;
  if (this->next_schedule_change_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->next_schedule_change_time());
  }

  // uint32 last_floor_index = 8;
  if (this->last_floor_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_floor_index());
  }

  // uint32 schedule_start_time = 15;
  if (this->schedule_start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_start_time());
  }

  // uint32 total_star_num = 11;
  if (this->total_star_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_star_num());
  }

  // bool is_finished_entrance_floor = 14;
  if (this->is_finished_entrance_floor() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerBriefDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerBriefDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerBriefDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerBriefDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerBriefDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerBriefDataNotify)
    MergeFrom(*source);
  }
}

void TowerBriefDataNotify::MergeFrom(const TowerBriefDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerBriefDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_level_index() != 0) {
    set_last_level_index(from.last_level_index());
  }
  if (from.tower_schedule_id() != 0) {
    set_tower_schedule_id(from.tower_schedule_id());
  }
  if (from.next_schedule_change_time() != 0) {
    set_next_schedule_change_time(from.next_schedule_change_time());
  }
  if (from.last_floor_index() != 0) {
    set_last_floor_index(from.last_floor_index());
  }
  if (from.schedule_start_time() != 0) {
    set_schedule_start_time(from.schedule_start_time());
  }
  if (from.total_star_num() != 0) {
    set_total_star_num(from.total_star_num());
  }
  if (from.is_finished_entrance_floor() != 0) {
    set_is_finished_entrance_floor(from.is_finished_entrance_floor());
  }
}

void TowerBriefDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerBriefDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerBriefDataNotify::CopyFrom(const TowerBriefDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerBriefDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerBriefDataNotify::IsInitialized() const {
  return true;
}

void TowerBriefDataNotify::Swap(TowerBriefDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerBriefDataNotify::InternalSwap(TowerBriefDataNotify* other) {
  using std::swap;
  swap(last_level_index_, other->last_level_index_);
  swap(tower_schedule_id_, other->tower_schedule_id_);
  swap(next_schedule_change_time_, other->next_schedule_change_time_);
  swap(last_floor_index_, other->last_floor_index_);
  swap(schedule_start_time_, other->schedule_start_time_);
  swap(total_star_num_, other->total_star_num_);
  swap(is_finished_entrance_floor_, other->is_finished_entrance_floor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerBriefDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerBriefDataNotify

// uint32 total_star_num = 11;
void TowerBriefDataNotify::clear_total_star_num() {
  total_star_num_ = 0u;
}
::google::protobuf::uint32 TowerBriefDataNotify::total_star_num() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.total_star_num)
  return total_star_num_;
}
void TowerBriefDataNotify::set_total_star_num(::google::protobuf::uint32 value) {
  
  total_star_num_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.total_star_num)
}

// uint32 last_floor_index = 8;
void TowerBriefDataNotify::clear_last_floor_index() {
  last_floor_index_ = 0u;
}
::google::protobuf::uint32 TowerBriefDataNotify::last_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.last_floor_index)
  return last_floor_index_;
}
void TowerBriefDataNotify::set_last_floor_index(::google::protobuf::uint32 value) {
  
  last_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.last_floor_index)
}

// uint32 schedule_start_time = 15;
void TowerBriefDataNotify::clear_schedule_start_time() {
  schedule_start_time_ = 0u;
}
::google::protobuf::uint32 TowerBriefDataNotify::schedule_start_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.schedule_start_time)
  return schedule_start_time_;
}
void TowerBriefDataNotify::set_schedule_start_time(::google::protobuf::uint32 value) {
  
  schedule_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.schedule_start_time)
}

// uint32 next_schedule_change_time = 6;
void TowerBriefDataNotify::clear_next_schedule_change_time() {
  next_schedule_change_time_ = 0u;
}
::google::protobuf::uint32 TowerBriefDataNotify::next_schedule_change_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.next_schedule_change_time)
  return next_schedule_change_time_;
}
void TowerBriefDataNotify::set_next_schedule_change_time(::google::protobuf::uint32 value) {
  
  next_schedule_change_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.next_schedule_change_time)
}

// bool is_finished_entrance_floor = 14;
void TowerBriefDataNotify::clear_is_finished_entrance_floor() {
  is_finished_entrance_floor_ = false;
}
bool TowerBriefDataNotify::is_finished_entrance_floor() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.is_finished_entrance_floor)
  return is_finished_entrance_floor_;
}
void TowerBriefDataNotify::set_is_finished_entrance_floor(bool value) {
  
  is_finished_entrance_floor_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.is_finished_entrance_floor)
}

// uint32 last_level_index = 4;
void TowerBriefDataNotify::clear_last_level_index() {
  last_level_index_ = 0u;
}
::google::protobuf::uint32 TowerBriefDataNotify::last_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.last_level_index)
  return last_level_index_;
}
void TowerBriefDataNotify::set_last_level_index(::google::protobuf::uint32 value) {
  
  last_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.last_level_index)
}

// uint32 tower_schedule_id = 5;
void TowerBriefDataNotify::clear_tower_schedule_id() {
  tower_schedule_id_ = 0u;
}
::google::protobuf::uint32 TowerBriefDataNotify::tower_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerBriefDataNotify.tower_schedule_id)
  return tower_schedule_id_;
}
void TowerBriefDataNotify::set_tower_schedule_id(::google::protobuf::uint32 value) {
  
  tower_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBriefDataNotify.tower_schedule_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerFloorRecordChangeNotify::kIsFinishedEntranceFloorFieldNumber;
const int TowerFloorRecordChangeNotify::kTowerFloorRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerFloorRecordChangeNotify::TowerFloorRecordChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerFloorRecordChangeNotify)
}
TowerFloorRecordChangeNotify::TowerFloorRecordChangeNotify(const TowerFloorRecordChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tower_floor_record_list_(from.tower_floor_record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_finished_entrance_floor_ = from.is_finished_entrance_floor_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerFloorRecordChangeNotify)
}

void TowerFloorRecordChangeNotify::SharedCtor() {
  is_finished_entrance_floor_ = false;
  _cached_size_ = 0;
}

TowerFloorRecordChangeNotify::~TowerFloorRecordChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.TowerFloorRecordChangeNotify)
  SharedDtor();
}

void TowerFloorRecordChangeNotify::SharedDtor() {
}

void TowerFloorRecordChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerFloorRecordChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerFloorRecordChangeNotify& TowerFloorRecordChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerFloorRecordChangeNotify* TowerFloorRecordChangeNotify::New(::google::protobuf::Arena* arena) const {
  TowerFloorRecordChangeNotify* n = new TowerFloorRecordChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerFloorRecordChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerFloorRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tower_floor_record_list_.Clear();
  is_finished_entrance_floor_ = false;
  _internal_metadata_.Clear();
}

bool TowerFloorRecordChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerFloorRecordChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.TowerFloorRecord tower_floor_record_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tower_floor_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished_entrance_floor = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_entrance_floor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerFloorRecordChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerFloorRecordChangeNotify)
  return false;
#undef DO_
}

void TowerFloorRecordChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerFloorRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TowerFloorRecord tower_floor_record_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_floor_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->tower_floor_record_list(static_cast<int>(i)), output);
  }

  // bool is_finished_entrance_floor = 11;
  if (this->is_finished_entrance_floor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_finished_entrance_floor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerFloorRecordChangeNotify)
}

::google::protobuf::uint8* TowerFloorRecordChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerFloorRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TowerFloorRecord tower_floor_record_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_floor_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->tower_floor_record_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_finished_entrance_floor = 11;
  if (this->is_finished_entrance_floor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_finished_entrance_floor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerFloorRecordChangeNotify)
  return target;
}

size_t TowerFloorRecordChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerFloorRecordChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TowerFloorRecord tower_floor_record_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->tower_floor_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower_floor_record_list(static_cast<int>(i)));
    }
  }

  // bool is_finished_entrance_floor = 11;
  if (this->is_finished_entrance_floor() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerFloorRecordChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerFloorRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerFloorRecordChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerFloorRecordChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerFloorRecordChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerFloorRecordChangeNotify)
    MergeFrom(*source);
  }
}

void TowerFloorRecordChangeNotify::MergeFrom(const TowerFloorRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerFloorRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tower_floor_record_list_.MergeFrom(from.tower_floor_record_list_);
  if (from.is_finished_entrance_floor() != 0) {
    set_is_finished_entrance_floor(from.is_finished_entrance_floor());
  }
}

void TowerFloorRecordChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerFloorRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerFloorRecordChangeNotify::CopyFrom(const TowerFloorRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerFloorRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerFloorRecordChangeNotify::IsInitialized() const {
  return true;
}

void TowerFloorRecordChangeNotify::Swap(TowerFloorRecordChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerFloorRecordChangeNotify::InternalSwap(TowerFloorRecordChangeNotify* other) {
  using std::swap;
  tower_floor_record_list_.InternalSwap(&other->tower_floor_record_list_);
  swap(is_finished_entrance_floor_, other->is_finished_entrance_floor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerFloorRecordChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerFloorRecordChangeNotify

// bool is_finished_entrance_floor = 11;
void TowerFloorRecordChangeNotify::clear_is_finished_entrance_floor() {
  is_finished_entrance_floor_ = false;
}
bool TowerFloorRecordChangeNotify::is_finished_entrance_floor() const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecordChangeNotify.is_finished_entrance_floor)
  return is_finished_entrance_floor_;
}
void TowerFloorRecordChangeNotify::set_is_finished_entrance_floor(bool value) {
  
  is_finished_entrance_floor_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFloorRecordChangeNotify.is_finished_entrance_floor)
}

// repeated .proto.TowerFloorRecord tower_floor_record_list = 8;
int TowerFloorRecordChangeNotify::tower_floor_record_list_size() const {
  return tower_floor_record_list_.size();
}
void TowerFloorRecordChangeNotify::clear_tower_floor_record_list() {
  tower_floor_record_list_.Clear();
}
const ::proto::TowerFloorRecord& TowerFloorRecordChangeNotify::tower_floor_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_.Get(index);
}
::proto::TowerFloorRecord* TowerFloorRecordChangeNotify::mutable_tower_floor_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_.Mutable(index);
}
::proto::TowerFloorRecord* TowerFloorRecordChangeNotify::add_tower_floor_record_list() {
  // @@protoc_insertion_point(field_add:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >*
TowerFloorRecordChangeNotify::mutable_tower_floor_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return &tower_floor_record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >&
TowerFloorRecordChangeNotify::tower_floor_record_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerFloorRecordChangeNotify.tower_floor_record_list)
  return tower_floor_record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerCurLevelRecordChangeNotify::kCurLevelRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerCurLevelRecordChangeNotify::TowerCurLevelRecordChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerCurLevelRecordChangeNotify)
}
TowerCurLevelRecordChangeNotify::TowerCurLevelRecordChangeNotify(const TowerCurLevelRecordChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cur_level_record()) {
    cur_level_record_ = new ::proto::TowerCurLevelRecord(*from.cur_level_record_);
  } else {
    cur_level_record_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.TowerCurLevelRecordChangeNotify)
}

void TowerCurLevelRecordChangeNotify::SharedCtor() {
  cur_level_record_ = NULL;
  _cached_size_ = 0;
}

TowerCurLevelRecordChangeNotify::~TowerCurLevelRecordChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.TowerCurLevelRecordChangeNotify)
  SharedDtor();
}

void TowerCurLevelRecordChangeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete cur_level_record_;
}

void TowerCurLevelRecordChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerCurLevelRecordChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerCurLevelRecordChangeNotify& TowerCurLevelRecordChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerCurLevelRecordChangeNotify* TowerCurLevelRecordChangeNotify::New(::google::protobuf::Arena* arena) const {
  TowerCurLevelRecordChangeNotify* n = new TowerCurLevelRecordChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerCurLevelRecordChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerCurLevelRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cur_level_record_ != NULL) {
    delete cur_level_record_;
  }
  cur_level_record_ = NULL;
  _internal_metadata_.Clear();
}

bool TowerCurLevelRecordChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerCurLevelRecordChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.TowerCurLevelRecord cur_level_record = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_level_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerCurLevelRecordChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerCurLevelRecordChangeNotify)
  return false;
#undef DO_
}

void TowerCurLevelRecordChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerCurLevelRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TowerCurLevelRecord cur_level_record = 10;
  if (this->has_cur_level_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->cur_level_record_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerCurLevelRecordChangeNotify)
}

::google::protobuf::uint8* TowerCurLevelRecordChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerCurLevelRecordChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TowerCurLevelRecord cur_level_record = 10;
  if (this->has_cur_level_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->cur_level_record_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerCurLevelRecordChangeNotify)
  return target;
}

size_t TowerCurLevelRecordChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerCurLevelRecordChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.TowerCurLevelRecord cur_level_record = 10;
  if (this->has_cur_level_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_level_record_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerCurLevelRecordChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerCurLevelRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerCurLevelRecordChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerCurLevelRecordChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerCurLevelRecordChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerCurLevelRecordChangeNotify)
    MergeFrom(*source);
  }
}

void TowerCurLevelRecordChangeNotify::MergeFrom(const TowerCurLevelRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerCurLevelRecordChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cur_level_record()) {
    mutable_cur_level_record()->::proto::TowerCurLevelRecord::MergeFrom(from.cur_level_record());
  }
}

void TowerCurLevelRecordChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerCurLevelRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerCurLevelRecordChangeNotify::CopyFrom(const TowerCurLevelRecordChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerCurLevelRecordChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerCurLevelRecordChangeNotify::IsInitialized() const {
  return true;
}

void TowerCurLevelRecordChangeNotify::Swap(TowerCurLevelRecordChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerCurLevelRecordChangeNotify::InternalSwap(TowerCurLevelRecordChangeNotify* other) {
  using std::swap;
  swap(cur_level_record_, other->cur_level_record_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerCurLevelRecordChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerCurLevelRecordChangeNotify

// .proto.TowerCurLevelRecord cur_level_record = 10;
bool TowerCurLevelRecordChangeNotify::has_cur_level_record() const {
  return this != internal_default_instance() && cur_level_record_ != NULL;
}
void TowerCurLevelRecordChangeNotify::clear_cur_level_record() {
  if (GetArenaNoVirtual() == NULL && cur_level_record_ != NULL) delete cur_level_record_;
  cur_level_record_ = NULL;
}
const ::proto::TowerCurLevelRecord& TowerCurLevelRecordChangeNotify::cur_level_record() const {
  const ::proto::TowerCurLevelRecord* p = cur_level_record_;
  // @@protoc_insertion_point(field_get:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerCurLevelRecord*>(
      &::proto::_TowerCurLevelRecord_default_instance_);
}
::proto::TowerCurLevelRecord* TowerCurLevelRecordChangeNotify::mutable_cur_level_record() {
  
  if (cur_level_record_ == NULL) {
    cur_level_record_ = new ::proto::TowerCurLevelRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
  return cur_level_record_;
}
::proto::TowerCurLevelRecord* TowerCurLevelRecordChangeNotify::release_cur_level_record() {
  // @@protoc_insertion_point(field_release:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
  
  ::proto::TowerCurLevelRecord* temp = cur_level_record_;
  cur_level_record_ = NULL;
  return temp;
}
void TowerCurLevelRecordChangeNotify::set_allocated_cur_level_record(::proto::TowerCurLevelRecord* cur_level_record) {
  delete cur_level_record_;
  cur_level_record_ = cur_level_record;
  if (cur_level_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerCurLevelRecordChangeNotify.cur_level_record)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerDailyRewardProgressChangeNotify::kDailyFloorIdFieldNumber;
const int TowerDailyRewardProgressChangeNotify::kDailyLevelIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerDailyRewardProgressChangeNotify::TowerDailyRewardProgressChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerDailyRewardProgressChangeNotify)
}
TowerDailyRewardProgressChangeNotify::TowerDailyRewardProgressChangeNotify(const TowerDailyRewardProgressChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&daily_level_index_, &from.daily_level_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&daily_floor_id_) -
    reinterpret_cast<char*>(&daily_level_index_)) + sizeof(daily_floor_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerDailyRewardProgressChangeNotify)
}

void TowerDailyRewardProgressChangeNotify::SharedCtor() {
  ::memset(&daily_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_floor_id_) -
      reinterpret_cast<char*>(&daily_level_index_)) + sizeof(daily_floor_id_));
  _cached_size_ = 0;
}

TowerDailyRewardProgressChangeNotify::~TowerDailyRewardProgressChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.TowerDailyRewardProgressChangeNotify)
  SharedDtor();
}

void TowerDailyRewardProgressChangeNotify::SharedDtor() {
}

void TowerDailyRewardProgressChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerDailyRewardProgressChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerDailyRewardProgressChangeNotify& TowerDailyRewardProgressChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerDailyRewardProgressChangeNotify* TowerDailyRewardProgressChangeNotify::New(::google::protobuf::Arena* arena) const {
  TowerDailyRewardProgressChangeNotify* n = new TowerDailyRewardProgressChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerDailyRewardProgressChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerDailyRewardProgressChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&daily_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_floor_id_) -
      reinterpret_cast<char*>(&daily_level_index_)) + sizeof(daily_floor_id_));
  _internal_metadata_.Clear();
}

bool TowerDailyRewardProgressChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerDailyRewardProgressChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 daily_level_index = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 daily_floor_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerDailyRewardProgressChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerDailyRewardProgressChangeNotify)
  return false;
#undef DO_
}

void TowerDailyRewardProgressChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerDailyRewardProgressChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_level_index = 9;
  if (this->daily_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->daily_level_index(), output);
  }

  // uint32 daily_floor_id = 15;
  if (this->daily_floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->daily_floor_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerDailyRewardProgressChangeNotify)
}

::google::protobuf::uint8* TowerDailyRewardProgressChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerDailyRewardProgressChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 daily_level_index = 9;
  if (this->daily_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->daily_level_index(), target);
  }

  // uint32 daily_floor_id = 15;
  if (this->daily_floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->daily_floor_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerDailyRewardProgressChangeNotify)
  return target;
}

size_t TowerDailyRewardProgressChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerDailyRewardProgressChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 daily_level_index = 9;
  if (this->daily_level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_level_index());
  }

  // uint32 daily_floor_id = 15;
  if (this->daily_floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_floor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerDailyRewardProgressChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerDailyRewardProgressChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerDailyRewardProgressChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerDailyRewardProgressChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerDailyRewardProgressChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerDailyRewardProgressChangeNotify)
    MergeFrom(*source);
  }
}

void TowerDailyRewardProgressChangeNotify::MergeFrom(const TowerDailyRewardProgressChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerDailyRewardProgressChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.daily_level_index() != 0) {
    set_daily_level_index(from.daily_level_index());
  }
  if (from.daily_floor_id() != 0) {
    set_daily_floor_id(from.daily_floor_id());
  }
}

void TowerDailyRewardProgressChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerDailyRewardProgressChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerDailyRewardProgressChangeNotify::CopyFrom(const TowerDailyRewardProgressChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerDailyRewardProgressChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerDailyRewardProgressChangeNotify::IsInitialized() const {
  return true;
}

void TowerDailyRewardProgressChangeNotify::Swap(TowerDailyRewardProgressChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerDailyRewardProgressChangeNotify::InternalSwap(TowerDailyRewardProgressChangeNotify* other) {
  using std::swap;
  swap(daily_level_index_, other->daily_level_index_);
  swap(daily_floor_id_, other->daily_floor_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerDailyRewardProgressChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerDailyRewardProgressChangeNotify

// uint32 daily_floor_id = 15;
void TowerDailyRewardProgressChangeNotify::clear_daily_floor_id() {
  daily_floor_id_ = 0u;
}
::google::protobuf::uint32 TowerDailyRewardProgressChangeNotify::daily_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerDailyRewardProgressChangeNotify.daily_floor_id)
  return daily_floor_id_;
}
void TowerDailyRewardProgressChangeNotify::set_daily_floor_id(::google::protobuf::uint32 value) {
  
  daily_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerDailyRewardProgressChangeNotify.daily_floor_id)
}

// uint32 daily_level_index = 9;
void TowerDailyRewardProgressChangeNotify::clear_daily_level_index() {
  daily_level_index_ = 0u;
}
::google::protobuf::uint32 TowerDailyRewardProgressChangeNotify::daily_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerDailyRewardProgressChangeNotify.daily_level_index)
  return daily_level_index_;
}
void TowerDailyRewardProgressChangeNotify::set_daily_level_index(::google::protobuf::uint32 value) {
  
  daily_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerDailyRewardProgressChangeNotify.daily_level_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerTeamSelectReq::kTowerTeamListFieldNumber;
const int TowerTeamSelectReq::kFloorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerTeamSelectReq::TowerTeamSelectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerTeamSelectReq)
}
TowerTeamSelectReq::TowerTeamSelectReq(const TowerTeamSelectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tower_team_list_(from.tower_team_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  floor_id_ = from.floor_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerTeamSelectReq)
}

void TowerTeamSelectReq::SharedCtor() {
  floor_id_ = 0u;
  _cached_size_ = 0;
}

TowerTeamSelectReq::~TowerTeamSelectReq() {
  // @@protoc_insertion_point(destructor:proto.TowerTeamSelectReq)
  SharedDtor();
}

void TowerTeamSelectReq::SharedDtor() {
}

void TowerTeamSelectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerTeamSelectReq::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerTeamSelectReq& TowerTeamSelectReq::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerTeamSelectReq* TowerTeamSelectReq::New(::google::protobuf::Arena* arena) const {
  TowerTeamSelectReq* n = new TowerTeamSelectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerTeamSelectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerTeamSelectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tower_team_list_.Clear();
  floor_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TowerTeamSelectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerTeamSelectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 floor_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.TowerTeam tower_team_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tower_team_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerTeamSelectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerTeamSelectReq)
  return false;
#undef DO_
}

void TowerTeamSelectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerTeamSelectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 floor_id = 10;
  if (this->floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->floor_id(), output);
  }

  // repeated .proto.TowerTeam tower_team_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_team_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->tower_team_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerTeamSelectReq)
}

::google::protobuf::uint8* TowerTeamSelectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerTeamSelectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 floor_id = 10;
  if (this->floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->floor_id(), target);
  }

  // repeated .proto.TowerTeam tower_team_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_team_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->tower_team_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerTeamSelectReq)
  return target;
}

size_t TowerTeamSelectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerTeamSelectReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TowerTeam tower_team_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->tower_team_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower_team_list(static_cast<int>(i)));
    }
  }

  // uint32 floor_id = 10;
  if (this->floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerTeamSelectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerTeamSelectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerTeamSelectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerTeamSelectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerTeamSelectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerTeamSelectReq)
    MergeFrom(*source);
  }
}

void TowerTeamSelectReq::MergeFrom(const TowerTeamSelectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerTeamSelectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tower_team_list_.MergeFrom(from.tower_team_list_);
  if (from.floor_id() != 0) {
    set_floor_id(from.floor_id());
  }
}

void TowerTeamSelectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerTeamSelectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerTeamSelectReq::CopyFrom(const TowerTeamSelectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerTeamSelectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerTeamSelectReq::IsInitialized() const {
  return true;
}

void TowerTeamSelectReq::Swap(TowerTeamSelectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerTeamSelectReq::InternalSwap(TowerTeamSelectReq* other) {
  using std::swap;
  tower_team_list_.InternalSwap(&other->tower_team_list_);
  swap(floor_id_, other->floor_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerTeamSelectReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerTeamSelectReq

// repeated .proto.TowerTeam tower_team_list = 11;
int TowerTeamSelectReq::tower_team_list_size() const {
  return tower_team_list_.size();
}
void TowerTeamSelectReq::clear_tower_team_list() {
  tower_team_list_.Clear();
}
const ::proto::TowerTeam& TowerTeamSelectReq::tower_team_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_.Get(index);
}
::proto::TowerTeam* TowerTeamSelectReq::mutable_tower_team_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_.Mutable(index);
}
::proto::TowerTeam* TowerTeamSelectReq::add_tower_team_list() {
  // @@protoc_insertion_point(field_add:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >*
TowerTeamSelectReq::mutable_tower_team_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerTeamSelectReq.tower_team_list)
  return &tower_team_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerTeam >&
TowerTeamSelectReq::tower_team_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerTeamSelectReq.tower_team_list)
  return tower_team_list_;
}

// uint32 floor_id = 10;
void TowerTeamSelectReq::clear_floor_id() {
  floor_id_ = 0u;
}
::google::protobuf::uint32 TowerTeamSelectReq::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerTeamSelectReq.floor_id)
  return floor_id_;
}
void TowerTeamSelectReq::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerTeamSelectReq.floor_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerTeamSelectRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerTeamSelectRsp::TowerTeamSelectRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerTeamSelectRsp)
}
TowerTeamSelectRsp::TowerTeamSelectRsp(const TowerTeamSelectRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerTeamSelectRsp)
}

void TowerTeamSelectRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TowerTeamSelectRsp::~TowerTeamSelectRsp() {
  // @@protoc_insertion_point(destructor:proto.TowerTeamSelectRsp)
  SharedDtor();
}

void TowerTeamSelectRsp::SharedDtor() {
}

void TowerTeamSelectRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerTeamSelectRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerTeamSelectRsp& TowerTeamSelectRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerTeamSelectRsp* TowerTeamSelectRsp::New(::google::protobuf::Arena* arena) const {
  TowerTeamSelectRsp* n = new TowerTeamSelectRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerTeamSelectRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerTeamSelectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool TowerTeamSelectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerTeamSelectRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerTeamSelectRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerTeamSelectRsp)
  return false;
#undef DO_
}

void TowerTeamSelectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerTeamSelectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerTeamSelectRsp)
}

::google::protobuf::uint8* TowerTeamSelectRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerTeamSelectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerTeamSelectRsp)
  return target;
}

size_t TowerTeamSelectRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerTeamSelectRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerTeamSelectRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerTeamSelectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerTeamSelectRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerTeamSelectRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerTeamSelectRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerTeamSelectRsp)
    MergeFrom(*source);
  }
}

void TowerTeamSelectRsp::MergeFrom(const TowerTeamSelectRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerTeamSelectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TowerTeamSelectRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerTeamSelectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerTeamSelectRsp::CopyFrom(const TowerTeamSelectRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerTeamSelectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerTeamSelectRsp::IsInitialized() const {
  return true;
}

void TowerTeamSelectRsp::Swap(TowerTeamSelectRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerTeamSelectRsp::InternalSwap(TowerTeamSelectRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerTeamSelectRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerTeamSelectRsp

// int32 retcode = 8;
void TowerTeamSelectRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TowerTeamSelectRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerTeamSelectRsp.retcode)
  return retcode_;
}
void TowerTeamSelectRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerTeamSelectRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerAllDataReq::kIsInteractFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerAllDataReq::TowerAllDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerAllDataReq)
}
TowerAllDataReq::TowerAllDataReq(const TowerAllDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_interact_ = from.is_interact_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerAllDataReq)
}

void TowerAllDataReq::SharedCtor() {
  is_interact_ = false;
  _cached_size_ = 0;
}

TowerAllDataReq::~TowerAllDataReq() {
  // @@protoc_insertion_point(destructor:proto.TowerAllDataReq)
  SharedDtor();
}

void TowerAllDataReq::SharedDtor() {
}

void TowerAllDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerAllDataReq::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerAllDataReq& TowerAllDataReq::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerAllDataReq* TowerAllDataReq::New(::google::protobuf::Arena* arena) const {
  TowerAllDataReq* n = new TowerAllDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerAllDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_interact_ = false;
  _internal_metadata_.Clear();
}

bool TowerAllDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerAllDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_interact = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_interact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerAllDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerAllDataReq)
  return false;
#undef DO_
}

void TowerAllDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_interact = 2;
  if (this->is_interact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_interact(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerAllDataReq)
}

::google::protobuf::uint8* TowerAllDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_interact = 2;
  if (this->is_interact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_interact(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerAllDataReq)
  return target;
}

size_t TowerAllDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerAllDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_interact = 2;
  if (this->is_interact() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerAllDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerAllDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerAllDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerAllDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerAllDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerAllDataReq)
    MergeFrom(*source);
  }
}

void TowerAllDataReq::MergeFrom(const TowerAllDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerAllDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_interact() != 0) {
    set_is_interact(from.is_interact());
  }
}

void TowerAllDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerAllDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerAllDataReq::CopyFrom(const TowerAllDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerAllDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerAllDataReq::IsInitialized() const {
  return true;
}

void TowerAllDataReq::Swap(TowerAllDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerAllDataReq::InternalSwap(TowerAllDataReq* other) {
  using std::swap;
  swap(is_interact_, other->is_interact_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerAllDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerAllDataReq

// bool is_interact = 2;
void TowerAllDataReq::clear_is_interact() {
  is_interact_ = false;
}
bool TowerAllDataReq::is_interact() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataReq.is_interact)
  return is_interact_;
}
void TowerAllDataReq::set_is_interact(bool value) {
  
  is_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataReq.is_interact)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerMonthlyBrief::kTowerScheduleIdFieldNumber;
const int TowerMonthlyBrief::kBestFloorIndexFieldNumber;
const int TowerMonthlyBrief::kBestLevelIndexFieldNumber;
const int TowerMonthlyBrief::kTotalStarCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerMonthlyBrief::TowerMonthlyBrief()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerMonthlyBrief)
}
TowerMonthlyBrief::TowerMonthlyBrief(const TowerMonthlyBrief& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&best_level_index_, &from.best_level_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&tower_schedule_id_) -
    reinterpret_cast<char*>(&best_level_index_)) + sizeof(tower_schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerMonthlyBrief)
}

void TowerMonthlyBrief::SharedCtor() {
  ::memset(&best_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tower_schedule_id_) -
      reinterpret_cast<char*>(&best_level_index_)) + sizeof(tower_schedule_id_));
  _cached_size_ = 0;
}

TowerMonthlyBrief::~TowerMonthlyBrief() {
  // @@protoc_insertion_point(destructor:proto.TowerMonthlyBrief)
  SharedDtor();
}

void TowerMonthlyBrief::SharedDtor() {
}

void TowerMonthlyBrief::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerMonthlyBrief::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerMonthlyBrief& TowerMonthlyBrief::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerMonthlyBrief* TowerMonthlyBrief::New(::google::protobuf::Arena* arena) const {
  TowerMonthlyBrief* n = new TowerMonthlyBrief;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerMonthlyBrief::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerMonthlyBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&best_level_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tower_schedule_id_) -
      reinterpret_cast<char*>(&best_level_index_)) + sizeof(tower_schedule_id_));
  _internal_metadata_.Clear();
}

bool TowerMonthlyBrief::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerMonthlyBrief)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 best_level_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &best_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 best_floor_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &best_floor_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_star_count = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_star_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tower_schedule_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerMonthlyBrief)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerMonthlyBrief)
  return false;
#undef DO_
}

void TowerMonthlyBrief::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerMonthlyBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 best_level_index = 3;
  if (this->best_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->best_level_index(), output);
  }

  // uint32 best_floor_index = 6;
  if (this->best_floor_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->best_floor_index(), output);
  }

  // uint32 total_star_count = 12;
  if (this->total_star_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->total_star_count(), output);
  }

  // uint32 tower_schedule_id = 15;
  if (this->tower_schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->tower_schedule_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerMonthlyBrief)
}

::google::protobuf::uint8* TowerMonthlyBrief::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerMonthlyBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 best_level_index = 3;
  if (this->best_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->best_level_index(), target);
  }

  // uint32 best_floor_index = 6;
  if (this->best_floor_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->best_floor_index(), target);
  }

  // uint32 total_star_count = 12;
  if (this->total_star_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->total_star_count(), target);
  }

  // uint32 tower_schedule_id = 15;
  if (this->tower_schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->tower_schedule_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerMonthlyBrief)
  return target;
}

size_t TowerMonthlyBrief::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerMonthlyBrief)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 best_level_index = 3;
  if (this->best_level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->best_level_index());
  }

  // uint32 best_floor_index = 6;
  if (this->best_floor_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->best_floor_index());
  }

  // uint32 total_star_count = 12;
  if (this->total_star_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_star_count());
  }

  // uint32 tower_schedule_id = 15;
  if (this->tower_schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerMonthlyBrief::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerMonthlyBrief)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerMonthlyBrief* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerMonthlyBrief>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerMonthlyBrief)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerMonthlyBrief)
    MergeFrom(*source);
  }
}

void TowerMonthlyBrief::MergeFrom(const TowerMonthlyBrief& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerMonthlyBrief)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.best_level_index() != 0) {
    set_best_level_index(from.best_level_index());
  }
  if (from.best_floor_index() != 0) {
    set_best_floor_index(from.best_floor_index());
  }
  if (from.total_star_count() != 0) {
    set_total_star_count(from.total_star_count());
  }
  if (from.tower_schedule_id() != 0) {
    set_tower_schedule_id(from.tower_schedule_id());
  }
}

void TowerMonthlyBrief::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerMonthlyBrief)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerMonthlyBrief::CopyFrom(const TowerMonthlyBrief& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerMonthlyBrief)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerMonthlyBrief::IsInitialized() const {
  return true;
}

void TowerMonthlyBrief::Swap(TowerMonthlyBrief* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerMonthlyBrief::InternalSwap(TowerMonthlyBrief* other) {
  using std::swap;
  swap(best_level_index_, other->best_level_index_);
  swap(best_floor_index_, other->best_floor_index_);
  swap(total_star_count_, other->total_star_count_);
  swap(tower_schedule_id_, other->tower_schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerMonthlyBrief::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerMonthlyBrief

// uint32 tower_schedule_id = 15;
void TowerMonthlyBrief::clear_tower_schedule_id() {
  tower_schedule_id_ = 0u;
}
::google::protobuf::uint32 TowerMonthlyBrief::tower_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.tower_schedule_id)
  return tower_schedule_id_;
}
void TowerMonthlyBrief::set_tower_schedule_id(::google::protobuf::uint32 value) {
  
  tower_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.tower_schedule_id)
}

// uint32 best_floor_index = 6;
void TowerMonthlyBrief::clear_best_floor_index() {
  best_floor_index_ = 0u;
}
::google::protobuf::uint32 TowerMonthlyBrief::best_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.best_floor_index)
  return best_floor_index_;
}
void TowerMonthlyBrief::set_best_floor_index(::google::protobuf::uint32 value) {
  
  best_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.best_floor_index)
}

// uint32 best_level_index = 3;
void TowerMonthlyBrief::clear_best_level_index() {
  best_level_index_ = 0u;
}
::google::protobuf::uint32 TowerMonthlyBrief::best_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.best_level_index)
  return best_level_index_;
}
void TowerMonthlyBrief::set_best_level_index(::google::protobuf::uint32 value) {
  
  best_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.best_level_index)
}

// uint32 total_star_count = 12;
void TowerMonthlyBrief::clear_total_star_count() {
  total_star_count_ = 0u;
}
::google::protobuf::uint32 TowerMonthlyBrief::total_star_count() const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyBrief.total_star_count)
  return total_star_count_;
}
void TowerMonthlyBrief::set_total_star_count(::google::protobuf::uint32 value) {
  
  total_star_count_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerMonthlyBrief.total_star_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

TowerAllDataRsp::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry() {}
TowerAllDataRsp::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata TowerAllDataRsp::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[13];
}
void TowerAllDataRsp::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void TowerAllDataRsp::TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry::MergeFrom(const TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

TowerAllDataRsp::TowerAllDataRsp_FloorOpenTimeMapEntry::TowerAllDataRsp_FloorOpenTimeMapEntry() {}
TowerAllDataRsp::TowerAllDataRsp_FloorOpenTimeMapEntry::TowerAllDataRsp_FloorOpenTimeMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata TowerAllDataRsp::TowerAllDataRsp_FloorOpenTimeMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[14];
}
void TowerAllDataRsp::TowerAllDataRsp_FloorOpenTimeMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void TowerAllDataRsp::TowerAllDataRsp_FloorOpenTimeMapEntry::MergeFrom(const TowerAllDataRsp_FloorOpenTimeMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerAllDataRsp::kTowerScheduleIdFieldNumber;
const int TowerAllDataRsp::kDailyLevelIndexFieldNumber;
const int TowerAllDataRsp::kSkipFloorGrantedRewardItemMapFieldNumber;
const int TowerAllDataRsp::kIsFirstInteractFieldNumber;
const int TowerAllDataRsp::kIsFinishedEntranceFloorFieldNumber;
const int TowerAllDataRsp::kTowerFloorRecordListFieldNumber;
const int TowerAllDataRsp::kDailyFloorIdFieldNumber;
const int TowerAllDataRsp::kCommemorativeRewardIdFieldNumber;
const int TowerAllDataRsp::kLastScheduleMonthlyBriefFieldNumber;
const int TowerAllDataRsp::kNextScheduleChangeTimeFieldNumber;
const int TowerAllDataRsp::kValidTowerRecordNumFieldNumber;
const int TowerAllDataRsp::kSkipToFloorIndexFieldNumber;
const int TowerAllDataRsp::kFloorOpenTimeMapFieldNumber;
const int TowerAllDataRsp::kCurLevelRecordFieldNumber;
const int TowerAllDataRsp::kRetcodeFieldNumber;
const int TowerAllDataRsp::kScheduleStartTimeFieldNumber;
const int TowerAllDataRsp::kMonthlyBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerAllDataRsp::TowerAllDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerAllDataRsp)
}
TowerAllDataRsp::TowerAllDataRsp(const TowerAllDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tower_floor_record_list_(from.tower_floor_record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  floor_open_time_map_.MergeFrom(from.floor_open_time_map_);
  skip_floor_granted_reward_item_map_.MergeFrom(from.skip_floor_granted_reward_item_map_);
  if (from.has_monthly_brief()) {
    monthly_brief_ = new ::proto::TowerMonthlyBrief(*from.monthly_brief_);
  } else {
    monthly_brief_ = NULL;
  }
  if (from.has_cur_level_record()) {
    cur_level_record_ = new ::proto::TowerCurLevelRecord(*from.cur_level_record_);
  } else {
    cur_level_record_ = NULL;
  }
  if (from.has_last_schedule_monthly_brief()) {
    last_schedule_monthly_brief_ = new ::proto::TowerMonthlyBrief(*from.last_schedule_monthly_brief_);
  } else {
    last_schedule_monthly_brief_ = NULL;
  }
  ::memcpy(&skip_to_floor_index_, &from.skip_to_floor_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_start_time_) -
    reinterpret_cast<char*>(&skip_to_floor_index_)) + sizeof(schedule_start_time_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerAllDataRsp)
}

void TowerAllDataRsp::SharedCtor() {
  ::memset(&monthly_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_start_time_) -
      reinterpret_cast<char*>(&monthly_brief_)) + sizeof(schedule_start_time_));
  _cached_size_ = 0;
}

TowerAllDataRsp::~TowerAllDataRsp() {
  // @@protoc_insertion_point(destructor:proto.TowerAllDataRsp)
  SharedDtor();
}

void TowerAllDataRsp::SharedDtor() {
  if (this != internal_default_instance()) delete monthly_brief_;
  if (this != internal_default_instance()) delete cur_level_record_;
  if (this != internal_default_instance()) delete last_schedule_monthly_brief_;
}

void TowerAllDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerAllDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerAllDataRsp& TowerAllDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerAllDataRsp* TowerAllDataRsp::New(::google::protobuf::Arena* arena) const {
  TowerAllDataRsp* n = new TowerAllDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerAllDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  floor_open_time_map_.Clear();
  tower_floor_record_list_.Clear();
  skip_floor_granted_reward_item_map_.Clear();
  if (GetArenaNoVirtual() == NULL && monthly_brief_ != NULL) {
    delete monthly_brief_;
  }
  monthly_brief_ = NULL;
  if (GetArenaNoVirtual() == NULL && cur_level_record_ != NULL) {
    delete cur_level_record_;
  }
  cur_level_record_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_schedule_monthly_brief_ != NULL) {
    delete last_schedule_monthly_brief_;
  }
  last_schedule_monthly_brief_ = NULL;
  ::memset(&skip_to_floor_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_start_time_) -
      reinterpret_cast<char*>(&skip_to_floor_index_)) + sizeof(schedule_start_time_));
  _internal_metadata_.Clear();
}

bool TowerAllDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerAllDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_finished_entrance_floor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_entrance_floor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skip_to_floor_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skip_to_floor_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_first_interact = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_first_interact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> floor_open_time_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          TowerAllDataRsp_FloorOpenTimeMapEntry::Parser< ::google::protobuf::internal::MapField<
              TowerAllDataRsp_FloorOpenTimeMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&floor_open_time_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.TowerFloorRecord tower_floor_record_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tower_floor_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 next_schedule_change_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_schedule_change_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 valid_tower_record_num = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &valid_tower_record_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 daily_level_index = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tower_schedule_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 daily_floor_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry::Parser< ::google::protobuf::internal::MapField<
              TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&skip_floor_granted_reward_item_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 commemorative_reward_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &commemorative_reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerMonthlyBrief monthly_brief = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_monthly_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerCurLevelRecord cur_level_record = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_level_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_start_time = 914;
      case 914: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 7312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerMonthlyBrief last_schedule_monthly_brief = 1222;
      case 1222: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 9778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last_schedule_monthly_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerAllDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerAllDataRsp)
  return false;
#undef DO_
}

void TowerAllDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_finished_entrance_floor = 1;
  if (this->is_finished_entrance_floor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_finished_entrance_floor(), output);
  }

  // uint32 skip_to_floor_index = 2;
  if (this->skip_to_floor_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skip_to_floor_index(), output);
  }

  // bool is_first_interact = 3;
  if (this->is_first_interact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_first_interact(), output);
  }

  // map<uint32, uint32> floor_open_time_map = 4;
  if (!this->floor_open_time_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->floor_open_time_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->floor_open_time_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->floor_open_time_map().begin();
          it != this->floor_open_time_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_FloorOpenTimeMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(floor_open_time_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_FloorOpenTimeMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->floor_open_time_map().begin();
          it != this->floor_open_time_map().end(); ++it) {
        entry.reset(floor_open_time_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // repeated .proto.TowerFloorRecord tower_floor_record_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_floor_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->tower_floor_record_list(static_cast<int>(i)), output);
  }

  // uint32 next_schedule_change_time = 6;
  if (this->next_schedule_change_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->next_schedule_change_time(), output);
  }

  // uint32 valid_tower_record_num = 7;
  if (this->valid_tower_record_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->valid_tower_record_num(), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint32 daily_level_index = 9;
  if (this->daily_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->daily_level_index(), output);
  }

  // uint32 tower_schedule_id = 10;
  if (this->tower_schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->tower_schedule_id(), output);
  }

  // uint32 daily_floor_id = 11;
  if (this->daily_floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->daily_floor_id(), output);
  }

  // map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
  if (!this->skip_floor_granted_reward_item_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->skip_floor_granted_reward_item_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skip_floor_granted_reward_item_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skip_floor_granted_reward_item_map().begin();
          it != this->skip_floor_granted_reward_item_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skip_floor_granted_reward_item_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skip_floor_granted_reward_item_map().begin();
          it != this->skip_floor_granted_reward_item_map().end(); ++it) {
        entry.reset(skip_floor_granted_reward_item_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    }
  }

  // uint32 commemorative_reward_id = 13;
  if (this->commemorative_reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->commemorative_reward_id(), output);
  }

  // .proto.TowerMonthlyBrief monthly_brief = 14;
  if (this->has_monthly_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->monthly_brief_, output);
  }

  // .proto.TowerCurLevelRecord cur_level_record = 15;
  if (this->has_cur_level_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->cur_level_record_, output);
  }

  // uint32 schedule_start_time = 914;
  if (this->schedule_start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(914, this->schedule_start_time(), output);
  }

  // .proto.TowerMonthlyBrief last_schedule_monthly_brief = 1222;
  if (this->has_last_schedule_monthly_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1222, *this->last_schedule_monthly_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerAllDataRsp)
}

::google::protobuf::uint8* TowerAllDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_finished_entrance_floor = 1;
  if (this->is_finished_entrance_floor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_finished_entrance_floor(), target);
  }

  // uint32 skip_to_floor_index = 2;
  if (this->skip_to_floor_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skip_to_floor_index(), target);
  }

  // bool is_first_interact = 3;
  if (this->is_first_interact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_first_interact(), target);
  }

  // map<uint32, uint32> floor_open_time_map = 4;
  if (!this->floor_open_time_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->floor_open_time_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->floor_open_time_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->floor_open_time_map().begin();
          it != this->floor_open_time_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_FloorOpenTimeMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(floor_open_time_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_FloorOpenTimeMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->floor_open_time_map().begin();
          it != this->floor_open_time_map().end(); ++it) {
        entry.reset(floor_open_time_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // repeated .proto.TowerFloorRecord tower_floor_record_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tower_floor_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->tower_floor_record_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 next_schedule_change_time = 6;
  if (this->next_schedule_change_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->next_schedule_change_time(), target);
  }

  // uint32 valid_tower_record_num = 7;
  if (this->valid_tower_record_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->valid_tower_record_num(), target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint32 daily_level_index = 9;
  if (this->daily_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->daily_level_index(), target);
  }

  // uint32 tower_schedule_id = 10;
  if (this->tower_schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->tower_schedule_id(), target);
  }

  // uint32 daily_floor_id = 11;
  if (this->daily_floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->daily_floor_id(), target);
  }

  // map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
  if (!this->skip_floor_granted_reward_item_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->skip_floor_granted_reward_item_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skip_floor_granted_reward_item_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skip_floor_granted_reward_item_map().begin();
          it != this->skip_floor_granted_reward_item_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skip_floor_granted_reward_item_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skip_floor_granted_reward_item_map().begin();
          it != this->skip_floor_granted_reward_item_map().end(); ++it) {
        entry.reset(skip_floor_granted_reward_item_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 commemorative_reward_id = 13;
  if (this->commemorative_reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->commemorative_reward_id(), target);
  }

  // .proto.TowerMonthlyBrief monthly_brief = 14;
  if (this->has_monthly_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->monthly_brief_, deterministic, target);
  }

  // .proto.TowerCurLevelRecord cur_level_record = 15;
  if (this->has_cur_level_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->cur_level_record_, deterministic, target);
  }

  // uint32 schedule_start_time = 914;
  if (this->schedule_start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(914, this->schedule_start_time(), target);
  }

  // .proto.TowerMonthlyBrief last_schedule_monthly_brief = 1222;
  if (this->has_last_schedule_monthly_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1222, *this->last_schedule_monthly_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerAllDataRsp)
  return target;
}

size_t TowerAllDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerAllDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> floor_open_time_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->floor_open_time_map_size());
  {
    ::google::protobuf::scoped_ptr<TowerAllDataRsp_FloorOpenTimeMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->floor_open_time_map().begin();
        it != this->floor_open_time_map().end(); ++it) {
      entry.reset(floor_open_time_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .proto.TowerFloorRecord tower_floor_record_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->tower_floor_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower_floor_record_list(static_cast<int>(i)));
    }
  }

  // map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->skip_floor_granted_reward_item_map_size());
  {
    ::google::protobuf::scoped_ptr<TowerAllDataRsp_SkipFloorGrantedRewardItemMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->skip_floor_granted_reward_item_map().begin();
        it != this->skip_floor_granted_reward_item_map().end(); ++it) {
      entry.reset(skip_floor_granted_reward_item_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.TowerMonthlyBrief monthly_brief = 14;
  if (this->has_monthly_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->monthly_brief_);
  }

  // .proto.TowerCurLevelRecord cur_level_record = 15;
  if (this->has_cur_level_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_level_record_);
  }

  // .proto.TowerMonthlyBrief last_schedule_monthly_brief = 1222;
  if (this->has_last_schedule_monthly_brief()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->last_schedule_monthly_brief_);
  }

  // uint32 skip_to_floor_index = 2;
  if (this->skip_to_floor_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skip_to_floor_index());
  }

  // bool is_first_interact = 3;
  if (this->is_first_interact() != 0) {
    total_size += 1 + 1;
  }

  // bool is_finished_entrance_floor = 1;
  if (this->is_finished_entrance_floor() != 0) {
    total_size += 1 + 1;
  }

  // uint32 next_schedule_change_time = 6;
  if (this->next_schedule_change_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->next_schedule_change_time());
  }

  // uint32 valid_tower_record_num = 7;
  if (this->valid_tower_record_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->valid_tower_record_num());
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 daily_level_index = 9;
  if (this->daily_level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_level_index());
  }

  // uint32 tower_schedule_id = 10;
  if (this->tower_schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_schedule_id());
  }

  // uint32 daily_floor_id = 11;
  if (this->daily_floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily_floor_id());
  }

  // uint32 commemorative_reward_id = 13;
  if (this->commemorative_reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->commemorative_reward_id());
  }

  // uint32 schedule_start_time = 914;
  if (this->schedule_start_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_start_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerAllDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerAllDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerAllDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerAllDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerAllDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerAllDataRsp)
    MergeFrom(*source);
  }
}

void TowerAllDataRsp::MergeFrom(const TowerAllDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerAllDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  floor_open_time_map_.MergeFrom(from.floor_open_time_map_);
  tower_floor_record_list_.MergeFrom(from.tower_floor_record_list_);
  skip_floor_granted_reward_item_map_.MergeFrom(from.skip_floor_granted_reward_item_map_);
  if (from.has_monthly_brief()) {
    mutable_monthly_brief()->::proto::TowerMonthlyBrief::MergeFrom(from.monthly_brief());
  }
  if (from.has_cur_level_record()) {
    mutable_cur_level_record()->::proto::TowerCurLevelRecord::MergeFrom(from.cur_level_record());
  }
  if (from.has_last_schedule_monthly_brief()) {
    mutable_last_schedule_monthly_brief()->::proto::TowerMonthlyBrief::MergeFrom(from.last_schedule_monthly_brief());
  }
  if (from.skip_to_floor_index() != 0) {
    set_skip_to_floor_index(from.skip_to_floor_index());
  }
  if (from.is_first_interact() != 0) {
    set_is_first_interact(from.is_first_interact());
  }
  if (from.is_finished_entrance_floor() != 0) {
    set_is_finished_entrance_floor(from.is_finished_entrance_floor());
  }
  if (from.next_schedule_change_time() != 0) {
    set_next_schedule_change_time(from.next_schedule_change_time());
  }
  if (from.valid_tower_record_num() != 0) {
    set_valid_tower_record_num(from.valid_tower_record_num());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.daily_level_index() != 0) {
    set_daily_level_index(from.daily_level_index());
  }
  if (from.tower_schedule_id() != 0) {
    set_tower_schedule_id(from.tower_schedule_id());
  }
  if (from.daily_floor_id() != 0) {
    set_daily_floor_id(from.daily_floor_id());
  }
  if (from.commemorative_reward_id() != 0) {
    set_commemorative_reward_id(from.commemorative_reward_id());
  }
  if (from.schedule_start_time() != 0) {
    set_schedule_start_time(from.schedule_start_time());
  }
}

void TowerAllDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerAllDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerAllDataRsp::CopyFrom(const TowerAllDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerAllDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerAllDataRsp::IsInitialized() const {
  return true;
}

void TowerAllDataRsp::Swap(TowerAllDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerAllDataRsp::InternalSwap(TowerAllDataRsp* other) {
  using std::swap;
  floor_open_time_map_.Swap(&other->floor_open_time_map_);
  tower_floor_record_list_.InternalSwap(&other->tower_floor_record_list_);
  skip_floor_granted_reward_item_map_.Swap(&other->skip_floor_granted_reward_item_map_);
  swap(monthly_brief_, other->monthly_brief_);
  swap(cur_level_record_, other->cur_level_record_);
  swap(last_schedule_monthly_brief_, other->last_schedule_monthly_brief_);
  swap(skip_to_floor_index_, other->skip_to_floor_index_);
  swap(is_first_interact_, other->is_first_interact_);
  swap(is_finished_entrance_floor_, other->is_finished_entrance_floor_);
  swap(next_schedule_change_time_, other->next_schedule_change_time_);
  swap(valid_tower_record_num_, other->valid_tower_record_num_);
  swap(retcode_, other->retcode_);
  swap(daily_level_index_, other->daily_level_index_);
  swap(tower_schedule_id_, other->tower_schedule_id_);
  swap(daily_floor_id_, other->daily_floor_id_);
  swap(commemorative_reward_id_, other->commemorative_reward_id_);
  swap(schedule_start_time_, other->schedule_start_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerAllDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerAllDataRsp

// uint32 tower_schedule_id = 10;
void TowerAllDataRsp::clear_tower_schedule_id() {
  tower_schedule_id_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::tower_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.tower_schedule_id)
  return tower_schedule_id_;
}
void TowerAllDataRsp::set_tower_schedule_id(::google::protobuf::uint32 value) {
  
  tower_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.tower_schedule_id)
}

// uint32 daily_level_index = 9;
void TowerAllDataRsp::clear_daily_level_index() {
  daily_level_index_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::daily_level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.daily_level_index)
  return daily_level_index_;
}
void TowerAllDataRsp::set_daily_level_index(::google::protobuf::uint32 value) {
  
  daily_level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.daily_level_index)
}

// map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
int TowerAllDataRsp::skip_floor_granted_reward_item_map_size() const {
  return skip_floor_granted_reward_item_map_.size();
}
void TowerAllDataRsp::clear_skip_floor_granted_reward_item_map() {
  skip_floor_granted_reward_item_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
TowerAllDataRsp::skip_floor_granted_reward_item_map() const {
  // @@protoc_insertion_point(field_map:proto.TowerAllDataRsp.skip_floor_granted_reward_item_map)
  return skip_floor_granted_reward_item_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
TowerAllDataRsp::mutable_skip_floor_granted_reward_item_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.TowerAllDataRsp.skip_floor_granted_reward_item_map)
  return skip_floor_granted_reward_item_map_.MutableMap();
}

// bool is_first_interact = 3;
void TowerAllDataRsp::clear_is_first_interact() {
  is_first_interact_ = false;
}
bool TowerAllDataRsp::is_first_interact() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.is_first_interact)
  return is_first_interact_;
}
void TowerAllDataRsp::set_is_first_interact(bool value) {
  
  is_first_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.is_first_interact)
}

// bool is_finished_entrance_floor = 1;
void TowerAllDataRsp::clear_is_finished_entrance_floor() {
  is_finished_entrance_floor_ = false;
}
bool TowerAllDataRsp::is_finished_entrance_floor() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.is_finished_entrance_floor)
  return is_finished_entrance_floor_;
}
void TowerAllDataRsp::set_is_finished_entrance_floor(bool value) {
  
  is_finished_entrance_floor_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.is_finished_entrance_floor)
}

// repeated .proto.TowerFloorRecord tower_floor_record_list = 5;
int TowerAllDataRsp::tower_floor_record_list_size() const {
  return tower_floor_record_list_.size();
}
void TowerAllDataRsp::clear_tower_floor_record_list() {
  tower_floor_record_list_.Clear();
}
const ::proto::TowerFloorRecord& TowerAllDataRsp::tower_floor_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_.Get(index);
}
::proto::TowerFloorRecord* TowerAllDataRsp::mutable_tower_floor_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_.Mutable(index);
}
::proto::TowerFloorRecord* TowerAllDataRsp::add_tower_floor_record_list() {
  // @@protoc_insertion_point(field_add:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >*
TowerAllDataRsp::mutable_tower_floor_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerAllDataRsp.tower_floor_record_list)
  return &tower_floor_record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerFloorRecord >&
TowerAllDataRsp::tower_floor_record_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerAllDataRsp.tower_floor_record_list)
  return tower_floor_record_list_;
}

// uint32 daily_floor_id = 11;
void TowerAllDataRsp::clear_daily_floor_id() {
  daily_floor_id_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::daily_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.daily_floor_id)
  return daily_floor_id_;
}
void TowerAllDataRsp::set_daily_floor_id(::google::protobuf::uint32 value) {
  
  daily_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.daily_floor_id)
}

// uint32 commemorative_reward_id = 13;
void TowerAllDataRsp::clear_commemorative_reward_id() {
  commemorative_reward_id_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::commemorative_reward_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.commemorative_reward_id)
  return commemorative_reward_id_;
}
void TowerAllDataRsp::set_commemorative_reward_id(::google::protobuf::uint32 value) {
  
  commemorative_reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.commemorative_reward_id)
}

// .proto.TowerMonthlyBrief last_schedule_monthly_brief = 1222;
bool TowerAllDataRsp::has_last_schedule_monthly_brief() const {
  return this != internal_default_instance() && last_schedule_monthly_brief_ != NULL;
}
void TowerAllDataRsp::clear_last_schedule_monthly_brief() {
  if (GetArenaNoVirtual() == NULL && last_schedule_monthly_brief_ != NULL) delete last_schedule_monthly_brief_;
  last_schedule_monthly_brief_ = NULL;
}
const ::proto::TowerMonthlyBrief& TowerAllDataRsp::last_schedule_monthly_brief() const {
  const ::proto::TowerMonthlyBrief* p = last_schedule_monthly_brief_;
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.last_schedule_monthly_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyBrief*>(
      &::proto::_TowerMonthlyBrief_default_instance_);
}
::proto::TowerMonthlyBrief* TowerAllDataRsp::mutable_last_schedule_monthly_brief() {
  
  if (last_schedule_monthly_brief_ == NULL) {
    last_schedule_monthly_brief_ = new ::proto::TowerMonthlyBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.last_schedule_monthly_brief)
  return last_schedule_monthly_brief_;
}
::proto::TowerMonthlyBrief* TowerAllDataRsp::release_last_schedule_monthly_brief() {
  // @@protoc_insertion_point(field_release:proto.TowerAllDataRsp.last_schedule_monthly_brief)
  
  ::proto::TowerMonthlyBrief* temp = last_schedule_monthly_brief_;
  last_schedule_monthly_brief_ = NULL;
  return temp;
}
void TowerAllDataRsp::set_allocated_last_schedule_monthly_brief(::proto::TowerMonthlyBrief* last_schedule_monthly_brief) {
  delete last_schedule_monthly_brief_;
  last_schedule_monthly_brief_ = last_schedule_monthly_brief;
  if (last_schedule_monthly_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerAllDataRsp.last_schedule_monthly_brief)
}

// uint32 next_schedule_change_time = 6;
void TowerAllDataRsp::clear_next_schedule_change_time() {
  next_schedule_change_time_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::next_schedule_change_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.next_schedule_change_time)
  return next_schedule_change_time_;
}
void TowerAllDataRsp::set_next_schedule_change_time(::google::protobuf::uint32 value) {
  
  next_schedule_change_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.next_schedule_change_time)
}

// uint32 valid_tower_record_num = 7;
void TowerAllDataRsp::clear_valid_tower_record_num() {
  valid_tower_record_num_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::valid_tower_record_num() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.valid_tower_record_num)
  return valid_tower_record_num_;
}
void TowerAllDataRsp::set_valid_tower_record_num(::google::protobuf::uint32 value) {
  
  valid_tower_record_num_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.valid_tower_record_num)
}

// uint32 skip_to_floor_index = 2;
void TowerAllDataRsp::clear_skip_to_floor_index() {
  skip_to_floor_index_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::skip_to_floor_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.skip_to_floor_index)
  return skip_to_floor_index_;
}
void TowerAllDataRsp::set_skip_to_floor_index(::google::protobuf::uint32 value) {
  
  skip_to_floor_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.skip_to_floor_index)
}

// map<uint32, uint32> floor_open_time_map = 4;
int TowerAllDataRsp::floor_open_time_map_size() const {
  return floor_open_time_map_.size();
}
void TowerAllDataRsp::clear_floor_open_time_map() {
  floor_open_time_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
TowerAllDataRsp::floor_open_time_map() const {
  // @@protoc_insertion_point(field_map:proto.TowerAllDataRsp.floor_open_time_map)
  return floor_open_time_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
TowerAllDataRsp::mutable_floor_open_time_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.TowerAllDataRsp.floor_open_time_map)
  return floor_open_time_map_.MutableMap();
}

// .proto.TowerCurLevelRecord cur_level_record = 15;
bool TowerAllDataRsp::has_cur_level_record() const {
  return this != internal_default_instance() && cur_level_record_ != NULL;
}
void TowerAllDataRsp::clear_cur_level_record() {
  if (GetArenaNoVirtual() == NULL && cur_level_record_ != NULL) delete cur_level_record_;
  cur_level_record_ = NULL;
}
const ::proto::TowerCurLevelRecord& TowerAllDataRsp::cur_level_record() const {
  const ::proto::TowerCurLevelRecord* p = cur_level_record_;
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.cur_level_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerCurLevelRecord*>(
      &::proto::_TowerCurLevelRecord_default_instance_);
}
::proto::TowerCurLevelRecord* TowerAllDataRsp::mutable_cur_level_record() {
  
  if (cur_level_record_ == NULL) {
    cur_level_record_ = new ::proto::TowerCurLevelRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.cur_level_record)
  return cur_level_record_;
}
::proto::TowerCurLevelRecord* TowerAllDataRsp::release_cur_level_record() {
  // @@protoc_insertion_point(field_release:proto.TowerAllDataRsp.cur_level_record)
  
  ::proto::TowerCurLevelRecord* temp = cur_level_record_;
  cur_level_record_ = NULL;
  return temp;
}
void TowerAllDataRsp::set_allocated_cur_level_record(::proto::TowerCurLevelRecord* cur_level_record) {
  delete cur_level_record_;
  cur_level_record_ = cur_level_record;
  if (cur_level_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerAllDataRsp.cur_level_record)
}

// int32 retcode = 8;
void TowerAllDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TowerAllDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.retcode)
  return retcode_;
}
void TowerAllDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.retcode)
}

// uint32 schedule_start_time = 914;
void TowerAllDataRsp::clear_schedule_start_time() {
  schedule_start_time_ = 0u;
}
::google::protobuf::uint32 TowerAllDataRsp::schedule_start_time() const {
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.schedule_start_time)
  return schedule_start_time_;
}
void TowerAllDataRsp::set_schedule_start_time(::google::protobuf::uint32 value) {
  
  schedule_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerAllDataRsp.schedule_start_time)
}

// .proto.TowerMonthlyBrief monthly_brief = 14;
bool TowerAllDataRsp::has_monthly_brief() const {
  return this != internal_default_instance() && monthly_brief_ != NULL;
}
void TowerAllDataRsp::clear_monthly_brief() {
  if (GetArenaNoVirtual() == NULL && monthly_brief_ != NULL) delete monthly_brief_;
  monthly_brief_ = NULL;
}
const ::proto::TowerMonthlyBrief& TowerAllDataRsp::monthly_brief() const {
  const ::proto::TowerMonthlyBrief* p = monthly_brief_;
  // @@protoc_insertion_point(field_get:proto.TowerAllDataRsp.monthly_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyBrief*>(
      &::proto::_TowerMonthlyBrief_default_instance_);
}
::proto::TowerMonthlyBrief* TowerAllDataRsp::mutable_monthly_brief() {
  
  if (monthly_brief_ == NULL) {
    monthly_brief_ = new ::proto::TowerMonthlyBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerAllDataRsp.monthly_brief)
  return monthly_brief_;
}
::proto::TowerMonthlyBrief* TowerAllDataRsp::release_monthly_brief() {
  // @@protoc_insertion_point(field_release:proto.TowerAllDataRsp.monthly_brief)
  
  ::proto::TowerMonthlyBrief* temp = monthly_brief_;
  monthly_brief_ = NULL;
  return temp;
}
void TowerAllDataRsp::set_allocated_monthly_brief(::proto::TowerMonthlyBrief* monthly_brief) {
  delete monthly_brief_;
  monthly_brief_ = monthly_brief;
  if (monthly_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerAllDataRsp.monthly_brief)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerEnterLevelReq::kEnterPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerEnterLevelReq::TowerEnterLevelReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerEnterLevelReq)
}
TowerEnterLevelReq::TowerEnterLevelReq(const TowerEnterLevelReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enter_point_id_ = from.enter_point_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerEnterLevelReq)
}

void TowerEnterLevelReq::SharedCtor() {
  enter_point_id_ = 0u;
  _cached_size_ = 0;
}

TowerEnterLevelReq::~TowerEnterLevelReq() {
  // @@protoc_insertion_point(destructor:proto.TowerEnterLevelReq)
  SharedDtor();
}

void TowerEnterLevelReq::SharedDtor() {
}

void TowerEnterLevelReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerEnterLevelReq::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerEnterLevelReq& TowerEnterLevelReq::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerEnterLevelReq* TowerEnterLevelReq::New(::google::protobuf::Arena* arena) const {
  TowerEnterLevelReq* n = new TowerEnterLevelReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerEnterLevelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerEnterLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enter_point_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TowerEnterLevelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerEnterLevelReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 enter_point_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerEnterLevelReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerEnterLevelReq)
  return false;
#undef DO_
}

void TowerEnterLevelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerEnterLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_point_id = 3;
  if (this->enter_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->enter_point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerEnterLevelReq)
}

::google::protobuf::uint8* TowerEnterLevelReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerEnterLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_point_id = 3;
  if (this->enter_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->enter_point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerEnterLevelReq)
  return target;
}

size_t TowerEnterLevelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerEnterLevelReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 enter_point_id = 3;
  if (this->enter_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerEnterLevelReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerEnterLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerEnterLevelReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerEnterLevelReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerEnterLevelReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerEnterLevelReq)
    MergeFrom(*source);
  }
}

void TowerEnterLevelReq::MergeFrom(const TowerEnterLevelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerEnterLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enter_point_id() != 0) {
    set_enter_point_id(from.enter_point_id());
  }
}

void TowerEnterLevelReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerEnterLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerEnterLevelReq::CopyFrom(const TowerEnterLevelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerEnterLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerEnterLevelReq::IsInitialized() const {
  return true;
}

void TowerEnterLevelReq::Swap(TowerEnterLevelReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerEnterLevelReq::InternalSwap(TowerEnterLevelReq* other) {
  using std::swap;
  swap(enter_point_id_, other->enter_point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerEnterLevelReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerEnterLevelReq

// uint32 enter_point_id = 3;
void TowerEnterLevelReq::clear_enter_point_id() {
  enter_point_id_ = 0u;
}
::google::protobuf::uint32 TowerEnterLevelReq::enter_point_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelReq.enter_point_id)
  return enter_point_id_;
}
void TowerEnterLevelReq::set_enter_point_id(::google::protobuf::uint32 value) {
  
  enter_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelReq.enter_point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerEnterLevelRsp::kTowerBuffIdListFieldNumber;
const int TowerEnterLevelRsp::kRetcodeFieldNumber;
const int TowerEnterLevelRsp::kLevelIndexFieldNumber;
const int TowerEnterLevelRsp::kFloorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerEnterLevelRsp::TowerEnterLevelRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerEnterLevelRsp)
}
TowerEnterLevelRsp::TowerEnterLevelRsp(const TowerEnterLevelRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tower_buff_id_list_(from.tower_buff_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_index_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(level_index_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerEnterLevelRsp)
}

void TowerEnterLevelRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_index_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(level_index_));
  _cached_size_ = 0;
}

TowerEnterLevelRsp::~TowerEnterLevelRsp() {
  // @@protoc_insertion_point(destructor:proto.TowerEnterLevelRsp)
  SharedDtor();
}

void TowerEnterLevelRsp::SharedDtor() {
}

void TowerEnterLevelRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerEnterLevelRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerEnterLevelRsp& TowerEnterLevelRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerEnterLevelRsp* TowerEnterLevelRsp::New(::google::protobuf::Arena* arena) const {
  TowerEnterLevelRsp* n = new TowerEnterLevelRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerEnterLevelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerEnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tower_buff_id_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_index_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(level_index_));
  _internal_metadata_.Clear();
}

bool TowerEnterLevelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerEnterLevelRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 floor_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 tower_buff_id_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tower_buff_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_tower_buff_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level_index = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerEnterLevelRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerEnterLevelRsp)
  return false;
#undef DO_
}

void TowerEnterLevelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerEnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 floor_id = 5;
  if (this->floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->floor_id(), output);
  }

  // repeated uint32 tower_buff_id_list = 10;
  if (this->tower_buff_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tower_buff_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->tower_buff_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->tower_buff_id_list(i), output);
  }

  // uint32 level_index = 14;
  if (this->level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->level_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerEnterLevelRsp)
}

::google::protobuf::uint8* TowerEnterLevelRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerEnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 floor_id = 5;
  if (this->floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->floor_id(), target);
  }

  // repeated uint32 tower_buff_id_list = 10;
  if (this->tower_buff_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _tower_buff_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->tower_buff_id_list_, target);
  }

  // uint32 level_index = 14;
  if (this->level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->level_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerEnterLevelRsp)
  return target;
}

size_t TowerEnterLevelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerEnterLevelRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 tower_buff_id_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->tower_buff_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tower_buff_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 floor_id = 5;
  if (this->floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor_id());
  }

  // uint32 level_index = 14;
  if (this->level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerEnterLevelRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerEnterLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerEnterLevelRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerEnterLevelRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerEnterLevelRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerEnterLevelRsp)
    MergeFrom(*source);
  }
}

void TowerEnterLevelRsp::MergeFrom(const TowerEnterLevelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerEnterLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tower_buff_id_list_.MergeFrom(from.tower_buff_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.floor_id() != 0) {
    set_floor_id(from.floor_id());
  }
  if (from.level_index() != 0) {
    set_level_index(from.level_index());
  }
}

void TowerEnterLevelRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerEnterLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerEnterLevelRsp::CopyFrom(const TowerEnterLevelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerEnterLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerEnterLevelRsp::IsInitialized() const {
  return true;
}

void TowerEnterLevelRsp::Swap(TowerEnterLevelRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerEnterLevelRsp::InternalSwap(TowerEnterLevelRsp* other) {
  using std::swap;
  tower_buff_id_list_.InternalSwap(&other->tower_buff_id_list_);
  swap(retcode_, other->retcode_);
  swap(floor_id_, other->floor_id_);
  swap(level_index_, other->level_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerEnterLevelRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerEnterLevelRsp

// repeated uint32 tower_buff_id_list = 10;
int TowerEnterLevelRsp::tower_buff_id_list_size() const {
  return tower_buff_id_list_.size();
}
void TowerEnterLevelRsp::clear_tower_buff_id_list() {
  tower_buff_id_list_.Clear();
}
::google::protobuf::uint32 TowerEnterLevelRsp::tower_buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.tower_buff_id_list)
  return tower_buff_id_list_.Get(index);
}
void TowerEnterLevelRsp::set_tower_buff_id_list(int index, ::google::protobuf::uint32 value) {
  tower_buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.tower_buff_id_list)
}
void TowerEnterLevelRsp::add_tower_buff_id_list(::google::protobuf::uint32 value) {
  tower_buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerEnterLevelRsp.tower_buff_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerEnterLevelRsp::tower_buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerEnterLevelRsp.tower_buff_id_list)
  return tower_buff_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerEnterLevelRsp::mutable_tower_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerEnterLevelRsp.tower_buff_id_list)
  return &tower_buff_id_list_;
}

// int32 retcode = 1;
void TowerEnterLevelRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TowerEnterLevelRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.retcode)
  return retcode_;
}
void TowerEnterLevelRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.retcode)
}

// uint32 level_index = 14;
void TowerEnterLevelRsp::clear_level_index() {
  level_index_ = 0u;
}
::google::protobuf::uint32 TowerEnterLevelRsp::level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.level_index)
  return level_index_;
}
void TowerEnterLevelRsp::set_level_index(::google::protobuf::uint32 value) {
  
  level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.level_index)
}

// uint32 floor_id = 5;
void TowerEnterLevelRsp::clear_floor_id() {
  floor_id_ = 0u;
}
::google::protobuf::uint32 TowerEnterLevelRsp::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerEnterLevelRsp.floor_id)
  return floor_id_;
}
void TowerEnterLevelRsp::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerEnterLevelRsp.floor_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerBuffSelectReq::kTowerBuffIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerBuffSelectReq::TowerBuffSelectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerBuffSelectReq)
}
TowerBuffSelectReq::TowerBuffSelectReq(const TowerBuffSelectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tower_buff_id_ = from.tower_buff_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerBuffSelectReq)
}

void TowerBuffSelectReq::SharedCtor() {
  tower_buff_id_ = 0u;
  _cached_size_ = 0;
}

TowerBuffSelectReq::~TowerBuffSelectReq() {
  // @@protoc_insertion_point(destructor:proto.TowerBuffSelectReq)
  SharedDtor();
}

void TowerBuffSelectReq::SharedDtor() {
}

void TowerBuffSelectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerBuffSelectReq::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerBuffSelectReq& TowerBuffSelectReq::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerBuffSelectReq* TowerBuffSelectReq::New(::google::protobuf::Arena* arena) const {
  TowerBuffSelectReq* n = new TowerBuffSelectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerBuffSelectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerBuffSelectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tower_buff_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TowerBuffSelectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerBuffSelectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 tower_buff_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_buff_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerBuffSelectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerBuffSelectReq)
  return false;
#undef DO_
}

void TowerBuffSelectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerBuffSelectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tower_buff_id = 5;
  if (this->tower_buff_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->tower_buff_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerBuffSelectReq)
}

::google::protobuf::uint8* TowerBuffSelectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerBuffSelectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tower_buff_id = 5;
  if (this->tower_buff_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->tower_buff_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerBuffSelectReq)
  return target;
}

size_t TowerBuffSelectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerBuffSelectReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 tower_buff_id = 5;
  if (this->tower_buff_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_buff_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerBuffSelectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerBuffSelectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerBuffSelectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerBuffSelectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerBuffSelectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerBuffSelectReq)
    MergeFrom(*source);
  }
}

void TowerBuffSelectReq::MergeFrom(const TowerBuffSelectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerBuffSelectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tower_buff_id() != 0) {
    set_tower_buff_id(from.tower_buff_id());
  }
}

void TowerBuffSelectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerBuffSelectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerBuffSelectReq::CopyFrom(const TowerBuffSelectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerBuffSelectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerBuffSelectReq::IsInitialized() const {
  return true;
}

void TowerBuffSelectReq::Swap(TowerBuffSelectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerBuffSelectReq::InternalSwap(TowerBuffSelectReq* other) {
  using std::swap;
  swap(tower_buff_id_, other->tower_buff_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerBuffSelectReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerBuffSelectReq

// uint32 tower_buff_id = 5;
void TowerBuffSelectReq::clear_tower_buff_id() {
  tower_buff_id_ = 0u;
}
::google::protobuf::uint32 TowerBuffSelectReq::tower_buff_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerBuffSelectReq.tower_buff_id)
  return tower_buff_id_;
}
void TowerBuffSelectReq::set_tower_buff_id(::google::protobuf::uint32 value) {
  
  tower_buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBuffSelectReq.tower_buff_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerBuffSelectRsp::kRetcodeFieldNumber;
const int TowerBuffSelectRsp::kTowerBuffIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerBuffSelectRsp::TowerBuffSelectRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerBuffSelectRsp)
}
TowerBuffSelectRsp::TowerBuffSelectRsp(const TowerBuffSelectRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&tower_buff_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(tower_buff_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerBuffSelectRsp)
}

void TowerBuffSelectRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tower_buff_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(tower_buff_id_));
  _cached_size_ = 0;
}

TowerBuffSelectRsp::~TowerBuffSelectRsp() {
  // @@protoc_insertion_point(destructor:proto.TowerBuffSelectRsp)
  SharedDtor();
}

void TowerBuffSelectRsp::SharedDtor() {
}

void TowerBuffSelectRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerBuffSelectRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerBuffSelectRsp& TowerBuffSelectRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerBuffSelectRsp* TowerBuffSelectRsp::New(::google::protobuf::Arena* arena) const {
  TowerBuffSelectRsp* n = new TowerBuffSelectRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerBuffSelectRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerBuffSelectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tower_buff_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(tower_buff_id_));
  _internal_metadata_.Clear();
}

bool TowerBuffSelectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerBuffSelectRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tower_buff_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_buff_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerBuffSelectRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerBuffSelectRsp)
  return false;
#undef DO_
}

void TowerBuffSelectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerBuffSelectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  // uint32 tower_buff_id = 13;
  if (this->tower_buff_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->tower_buff_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerBuffSelectRsp)
}

::google::protobuf::uint8* TowerBuffSelectRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerBuffSelectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  // uint32 tower_buff_id = 13;
  if (this->tower_buff_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->tower_buff_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerBuffSelectRsp)
  return target;
}

size_t TowerBuffSelectRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerBuffSelectRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 tower_buff_id = 13;
  if (this->tower_buff_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tower_buff_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerBuffSelectRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerBuffSelectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerBuffSelectRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerBuffSelectRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerBuffSelectRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerBuffSelectRsp)
    MergeFrom(*source);
  }
}

void TowerBuffSelectRsp::MergeFrom(const TowerBuffSelectRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerBuffSelectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.tower_buff_id() != 0) {
    set_tower_buff_id(from.tower_buff_id());
  }
}

void TowerBuffSelectRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerBuffSelectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerBuffSelectRsp::CopyFrom(const TowerBuffSelectRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerBuffSelectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerBuffSelectRsp::IsInitialized() const {
  return true;
}

void TowerBuffSelectRsp::Swap(TowerBuffSelectRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerBuffSelectRsp::InternalSwap(TowerBuffSelectRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(tower_buff_id_, other->tower_buff_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerBuffSelectRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerBuffSelectRsp

// int32 retcode = 11;
void TowerBuffSelectRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TowerBuffSelectRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerBuffSelectRsp.retcode)
  return retcode_;
}
void TowerBuffSelectRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBuffSelectRsp.retcode)
}

// uint32 tower_buff_id = 13;
void TowerBuffSelectRsp::clear_tower_buff_id() {
  tower_buff_id_ = 0u;
}
::google::protobuf::uint32 TowerBuffSelectRsp::tower_buff_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerBuffSelectRsp.tower_buff_id)
  return tower_buff_id_;
}
void TowerBuffSelectRsp::set_tower_buff_id(::google::protobuf::uint32 value) {
  
  tower_buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerBuffSelectRsp.tower_buff_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerSurrenderReq::TowerSurrenderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerSurrenderReq)
}
TowerSurrenderReq::TowerSurrenderReq(const TowerSurrenderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.TowerSurrenderReq)
}

void TowerSurrenderReq::SharedCtor() {
  _cached_size_ = 0;
}

TowerSurrenderReq::~TowerSurrenderReq() {
  // @@protoc_insertion_point(destructor:proto.TowerSurrenderReq)
  SharedDtor();
}

void TowerSurrenderReq::SharedDtor() {
}

void TowerSurrenderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerSurrenderReq::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerSurrenderReq& TowerSurrenderReq::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerSurrenderReq* TowerSurrenderReq::New(::google::protobuf::Arena* arena) const {
  TowerSurrenderReq* n = new TowerSurrenderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerSurrenderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerSurrenderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TowerSurrenderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerSurrenderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerSurrenderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerSurrenderReq)
  return false;
#undef DO_
}

void TowerSurrenderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerSurrenderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerSurrenderReq)
}

::google::protobuf::uint8* TowerSurrenderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerSurrenderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerSurrenderReq)
  return target;
}

size_t TowerSurrenderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerSurrenderReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerSurrenderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerSurrenderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerSurrenderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerSurrenderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerSurrenderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerSurrenderReq)
    MergeFrom(*source);
  }
}

void TowerSurrenderReq::MergeFrom(const TowerSurrenderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerSurrenderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TowerSurrenderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerSurrenderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerSurrenderReq::CopyFrom(const TowerSurrenderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerSurrenderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerSurrenderReq::IsInitialized() const {
  return true;
}

void TowerSurrenderReq::Swap(TowerSurrenderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerSurrenderReq::InternalSwap(TowerSurrenderReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerSurrenderReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerSurrenderReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerSurrenderRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerSurrenderRsp::TowerSurrenderRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerSurrenderRsp)
}
TowerSurrenderRsp::TowerSurrenderRsp(const TowerSurrenderRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerSurrenderRsp)
}

void TowerSurrenderRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TowerSurrenderRsp::~TowerSurrenderRsp() {
  // @@protoc_insertion_point(destructor:proto.TowerSurrenderRsp)
  SharedDtor();
}

void TowerSurrenderRsp::SharedDtor() {
}

void TowerSurrenderRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerSurrenderRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerSurrenderRsp& TowerSurrenderRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerSurrenderRsp* TowerSurrenderRsp::New(::google::protobuf::Arena* arena) const {
  TowerSurrenderRsp* n = new TowerSurrenderRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerSurrenderRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerSurrenderRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool TowerSurrenderRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerSurrenderRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerSurrenderRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerSurrenderRsp)
  return false;
#undef DO_
}

void TowerSurrenderRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerSurrenderRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerSurrenderRsp)
}

::google::protobuf::uint8* TowerSurrenderRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerSurrenderRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerSurrenderRsp)
  return target;
}

size_t TowerSurrenderRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerSurrenderRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerSurrenderRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerSurrenderRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerSurrenderRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerSurrenderRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerSurrenderRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerSurrenderRsp)
    MergeFrom(*source);
  }
}

void TowerSurrenderRsp::MergeFrom(const TowerSurrenderRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerSurrenderRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TowerSurrenderRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerSurrenderRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerSurrenderRsp::CopyFrom(const TowerSurrenderRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerSurrenderRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerSurrenderRsp::IsInitialized() const {
  return true;
}

void TowerSurrenderRsp::Swap(TowerSurrenderRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerSurrenderRsp::InternalSwap(TowerSurrenderRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerSurrenderRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerSurrenderRsp

// int32 retcode = 9;
void TowerSurrenderRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TowerSurrenderRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerSurrenderRsp.retcode)
  return retcode_;
}
void TowerSurrenderRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerSurrenderRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerGetFloorStarRewardReq::kFloorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerGetFloorStarRewardReq::TowerGetFloorStarRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerGetFloorStarRewardReq)
}
TowerGetFloorStarRewardReq::TowerGetFloorStarRewardReq(const TowerGetFloorStarRewardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  floor_id_ = from.floor_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerGetFloorStarRewardReq)
}

void TowerGetFloorStarRewardReq::SharedCtor() {
  floor_id_ = 0u;
  _cached_size_ = 0;
}

TowerGetFloorStarRewardReq::~TowerGetFloorStarRewardReq() {
  // @@protoc_insertion_point(destructor:proto.TowerGetFloorStarRewardReq)
  SharedDtor();
}

void TowerGetFloorStarRewardReq::SharedDtor() {
}

void TowerGetFloorStarRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerGetFloorStarRewardReq::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerGetFloorStarRewardReq& TowerGetFloorStarRewardReq::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerGetFloorStarRewardReq* TowerGetFloorStarRewardReq::New(::google::protobuf::Arena* arena) const {
  TowerGetFloorStarRewardReq* n = new TowerGetFloorStarRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerGetFloorStarRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerGetFloorStarRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  floor_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TowerGetFloorStarRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerGetFloorStarRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 floor_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerGetFloorStarRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerGetFloorStarRewardReq)
  return false;
#undef DO_
}

void TowerGetFloorStarRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerGetFloorStarRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 floor_id = 15;
  if (this->floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->floor_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerGetFloorStarRewardReq)
}

::google::protobuf::uint8* TowerGetFloorStarRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerGetFloorStarRewardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 floor_id = 15;
  if (this->floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->floor_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerGetFloorStarRewardReq)
  return target;
}

size_t TowerGetFloorStarRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerGetFloorStarRewardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 floor_id = 15;
  if (this->floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerGetFloorStarRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerGetFloorStarRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerGetFloorStarRewardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerGetFloorStarRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerGetFloorStarRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerGetFloorStarRewardReq)
    MergeFrom(*source);
  }
}

void TowerGetFloorStarRewardReq::MergeFrom(const TowerGetFloorStarRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerGetFloorStarRewardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.floor_id() != 0) {
    set_floor_id(from.floor_id());
  }
}

void TowerGetFloorStarRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerGetFloorStarRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerGetFloorStarRewardReq::CopyFrom(const TowerGetFloorStarRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerGetFloorStarRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerGetFloorStarRewardReq::IsInitialized() const {
  return true;
}

void TowerGetFloorStarRewardReq::Swap(TowerGetFloorStarRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerGetFloorStarRewardReq::InternalSwap(TowerGetFloorStarRewardReq* other) {
  using std::swap;
  swap(floor_id_, other->floor_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerGetFloorStarRewardReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerGetFloorStarRewardReq

// uint32 floor_id = 15;
void TowerGetFloorStarRewardReq::clear_floor_id() {
  floor_id_ = 0u;
}
::google::protobuf::uint32 TowerGetFloorStarRewardReq::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerGetFloorStarRewardReq.floor_id)
  return floor_id_;
}
void TowerGetFloorStarRewardReq::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerGetFloorStarRewardReq.floor_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerGetFloorStarRewardRsp::kRetcodeFieldNumber;
const int TowerGetFloorStarRewardRsp::kFloorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerGetFloorStarRewardRsp::TowerGetFloorStarRewardRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerGetFloorStarRewardRsp)
}
TowerGetFloorStarRewardRsp::TowerGetFloorStarRewardRsp(const TowerGetFloorStarRewardRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&floor_id_, &from.floor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&floor_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerGetFloorStarRewardRsp)
}

void TowerGetFloorStarRewardRsp::SharedCtor() {
  ::memset(&floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&floor_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

TowerGetFloorStarRewardRsp::~TowerGetFloorStarRewardRsp() {
  // @@protoc_insertion_point(destructor:proto.TowerGetFloorStarRewardRsp)
  SharedDtor();
}

void TowerGetFloorStarRewardRsp::SharedDtor() {
}

void TowerGetFloorStarRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerGetFloorStarRewardRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerGetFloorStarRewardRsp& TowerGetFloorStarRewardRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerGetFloorStarRewardRsp* TowerGetFloorStarRewardRsp::New(::google::protobuf::Arena* arena) const {
  TowerGetFloorStarRewardRsp* n = new TowerGetFloorStarRewardRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerGetFloorStarRewardRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerGetFloorStarRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&floor_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool TowerGetFloorStarRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerGetFloorStarRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 floor_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerGetFloorStarRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerGetFloorStarRewardRsp)
  return false;
#undef DO_
}

void TowerGetFloorStarRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerGetFloorStarRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 floor_id = 9;
  if (this->floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->floor_id(), output);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerGetFloorStarRewardRsp)
}

::google::protobuf::uint8* TowerGetFloorStarRewardRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerGetFloorStarRewardRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 floor_id = 9;
  if (this->floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->floor_id(), target);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerGetFloorStarRewardRsp)
  return target;
}

size_t TowerGetFloorStarRewardRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerGetFloorStarRewardRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 floor_id = 9;
  if (this->floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor_id());
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerGetFloorStarRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerGetFloorStarRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerGetFloorStarRewardRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerGetFloorStarRewardRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerGetFloorStarRewardRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerGetFloorStarRewardRsp)
    MergeFrom(*source);
  }
}

void TowerGetFloorStarRewardRsp::MergeFrom(const TowerGetFloorStarRewardRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerGetFloorStarRewardRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.floor_id() != 0) {
    set_floor_id(from.floor_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TowerGetFloorStarRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerGetFloorStarRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerGetFloorStarRewardRsp::CopyFrom(const TowerGetFloorStarRewardRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerGetFloorStarRewardRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerGetFloorStarRewardRsp::IsInitialized() const {
  return true;
}

void TowerGetFloorStarRewardRsp::Swap(TowerGetFloorStarRewardRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerGetFloorStarRewardRsp::InternalSwap(TowerGetFloorStarRewardRsp* other) {
  using std::swap;
  swap(floor_id_, other->floor_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerGetFloorStarRewardRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerGetFloorStarRewardRsp

// int32 retcode = 11;
void TowerGetFloorStarRewardRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TowerGetFloorStarRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerGetFloorStarRewardRsp.retcode)
  return retcode_;
}
void TowerGetFloorStarRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerGetFloorStarRewardRsp.retcode)
}

// uint32 floor_id = 9;
void TowerGetFloorStarRewardRsp::clear_floor_id() {
  floor_id_ = 0u;
}
::google::protobuf::uint32 TowerGetFloorStarRewardRsp::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerGetFloorStarRewardRsp.floor_id)
  return floor_id_;
}
void TowerGetFloorStarRewardRsp::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerGetFloorStarRewardRsp.floor_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerLevelEndNotify::kNextFloorIdFieldNumber;
const int TowerLevelEndNotify::kRewardItemListFieldNumber;
const int TowerLevelEndNotify::kContinueStateFieldNumber;
const int TowerLevelEndNotify::kIsSuccessFieldNumber;
const int TowerLevelEndNotify::kFinishedStarCondListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerLevelEndNotify::TowerLevelEndNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerLevelEndNotify)
}
TowerLevelEndNotify::TowerLevelEndNotify(const TowerLevelEndNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      finished_star_cond_list_(from.finished_star_cond_list_),
      reward_item_list_(from.reward_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&next_floor_id_, &from.next_floor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&continue_state_) -
    reinterpret_cast<char*>(&next_floor_id_)) + sizeof(continue_state_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerLevelEndNotify)
}

void TowerLevelEndNotify::SharedCtor() {
  ::memset(&next_floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&continue_state_) -
      reinterpret_cast<char*>(&next_floor_id_)) + sizeof(continue_state_));
  _cached_size_ = 0;
}

TowerLevelEndNotify::~TowerLevelEndNotify() {
  // @@protoc_insertion_point(destructor:proto.TowerLevelEndNotify)
  SharedDtor();
}

void TowerLevelEndNotify::SharedDtor() {
}

void TowerLevelEndNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerLevelEndNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerLevelEndNotify& TowerLevelEndNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerLevelEndNotify* TowerLevelEndNotify::New(::google::protobuf::Arena* arena) const {
  TowerLevelEndNotify* n = new TowerLevelEndNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerLevelEndNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerLevelEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finished_star_cond_list_.Clear();
  reward_item_list_.Clear();
  ::memset(&next_floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&continue_state_) -
      reinterpret_cast<char*>(&next_floor_id_)) + sizeof(continue_state_));
  _internal_metadata_.Clear();
}

bool TowerLevelEndNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerLevelEndNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 next_floor_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_success = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 finished_star_cond_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_finished_star_cond_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_finished_star_cond_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam reward_item_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 continue_state = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &continue_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerLevelEndNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerLevelEndNotify)
  return false;
#undef DO_
}

void TowerLevelEndNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerLevelEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 next_floor_id = 4;
  if (this->next_floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->next_floor_id(), output);
  }

  // bool is_success = 5;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_success(), output);
  }

  // repeated uint32 finished_star_cond_list = 6;
  if (this->finished_star_cond_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finished_star_cond_list_cached_byte_size_));
  }
  for (int i = 0, n = this->finished_star_cond_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->finished_star_cond_list(i), output);
  }

  // repeated .proto.ItemParam reward_item_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reward_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->reward_item_list(static_cast<int>(i)), output);
  }

  // uint32 continue_state = 15;
  if (this->continue_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->continue_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerLevelEndNotify)
}

::google::protobuf::uint8* TowerLevelEndNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerLevelEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 next_floor_id = 4;
  if (this->next_floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->next_floor_id(), target);
  }

  // bool is_success = 5;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_success(), target);
  }

  // repeated uint32 finished_star_cond_list = 6;
  if (this->finished_star_cond_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _finished_star_cond_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->finished_star_cond_list_, target);
  }

  // repeated .proto.ItemParam reward_item_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reward_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->reward_item_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 continue_state = 15;
  if (this->continue_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->continue_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerLevelEndNotify)
  return target;
}

size_t TowerLevelEndNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerLevelEndNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 finished_star_cond_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->finished_star_cond_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finished_star_cond_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.ItemParam reward_item_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->reward_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward_item_list(static_cast<int>(i)));
    }
  }

  // uint32 next_floor_id = 4;
  if (this->next_floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->next_floor_id());
  }

  // bool is_success = 5;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  // uint32 continue_state = 15;
  if (this->continue_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->continue_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerLevelEndNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerLevelEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerLevelEndNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerLevelEndNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerLevelEndNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerLevelEndNotify)
    MergeFrom(*source);
  }
}

void TowerLevelEndNotify::MergeFrom(const TowerLevelEndNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerLevelEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  finished_star_cond_list_.MergeFrom(from.finished_star_cond_list_);
  reward_item_list_.MergeFrom(from.reward_item_list_);
  if (from.next_floor_id() != 0) {
    set_next_floor_id(from.next_floor_id());
  }
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
  if (from.continue_state() != 0) {
    set_continue_state(from.continue_state());
  }
}

void TowerLevelEndNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerLevelEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerLevelEndNotify::CopyFrom(const TowerLevelEndNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerLevelEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerLevelEndNotify::IsInitialized() const {
  return true;
}

void TowerLevelEndNotify::Swap(TowerLevelEndNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerLevelEndNotify::InternalSwap(TowerLevelEndNotify* other) {
  using std::swap;
  finished_star_cond_list_.InternalSwap(&other->finished_star_cond_list_);
  reward_item_list_.InternalSwap(&other->reward_item_list_);
  swap(next_floor_id_, other->next_floor_id_);
  swap(is_success_, other->is_success_);
  swap(continue_state_, other->continue_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerLevelEndNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerLevelEndNotify

// uint32 next_floor_id = 4;
void TowerLevelEndNotify::clear_next_floor_id() {
  next_floor_id_ = 0u;
}
::google::protobuf::uint32 TowerLevelEndNotify::next_floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.next_floor_id)
  return next_floor_id_;
}
void TowerLevelEndNotify::set_next_floor_id(::google::protobuf::uint32 value) {
  
  next_floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.next_floor_id)
}

// repeated .proto.ItemParam reward_item_list = 12;
int TowerLevelEndNotify::reward_item_list_size() const {
  return reward_item_list_.size();
}
void TowerLevelEndNotify::clear_reward_item_list() {
  reward_item_list_.Clear();
}
const ::proto::ItemParam& TowerLevelEndNotify::reward_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_.Get(index);
}
::proto::ItemParam* TowerLevelEndNotify::mutable_reward_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_.Mutable(index);
}
::proto::ItemParam* TowerLevelEndNotify::add_reward_item_list() {
  // @@protoc_insertion_point(field_add:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TowerLevelEndNotify::mutable_reward_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelEndNotify.reward_item_list)
  return &reward_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TowerLevelEndNotify::reward_item_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelEndNotify.reward_item_list)
  return reward_item_list_;
}

// uint32 continue_state = 15;
void TowerLevelEndNotify::clear_continue_state() {
  continue_state_ = 0u;
}
::google::protobuf::uint32 TowerLevelEndNotify::continue_state() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.continue_state)
  return continue_state_;
}
void TowerLevelEndNotify::set_continue_state(::google::protobuf::uint32 value) {
  
  continue_state_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.continue_state)
}

// bool is_success = 5;
void TowerLevelEndNotify::clear_is_success() {
  is_success_ = false;
}
bool TowerLevelEndNotify::is_success() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.is_success)
  return is_success_;
}
void TowerLevelEndNotify::set_is_success(bool value) {
  
  is_success_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.is_success)
}

// repeated uint32 finished_star_cond_list = 6;
int TowerLevelEndNotify::finished_star_cond_list_size() const {
  return finished_star_cond_list_.size();
}
void TowerLevelEndNotify::clear_finished_star_cond_list() {
  finished_star_cond_list_.Clear();
}
::google::protobuf::uint32 TowerLevelEndNotify::finished_star_cond_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelEndNotify.finished_star_cond_list)
  return finished_star_cond_list_.Get(index);
}
void TowerLevelEndNotify::set_finished_star_cond_list(int index, ::google::protobuf::uint32 value) {
  finished_star_cond_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.TowerLevelEndNotify.finished_star_cond_list)
}
void TowerLevelEndNotify::add_finished_star_cond_list(::google::protobuf::uint32 value) {
  finished_star_cond_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.TowerLevelEndNotify.finished_star_cond_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TowerLevelEndNotify::finished_star_cond_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelEndNotify.finished_star_cond_list)
  return finished_star_cond_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TowerLevelEndNotify::mutable_finished_star_cond_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelEndNotify.finished_star_cond_list)
  return &finished_star_cond_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerLevelStarCondData::kIsFailFieldNumber;
const int TowerLevelStarCondData::kCondValueFieldNumber;
const int TowerLevelStarCondData::kIsPauseFieldNumber;
const int TowerLevelStarCondData::kStarCondIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerLevelStarCondData::TowerLevelStarCondData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerLevelStarCondData)
}
TowerLevelStarCondData::TowerLevelStarCondData(const TowerLevelStarCondData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_fail_, &from.is_fail_,
    static_cast<size_t>(reinterpret_cast<char*>(&cond_value_) -
    reinterpret_cast<char*>(&is_fail_)) + sizeof(cond_value_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerLevelStarCondData)
}

void TowerLevelStarCondData::SharedCtor() {
  ::memset(&is_fail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_value_) -
      reinterpret_cast<char*>(&is_fail_)) + sizeof(cond_value_));
  _cached_size_ = 0;
}

TowerLevelStarCondData::~TowerLevelStarCondData() {
  // @@protoc_insertion_point(destructor:proto.TowerLevelStarCondData)
  SharedDtor();
}

void TowerLevelStarCondData::SharedDtor() {
}

void TowerLevelStarCondData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerLevelStarCondData::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerLevelStarCondData& TowerLevelStarCondData::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerLevelStarCondData* TowerLevelStarCondData::New(::google::protobuf::Arena* arena) const {
  TowerLevelStarCondData* n = new TowerLevelStarCondData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerLevelStarCondData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerLevelStarCondData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_fail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_value_) -
      reinterpret_cast<char*>(&is_fail_)) + sizeof(cond_value_));
  _internal_metadata_.Clear();
}

bool TowerLevelStarCondData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerLevelStarCondData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 star_cond_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_cond_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cond_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cond_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_pause = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_pause_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_fail = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerLevelStarCondData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerLevelStarCondData)
  return false;
#undef DO_
}

void TowerLevelStarCondData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerLevelStarCondData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 star_cond_index = 6;
  if (this->star_cond_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->star_cond_index(), output);
  }

  // uint32 cond_value = 9;
  if (this->cond_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->cond_value(), output);
  }

  // bool is_pause = 13;
  if (this->is_pause() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_pause(), output);
  }

  // bool is_fail = 15;
  if (this->is_fail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_fail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerLevelStarCondData)
}

::google::protobuf::uint8* TowerLevelStarCondData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerLevelStarCondData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 star_cond_index = 6;
  if (this->star_cond_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->star_cond_index(), target);
  }

  // uint32 cond_value = 9;
  if (this->cond_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->cond_value(), target);
  }

  // bool is_pause = 13;
  if (this->is_pause() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_pause(), target);
  }

  // bool is_fail = 15;
  if (this->is_fail() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_fail(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerLevelStarCondData)
  return target;
}

size_t TowerLevelStarCondData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerLevelStarCondData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_fail = 15;
  if (this->is_fail() != 0) {
    total_size += 1 + 1;
  }

  // bool is_pause = 13;
  if (this->is_pause() != 0) {
    total_size += 1 + 1;
  }

  // uint32 star_cond_index = 6;
  if (this->star_cond_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->star_cond_index());
  }

  // uint32 cond_value = 9;
  if (this->cond_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cond_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerLevelStarCondData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerLevelStarCondData)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerLevelStarCondData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerLevelStarCondData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerLevelStarCondData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerLevelStarCondData)
    MergeFrom(*source);
  }
}

void TowerLevelStarCondData::MergeFrom(const TowerLevelStarCondData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerLevelStarCondData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_fail() != 0) {
    set_is_fail(from.is_fail());
  }
  if (from.is_pause() != 0) {
    set_is_pause(from.is_pause());
  }
  if (from.star_cond_index() != 0) {
    set_star_cond_index(from.star_cond_index());
  }
  if (from.cond_value() != 0) {
    set_cond_value(from.cond_value());
  }
}

void TowerLevelStarCondData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerLevelStarCondData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerLevelStarCondData::CopyFrom(const TowerLevelStarCondData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerLevelStarCondData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerLevelStarCondData::IsInitialized() const {
  return true;
}

void TowerLevelStarCondData::Swap(TowerLevelStarCondData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerLevelStarCondData::InternalSwap(TowerLevelStarCondData* other) {
  using std::swap;
  swap(is_fail_, other->is_fail_);
  swap(is_pause_, other->is_pause_);
  swap(star_cond_index_, other->star_cond_index_);
  swap(cond_value_, other->cond_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerLevelStarCondData::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerLevelStarCondData

// bool is_fail = 15;
void TowerLevelStarCondData::clear_is_fail() {
  is_fail_ = false;
}
bool TowerLevelStarCondData::is_fail() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.is_fail)
  return is_fail_;
}
void TowerLevelStarCondData::set_is_fail(bool value) {
  
  is_fail_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.is_fail)
}

// uint32 cond_value = 9;
void TowerLevelStarCondData::clear_cond_value() {
  cond_value_ = 0u;
}
::google::protobuf::uint32 TowerLevelStarCondData::cond_value() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.cond_value)
  return cond_value_;
}
void TowerLevelStarCondData::set_cond_value(::google::protobuf::uint32 value) {
  
  cond_value_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.cond_value)
}

// bool is_pause = 13;
void TowerLevelStarCondData::clear_is_pause() {
  is_pause_ = false;
}
bool TowerLevelStarCondData::is_pause() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.is_pause)
  return is_pause_;
}
void TowerLevelStarCondData::set_is_pause(bool value) {
  
  is_pause_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.is_pause)
}

// uint32 star_cond_index = 6;
void TowerLevelStarCondData::clear_star_cond_index() {
  star_cond_index_ = 0u;
}
::google::protobuf::uint32 TowerLevelStarCondData::star_cond_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondData.star_cond_index)
  return star_cond_index_;
}
void TowerLevelStarCondData::set_star_cond_index(::google::protobuf::uint32 value) {
  
  star_cond_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondData.star_cond_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerLevelStarCondNotify::kLevelIndexFieldNumber;
const int TowerLevelStarCondNotify::kFloorIdFieldNumber;
const int TowerLevelStarCondNotify::kCondDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerLevelStarCondNotify::TowerLevelStarCondNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerLevelStarCondNotify)
}
TowerLevelStarCondNotify::TowerLevelStarCondNotify(const TowerLevelStarCondNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cond_data_list_(from.cond_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&floor_id_, &from.floor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_index_) -
    reinterpret_cast<char*>(&floor_id_)) + sizeof(level_index_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerLevelStarCondNotify)
}

void TowerLevelStarCondNotify::SharedCtor() {
  ::memset(&floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_index_) -
      reinterpret_cast<char*>(&floor_id_)) + sizeof(level_index_));
  _cached_size_ = 0;
}

TowerLevelStarCondNotify::~TowerLevelStarCondNotify() {
  // @@protoc_insertion_point(destructor:proto.TowerLevelStarCondNotify)
  SharedDtor();
}

void TowerLevelStarCondNotify::SharedDtor() {
}

void TowerLevelStarCondNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerLevelStarCondNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerLevelStarCondNotify& TowerLevelStarCondNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerLevelStarCondNotify* TowerLevelStarCondNotify::New(::google::protobuf::Arena* arena) const {
  TowerLevelStarCondNotify* n = new TowerLevelStarCondNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerLevelStarCondNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerLevelStarCondNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cond_data_list_.Clear();
  ::memset(&floor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_index_) -
      reinterpret_cast<char*>(&floor_id_)) + sizeof(level_index_));
  _internal_metadata_.Clear();
}

bool TowerLevelStarCondNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerLevelStarCondNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.TowerLevelStarCondData cond_data_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cond_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 floor_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level_index = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerLevelStarCondNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerLevelStarCondNotify)
  return false;
#undef DO_
}

void TowerLevelStarCondNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerLevelStarCondNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TowerLevelStarCondData cond_data_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cond_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->cond_data_list(static_cast<int>(i)), output);
  }

  // uint32 floor_id = 11;
  if (this->floor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->floor_id(), output);
  }

  // uint32 level_index = 14;
  if (this->level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->level_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerLevelStarCondNotify)
}

::google::protobuf::uint8* TowerLevelStarCondNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerLevelStarCondNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TowerLevelStarCondData cond_data_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cond_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->cond_data_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 floor_id = 11;
  if (this->floor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->floor_id(), target);
  }

  // uint32 level_index = 14;
  if (this->level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->level_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerLevelStarCondNotify)
  return target;
}

size_t TowerLevelStarCondNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerLevelStarCondNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TowerLevelStarCondData cond_data_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->cond_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cond_data_list(static_cast<int>(i)));
    }
  }

  // uint32 floor_id = 11;
  if (this->floor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor_id());
  }

  // uint32 level_index = 14;
  if (this->level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerLevelStarCondNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerLevelStarCondNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerLevelStarCondNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerLevelStarCondNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerLevelStarCondNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerLevelStarCondNotify)
    MergeFrom(*source);
  }
}

void TowerLevelStarCondNotify::MergeFrom(const TowerLevelStarCondNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerLevelStarCondNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cond_data_list_.MergeFrom(from.cond_data_list_);
  if (from.floor_id() != 0) {
    set_floor_id(from.floor_id());
  }
  if (from.level_index() != 0) {
    set_level_index(from.level_index());
  }
}

void TowerLevelStarCondNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerLevelStarCondNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerLevelStarCondNotify::CopyFrom(const TowerLevelStarCondNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerLevelStarCondNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerLevelStarCondNotify::IsInitialized() const {
  return true;
}

void TowerLevelStarCondNotify::Swap(TowerLevelStarCondNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerLevelStarCondNotify::InternalSwap(TowerLevelStarCondNotify* other) {
  using std::swap;
  cond_data_list_.InternalSwap(&other->cond_data_list_);
  swap(floor_id_, other->floor_id_);
  swap(level_index_, other->level_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerLevelStarCondNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerLevelStarCondNotify

// uint32 level_index = 14;
void TowerLevelStarCondNotify::clear_level_index() {
  level_index_ = 0u;
}
::google::protobuf::uint32 TowerLevelStarCondNotify::level_index() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondNotify.level_index)
  return level_index_;
}
void TowerLevelStarCondNotify::set_level_index(::google::protobuf::uint32 value) {
  
  level_index_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondNotify.level_index)
}

// uint32 floor_id = 11;
void TowerLevelStarCondNotify::clear_floor_id() {
  floor_id_ = 0u;
}
::google::protobuf::uint32 TowerLevelStarCondNotify::floor_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondNotify.floor_id)
  return floor_id_;
}
void TowerLevelStarCondNotify::set_floor_id(::google::protobuf::uint32 value) {
  
  floor_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerLevelStarCondNotify.floor_id)
}

// repeated .proto.TowerLevelStarCondData cond_data_list = 9;
int TowerLevelStarCondNotify::cond_data_list_size() const {
  return cond_data_list_.size();
}
void TowerLevelStarCondNotify::clear_cond_data_list() {
  cond_data_list_.Clear();
}
const ::proto::TowerLevelStarCondData& TowerLevelStarCondNotify::cond_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_.Get(index);
}
::proto::TowerLevelStarCondData* TowerLevelStarCondNotify::mutable_cond_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_.Mutable(index);
}
::proto::TowerLevelStarCondData* TowerLevelStarCondNotify::add_cond_data_list() {
  // @@protoc_insertion_point(field_add:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerLevelStarCondData >*
TowerLevelStarCondNotify::mutable_cond_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerLevelStarCondNotify.cond_data_list)
  return &cond_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerLevelStarCondData >&
TowerLevelStarCondNotify::cond_data_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerLevelStarCondNotify.cond_data_list)
  return cond_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerMiddleLevelChangeTeamNotify::TowerMiddleLevelChangeTeamNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerMiddleLevelChangeTeamNotify)
}
TowerMiddleLevelChangeTeamNotify::TowerMiddleLevelChangeTeamNotify(const TowerMiddleLevelChangeTeamNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.TowerMiddleLevelChangeTeamNotify)
}

void TowerMiddleLevelChangeTeamNotify::SharedCtor() {
  _cached_size_ = 0;
}

TowerMiddleLevelChangeTeamNotify::~TowerMiddleLevelChangeTeamNotify() {
  // @@protoc_insertion_point(destructor:proto.TowerMiddleLevelChangeTeamNotify)
  SharedDtor();
}

void TowerMiddleLevelChangeTeamNotify::SharedDtor() {
}

void TowerMiddleLevelChangeTeamNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerMiddleLevelChangeTeamNotify::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerMiddleLevelChangeTeamNotify& TowerMiddleLevelChangeTeamNotify::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerMiddleLevelChangeTeamNotify* TowerMiddleLevelChangeTeamNotify::New(::google::protobuf::Arena* arena) const {
  TowerMiddleLevelChangeTeamNotify* n = new TowerMiddleLevelChangeTeamNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerMiddleLevelChangeTeamNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerMiddleLevelChangeTeamNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TowerMiddleLevelChangeTeamNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerMiddleLevelChangeTeamNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerMiddleLevelChangeTeamNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerMiddleLevelChangeTeamNotify)
  return false;
#undef DO_
}

void TowerMiddleLevelChangeTeamNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerMiddleLevelChangeTeamNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerMiddleLevelChangeTeamNotify)
}

::google::protobuf::uint8* TowerMiddleLevelChangeTeamNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerMiddleLevelChangeTeamNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerMiddleLevelChangeTeamNotify)
  return target;
}

size_t TowerMiddleLevelChangeTeamNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerMiddleLevelChangeTeamNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerMiddleLevelChangeTeamNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerMiddleLevelChangeTeamNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerMiddleLevelChangeTeamNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerMiddleLevelChangeTeamNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerMiddleLevelChangeTeamNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerMiddleLevelChangeTeamNotify)
    MergeFrom(*source);
  }
}

void TowerMiddleLevelChangeTeamNotify::MergeFrom(const TowerMiddleLevelChangeTeamNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerMiddleLevelChangeTeamNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TowerMiddleLevelChangeTeamNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerMiddleLevelChangeTeamNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerMiddleLevelChangeTeamNotify::CopyFrom(const TowerMiddleLevelChangeTeamNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerMiddleLevelChangeTeamNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerMiddleLevelChangeTeamNotify::IsInitialized() const {
  return true;
}

void TowerMiddleLevelChangeTeamNotify::Swap(TowerMiddleLevelChangeTeamNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerMiddleLevelChangeTeamNotify::InternalSwap(TowerMiddleLevelChangeTeamNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerMiddleLevelChangeTeamNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerMiddleLevelChangeTeamNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerFightRecordPair::kAvatarIdFieldNumber;
const int TowerFightRecordPair::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerFightRecordPair::TowerFightRecordPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerFightRecordPair)
}
TowerFightRecordPair::TowerFightRecordPair(const TowerFightRecordPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_id_, &from.avatar_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&avatar_id_)) + sizeof(data_));
  // @@protoc_insertion_point(copy_constructor:proto.TowerFightRecordPair)
}

void TowerFightRecordPair::SharedCtor() {
  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(data_));
  _cached_size_ = 0;
}

TowerFightRecordPair::~TowerFightRecordPair() {
  // @@protoc_insertion_point(destructor:proto.TowerFightRecordPair)
  SharedDtor();
}

void TowerFightRecordPair::SharedDtor() {
}

void TowerFightRecordPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerFightRecordPair::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerFightRecordPair& TowerFightRecordPair::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerFightRecordPair* TowerFightRecordPair::New(::google::protobuf::Arena* arena) const {
  TowerFightRecordPair* n = new TowerFightRecordPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerFightRecordPair::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerFightRecordPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&avatar_id_)) + sizeof(data_));
  _internal_metadata_.Clear();
}

bool TowerFightRecordPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerFightRecordPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerFightRecordPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerFightRecordPair)
  return false;
#undef DO_
}

void TowerFightRecordPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerFightRecordPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint32 data = 3;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerFightRecordPair)
}

::google::protobuf::uint8* TowerFightRecordPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerFightRecordPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint32 data = 3;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerFightRecordPair)
  return target;
}

size_t TowerFightRecordPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerFightRecordPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 data = 3;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerFightRecordPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerFightRecordPair)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerFightRecordPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerFightRecordPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerFightRecordPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerFightRecordPair)
    MergeFrom(*source);
  }
}

void TowerFightRecordPair::MergeFrom(const TowerFightRecordPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerFightRecordPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
}

void TowerFightRecordPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerFightRecordPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerFightRecordPair::CopyFrom(const TowerFightRecordPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerFightRecordPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerFightRecordPair::IsInitialized() const {
  return true;
}

void TowerFightRecordPair::Swap(TowerFightRecordPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerFightRecordPair::InternalSwap(TowerFightRecordPair* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerFightRecordPair::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerFightRecordPair

// uint32 avatar_id = 1;
void TowerFightRecordPair::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 TowerFightRecordPair::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.TowerFightRecordPair.avatar_id)
  return avatar_id_;
}
void TowerFightRecordPair::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFightRecordPair.avatar_id)
}

// uint32 data = 3;
void TowerFightRecordPair::clear_data() {
  data_ = 0u;
}
::google::protobuf::uint32 TowerFightRecordPair::data() const {
  // @@protoc_insertion_point(field_get:proto.TowerFightRecordPair.data)
  return data_;
}
void TowerFightRecordPair::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerFightRecordPair.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerMonthlyCombatRecord::kMostKillAvatarPairFieldNumber;
const int TowerMonthlyCombatRecord::kMostCastNormalSkillAvatarPairFieldNumber;
const int TowerMonthlyCombatRecord::kMostRevealAvatarListFieldNumber;
const int TowerMonthlyCombatRecord::kMostCastEnergySkillAvatarPairFieldNumber;
const int TowerMonthlyCombatRecord::kHighestDpsAvatrPairFieldNumber;
const int TowerMonthlyCombatRecord::kMostTakeDamageAvatarPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerMonthlyCombatRecord::TowerMonthlyCombatRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerMonthlyCombatRecord)
}
TowerMonthlyCombatRecord::TowerMonthlyCombatRecord(const TowerMonthlyCombatRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      most_reveal_avatar_list_(from.most_reveal_avatar_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_most_cast_energy_skill_avatar_pair()) {
    most_cast_energy_skill_avatar_pair_ = new ::proto::TowerFightRecordPair(*from.most_cast_energy_skill_avatar_pair_);
  } else {
    most_cast_energy_skill_avatar_pair_ = NULL;
  }
  if (from.has_most_cast_normal_skill_avatar_pair()) {
    most_cast_normal_skill_avatar_pair_ = new ::proto::TowerFightRecordPair(*from.most_cast_normal_skill_avatar_pair_);
  } else {
    most_cast_normal_skill_avatar_pair_ = NULL;
  }
  if (from.has_most_take_damage_avatar_pair()) {
    most_take_damage_avatar_pair_ = new ::proto::TowerFightRecordPair(*from.most_take_damage_avatar_pair_);
  } else {
    most_take_damage_avatar_pair_ = NULL;
  }
  if (from.has_highest_dps_avatr_pair()) {
    highest_dps_avatr_pair_ = new ::proto::TowerFightRecordPair(*from.highest_dps_avatr_pair_);
  } else {
    highest_dps_avatr_pair_ = NULL;
  }
  if (from.has_most_kill_avatar_pair()) {
    most_kill_avatar_pair_ = new ::proto::TowerFightRecordPair(*from.most_kill_avatar_pair_);
  } else {
    most_kill_avatar_pair_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.TowerMonthlyCombatRecord)
}

void TowerMonthlyCombatRecord::SharedCtor() {
  ::memset(&most_cast_energy_skill_avatar_pair_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&most_kill_avatar_pair_) -
      reinterpret_cast<char*>(&most_cast_energy_skill_avatar_pair_)) + sizeof(most_kill_avatar_pair_));
  _cached_size_ = 0;
}

TowerMonthlyCombatRecord::~TowerMonthlyCombatRecord() {
  // @@protoc_insertion_point(destructor:proto.TowerMonthlyCombatRecord)
  SharedDtor();
}

void TowerMonthlyCombatRecord::SharedDtor() {
  if (this != internal_default_instance()) delete most_cast_energy_skill_avatar_pair_;
  if (this != internal_default_instance()) delete most_cast_normal_skill_avatar_pair_;
  if (this != internal_default_instance()) delete most_take_damage_avatar_pair_;
  if (this != internal_default_instance()) delete highest_dps_avatr_pair_;
  if (this != internal_default_instance()) delete most_kill_avatar_pair_;
}

void TowerMonthlyCombatRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerMonthlyCombatRecord::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerMonthlyCombatRecord& TowerMonthlyCombatRecord::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerMonthlyCombatRecord* TowerMonthlyCombatRecord::New(::google::protobuf::Arena* arena) const {
  TowerMonthlyCombatRecord* n = new TowerMonthlyCombatRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerMonthlyCombatRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerMonthlyCombatRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  most_reveal_avatar_list_.Clear();
  if (GetArenaNoVirtual() == NULL && most_cast_energy_skill_avatar_pair_ != NULL) {
    delete most_cast_energy_skill_avatar_pair_;
  }
  most_cast_energy_skill_avatar_pair_ = NULL;
  if (GetArenaNoVirtual() == NULL && most_cast_normal_skill_avatar_pair_ != NULL) {
    delete most_cast_normal_skill_avatar_pair_;
  }
  most_cast_normal_skill_avatar_pair_ = NULL;
  if (GetArenaNoVirtual() == NULL && most_take_damage_avatar_pair_ != NULL) {
    delete most_take_damage_avatar_pair_;
  }
  most_take_damage_avatar_pair_ = NULL;
  if (GetArenaNoVirtual() == NULL && highest_dps_avatr_pair_ != NULL) {
    delete highest_dps_avatr_pair_;
  }
  highest_dps_avatr_pair_ = NULL;
  if (GetArenaNoVirtual() == NULL && most_kill_avatar_pair_ != NULL) {
    delete most_kill_avatar_pair_;
  }
  most_kill_avatar_pair_ = NULL;
  _internal_metadata_.Clear();
}

bool TowerMonthlyCombatRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerMonthlyCombatRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_most_cast_energy_skill_avatar_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.TowerFightRecordPair most_reveal_avatar_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_most_reveal_avatar_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_most_cast_normal_skill_avatar_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerFightRecordPair most_take_damage_avatar_pair = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_most_take_damage_avatar_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerFightRecordPair highest_dps_avatr_pair = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_highest_dps_avatr_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerFightRecordPair most_kill_avatar_pair = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_most_kill_avatar_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerMonthlyCombatRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerMonthlyCombatRecord)
  return false;
#undef DO_
}

void TowerMonthlyCombatRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerMonthlyCombatRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
  if (this->has_most_cast_energy_skill_avatar_pair()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->most_cast_energy_skill_avatar_pair_, output);
  }

  // repeated .proto.TowerFightRecordPair most_reveal_avatar_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->most_reveal_avatar_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->most_reveal_avatar_list(static_cast<int>(i)), output);
  }

  // .proto.TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
  if (this->has_most_cast_normal_skill_avatar_pair()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->most_cast_normal_skill_avatar_pair_, output);
  }

  // .proto.TowerFightRecordPair most_take_damage_avatar_pair = 9;
  if (this->has_most_take_damage_avatar_pair()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->most_take_damage_avatar_pair_, output);
  }

  // .proto.TowerFightRecordPair highest_dps_avatr_pair = 12;
  if (this->has_highest_dps_avatr_pair()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->highest_dps_avatr_pair_, output);
  }

  // .proto.TowerFightRecordPair most_kill_avatar_pair = 14;
  if (this->has_most_kill_avatar_pair()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->most_kill_avatar_pair_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerMonthlyCombatRecord)
}

::google::protobuf::uint8* TowerMonthlyCombatRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerMonthlyCombatRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
  if (this->has_most_cast_energy_skill_avatar_pair()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->most_cast_energy_skill_avatar_pair_, deterministic, target);
  }

  // repeated .proto.TowerFightRecordPair most_reveal_avatar_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->most_reveal_avatar_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->most_reveal_avatar_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
  if (this->has_most_cast_normal_skill_avatar_pair()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->most_cast_normal_skill_avatar_pair_, deterministic, target);
  }

  // .proto.TowerFightRecordPair most_take_damage_avatar_pair = 9;
  if (this->has_most_take_damage_avatar_pair()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->most_take_damage_avatar_pair_, deterministic, target);
  }

  // .proto.TowerFightRecordPair highest_dps_avatr_pair = 12;
  if (this->has_highest_dps_avatr_pair()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->highest_dps_avatr_pair_, deterministic, target);
  }

  // .proto.TowerFightRecordPair most_kill_avatar_pair = 14;
  if (this->has_most_kill_avatar_pair()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->most_kill_avatar_pair_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerMonthlyCombatRecord)
  return target;
}

size_t TowerMonthlyCombatRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerMonthlyCombatRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TowerFightRecordPair most_reveal_avatar_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->most_reveal_avatar_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->most_reveal_avatar_list(static_cast<int>(i)));
    }
  }

  // .proto.TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
  if (this->has_most_cast_energy_skill_avatar_pair()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->most_cast_energy_skill_avatar_pair_);
  }

  // .proto.TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
  if (this->has_most_cast_normal_skill_avatar_pair()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->most_cast_normal_skill_avatar_pair_);
  }

  // .proto.TowerFightRecordPair most_take_damage_avatar_pair = 9;
  if (this->has_most_take_damage_avatar_pair()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->most_take_damage_avatar_pair_);
  }

  // .proto.TowerFightRecordPair highest_dps_avatr_pair = 12;
  if (this->has_highest_dps_avatr_pair()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->highest_dps_avatr_pair_);
  }

  // .proto.TowerFightRecordPair most_kill_avatar_pair = 14;
  if (this->has_most_kill_avatar_pair()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->most_kill_avatar_pair_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerMonthlyCombatRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerMonthlyCombatRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerMonthlyCombatRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerMonthlyCombatRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerMonthlyCombatRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerMonthlyCombatRecord)
    MergeFrom(*source);
  }
}

void TowerMonthlyCombatRecord::MergeFrom(const TowerMonthlyCombatRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerMonthlyCombatRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  most_reveal_avatar_list_.MergeFrom(from.most_reveal_avatar_list_);
  if (from.has_most_cast_energy_skill_avatar_pair()) {
    mutable_most_cast_energy_skill_avatar_pair()->::proto::TowerFightRecordPair::MergeFrom(from.most_cast_energy_skill_avatar_pair());
  }
  if (from.has_most_cast_normal_skill_avatar_pair()) {
    mutable_most_cast_normal_skill_avatar_pair()->::proto::TowerFightRecordPair::MergeFrom(from.most_cast_normal_skill_avatar_pair());
  }
  if (from.has_most_take_damage_avatar_pair()) {
    mutable_most_take_damage_avatar_pair()->::proto::TowerFightRecordPair::MergeFrom(from.most_take_damage_avatar_pair());
  }
  if (from.has_highest_dps_avatr_pair()) {
    mutable_highest_dps_avatr_pair()->::proto::TowerFightRecordPair::MergeFrom(from.highest_dps_avatr_pair());
  }
  if (from.has_most_kill_avatar_pair()) {
    mutable_most_kill_avatar_pair()->::proto::TowerFightRecordPair::MergeFrom(from.most_kill_avatar_pair());
  }
}

void TowerMonthlyCombatRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerMonthlyCombatRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerMonthlyCombatRecord::CopyFrom(const TowerMonthlyCombatRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerMonthlyCombatRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerMonthlyCombatRecord::IsInitialized() const {
  return true;
}

void TowerMonthlyCombatRecord::Swap(TowerMonthlyCombatRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerMonthlyCombatRecord::InternalSwap(TowerMonthlyCombatRecord* other) {
  using std::swap;
  most_reveal_avatar_list_.InternalSwap(&other->most_reveal_avatar_list_);
  swap(most_cast_energy_skill_avatar_pair_, other->most_cast_energy_skill_avatar_pair_);
  swap(most_cast_normal_skill_avatar_pair_, other->most_cast_normal_skill_avatar_pair_);
  swap(most_take_damage_avatar_pair_, other->most_take_damage_avatar_pair_);
  swap(highest_dps_avatr_pair_, other->highest_dps_avatr_pair_);
  swap(most_kill_avatar_pair_, other->most_kill_avatar_pair_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerMonthlyCombatRecord::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerMonthlyCombatRecord

// .proto.TowerFightRecordPair most_kill_avatar_pair = 14;
bool TowerMonthlyCombatRecord::has_most_kill_avatar_pair() const {
  return this != internal_default_instance() && most_kill_avatar_pair_ != NULL;
}
void TowerMonthlyCombatRecord::clear_most_kill_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_kill_avatar_pair_ != NULL) delete most_kill_avatar_pair_;
  most_kill_avatar_pair_ = NULL;
}
const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_kill_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_kill_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_kill_avatar_pair() {
  
  if (most_kill_avatar_pair_ == NULL) {
    most_kill_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
  return most_kill_avatar_pair_;
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_kill_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_kill_avatar_pair_;
  most_kill_avatar_pair_ = NULL;
  return temp;
}
void TowerMonthlyCombatRecord::set_allocated_most_kill_avatar_pair(::proto::TowerFightRecordPair* most_kill_avatar_pair) {
  delete most_kill_avatar_pair_;
  most_kill_avatar_pair_ = most_kill_avatar_pair;
  if (most_kill_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_kill_avatar_pair)
}

// .proto.TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
bool TowerMonthlyCombatRecord::has_most_cast_normal_skill_avatar_pair() const {
  return this != internal_default_instance() && most_cast_normal_skill_avatar_pair_ != NULL;
}
void TowerMonthlyCombatRecord::clear_most_cast_normal_skill_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_cast_normal_skill_avatar_pair_ != NULL) delete most_cast_normal_skill_avatar_pair_;
  most_cast_normal_skill_avatar_pair_ = NULL;
}
const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_cast_normal_skill_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_cast_normal_skill_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_cast_normal_skill_avatar_pair() {
  
  if (most_cast_normal_skill_avatar_pair_ == NULL) {
    most_cast_normal_skill_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
  return most_cast_normal_skill_avatar_pair_;
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_cast_normal_skill_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_cast_normal_skill_avatar_pair_;
  most_cast_normal_skill_avatar_pair_ = NULL;
  return temp;
}
void TowerMonthlyCombatRecord::set_allocated_most_cast_normal_skill_avatar_pair(::proto::TowerFightRecordPair* most_cast_normal_skill_avatar_pair) {
  delete most_cast_normal_skill_avatar_pair_;
  most_cast_normal_skill_avatar_pair_ = most_cast_normal_skill_avatar_pair;
  if (most_cast_normal_skill_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_cast_normal_skill_avatar_pair)
}

// repeated .proto.TowerFightRecordPair most_reveal_avatar_list = 6;
int TowerMonthlyCombatRecord::most_reveal_avatar_list_size() const {
  return most_reveal_avatar_list_.size();
}
void TowerMonthlyCombatRecord::clear_most_reveal_avatar_list() {
  most_reveal_avatar_list_.Clear();
}
const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_reveal_avatar_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_.Get(index);
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_reveal_avatar_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_.Mutable(index);
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::add_most_reveal_avatar_list() {
  // @@protoc_insertion_point(field_add:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerFightRecordPair >*
TowerMonthlyCombatRecord::mutable_most_reveal_avatar_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return &most_reveal_avatar_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerFightRecordPair >&
TowerMonthlyCombatRecord::most_reveal_avatar_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerMonthlyCombatRecord.most_reveal_avatar_list)
  return most_reveal_avatar_list_;
}

// .proto.TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
bool TowerMonthlyCombatRecord::has_most_cast_energy_skill_avatar_pair() const {
  return this != internal_default_instance() && most_cast_energy_skill_avatar_pair_ != NULL;
}
void TowerMonthlyCombatRecord::clear_most_cast_energy_skill_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_cast_energy_skill_avatar_pair_ != NULL) delete most_cast_energy_skill_avatar_pair_;
  most_cast_energy_skill_avatar_pair_ = NULL;
}
const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_cast_energy_skill_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_cast_energy_skill_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_cast_energy_skill_avatar_pair() {
  
  if (most_cast_energy_skill_avatar_pair_ == NULL) {
    most_cast_energy_skill_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
  return most_cast_energy_skill_avatar_pair_;
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_cast_energy_skill_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_cast_energy_skill_avatar_pair_;
  most_cast_energy_skill_avatar_pair_ = NULL;
  return temp;
}
void TowerMonthlyCombatRecord::set_allocated_most_cast_energy_skill_avatar_pair(::proto::TowerFightRecordPair* most_cast_energy_skill_avatar_pair) {
  delete most_cast_energy_skill_avatar_pair_;
  most_cast_energy_skill_avatar_pair_ = most_cast_energy_skill_avatar_pair;
  if (most_cast_energy_skill_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_cast_energy_skill_avatar_pair)
}

// .proto.TowerFightRecordPair highest_dps_avatr_pair = 12;
bool TowerMonthlyCombatRecord::has_highest_dps_avatr_pair() const {
  return this != internal_default_instance() && highest_dps_avatr_pair_ != NULL;
}
void TowerMonthlyCombatRecord::clear_highest_dps_avatr_pair() {
  if (GetArenaNoVirtual() == NULL && highest_dps_avatr_pair_ != NULL) delete highest_dps_avatr_pair_;
  highest_dps_avatr_pair_ = NULL;
}
const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::highest_dps_avatr_pair() const {
  const ::proto::TowerFightRecordPair* p = highest_dps_avatr_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_highest_dps_avatr_pair() {
  
  if (highest_dps_avatr_pair_ == NULL) {
    highest_dps_avatr_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
  return highest_dps_avatr_pair_;
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_highest_dps_avatr_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
  
  ::proto::TowerFightRecordPair* temp = highest_dps_avatr_pair_;
  highest_dps_avatr_pair_ = NULL;
  return temp;
}
void TowerMonthlyCombatRecord::set_allocated_highest_dps_avatr_pair(::proto::TowerFightRecordPair* highest_dps_avatr_pair) {
  delete highest_dps_avatr_pair_;
  highest_dps_avatr_pair_ = highest_dps_avatr_pair;
  if (highest_dps_avatr_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.highest_dps_avatr_pair)
}

// .proto.TowerFightRecordPair most_take_damage_avatar_pair = 9;
bool TowerMonthlyCombatRecord::has_most_take_damage_avatar_pair() const {
  return this != internal_default_instance() && most_take_damage_avatar_pair_ != NULL;
}
void TowerMonthlyCombatRecord::clear_most_take_damage_avatar_pair() {
  if (GetArenaNoVirtual() == NULL && most_take_damage_avatar_pair_ != NULL) delete most_take_damage_avatar_pair_;
  most_take_damage_avatar_pair_ = NULL;
}
const ::proto::TowerFightRecordPair& TowerMonthlyCombatRecord::most_take_damage_avatar_pair() const {
  const ::proto::TowerFightRecordPair* p = most_take_damage_avatar_pair_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerFightRecordPair*>(
      &::proto::_TowerFightRecordPair_default_instance_);
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::mutable_most_take_damage_avatar_pair() {
  
  if (most_take_damage_avatar_pair_ == NULL) {
    most_take_damage_avatar_pair_ = new ::proto::TowerFightRecordPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
  return most_take_damage_avatar_pair_;
}
::proto::TowerFightRecordPair* TowerMonthlyCombatRecord::release_most_take_damage_avatar_pair() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
  
  ::proto::TowerFightRecordPair* temp = most_take_damage_avatar_pair_;
  most_take_damage_avatar_pair_ = NULL;
  return temp;
}
void TowerMonthlyCombatRecord::set_allocated_most_take_damage_avatar_pair(::proto::TowerFightRecordPair* most_take_damage_avatar_pair) {
  delete most_take_damage_avatar_pair_;
  most_take_damage_avatar_pair_ = most_take_damage_avatar_pair;
  if (most_take_damage_avatar_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyCombatRecord.most_take_damage_avatar_pair)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerMonthlyDetail::kMonthlyCombatRecordFieldNumber;
const int TowerMonthlyDetail::kMonthlyBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerMonthlyDetail::TowerMonthlyDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerMonthlyDetail)
}
TowerMonthlyDetail::TowerMonthlyDetail(const TowerMonthlyDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_monthly_combat_record()) {
    monthly_combat_record_ = new ::proto::TowerMonthlyCombatRecord(*from.monthly_combat_record_);
  } else {
    monthly_combat_record_ = NULL;
  }
  if (from.has_monthly_brief()) {
    monthly_brief_ = new ::proto::TowerMonthlyBrief(*from.monthly_brief_);
  } else {
    monthly_brief_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.TowerMonthlyDetail)
}

void TowerMonthlyDetail::SharedCtor() {
  ::memset(&monthly_combat_record_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monthly_brief_) -
      reinterpret_cast<char*>(&monthly_combat_record_)) + sizeof(monthly_brief_));
  _cached_size_ = 0;
}

TowerMonthlyDetail::~TowerMonthlyDetail() {
  // @@protoc_insertion_point(destructor:proto.TowerMonthlyDetail)
  SharedDtor();
}

void TowerMonthlyDetail::SharedDtor() {
  if (this != internal_default_instance()) delete monthly_combat_record_;
  if (this != internal_default_instance()) delete monthly_brief_;
}

void TowerMonthlyDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerMonthlyDetail::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerMonthlyDetail& TowerMonthlyDetail::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerMonthlyDetail* TowerMonthlyDetail::New(::google::protobuf::Arena* arena) const {
  TowerMonthlyDetail* n = new TowerMonthlyDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerMonthlyDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerMonthlyDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && monthly_combat_record_ != NULL) {
    delete monthly_combat_record_;
  }
  monthly_combat_record_ = NULL;
  if (GetArenaNoVirtual() == NULL && monthly_brief_ != NULL) {
    delete monthly_brief_;
  }
  monthly_brief_ = NULL;
  _internal_metadata_.Clear();
}

bool TowerMonthlyDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerMonthlyDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.TowerMonthlyCombatRecord monthly_combat_record = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_monthly_combat_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TowerMonthlyBrief monthly_brief = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_monthly_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerMonthlyDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerMonthlyDetail)
  return false;
#undef DO_
}

void TowerMonthlyDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerMonthlyDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TowerMonthlyCombatRecord monthly_combat_record = 2;
  if (this->has_monthly_combat_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->monthly_combat_record_, output);
  }

  // .proto.TowerMonthlyBrief monthly_brief = 12;
  if (this->has_monthly_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->monthly_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerMonthlyDetail)
}

::google::protobuf::uint8* TowerMonthlyDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerMonthlyDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.TowerMonthlyCombatRecord monthly_combat_record = 2;
  if (this->has_monthly_combat_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->monthly_combat_record_, deterministic, target);
  }

  // .proto.TowerMonthlyBrief monthly_brief = 12;
  if (this->has_monthly_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->monthly_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerMonthlyDetail)
  return target;
}

size_t TowerMonthlyDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerMonthlyDetail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.TowerMonthlyCombatRecord monthly_combat_record = 2;
  if (this->has_monthly_combat_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->monthly_combat_record_);
  }

  // .proto.TowerMonthlyBrief monthly_brief = 12;
  if (this->has_monthly_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->monthly_brief_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerMonthlyDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerMonthlyDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerMonthlyDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerMonthlyDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerMonthlyDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerMonthlyDetail)
    MergeFrom(*source);
  }
}

void TowerMonthlyDetail::MergeFrom(const TowerMonthlyDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerMonthlyDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_monthly_combat_record()) {
    mutable_monthly_combat_record()->::proto::TowerMonthlyCombatRecord::MergeFrom(from.monthly_combat_record());
  }
  if (from.has_monthly_brief()) {
    mutable_monthly_brief()->::proto::TowerMonthlyBrief::MergeFrom(from.monthly_brief());
  }
}

void TowerMonthlyDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerMonthlyDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerMonthlyDetail::CopyFrom(const TowerMonthlyDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerMonthlyDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerMonthlyDetail::IsInitialized() const {
  return true;
}

void TowerMonthlyDetail::Swap(TowerMonthlyDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerMonthlyDetail::InternalSwap(TowerMonthlyDetail* other) {
  using std::swap;
  swap(monthly_combat_record_, other->monthly_combat_record_);
  swap(monthly_brief_, other->monthly_brief_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerMonthlyDetail::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerMonthlyDetail

// .proto.TowerMonthlyCombatRecord monthly_combat_record = 2;
bool TowerMonthlyDetail::has_monthly_combat_record() const {
  return this != internal_default_instance() && monthly_combat_record_ != NULL;
}
void TowerMonthlyDetail::clear_monthly_combat_record() {
  if (GetArenaNoVirtual() == NULL && monthly_combat_record_ != NULL) delete monthly_combat_record_;
  monthly_combat_record_ = NULL;
}
const ::proto::TowerMonthlyCombatRecord& TowerMonthlyDetail::monthly_combat_record() const {
  const ::proto::TowerMonthlyCombatRecord* p = monthly_combat_record_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyDetail.monthly_combat_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyCombatRecord*>(
      &::proto::_TowerMonthlyCombatRecord_default_instance_);
}
::proto::TowerMonthlyCombatRecord* TowerMonthlyDetail::mutable_monthly_combat_record() {
  
  if (monthly_combat_record_ == NULL) {
    monthly_combat_record_ = new ::proto::TowerMonthlyCombatRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyDetail.monthly_combat_record)
  return monthly_combat_record_;
}
::proto::TowerMonthlyCombatRecord* TowerMonthlyDetail::release_monthly_combat_record() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyDetail.monthly_combat_record)
  
  ::proto::TowerMonthlyCombatRecord* temp = monthly_combat_record_;
  monthly_combat_record_ = NULL;
  return temp;
}
void TowerMonthlyDetail::set_allocated_monthly_combat_record(::proto::TowerMonthlyCombatRecord* monthly_combat_record) {
  delete monthly_combat_record_;
  monthly_combat_record_ = monthly_combat_record;
  if (monthly_combat_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyDetail.monthly_combat_record)
}

// .proto.TowerMonthlyBrief monthly_brief = 12;
bool TowerMonthlyDetail::has_monthly_brief() const {
  return this != internal_default_instance() && monthly_brief_ != NULL;
}
void TowerMonthlyDetail::clear_monthly_brief() {
  if (GetArenaNoVirtual() == NULL && monthly_brief_ != NULL) delete monthly_brief_;
  monthly_brief_ = NULL;
}
const ::proto::TowerMonthlyBrief& TowerMonthlyDetail::monthly_brief() const {
  const ::proto::TowerMonthlyBrief* p = monthly_brief_;
  // @@protoc_insertion_point(field_get:proto.TowerMonthlyDetail.monthly_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TowerMonthlyBrief*>(
      &::proto::_TowerMonthlyBrief_default_instance_);
}
::proto::TowerMonthlyBrief* TowerMonthlyDetail::mutable_monthly_brief() {
  
  if (monthly_brief_ == NULL) {
    monthly_brief_ = new ::proto::TowerMonthlyBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.TowerMonthlyDetail.monthly_brief)
  return monthly_brief_;
}
::proto::TowerMonthlyBrief* TowerMonthlyDetail::release_monthly_brief() {
  // @@protoc_insertion_point(field_release:proto.TowerMonthlyDetail.monthly_brief)
  
  ::proto::TowerMonthlyBrief* temp = monthly_brief_;
  monthly_brief_ = NULL;
  return temp;
}
void TowerMonthlyDetail::set_allocated_monthly_brief(::proto::TowerMonthlyBrief* monthly_brief) {
  delete monthly_brief_;
  monthly_brief_ = monthly_brief;
  if (monthly_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TowerMonthlyDetail.monthly_brief)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerRecordHandbookReq::TowerRecordHandbookReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerRecordHandbookReq)
}
TowerRecordHandbookReq::TowerRecordHandbookReq(const TowerRecordHandbookReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.TowerRecordHandbookReq)
}

void TowerRecordHandbookReq::SharedCtor() {
  _cached_size_ = 0;
}

TowerRecordHandbookReq::~TowerRecordHandbookReq() {
  // @@protoc_insertion_point(destructor:proto.TowerRecordHandbookReq)
  SharedDtor();
}

void TowerRecordHandbookReq::SharedDtor() {
}

void TowerRecordHandbookReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerRecordHandbookReq::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerRecordHandbookReq& TowerRecordHandbookReq::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerRecordHandbookReq* TowerRecordHandbookReq::New(::google::protobuf::Arena* arena) const {
  TowerRecordHandbookReq* n = new TowerRecordHandbookReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerRecordHandbookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerRecordHandbookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TowerRecordHandbookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerRecordHandbookReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerRecordHandbookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerRecordHandbookReq)
  return false;
#undef DO_
}

void TowerRecordHandbookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerRecordHandbookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerRecordHandbookReq)
}

::google::protobuf::uint8* TowerRecordHandbookReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerRecordHandbookReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerRecordHandbookReq)
  return target;
}

size_t TowerRecordHandbookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerRecordHandbookReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerRecordHandbookReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerRecordHandbookReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerRecordHandbookReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerRecordHandbookReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerRecordHandbookReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerRecordHandbookReq)
    MergeFrom(*source);
  }
}

void TowerRecordHandbookReq::MergeFrom(const TowerRecordHandbookReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerRecordHandbookReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TowerRecordHandbookReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerRecordHandbookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerRecordHandbookReq::CopyFrom(const TowerRecordHandbookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerRecordHandbookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerRecordHandbookReq::IsInitialized() const {
  return true;
}

void TowerRecordHandbookReq::Swap(TowerRecordHandbookReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerRecordHandbookReq::InternalSwap(TowerRecordHandbookReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerRecordHandbookReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerRecordHandbookReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TowerRecordHandbookRsp::kRetcodeFieldNumber;
const int TowerRecordHandbookRsp::kMonthlyDetailListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TowerRecordHandbookRsp::TowerRecordHandbookRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TowerRecordHandbookRsp)
}
TowerRecordHandbookRsp::TowerRecordHandbookRsp(const TowerRecordHandbookRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monthly_detail_list_(from.monthly_detail_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.TowerRecordHandbookRsp)
}

void TowerRecordHandbookRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TowerRecordHandbookRsp::~TowerRecordHandbookRsp() {
  // @@protoc_insertion_point(destructor:proto.TowerRecordHandbookRsp)
  SharedDtor();
}

void TowerRecordHandbookRsp::SharedDtor() {
}

void TowerRecordHandbookRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerRecordHandbookRsp::descriptor() {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TowerRecordHandbookRsp& TowerRecordHandbookRsp::default_instance() {
  protobuf_cmd_2fcmd_5ftower_2eproto::InitDefaults();
  return *internal_default_instance();
}

TowerRecordHandbookRsp* TowerRecordHandbookRsp::New(::google::protobuf::Arena* arena) const {
  TowerRecordHandbookRsp* n = new TowerRecordHandbookRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TowerRecordHandbookRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TowerRecordHandbookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monthly_detail_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool TowerRecordHandbookRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TowerRecordHandbookRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.TowerMonthlyDetail monthly_detail_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_monthly_detail_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TowerRecordHandbookRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TowerRecordHandbookRsp)
  return false;
#undef DO_
}

void TowerRecordHandbookRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TowerRecordHandbookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // repeated .proto.TowerMonthlyDetail monthly_detail_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monthly_detail_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->monthly_detail_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TowerRecordHandbookRsp)
}

::google::protobuf::uint8* TowerRecordHandbookRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TowerRecordHandbookRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // repeated .proto.TowerMonthlyDetail monthly_detail_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monthly_detail_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->monthly_detail_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TowerRecordHandbookRsp)
  return target;
}

size_t TowerRecordHandbookRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TowerRecordHandbookRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TowerMonthlyDetail monthly_detail_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->monthly_detail_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->monthly_detail_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerRecordHandbookRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TowerRecordHandbookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const TowerRecordHandbookRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TowerRecordHandbookRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TowerRecordHandbookRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TowerRecordHandbookRsp)
    MergeFrom(*source);
  }
}

void TowerRecordHandbookRsp::MergeFrom(const TowerRecordHandbookRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TowerRecordHandbookRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monthly_detail_list_.MergeFrom(from.monthly_detail_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TowerRecordHandbookRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TowerRecordHandbookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerRecordHandbookRsp::CopyFrom(const TowerRecordHandbookRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TowerRecordHandbookRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerRecordHandbookRsp::IsInitialized() const {
  return true;
}

void TowerRecordHandbookRsp::Swap(TowerRecordHandbookRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TowerRecordHandbookRsp::InternalSwap(TowerRecordHandbookRsp* other) {
  using std::swap;
  monthly_detail_list_.InternalSwap(&other->monthly_detail_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TowerRecordHandbookRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ftower_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ftower_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TowerRecordHandbookRsp

// int32 retcode = 7;
void TowerRecordHandbookRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TowerRecordHandbookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TowerRecordHandbookRsp.retcode)
  return retcode_;
}
void TowerRecordHandbookRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TowerRecordHandbookRsp.retcode)
}

// repeated .proto.TowerMonthlyDetail monthly_detail_list = 14;
int TowerRecordHandbookRsp::monthly_detail_list_size() const {
  return monthly_detail_list_.size();
}
void TowerRecordHandbookRsp::clear_monthly_detail_list() {
  monthly_detail_list_.Clear();
}
const ::proto::TowerMonthlyDetail& TowerRecordHandbookRsp::monthly_detail_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_.Get(index);
}
::proto::TowerMonthlyDetail* TowerRecordHandbookRsp::mutable_monthly_detail_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_.Mutable(index);
}
::proto::TowerMonthlyDetail* TowerRecordHandbookRsp::add_monthly_detail_list() {
  // @@protoc_insertion_point(field_add:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TowerMonthlyDetail >*
TowerRecordHandbookRsp::mutable_monthly_detail_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return &monthly_detail_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TowerMonthlyDetail >&
TowerRecordHandbookRsp::monthly_detail_list() const {
  // @@protoc_insertion_point(field_list:proto.TowerRecordHandbookRsp.monthly_detail_list)
  return monthly_detail_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
